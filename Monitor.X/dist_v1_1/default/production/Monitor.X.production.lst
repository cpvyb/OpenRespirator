

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul  8 13:01:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1,inline
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=2
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=2
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1,group=2
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=2
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=2
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=2
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=2
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=2
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=2
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,group=2
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1
   259                           	psect	text234,global,reloc=2,class=CODE,delta=1
   260                           	psect	text235,global,reloc=2,class=CODE,delta=1
   261                           	psect	text236,global,reloc=2,class=CODE,delta=1
   262                           	psect	text237,global,reloc=2,class=CODE,delta=1
   263                           	psect	text238,global,reloc=2,class=CODE,delta=1
   264                           	psect	text239,global,reloc=2,class=CODE,delta=1
   265                           	psect	text240,global,reloc=2,class=CODE,delta=1
   266                           	psect	text241,global,reloc=2,class=CODE,delta=1
   267                           	psect	text242,global,reloc=2,class=CODE,delta=1
   268                           	psect	text243,global,reloc=2,class=CODE,delta=1
   269                           	psect	text244,global,reloc=2,class=CODE,delta=1
   270                           	psect	text245,global,reloc=2,class=CODE,delta=1
   271                           	psect	text246,global,reloc=2,class=CODE,delta=1
   272                           	psect	text247,global,reloc=2,class=CODE,delta=1
   273                           	psect	text248,global,reloc=2,class=CODE,delta=1
   274                           	psect	text249,global,reloc=2,class=CODE,delta=1
   275                           	psect	text250,global,reloc=2,class=CODE,delta=1
   276                           	psect	text251,global,reloc=2,class=CODE,delta=1
   277                           	psect	text252,global,reloc=2,class=CODE,delta=1
   278                           	psect	text253,global,reloc=2,class=CODE,delta=1,group=1
   279                           	psect	text254,global,reloc=2,class=CODE,delta=1,group=1
   280                           	psect	text255,global,reloc=2,class=CODE,delta=1
   281                           	psect	text256,global,reloc=2,class=CODE,delta=1
   282                           	psect	text257,global,reloc=2,class=CODE,delta=1
   283                           	psect	text258,global,reloc=2,class=CODE,delta=1
   284                           	psect	text259,global,reloc=2,class=CODE,delta=1
   285                           	psect	text260,global,reloc=2,class=CODE,delta=1
   286                           	psect	text261,global,reloc=2,class=CODE,delta=1
   287                           	psect	text262,global,reloc=2,class=CODE,delta=1
   288                           	psect	text263,global,reloc=2,class=CODE,delta=1
   289                           	psect	text264,global,reloc=2,class=CODE,delta=1
   290                           	psect	text265,global,reloc=2,class=CODE,delta=1
   291                           	psect	text266,global,reloc=2,class=CODE,delta=1
   292                           	psect	text267,global,reloc=2,class=CODE,delta=1
   293                           	psect	text268,global,reloc=2,class=CODE,delta=1
   294                           	psect	text269,global,reloc=2,class=CODE,delta=1
   295                           	psect	text270,global,reloc=2,class=CODE,delta=1
   296                           	psect	text271,global,reloc=2,class=CODE,delta=1
   297                           	psect	text272,global,reloc=2,class=CODE,delta=1
   298                           	psect	text273,global,reloc=2,class=CODE,delta=1
   299                           	psect	text274,global,reloc=2,class=CODE,delta=1
   300                           	psect	text275,global,reloc=2,class=CODE,delta=1
   301                           	psect	text276,global,reloc=2,class=CODE,delta=1
   302                           	psect	text277,global,reloc=2,class=CODE,delta=1
   303                           	psect	text278,global,reloc=2,class=CODE,delta=1
   304                           	psect	text279,global,reloc=2,class=CODE,delta=1
   305                           	psect	text280,global,reloc=2,class=CODE,delta=1
   306                           	psect	text281,global,reloc=2,class=CODE,delta=1
   307                           	psect	text282,global,reloc=2,class=CODE,delta=1
   308                           	psect	text283,global,reloc=2,class=CODE,delta=1
   309                           	psect	text284,global,reloc=2,class=CODE,delta=1
   310                           	psect	text285,global,reloc=2,class=CODE,delta=1
   311                           	psect	text286,global,reloc=2,class=CODE,delta=1
   312                           	psect	text287,global,reloc=2,class=CODE,delta=1
   313                           	psect	text288,global,reloc=2,class=CODE,delta=1
   314                           	psect	text289,global,reloc=2,class=CODE,delta=1
   315                           	psect	text290,global,reloc=2,class=CODE,delta=1
   316                           	psect	text291,global,reloc=2,class=CODE,delta=1
   317                           	psect	text292,global,reloc=2,class=CODE,delta=1
   318                           	psect	text293,global,reloc=2,class=CODE,delta=1
   319                           	psect	text294,global,reloc=2,class=CODE,delta=1
   320                           	psect	text295,global,reloc=2,class=CODE,delta=1
   321                           	psect	text296,global,reloc=2,class=CODE,delta=1
   322                           	psect	text297,global,reloc=2,class=CODE,delta=1
   323                           	psect	text298,global,reloc=2,class=CODE,delta=1
   324                           	psect	text299,global,reloc=2,class=CODE,delta=1
   325                           	psect	text300,global,reloc=2,class=CODE,delta=1
   326                           	psect	text301,global,reloc=2,class=CODE,delta=1
   327                           	psect	text302,global,reloc=2,class=CODE,delta=1
   328                           	psect	text303,global,reloc=2,class=CODE,delta=1
   329                           	psect	text304,global,reloc=2,class=CODE,delta=1
   330                           	psect	text305,global,reloc=2,class=CODE,delta=1
   331                           	psect	text306,global,reloc=2,class=CODE,delta=1
   332                           	psect	text307,global,reloc=2,class=CODE,delta=1
   333                           	psect	text308,global,reloc=2,class=CODE,delta=1
   334                           	psect	text309,global,reloc=2,class=CODE,delta=1
   335                           	psect	text310,global,reloc=2,class=CODE,delta=1
   336                           	psect	text311,global,reloc=2,class=CODE,delta=1
   337                           	psect	text312,global,reloc=2,class=CODE,delta=1
   338                           	psect	text313,global,reloc=2,class=CODE,delta=1
   339                           	psect	text314,global,reloc=2,class=CODE,delta=1
   340                           	psect	text315,global,reloc=2,class=CODE,delta=1,inline
   341                           	psect	text316,global,reloc=2,class=CODE,delta=1
   342                           	psect	text317,global,reloc=2,class=CODE,delta=1
   343                           	psect	text318,global,reloc=2,class=CODE,delta=1
   344                           	psect	text319,global,reloc=2,class=CODE,delta=1
   345                           	psect	text320,global,reloc=2,class=CODE,delta=1
   346                           	psect	text321,global,reloc=2,class=CODE,delta=1
   347                           	psect	text322,global,reloc=2,class=CODE,delta=1
   348                           	psect	text323,global,reloc=2,class=CODE,delta=1
   349                           	psect	text324,global,reloc=2,class=CODE,delta=1
   350                           	psect	text325,global,reloc=2,class=CODE,delta=1
   351                           	psect	text326,global,reloc=2,class=CODE,delta=1
   352                           	psect	text327,global,reloc=2,class=CODE,delta=1
   353                           	psect	text328,global,reloc=2,class=CODE,delta=1
   354                           	psect	text329,global,reloc=2,class=CODE,delta=1
   355                           	psect	text330,global,reloc=2,class=CODE,delta=1
   356                           	psect	text331,global,reloc=2,class=CODE,delta=1
   357                           	psect	text332,global,reloc=2,class=CODE,delta=1
   358                           	psect	text333,global,reloc=2,class=CODE,delta=1
   359                           	psect	text334,global,reloc=2,class=CODE,delta=1
   360                           	psect	text335,global,reloc=2,class=CODE,delta=1
   361                           	psect	text336,global,reloc=2,class=CODE,delta=1,inline
   362                           	psect	text337,global,reloc=2,class=CODE,delta=1,inline
   363                           	psect	text338,global,reloc=2,class=CODE,delta=1
   364                           	psect	text339,global,reloc=2,class=CODE,delta=1
   365                           	psect	text340,global,reloc=2,class=CODE,delta=1
   366                           	psect	text341,global,reloc=2,class=CODE,delta=1
   367                           	psect	text342,global,reloc=2,class=CODE,delta=1,inline
   368                           	psect	text343,global,reloc=2,class=CODE,delta=1,inline
   369                           	psect	text344,global,reloc=2,class=CODE,delta=1,inline
   370                           	psect	text345,global,reloc=2,class=CODE,delta=1,inline
   371                           	psect	text346,global,reloc=2,class=CODE,delta=1
   372                           	psect	text347,global,reloc=2,class=CODE,delta=1
   373                           	psect	text348,global,reloc=2,class=CODE,delta=1,inline
   374                           	psect	text349,global,reloc=2,class=CODE,delta=1
   375                           	psect	text350,global,reloc=2,class=CODE,delta=1
   376                           	psect	text351,global,reloc=2,class=CODE,delta=1
   377                           	psect	text352,global,reloc=2,class=CODE,delta=1
   378                           	psect	text353,global,reloc=2,class=CODE,delta=1
   379                           	psect	text354,global,reloc=2,class=CODE,delta=1
   380                           	psect	text355,global,reloc=2,class=CODE,delta=1
   381                           	psect	text356,global,reloc=2,class=CODE,delta=1
   382                           	psect	text357,global,reloc=2,class=CODE,delta=1
   383                           	psect	text358,global,reloc=2,class=CODE,delta=1
   384                           	psect	text359,global,reloc=2,class=CODE,delta=1
   385                           	psect	text360,global,reloc=2,class=CODE,delta=1
   386                           	psect	text361,global,reloc=2,class=CODE,delta=1
   387                           	psect	text362,global,reloc=2,class=CODE,delta=1
   388                           	psect	text363,global,reloc=2,class=CODE,delta=1
   389                           	psect	text364,global,reloc=2,class=CODE,delta=1
   390                           	psect	text365,global,reloc=2,class=CODE,delta=1
   391                           	psect	text366,global,reloc=2,class=CODE,delta=1
   392                           	psect	text367,global,reloc=2,class=CODE,delta=1
   393                           	psect	text368,global,reloc=2,class=CODE,delta=1
   394                           	psect	text369,global,reloc=2,class=CODE,delta=1
   395                           	psect	text370,global,reloc=2,class=CODE,delta=1
   396                           	psect	text371,global,reloc=2,class=CODE,delta=1
   397                           	psect	text372,global,reloc=2,class=CODE,delta=1
   398                           	psect	text373,global,reloc=2,class=CODE,delta=1
   399                           	psect	text374,global,reloc=2,class=CODE,delta=1
   400                           	psect	text375,global,reloc=2,class=CODE,delta=1
   401                           	psect	text376,global,reloc=2,class=CODE,delta=1
   402                           	psect	text377,global,reloc=2,class=CODE,delta=1
   403                           	psect	text378,global,reloc=2,class=CODE,delta=1
   404                           	psect	text379,global,reloc=2,class=CODE,delta=1
   405                           	psect	text380,global,reloc=2,class=CODE,delta=1
   406                           	psect	text381,global,reloc=2,class=CODE,delta=1
   407                           	psect	text382,global,reloc=2,class=CODE,delta=1
   408                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   409                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   410                           	psect	text383,global,reloc=2,class=CODE,delta=1
   411                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   412  0000                     
   413                           ; Version 2.10
   414                           ; Generated 31/07/2019 GMT
   415                           ; 
   416                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   417                           ; All rights reserved.
   418                           ; 
   419                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   420                           ; 
   421                           ; Redistribution and use in source and binary forms, with or without modification, are
   422                           ; permitted provided that the following conditions are met:
   423                           ; 
   424                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   425                           ;        conditions and the following disclaimer.
   426                           ; 
   427                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   428                           ;        of conditions and the following disclaimer in the documentation and/or other
   429                           ;        materials provided with the distribution.
   430                           ; 
   431                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   432                           ;        software without specific prior written permission.
   433                           ; 
   434                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   435                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   436                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   437                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   438                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   439                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   440                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   441                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   442                           ; 
   443                           ; 
   444                           ; Code-generator required, PIC18F46K42 Definitions
   445                           ; 
   446                           ; SFR Addresses
   447  0000                     
   448 ;; Function _I2C2_SlaveDefWrInterruptHandler is unused but had its address taken
   449  0000                     
   450 ;; Function _I2C2_SlaveDefAddrInterruptHandler is unused but had its address taken
   451  0000                     
   452 ;; Function _I2C2_SlaveDefWrColInterruptHandler is unused but had its address taken
   453  0000                     
   454 ;; Function _I2C2_SlaveDefBusColInterruptHandler is unused but had its address taken
   455  0000                     
   456                           	psect	idataBIGRAM
   457  00495C                     __pidataBIGRAM:
   458                           	opt callstack 0
   459                           
   460                           ;initializer for _alarmData
   461  00495C  42                 	db	66
   462  00495D  61                 	db	97
   463  00495E  74                 	db	116
   464  00495F  74                 	db	116
   465  004960  65                 	db	101
   466  004961  72                 	db	114
   467  004962  79                 	db	121
   468  004963  20                 	db	32
   469  004964  46                 	db	70
   470  004965  61                 	db	97
   471  004966  69                 	db	105
   472  004967  6C                 	db	108
   473  004968  20                 	db	32
   474  004969  20                 	db	32
   475  00496A  00                 	db	0
   476  00496B  00                 	db	0
   477  00496C  00                 	db	0
   478  00496D  0004               	dw	4
   479  00496F  AC                 	db	low _BatteryFailAlarm
   480  004970  69                 	db	high _BatteryFailAlarm
   481  004971  4D                 	db	77
   482  004972  6F                 	db	111
   483  004973  6E                 	db	110
   484  004974  69                 	db	105
   485  004975  74                 	db	116
   486  004976  6F                 	db	111
   487  004977  72                 	db	114
   488  004978  20                 	db	32
   489  004979  46                 	db	70
   490  00497A  61                 	db	97
   491  00497B  69                 	db	105
   492  00497C  6C                 	db	108
   493  00497D  20                 	db	32
   494  00497E  20                 	db	32
   495  00497F  00                 	db	0
   496  004980  00                 	db	0
   497  004981  00                 	db	0
   498  004982  0004               	dw	4
   499  004984  90                 	db	low _MonitorFailAlarm
   500  004985  6A                 	db	high _MonitorFailAlarm
   501  004986  43                 	db	67
   502  004987  6F                 	db	111
   503  004988  6E                 	db	110
   504  004989  74                 	db	116
   505  00498A  72                 	db	114
   506  00498B  6F                 	db	111
   507  00498C  6C                 	db	108
   508  00498D  20                 	db	32
   509  00498E  46                 	db	70
   510  00498F  61                 	db	97
   511  004990  69                 	db	105
   512  004991  6C                 	db	108
   513  004992  20                 	db	32
   514  004993  20                 	db	32
   515  004994  00                 	db	0
   516  004995  00                 	db	0
   517  004996  00                 	db	0
   518  004997  0004               	dw	4
   519  004999  AA                 	db	low _ControlFailAlarm
   520  00499A  A0                 	db	high _ControlFailAlarm
   521  00499B  56                 	db	86
   522  00499C  65                 	db	101
   523  00499D  72                 	db	114
   524  00499E  79                 	db	121
   525  00499F  20                 	db	32
   526  0049A0  48                 	db	72
   527  0049A1  69                 	db	105
   528  0049A2  67                 	db	103
   529  0049A3  68                 	db	104
   530  0049A4  20                 	db	32
   531  0049A5  50                 	db	80
   532  0049A6  72                 	db	114
   533  0049A7  65                 	db	101
   534  0049A8  73                 	db	115
   535  0049A9  00                 	db	0
   536  0049AA  00                 	db	0
   537  0049AB  00                 	db	0
   538  0049AC  0004               	dw	4
   539  0049AE  7C                 	db	low _VeryHighPressureAlarmHigh
   540  0049AF  A6                 	db	high _VeryHighPressureAlarmHigh
   541  0049B0  48                 	db	72
   542  0049B1  69                 	db	105
   543  0049B2  67                 	db	103
   544  0049B3  68                 	db	104
   545  0049B4  20                 	db	32
   546  0049B5  50                 	db	80
   547  0049B6  72                 	db	114
   548  0049B7  65                 	db	101
   549  0049B8  73                 	db	115
   550  0049B9  73                 	db	115
   551  0049BA  75                 	db	117
   552  0049BB  72                 	db	114
   553  0049BC  65                 	db	101
   554  0049BD  20                 	db	32
   555  0049BE  00                 	db	0
   556  0049BF  00                 	db	0
   557  0049C0  00                 	db	0
   558  0049C1  0004               	dw	4
   559  0049C3  74                 	db	low _HighPressureAlarmHigh
   560  0049C4  A6                 	db	high _HighPressureAlarmHigh
   561  0049C5  48                 	db	72
   562  0049C6  69                 	db	105
   563  0049C7  67                 	db	103
   564  0049C8  68                 	db	104
   565  0049C9  20                 	db	32
   566  0049CA  50                 	db	80
   567  0049CB  72                 	db	114
   568  0049CC  65                 	db	101
   569  0049CD  73                 	db	115
   570  0049CE  73                 	db	115
   571  0049CF  75                 	db	117
   572  0049D0  72                 	db	114
   573  0049D1  65                 	db	101
   574  0049D2  20                 	db	32
   575  0049D3  00                 	db	0
   576  0049D4  00                 	db	0
   577  0049D5  00                 	db	0
   578  0049D6  0001               	dw	1
   579  0049D8  52                 	db	low _HighPressureAlarmLow
   580  0049D9  81                 	db	high _HighPressureAlarmLow
   581  0049DA  43                 	db	67
   582  0049DB  69                 	db	105
   583  0049DC  72                 	db	114
   584  0049DD  63                 	db	99
   585  0049DE  75                 	db	117
   586  0049DF  69                 	db	105
   587  0049E0  74                 	db	116
   588  0049E1  20                 	db	32
   589  0049E2  46                 	db	70
   590  0049E3  61                 	db	97
   591  0049E4  69                 	db	105
   592  0049E5  6C                 	db	108
   593  0049E6  20                 	db	32
   594  0049E7  20                 	db	32
   595  0049E8  00                 	db	0
   596  0049E9  00                 	db	0
   597  0049EA  00                 	db	0
   598  0049EB  0004               	dw	4
   599  0049ED  70                 	db	low _CircuitFailureAlarm
   600  0049EE  A6                 	db	high _CircuitFailureAlarm
   601  0049EF  47                 	db	71
   602  0049F0  61                 	db	97
   603  0049F1  73                 	db	115
   604  0049F2  20                 	db	32
   605  0049F3  46                 	db	70
   606  0049F4  61                 	db	97
   607  0049F5  69                 	db	105
   608  0049F6  6C                 	db	108
   609  0049F7  75                 	db	117
   610  0049F8  72                 	db	114
   611  0049F9  65                 	db	101
   612  0049FA  20                 	db	32
   613  0049FB  20                 	db	32
   614  0049FC  20                 	db	32
   615  0049FD  00                 	db	0
   616  0049FE  00                 	db	0
   617  0049FF  00                 	db	0
   618  004A00  0004               	dw	4
   619  004A02  78                 	db	low _GasFailureAlarm
   620  004A03  A6                 	db	high _GasFailureAlarm
   621  004A04  42                 	db	66
   622  004A05  61                 	db	97
   623  004A06  74                 	db	116
   624  004A07  74                 	db	116
   625  004A08  65                 	db	101
   626  004A09  72                 	db	114
   627  004A0A  79                 	db	121
   628  004A0B  20                 	db	32
   629  004A0C  4C                 	db	76
   630  004A0D  6F                 	db	111
   631  004A0E  77                 	db	119
   632  004A0F  20                 	db	32
   633  004A10  20                 	db	32
   634  004A11  20                 	db	32
   635  004A12  00                 	db	0
   636  004A13  00                 	db	0
   637  004A14  00                 	db	0
   638  004A15  0002               	dw	2
   639  004A17  6C                 	db	low _BaterryLowAlarmMed
   640  004A18  A6                 	db	high _BaterryLowAlarmMed
   641  004A19  42                 	db	66
   642  004A1A  61                 	db	97
   643  004A1B  74                 	db	116
   644  004A1C  74                 	db	116
   645  004A1D  65                 	db	101
   646  004A1E  72                 	db	114
   647  004A1F  79                 	db	121
   648  004A20  20                 	db	32
   649  004A21  4C                 	db	76
   650  004A22  6F                 	db	111
   651  004A23  77                 	db	119
   652  004A24  20                 	db	32
   653  004A25  20                 	db	32
   654  004A26  20                 	db	32
   655  004A27  00                 	db	0
   656  004A28  00                 	db	0
   657  004A29  00                 	db	0
   658  004A2A  0004               	dw	4
   659  004A2C  68                 	db	low _BaterryLowAlarmHigh
   660  004A2D  A6                 	db	high _BaterryLowAlarmHigh
   661  004A2E  45                 	db	69
   662  004A2F  50                 	db	80
   663  004A30  20                 	db	32
   664  004A31  42                 	db	66
   665  004A32  65                 	db	101
   666  004A33  6C                 	db	108
   667  004A34  6F                 	db	111
   668  004A35  77                 	db	119
   669  004A36  20                 	db	32
   670  004A37  53                 	db	83
   671  004A38  65                 	db	101
   672  004A39  74                 	db	116
   673  004A3A  20                 	db	32
   674  004A3B  20                 	db	32
   675  004A3C  00                 	db	0
   676  004A3D  00                 	db	0
   677  004A3E  00                 	db	0
   678  004A3F  0002               	dw	2
   679  004A41  70                 	db	low _EPBelowSetAlarm
   680  004A42  9F                 	db	high _EPBelowSetAlarm
   681  004A43  45                 	db	69
   682  004A44  50                 	db	80
   683  004A45  20                 	db	32
   684  004A46  41                 	db	65
   685  004A47  62                 	db	98
   686  004A48  6F                 	db	111
   687  004A49  76                 	db	118
   688  004A4A  65                 	db	101
   689  004A4B  20                 	db	32
   690  004A4C  53                 	db	83
   691  004A4D  65                 	db	101
   692  004A4E  74                 	db	116
   693  004A4F  20                 	db	32
   694  004A50  20                 	db	32
   695  004A51  00                 	db	0
   696  004A52  00                 	db	0
   697  004A53  00                 	db	0
   698  004A54  0002               	dw	2
   699  004A56  56                 	db	low _EPAboveSetAlarm
   700  004A57  9F                 	db	high _EPAboveSetAlarm
   701  004A58  49                 	db	73
   702  004A59  50                 	db	80
   703  004A5A  20                 	db	32
   704  004A5B  42                 	db	66
   705  004A5C  65                 	db	101
   706  004A5D  6C                 	db	108
   707  004A5E  6F                 	db	111
   708  004A5F  77                 	db	119
   709  004A60  20                 	db	32
   710  004A61  53                 	db	83
   711  004A62  65                 	db	101
   712  004A63  74                 	db	116
   713  004A64  20                 	db	32
   714  004A65  20                 	db	32
   715  004A66  00                 	db	0
   716  004A67  00                 	db	0
   717  004A68  00                 	db	0
   718  004A69  0002               	dw	2
   719  004A6B  3C                 	db	low _IPBelowSetAlarm
   720  004A6C  9F                 	db	high _IPBelowSetAlarm
   721  004A6D  49                 	db	73
   722  004A6E  50                 	db	80
   723  004A6F  20                 	db	32
   724  004A70  41                 	db	65
   725  004A71  62                 	db	98
   726  004A72  6F                 	db	111
   727  004A73  76                 	db	118
   728  004A74  65                 	db	101
   729  004A75  20                 	db	32
   730  004A76  53                 	db	83
   731  004A77  65                 	db	101
   732  004A78  74                 	db	116
   733  004A79  20                 	db	32
   734  004A7A  20                 	db	32
   735  004A7B  00                 	db	0
   736  004A7C  00                 	db	0
   737  004A7D  00                 	db	0
   738  004A7E  0002               	dw	2
   739  004A80  22                 	db	low _IPAboveSetAlarm
   740  004A81  9F                 	db	high _IPAboveSetAlarm
   741  004A82  54                 	db	84
   742  004A83  64                 	db	100
   743  004A84  69                 	db	105
   744  004A85  20                 	db	32
   745  004A86  74                 	db	116
   746  004A87  6F                 	db	111
   747  004A88  6F                 	db	111
   748  004A89  20                 	db	32
   749  004A8A  6C                 	db	108
   750  004A8B  6F                 	db	111
   751  004A8C  6E                 	db	110
   752  004A8D  67                 	db	103
   753  004A8E  20                 	db	32
   754  004A8F  20                 	db	32
   755  004A90  00                 	db	0
   756  004A91  00                 	db	0
   757  004A92  00                 	db	0
   758  004A93  0002               	dw	2
   759  004A95  64                 	db	low _TdiTooLongAlarm
   760  004A96  A6                 	db	high _TdiTooLongAlarm
   761  004A97  54                 	db	84
   762  004A98  64                 	db	100
   763  004A99  65                 	db	101
   764  004A9A  20                 	db	32
   765  004A9B  74                 	db	116
   766  004A9C  6F                 	db	111
   767  004A9D  6F                 	db	111
   768  004A9E  20                 	db	32
   769  004A9F  6C                 	db	108
   770  004AA0  6F                 	db	111
   771  004AA1  6E                 	db	110
   772  004AA2  67                 	db	103
   773  004AA3  20                 	db	32
   774  004AA4  20                 	db	32
   775  004AA5  00                 	db	0
   776  004AA6  00                 	db	0
   777  004AA7  00                 	db	0
   778  004AA8  0002               	dw	2
   779  004AAA  60                 	db	low _TdeTooLongAlarm
   780  004AAB  A6                 	db	high _TdeTooLongAlarm
   781  004AAC  4F                 	db	79
   782  004AAD  76                 	db	118
   783  004AAE  65                 	db	101
   784  004AAF  72                 	db	114
   785  004AB0  20                 	db	32
   786  004AB1  4D                 	db	77
   787  004AB2  61                 	db	97
   788  004AB3  78                 	db	120
   789  004AB4  20                 	db	32
   790  004AB5  56                 	db	86
   791  004AB6  6F                 	db	111
   792  004AB7  6C                 	db	108
   793  004AB8  20                 	db	32
   794  004AB9  20                 	db	32
   795  004ABA  00                 	db	0
   796  004ABB  00                 	db	0
   797  004ABC  00                 	db	0
   798  004ABD  0002               	dw	2
   799  004ABF  5C                 	db	low _VAboveMaxAlarm
   800  004AC0  A6                 	db	high _VAboveMaxAlarm
   801  004AC1  42                 	db	66
   802  004AC2  65                 	db	101
   803  004AC3  6C                 	db	108
   804  004AC4  6F                 	db	111
   805  004AC5  77                 	db	119
   806  004AC6  20                 	db	32
   807  004AC7  4D                 	db	77
   808  004AC8  69                 	db	105
   809  004AC9  6E                 	db	110
   810  004ACA  20                 	db	32
   811  004ACB  56                 	db	86
   812  004ACC  6F                 	db	111
   813  004ACD  6C                 	db	108
   814  004ACE  20                 	db	32
   815  004ACF  00                 	db	0
   816  004AD0  00                 	db	0
   817  004AD1  00                 	db	0
   818  004AD2  0002               	dw	2
   819  004AD4  58                 	db	low _VBelowMinAlarm
   820  004AD5  A6                 	db	high _VBelowMinAlarm
   821  004AD6  4E                 	db	78
   822  004AD7  6F                 	db	111
   823  004AD8  20                 	db	32
   824  004AD9  50                 	db	80
   825  004ADA  6F                 	db	111
   826  004ADB  77                 	db	119
   827  004ADC  65                 	db	101
   828  004ADD  72                 	db	114
   829  004ADE  20                 	db	32
   830  004ADF  53                 	db	83
   831  004AE0  75                 	db	117
   832  004AE1  70                 	db	112
   833  004AE2  70                 	db	112
   834  004AE3  6C                 	db	108
   835  004AE4  00                 	db	0
   836  004AE5  00                 	db	0
   837  004AE6  00                 	db	0
   838  004AE7  0001               	dw	1
   839  004AE9  54                 	db	low _NoPowerSupplyAlarm
   840  004AEA  A6                 	db	high _NoPowerSupplyAlarm
   841                           
   842                           	psect	idataBANK1
   843  00A634                     __pidataBANK1:
   844                           	opt callstack 0
   845                           
   846                           ;initializer for _monitorSV1
   847  00A634  01                 	db	1
   848                           
   849                           ;initializer for _controlSV1
   850  00A635  01                 	db	1
   851                           
   852                           ;initializer for _batterySV1
   853  00A636  01                 	db	1
   854                           
   855                           ;initializer for _veryHighSV1
   856  00A637  01                 	db	1
   857                           
   858                           	psect	idataBANK2
   859  009ECE                     __pidataBANK2:
   860                           	opt callstack 0
   861                           
   862                           ;initializer for _adcChannels
   863  009ECE  04                 	db	4
   864  009ECF  00                 	db	0
   865  009ED0  0000               	dw	0
   866  009ED2  00                 	db	0
   867  009ED3  02                 	db	2
   868  009ED4  00                 	db	0
   869  009ED5  0000               	dw	0
   870  009ED7  03                 	db	3
   871  009ED8  00                 	db	0
   872  009ED9  00                 	db	0
   873  009EDA  0000               	dw	0
   874  009EDC  00                 	db	0
   875  009EDD  05                 	db	5
   876  009EDE  00                 	db	0
   877  009EDF  0000               	dw	0
   878  009EE1  03                 	db	3
   879                           
   880                           ;initializer for stoa@F1144
   881  009EE2  28                 	db	40
   882  009EE3  6E                 	db	110
   883  009EE4  75                 	db	117
   884  009EE5  6C                 	db	108
   885  009EE6  6C                 	db	108
   886  009EE7  29                 	db	41
   887  009EE8  00                 	db	0
   888                           
   889                           ;initializer for _alarmPmax
   890  009EE9  0028               	dw	40
   891                           
   892                           	psect	nvBANK2
   893  0002D9                     __pnvBANK2:
   894                           	opt callstack 0
   895  0002D9                     _TMR6_InterruptHandler:
   896                           	opt callstack 0
   897  0002D9                     	ds	2
   898  0002DB                     _TMR1_InterruptHandler:
   899                           	opt callstack 0
   900  0002DB                     	ds	2
   901  0002DD                     _timer1ReloadVal:
   902                           	opt callstack 0
   903  0002DD                     	ds	2
   904  0002DF                     _TMR0_InterruptHandler:
   905                           	opt callstack 0
   906  0002DF                     	ds	2
   907  0002E1                     _TMR5_InterruptHandler:
   908                           	opt callstack 0
   909  0002E1                     	ds	2
   910  0002E3                     _timer5ReloadVal:
   911                           	opt callstack 0
   912  0002E3                     	ds	2
   913  0002E5                     _UART1_ErrorHandler:
   914                           	opt callstack 0
   915  0002E5                     	ds	2
   916  0002E7                     _UART1_OverrunErrorHandler:
   917                           	opt callstack 0
   918  0002E7                     	ds	2
   919  0002E9                     _UART1_FramingErrorHandler:
   920                           	opt callstack 0
   921  0002E9                     	ds	2
   922  0002EB                     _uart1TxBufferRemaining:
   923                           	opt callstack 0
   924  0002EB                     	ds	2
   925  0002ED                     _TMR4_InterruptHandler:
   926                           	opt callstack 0
   927  0002ED                     	ds	2
   928  0002EF                     _UART1_TxInterruptHandler:
   929                           	opt callstack 0
   930  0002EF                     	ds	2
   931  0002F1                     _UART1_RxInterruptHandler:
   932                           	opt callstack 0
   933  0002F1                     	ds	2
   934  0002F3                     _ADCC_ADTI_InterruptHandler:
   935                           	opt callstack 0
   936  0002F3                     	ds	2
   937  0000                     _PMD7	set	14791
   938  0000                     _PMD6	set	14790
   939  0000                     _PMD5	set	14789
   940  0000                     _PMD4	set	14788
   941  0000                     _PMD3	set	14787
   942  0000                     _PMD2	set	14786
   943  0000                     _PMD1	set	14785
   944  0000                     _PMD0	set	14784
   945  0000                     _OSCTUNE	set	14814
   946  0000                     _OSCFRQ	set	14815
   947  0000                     _OSCEN	set	14813
   948  0000                     _OSCCON3	set	14811
   949  0000                     _OSCCON1	set	14809
   950  0000                     _PIR4bits	set	14756
   951  0000                     _PIE4bits	set	14740
   952  0000                     _PIR7bits	set	14759
   953  0000                     _PIE7bits	set	14743
   954  0000                     _PIR8bits	set	14760
   955  0000                     _PIE8bits	set	14744
   956  0000                     _PIR9bits	set	14761
   957  0000                     _PIE9bits	set	14745
   958  0000                     _PIR5bits	set	14757
   959  0000                     _PIE5bits	set	14741
   960  0000                     _PIR6bits	set	14758
   961  0000                     _PIE6bits	set	14742
   962  0000                     _PIR3bits	set	14755
   963  0000                     _PIE3bits	set	14739
   964  0000                     _PIE1bits	set	14737
   965  0000                     _PIR1bits	set	14753
   966  0000                     _I2C2SDAPPS	set	15076
   967  0000                     _U1RXPPS	set	15077
   968  0000                     _RD0PPS	set	14872
   969  0000                     _RB4PPS	set	14860
   970  0000                     _RC1PPS	set	14865
   971  0000                     _RB5PPS	set	14861
   972  0000                     _I2C2SCLPPS	set	15075
   973  0000                     _INLVLE	set	14980
   974  0000                     _INLVLD	set	14964
   975  0000                     _INLVLC	set	14948
   976  0000                     _INLVLB	set	14932
   977  0000                     _INLVLA	set	14916
   978  0000                     _SLRCONE	set	14979
   979  0000                     _SLRCOND	set	14963
   980  0000                     _SLRCONC	set	14947
   981  0000                     _SLRCONB	set	14931
   982  0000                     _SLRCONA	set	14915
   983  0000                     _ODCOND	set	14962
   984  0000                     _ODCONC	set	14946
   985  0000                     _ODCONB	set	14930
   986  0000                     _ODCONA	set	14914
   987  0000                     _ODCONE	set	14978
   988  0000                     _RD1I2C	set	14971
   989  0000                     _RD0I2C	set	14970
   990  0000                     _RC4I2C	set	14955
   991  0000                     _RC3I2C	set	14954
   992  0000                     _RB2I2C	set	14939
   993  0000                     _RB1I2C	set	14938
   994  0000                     _WPUC	set	14945
   995  0000                     _WPUA	set	14913
   996  0000                     _WPUB	set	14929
   997  0000                     _WPUE	set	14977
   998  0000                     _WPUD	set	14961
   999  0000                     _ANSELA	set	14912
  1000  0000                     _ANSELE	set	14976
  1001  0000                     _ANSELB	set	14928
  1002  0000                     _ANSELC	set	14944
  1003  0000                     _ANSELD	set	14960
  1004  0000                     _I2C2STAT1	set	15714
  1005  0000                     _I2C2STAT0	set	15713
  1006  0000                     _I2C2ADB0	set	15703
  1007  0000                     _I2C2RXB	set	15700
  1008  0000                     _I2C2TXB	set	15701
  1009  0000                     _I2C2PIRbits	set	15715
  1010  0000                     _I2C2ERRbits	set	15712
  1011  0000                     _I2C2PIEbits	set	15716
  1012  0000                     _I2C2ADR1	set	15706
  1013  0000                     _I2C2ADR0	set	15705
  1014  0000                     _I2C2STAT1bits	set	15714
  1015  0000                     _I2C2CON0bits	set	15709
  1016  0000                     _I2C2PIR	set	15715
  1017  0000                     _I2C2CNT	set	15702
  1018  0000                     _I2C2CON2	set	15711
  1019  0000                     _I2C2CON1	set	15710
  1020  0000                     _I2C2CON0	set	15709
  1021  0000                     _U1RXB	set	15848
  1022  0000                     _U1TXB	set	15850
  1023  0000                     _U1ERRIRbits	set	15865
  1024  0000                     _U1ERRIE	set	15866
  1025  0000                     _U1ERRIR	set	15865
  1026  0000                     _U1UIR	set	15864
  1027  0000                     _U1FIFO	set	15863
  1028  0000                     _U1BRGH	set	15862
  1029  0000                     _U1BRGL	set	15861
  1030  0000                     _U1CON2	set	15860
  1031  0000                     _U1CON1	set	15859
  1032  0000                     _U1CON0	set	15858
  1033  0000                     _U1P3H	set	15857
  1034  0000                     _U1P3L	set	15856
  1035  0000                     _U1P2H	set	15855
  1036  0000                     _U1P2L	set	15854
  1037  0000                     _U1P1H	set	15853
  1038  0000                     _U1P1L	set	15852
  1039  0000                     _CM1PCH	set	16063
  1040  0000                     _CM1NCH	set	16062
  1041  0000                     _CM1CON1	set	16061
  1042  0000                     _CM1CON0	set	16060
  1043  0000                     _FVRCON	set	16065
  1044  0000                     _ADRESL	set	16111
  1045  0000                     _ADRESH	set	16112
  1046  0000                     _ADCON0bits	set	16120
  1047  0000                     _ADCON0	set	16120
  1048  0000                     _ADCLK	set	16127
  1049  0000                     _ADACT	set	16126
  1050  0000                     _ADREF	set	16125
  1051  0000                     _ADSTAT	set	16124
  1052  0000                     _ADCON3	set	16123
  1053  0000                     _ADCON2	set	16122
  1054  0000                     _ADCON1	set	16121
  1055  0000                     _ADPREH	set	16119
  1056  0000                     _ADPREL	set	16118
  1057  0000                     _ADCAP	set	16117
  1058  0000                     _ADACQH	set	16116
  1059  0000                     _ADACQL	set	16115
  1060  0000                     _ADPCH	set	16113
  1061  0000                     _ADRPT	set	16108
  1062  0000                     _ADACCU	set	16106
  1063  0000                     _ADSTPTH	set	16101
  1064  0000                     _ADSTPTL	set	16100
  1065  0000                     _ADUTHH	set	16097
  1066  0000                     _ADUTHL	set	16096
  1067  0000                     _ADLTHH	set	16095
  1068  0000                     _ADLTHL	set	16094
  1069  0000                     _CCPTMRS1bits	set	16223
  1070  0000                     _LATAbits	set	16314
  1071  0000                     _PORTDbits	set	16333
  1072  0000                     _LATDbits	set	16317
  1073  0000                     _LATCbits	set	16316
  1074  0000                     _PCON0	set	16368
  1075  0000                     _TRISD	set	16325
  1076  0000                     _TRISC	set	16324
  1077  0000                     _TRISB	set	16323
  1078  0000                     _TRISA	set	16322
  1079  0000                     _TRISE	set	16326
  1080  0000                     _LATC	set	16316
  1081  0000                     _LATB	set	16315
  1082  0000                     _LATA	set	16314
  1083  0000                     _LATD	set	16317
  1084  0000                     _LATE	set	16318
  1085  0000                     _T6CONbits	set	16276
  1086  0000                     _T6CON	set	16276
  1087  0000                     _T6TMR	set	16274
  1088  0000                     _T6PR	set	16275
  1089  0000                     _T6RST	set	16279
  1090  0000                     _T6HLT	set	16277
  1091  0000                     _T6CLKCON	set	16278
  1092  0000                     _T1CONbits	set	16306
  1093  0000                     _T1CON	set	16306
  1094  0000                     _TMR1L	set	16304
  1095  0000                     _TMR1H	set	16305
  1096  0000                     _T1CLK	set	16309
  1097  0000                     _T1GATE	set	16308
  1098  0000                     _T1GCON	set	16307
  1099  0000                     _T0CON0bits	set	16312
  1100  0000                     _T0CON0	set	16312
  1101  0000                     _TMR0L	set	16310
  1102  0000                     _TMR0H	set	16311
  1103  0000                     _T0CON1	set	16313
  1104  0000                     _T5CONbits	set	16282
  1105  0000                     _T5CON	set	16282
  1106  0000                     _TMR5L	set	16280
  1107  0000                     _TMR5H	set	16281
  1108  0000                     _T5CLK	set	16285
  1109  0000                     _T5GATE	set	16284
  1110  0000                     _T5GCON	set	16283
  1111  0000                     _PWM6DCL	set	16232
  1112  0000                     _PWM6DCH	set	16233
  1113  0000                     _PWM6CON	set	16234
  1114  0000                     _PR4	set	16287
  1115  0000                     _T4CONbits	set	16288
  1116  0000                     _T4CON	set	16288
  1117  0000                     _T4TMR	set	16286
  1118  0000                     _T4PR	set	16287
  1119  0000                     _T4RST	set	16291
  1120  0000                     _T4HLT	set	16289
  1121  0000                     _T4CLKCON	set	16290
  1122  0000                     _T2CON	set	16300
  1123  0000                     _T2TMR	set	16298
  1124  0000                     _T2PR	set	16299
  1125  0000                     _T2RST	set	16303
  1126  0000                     _T2HLT	set	16301
  1127  0000                     _T2CLKCON	set	16302
  1128  0000                     _INTCON0bits	set	16338
  1129                           
  1130                           	psect	mediumconst
  1131  00FC56                     __pmediumconst:
  1132                           	opt callstack 0
  1133  00FC56  00                 	db	0
  1134  00FC57                     STR_33:
  1135                           
  1136                           ; BSR set to: 2
  1137  00FC57  0D                 	db	13
  1138  00FC58  0A                 	db	10
  1139  00FC59  4E                 	db	78	;'N'
  1140  00FC5A  65                 	db	101	;'e'
  1141  00FC5B  77                 	db	119	;'w'
  1142  00FC5C  20                 	db	32
  1143  00FC5D  42                 	db	66	;'B'
  1144  00FC5E  72                 	db	114	;'r'
  1145  00FC5F  65                 	db	101	;'e'
  1146  00FC60  61                 	db	97	;'a'
  1147  00FC61  74                 	db	116	;'t'
  1148  00FC62  68                 	db	104	;'h'
  1149  00FC63  3A                 	db	58	;':'
  1150  00FC64  20                 	db	32
  1151  00FC65  54                 	db	84	;'T'
  1152  00FC66  54                 	db	84	;'T'
  1153  00FC67  31                 	db	49	;'1'
  1154  00FC68  32                 	db	50	;'2'
  1155  00FC69  3A                 	db	58	;':'
  1156  00FC6A  20                 	db	32
  1157  00FC6B  25                 	db	37
  1158  00FC6C  64                 	db	100	;'d'
  1159  00FC6D  20                 	db	32
  1160  00FC6E  54                 	db	84	;'T'
  1161  00FC6F  54                 	db	84	;'T'
  1162  00FC70  32                 	db	50	;'2'
  1163  00FC71  3A                 	db	58	;':'
  1164  00FC72  20                 	db	32
  1165  00FC73  25                 	db	37
  1166  00FC74  64                 	db	100	;'d'
  1167  00FC75  20                 	db	32
  1168  00FC76  54                 	db	84	;'T'
  1169  00FC77  54                 	db	84	;'T'
  1170  00FC78  33                 	db	51	;'3'
  1171  00FC79  3A                 	db	58	;':'
  1172  00FC7A  20                 	db	32
  1173  00FC7B  25                 	db	37
  1174  00FC7C  64                 	db	100	;'d'
  1175  00FC7D  20                 	db	32
  1176  00FC7E  54                 	db	84	;'T'
  1177  00FC7F  54                 	db	84	;'T'
  1178  00FC80  33                 	db	51	;'3'
  1179  00FC81  34                 	db	52	;'4'
  1180  00FC82  3A                 	db	58	;':'
  1181  00FC83  20                 	db	32
  1182  00FC84  25                 	db	37
  1183  00FC85  64                 	db	100	;'d'
  1184  00FC86  20                 	db	32
  1185  00FC87  54                 	db	84	;'T'
  1186  00FC88  54                 	db	84	;'T'
  1187  00FC89  34                 	db	52	;'4'
  1188  00FC8A  3A                 	db	58	;':'
  1189  00FC8B  20                 	db	32
  1190  00FC8C  25                 	db	37
  1191  00FC8D  64                 	db	100	;'d'
  1192  00FC8E  20                 	db	32
  1193  00FC8F  54                 	db	84	;'T'
  1194  00FC90  54                 	db	84	;'T'
  1195  00FC91  31                 	db	49	;'1'
  1196  00FC92  3A                 	db	58	;':'
  1197  00FC93  20                 	db	32
  1198  00FC94  25                 	db	37
  1199  00FC95  64                 	db	100	;'d'
  1200  00FC96  20                 	db	32
  1201  00FC97  00                 	db	0
  1202  00FC98                     STR_41:
  1203                           
  1204                           ; BSR set to: 2
  1205  00FC98  0D                 	db	13
  1206  00FC99  0A                 	db	10
  1207  00FC9A  43                 	db	67	;'C'
  1208  00FC9B  61                 	db	97	;'a'
  1209  00FC9C  6C                 	db	108	;'l'
  1210  00FC9D  69                 	db	105	;'i'
  1211  00FC9E  62                 	db	98	;'b'
  1212  00FC9F  72                 	db	114	;'r'
  1213  00FCA0  61                 	db	97	;'a'
  1214  00FCA1  74                 	db	116	;'t'
  1215  00FCA2  65                 	db	101	;'e'
  1216  00FCA3  64                 	db	100	;'d'
  1217  00FCA4  3A                 	db	58	;':'
  1218  00FCA5  20                 	db	32
  1219  00FCA6  50                 	db	80	;'P'
  1220  00FCA7  72                 	db	114	;'r'
  1221  00FCA8  65                 	db	101	;'e'
  1222  00FCA9  73                 	db	115	;'s'
  1223  00FCAA  3A                 	db	58	;':'
  1224  00FCAB  25                 	db	37
  1225  00FCAC  64                 	db	100	;'d'
  1226  00FCAD  20                 	db	32
  1227  00FCAE  4F                 	db	79	;'O'
  1228  00FCAF  66                 	db	102	;'f'
  1229  00FCB0  66                 	db	102	;'f'
  1230  00FCB1  3A                 	db	58	;':'
  1231  00FCB2  25                 	db	37
  1232  00FCB3  64                 	db	100	;'d'
  1233  00FCB4  20                 	db	32
  1234  00FCB5  2F                 	db	47
  1235  00FCB6  2F                 	db	47
  1236  00FCB7  56                 	db	86	;'V'
  1237  00FCB8  6F                 	db	111	;'o'
  1238  00FCB9  6C                 	db	108	;'l'
  1239  00FCBA  75                 	db	117	;'u'
  1240  00FCBB  6D                 	db	109	;'m'
  1241  00FCBC  65                 	db	101	;'e'
  1242  00FCBD  20                 	db	32
  1243  00FCBE  70                 	db	112	;'p'
  1244  00FCBF  72                 	db	114	;'r'
  1245  00FCC0  65                 	db	101	;'e'
  1246  00FCC1  73                 	db	115	;'s'
  1247  00FCC2  3A                 	db	58	;':'
  1248  00FCC3  25                 	db	37
  1249  00FCC4  64                 	db	100	;'d'
  1250  00FCC5  20                 	db	32
  1251  00FCC6  4F                 	db	79	;'O'
  1252  00FCC7  66                 	db	102	;'f'
  1253  00FCC8  66                 	db	102	;'f'
  1254  00FCC9  3A                 	db	58	;':'
  1255  00FCCA  25                 	db	37
  1256  00FCCB  64                 	db	100	;'d'
  1257  00FCCC  0D                 	db	13
  1258  00FCCD  0A                 	db	10
  1259  00FCCE  00                 	db	0
  1260  00FCCF                     STR_38:
  1261                           
  1262                           ; BSR set to: 2
  1263  00FCCF  41                 	db	65	;'A'
  1264  00FCD0  44                 	db	68	;'D'
  1265  00FCD1  43                 	db	67	;'C'
  1266  00FCD2  6F                 	db	111	;'o'
  1267  00FCD3  66                 	db	102	;'f'
  1268  00FCD4  66                 	db	102	;'f'
  1269  00FCD5  73                 	db	115	;'s'
  1270  00FCD6  65                 	db	101	;'e'
  1271  00FCD7  74                 	db	116	;'t'
  1272  00FCD8  3A                 	db	58	;':'
  1273  00FCD9  20                 	db	32
  1274  00FCDA  25                 	db	37
  1275  00FCDB  64                 	db	100	;'d'
  1276  00FCDC  20                 	db	32
  1277  00FCDD  41                 	db	65	;'A'
  1278  00FCDE  44                 	db	68	;'D'
  1279  00FCDF  43                 	db	67	;'C'
  1280  00FCE0  56                 	db	86	;'V'
  1281  00FCE1  6F                 	db	111	;'o'
  1282  00FCE2  66                 	db	102	;'f'
  1283  00FCE3  66                 	db	102	;'f'
  1284  00FCE4  73                 	db	115	;'s'
  1285  00FCE5  65                 	db	101	;'e'
  1286  00FCE6  74                 	db	116	;'t'
  1287  00FCE7  3A                 	db	58	;':'
  1288  00FCE8  20                 	db	32
  1289  00FCE9  25                 	db	37
  1290  00FCEA  64                 	db	100	;'d'
  1291  00FCEB  20                 	db	32
  1292  00FCEC  31                 	db	49	;'1'
  1293  00FCED  32                 	db	50	;'2'
  1294  00FCEE  56                 	db	86	;'V'
  1295  00FCEF  3A                 	db	58	;':'
  1296  00FCF0  20                 	db	32
  1297  00FCF1  25                 	db	37
  1298  00FCF2  64                 	db	100	;'d'
  1299  00FCF3  20                 	db	32
  1300  00FCF4  6D                 	db	109	;'m'
  1301  00FCF5  56                 	db	86	;'V'
  1302  00FCF6  20                 	db	32
  1303  00FCF7  35                 	db	53	;'5'
  1304  00FCF8  56                 	db	86	;'V'
  1305  00FCF9  3A                 	db	58	;':'
  1306  00FCFA  20                 	db	32
  1307  00FCFB  25                 	db	37
  1308  00FCFC  64                 	db	100	;'d'
  1309  00FCFD  20                 	db	32
  1310  00FCFE  6D                 	db	109	;'m'
  1311  00FCFF  56                 	db	86	;'V'
  1312  00FD00  20                 	db	32
  1313  00FD01  2D                 	db	45
  1314  00FD02  2D                 	db	45
  1315  00FD03  20                 	db	32
  1316  00FD04  00                 	db	0
  1317  00FD05                     STR_40:
  1318                           
  1319                           ; BSR set to: 2
  1320  00FD05  0D                 	db	13
  1321  00FD06  0A                 	db	10
  1322  00FD07  50                 	db	80	;'P'
  1323  00FD08  72                 	db	114	;'r'
  1324  00FD09  65                 	db	101	;'e'
  1325  00FD0A  43                 	db	67	;'C'
  1326  00FD0B  61                 	db	97	;'a'
  1327  00FD0C  6C                 	db	108	;'l'
  1328  00FD0D  69                 	db	105	;'i'
  1329  00FD0E  62                 	db	98	;'b'
  1330  00FD0F  3A                 	db	58	;':'
  1331  00FD10  20                 	db	32
  1332  00FD11  50                 	db	80	;'P'
  1333  00FD12  72                 	db	114	;'r'
  1334  00FD13  65                 	db	101	;'e'
  1335  00FD14  73                 	db	115	;'s'
  1336  00FD15  3A                 	db	58	;':'
  1337  00FD16  25                 	db	37
  1338  00FD17  64                 	db	100	;'d'
  1339  00FD18  20                 	db	32
  1340  00FD19  4F                 	db	79	;'O'
  1341  00FD1A  66                 	db	102	;'f'
  1342  00FD1B  66                 	db	102	;'f'
  1343  00FD1C  3A                 	db	58	;':'
  1344  00FD1D  25                 	db	37
  1345  00FD1E  64                 	db	100	;'d'
  1346  00FD1F  20                 	db	32
  1347  00FD20  2F                 	db	47
  1348  00FD21  2F                 	db	47
  1349  00FD22  56                 	db	86	;'V'
  1350  00FD23  6F                 	db	111	;'o'
  1351  00FD24  6C                 	db	108	;'l'
  1352  00FD25  75                 	db	117	;'u'
  1353  00FD26  6D                 	db	109	;'m'
  1354  00FD27  65                 	db	101	;'e'
  1355  00FD28  20                 	db	32
  1356  00FD29  70                 	db	112	;'p'
  1357  00FD2A  72                 	db	114	;'r'
  1358  00FD2B  65                 	db	101	;'e'
  1359  00FD2C  73                 	db	115	;'s'
  1360  00FD2D  3A                 	db	58	;':'
  1361  00FD2E  25                 	db	37
  1362  00FD2F  64                 	db	100	;'d'
  1363  00FD30  20                 	db	32
  1364  00FD31  4F                 	db	79	;'O'
  1365  00FD32  66                 	db	102	;'f'
  1366  00FD33  66                 	db	102	;'f'
  1367  00FD34  3A                 	db	58	;':'
  1368  00FD35  25                 	db	37
  1369  00FD36  64                 	db	100	;'d'
  1370  00FD37  0D                 	db	13
  1371  00FD38  0A                 	db	10
  1372  00FD39  00                 	db	0
  1373  00FD3A                     STR_4:
  1374                           
  1375                           ; BSR set to: 2
  1376  00FD3A  0D                 	db	13
  1377  00FD3B  0A                 	db	10
  1378  00FD3C  50                 	db	80	;'P'
  1379  00FD3D  52                 	db	82	;'R'
  1380  00FD3E  53                 	db	83	;'S'
  1381  00FD3F  3A                 	db	58	;':'
  1382  00FD40  20                 	db	32
  1383  00FD41  25                 	db	37
  1384  00FD42  64                 	db	100	;'d'
  1385  00FD43  20                 	db	32
  1386  00FD44  70                 	db	112	;'p'
  1387  00FD45  61                 	db	97	;'a'
  1388  00FD46  20                 	db	32
  1389  00FD47  50                 	db	80	;'P'
  1390  00FD48  52                 	db	82	;'R'
  1391  00FD49  53                 	db	83	;'S'
  1392  00FD4A  56                 	db	86	;'V'
  1393  00FD4B  3A                 	db	58	;':'
  1394  00FD4C  20                 	db	32
  1395  00FD4D  25                 	db	37
  1396  00FD4E  64                 	db	100	;'d'
  1397  00FD4F  20                 	db	32
  1398  00FD50  70                 	db	112	;'p'
  1399  00FD51  61                 	db	97	;'a'
  1400  00FD52  20                 	db	32
  1401  00FD53  31                 	db	49	;'1'
  1402  00FD54  32                 	db	50	;'2'
  1403  00FD55  56                 	db	86	;'V'
  1404  00FD56  3A                 	db	58	;':'
  1405  00FD57  20                 	db	32
  1406  00FD58  25                 	db	37
  1407  00FD59  64                 	db	100	;'d'
  1408  00FD5A  20                 	db	32
  1409  00FD5B  6D                 	db	109	;'m'
  1410  00FD5C  56                 	db	86	;'V'
  1411  00FD5D  20                 	db	32
  1412  00FD5E  35                 	db	53	;'5'
  1413  00FD5F  56                 	db	86	;'V'
  1414  00FD60  3A                 	db	58	;':'
  1415  00FD61  25                 	db	37
  1416  00FD62  64                 	db	100	;'d'
  1417  00FD63  20                 	db	32
  1418  00FD64  0D                 	db	13
  1419  00FD65  0A                 	db	10
  1420  00FD66  00                 	db	0
  1421  00FD67                     STR_39:
  1422                           
  1423                           ; BSR set to: 2
  1424  00FD67  54                 	db	84	;'T'
  1425  00FD68  61                 	db	97	;'a'
  1426  00FD69  72                 	db	114	;'r'
  1427  00FD6A  67                 	db	103	;'g'
  1428  00FD6B  65                 	db	101	;'e'
  1429  00FD6C  74                 	db	116	;'t'
  1430  00FD6D  73                 	db	115	;'s'
  1431  00FD6E  3A                 	db	58	;':'
  1432  00FD6F  20                 	db	32
  1433  00FD70  50                 	db	80	;'P'
  1434  00FD71  6D                 	db	109	;'m'
  1435  00FD72  61                 	db	97	;'a'
  1436  00FD73  78                 	db	120	;'x'
  1437  00FD74  3A                 	db	58	;':'
  1438  00FD75  20                 	db	32
  1439  00FD76  25                 	db	37
  1440  00FD77  64                 	db	100	;'d'
  1441  00FD78  20                 	db	32
  1442  00FD79  49                 	db	73	;'I'
  1443  00FD7A  50                 	db	80	;'P'
  1444  00FD7B  3A                 	db	58	;':'
  1445  00FD7C  20                 	db	32
  1446  00FD7D  25                 	db	37
  1447  00FD7E  64                 	db	100	;'d'
  1448  00FD7F  20                 	db	32
  1449  00FD80  45                 	db	69	;'E'
  1450  00FD81  50                 	db	80	;'P'
  1451  00FD82  3A                 	db	58	;':'
  1452  00FD83  20                 	db	32
  1453  00FD84  25                 	db	37
  1454  00FD85  64                 	db	100	;'d'
  1455  00FD86  20                 	db	32
  1456  00FD87  56                 	db	86	;'V'
  1457  00FD88  3A                 	db	58	;':'
  1458  00FD89  20                 	db	32
  1459  00FD8A  25                 	db	37
  1460  00FD8B  64                 	db	100	;'d'
  1461  00FD8C  2F                 	db	47
  1462  00FD8D  25                 	db	37
  1463  00FD8E  64                 	db	100	;'d'
  1464  00FD8F  0D                 	db	13
  1465  00FD90  0A                 	db	10
  1466  00FD91  00                 	db	0
  1467  00FD92                     STR_35:
  1468                           
  1469                           ; BSR set to: 2
  1470  00FD92  20                 	db	32
  1471  00FD93  20                 	db	32
  1472  00FD94  20                 	db	32
  1473  00FD95  50                 	db	80	;'P'
  1474  00FD96  6D                 	db	109	;'m'
  1475  00FD97  61                 	db	97	;'a'
  1476  00FD98  78                 	db	120	;'x'
  1477  00FD99  3A                 	db	58	;':'
  1478  00FD9A  20                 	db	32
  1479  00FD9B  25                 	db	37
  1480  00FD9C  64                 	db	100	;'d'
  1481  00FD9D  20                 	db	32
  1482  00FD9E  6C                 	db	108	;'l'
  1483  00FD9F  49                 	db	73	;'I'
  1484  00FDA0  50                 	db	80	;'P'
  1485  00FDA1  3A                 	db	58	;':'
  1486  00FDA2  20                 	db	32
  1487  00FDA3  25                 	db	37
  1488  00FDA4  64                 	db	100	;'d'
  1489  00FDA5  20                 	db	32
  1490  00FDA6  49                 	db	73	;'I'
  1491  00FDA7  50                 	db	80	;'P'
  1492  00FDA8  3A                 	db	58	;':'
  1493  00FDA9  20                 	db	32
  1494  00FDAA  25                 	db	37
  1495  00FDAB  64                 	db	100	;'d'
  1496  00FDAC  20                 	db	32
  1497  00FDAD  50                 	db	80	;'P'
  1498  00FDAE  68                 	db	104	;'h'
  1499  00FDAF  69                 	db	105	;'i'
  1500  00FDB0  67                 	db	103	;'g'
  1501  00FDB1  68                 	db	104	;'h'
  1502  00FDB2  3A                 	db	58	;':'
  1503  00FDB3  20                 	db	32
  1504  00FDB4  25                 	db	37
  1505  00FDB5  64                 	db	100	;'d'
  1506  00FDB6  20                 	db	32
  1507  00FDB7  2D                 	db	45
  1508  00FDB8  2D                 	db	45
  1509  00FDB9  20                 	db	32
  1510  00FDBA  00                 	db	0
  1511  00FDBB                     STR_37:
  1512                           
  1513                           ; BSR set to: 2
  1514  00FDBB  48                 	db	72	;'H'
  1515  00FDBC  69                 	db	105	;'i'
  1516  00FDBD  4C                 	db	76	;'L'
  1517  00FDBE  69                 	db	105	;'i'
  1518  00FDBF  6D                 	db	109	;'m'
  1519  00FDC0  69                 	db	105	;'i'
  1520  00FDC1  74                 	db	116	;'t'
  1521  00FDC2  3A                 	db	58	;':'
  1522  00FDC3  20                 	db	32
  1523  00FDC4  25                 	db	37
  1524  00FDC5  64                 	db	100	;'d'
  1525  00FDC6  20                 	db	32
  1526  00FDC7  4C                 	db	76	;'L'
  1527  00FDC8  6F                 	db	111	;'o'
  1528  00FDC9  4C                 	db	76	;'L'
  1529  00FDCA  69                 	db	105	;'i'
  1530  00FDCB  6D                 	db	109	;'m'
  1531  00FDCC  69                 	db	105	;'i'
  1532  00FDCD  74                 	db	116	;'t'
  1533  00FDCE  3A                 	db	58	;':'
  1534  00FDCF  20                 	db	32
  1535  00FDD0  25                 	db	37
  1536  00FDD1  64                 	db	100	;'d'
  1537  00FDD2  20                 	db	32
  1538  00FDD3  2D                 	db	45
  1539  00FDD4  2D                 	db	45
  1540  00FDD5  20                 	db	32
  1541  00FDD6  56                 	db	86	;'V'
  1542  00FDD7  6F                 	db	111	;'o'
  1543  00FDD8  6C                 	db	108	;'l'
  1544  00FDD9  75                 	db	117	;'u'
  1545  00FDDA  6D                 	db	109	;'m'
  1546  00FDDB  65                 	db	101	;'e'
  1547  00FDDC  3A                 	db	58	;':'
  1548  00FDDD  20                 	db	32
  1549  00FDDE  25                 	db	37
  1550  00FDDF  64                 	db	100	;'d'
  1551  00FDE0  0D                 	db	13
  1552  00FDE1  0A                 	db	10
  1553  00FDE2  00                 	db	0
  1554  00FDE3                     STR_36:
  1555                           
  1556                           ; BSR set to: 2
  1557  00FDE3  50                 	db	80	;'P'
  1558  00FDE4  6D                 	db	109	;'m'
  1559  00FDE5  69                 	db	105	;'i'
  1560  00FDE6  6E                 	db	110	;'n'
  1561  00FDE7  3A                 	db	58	;':'
  1562  00FDE8  20                 	db	32
  1563  00FDE9  25                 	db	37
  1564  00FDEA  64                 	db	100	;'d'
  1565  00FDEB  20                 	db	32
  1566  00FDEC  6C                 	db	108	;'l'
  1567  00FDED  45                 	db	69	;'E'
  1568  00FDEE  50                 	db	80	;'P'
  1569  00FDEF  3A                 	db	58	;':'
  1570  00FDF0  20                 	db	32
  1571  00FDF1  25                 	db	37
  1572  00FDF2  64                 	db	100	;'d'
  1573  00FDF3  20                 	db	32
  1574  00FDF4  45                 	db	69	;'E'
  1575  00FDF5  50                 	db	80	;'P'
  1576  00FDF6  3A                 	db	58	;':'
  1577  00FDF7  20                 	db	32
  1578  00FDF8  25                 	db	37
  1579  00FDF9  64                 	db	100	;'d'
  1580  00FDFA  20                 	db	32
  1581  00FDFB  50                 	db	80	;'P'
  1582  00FDFC  6C                 	db	108	;'l'
  1583  00FDFD  6F                 	db	111	;'o'
  1584  00FDFE  77                 	db	119	;'w'
  1585  00FDFF  3A                 	db	58	;':'
  1586  00FE00  25                 	db	37
  1587  00FE01  64                 	db	100	;'d'
  1588  00FE02  20                 	db	32
  1589  00FE03  2D                 	db	45
  1590  00FE04  2D                 	db	45
  1591  00FE05  20                 	db	32
  1592  00FE06  00                 	db	0
  1593  00FE07                     STR_51:
  1594                           
  1595                           ; BSR set to: 2
  1596  00FE07  0D                 	db	13
  1597  00FE08  0A                 	db	10
  1598  00FE09  20                 	db	32
  1599  00FE0A  43                 	db	67	;'C'
  1600  00FE0B  6F                 	db	111	;'o'
  1601  00FE0C  6E                 	db	110	;'n'
  1602  00FE0D  74                 	db	116	;'t'
  1603  00FE0E  72                 	db	114	;'r'
  1604  00FE0F  6F                 	db	111	;'o'
  1605  00FE10  6C                 	db	108	;'l'
  1606  00FE11  6C                 	db	108	;'l'
  1607  00FE12  65                 	db	101	;'e'
  1608  00FE13  72                 	db	114	;'r'
  1609  00FE14  20                 	db	32
  1610  00FE15  62                 	db	98	;'b'
  1611  00FE16  75                 	db	117	;'u'
  1612  00FE17  7A                 	db	122	;'z'
  1613  00FE18  7A                 	db	122	;'z'
  1614  00FE19  65                 	db	101	;'e'
  1615  00FE1A  72                 	db	114	;'r'
  1616  00FE1B  20                 	db	32
  1617  00FE1C  64                 	db	100	;'d'
  1618  00FE1D  65                 	db	101	;'e'
  1619  00FE1E  74                 	db	116	;'t'
  1620  00FE1F  65                 	db	101	;'e'
  1621  00FE20  63                 	db	99	;'c'
  1622  00FE21  74                 	db	116	;'t'
  1623  00FE22  65                 	db	101	;'e'
  1624  00FE23  64                 	db	100	;'d'
  1625  00FE24  0D                 	db	13
  1626  00FE25  0A                 	db	10
  1627  00FE26  00                 	db	0
  1628  00FE27                     STR_50:
  1629                           
  1630                           ; BSR set to: 2
  1631  00FE27  0D                 	db	13
  1632  00FE28  0A                 	db	10
  1633  00FE29  20                 	db	32
  1634  00FE2A  45                 	db	69	;'E'
  1635  00FE2B  72                 	db	114	;'r'
  1636  00FE2C  72                 	db	114	;'r'
  1637  00FE2D  6F                 	db	111	;'o'
  1638  00FE2E  72                 	db	114	;'r'
  1639  00FE2F  20                 	db	32
  1640  00FE30  69                 	db	105	;'i'
  1641  00FE31  6E                 	db	110	;'n'
  1642  00FE32  20                 	db	32
  1643  00FE33  43                 	db	67	;'C'
  1644  00FE34  6F                 	db	111	;'o'
  1645  00FE35  6E                 	db	110	;'n'
  1646  00FE36  74                 	db	116	;'t'
  1647  00FE37  72                 	db	114	;'r'
  1648  00FE38  6F                 	db	111	;'o'
  1649  00FE39  6C                 	db	108	;'l'
  1650  00FE3A  6C                 	db	108	;'l'
  1651  00FE3B  65                 	db	101	;'e'
  1652  00FE3C  72                 	db	114	;'r'
  1653  00FE3D  20                 	db	32
  1654  00FE3E  62                 	db	98	;'b'
  1655  00FE3F  75                 	db	117	;'u'
  1656  00FE40  7A                 	db	122	;'z'
  1657  00FE41  7A                 	db	122	;'z'
  1658  00FE42  65                 	db	101	;'e'
  1659  00FE43  72                 	db	114	;'r'
  1660  00FE44  0D                 	db	13
  1661  00FE45  0A                 	db	10
  1662  00FE46  00                 	db	0
  1663  00FE47                     STR_34:
  1664                           
  1665                           ; BSR set to: 2
  1666  00FE47  54                 	db	84	;'T'
  1667  00FE48  49                 	db	73	;'I'
  1668  00FE49  3A                 	db	58	;':'
  1669  00FE4A  20                 	db	32
  1670  00FE4B  25                 	db	37
  1671  00FE4C  64                 	db	100	;'d'
  1672  00FE4D  20                 	db	32
  1673  00FE4E  54                 	db	84	;'T'
  1674  00FE4F  45                 	db	69	;'E'
  1675  00FE50  3A                 	db	58	;':'
  1676  00FE51  20                 	db	32
  1677  00FE52  25                 	db	37
  1678  00FE53  64                 	db	100	;'d'
  1679  00FE54  20                 	db	32
  1680  00FE55  54                 	db	84	;'T'
  1681  00FE56  44                 	db	68	;'D'
  1682  00FE57  49                 	db	73	;'I'
  1683  00FE58  3A                 	db	58	;':'
  1684  00FE59  20                 	db	32
  1685  00FE5A  25                 	db	37
  1686  00FE5B  64                 	db	100	;'d'
  1687  00FE5C  20                 	db	32
  1688  00FE5D  54                 	db	84	;'T'
  1689  00FE5E  44                 	db	68	;'D'
  1690  00FE5F  45                 	db	69	;'E'
  1691  00FE60  3A                 	db	58	;':'
  1692  00FE61  20                 	db	32
  1693  00FE62  25                 	db	37
  1694  00FE63  64                 	db	100	;'d'
  1695  00FE64  0D                 	db	13
  1696  00FE65  0A                 	db	10
  1697  00FE66  00                 	db	0
  1698  00FE67                     STR_10:
  1699                           
  1700                           ; BSR set to: 2
  1701  00FE67  25                 	db	37
  1702  00FE68  32                 	db	50	;'2'
  1703  00FE69  64                 	db	100	;'d'
  1704  00FE6A  25                 	db	37
  1705  00FE6B  25                 	db	37
  1706  00FE6C  20                 	db	32
  1707  00FE6D  25                 	db	37
  1708  00FE6E  64                 	db	100	;'d'
  1709  00FE6F  2E                 	db	46
  1710  00FE70  25                 	db	37
  1711  00FE71  30                 	db	48	;'0'
  1712  00FE72  32                 	db	50	;'2'
  1713  00FE73  64                 	db	100	;'d'
  1714  00FE74  20                 	db	32
  1715  00FE75  25                 	db	37
  1716  00FE76  64                 	db	100	;'d'
  1717  00FE77  2E                 	db	46
  1718  00FE78  25                 	db	37
  1719  00FE79  30                 	db	48	;'0'
  1720  00FE7A  32                 	db	50	;'2'
  1721  00FE7B  64                 	db	100	;'d'
  1722  00FE7C  25                 	db	37
  1723  00FE7D  63                 	db	99	;'c'
  1724  00FE7E  25                 	db	37
  1725  00FE7F  73                 	db	115	;'s'
  1726  00FE80  00                 	db	0
  1727  00FE81                     STR_12:
  1728                           
  1729                           ; BSR set to: 2
  1730  00FE81  25                 	db	37
  1731  00FE82  31                 	db	49	;'1'
  1732  00FE83  64                 	db	100	;'d'
  1733  00FE84  25                 	db	37
  1734  00FE85  31                 	db	49	;'1'
  1735  00FE86  64                 	db	100	;'d'
  1736  00FE87  20                 	db	32
  1737  00FE88  25                 	db	37
  1738  00FE89  32                 	db	50	;'2'
  1739  00FE8A  64                 	db	100	;'d'
  1740  00FE8B  20                 	db	32
  1741  00FE8C  25                 	db	37
  1742  00FE8D  32                 	db	50	;'2'
  1743  00FE8E  64                 	db	100	;'d'
  1744  00FE8F  20                 	db	32
  1745  00FE90  25                 	db	37
  1746  00FE91  32                 	db	50	;'2'
  1747  00FE92  64                 	db	100	;'d'
  1748  00FE93  20                 	db	32
  1749  00FE94  25                 	db	37
  1750  00FE95  34                 	db	52	;'4'
  1751  00FE96  64                 	db	100	;'d'
  1752  00FE97  00                 	db	0
  1753  00FE98                     STR_14:
  1754                           
  1755                           ; BSR set to: 2
  1756  00FE98  0D                 	db	13
  1757  00FE99  0A                 	db	10
  1758  00FE9A  44                 	db	68	;'D'
  1759  00FE9B  49                 	db	73	;'I'
  1760  00FE9C  53                 	db	83	;'S'
  1761  00FE9D  20                 	db	32
  1762  00FE9E  53                 	db	83	;'S'
  1763  00FE9F  56                 	db	86	;'V'
  1764  00FEA0  31                 	db	49	;'1'
  1765  00FEA1  20                 	db	32
  1766  00FEA2  41                 	db	65	;'A'
  1767  00FEA3  4C                 	db	76	;'L'
  1768  00FEA4  41                 	db	65	;'A'
  1769  00FEA5  52                 	db	82	;'R'
  1770  00FEA6  4D                 	db	77	;'M'
  1771  00FEA7  21                 	db	33
  1772  00FEA8  0D                 	db	13
  1773  00FEA9  0A                 	db	10
  1774  00FEAA  00                 	db	0
  1775  00FEAB                     STR_22:
  1776                           
  1777                           ; BSR set to: 2
  1778  00FEAB  0D                 	db	13
  1779  00FEAC  0A                 	db	10
  1780  00FEAD  46                 	db	70	;'F'
  1781  00FEAE  61                 	db	97	;'a'
  1782  00FEAF  69                 	db	105	;'i'
  1783  00FEB0  6C                 	db	108	;'l'
  1784  00FEB1  20                 	db	32
  1785  00FEB2  35                 	db	53	;'5'
  1786  00FEB3  56                 	db	86	;'V'
  1787  00FEB4  20                 	db	32
  1788  00FEB5  3A                 	db	58	;':'
  1789  00FEB6  20                 	db	32
  1790  00FEB7  25                 	db	37
  1791  00FEB8  64                 	db	100	;'d'
  1792  00FEB9  20                 	db	32
  1793  00FEBA  0D                 	db	13
  1794  00FEBB  0A                 	db	10
  1795  00FEBC  00                 	db	0
  1796  00FEBD                     STR_9:
  1797                           
  1798                           ; BSR set to: 2
  1799  00FEBD  56                 	db	86	;'V'
  1800  00FEBE  65                 	db	101	;'e'
  1801  00FEBF  6E                 	db	110	;'n'
  1802  00FEC0  74                 	db	116	;'t'
  1803  00FEC1  69                 	db	105	;'i'
  1804  00FEC2  6C                 	db	108	;'l'
  1805  00FEC3  61                 	db	97	;'a'
  1806  00FEC4  74                 	db	116	;'t'
  1807  00FEC5  6F                 	db	111	;'o'
  1808  00FEC6  72                 	db	114	;'r'
  1809  00FEC7  20                 	db	32
  1810  00FEC8  76                 	db	118	;'v'
  1811  00FEC9  31                 	db	49	;'1'
  1812  00FECA  2E                 	db	46
  1813  00FECB  30                 	db	48	;'0'
  1814  00FECC  20                 	db	32
  1815  00FECD  00                 	db	0
  1816  00FECE                     STR_8:
  1817                           
  1818                           ; BSR set to: 2
  1819  00FECE  4F                 	db	79	;'O'
  1820  00FECF  78                 	db	120	;'x'
  1821  00FED0  79                 	db	121	;'y'
  1822  00FED1  56                 	db	86	;'V'
  1823  00FED2  69                 	db	105	;'i'
  1824  00FED3  74                 	db	116	;'t'
  1825  00FED4  61                 	db	97	;'a'
  1826  00FED5  45                 	db	69	;'E'
  1827  00FED6  6D                 	db	109	;'m'
  1828  00FED7  65                 	db	101	;'e'
  1829  00FED8  72                 	db	114	;'r'
  1830  00FED9  67                 	db	103	;'g'
  1831  00FEDA  65                 	db	101	;'e'
  1832  00FEDB  6E                 	db	110	;'n'
  1833  00FEDC  63                 	db	99	;'c'
  1834  00FEDD  79                 	db	121	;'y'
  1835  00FEDE  00                 	db	0
  1836  00FEDF                     STR_6:
  1837                           
  1838                           ; BSR set to: 2
  1839  00FEDF  20                 	db	32
  1840  00FEE0  20                 	db	32
  1841  00FEE1  20                 	db	32
  1842  00FEE2  20                 	db	32
  1843  00FEE3  4F                 	db	79	;'O'
  1844  00FEE4  78                 	db	120	;'x'
  1845  00FEE5  79                 	db	121	;'y'
  1846  00FEE6  56                 	db	86	;'V'
  1847  00FEE7  69                 	db	105	;'i'
  1848  00FEE8  74                 	db	116	;'t'
  1849  00FEE9  61                 	db	97	;'a'
  1850  00FEEA  20                 	db	32
  1851  00FEEB  20                 	db	32
  1852  00FEEC  20                 	db	32
  1853  00FEED  20                 	db	32
  1854  00FEEE  20                 	db	32
  1855  00FEEF  00                 	db	0
  1856  00FEF0                     STR_5:
  1857                           
  1858                           ; BSR set to: 2
  1859  00FEF0  45                 	db	69	;'E'
  1860  00FEF1  6D                 	db	109	;'m'
  1861  00FEF2  65                 	db	101	;'e'
  1862  00FEF3  72                 	db	114	;'r'
  1863  00FEF4  67                 	db	103	;'g'
  1864  00FEF5  20                 	db	32
  1865  00FEF6  52                 	db	82	;'R'
  1866  00FEF7  65                 	db	101	;'e'
  1867  00FEF8  73                 	db	115	;'s'
  1868  00FEF9  70                 	db	112	;'p'
  1869  00FEFA  69                 	db	105	;'i'
  1870  00FEFB  72                 	db	114	;'r'
  1871  00FEFC  61                 	db	97	;'a'
  1872  00FEFD  74                 	db	116	;'t'
  1873  00FEFE  6F                 	db	111	;'o'
  1874  00FEFF  72                 	db	114	;'r'
  1875  00FF00  00                 	db	0
  1876  00FF01                     STR_52:
  1877                           
  1878                           ; BSR set to: 2
  1879  00FF01  0D                 	db	13
  1880  00FF02  0A                 	db	10
  1881  00FF03  20                 	db	32
  1882  00FF04  53                 	db	83	;'S'
  1883  00FF05  4C                 	db	76	;'L'
  1884  00FF06  45                 	db	69	;'E'
  1885  00FF07  45                 	db	69	;'E'
  1886  00FF08  50                 	db	80	;'P'
  1887  00FF09  20                 	db	32
  1888  00FF0A  4D                 	db	77	;'M'
  1889  00FF0B  4F                 	db	79	;'O'
  1890  00FF0C  44                 	db	68	;'D'
  1891  00FF0D  45                 	db	69	;'E'
  1892  00FF0E  0D                 	db	13
  1893  00FF0F  0A                 	db	10
  1894  00FF10  00                 	db	0
  1895  00FF11                     STR_53:
  1896                           
  1897                           ; BSR set to: 2
  1898  00FF11  49                 	db	73	;'I'
  1899  00FF12  32                 	db	50	;'2'
  1900  00FF13  43                 	db	67	;'C'
  1901  00FF14  3A                 	db	58	;':'
  1902  00FF15  20                 	db	32
  1903  00FF16  6D                 	db	109	;'m'
  1904  00FF17  69                 	db	105	;'i'
  1905  00FF18  73                 	db	115	;'s'
  1906  00FF19  73                 	db	115	;'s'
  1907  00FF1A  20                 	db	32
  1908  00FF1B  25                 	db	37
  1909  00FF1C  64                 	db	100	;'d'
  1910  00FF1D  0D                 	db	13
  1911  00FF1E  0A                 	db	10
  1912  00FF1F  00                 	db	0
  1913  00FF20                     STR_21:
  1914                           
  1915                           ; BSR set to: 2
  1916  00FF20  46                 	db	70	;'F'
  1917  00FF21  6F                 	db	111	;'o'
  1918  00FF22  75                 	db	117	;'u'
  1919  00FF23  6E                 	db	110	;'n'
  1920  00FF24  64                 	db	100	;'d'
  1921  00FF25  20                 	db	32
  1922  00FF26  42                 	db	66	;'B'
  1923  00FF27  75                 	db	117	;'u'
  1924  00FF28  7A                 	db	122	;'z'
  1925  00FF29  7A                 	db	122	;'z'
  1926  00FF2A  65                 	db	101	;'e'
  1927  00FF2B  72                 	db	114	;'r'
  1928  00FF2C  0D                 	db	13
  1929  00FF2D  0A                 	db	10
  1930  00FF2E  00                 	db	0
  1931  00FF2F                     STR_20:
  1932                           
  1933                           ; BSR set to: 2
  1934  00FF2F  45                 	db	69	;'E'
  1935  00FF30  72                 	db	114	;'r'
  1936  00FF31  72                 	db	114	;'r'
  1937  00FF32  6F                 	db	111	;'o'
  1938  00FF33  72                 	db	114	;'r'
  1939  00FF34  20                 	db	32
  1940  00FF35  42                 	db	66	;'B'
  1941  00FF36  75                 	db	117	;'u'
  1942  00FF37  7A                 	db	122	;'z'
  1943  00FF38  7A                 	db	122	;'z'
  1944  00FF39  65                 	db	101	;'e'
  1945  00FF3A  72                 	db	114	;'r'
  1946  00FF3B  0D                 	db	13
  1947  00FF3C  0A                 	db	10
  1948  00FF3D  00                 	db	0
  1949  00FF3E                     STR_7:
  1950                           
  1951                           ; BSR set to: 2
  1952  00FF3E  43                 	db	67	;'C'
  1953  00FF3F  61                 	db	97	;'a'
  1954  00FF40  6C                 	db	108	;'l'
  1955  00FF41  3A                 	db	58	;':'
  1956  00FF42  20                 	db	32
  1957  00FF43  25                 	db	37
  1958  00FF44  34                 	db	52	;'4'
  1959  00FF45  64                 	db	100	;'d'
  1960  00FF46  20                 	db	32
  1961  00FF47  2D                 	db	45
  1962  00FF48  20                 	db	32
  1963  00FF49  25                 	db	37
  1964  00FF4A  34                 	db	52	;'4'
  1965  00FF4B  64                 	db	100	;'d'
  1966  00FF4C  00                 	db	0
  1967  00FF4D                     STR_2:
  1968                           
  1969                           ; BSR set to: 2
  1970  00FF4D  0D                 	db	13
  1971  00FF4E  0A                 	db	10
  1972  00FF4F  53                 	db	83	;'S'
  1973  00FF50  74                 	db	116	;'t'
  1974  00FF51  61                 	db	97	;'a'
  1975  00FF52  63                 	db	99	;'c'
  1976  00FF53  6B                 	db	107	;'k'
  1977  00FF54  3A                 	db	58	;':'
  1978  00FF55  25                 	db	37
  1979  00FF56  30                 	db	48	;'0'
  1980  00FF57  32                 	db	50	;'2'
  1981  00FF58  58                 	db	88	;'X'
  1982  00FF59  0D                 	db	13
  1983  00FF5A  0A                 	db	10
  1984  00FF5B  00                 	db	0
  1985  00FF5C                     STR_47:
  1986                           
  1987                           ; BSR set to: 2
  1988  00FF5C  0D                 	db	13
  1989  00FF5D  0A                 	db	10
  1990  00FF5E  41                 	db	65	;'A'
  1991  00FF5F  6C                 	db	108	;'l'
  1992  00FF60  53                 	db	83	;'S'
  1993  00FF61  56                 	db	86	;'V'
  1994  00FF62  31                 	db	49	;'1'
  1995  00FF63  3A                 	db	58	;':'
  1996  00FF64  20                 	db	32
  1997  00FF65  25                 	db	37
  1998  00FF66  64                 	db	100	;'d'
  1999  00FF67  0D                 	db	13
  2000  00FF68  0A                 	db	10
  2001  00FF69  00                 	db	0
  2002  00FF6A                     STR_49:
  2003                           
  2004                           ; BSR set to: 2
  2005  00FF6A  0D                 	db	13
  2006  00FF6B  0A                 	db	10
  2007  00FF6C  49                 	db	73	;'I'
  2008  00FF6D  4E                 	db	78	;'N'
  2009  00FF6E  49                 	db	73	;'I'
  2010  00FF6F  54                 	db	84	;'T'
  2011  00FF70  3A                 	db	58	;':'
  2012  00FF71  20                 	db	32
  2013  00FF72  25                 	db	37
  2014  00FF73  64                 	db	100	;'d'
  2015  00FF74  0D                 	db	13
  2016  00FF75  0A                 	db	10
  2017  00FF76  00                 	db	0
  2018  00FF77                     STR_1:
  2019                           
  2020                           ; BSR set to: 2
  2021  00FF77  1B                 	db	27
  2022  00FF78  63                 	db	99	;'c'
  2023  00FF79  20                 	db	32
  2024  00FF7A  4F                 	db	79	;'O'
  2025  00FF7B  78                 	db	120	;'x'
  2026  00FF7C  79                 	db	121	;'y'
  2027  00FF7D  76                 	db	118	;'v'
  2028  00FF7E  69                 	db	105	;'i'
  2029  00FF7F  74                 	db	116	;'t'
  2030  00FF80  61                 	db	97	;'a'
  2031  00FF81  0D                 	db	13
  2032  00FF82  0A                 	db	10
  2033  00FF83  00                 	db	0
  2034  00FF84                     STR_31:
  2035                           
  2036                           ; BSR set to: 2
  2037  00FF84  45                 	db	69	;'E'
  2038  00FF85  41                 	db	65	;'A'
  2039  00FF86  49                 	db	73	;'I'
  2040  00FF87  3A                 	db	58	;':'
  2041  00FF88  20                 	db	32
  2042  00FF89  25                 	db	37
  2043  00FF8A  30                 	db	48	;'0'
  2044  00FF8B  32                 	db	50	;'2'
  2045  00FF8C  58                 	db	88	;'X'
  2046  00FF8D  0D                 	db	13
  2047  00FF8E  0A                 	db	10
  2048  00FF8F  00                 	db	0
  2049  00FF90                     STR_48:
  2050                           
  2051                           ; BSR set to: 2
  2052  00FF90  0D                 	db	13
  2053  00FF91  0A                 	db	10
  2054  00FF92  53                 	db	83	;'S'
  2055  00FF93  56                 	db	86	;'V'
  2056  00FF94  31                 	db	49	;'1'
  2057  00FF95  3A                 	db	58	;':'
  2058  00FF96  20                 	db	32
  2059  00FF97  25                 	db	37
  2060  00FF98  64                 	db	100	;'d'
  2061  00FF99  0D                 	db	13
  2062  00FF9A  0A                 	db	10
  2063  00FF9B  00                 	db	0
  2064  00FF9C                     STR_19:
  2065                           
  2066                           ; BSR set to: 2
  2067  00FF9C  42                 	db	66	;'B'
  2068  00FF9D  43                 	db	67	;'C'
  2069  00FF9E  4D                 	db	77	;'M'
  2070  00FF9F  50                 	db	80	;'P'
  2071  00FFA0  48                 	db	72	;'H'
  2072  00FFA1  5F                 	db	95	;'_'
  2073  00FFA2  43                 	db	67	;'C'
  2074  00FFA3  6E                 	db	110	;'n'
  2075  00FFA4  74                 	db	116	;'t'
  2076  00FFA5  0D                 	db	13
  2077  00FFA6  0A                 	db	10
  2078  00FFA7  00                 	db	0
  2079  00FFA8                     STR_43:
  2080                           
  2081                           ; BSR set to: 2
  2082  00FFA8  20                 	db	32
  2083  00FFA9  28                 	db	40
  2084  00FFAA  45                 	db	69	;'E'
  2085  00FFAB  72                 	db	114	;'r'
  2086  00FFAC  72                 	db	114	;'r'
  2087  00FFAD  44                 	db	68	;'D'
  2088  00FFAE  52                 	db	82	;'R'
  2089  00FFAF  29                 	db	41
  2090  00FFB0  20                 	db	32
  2091  00FFB1  00                 	db	0
  2092  00FFB2                     STR_13:
  2093                           
  2094                           ; BSR set to: 2
  2095  00FFB2  25                 	db	37
  2096  00FFB3  63                 	db	99	;'c'
  2097  00FFB4  20                 	db	32
  2098  00FFB5  25                 	db	37
  2099  00FFB6  31                 	db	49	;'1'
  2100  00FFB7  34                 	db	52	;'4'
  2101  00FFB8  73                 	db	115	;'s'
  2102  00FFB9  00                 	db	0
  2103  00FFBA                     STR_23:
  2104                           
  2105                           ; BSR set to: 2
  2106  00FFBA  0D                 	db	13
  2107  00FFBB  0A                 	db	10
  2108  00FFBC  54                 	db	84	;'T'
  2109  00FFBD  41                 	db	65	;'A'
  2110  00FFBE  3A                 	db	58	;':'
  2111  00FFBF  20                 	db	32
  2112  00FFC0  00                 	db	0
  2113  00FFC1                     STR_25:
  2114                           
  2115                           ; BSR set to: 2
  2116  00FFC1  4D                 	db	77	;'M'
  2117  00FFC2  55                 	db	85	;'U'
  2118  00FFC3  54                 	db	84	;'T'
  2119  00FFC4  45                 	db	69	;'E'
  2120  00FFC5  00                 	db	0
  2121  00FFC6                     STR_15:
  2122                           
  2123                           ; BSR set to: 2
  2124  00FFC6  5F                 	db	95	;'_'
  2125  00FFC7  44                 	db	68	;'D'
  2126  00FFC8  42                 	db	66	;'B'
  2127  00FFC9  5F                 	db	95	;'_'
  2128  00FFCA  00                 	db	0
  2129  00FFCB                     STR_16:
  2130                           
  2131                           ; BSR set to: 2
  2132  00FFCB  5F                 	db	95	;'_'
  2133  00FFCC  45                 	db	69	;'E'
  2134  00FFCD  42                 	db	66	;'B'
  2135  00FFCE  5F                 	db	95	;'_'
  2136  00FFCF  00                 	db	0
  2137  00FFD0                     STR_55:
  2138                           
  2139                           ; BSR set to: 2
  2140  00FFD0  26                 	db	38
  2141  00FFD1  0D                 	db	13
  2142  00FFD2  0A                 	db	10
  2143  00FFD3  00                 	db	0
  2144  00FFD4                     STR_54:
  2145                           
  2146                           ; BSR set to: 2
  2147  00FFD4  45                 	db	69	;'E'
  2148  00FFD5  43                 	db	67	;'C'
  2149  00FFD6  20                 	db	32
  2150  00FFD7  00                 	db	0
  2151  00FFD8                     STR_42:
  2152                           
  2153                           ; BSR set to: 2
  2154  00FFD8  30                 	db	48	;'0'
  2155  00FFD9  0D                 	db	13
  2156  00FFDA  0A                 	db	10
  2157  00FFDB  00                 	db	0
  2158  00FFDC                     STR_46:
  2159                           
  2160                           ; BSR set to: 2
  2161  00FFDC  50                 	db	80	;'P'
  2162  00FFDD  0D                 	db	13
  2163  00FFDE  0A                 	db	10
  2164  00FFDF  00                 	db	0
  2165  00FFE0                     STR_45:
  2166                           
  2167                           ; BSR set to: 2
  2168  00FFE0  65                 	db	101	;'e'
  2169  00FFE1  0D                 	db	13
  2170  00FFE2  0A                 	db	10
  2171  00FFE3  00                 	db	0
  2172  00FFE4                     STR_32:
  2173                           
  2174                           ; BSR set to: 2
  2175  00FFE4  6F                 	db	111	;'o'
  2176  00FFE5  0D                 	db	13
  2177  00FFE6  0A                 	db	10
  2178  00FFE7  00                 	db	0
  2179  00FFE8                     STR_30:
  2180                           
  2181                           ; BSR set to: 2
  2182  00FFE8  41                 	db	65	;'A'
  2183  00FFE9  0D                 	db	13
  2184  00FFEA  0A                 	db	10
  2185  00FFEB  00                 	db	0
  2186  00FFEC                     STR_3:
  2187                           
  2188                           ; BSR set to: 2
  2189  00FFEC  6D                 	db	109	;'m'
  2190  00FFED  0D                 	db	13
  2191  00FFEE  0A                 	db	10
  2192  00FFEF  00                 	db	0
  2193  00FFF0                     STR_26:
  2194                           
  2195                           ; BSR set to: 2
  2196  00FFF0  48                 	db	72	;'H'
  2197  00FFF1  69                 	db	105	;'i'
  2198  00FFF2  00                 	db	0
  2199  00FFF3                     STR_28:
  2200                           
  2201                           ; BSR set to: 2
  2202  00FFF3  41                 	db	65	;'A'
  2203  00FFF4  6C                 	db	108	;'l'
  2204  00FFF5  00                 	db	0
  2205  00FFF6                     STR_27:
  2206                           
  2207                           ; BSR set to: 2
  2208  00FFF6  4D                 	db	77	;'M'
  2209  00FFF7  75                 	db	117	;'u'
  2210  00FFF8  00                 	db	0
  2211  00FFF9                     STR_11:
  2212                           
  2213                           ; BSR set to: 2
  2214  00FFF9  43                 	db	67	;'C'
  2215  00FFFA  61                 	db	97	;'a'
  2216  00FFFB  00                 	db	0
  2217  00FFFC                     STR_44:
  2218                           
  2219                           ; BSR set to: 2
  2220  00FFFC  3D                 	db	61	;'='
  2221  00FFFD  00                 	db	0
  2222  0000                     
  2223                           ; #config settings
  2224  00FFFE  00                 	db	0	; dummy byte at the end
  2225  0000                     
  2226                           	psect	cinit
  2227  006D10                     __pcinit:
  2228                           	opt callstack 0
  2229  006D10                     start_initialization:
  2230                           	opt callstack 0
  2231  006D10                     __initialization:
  2232                           	opt callstack 0
  2233                           
  2234                           ; Initialize objects allocated to BIGRAM (399 bytes)
  2235                           ; load TBLPTR registers with __pidataBIGRAM
  2236  006D10  0E5C               	movlw	low __pidataBIGRAM
  2237  006D12  6EF6               	movwf	tblptrl,c
  2238  006D14  0E49               	movlw	high __pidataBIGRAM
  2239  006D16  6EF7               	movwf	tblptrh,c
  2240  006D18  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  2241  006D1A  6EF8               	movwf	tblptru,c
  2242  006D1C  EE02  F114         	lfsr	0,__pdataBIGRAM
  2243  006D20  EE10 F18F          	lfsr	1,399
  2244  006D24                     copy_data0:
  2245  006D24  0009               	tblrd		*+
  2246  006D26  006F FFD7 FFEE     	movff	tablat,postinc0
  2247  006D2C  50E5               	movf	postdec1,w,c
  2248  006D2E  50E1               	movf	fsr1l,w,c
  2249  006D30  E1F9               	bnz	copy_data0
  2250  006D32  50E2               	movf	fsr1h,w,c
  2251  006D34  E1F7               	bnz	copy_data0
  2252                           
  2253                           ; Initialize objects allocated to BANK2 (29 bytes)
  2254                           ; load TBLPTR registers with __pidataBANK2
  2255  006D36  0ECE               	movlw	low __pidataBANK2
  2256  006D38  6EF6               	movwf	tblptrl,c
  2257  006D3A  0E9E               	movlw	high __pidataBANK2
  2258  006D3C  6EF7               	movwf	tblptrh,c
  2259  006D3E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2260  006D40  6EF8               	movwf	tblptru,c
  2261  006D42  EE00  F2BC         	lfsr	0,__pdataBANK2
  2262  006D46  EE10 F01D          	lfsr	1,29
  2263  006D4A                     copy_data1:
  2264  006D4A  0009               	tblrd		*+
  2265  006D4C  006F FFD7 FFEE     	movff	tablat,postinc0
  2266  006D52  50E5               	movf	postdec1,w,c
  2267  006D54  50E1               	movf	fsr1l,w,c
  2268  006D56  E1F9               	bnz	copy_data1
  2269                           
  2270                           ; Initialize objects allocated to BANK1 (4 bytes)
  2271                           ; load TBLPTR registers with __pidataBANK1
  2272  006D58  0E34               	movlw	low __pidataBANK1
  2273  006D5A  6EF6               	movwf	tblptrl,c
  2274  006D5C  0EA6               	movlw	high __pidataBANK1
  2275  006D5E  6EF7               	movwf	tblptrh,c
  2276  006D60  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2277  006D62  6EF8               	movwf	tblptru,c
  2278  006D64  EE00  F1F8         	lfsr	0,__pdataBANK1
  2279  006D68  EE10 F004          	lfsr	1,4
  2280  006D6C                     copy_data2:
  2281  006D6C  0009               	tblrd		*+
  2282  006D6E  006F FFD7 FFEE     	movff	tablat,postinc0
  2283  006D74  50E5               	movf	postdec1,w,c
  2284  006D76  50E1               	movf	fsr1l,w,c
  2285  006D78  E1F9               	bnz	copy_data2
  2286                           
  2287                           ; Clear objects allocated to BIGRAM (1200 bytes)
  2288  006D7A  EE01  F064         	lfsr	0,__pbssBIGRAM
  2289  006D7E  EE11 F0B0          	lfsr	1,1200
  2290  006D82                     clear_0:
  2291  006D82  6AEE               	clrf	postinc0,c
  2292  006D84  50E5               	movf	postdec1,w,c
  2293  006D86  50E1               	movf	fsr1l,w,c
  2294  006D88  E1FC               	bnz	clear_0
  2295  006D8A  50E2               	movf	fsr1h,w,c
  2296  006D8C  E1FA               	bnz	clear_0
  2297                           
  2298                           ; Clear objects allocated to BANK4 (100 bytes)
  2299  006D8E  EE01  F000         	lfsr	0,__pbssBANK4
  2300  006D92  0E64               	movlw	100
  2301  006D94                     clear_1:
  2302  006D94  6AEE               	clrf	postinc0,c
  2303  006D96  06E8               	decf	wreg,f,c
  2304  006D98  E1FD               	bnz	clear_1
  2305                           
  2306                           ; Clear objects allocated to BANK3 (249 bytes)
  2307  006D9A  EE00  F300         	lfsr	0,__pbssBANK3
  2308  006D9E  0EF9               	movlw	249
  2309  006DA0                     clear_2:
  2310  006DA0  6AEE               	clrf	postinc0,c
  2311  006DA2  06E8               	decf	wreg,f,c
  2312  006DA4  E1FD               	bnz	clear_2
  2313                           
  2314                           ; Clear objects allocated to BANK2 (188 bytes)
  2315  006DA6  EE00  F200         	lfsr	0,__pbssBANK2
  2316  006DAA  0EBC               	movlw	188
  2317  006DAC                     clear_3:
  2318  006DAC  6AEE               	clrf	postinc0,c
  2319  006DAE  06E8               	decf	wreg,f,c
  2320  006DB0  E1FD               	bnz	clear_3
  2321                           
  2322                           ; Clear objects allocated to BANK1 (49 bytes)
  2323  006DB2  EE00  F1C7         	lfsr	0,__pbssBANK1
  2324  006DB6  0E31               	movlw	49
  2325  006DB8                     clear_4:
  2326  006DB8  6AEE               	clrf	postinc0,c
  2327  006DBA  06E8               	decf	wreg,f,c
  2328  006DBC  E1FD               	bnz	clear_4
  2329                           
  2330                           ; Clear objects allocated to BANK0 (56 bytes)
  2331  006DBE  EE00  F0C8         	lfsr	0,__pbssBANK0
  2332  006DC2  0E38               	movlw	56
  2333  006DC4                     clear_5:
  2334  006DC4  6AEE               	clrf	postinc0,c
  2335  006DC6  06E8               	decf	wreg,f,c
  2336  006DC8  E1FD               	bnz	clear_5
  2337                           
  2338                           ;
  2339                           ; Setup IVTBASE
  2340                           ;
  2341  006DCA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2342  006DCC  6ED5               	movwf	213,c
  2343  006DCE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2344  006DD0  6ED6               	movwf	214,c
  2345  006DD2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2346  006DD4  6ED7               	movwf	215,c
  2347  006DD6                     end_of_initialization:
  2348                           	opt callstack 0
  2349  006DD6                     __end_of__initialization:
  2350                           	opt callstack 0
  2351  006DD6  0100               	movlb	0
  2352  006DD8  EFA4  F016         	goto	_main	;jump to C main() function
  2353                           
  2354                           	psect	bssBANK0
  2355  0000C8                     __pbssBANK0:
  2356                           	opt callstack 0
  2357  0000C8                     _tt:
  2358                           	opt callstack 0
  2359  0000C8                     	ds	4
  2360  0000CC                     _cntByte:
  2361                           	opt callstack 0
  2362  0000CC                     	ds	2
  2363  0000CE                     _prSlow:
  2364                           	opt callstack 0
  2365  0000CE                     	ds	2
  2366  0000D0                     _numtde:
  2367                           	opt callstack 0
  2368  0000D0                     	ds	2
  2369  0000D2                     _numtdi:
  2370                           	opt callstack 0
  2371  0000D2                     	ds	2
  2372  0000D4                     _lrpe:
  2373                           	opt callstack 0
  2374  0000D4                     	ds	2
  2375  0000D6                     _minPressure:
  2376                           	opt callstack 0
  2377  0000D6                     	ds	2
  2378  0000D8                     _pmax:
  2379                           	opt callstack 0
  2380  0000D8                     	ds	2
  2381  0000DA                     _pe:
  2382                           	opt callstack 0
  2383  0000DA                     	ds	2
  2384  0000DC                     _tt4:
  2385                           	opt callstack 0
  2386  0000DC                     	ds	2
  2387  0000DE                     _tt2:
  2388                           	opt callstack 0
  2389  0000DE                     	ds	2
  2390  0000E0                     _displayStatus:
  2391                           	opt callstack 0
  2392  0000E0                     	ds	2
  2393  0000E2                     _ipAboveSetAlarm:
  2394                           	opt callstack 0
  2395  0000E2                     	ds	2
  2396  0000E4                     _ipBelowSetAlarm:
  2397                           	opt callstack 0
  2398  0000E4                     	ds	2
  2399  0000E6                     _epAboveSetAlarm:
  2400                           	opt callstack 0
  2401  0000E6                     	ds	2
  2402  0000E8                     _epBelowSetAlarm:
  2403                           	opt callstack 0
  2404  0000E8                     	ds	2
  2405  0000EA                     _ledCnt:
  2406                           	opt callstack 0
  2407  0000EA                     	ds	2
  2408  0000EC                     _uart1TxTail:
  2409                           	opt callstack 0
  2410  0000EC                     	ds	2
  2411  0000EE                     _I2C2_InterruptHandler:
  2412                           	opt callstack 0
  2413  0000EE                     	ds	2
  2414  0000F0                     _run:
  2415                           	opt callstack 0
  2416  0000F0                     	ds	1
  2417  0000F1                     SetSV1@last:
  2418                           	opt callstack 0
  2419  0000F1                     	ds	1
  2420  0000F2                     SetAlarmSV1@last:
  2421                           	opt callstack 0
  2422  0000F2                     	ds	1
  2423  0000F3                     _disableAlarmSV1:
  2424                           	opt callstack 0
  2425  0000F3                     	ds	1
  2426  0000F4                     _enableAlarms:
  2427                           	opt callstack 0
  2428  0000F4                     	ds	1
  2429  0000F5                     MonitorFailAlarm@monitorFailAlarm5V:
  2430                           	opt callstack 0
  2431  0000F5                     	ds	1
  2432  0000F6                     _controlFailAlarm:
  2433                           	opt callstack 0
  2434  0000F6                     	ds	1
  2435  0000F7                     _batteryFailAlarm:
  2436                           	opt callstack 0
  2437  0000F7                     	ds	1
  2438  0000F8                     _detected:
  2439                           	opt callstack 0
  2440  0000F8                     	ds	1
  2441  0000F9                     _on:
  2442                           	opt callstack 0
  2443  0000F9                     	ds	1
  2444  0000FA                     _alarmState:
  2445                           	opt callstack 0
  2446  0000FA                     	ds	1
  2447  0000FB                     _ledType:
  2448                           	opt callstack 0
  2449  0000FB                     	ds	1
  2450  0000FC                     _histButton:
  2451                           	opt callstack 0
  2452  0000FC                     	ds	1
  2453  0000FD                     _muteButton:
  2454                           	opt callstack 0
  2455  0000FD                     	ds	1
  2456  0000FE                     _enable:
  2457                           	opt callstack 0
  2458  0000FE                     	ds	1
  2459  0000FF                     _calibrate:
  2460                           	opt callstack 0
  2461  0000FF                     	ds	1
  2462                           
  2463                           	psect	bssBANK1
  2464  0001C7                     __pbssBANK1:
  2465                           	opt callstack 0
  2466  0001C7                     _width:
  2467                           	opt callstack 0
  2468  0001C7                     	ds	2
  2469  0001C9                     _prec:
  2470                           	opt callstack 0
  2471  0001C9                     	ds	2
  2472  0001CB                     _flags:
  2473                           	opt callstack 0
  2474  0001CB                     	ds	2
  2475  0001CD                     _loLimit:
  2476                           	opt callstack 0
  2477  0001CD                     	ds	2
  2478  0001CF                     _hiLimit:
  2479                           	opt callstack 0
  2480  0001CF                     	ds	2
  2481  0001D1                     _lrpi:
  2482                           	opt callstack 0
  2483  0001D1                     	ds	2
  2484  0001D3                     _pHigh:
  2485                           	opt callstack 0
  2486  0001D3                     	ds	2
  2487  0001D5                     _pi:
  2488                           	opt callstack 0
  2489  0001D5                     	ds	2
  2490  0001D7                     _tde:
  2491                           	opt callstack 0
  2492  0001D7                     	ds	2
  2493  0001D9                     _tdi:
  2494                           	opt callstack 0
  2495  0001D9                     	ds	2
  2496  0001DB                     _tt3:
  2497                           	opt callstack 0
  2498  0001DB                     	ds	2
  2499  0001DD                     _volume:
  2500                           	opt callstack 0
  2501  0001DD                     	ds	2
  2502  0001DF                     _state:
  2503                           	opt callstack 0
  2504  0001DF                     	ds	2
  2505  0001E1                     _targetLow:
  2506                           	opt callstack 0
  2507  0001E1                     	ds	2
  2508  0001E3                     _targetHigh:
  2509                           	opt callstack 0
  2510  0001E3                     	ds	2
  2511  0001E5                     _currentChannel:
  2512                           	opt callstack 0
  2513  0001E5                     	ds	2
  2514  0001E7                     _hist:
  2515                           	opt callstack 0
  2516  0001E7                     	ds	2
  2517  0001E9                     _histSec:
  2518                           	opt callstack 0
  2519  0001E9                     	ds	2
  2520  0001EB                     _muteSec:
  2521                           	opt callstack 0
  2522  0001EB                     	ds	2
  2523  0001ED                     _uart1TxHead:
  2524                           	opt callstack 0
  2525  0001ED                     	ds	2
  2526  0001EF                     _alarmStep:
  2527                           	opt callstack 0
  2528  0001EF                     	ds	1
  2529  0001F0                     _LED:
  2530                           	opt callstack 0
  2531  0001F0                     	ds	1
  2532  0001F1                     _uart1RxCount:
  2533                           	opt callstack 0
  2534  0001F1                     	ds	1
  2535  0001F2                     _uart1RxTail:
  2536                           	opt callstack 0
  2537  0001F2                     	ds	1
  2538  0001F3                     _uart1RxHead:
  2539                           	opt callstack 0
  2540  0001F3                     	ds	1
  2541  0001F4                     _adcVOffset:
  2542                           	opt callstack 0
  2543  0001F4                     	ds	2
  2544  0001F6                     _adcOffset:
  2545                           	opt callstack 0
  2546  0001F6                     	ds	2
  2547                           
  2548                           	psect	dataBANK1
  2549  0001F8                     __pdataBANK1:
  2550                           	opt callstack 0
  2551  0001F8                     _monitorSV1:
  2552                           	opt callstack 0
  2553  0001F8                     	ds	1
  2554  0001F9                     _controlSV1:
  2555                           	opt callstack 0
  2556  0001F9                     	ds	1
  2557  0001FA                     _batterySV1:
  2558                           	opt callstack 0
  2559  0001FA                     	ds	1
  2560  0001FB                     _veryHighSV1:
  2561                           	opt callstack 0
  2562  0001FB                     	ds	1
  2563                           
  2564                           	psect	bssBANK2
  2565  000200                     __pbssBANK2:
  2566                           	opt callstack 0
  2567  000200                     _msg:
  2568                           	opt callstack 0
  2569  000200                     	ds	10
  2570  00020A                     _uart1RxStatusBuffer:
  2571                           	opt callstack 0
  2572  00020A                     	ds	8
  2573  000212                     _uart1RxBuffer:
  2574                           	opt callstack 0
  2575  000212                     	ds	8
  2576  00021A                     _pLowAcc:
  2577                           	opt callstack 0
  2578  00021A                     	ds	4
  2579  00021E                     _pHighAcc:
  2580                           	opt callstack 0
  2581  00021E                     	ds	4
  2582  000222                     _volumeAcc:
  2583                           	opt callstack 0
  2584  000222                     	ds	4
  2585  000226                     main@cnt:
  2586                           	opt callstack 0
  2587  000226                     	ds	4
  2588  00022A                     _nout:
  2589                           	opt callstack 0
  2590  00022A                     	ds	2
  2591  00022C                     ControllerTimerHandler@cnt:
  2592                           	opt callstack 0
  2593  00022C                     	ds	2
  2594  00022E                     ControllerTimerHandler@errors:
  2595                           	opt callstack 0
  2596  00022E                     	ds	2
  2597  000230                     UpdateState@cnt:
  2598                           	opt callstack 0
  2599  000230                     	ds	2
  2600  000232                     _spr:
  2601                           	opt callstack 0
  2602  000232                     	ds	2
  2603  000234                     MonitorPressureTask@cnt2:
  2604                           	opt callstack 0
  2605  000234                     	ds	2
  2606  000236                     MonitorPressureTask@ecnt:
  2607                           	opt callstack 0
  2608  000236                     	ds	2
  2609  000238                     MonitorPressureTask@nt_4872:
  2610                           	opt callstack 0
  2611  000238                     	ds	2
  2612  00023A                     MonitorPressureTask@cnt:
  2613                           	opt callstack 0
  2614  00023A                     	ds	2
  2615  00023C                     	ds	2
  2616  00023E                     _prFast:
  2617                           	opt callstack 0
  2618  00023E                     	ds	2
  2619  000240                     _prSlowNumStable:
  2620                           	opt callstack 0
  2621  000240                     	ds	2
  2622  000242                     _prSlowDev:
  2623                           	opt callstack 0
  2624  000242                     	ds	2
  2625  000244                     _count:
  2626                           	opt callstack 0
  2627  000244                     	ds	2
  2628  000246                     _rpe:
  2629                           	opt callstack 0
  2630  000246                     	ds	2
  2631  000248                     _rpi:
  2632                           	opt callstack 0
  2633  000248                     	ds	2
  2634  00024A                     _numLow:
  2635                           	opt callstack 0
  2636  00024A                     	ds	2
  2637  00024C                     _numHigh:
  2638                           	opt callstack 0
  2639  00024C                     	ds	2
  2640  00024E                     _pLow:
  2641                           	opt callstack 0
  2642  00024E                     	ds	2
  2643  000250                     _alarmMaxPressure:
  2644                           	opt callstack 0
  2645  000250                     	ds	2
  2646  000252                     _maxPressure:
  2647                           	opt callstack 0
  2648  000252                     	ds	2
  2649  000254                     _pmin:
  2650                           	opt callstack 0
  2651  000254                     	ds	2
  2652  000256                     _bpm:
  2653                           	opt callstack 0
  2654  000256                     	ds	2
  2655  000258                     _te:
  2656                           	opt callstack 0
  2657  000258                     	ds	2
  2658  00025A                     _ti:
  2659                           	opt callstack 0
  2660  00025A                     	ds	2
  2661  00025C                     _ttAlarm:
  2662                           	opt callstack 0
  2663  00025C                     	ds	2
  2664  00025E                     _ttNoAlarm:
  2665                           	opt callstack 0
  2666  00025E                     	ds	2
  2667  000260                     _tt34:
  2668                           	opt callstack 0
  2669  000260                     	ds	2
  2670  000262                     _tt12:
  2671                           	opt callstack 0
  2672  000262                     	ds	2
  2673  000264                     _ttExt:
  2674                           	opt callstack 0
  2675  000264                     	ds	2
  2676  000266                     _tt1:
  2677                           	opt callstack 0
  2678  000266                     	ds	2
  2679  000268                     _volumeMin:
  2680                           	opt callstack 0
  2681  000268                     	ds	2
  2682  00026A                     _volumeMax:
  2683                           	opt callstack 0
  2684  00026A                     	ds	2
  2685  00026C                     _targetBp:
  2686                           	opt callstack 0
  2687  00026C                     	ds	2
  2688  00026E                     _targetPmax:
  2689                           	opt callstack 0
  2690  00026E                     	ds	2
  2691  000270                     AdcHandler@cnt:
  2692                           	opt callstack 0
  2693  000270                     	ds	2
  2694  000272                     AlarmHandler@cnt:
  2695                           	opt callstack 0
  2696  000272                     	ds	2
  2697  000274                     AlarmCheckTask@current:
  2698                           	opt callstack 0
  2699  000274                     	ds	2
  2700  000276                     	ds	2
  2701  000278                     HighPressureAlarmLow@count:
  2702                           	opt callstack 0
  2703  000278                     	ds	2
  2704  00027A                     MonitorFailAlarm@cnt5v:
  2705                           	opt callstack 0
  2706  00027A                     	ds	2
  2707  00027C                     BatteryFailAlarm@timeFail:
  2708                           	opt callstack 0
  2709  00027C                     	ds	2
  2710  00027E                     BatteryFailAlarm@timeBelow10:
  2711                           	opt callstack 0
  2712  00027E                     	ds	2
  2713  000280                     BatteryFailAlarm@timeBattery:
  2714                           	opt callstack 0
  2715  000280                     	ds	2
  2716  000282                     BuzzerTask@noDetections:
  2717                           	opt callstack 0
  2718  000282                     	ds	2
  2719  000284                     ButtonTask@cnt:
  2720                           	opt callstack 0
  2721  000284                     	ds	2
  2722  000286                     AlarmDisplay@cnt:
  2723                           	opt callstack 0
  2724  000286                     	ds	2
  2725  000288                     ValueDisplay@cnt:
  2726                           	opt callstack 0
  2727  000288                     	ds	2
  2728  00028A                     _CMP1_InterruptHandler:
  2729                           	opt callstack 0
  2730  00028A                     	ds	2
  2731  00028C                     _I2C2_SlaveWrColInterruptHandler:
  2732                           	opt callstack 0
  2733  00028C                     	ds	2
  2734  00028E                     _I2C2_SlaveBusColInterruptHandler:
  2735                           	opt callstack 0
  2736  00028E                     	ds	2
  2737  000290                     _I2C2_SlaveAddrInterruptHandler:
  2738                           	opt callstack 0
  2739  000290                     	ds	2
  2740  000292                     _I2C2_SlaveStopInterruptHandler:
  2741                           	opt callstack 0
  2742  000292                     	ds	2
  2743  000294                     _I2C2_SlaveWrInterruptHandler:
  2744                           	opt callstack 0
  2745  000294                     	ds	2
  2746  000296                     _I2C2_SlaveRdInterruptHandler:
  2747                           	opt callstack 0
  2748  000296                     	ds	2
  2749  000298                     UpdateState@old:
  2750                           	opt callstack 0
  2751  000298                     	ds	1
  2752  000299                     controller@volumeControl:
  2753                           	opt callstack 0
  2754  000299                     	ds	1
  2755  00029A                     _init:
  2756                           	opt callstack 0
  2757  00029A                     	ds	1
  2758  00029B                     _commandReceived:
  2759                           	opt callstack 0
  2760  00029B                     	ds	1
  2761  00029C                     MonitorPressureTask@down:
  2762                           	opt callstack 0
  2763  00029C                     	ds	1
  2764  00029D                     MonitorPressureTask@measPe:
  2765                           	opt callstack 0
  2766  00029D                     	ds	1
  2767  00029E                     MonitorPressureTask@measPi:
  2768                           	opt callstack 0
  2769  00029E                     	ds	1
  2770  00029F                     _normalSV1:
  2771                           	opt callstack 0
  2772  00029F                     	ds	1
  2773  0002A0                     _alarmSV1:
  2774                           	opt callstack 0
  2775  0002A0                     	ds	1
  2776  0002A1                     _volumeControl:
  2777                           	opt callstack 0
  2778  0002A1                     	ds	1
  2779  0002A2                     monitor@enable:
  2780                           	opt callstack 0
  2781  0002A2                     	ds	1
  2782  0002A3                     _alarmCheck:
  2783                           	opt callstack 0
  2784  0002A3                     	ds	1
  2785  0002A4                     _noPowerSupplyAlarm:
  2786                           	opt callstack 0
  2787  0002A4                     	ds	1
  2788  0002A5                     _vAboveMaxAlarm:
  2789                           	opt callstack 0
  2790  0002A5                     	ds	1
  2791  0002A6                     _vBelowMinAlarm:
  2792                           	opt callstack 0
  2793  0002A6                     	ds	1
  2794  0002A7                     _tdeTooLongAlarm:
  2795                           	opt callstack 0
  2796  0002A7                     	ds	1
  2797  0002A8                     _tdiTooLongAlarm:
  2798                           	opt callstack 0
  2799  0002A8                     	ds	1
  2800  0002A9                     _baterryLowAlarmHigh:
  2801                           	opt callstack 0
  2802  0002A9                     	ds	1
  2803  0002AA                     _baterryLowAlarmMed:
  2804                           	opt callstack 0
  2805  0002AA                     	ds	1
  2806  0002AB                     _circuitFailureAlarm:
  2807                           	opt callstack 0
  2808  0002AB                     	ds	1
  2809  0002AC                     _veryHighPressureAlarmHigh:
  2810                           	opt callstack 0
  2811  0002AC                     	ds	1
  2812  0002AD                     _highPressureAlarmHigh:
  2813                           	opt callstack 0
  2814  0002AD                     	ds	1
  2815  0002AE                     _highPressureAlarmLow:
  2816                           	opt callstack 0
  2817  0002AE                     	ds	1
  2818  0002AF                     _gasFailureAlarm:
  2819                           	opt callstack 0
  2820  0002AF                     	ds	1
  2821  0002B0                     _monitorFailAlarm:
  2822                           	opt callstack 0
  2823  0002B0                     	ds	1
  2824  0002B1                     _controllerDetected:
  2825                           	opt callstack 0
  2826  0002B1                     	ds	1
  2827  0002B2                     _checkController:
  2828                           	opt callstack 0
  2829  0002B2                     	ds	1
  2830  0002B3                     _buzzerState:
  2831                           	opt callstack 0
  2832  0002B3                     	ds	1
  2833  0002B4                     _I2C2_on:
  2834                           	opt callstack 0
  2835  0002B4                     	ds	1
  2836  0002B5                     _i2c2SlaveAddr:
  2837                           	opt callstack 0
  2838  0002B5                     	ds	1
  2839  0002B6                     _i2c2RdData:
  2840                           	opt callstack 0
  2841  0002B6                     	ds	1
  2842  0002B7                     _i2c2WrData:
  2843                           	opt callstack 0
  2844  0002B7                     	ds	1
  2845  0002B8                     _i2c2State:
  2846                           	opt callstack 0
  2847  0002B8                     	ds	1
  2848  0002B9                     _uart1RxLastError:
  2849                           	opt callstack 0
  2850  0002B9                     	ds	1
  2851  0002BA                     _bp:
  2852                           	opt callstack 0
  2853  0002BA                     	ds	2
  2854                           
  2855                           	psect	dataBANK2
  2856  0002BC                     __pdataBANK2:
  2857                           	opt callstack 0
  2858  0002BC                     _adcChannels:
  2859                           	opt callstack 0
  2860  0002BC                     	ds	20
  2861  0002D0                     stoa@F1144:
  2862                           	opt callstack 0
  2863  0002D0                     	ds	7
  2864  0002D7                     _alarmPmax:
  2865                           	opt callstack 0
  2866  0002D7                     	ds	2
  2867                           
  2868                           	psect	bssBANK3
  2869  000300                     __pbssBANK3:
  2870                           	opt callstack 0
  2871  000300                     _alarms:
  2872                           	opt callstack 0
  2873  000300                     	ds	38
  2874  000326                     _testAlarm:
  2875                           	opt callstack 0
  2876  000326                     	ds	38
  2877  00034C                     _a:
  2878                           	opt callstack 0
  2879  00034C                     	ds	21
  2880  000361                     _tdiBuffer:
  2881                           	opt callstack 0
  2882  000361                     	ds	20
  2883  000375                     _tdeBuffer:
  2884                           	opt callstack 0
  2885  000375                     	ds	20
  2886  000389                     _dbuf:
  2887                           	opt callstack 0
  2888  000389                     	ds	32
  2889  0003A9                     _msg4:
  2890                           	opt callstack 0
  2891  0003A9                     	ds	20
  2892  0003BD                     _msg3:
  2893                           	opt callstack 0
  2894  0003BD                     	ds	20
  2895  0003D1                     _msg2:
  2896                           	opt callstack 0
  2897  0003D1                     	ds	20
  2898  0003E5                     _msg1:
  2899                           	opt callstack 0
  2900  0003E5                     	ds	20
  2901                           
  2902                           	psect	bssBANK4
  2903  000400                     __pbssBANK4:
  2904                           	opt callstack 0
  2905  000400                     _prFastBuffer:
  2906                           	opt callstack 0
  2907  000400                     	ds	50
  2908  000432                     _prSlowBuffer:
  2909                           	opt callstack 0
  2910  000432                     	ds	50
  2911                           
  2912                           	psect	bssBIGRAM
  2913  000464                     __pbssBIGRAM:
  2914                           	opt callstack 0
  2915  000464                     _uart1TxBuffer:
  2916                           	opt callstack 0
  2917  000464                     	ds	1200
  2918                           
  2919                           	psect	dataBIGRAM
  2920  000914                     __pdataBIGRAM:
  2921                           	opt callstack 0
  2922  000914                     _alarmData:
  2923                           	opt callstack 0
  2924  000914                     	ds	399
  2925                           
  2926                           	psect	cstackBANK3
  2927  0003F9                     __pcstackBANK3:
  2928                           	opt callstack 0
  2929  0003F9                     main@ch:
  2930                           	opt callstack 0
  2931                           
  2932                           ; 1 bytes @ 0x0
  2933  0003F9                     	ds	1
  2934                           
  2935                           	psect	cstackBANK2
  2936  0002F5                     __pcstackBANK2:
  2937                           	opt callstack 0
  2938  0002F5                     
  2939                           ; 1 bytes @ 0x0
  2940  0002F5                     	ds	2
  2941  0002F7                     HistAlarm@i:
  2942                           	opt callstack 0
  2943  0002F7                     _AlarmCheckTask$6533:
  2944                           	opt callstack 0
  2945                           
  2946                           ; 2 bytes @ 0x2
  2947  0002F7                     	ds	2
  2948  0002F9                     _AlarmCheckTask$6537:
  2949                           	opt callstack 0
  2950                           
  2951                           ; 2 bytes @ 0x4
  2952  0002F9                     	ds	2
  2953  0002FB                     _AlarmCheckTask$4558:
  2954                           	opt callstack 0
  2955                           
  2956                           ; 1 bytes @ 0x6
  2957  0002FB                     	ds	1
  2958  0002FC                     AlarmCheckTask@type:
  2959                           	opt callstack 0
  2960                           
  2961                           ; 2 bytes @ 0x7
  2962  0002FC                     	ds	2
  2963  0002FE                     AlarmCheckTask@id:
  2964                           	opt callstack 0
  2965                           
  2966                           ; 2 bytes @ 0x9
  2967  0002FE                     	ds	2
  2968                           
  2969                           	psect	cstackBANK1
  2970  000100                     __pcstackBANK1:
  2971                           	opt callstack 0
  2972  000100                     ??_INTERRUPT_InterruptManager:
  2973                           
  2974                           ; 1 bytes @ 0x0
  2975  000100                     	ds	4
  2976  000104                     ?_strlen:
  2977                           	opt callstack 0
  2978  000104                     ?_GetTdi:
  2979                           	opt callstack 0
  2980  000104                     ?_GetTde:
  2981                           	opt callstack 0
  2982  000104                     ?_GetTi:
  2983                           	opt callstack 0
  2984  000104                     ?_GetTe:
  2985                           	opt callstack 0
  2986  000104                     ?_GetBpm:
  2987                           	opt callstack 0
  2988  000104                     ?_GetVolume:
  2989                           	opt callstack 0
  2990  000104                     ?_GetSpr:
  2991                           	opt callstack 0
  2992  000104                     ?_isupper:
  2993                           	opt callstack 0
  2994  000104                     ?_isalpha:
  2995                           	opt callstack 0
  2996  000104                     ?_isdigit:
  2997                           	opt callstack 0
  2998  000104                     ?_isspace:
  2999                           	opt callstack 0
  3000  000104                     ?_islower:
  3001                           	opt callstack 0
  3002  000104                     ?___wmul:
  3003                           	opt callstack 0
  3004  000104                     ?___awmod:
  3005                           	opt callstack 0
  3006  000104                     ?___lmul:
  3007                           	opt callstack 0
  3008  000104                     ?___llmod:
  3009                           	opt callstack 0
  3010  000104                     ?___aodiv:
  3011                           	opt callstack 0
  3012  000104                     ?___aomod:
  3013                           	opt callstack 0
  3014  000104                     ADCC_StartConversion@channel:
  3015                           	opt callstack 0
  3016  000104                     TMR4_Period8BitSet@periodVal:
  3017                           	opt callstack 0
  3018  000104                     UART1_Read@readValue:
  3019                           	opt callstack 0
  3020  000104                     UART1_Write@txData:
  3021                           	opt callstack 0
  3022  000104                     I2C2_SlaveSetSlaveAddr@slaveAddr:
  3023                           	opt callstack 0
  3024  000104                     I2C2_SlaveSetSlaveMask@maskAddr:
  3025                           	opt callstack 0
  3026  000104                     LCDWriteChar@chr:
  3027                           	opt callstack 0
  3028  000104                     LCDWrite4@chr:
  3029                           	opt callstack 0
  3030  000104                     LCDWriteCmd@data:
  3031                           	opt callstack 0
  3032  000104                     SetAlarmLED@type:
  3033                           	opt callstack 0
  3034  000104                     BuzzerOn@period:
  3035                           	opt callstack 0
  3036  000104                     AlarmSet@id:
  3037                           	opt callstack 0
  3038  000104                     AlarmClear@id:
  3039                           	opt callstack 0
  3040  000104                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  3041                           	opt callstack 0
  3042  000104                     TMR4_SetInterruptHandler@InterruptHandler:
  3043                           	opt callstack 0
  3044  000104                     UART1_SetFramingErrorHandler@interruptHandler:
  3045                           	opt callstack 0
  3046  000104                     UART1_SetOverrunErrorHandler@interruptHandler:
  3047                           	opt callstack 0
  3048  000104                     UART1_SetErrorHandler@interruptHandler:
  3049                           	opt callstack 0
  3050  000104                     UART1_SetRxInterruptHandler@InterruptHandler:
  3051                           	opt callstack 0
  3052  000104                     UART1_SetTxInterruptHandler@InterruptHandler:
  3053                           	opt callstack 0
  3054  000104                     TMR5_SetInterruptHandler@InterruptHandler:
  3055                           	opt callstack 0
  3056  000104                     TMR0_SetInterruptHandler@InterruptHandler:
  3057                           	opt callstack 0
  3058  000104                     TMR1_SetInterruptHandler@InterruptHandler:
  3059                           	opt callstack 0
  3060  000104                     TMR6_SetInterruptHandler@InterruptHandler:
  3061                           	opt callstack 0
  3062  000104                     I2C2_SlaveSetIsrHandler@handler:
  3063                           	opt callstack 0
  3064  000104                     I2C2_SlaveSetReadIntHandler@handler:
  3065                           	opt callstack 0
  3066  000104                     I2C2_SlaveSetWriteIntHandler@handler:
  3067                           	opt callstack 0
  3068  000104                     I2C2_SlaveSetStopIntHandler@handler:
  3069                           	opt callstack 0
  3070  000104                     I2C2_SlaveSetAddrIntHandler@handler:
  3071                           	opt callstack 0
  3072  000104                     I2C2_SlaveSetWrColIntHandler@handler:
  3073                           	opt callstack 0
  3074  000104                     I2C2_SlaveSetBusColIntHandler@handler:
  3075                           	opt callstack 0
  3076  000104                     CMP1_SetIntHandler@handler:
  3077                           	opt callstack 0
  3078  000104                     ClearVars@i:
  3079                           	opt callstack 0
  3080  000104                     ___wmul@multiplier:
  3081                           	opt callstack 0
  3082  000104                     ___awmod@dividend:
  3083                           	opt callstack 0
  3084  000104                     isalpha@c:
  3085                           	opt callstack 0
  3086  000104                     isdigit@c:
  3087                           	opt callstack 0
  3088  000104                     isspace@c:
  3089                           	opt callstack 0
  3090  000104                     isupper@c:
  3091                           	opt callstack 0
  3092  000104                     strlen@s:
  3093                           	opt callstack 0
  3094  000104                     islower@c:
  3095                           	opt callstack 0
  3096  000104                     ___lmul@multiplier:
  3097                           	opt callstack 0
  3098  000104                     ___llmod@dividend:
  3099                           	opt callstack 0
  3100  000104                     ___aodiv@dividend:
  3101                           	opt callstack 0
  3102  000104                     ___aomod@dividend:
  3103                           	opt callstack 0
  3104                           
  3105                           ; 8 bytes @ 0x4
  3106  000104                     	ds	1
  3107  000105                     putch@txData:
  3108                           	opt callstack 0
  3109                           
  3110                           ; 1 bytes @ 0x5
  3111  000105                     	ds	1
  3112  000106                     ??_TMR5_Initialize:
  3113  000106                     ??_TMR1_Initialize:
  3114  000106                     ??_BuzzerTest:
  3115  000106                     ??_isupper:
  3116  000106                     ??_isalpha:
  3117  000106                     ??_isdigit:
  3118  000106                     ??_isspace:
  3119  000106                     ??_islower:
  3120  000106                     ?_fputc:
  3121                           	opt callstack 0
  3122  000106                     AnyAlarm@i:
  3123                           	opt callstack 0
  3124  000106                     AlarmInit@i:
  3125                           	opt callstack 0
  3126  000106                     ClearVars@i_4906:
  3127                           	opt callstack 0
  3128  000106                     ___wmul@multiplicand:
  3129                           	opt callstack 0
  3130  000106                     ___awmod@divisor:
  3131                           	opt callstack 0
  3132  000106                     fputc@c:
  3133                           	opt callstack 0
  3134  000106                     strlen@a:
  3135                           	opt callstack 0
  3136                           
  3137                           ; 2 bytes @ 0x6
  3138  000106                     	ds	2
  3139  000108                     ?_GetAlarmState:
  3140                           	opt callstack 0
  3141  000108                     BuzzerTest@note:
  3142                           	opt callstack 0
  3143  000108                     ___awmod@counter:
  3144                           	opt callstack 0
  3145  000108                     LCDMessage@str:
  3146                           	opt callstack 0
  3147  000108                     ___wmul@product:
  3148                           	opt callstack 0
  3149  000108                     fputc@fp:
  3150                           	opt callstack 0
  3151  000108                     ___lmul@multiplicand:
  3152                           	opt callstack 0
  3153  000108                     ___llmod@divisor:
  3154                           	opt callstack 0
  3155                           
  3156                           ; 4 bytes @ 0x8
  3157  000108                     	ds	1
  3158  000109                     ___awmod@sign:
  3159                           	opt callstack 0
  3160                           
  3161                           ; 1 bytes @ 0x9
  3162  000109                     	ds	1
  3163  00010A                     ??_LCDMessage:
  3164  00010A                     ??_fputc:
  3165  00010A                     ?_toupper:
  3166                           	opt callstack 0
  3167  00010A                     ?_HigherAlarm:
  3168                           	opt callstack 0
  3169  00010A                     ?_AdcSeeData:
  3170                           	opt callstack 0
  3171  00010A                     ?_AdcGetData:
  3172                           	opt callstack 0
  3173  00010A                     ?___awdiv:
  3174                           	opt callstack 0
  3175  00010A                     _isspace$5701:
  3176                           	opt callstack 0
  3177  00010A                     AdcDataReady@id:
  3178                           	opt callstack 0
  3179  00010A                     AdcSeeData@id:
  3180                           	opt callstack 0
  3181  00010A                     AdcGetData@id:
  3182                           	opt callstack 0
  3183  00010A                     ___awdiv@dividend:
  3184                           	opt callstack 0
  3185  00010A                     toupper@c:
  3186                           	opt callstack 0
  3187                           
  3188                           ; 2 bytes @ 0xA
  3189  00010A                     	ds	1
  3190  00010B                     ?_atoi:
  3191                           	opt callstack 0
  3192  00010B                     atoi@s:
  3193                           	opt callstack 0
  3194                           
  3195                           ; 2 bytes @ 0xB
  3196  00010B                     	ds	1
  3197  00010C                     ??_toupper:
  3198  00010C                     ??_HigherAlarm:
  3199  00010C                     ___llmod@counter:
  3200                           	opt callstack 0
  3201  00010C                     LCDMessage@length:
  3202                           	opt callstack 0
  3203  00010C                     AdcSeeData@data:
  3204                           	opt callstack 0
  3205  00010C                     AdcGetData@data:
  3206                           	opt callstack 0
  3207  00010C                     ___awdiv@divisor:
  3208                           	opt callstack 0
  3209  00010C                     ___lmul@product:
  3210                           	opt callstack 0
  3211  00010C                     ___aodiv@divisor:
  3212                           	opt callstack 0
  3213  00010C                     ___aomod@divisor:
  3214                           	opt callstack 0
  3215                           
  3216                           ; 8 bytes @ 0xC
  3217  00010C                     	ds	1
  3218  00010D                     ??_atoi:
  3219                           
  3220                           ; 1 bytes @ 0xD
  3221  00010D                     	ds	1
  3222  00010E                     ___awdiv@counter:
  3223                           	opt callstack 0
  3224  00010E                     LCDMessage@i:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 2 bytes @ 0xE
  3228  00010E                     	ds	1
  3229  00010F                     ?_stoa:
  3230                           	opt callstack 0
  3231  00010F                     ___awdiv@sign:
  3232                           	opt callstack 0
  3233  00010F                     stoa@fp:
  3234                           	opt callstack 0
  3235  00010F                     fputs@s:
  3236                           	opt callstack 0
  3237  00010F                     putchar@c:
  3238                           	opt callstack 0
  3239                           
  3240                           ; 2 bytes @ 0xF
  3241  00010F                     	ds	1
  3242  000110                     ?___aldiv:
  3243                           	opt callstack 0
  3244  000110                     LCDMessage1@str:
  3245                           	opt callstack 0
  3246  000110                     LCDMessage12@str1:
  3247                           	opt callstack 0
  3248  000110                     LCDMessage2@str:
  3249                           	opt callstack 0
  3250  000110                     ___awdiv@quotient:
  3251                           	opt callstack 0
  3252  000110                     _toupper$5789:
  3253                           	opt callstack 0
  3254  000110                     ___aldiv@dividend:
  3255                           	opt callstack 0
  3256                           
  3257                           ; 4 bytes @ 0x10
  3258  000110                     	ds	1
  3259  000111                     HigherAlarm@max:
  3260                           	opt callstack 0
  3261  000111                     stoa@s:
  3262                           	opt callstack 0
  3263  000111                     atoi@neg:
  3264                           	opt callstack 0
  3265  000111                     fputs@fp:
  3266                           	opt callstack 0
  3267                           
  3268                           ; 2 bytes @ 0x11
  3269  000111                     	ds	1
  3270  000112                     ?_SeePressureV_pa:
  3271                           	opt callstack 0
  3272  000112                     ?_GetIp:
  3273                           	opt callstack 0
  3274  000112                     ?_GetEp:
  3275                           	opt callstack 0
  3276  000112                     ?_GetTargetIp:
  3277                           	opt callstack 0
  3278  000112                     ?_GetTargetEp:
  3279                           	opt callstack 0
  3280  000112                     ?_GetPmax:
  3281                           	opt callstack 0
  3282  000112                     ?_GetMaxPressure:
  3283                           	opt callstack 0
  3284  000112                     ?_GetPressureV_pa:
  3285                           	opt callstack 0
  3286  000112                     LCDMessage12@str2:
  3287                           	opt callstack 0
  3288                           
  3289                           ; 2 bytes @ 0x12
  3290  000112                     	ds	1
  3291  000113                     ??_stoa:
  3292  000113                     fputs@c:
  3293                           	opt callstack 0
  3294  000113                     HigherAlarm@i:
  3295                           	opt callstack 0
  3296  000113                     _atoi$5674:
  3297                           	opt callstack 0
  3298                           
  3299                           ; 2 bytes @ 0x13
  3300  000113                     	ds	1
  3301  000114                     ??_SeePressureV_pa:
  3302  000114                     ??_LCDTest:
  3303  000114                     ??_GetIp:
  3304  000114                     ??_GetPressureV_pa:
  3305  000114                     ___aodiv@counter:
  3306                           	opt callstack 0
  3307  000114                     ___aomod@counter:
  3308                           	opt callstack 0
  3309  000114                     GetMaxPressure@temp:
  3310                           	opt callstack 0
  3311  000114                     fputs@i:
  3312                           	opt callstack 0
  3313  000114                     ___aldiv@divisor:
  3314                           	opt callstack 0
  3315  000114                     stoa@nuls:
  3316                           	opt callstack 0
  3317                           
  3318                           ; 7 bytes @ 0x14
  3319  000114                     	ds	1
  3320  000115                     ___aodiv@sign:
  3321                           	opt callstack 0
  3322  000115                     ___aomod@sign:
  3323                           	opt callstack 0
  3324  000115                     _atoi$5676:
  3325                           	opt callstack 0
  3326                           
  3327                           ; 2 bytes @ 0x15
  3328  000115                     	ds	1
  3329  000116                     ??_HighPressureAlarmLow:
  3330  000116                     ?_abs:
  3331                           	opt callstack 0
  3332  000116                     ?_pad:
  3333                           	opt callstack 0
  3334  000116                     GetPressureV_pa@adcv:
  3335                           	opt callstack 0
  3336  000116                     SeePressureV_pa@adcv:
  3337                           	opt callstack 0
  3338  000116                     pad@fp:
  3339                           	opt callstack 0
  3340  000116                     abs@a:
  3341                           	opt callstack 0
  3342  000116                     ___aodiv@quotient:
  3343                           	opt callstack 0
  3344  000116                     LCDTest@msg1:
  3345                           	opt callstack 0
  3346                           
  3347                           ; 17 bytes @ 0x16
  3348  000116                     	ds	1
  3349  000117                     _atoi$5675:
  3350                           	opt callstack 0
  3351  000117                     HighPressureAlarmLow@max:
  3352                           	opt callstack 0
  3353  000117                     _GetIp$4809:
  3354                           	opt callstack 0
  3355                           
  3356                           ; 2 bytes @ 0x17
  3357  000117                     	ds	1
  3358  000118                     ??_abs:
  3359  000118                     ___aldiv@counter:
  3360                           	opt callstack 0
  3361  000118                     SeePressureV_pa@p:
  3362                           	opt callstack 0
  3363  000118                     pad@buf:
  3364                           	opt callstack 0
  3365  000118                     atoi@n:
  3366                           	opt callstack 0
  3367  000118                     GetPressureV_pa@mv:
  3368                           	opt callstack 0
  3369                           
  3370                           ; 4 bytes @ 0x18
  3371  000118                     	ds	1
  3372  000119                     ___aldiv@sign:
  3373                           	opt callstack 0
  3374  000119                     _GetIp$4810:
  3375                           	opt callstack 0
  3376                           
  3377                           ; 2 bytes @ 0x19
  3378  000119                     	ds	1
  3379  00011A                     pad@p:
  3380                           	opt callstack 0
  3381  00011A                     SeePressureV_pa@mv:
  3382                           	opt callstack 0
  3383  00011A                     ___aldiv@quotient:
  3384                           	opt callstack 0
  3385                           
  3386                           ; 4 bytes @ 0x1A
  3387  00011A                     	ds	1
  3388  00011B                     stoa@i:
  3389                           	opt callstack 0
  3390                           
  3391                           ; 2 bytes @ 0x1B
  3392  00011B                     	ds	1
  3393  00011C                     ??_pad:
  3394  00011C                     GetPressureV_pa@p:
  3395                           	opt callstack 0
  3396                           
  3397                           ; 2 bytes @ 0x1C
  3398  00011C                     	ds	1
  3399  00011D                     pad@i:
  3400                           	opt callstack 0
  3401  00011D                     stoa@w:
  3402                           	opt callstack 0
  3403                           
  3404                           ; 2 bytes @ 0x1D
  3405  00011D                     	ds	1
  3406  00011E                     ?_SeePressure_pa:
  3407                           	opt callstack 0
  3408  00011E                     ?_See12V:
  3409                           	opt callstack 0
  3410  00011E                     ?_See5V:
  3411                           	opt callstack 0
  3412  00011E                     ?_Get12V:
  3413                           	opt callstack 0
  3414  00011E                     ?_Get5V:
  3415                           	opt callstack 0
  3416  00011E                     ?_GetPressure_pa:
  3417                           	opt callstack 0
  3418                           
  3419                           ; 2 bytes @ 0x1E
  3420  00011E                     	ds	1
  3421  00011F                     pad@w:
  3422                           	opt callstack 0
  3423  00011F                     stoa@cp:
  3424                           	opt callstack 0
  3425                           
  3426                           ; 2 bytes @ 0x1F
  3427  00011F                     	ds	1
  3428  000120                     ??_SeePressure_pa:
  3429  000120                     ??_GetPressure_pa:
  3430  000120                     See5V@mv:
  3431                           	opt callstack 0
  3432  000120                     Get5V@mv:
  3433                           	opt callstack 0
  3434  000120                     See12V@mv:
  3435                           	opt callstack 0
  3436  000120                     Get12V@mv:
  3437                           	opt callstack 0
  3438                           
  3439                           ; 4 bytes @ 0x20
  3440  000120                     	ds	1
  3441  000121                     ?_ctoa:
  3442                           	opt callstack 0
  3443  000121                     ?_dtoa:
  3444                           	opt callstack 0
  3445  000121                     ?_xtoa:
  3446                           	opt callstack 0
  3447  000121                     ctoa@fp:
  3448                           	opt callstack 0
  3449  000121                     dtoa@fp:
  3450                           	opt callstack 0
  3451  000121                     stoa@p:
  3452                           	opt callstack 0
  3453  000121                     xtoa@fp:
  3454                           	opt callstack 0
  3455                           
  3456                           ; 2 bytes @ 0x21
  3457  000121                     	ds	1
  3458  000122                     GetPressure_pa@p32:
  3459                           	opt callstack 0
  3460  000122                     SeePressure_pa@p32:
  3461                           	opt callstack 0
  3462                           
  3463                           ; 4 bytes @ 0x22
  3464  000122                     	ds	1
  3465  000123                     ctoa@c:
  3466                           	opt callstack 0
  3467  000123                     stoa@l:
  3468                           	opt callstack 0
  3469  000123                     dtoa@d:
  3470                           	opt callstack 0
  3471  000123                     xtoa@d:
  3472                           	opt callstack 0
  3473                           
  3474                           ; 8 bytes @ 0x23
  3475  000123                     	ds	1
  3476  000124                     See5V@adc:
  3477                           	opt callstack 0
  3478  000124                     Get5V@adc:
  3479                           	opt callstack 0
  3480  000124                     See12V@adc:
  3481                           	opt callstack 0
  3482  000124                     Get12V@adc:
  3483                           	opt callstack 0
  3484  000124                     ctoa@w:
  3485                           	opt callstack 0
  3486                           
  3487                           ; 2 bytes @ 0x24
  3488  000124                     	ds	2
  3489  000126                     GetPressure_pa@adc:
  3490                           	opt callstack 0
  3491  000126                     SeePressure_pa@adc:
  3492                           	opt callstack 0
  3493  000126                     See5V@v12:
  3494                           	opt callstack 0
  3495  000126                     Get5V@v12:
  3496                           	opt callstack 0
  3497  000126                     See12V@v12:
  3498                           	opt callstack 0
  3499  000126                     Get12V@v12:
  3500                           	opt callstack 0
  3501                           
  3502                           ; 2 bytes @ 0x26
  3503  000126                     	ds	1
  3504  000127                     LCDTest@msg2:
  3505                           	opt callstack 0
  3506                           
  3507                           ; 17 bytes @ 0x27
  3508  000127                     	ds	1
  3509  000128                     BatteryFailAlarm@bat:
  3510                           	opt callstack 0
  3511  000128                     GetPressure_pa@p:
  3512                           	opt callstack 0
  3513  000128                     SeePressure_pa@p:
  3514                           	opt callstack 0
  3515                           
  3516                           ; 2 bytes @ 0x28
  3517  000128                     	ds	2
  3518  00012A                     GetPressure_pa@mv:
  3519                           	opt callstack 0
  3520  00012A                     SeePressure_pa@mv:
  3521                           	opt callstack 0
  3522                           
  3523                           ; 4 bytes @ 0x2A
  3524  00012A                     	ds	1
  3525  00012B                     ??_dtoa:
  3526  00012B                     xtoa@x:
  3527                           	opt callstack 0
  3528                           
  3529                           ; 1 bytes @ 0x2B
  3530  00012B                     	ds	1
  3531  00012C                     ??_xtoa:
  3532                           
  3533                           ; 1 bytes @ 0x2C
  3534  00012C                     	ds	7
  3535  000133                     _dtoa$5178:
  3536                           	opt callstack 0
  3537                           
  3538                           ; 2 bytes @ 0x33
  3539  000133                     	ds	1
  3540  000134                     _xtoa$5199:
  3541                           	opt callstack 0
  3542                           
  3543                           ; 2 bytes @ 0x34
  3544  000134                     	ds	1
  3545  000135                     dtoa@p:
  3546                           	opt callstack 0
  3547                           
  3548                           ; 2 bytes @ 0x35
  3549  000135                     	ds	1
  3550  000136                     _xtoa$5200:
  3551                           	opt callstack 0
  3552                           
  3553                           ; 2 bytes @ 0x36
  3554  000136                     	ds	1
  3555  000137                     dtoa@w:
  3556                           	opt callstack 0
  3557                           
  3558                           ; 2 bytes @ 0x37
  3559  000137                     	ds	1
  3560  000138                     LCDTest@i:
  3561                           	opt callstack 0
  3562  000138                     xtoa@p:
  3563                           	opt callstack 0
  3564                           
  3565                           ; 2 bytes @ 0x38
  3566  000138                     	ds	1
  3567  000139                     dtoa@s:
  3568                           	opt callstack 0
  3569                           
  3570                           ; 2 bytes @ 0x39
  3571  000139                     	ds	1
  3572  00013A                     LCDTest@j:
  3573                           	opt callstack 0
  3574  00013A                     xtoa@w:
  3575                           	opt callstack 0
  3576                           
  3577                           ; 2 bytes @ 0x3A
  3578  00013A                     	ds	1
  3579  00013B                     dtoa@n:
  3580                           	opt callstack 0
  3581                           
  3582                           ; 8 bytes @ 0x3B
  3583  00013B                     	ds	1
  3584  00013C                     ??_LCDInit:
  3585  00013C                     xtoa@n:
  3586                           	opt callstack 0
  3587                           
  3588                           ; 8 bytes @ 0x3C
  3589  00013C                     	ds	2
  3590  00013E                     
  3591                           ; 1 bytes @ 0x3E
  3592  00013E                     	ds	5
  3593  000143                     dtoa@i:
  3594                           	opt callstack 0
  3595                           
  3596                           ; 2 bytes @ 0x43
  3597  000143                     	ds	1
  3598  000144                     xtoa@i:
  3599                           	opt callstack 0
  3600                           
  3601                           ; 2 bytes @ 0x44
  3602  000144                     	ds	2
  3603  000146                     xtoa@c:
  3604                           	opt callstack 0
  3605                           
  3606                           ; 2 bytes @ 0x46
  3607  000146                     	ds	2
  3608  000148                     ?_vfpfcnvrt:
  3609                           	opt callstack 0
  3610  000148                     vfpfcnvrt@fp:
  3611                           	opt callstack 0
  3612                           
  3613                           ; 2 bytes @ 0x48
  3614  000148                     	ds	2
  3615  00014A                     vfpfcnvrt@fmt:
  3616                           	opt callstack 0
  3617                           
  3618                           ; 2 bytes @ 0x4A
  3619  00014A                     	ds	2
  3620  00014C                     vfpfcnvrt@ap:
  3621                           	opt callstack 0
  3622                           
  3623                           ; 2 bytes @ 0x4C
  3624  00014C                     	ds	2
  3625  00014E                     ??_vfpfcnvrt:
  3626                           
  3627                           ; 1 bytes @ 0x4E
  3628  00014E                     	ds	4
  3629  000152                     vfpfcnvrt@ll:
  3630                           	opt callstack 0
  3631                           
  3632                           ; 8 bytes @ 0x52
  3633  000152                     	ds	8
  3634  00015A                     vfpfcnvrt@llu:
  3635                           	opt callstack 0
  3636                           
  3637                           ; 8 bytes @ 0x5A
  3638  00015A                     	ds	8
  3639  000162                     vfpfcnvrt@cp:
  3640                           	opt callstack 0
  3641                           
  3642                           ; 2 bytes @ 0x62
  3643  000162                     	ds	2
  3644  000164                     vfpfcnvrt@done:
  3645                           	opt callstack 0
  3646                           
  3647                           ; 2 bytes @ 0x64
  3648  000164                     	ds	2
  3649  000166                     _vfpfcnvrt$5214:
  3650                           	opt callstack 0
  3651                           
  3652                           ; 2 bytes @ 0x66
  3653  000166                     	ds	2
  3654  000168                     vfpfcnvrt@c:
  3655                           	opt callstack 0
  3656                           
  3657                           ; 1 bytes @ 0x68
  3658  000168                     	ds	1
  3659  000169                     ?_vfprintf:
  3660                           	opt callstack 0
  3661  000169                     vfprintf@fp:
  3662                           	opt callstack 0
  3663                           
  3664                           ; 2 bytes @ 0x69
  3665  000169                     	ds	2
  3666  00016B                     vfprintf@fmt:
  3667                           	opt callstack 0
  3668                           
  3669                           ; 2 bytes @ 0x6B
  3670  00016B                     	ds	2
  3671  00016D                     vfprintf@ap:
  3672                           	opt callstack 0
  3673                           
  3674                           ; 2 bytes @ 0x6D
  3675  00016D                     	ds	2
  3676  00016F                     vfprintf@cfmt:
  3677                           	opt callstack 0
  3678                           
  3679                           ; 2 bytes @ 0x6F
  3680  00016F                     	ds	2
  3681  000171                     ?_printf:
  3682                           	opt callstack 0
  3683  000171                     ?_sprintf:
  3684                           	opt callstack 0
  3685  000171                     sprintf@s:
  3686                           	opt callstack 0
  3687  000171                     printf@fmt:
  3688                           	opt callstack 0
  3689                           
  3690                           ; 2 bytes @ 0x71
  3691  000171                     	ds	2
  3692  000173                     sprintf@fmt:
  3693                           	opt callstack 0
  3694                           
  3695                           ; 2 bytes @ 0x73
  3696  000173                     	ds	12
  3697  00017F                     
  3698                           ; 1 bytes @ 0x7F
  3699  00017F                     	ds	2
  3700  000181                     printf@ap:
  3701                           	opt callstack 0
  3702                           
  3703                           ; 2 bytes @ 0x81
  3704  000181                     	ds	2
  3705  000183                     ??_BuzzerCheck:
  3706  000183                     ??_BuzzerTask:
  3707  000183                     _MonitorFailAlarm$4446:
  3708                           	opt callstack 0
  3709  000183                     SetCalibrateState@calib:
  3710                           	opt callstack 0
  3711  000183                     SetAlarmSV1@value:
  3712                           	opt callstack 0
  3713  000183                     SetSV1@value:
  3714                           	opt callstack 0
  3715  000183                     TestAlarm@id:
  3716                           	opt callstack 0
  3717                           
  3718                           ; 2 bytes @ 0x83
  3719  000183                     	ds	1
  3720  000184                     MonitorFailAlarm@v5:
  3721                           	opt callstack 0
  3722                           
  3723                           ; 2 bytes @ 0x84
  3724  000184                     	ds	1
  3725  000185                     ??_TestAlarm:
  3726  000185                     BuzzerSet@state:
  3727                           	opt callstack 0
  3728  000185                     sprintf@ap:
  3729                           	opt callstack 0
  3730                           
  3731                           ; 2 bytes @ 0x85
  3732  000185                     	ds	1
  3733  000186                     _MuteAlarm$4543:
  3734                           	opt callstack 0
  3735                           
  3736                           ; 1 bytes @ 0x86
  3737  000186                     	ds	1
  3738  000187                     MuteAlarm@high:
  3739                           	opt callstack 0
  3740  000187                     sprintf@f:
  3741                           	opt callstack 0
  3742                           
  3743                           ; 6 bytes @ 0x87
  3744  000187                     	ds	2
  3745  000189                     TestAlarm@i:
  3746                           	opt callstack 0
  3747                           
  3748                           ; 2 bytes @ 0x89
  3749  000189                     	ds	4
  3750  00018D                     
  3751                           ; 1 bytes @ 0x8D
  3752  00018D                     	ds	8
  3753  000195                     ValueDisplay@pi:
  3754                           	opt callstack 0
  3755                           
  3756                           ; 2 bytes @ 0x95
  3757  000195                     	ds	2
  3758  000197                     ValueDisplay@pe:
  3759                           	opt callstack 0
  3760                           
  3761                           ; 2 bytes @ 0x97
  3762  000197                     	ds	2
  3763  000199                     ValueDisplay@vol:
  3764                           	opt callstack 0
  3765                           
  3766                           ; 2 bytes @ 0x99
  3767  000199                     	ds	2
  3768  00019B                     ValueDisplay@pmax:
  3769                           	opt callstack 0
  3770                           
  3771                           ; 2 bytes @ 0x9B
  3772  00019B                     	ds	2
  3773  00019D                     ValueDisplay@spr:
  3774                           	opt callstack 0
  3775                           
  3776                           ; 2 bytes @ 0x9D
  3777  00019D                     	ds	2
  3778  00019F                     _ValueDisplay$6530:
  3779                           	opt callstack 0
  3780                           
  3781                           ; 2 bytes @ 0x9F
  3782  00019F                     	ds	2
  3783  0001A1                     ValueDisplay@eti:
  3784                           	opt callstack 0
  3785                           
  3786                           ; 1 bytes @ 0xA1
  3787  0001A1                     	ds	1
  3788  0001A2                     ValueDisplay@ete:
  3789                           	opt callstack 0
  3790                           
  3791                           ; 1 bytes @ 0xA2
  3792  0001A2                     	ds	1
  3793  0001A3                     ValueDisplay@dtdi:
  3794                           	opt callstack 0
  3795                           
  3796                           ; 1 bytes @ 0xA3
  3797  0001A3                     	ds	1
  3798  0001A4                     ValueDisplay@dtde:
  3799                           	opt callstack 0
  3800                           
  3801                           ; 1 bytes @ 0xA4
  3802  0001A4                     	ds	1
  3803  0001A5                     ValueDisplay@dr:
  3804                           	opt callstack 0
  3805                           
  3806                           ; 1 bytes @ 0xA5
  3807  0001A5                     	ds	1
  3808  0001A6                     _ValueDisplay$4007:
  3809                           	opt callstack 0
  3810                           
  3811                           ; 2 bytes @ 0xA6
  3812  0001A6                     	ds	2
  3813  0001A8                     _ValueDisplay$4008:
  3814                           	opt callstack 0
  3815                           
  3816                           ; 2 bytes @ 0xA8
  3817  0001A8                     	ds	2
  3818  0001AA                     ValueDisplay@tdi:
  3819                           	opt callstack 0
  3820                           
  3821                           ; 2 bytes @ 0xAA
  3822  0001AA                     	ds	2
  3823  0001AC                     ValueDisplay@tde:
  3824                           	opt callstack 0
  3825                           
  3826                           ; 2 bytes @ 0xAC
  3827  0001AC                     	ds	2
  3828  0001AE                     ValueDisplay@etdi:
  3829                           	opt callstack 0
  3830                           
  3831                           ; 1 bytes @ 0xAE
  3832  0001AE                     	ds	1
  3833  0001AF                     ValueDisplay@etde:
  3834                           	opt callstack 0
  3835                           
  3836                           ; 1 bytes @ 0xAF
  3837  0001AF                     	ds	1
  3838  0001B0                     ValueDisplay@er:
  3839                           	opt callstack 0
  3840                           
  3841                           ; 1 bytes @ 0xB0
  3842  0001B0                     	ds	1
  3843  0001B1                     ValueDisplay@r:
  3844                           	opt callstack 0
  3845                           
  3846                           ; 2 bytes @ 0xB1
  3847  0001B1                     	ds	2
  3848  0001B3                     ValueDisplay@te:
  3849                           	opt callstack 0
  3850                           
  3851                           ; 2 bytes @ 0xB3
  3852  0001B3                     	ds	2
  3853  0001B5                     ValueDisplay@ti:
  3854                           	opt callstack 0
  3855                           
  3856                           ; 2 bytes @ 0xB5
  3857  0001B5                     	ds	2
  3858  0001B7                     AlarmDisplay@type:
  3859                           	opt callstack 0
  3860                           
  3861                           ; 2 bytes @ 0xB7
  3862  0001B7                     	ds	2
  3863  0001B9                     AlarmDisplay@alarm:
  3864                           	opt callstack 0
  3865                           
  3866                           ; 2 bytes @ 0xB9
  3867  0001B9                     	ds	2
  3868  0001BB                     AlarmDisplay@t:
  3869                           	opt callstack 0
  3870                           
  3871                           ; 1 bytes @ 0xBB
  3872  0001BB                     	ds	1
  3873  0001BC                     _AlarmDisplay$4015:
  3874                           	opt callstack 0
  3875                           
  3876                           ; 2 bytes @ 0xBC
  3877  0001BC                     	ds	2
  3878  0001BE                     _AlarmDisplay$4016:
  3879                           	opt callstack 0
  3880                           
  3881                           ; 2 bytes @ 0xBE
  3882  0001BE                     	ds	2
  3883  0001C0                     AlarmUpdateLCD@id:
  3884                           	opt callstack 0
  3885                           
  3886                           ; 2 bytes @ 0xC0
  3887  0001C0                     	ds	2
  3888  0001C2                     _AlarmUpdateLCD$6531:
  3889                           	opt callstack 0
  3890                           
  3891                           ; 2 bytes @ 0xC2
  3892  0001C2                     	ds	2
  3893  0001C4                     _AlarmUpdateLCD$6532:
  3894                           	opt callstack 0
  3895                           
  3896                           ; 2 bytes @ 0xC4
  3897  0001C4                     	ds	2
  3898  0001C6                     ??_main:
  3899                           
  3900                           ; 1 bytes @ 0xC6
  3901  0001C6                     	ds	1
  3902                           
  3903                           	psect	cstackBANK0
  3904  000060                     __pcstackBANK0:
  3905                           	opt callstack 0
  3906  000060                     i2vfpfcnvrt@ll:
  3907                           	opt callstack 0
  3908                           
  3909                           ; 8 bytes @ 0x0
  3910  000060                     	ds	8
  3911  000068                     i2vfpfcnvrt@llu:
  3912                           	opt callstack 0
  3913                           
  3914                           ; 8 bytes @ 0x8
  3915  000068                     	ds	8
  3916  000070                     i2vfpfcnvrt@cp:
  3917                           	opt callstack 0
  3918                           
  3919                           ; 2 bytes @ 0x10
  3920  000070                     	ds	2
  3921  000072                     i2vfpfcnvrt@done:
  3922                           	opt callstack 0
  3923                           
  3924                           ; 2 bytes @ 0x12
  3925  000072                     	ds	2
  3926  000074                     i2_vfpfcnvrt$5214:
  3927                           	opt callstack 0
  3928                           
  3929                           ; 2 bytes @ 0x14
  3930  000074                     	ds	2
  3931  000076                     i2vfpfcnvrt@c:
  3932                           	opt callstack 0
  3933                           
  3934                           ; 1 bytes @ 0x16
  3935  000076                     	ds	1
  3936  000077                     ?i2_sprintf:
  3937                           	opt callstack 0
  3938  000077                     ?i2_printf:
  3939                           	opt callstack 0
  3940  000077                     i2sprintf@s:
  3941                           	opt callstack 0
  3942  000077                     i2printf@fmt:
  3943                           	opt callstack 0
  3944                           
  3945                           ; 2 bytes @ 0x17
  3946  000077                     	ds	2
  3947  000079                     i2sprintf@fmt:
  3948                           	opt callstack 0
  3949                           
  3950                           ; 2 bytes @ 0x19
  3951  000079                     	ds	8
  3952  000081                     i2_MuteAlarm$4543:
  3953                           	opt callstack 0
  3954                           
  3955                           ; 1 bytes @ 0x21
  3956  000081                     	ds	1
  3957  000082                     i2MuteAlarm@high:
  3958                           	opt callstack 0
  3959                           
  3960                           ; 2 bytes @ 0x22
  3961  000082                     	ds	9
  3962  00008B                     i2sprintf@ap:
  3963                           	opt callstack 0
  3964                           
  3965                           ; 2 bytes @ 0x2B
  3966  00008B                     	ds	2
  3967  00008D                     i2sprintf@f:
  3968                           	opt callstack 0
  3969                           
  3970                           ; 6 bytes @ 0x2D
  3971  00008D                     	ds	6
  3972  000093                     DisplayCalibrate@pr:
  3973                           	opt callstack 0
  3974                           
  3975                           ; 2 bytes @ 0x33
  3976  000093                     	ds	2
  3977  000095                     DisplayCalibrate@off:
  3978                           	opt callstack 0
  3979                           
  3980                           ; 2 bytes @ 0x35
  3981  000095                     	ds	2
  3982  000097                     DisplayCalibrate@prv:
  3983                           	opt callstack 0
  3984                           
  3985                           ; 2 bytes @ 0x37
  3986  000097                     	ds	2
  3987  000099                     DisplayCalibrate@offv:
  3988                           	opt callstack 0
  3989                           
  3990                           ; 2 bytes @ 0x39
  3991  000099                     	ds	2
  3992  00009B                     MonitorPressureTask@v12:
  3993                           	opt callstack 0
  3994  00009B                     i2ValueDisplay@pi:
  3995                           	opt callstack 0
  3996                           
  3997                           ; 2 bytes @ 0x3B
  3998  00009B                     	ds	2
  3999  00009D                     MonitorPressureTask@v5:
  4000                           	opt callstack 0
  4001  00009D                     i2ValueDisplay@pe:
  4002                           	opt callstack 0
  4003                           
  4004                           ; 2 bytes @ 0x3D
  4005  00009D                     	ds	2
  4006  00009F                     MonitorPressureTask@halfLimit:
  4007                           	opt callstack 0
  4008  00009F                     i2ValueDisplay@vol:
  4009                           	opt callstack 0
  4010                           
  4011                           ; 2 bytes @ 0x3F
  4012  00009F                     	ds	2
  4013  0000A1                     MonitorPressureTask@v1:
  4014                           	opt callstack 0
  4015  0000A1                     i2ValueDisplay@pmax:
  4016                           	opt callstack 0
  4017                           
  4018                           ; 2 bytes @ 0x41
  4019  0000A1                     	ds	2
  4020  0000A3                     _MonitorPressureTask$4886:
  4021                           	opt callstack 0
  4022  0000A3                     i2ValueDisplay@spr:
  4023                           	opt callstack 0
  4024                           
  4025                           ; 2 bytes @ 0x43
  4026  0000A3                     	ds	2
  4027  0000A5                     _MonitorPressureTask$4895:
  4028                           	opt callstack 0
  4029  0000A5                     i2_ValueDisplay$7130:
  4030                           	opt callstack 0
  4031                           
  4032                           ; 2 bytes @ 0x45
  4033  0000A5                     	ds	2
  4034  0000A7                     i2ValueDisplay@eti:
  4035                           	opt callstack 0
  4036  0000A7                     _MonitorPressureTask$4896:
  4037                           	opt callstack 0
  4038                           
  4039                           ; 2 bytes @ 0x47
  4040  0000A7                     	ds	1
  4041  0000A8                     i2ValueDisplay@ete:
  4042                           	opt callstack 0
  4043                           
  4044                           ; 1 bytes @ 0x48
  4045  0000A8                     	ds	1
  4046  0000A9                     i2ValueDisplay@dtdi:
  4047                           	opt callstack 0
  4048  0000A9                     _MonitorPressureTask$4898:
  4049                           	opt callstack 0
  4050                           
  4051                           ; 2 bytes @ 0x49
  4052  0000A9                     	ds	1
  4053  0000AA                     i2ValueDisplay@dtde:
  4054                           	opt callstack 0
  4055                           
  4056                           ; 1 bytes @ 0x4A
  4057  0000AA                     	ds	1
  4058  0000AB                     i2ValueDisplay@dr:
  4059                           	opt callstack 0
  4060  0000AB                     _MonitorPressureTask$4899:
  4061                           	opt callstack 0
  4062                           
  4063                           ; 2 bytes @ 0x4B
  4064  0000AB                     	ds	1
  4065  0000AC                     i2_ValueDisplay$4007:
  4066                           	opt callstack 0
  4067                           
  4068                           ; 2 bytes @ 0x4C
  4069  0000AC                     	ds	1
  4070  0000AD                     MonitorPressureTask@adcv:
  4071                           	opt callstack 0
  4072                           
  4073                           ; 2 bytes @ 0x4D
  4074  0000AD                     	ds	1
  4075  0000AE                     i2_ValueDisplay$4008:
  4076                           	opt callstack 0
  4077                           
  4078                           ; 2 bytes @ 0x4E
  4079  0000AE                     	ds	1
  4080  0000AF                     MonitorPressureTask@tmp:
  4081                           	opt callstack 0
  4082                           
  4083                           ; 2 bytes @ 0x4F
  4084  0000AF                     	ds	1
  4085  0000B0                     i2ValueDisplay@tdi:
  4086                           	opt callstack 0
  4087                           
  4088                           ; 2 bytes @ 0x50
  4089  0000B0                     	ds	1
  4090  0000B1                     MonitorPressureTask@tmp2:
  4091                           	opt callstack 0
  4092                           
  4093                           ; 2 bytes @ 0x51
  4094  0000B1                     	ds	1
  4095  0000B2                     i2ValueDisplay@tde:
  4096                           	opt callstack 0
  4097                           
  4098                           ; 2 bytes @ 0x52
  4099  0000B2                     	ds	1
  4100  0000B3                     MonitorPressureTask@v2:
  4101                           	opt callstack 0
  4102                           
  4103                           ; 2 bytes @ 0x53
  4104  0000B3                     	ds	1
  4105  0000B4                     i2ValueDisplay@etdi:
  4106                           	opt callstack 0
  4107                           
  4108                           ; 1 bytes @ 0x54
  4109  0000B4                     	ds	1
  4110  0000B5                     i2ValueDisplay@etde:
  4111                           	opt callstack 0
  4112  0000B5                     MonitorPressureTask@next:
  4113                           	opt callstack 0
  4114                           
  4115                           ; 2 bytes @ 0x55
  4116  0000B5                     	ds	1
  4117  0000B6                     i2ValueDisplay@er:
  4118                           	opt callstack 0
  4119                           
  4120                           ; 1 bytes @ 0x56
  4121  0000B6                     	ds	1
  4122  0000B7                     MonitorPressureTask@i_4894:
  4123                           	opt callstack 0
  4124  0000B7                     i2ValueDisplay@r:
  4125                           	opt callstack 0
  4126                           
  4127                           ; 2 bytes @ 0x57
  4128  0000B7                     	ds	2
  4129  0000B9                     MonitorPressureTask@i_4897:
  4130                           	opt callstack 0
  4131  0000B9                     i2ValueDisplay@te:
  4132                           	opt callstack 0
  4133                           
  4134                           ; 2 bytes @ 0x59
  4135  0000B9                     	ds	2
  4136  0000BB                     MonitorPressureTask@temp:
  4137                           	opt callstack 0
  4138  0000BB                     i2ValueDisplay@ti:
  4139                           	opt callstack 0
  4140                           
  4141                           ; 2 bytes @ 0x5B
  4142  0000BB                     	ds	2
  4143  0000BD                     ??_UpdateState:
  4144  0000BD                     MonitorPressureTask@i:
  4145                           	opt callstack 0
  4146  0000BD                     i2AlarmDisplay@type:
  4147                           	opt callstack 0
  4148                           
  4149                           ; 2 bytes @ 0x5D
  4150  0000BD                     	ds	2
  4151  0000BF                     MonitorPressureTask@i_4881:
  4152                           	opt callstack 0
  4153  0000BF                     i2AlarmDisplay@alarm:
  4154                           	opt callstack 0
  4155                           
  4156                           ; 2 bytes @ 0x5F
  4157  0000BF                     	ds	2
  4158  0000C1                     MonitorPressureTask@pr:
  4159                           	opt callstack 0
  4160  0000C1                     i2AlarmUpdateLCD@id:
  4161                           	opt callstack 0
  4162                           
  4163                           ; 2 bytes @ 0x61
  4164  0000C1                     	ds	2
  4165  0000C3                     i2_AlarmUpdateLCD$7131:
  4166                           	opt callstack 0
  4167                           
  4168                           ; 2 bytes @ 0x63
  4169  0000C3                     	ds	2
  4170  0000C5                     i2_AlarmUpdateLCD$7132:
  4171                           	opt callstack 0
  4172                           
  4173                           ; 2 bytes @ 0x65
  4174  0000C5                     	ds	2
  4175  0000C7                     ??_ButtonTask:
  4176                           
  4177                           ; 1 bytes @ 0x67
  4178  0000C7                     	ds	1
  4179                           
  4180                           	psect	cstackCOMRAM
  4181  000001                     __pcstackCOMRAM:
  4182                           	opt callstack 0
  4183  000001                     ?_isqrt:
  4184                           	opt callstack 0
  4185  000001                     ?_ADCC_GetConversionResult:
  4186                           	opt callstack 0
  4187  000001                     ?___lwdiv:
  4188                           	opt callstack 0
  4189  000001                     ?i2_GetTde:
  4190                           	opt callstack 0
  4191  000001                     ?i2_GetTdi:
  4192                           	opt callstack 0
  4193  000001                     ?i2_GetTi:
  4194                           	opt callstack 0
  4195  000001                     ?i2_GetTe:
  4196                           	opt callstack 0
  4197  000001                     ?i2_GetBpm:
  4198                           	opt callstack 0
  4199  000001                     ?i2_GetVolume:
  4200                           	opt callstack 0
  4201  000001                     ?i2_GetSpr:
  4202                           	opt callstack 0
  4203  000001                     ?i2___wmul:
  4204                           	opt callstack 0
  4205  000001                     ?i2___awmod:
  4206                           	opt callstack 0
  4207  000001                     ?i2_isalpha:
  4208                           	opt callstack 0
  4209  000001                     ?i2_isdigit:
  4210                           	opt callstack 0
  4211  000001                     ?i2_isspace:
  4212                           	opt callstack 0
  4213  000001                     ?i2_isupper:
  4214                           	opt callstack 0
  4215  000001                     ?i2_strlen:
  4216                           	opt callstack 0
  4217  000001                     ?i2_islower:
  4218                           	opt callstack 0
  4219  000001                     ?___lldiv:
  4220                           	opt callstack 0
  4221  000001                     ?i2___lmul:
  4222                           	opt callstack 0
  4223  000001                     ?i2___aodiv:
  4224                           	opt callstack 0
  4225  000001                     ?i2___aomod:
  4226                           	opt callstack 0
  4227  000001                     I2C2_SlaveSetCounter@counter:
  4228                           	opt callstack 0
  4229  000001                     GetControllerBuzzerCheck@tmp:
  4230                           	opt callstack 0
  4231  000001                     SetVolumeControl@vc:
  4232                           	opt callstack 0
  4233  000001                     i2ADCC_StartConversion@channel:
  4234                           	opt callstack 0
  4235  000001                     i2TMR4_Period8BitSet@periodVal:
  4236                           	opt callstack 0
  4237  000001                     i2UART1_Write@txData:
  4238                           	opt callstack 0
  4239  000001                     i2BuzzerOn@period:
  4240                           	opt callstack 0
  4241  000001                     isqrt@x:
  4242                           	opt callstack 0
  4243  000001                     TMR5_WriteTimer@timerVal:
  4244                           	opt callstack 0
  4245  000001                     TMR1_WriteTimer@timerVal:
  4246                           	opt callstack 0
  4247  000001                     SetMaxPressure@pr:
  4248                           	opt callstack 0
  4249  000001                     ___lwdiv@dividend:
  4250                           	opt callstack 0
  4251  000001                     i2ADCC_SetADTIInterruptHandler@InterruptHandler:
  4252                           	opt callstack 0
  4253  000001                     i2TMR4_SetInterruptHandler@InterruptHandler:
  4254                           	opt callstack 0
  4255  000001                     i2ClearVars@i:
  4256                           	opt callstack 0
  4257  000001                     i2___wmul@multiplier:
  4258                           	opt callstack 0
  4259  000001                     i2___awmod@dividend:
  4260                           	opt callstack 0
  4261  000001                     i2isalpha@c:
  4262                           	opt callstack 0
  4263  000001                     i2isdigit@c:
  4264                           	opt callstack 0
  4265  000001                     i2isspace@c:
  4266                           	opt callstack 0
  4267  000001                     i2isupper@c:
  4268                           	opt callstack 0
  4269  000001                     i2strlen@s:
  4270                           	opt callstack 0
  4271  000001                     i2islower@c:
  4272                           	opt callstack 0
  4273  000001                     ___lldiv@dividend:
  4274                           	opt callstack 0
  4275  000001                     i2___lmul@multiplier:
  4276                           	opt callstack 0
  4277  000001                     i2___aodiv@dividend:
  4278                           	opt callstack 0
  4279  000001                     i2___aomod@dividend:
  4280                           	opt callstack 0
  4281                           
  4282                           ; 8 bytes @ 0x0
  4283  000001                     	ds	1
  4284  000002                     i2putch@txData:
  4285                           	opt callstack 0
  4286                           
  4287                           ; 1 bytes @ 0x1
  4288  000002                     	ds	1
  4289  000003                     ??_isqrt:
  4290  000003                     ??_ADCC_GetConversionResult:
  4291  000003                     ??i2_isalpha:
  4292  000003                     ??i2_isdigit:
  4293  000003                     ??i2_isspace:
  4294  000003                     ??i2_isupper:
  4295  000003                     ??i2_islower:
  4296  000003                     ___lwdiv@divisor:
  4297                           	opt callstack 0
  4298  000003                     i2AnyAlarm@i:
  4299                           	opt callstack 0
  4300  000003                     i2ClearVars@i_4906:
  4301                           	opt callstack 0
  4302  000003                     i2___wmul@multiplicand:
  4303                           	opt callstack 0
  4304  000003                     i2___awmod@divisor:
  4305                           	opt callstack 0
  4306  000003                     i2fputc@c:
  4307                           	opt callstack 0
  4308  000003                     i2strlen@a:
  4309                           	opt callstack 0
  4310                           
  4311                           ; 2 bytes @ 0x2
  4312  000003                     	ds	1
  4313  000004                     ReceiveHandler@data:
  4314                           	opt callstack 0
  4315                           
  4316                           ; 1 bytes @ 0x3
  4317  000004                     	ds	1
  4318  000005                     ?i2_GetAlarmState:
  4319                           	opt callstack 0
  4320  000005                     i2___awmod@counter:
  4321                           	opt callstack 0
  4322  000005                     isqrt@op:
  4323                           	opt callstack 0
  4324  000005                     ___lwdiv@quotient:
  4325                           	opt callstack 0
  4326  000005                     i2___wmul@product:
  4327                           	opt callstack 0
  4328  000005                     i2fputc@fp:
  4329                           	opt callstack 0
  4330  000005                     ___lldiv@divisor:
  4331                           	opt callstack 0
  4332  000005                     i2___lmul@multiplicand:
  4333                           	opt callstack 0
  4334                           
  4335                           ; 4 bytes @ 0x4
  4336  000005                     	ds	1
  4337  000006                     i2___awmod@sign:
  4338                           	opt callstack 0
  4339                           
  4340                           ; 1 bytes @ 0x5
  4341  000006                     	ds	1
  4342  000007                     ??i2_fputc:
  4343  000007                     ?i2_HigherAlarm:
  4344                           	opt callstack 0
  4345  000007                     ?i2_AdcSeeData:
  4346                           	opt callstack 0
  4347  000007                     ?i2_AdcGetData:
  4348                           	opt callstack 0
  4349  000007                     ?i2___awdiv:
  4350                           	opt callstack 0
  4351  000007                     ?i2_toupper:
  4352                           	opt callstack 0
  4353  000007                     ___lwdiv@counter:
  4354                           	opt callstack 0
  4355  000007                     i2_isspace$5701:
  4356                           	opt callstack 0
  4357  000007                     isqrt@res:
  4358                           	opt callstack 0
  4359  000007                     i2AdcDataReady@id:
  4360                           	opt callstack 0
  4361  000007                     i2AdcSeeData@id:
  4362                           	opt callstack 0
  4363  000007                     i2AdcGetData@id:
  4364                           	opt callstack 0
  4365  000007                     i2___awdiv@dividend:
  4366                           	opt callstack 0
  4367  000007                     i2toupper@c:
  4368                           	opt callstack 0
  4369                           
  4370                           ; 2 bytes @ 0x6
  4371  000007                     	ds	1
  4372  000008                     ?i2_atoi:
  4373                           	opt callstack 0
  4374  000008                     i2atoi@s:
  4375                           	opt callstack 0
  4376                           
  4377                           ; 2 bytes @ 0x7
  4378  000008                     	ds	1
  4379  000009                     ??i2_HigherAlarm:
  4380  000009                     ??i2_toupper:
  4381  000009                     isqrt@one:
  4382                           	opt callstack 0
  4383  000009                     i2AdcSeeData@data:
  4384                           	opt callstack 0
  4385  000009                     i2AdcGetData@data:
  4386                           	opt callstack 0
  4387  000009                     i2___awdiv@divisor:
  4388                           	opt callstack 0
  4389  000009                     ___lldiv@quotient:
  4390                           	opt callstack 0
  4391  000009                     i2___lmul@product:
  4392                           	opt callstack 0
  4393  000009                     i2___aodiv@divisor:
  4394                           	opt callstack 0
  4395  000009                     i2___aomod@divisor:
  4396                           	opt callstack 0
  4397                           
  4398                           ; 8 bytes @ 0x8
  4399  000009                     	ds	1
  4400  00000A                     ??i2_atoi:
  4401                           
  4402                           ; 1 bytes @ 0x9
  4403  00000A                     	ds	1
  4404  00000B                     i2___awdiv@counter:
  4405                           	opt callstack 0
  4406                           
  4407                           ; 1 bytes @ 0xA
  4408  00000B                     	ds	1
  4409  00000C                     ?i2_stoa:
  4410                           	opt callstack 0
  4411  00000C                     i2___awdiv@sign:
  4412                           	opt callstack 0
  4413  00000C                     i2stoa@fp:
  4414                           	opt callstack 0
  4415  00000C                     i2fputs@s:
  4416                           	opt callstack 0
  4417                           
  4418                           ; 2 bytes @ 0xB
  4419  00000C                     	ds	1
  4420  00000D                     ?i2___aldiv:
  4421                           	opt callstack 0
  4422  00000D                     ___lldiv@counter:
  4423                           	opt callstack 0
  4424  00000D                     i2___awdiv@quotient:
  4425                           	opt callstack 0
  4426  00000D                     i2_toupper$5789:
  4427                           	opt callstack 0
  4428  00000D                     i2___aldiv@dividend:
  4429                           	opt callstack 0
  4430                           
  4431                           ; 4 bytes @ 0xC
  4432  00000D                     	ds	1
  4433  00000E                     i2HigherAlarm@max:
  4434                           	opt callstack 0
  4435  00000E                     i2stoa@s:
  4436                           	opt callstack 0
  4437  00000E                     i2atoi@neg:
  4438                           	opt callstack 0
  4439  00000E                     i2fputs@fp:
  4440                           	opt callstack 0
  4441                           
  4442                           ; 2 bytes @ 0xD
  4443  00000E                     	ds	1
  4444  00000F                     ?i2_GetEp:
  4445                           	opt callstack 0
  4446  00000F                     ?i2_GetIp:
  4447                           	opt callstack 0
  4448  00000F                     ?i2_GetPmax:
  4449                           	opt callstack 0
  4450  00000F                     ?i2_GetTargetIp:
  4451                           	opt callstack 0
  4452  00000F                     ?i2_GetTargetEp:
  4453                           	opt callstack 0
  4454  00000F                     ?i2_GetPressureV_pa:
  4455                           	opt callstack 0
  4456                           
  4457                           ; 2 bytes @ 0xE
  4458  00000F                     	ds	1
  4459  000010                     ??i2_stoa:
  4460  000010                     i2fputs@c:
  4461                           	opt callstack 0
  4462  000010                     i2HigherAlarm@i:
  4463                           	opt callstack 0
  4464  000010                     i2_atoi$5674:
  4465                           	opt callstack 0
  4466                           
  4467                           ; 2 bytes @ 0xF
  4468  000010                     	ds	1
  4469  000011                     ??i2_GetIp:
  4470  000011                     ??i2_GetPressureV_pa:
  4471  000011                     i2___aodiv@counter:
  4472                           	opt callstack 0
  4473  000011                     i2___aomod@counter:
  4474                           	opt callstack 0
  4475  000011                     i2fputs@i:
  4476                           	opt callstack 0
  4477  000011                     i2___aldiv@divisor:
  4478                           	opt callstack 0
  4479  000011                     i2stoa@nuls:
  4480                           	opt callstack 0
  4481                           
  4482                           ; 7 bytes @ 0x10
  4483  000011                     	ds	1
  4484  000012                     i2___aodiv@sign:
  4485                           	opt callstack 0
  4486  000012                     i2___aomod@sign:
  4487                           	opt callstack 0
  4488  000012                     i2_atoi$5676:
  4489                           	opt callstack 0
  4490                           
  4491                           ; 2 bytes @ 0x11
  4492  000012                     	ds	1
  4493  000013                     ?i2_pad:
  4494                           	opt callstack 0
  4495  000013                     ?i2_abs:
  4496                           	opt callstack 0
  4497  000013                     i2GetPressureV_pa@adcv:
  4498                           	opt callstack 0
  4499  000013                     i2pad@fp:
  4500                           	opt callstack 0
  4501  000013                     i2abs@a:
  4502                           	opt callstack 0
  4503  000013                     i2___aodiv@quotient:
  4504                           	opt callstack 0
  4505                           
  4506                           ; 8 bytes @ 0x12
  4507  000013                     	ds	1
  4508  000014                     i2_atoi$5675:
  4509                           	opt callstack 0
  4510  000014                     i2_GetIp$4809:
  4511                           	opt callstack 0
  4512                           
  4513                           ; 2 bytes @ 0x13
  4514  000014                     	ds	1
  4515  000015                     ??i2_abs:
  4516  000015                     i2___aldiv@counter:
  4517                           	opt callstack 0
  4518  000015                     i2pad@buf:
  4519                           	opt callstack 0
  4520  000015                     i2atoi@n:
  4521                           	opt callstack 0
  4522  000015                     i2GetPressureV_pa@mv:
  4523                           	opt callstack 0
  4524                           
  4525                           ; 4 bytes @ 0x14
  4526  000015                     	ds	1
  4527  000016                     i2___aldiv@sign:
  4528                           	opt callstack 0
  4529  000016                     i2_GetIp$4810:
  4530                           	opt callstack 0
  4531                           
  4532                           ; 2 bytes @ 0x15
  4533  000016                     	ds	1
  4534  000017                     i2pad@p:
  4535                           	opt callstack 0
  4536  000017                     i2___aldiv@quotient:
  4537                           	opt callstack 0
  4538                           
  4539                           ; 4 bytes @ 0x16
  4540  000017                     	ds	1
  4541  000018                     i2stoa@i:
  4542                           	opt callstack 0
  4543                           
  4544                           ; 2 bytes @ 0x17
  4545  000018                     	ds	1
  4546  000019                     ??i2_pad:
  4547  000019                     i2GetPressureV_pa@p:
  4548                           	opt callstack 0
  4549                           
  4550                           ; 2 bytes @ 0x18
  4551  000019                     	ds	1
  4552  00001A                     i2pad@i:
  4553                           	opt callstack 0
  4554  00001A                     i2stoa@w:
  4555                           	opt callstack 0
  4556                           
  4557                           ; 2 bytes @ 0x19
  4558  00001A                     	ds	1
  4559  00001B                     ?i2_GetPressure_pa:
  4560                           	opt callstack 0
  4561  00001B                     ?i2_See5V:
  4562                           	opt callstack 0
  4563  00001B                     ?i2_See12V:
  4564                           	opt callstack 0
  4565  00001B                     SetTarget@pmax:
  4566                           	opt callstack 0
  4567                           
  4568                           ; 2 bytes @ 0x1A
  4569  00001B                     	ds	1
  4570  00001C                     i2pad@w:
  4571                           	opt callstack 0
  4572  00001C                     i2stoa@cp:
  4573                           	opt callstack 0
  4574                           
  4575                           ; 2 bytes @ 0x1B
  4576  00001C                     	ds	1
  4577  00001D                     ??i2_GetPressure_pa:
  4578  00001D                     SetTarget@ip:
  4579                           	opt callstack 0
  4580  00001D                     i2See5V@mv:
  4581                           	opt callstack 0
  4582  00001D                     i2See12V@mv:
  4583                           	opt callstack 0
  4584                           
  4585                           ; 4 bytes @ 0x1C
  4586  00001D                     	ds	1
  4587  00001E                     ?i2_ctoa:
  4588                           	opt callstack 0
  4589  00001E                     ?i2_dtoa:
  4590                           	opt callstack 0
  4591  00001E                     ?i2_xtoa:
  4592                           	opt callstack 0
  4593  00001E                     i2ctoa@fp:
  4594                           	opt callstack 0
  4595  00001E                     i2dtoa@fp:
  4596                           	opt callstack 0
  4597  00001E                     i2stoa@p:
  4598                           	opt callstack 0
  4599  00001E                     i2xtoa@fp:
  4600                           	opt callstack 0
  4601                           
  4602                           ; 2 bytes @ 0x1D
  4603  00001E                     	ds	1
  4604  00001F                     SetTarget@ep:
  4605                           	opt callstack 0
  4606  00001F                     i2GetPressure_pa@p32:
  4607                           	opt callstack 0
  4608                           
  4609                           ; 4 bytes @ 0x1E
  4610  00001F                     	ds	1
  4611  000020                     i2ctoa@c:
  4612                           	opt callstack 0
  4613  000020                     i2stoa@l:
  4614                           	opt callstack 0
  4615  000020                     i2dtoa@d:
  4616                           	opt callstack 0
  4617  000020                     i2xtoa@d:
  4618                           	opt callstack 0
  4619                           
  4620                           ; 8 bytes @ 0x1F
  4621  000020                     	ds	1
  4622  000021                     SetTarget@br:
  4623                           	opt callstack 0
  4624  000021                     i2See5V@adc:
  4625                           	opt callstack 0
  4626  000021                     i2See12V@adc:
  4627                           	opt callstack 0
  4628  000021                     i2ctoa@w:
  4629                           	opt callstack 0
  4630                           
  4631                           ; 2 bytes @ 0x20
  4632  000021                     	ds	2
  4633  000023                     SetTarget@vmax:
  4634                           	opt callstack 0
  4635  000023                     i2GetPressure_pa@adc:
  4636                           	opt callstack 0
  4637  000023                     i2See5V@v12:
  4638                           	opt callstack 0
  4639  000023                     i2See12V@v12:
  4640                           	opt callstack 0
  4641                           
  4642                           ; 2 bytes @ 0x22
  4643  000023                     	ds	2
  4644  000025                     SetTarget@vmin:
  4645                           	opt callstack 0
  4646  000025                     i2GetPressure_pa@p:
  4647                           	opt callstack 0
  4648                           
  4649                           ; 2 bytes @ 0x24
  4650  000025                     	ds	2
  4651  000027                     i2GetPressure_pa@mv:
  4652                           	opt callstack 0
  4653                           
  4654                           ; 4 bytes @ 0x26
  4655  000027                     	ds	1
  4656  000028                     ??i2_dtoa:
  4657  000028                     i2xtoa@x:
  4658                           	opt callstack 0
  4659                           
  4660                           ; 1 bytes @ 0x27
  4661  000028                     	ds	1
  4662  000029                     ??i2_xtoa:
  4663                           
  4664                           ; 1 bytes @ 0x28
  4665  000029                     	ds	2
  4666  00002B                     ?_GetPressure_mbar02:
  4667                           	opt callstack 0
  4668                           
  4669                           ; 2 bytes @ 0x2A
  4670  00002B                     	ds	2
  4671  00002D                     _GetPressure_mbar02$7129:
  4672                           	opt callstack 0
  4673                           
  4674                           ; 2 bytes @ 0x2C
  4675  00002D                     	ds	3
  4676  000030                     i2_dtoa$5178:
  4677                           	opt callstack 0
  4678                           
  4679                           ; 2 bytes @ 0x2F
  4680  000030                     	ds	1
  4681  000031                     i2_xtoa$5199:
  4682                           	opt callstack 0
  4683                           
  4684                           ; 2 bytes @ 0x30
  4685  000031                     	ds	1
  4686  000032                     i2dtoa@p:
  4687                           	opt callstack 0
  4688                           
  4689                           ; 2 bytes @ 0x31
  4690  000032                     	ds	1
  4691  000033                     i2_xtoa$5200:
  4692                           	opt callstack 0
  4693                           
  4694                           ; 2 bytes @ 0x32
  4695  000033                     	ds	1
  4696  000034                     i2dtoa@w:
  4697                           	opt callstack 0
  4698                           
  4699                           ; 2 bytes @ 0x33
  4700  000034                     	ds	1
  4701  000035                     i2xtoa@p:
  4702                           	opt callstack 0
  4703                           
  4704                           ; 2 bytes @ 0x34
  4705  000035                     	ds	1
  4706  000036                     i2dtoa@s:
  4707                           	opt callstack 0
  4708                           
  4709                           ; 2 bytes @ 0x35
  4710  000036                     	ds	1
  4711  000037                     i2xtoa@w:
  4712                           	opt callstack 0
  4713                           
  4714                           ; 2 bytes @ 0x36
  4715  000037                     	ds	1
  4716  000038                     i2dtoa@n:
  4717                           	opt callstack 0
  4718                           
  4719                           ; 8 bytes @ 0x37
  4720  000038                     	ds	1
  4721  000039                     i2xtoa@n:
  4722                           	opt callstack 0
  4723                           
  4724                           ; 8 bytes @ 0x38
  4725  000039                     	ds	7
  4726  000040                     i2dtoa@i:
  4727                           	opt callstack 0
  4728                           
  4729                           ; 2 bytes @ 0x3F
  4730  000040                     	ds	1
  4731  000041                     i2xtoa@i:
  4732                           	opt callstack 0
  4733                           
  4734                           ; 2 bytes @ 0x40
  4735  000041                     	ds	2
  4736  000043                     i2xtoa@c:
  4737                           	opt callstack 0
  4738                           
  4739                           ; 2 bytes @ 0x42
  4740  000043                     	ds	2
  4741  000045                     ?i2_vfpfcnvrt:
  4742                           	opt callstack 0
  4743  000045                     i2vfpfcnvrt@fp:
  4744                           	opt callstack 0
  4745                           
  4746                           ; 2 bytes @ 0x44
  4747  000045                     	ds	2
  4748  000047                     i2vfpfcnvrt@fmt:
  4749                           	opt callstack 0
  4750                           
  4751                           ; 2 bytes @ 0x46
  4752  000047                     	ds	2
  4753  000049                     i2vfpfcnvrt@ap:
  4754                           	opt callstack 0
  4755                           
  4756                           ; 2 bytes @ 0x48
  4757  000049                     	ds	2
  4758  00004B                     ??i2_vfpfcnvrt:
  4759                           
  4760                           ; 1 bytes @ 0x4A
  4761  00004B                     	ds	4
  4762  00004F                     ?i2_vfprintf:
  4763                           	opt callstack 0
  4764  00004F                     i2vfprintf@fp:
  4765                           	opt callstack 0
  4766                           
  4767                           ; 2 bytes @ 0x4E
  4768  00004F                     	ds	2
  4769  000051                     i2vfprintf@fmt:
  4770                           	opt callstack 0
  4771                           
  4772                           ; 2 bytes @ 0x50
  4773  000051                     	ds	2
  4774  000053                     i2vfprintf@ap:
  4775                           	opt callstack 0
  4776                           
  4777                           ; 2 bytes @ 0x52
  4778  000053                     	ds	2
  4779  000055                     i2vfprintf@cfmt:
  4780                           	opt callstack 0
  4781                           
  4782                           ; 2 bytes @ 0x54
  4783  000055                     	ds	2
  4784  000057                     i2AlarmDisplay@t:
  4785                           	opt callstack 0
  4786                           
  4787                           ; 1 bytes @ 0x56
  4788  000057                     	ds	1
  4789  000058                     i2_AlarmDisplay$4015:
  4790                           	opt callstack 0
  4791                           
  4792                           ; 2 bytes @ 0x57
  4793  000058                     	ds	1
  4794  000059                     i2printf@ap:
  4795                           	opt callstack 0
  4796                           
  4797                           ; 2 bytes @ 0x58
  4798  000059                     	ds	1
  4799  00005A                     i2_AlarmDisplay$4016:
  4800                           	opt callstack 0
  4801                           
  4802                           ; 2 bytes @ 0x59
  4803  00005A                     	ds	1
  4804  00005B                     ??_AlarmHandler:
  4805  00005B                     ??_MonitorPressureTask:
  4806  00005B                     ??i2_BuzzerTask:
  4807  00005B                     i2SetCalibrateState@calib:
  4808                           	opt callstack 0
  4809  00005B                     i2SetAlarmSV1@value:
  4810                           	opt callstack 0
  4811  00005B                     i2SetSV1@value:
  4812                           	opt callstack 0
  4813                           
  4814                           ; 1 bytes @ 0x5A
  4815  00005B                     	ds	1
  4816  00005C                     UpdateState@initPhase:
  4817                           	opt callstack 0
  4818                           
  4819                           ; 2 bytes @ 0x5B
  4820  00005C                     	ds	1
  4821  00005D                     
  4822                           ; 1 bytes @ 0x5C
  4823  00005D                     	ds	1
  4824  00005E                     i2HistAlarm@i:
  4825                           	opt callstack 0
  4826                           
  4827                           ; 2 bytes @ 0x5D
  4828  00005E                     	ds	2
  4829  000060                     
  4830                           ; 1 bytes @ 0x5F
  4831 ;;
  4832 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4833 ;;
  4834 ;; *************** function _main *****************
  4835 ;; Defined at:
  4836 ;;		line 75 in file "main.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  ch              1    0[BANK3 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 3F/3
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Totals:         0       0       1       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels required when called:   29
  4856 ;; This function calls:
  4857 ;;		_AlarmCheckTask
  4858 ;;		_AlarmInit
  4859 ;;		_ButtonInit
  4860 ;;		_BuzzerCheck
  4861 ;;		_BuzzerTest
  4862 ;;		_ControllerInit
  4863 ;;		_DisableAlarmSV1
  4864 ;;		_DisplayTask
  4865 ;;		_DumpI2C
  4866 ;;		_EnableAlarmSV1
  4867 ;;		_HistAlarm
  4868 ;;		_InitDisplay
  4869 ;;		_LCDOff
  4870 ;;		_LCDOn
  4871 ;;		_MonitorDisable
  4872 ;;		_MonitorDump
  4873 ;;		_MonitorEnable
  4874 ;;		_MonitorInit
  4875 ;;		_MuteAlarm
  4876 ;;		_SYSTEM_Initialize
  4877 ;;		_See12V
  4878 ;;		_See5V
  4879 ;;		_SeePressureV_pa
  4880 ;;		_SeePressure_pa
  4881 ;;		_SetAlarmSV1
  4882 ;;		_SetCalibrateState
  4883 ;;		_SetSV1
  4884 ;;		_TestAlarm
  4885 ;;		_UART1_is_rx_ready
  4886 ;;		___llmod
  4887 ;;		_getch
  4888 ;;		_printf
  4889 ;; This function is called by:
  4890 ;;		Startup code after reset
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text0
  4895  002D48                     __ptext0:
  4896                           	opt callstack 0
  4897  002D48                     _main:
  4898                           	opt callstack 2
  4899                           
  4900                           ;main.c: 78:     SYSTEM_Initialize();
  4901                           
  4902                           ;incstack = 0
  4903  002D48  EC37  F049         	call	_SYSTEM_Initialize	;wreg free
  4904                           
  4905                           ; BSR set to: 61
  4906                           ;main.c: 79:     SetSV1(0);
  4907  002D4C  0E00               	movlw	0
  4908  002D4E  EC32  F04B         	call	_SetSV1
  4909                           
  4910                           ;main.c: 80:     SetAlarmSV1(1);
  4911  002D52  0E01               	movlw	1
  4912  002D54  EC4C  F04B         	call	_SetAlarmSV1
  4913                           
  4914                           ;main.c: 81:     PWM6CON = 0x00;
  4915  002D58  0E00               	movlw	0
  4916  002D5A  6E6A               	movwf	106,c	;volatile
  4917                           
  4918                           ;main.c: 90:     (INTCON0bits.GIE = 1);
  4919  002D5C  8ED2               	bsf	210,7,c	;volatile
  4920                           
  4921                           ;main.c: 95:     printf ("\033c Oxyvita\r\n");
  4922  002D5E  0E77               	movlw	low STR_1
  4923  002D60  0101               	movlb	1	; () banked
  4924  002D62  6F71               	movwf	printf@fmt& (0+255),b
  4925  002D64  0EFF               	movlw	high STR_1
  4926  002D66  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4927  002D68  ECFF  F04C         	call	_printf	;wreg free
  4928                           
  4929                           ; BSR set to: 2
  4930                           ;main.c: 96:     LCDOn();
  4931  002D6C  EC01  F052         	call	_LCDOn	;wreg free
  4932                           
  4933                           ; BSR set to: 1
  4934                           ;main.c: 97:     InitDisplay();
  4935  002D70  ECD1  F051         	call	_InitDisplay	;wreg free
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;main.c: 99:     AlarmInit();
  4939  002D74  ECEA  F040         	call	_AlarmInit	;wreg free
  4940                           
  4941                           ;main.c: 100:     MonitorInit();
  4942  002D78  ECD7  F041         	call	_MonitorInit	;wreg free
  4943                           
  4944                           ;main.c: 101:     ControllerInit();
  4945  002D7C  EC58  F049         	call	_ControllerInit	;wreg free
  4946                           
  4947                           ; BSR set to: 1
  4948                           ;main.c: 102:     ButtonInit();
  4949  002D80  ECEA  F04C         	call	_ButtonInit	;wreg free
  4950                           
  4951                           ; BSR set to: 1
  4952                           ;main.c: 117:     BuzzerCheck();
  4953  002D84  EC7F  F03E         	call	_BuzzerCheck	;wreg free
  4954  002D88                     l22393:
  4955                           
  4956                           ;main.c: 120:     {;main.c: 123:         DisplayTask();
  4957  002D88  EC7C  F03A         	call	_DisplayTask	;wreg free
  4958                           
  4959                           ;main.c: 124:         AlarmCheckTask();
  4960  002D8C  ECFB  F026         	call	_AlarmCheckTask	;wreg free
  4961                           
  4962                           ;main.c: 126:         if (PCON0&0xC0) printf("\r\nStack:%02X\r\n");
  4963  002D90  006F FFC0  F1C6    	movff	16368,??_main	;volatile
  4964  002D96  0EC0               	movlw	192
  4965  002D98  0101               	movlb	1	; () banked
  4966  002D9A  17C6               	andwf	??_main& (0+255),f,b
  4967  002D9C  B4D8               	btfsc	status,2,c
  4968  002D9E  D006               	goto	l22401
  4969                           
  4970                           ; BSR set to: 1
  4971  002DA0  0E4D               	movlw	low STR_2
  4972  002DA2  6F71               	movwf	printf@fmt& (0+255),b
  4973  002DA4  0EFF               	movlw	high STR_2
  4974  002DA6  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4975  002DA8  ECFF  F04C         	call	_printf	;wreg free
  4976  002DAC                     l22401:
  4977                           
  4978                           ;main.c: 127:         static uint32_t cnt = 0;;main.c: 128:         if (cnt==0) printf("
      +                          m\r\n");
  4979  002DAC  0102               	movlb	2	; () banked
  4980  002DAE  5126               	movf	main@cnt& (0+255),w,b
  4981  002DB0  1127               	iorwf	(main@cnt+1)& (0+255),w,b
  4982  002DB2  1128               	iorwf	(main@cnt+2)& (0+255),w,b
  4983  002DB4  1129               	iorwf	(main@cnt+3)& (0+255),w,b
  4984  002DB6  A4D8               	btfss	status,2,c
  4985  002DB8  D007               	goto	l22405
  4986                           
  4987                           ; BSR set to: 2
  4988  002DBA  0EEC               	movlw	low STR_3
  4989  002DBC  0101               	movlb	1	; () banked
  4990  002DBE  6F71               	movwf	printf@fmt& (0+255),b
  4991  002DC0  0EFF               	movlw	high STR_3
  4992  002DC2  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4993  002DC4  ECFF  F04C         	call	_printf	;wreg free
  4994  002DC8                     l22405:
  4995                           
  4996                           ; BSR set to: 2
  4997                           ;main.c: 129:         cnt = (cnt+1)%300000;
  4998  002DC8  0E01               	movlw	1
  4999  002DCA  2526               	addwf	main@cnt& (0+255),w,b
  5000  002DCC  0101               	movlb	1	; () banked
  5001  002DCE  6F04               	movwf	___llmod@dividend& (0+255),b
  5002  002DD0  0E00               	movlw	0
  5003  002DD2  0102               	movlb	2	; () banked
  5004  002DD4  2127               	addwfc	(main@cnt+1)& (0+255),w,b
  5005  002DD6  0101               	movlb	1	; () banked
  5006  002DD8  6F05               	movwf	(___llmod@dividend+1)& (0+255),b
  5007  002DDA  0E00               	movlw	0
  5008  002DDC  0102               	movlb	2	; () banked
  5009  002DDE  2128               	addwfc	(main@cnt+2)& (0+255),w,b
  5010  002DE0  0101               	movlb	1	; () banked
  5011  002DE2  6F06               	movwf	(___llmod@dividend+2)& (0+255),b
  5012  002DE4  0E00               	movlw	0
  5013  002DE6  0102               	movlb	2	; () banked
  5014  002DE8  2129               	addwfc	(main@cnt+3)& (0+255),w,b
  5015  002DEA  0101               	movlb	1	; () banked
  5016  002DEC  6F07               	movwf	(___llmod@dividend+3)& (0+255),b
  5017  002DEE  0EE0               	movlw	224
  5018  002DF0  6F08               	movwf	___llmod@divisor& (0+255),b
  5019  002DF2  0E93               	movlw	147
  5020  002DF4  6F09               	movwf	(___llmod@divisor+1)& (0+255),b
  5021  002DF6  0E04               	movlw	4
  5022  002DF8  6F0A               	movwf	(___llmod@divisor+2)& (0+255),b
  5023  002DFA  0E00               	movlw	0
  5024  002DFC  6F0B               	movwf	(___llmod@divisor+3)& (0+255),b
  5025  002DFE  EC81  F042         	call	___llmod	;wreg free
  5026  002E02  0060  F410  F226   	movff	?___llmod,main@cnt
  5027  002E08  0060  F414  F227   	movff	?___llmod+1,main@cnt+1
  5028  002E0E  0060  F418  F228   	movff	?___llmod+2,main@cnt+2
  5029  002E14  0060  F41C  F229   	movff	?___llmod+3,main@cnt+3
  5030                           
  5031                           ; BSR set to: 1
  5032                           ;main.c: 131:         if (UART1_is_rx_ready())
  5033  002E1A  ECCE  F050         	call	_UART1_is_rx_ready	;wreg free
  5034  002E1E  0900               	iorlw	0
  5035  002E20  B4D8               	btfsc	status,2,c
  5036  002E22  D7B2               	goto	l22393
  5037                           
  5038                           ; BSR set to: 1
  5039                           ;main.c: 132:         {;main.c: 133:             char ch = getch();
  5040  002E24  ECCC  F052         	call	_getch	;wreg free
  5041  002E28  0103               	movlb	3	; () banked
  5042  002E2A  6FF9               	movwf	main@ch& (0+255),b
  5043                           
  5044                           ; BSR set to: 3
  5045                           ;main.c: 134:             if (ch=='a') BuzzerTest('A');
  5046  002E2C  0E61               	movlw	97
  5047  002E2E  19F9               	xorwf	main@ch& (0+255),w,b
  5048  002E30  A4D8               	btfss	status,2,c
  5049  002E32  D003               	goto	l22415
  5050                           
  5051                           ; BSR set to: 3
  5052  002E34  0E41               	movlw	65
  5053  002E36  EC12  F03F         	call	_BuzzerTest
  5054  002E3A                     l22415:
  5055                           
  5056                           ;main.c: 135:             if (ch=='b') BuzzerTest('B');
  5057  002E3A  0E62               	movlw	98
  5058  002E3C  0103               	movlb	3	; () banked
  5059  002E3E  19F9               	xorwf	main@ch& (0+255),w,b
  5060  002E40  A4D8               	btfss	status,2,c
  5061  002E42  D003               	goto	l22419
  5062                           
  5063                           ; BSR set to: 3
  5064  002E44  0E42               	movlw	66
  5065  002E46  EC12  F03F         	call	_BuzzerTest
  5066  002E4A                     l22419:
  5067                           
  5068                           ;main.c: 136:             if (ch=='c') BuzzerTest('C');
  5069  002E4A  0E63               	movlw	99
  5070  002E4C  0103               	movlb	3	; () banked
  5071  002E4E  19F9               	xorwf	main@ch& (0+255),w,b
  5072  002E50  A4D8               	btfss	status,2,c
  5073  002E52  D003               	goto	l22423
  5074                           
  5075                           ; BSR set to: 3
  5076  002E54  0E43               	movlw	67
  5077  002E56  EC12  F03F         	call	_BuzzerTest
  5078  002E5A                     l22423:
  5079                           
  5080                           ;main.c: 137:             if (ch=='d') BuzzerTest('D');
  5081  002E5A  0E64               	movlw	100
  5082  002E5C  0103               	movlb	3	; () banked
  5083  002E5E  19F9               	xorwf	main@ch& (0+255),w,b
  5084  002E60  A4D8               	btfss	status,2,c
  5085  002E62  D003               	goto	l22427
  5086                           
  5087                           ; BSR set to: 3
  5088  002E64  0E44               	movlw	68
  5089  002E66  EC12  F03F         	call	_BuzzerTest
  5090  002E6A                     l22427:
  5091                           
  5092                           ;main.c: 138:             if (ch=='e') BuzzerTest('E');
  5093  002E6A  0E65               	movlw	101
  5094  002E6C  0103               	movlb	3	; () banked
  5095  002E6E  19F9               	xorwf	main@ch& (0+255),w,b
  5096  002E70  A4D8               	btfss	status,2,c
  5097  002E72  D003               	goto	l22431
  5098                           
  5099                           ; BSR set to: 3
  5100  002E74  0E45               	movlw	69
  5101  002E76  EC12  F03F         	call	_BuzzerTest
  5102  002E7A                     l22431:
  5103                           
  5104                           ;main.c: 139:             if (ch=='f') BuzzerTest('F');
  5105  002E7A  0E66               	movlw	102
  5106  002E7C  0103               	movlb	3	; () banked
  5107  002E7E  19F9               	xorwf	main@ch& (0+255),w,b
  5108  002E80  A4D8               	btfss	status,2,c
  5109  002E82  D003               	goto	l22435
  5110                           
  5111                           ; BSR set to: 3
  5112  002E84  0E46               	movlw	70
  5113  002E86  EC12  F03F         	call	_BuzzerTest
  5114  002E8A                     l22435:
  5115                           
  5116                           ;main.c: 140:             if (ch=='o') BuzzerTest('O');
  5117  002E8A  0E6F               	movlw	111
  5118  002E8C  0103               	movlb	3	; () banked
  5119  002E8E  19F9               	xorwf	main@ch& (0+255),w,b
  5120  002E90  A4D8               	btfss	status,2,c
  5121  002E92  D003               	goto	l22439
  5122                           
  5123                           ; BSR set to: 3
  5124  002E94  0E4F               	movlw	79
  5125  002E96  EC12  F03F         	call	_BuzzerTest
  5126  002E9A                     l22439:
  5127                           
  5128                           ;main.c: 141:             if (ch=='t') BuzzerCheck();
  5129  002E9A  0E74               	movlw	116
  5130  002E9C  0103               	movlb	3	; () banked
  5131  002E9E  19F9               	xorwf	main@ch& (0+255),w,b
  5132  002EA0  B4D8               	btfsc	status,2,c
  5133                           
  5134                           ; BSR set to: 3
  5135  002EA2  EC7F  F03E         	call	_BuzzerCheck	;wreg free
  5136                           
  5137                           ;main.c: 142:             if (ch=='h') HistAlarm();
  5138  002EA6  0E68               	movlw	104
  5139  002EA8  0103               	movlb	3	; () banked
  5140  002EAA  19F9               	xorwf	main@ch& (0+255),w,b
  5141  002EAC  B4D8               	btfsc	status,2,c
  5142                           
  5143                           ; BSR set to: 3
  5144  002EAE  EC64  F032         	call	_HistAlarm	;wreg free
  5145                           
  5146                           ;main.c: 143:             if (ch=='m') MuteAlarm();
  5147  002EB2  0E6D               	movlw	109
  5148  002EB4  0103               	movlb	3	; () banked
  5149  002EB6  19F9               	xorwf	main@ch& (0+255),w,b
  5150  002EB8  B4D8               	btfsc	status,2,c
  5151                           
  5152                           ; BSR set to: 3
  5153  002EBA  ECBE  F022         	call	_MuteAlarm	;wreg free
  5154                           
  5155                           ;main.c: 144:             if (ch=='i') DumpI2C();
  5156  002EBE  0E69               	movlw	105
  5157  002EC0  0103               	movlb	3	; () banked
  5158  002EC2  19F9               	xorwf	main@ch& (0+255),w,b
  5159  002EC4  B4D8               	btfsc	status,2,c
  5160                           
  5161                           ; BSR set to: 3
  5162  002EC6  EC54  F053         	call	_DumpI2C	;wreg free
  5163                           
  5164                           ; BSR set to: 3
  5165                           ;main.c: 145:             if (ch=='v') SetSV1(0);
  5166  002ECA  0E76               	movlw	118
  5167  002ECC  19F9               	xorwf	main@ch& (0+255),w,b
  5168  002ECE  A4D8               	btfss	status,2,c
  5169  002ED0  D003               	goto	l22459
  5170                           
  5171                           ; BSR set to: 3
  5172  002ED2  0E00               	movlw	0
  5173  002ED4  EC32  F04B         	call	_SetSV1
  5174  002ED8                     l22459:
  5175                           
  5176                           ;main.c: 146:             if (ch=='V') SetSV1(1);
  5177  002ED8  0E56               	movlw	86
  5178  002EDA  0103               	movlb	3	; () banked
  5179  002EDC  19F9               	xorwf	main@ch& (0+255),w,b
  5180  002EDE  A4D8               	btfss	status,2,c
  5181  002EE0  D003               	goto	l22463
  5182                           
  5183                           ; BSR set to: 3
  5184  002EE2  0E01               	movlw	1
  5185  002EE4  EC32  F04B         	call	_SetSV1
  5186  002EE8                     l22463:
  5187                           
  5188                           ;main.c: 147:             if (ch=='0') TestAlarm(0);
  5189  002EE8  0E30               	movlw	48
  5190  002EEA  0103               	movlb	3	; () banked
  5191  002EEC  19F9               	xorwf	main@ch& (0+255),w,b
  5192  002EEE  A4D8               	btfss	status,2,c
  5193  002EF0  D007               	goto	l22467
  5194                           
  5195                           ; BSR set to: 3
  5196  002EF2  0E00               	movlw	0
  5197  002EF4  0101               	movlb	1	; () banked
  5198  002EF6  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5199  002EF8  0E00               	movlw	0
  5200  002EFA  6F83               	movwf	TestAlarm@id& (0+255),b
  5201  002EFC  ECCE  F039         	call	_TestAlarm	;wreg free
  5202  002F00                     l22467:
  5203                           
  5204                           ;main.c: 148:             if (ch=='1') TestAlarm(1);
  5205  002F00  0E31               	movlw	49
  5206  002F02  0103               	movlb	3	; () banked
  5207  002F04  19F9               	xorwf	main@ch& (0+255),w,b
  5208  002F06  A4D8               	btfss	status,2,c
  5209  002F08  D007               	goto	l22471
  5210                           
  5211                           ; BSR set to: 3
  5212  002F0A  0E00               	movlw	0
  5213  002F0C  0101               	movlb	1	; () banked
  5214  002F0E  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5215  002F10  0E01               	movlw	1
  5216  002F12  6F83               	movwf	TestAlarm@id& (0+255),b
  5217  002F14  ECCE  F039         	call	_TestAlarm	;wreg free
  5218  002F18                     l22471:
  5219                           
  5220                           ;main.c: 149:             if (ch=='2') TestAlarm(2);
  5221  002F18  0E32               	movlw	50
  5222  002F1A  0103               	movlb	3	; () banked
  5223  002F1C  19F9               	xorwf	main@ch& (0+255),w,b
  5224  002F1E  A4D8               	btfss	status,2,c
  5225  002F20  D007               	goto	l22475
  5226                           
  5227                           ; BSR set to: 3
  5228  002F22  0E00               	movlw	0
  5229  002F24  0101               	movlb	1	; () banked
  5230  002F26  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5231  002F28  0E02               	movlw	2
  5232  002F2A  6F83               	movwf	TestAlarm@id& (0+255),b
  5233  002F2C  ECCE  F039         	call	_TestAlarm	;wreg free
  5234  002F30                     l22475:
  5235                           
  5236                           ;main.c: 150:             if (ch=='3') TestAlarm(3);
  5237  002F30  0E33               	movlw	51
  5238  002F32  0103               	movlb	3	; () banked
  5239  002F34  19F9               	xorwf	main@ch& (0+255),w,b
  5240  002F36  A4D8               	btfss	status,2,c
  5241  002F38  D007               	goto	l22479
  5242                           
  5243                           ; BSR set to: 3
  5244  002F3A  0E00               	movlw	0
  5245  002F3C  0101               	movlb	1	; () banked
  5246  002F3E  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5247  002F40  0E03               	movlw	3
  5248  002F42  6F83               	movwf	TestAlarm@id& (0+255),b
  5249  002F44  ECCE  F039         	call	_TestAlarm	;wreg free
  5250  002F48                     l22479:
  5251                           
  5252                           ;main.c: 151:             if (ch=='4') TestAlarm(4);
  5253  002F48  0E34               	movlw	52
  5254  002F4A  0103               	movlb	3	; () banked
  5255  002F4C  19F9               	xorwf	main@ch& (0+255),w,b
  5256  002F4E  A4D8               	btfss	status,2,c
  5257  002F50  D007               	goto	l22483
  5258                           
  5259                           ; BSR set to: 3
  5260  002F52  0E00               	movlw	0
  5261  002F54  0101               	movlb	1	; () banked
  5262  002F56  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5263  002F58  0E04               	movlw	4
  5264  002F5A  6F83               	movwf	TestAlarm@id& (0+255),b
  5265  002F5C  ECCE  F039         	call	_TestAlarm	;wreg free
  5266  002F60                     l22483:
  5267                           
  5268                           ;main.c: 152:             if (ch=='5') TestAlarm(5);
  5269  002F60  0E35               	movlw	53
  5270  002F62  0103               	movlb	3	; () banked
  5271  002F64  19F9               	xorwf	main@ch& (0+255),w,b
  5272  002F66  A4D8               	btfss	status,2,c
  5273  002F68  D007               	goto	l22487
  5274                           
  5275                           ; BSR set to: 3
  5276  002F6A  0E00               	movlw	0
  5277  002F6C  0101               	movlb	1	; () banked
  5278  002F6E  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5279  002F70  0E05               	movlw	5
  5280  002F72  6F83               	movwf	TestAlarm@id& (0+255),b
  5281  002F74  ECCE  F039         	call	_TestAlarm	;wreg free
  5282  002F78                     l22487:
  5283                           
  5284                           ;main.c: 153:             if (ch=='6') TestAlarm(6);
  5285  002F78  0E36               	movlw	54
  5286  002F7A  0103               	movlb	3	; () banked
  5287  002F7C  19F9               	xorwf	main@ch& (0+255),w,b
  5288  002F7E  A4D8               	btfss	status,2,c
  5289  002F80  D007               	goto	l22491
  5290                           
  5291                           ; BSR set to: 3
  5292  002F82  0E00               	movlw	0
  5293  002F84  0101               	movlb	1	; () banked
  5294  002F86  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5295  002F88  0E06               	movlw	6
  5296  002F8A  6F83               	movwf	TestAlarm@id& (0+255),b
  5297  002F8C  ECCE  F039         	call	_TestAlarm	;wreg free
  5298  002F90                     l22491:
  5299                           
  5300                           ;main.c: 154:             if (ch=='7') TestAlarm(7);
  5301  002F90  0E37               	movlw	55
  5302  002F92  0103               	movlb	3	; () banked
  5303  002F94  19F9               	xorwf	main@ch& (0+255),w,b
  5304  002F96  A4D8               	btfss	status,2,c
  5305  002F98  D007               	goto	l22495
  5306                           
  5307                           ; BSR set to: 3
  5308  002F9A  0E00               	movlw	0
  5309  002F9C  0101               	movlb	1	; () banked
  5310  002F9E  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5311  002FA0  0E07               	movlw	7
  5312  002FA2  6F83               	movwf	TestAlarm@id& (0+255),b
  5313  002FA4  ECCE  F039         	call	_TestAlarm	;wreg free
  5314  002FA8                     l22495:
  5315                           
  5316                           ;main.c: 155:             if (ch=='8') TestAlarm(8);
  5317  002FA8  0E38               	movlw	56
  5318  002FAA  0103               	movlb	3	; () banked
  5319  002FAC  19F9               	xorwf	main@ch& (0+255),w,b
  5320  002FAE  A4D8               	btfss	status,2,c
  5321  002FB0  D007               	goto	l22499
  5322                           
  5323                           ; BSR set to: 3
  5324  002FB2  0E00               	movlw	0
  5325  002FB4  0101               	movlb	1	; () banked
  5326  002FB6  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5327  002FB8  0E08               	movlw	8
  5328  002FBA  6F83               	movwf	TestAlarm@id& (0+255),b
  5329  002FBC  ECCE  F039         	call	_TestAlarm	;wreg free
  5330  002FC0                     l22499:
  5331                           
  5332                           ;main.c: 156:             if (ch=='9') TestAlarm(9);
  5333  002FC0  0E39               	movlw	57
  5334  002FC2  0103               	movlb	3	; () banked
  5335  002FC4  19F9               	xorwf	main@ch& (0+255),w,b
  5336  002FC6  A4D8               	btfss	status,2,c
  5337  002FC8  D007               	goto	l22503
  5338                           
  5339                           ; BSR set to: 3
  5340  002FCA  0E00               	movlw	0
  5341  002FCC  0101               	movlb	1	; () banked
  5342  002FCE  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5343  002FD0  0E09               	movlw	9
  5344  002FD2  6F83               	movwf	TestAlarm@id& (0+255),b
  5345  002FD4  ECCE  F039         	call	_TestAlarm	;wreg free
  5346  002FD8                     l22503:
  5347                           
  5348                           ;main.c: 157:             if (ch=='G') SetSV1(1);
  5349  002FD8  0E47               	movlw	71
  5350  002FDA  0103               	movlb	3	; () banked
  5351  002FDC  19F9               	xorwf	main@ch& (0+255),w,b
  5352  002FDE  A4D8               	btfss	status,2,c
  5353  002FE0  D003               	goto	l22507
  5354                           
  5355                           ; BSR set to: 3
  5356  002FE2  0E01               	movlw	1
  5357  002FE4  EC32  F04B         	call	_SetSV1
  5358  002FE8                     l22507:
  5359                           
  5360                           ;main.c: 158:             if (ch=='g') SetSV1(0);
  5361  002FE8  0E67               	movlw	103
  5362  002FEA  0103               	movlb	3	; () banked
  5363  002FEC  19F9               	xorwf	main@ch& (0+255),w,b
  5364  002FEE  A4D8               	btfss	status,2,c
  5365  002FF0  D003               	goto	l22511
  5366                           
  5367                           ; BSR set to: 3
  5368  002FF2  0E00               	movlw	0
  5369  002FF4  EC32  F04B         	call	_SetSV1
  5370  002FF8                     l22511:
  5371                           
  5372                           ;main.c: 159:             if (ch=='R') MonitorEnable();
  5373  002FF8  0E52               	movlw	82
  5374  002FFA  0103               	movlb	3	; () banked
  5375  002FFC  19F9               	xorwf	main@ch& (0+255),w,b
  5376  002FFE  B4D8               	btfsc	status,2,c
  5377                           
  5378                           ; BSR set to: 3
  5379  003000  EC50  F052         	call	_MonitorEnable	;wreg free
  5380                           
  5381                           ;main.c: 160:             if (ch=='r') MonitorDisable();
  5382  003004  0E72               	movlw	114
  5383  003006  0103               	movlb	3	; () banked
  5384  003008  19F9               	xorwf	main@ch& (0+255),w,b
  5385  00300A  B4D8               	btfsc	status,2,c
  5386                           
  5387                           ; BSR set to: 3
  5388  00300C  EC54  F052         	call	_MonitorDisable	;wreg free
  5389                           
  5390                           ;main.c: 161:             if (ch=='d') DisableAlarmSV1();
  5391  003010  0E64               	movlw	100
  5392  003012  0103               	movlb	3	; () banked
  5393  003014  19F9               	xorwf	main@ch& (0+255),w,b
  5394  003016  B4D8               	btfsc	status,2,c
  5395                           
  5396                           ; BSR set to: 3
  5397  003018  EC5C  F052         	call	_DisableAlarmSV1	;wreg free
  5398                           
  5399                           ;main.c: 162:             if (ch=='D') EnableAlarmSV1();
  5400  00301C  0E44               	movlw	68
  5401  00301E  0103               	movlb	3	; () banked
  5402  003020  19F9               	xorwf	main@ch& (0+255),w,b
  5403  003022  B4D8               	btfsc	status,2,c
  5404                           
  5405                           ; BSR set to: 3
  5406  003024  EC58  F052         	call	_EnableAlarmSV1	;wreg free
  5407                           
  5408                           ;main.c: 164:             if (ch=='l') printf("\r\nPRS: %d pa PRSV: %d pa 12V: %d mV 5V:
      +                          %d \r\n", SeePressure_pa(), SeePressureV_pa(), See12V(), See5V());
  5409  003028  0E6C               	movlw	108
  5410  00302A  0103               	movlb	3	; () banked
  5411  00302C  19F9               	xorwf	main@ch& (0+255),w,b
  5412  00302E  A4D8               	btfss	status,2,c
  5413  003030  D027               	goto	l22531
  5414                           
  5415                           ; BSR set to: 3
  5416  003032  0E3A               	movlw	low STR_4
  5417  003034  0101               	movlb	1	; () banked
  5418  003036  6F71               	movwf	printf@fmt& (0+255),b
  5419  003038  0EFD               	movlw	high STR_4
  5420  00303A  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5421  00303C  EC21  F02C         	call	_SeePressure_pa	;wreg free
  5422  003040  0060  F478  F173   	movff	?_SeePressure_pa,?_printf+2
  5423  003046  0060  F47C  F174   	movff	?_SeePressure_pa+1,?_printf+3
  5424  00304C  EC68  F040         	call	_SeePressureV_pa	;wreg free
  5425  003050  0060  F448  F175   	movff	?_SeePressureV_pa,?_printf+4
  5426  003056  0060  F44C  F176   	movff	?_SeePressureV_pa+1,?_printf+5
  5427  00305C  EC69  F03C         	call	_See12V	;wreg free
  5428  003060  0060  F478  F177   	movff	?_See12V,?_printf+6
  5429  003066  0060  F47C  F178   	movff	?_See12V+1,?_printf+7
  5430  00306C  ECB8  F042         	call	_See5V	;wreg free
  5431  003070  0060  F478  F179   	movff	?_See5V,?_printf+8
  5432  003076  0060  F47C  F17A   	movff	?_See5V+1,?_printf+9
  5433  00307C  ECFF  F04C         	call	_printf	;wreg free
  5434  003080                     l22531:
  5435                           
  5436                           ;main.c: 165:             if (ch=='p') MonitorDump();
  5437  003080  0E70               	movlw	112
  5438  003082  0103               	movlb	3	; () banked
  5439  003084  19F9               	xorwf	main@ch& (0+255),w,b
  5440  003086  B4D8               	btfsc	status,2,c
  5441                           
  5442                           ; BSR set to: 3
  5443  003088  EC64  F018         	call	_MonitorDump	;wreg free
  5444                           
  5445                           ;main.c: 166:             if (ch=='z') SetCalibrateState(0);
  5446  00308C  0E7A               	movlw	122
  5447  00308E  0103               	movlb	3	; () banked
  5448  003090  19F9               	xorwf	main@ch& (0+255),w,b
  5449  003092  A4D8               	btfss	status,2,c
  5450  003094  D003               	goto	l22539
  5451                           
  5452                           ; BSR set to: 3
  5453  003096  0E00               	movlw	0
  5454  003098  ECD3  F031         	call	_SetCalibrateState
  5455  00309C                     l22539:
  5456                           
  5457                           ;main.c: 167:             if (ch=='Z') SetCalibrateState(1);
  5458  00309C  0E5A               	movlw	90
  5459  00309E  0103               	movlb	3	; () banked
  5460  0030A0  19F9               	xorwf	main@ch& (0+255),w,b
  5461  0030A2  A4D8               	btfss	status,2,c
  5462  0030A4  D003               	goto	l22543
  5463                           
  5464                           ; BSR set to: 3
  5465  0030A6  0E01               	movlw	1
  5466  0030A8  ECD3  F031         	call	_SetCalibrateState
  5467  0030AC                     l22543:
  5468                           
  5469                           ;main.c: 168:             if (ch=='o') LCDOff();
  5470  0030AC  0E6F               	movlw	111
  5471  0030AE  0103               	movlb	3	; () banked
  5472  0030B0  19F9               	xorwf	main@ch& (0+255),w,b
  5473  0030B2  B4D8               	btfsc	status,2,c
  5474                           
  5475                           ; BSR set to: 3
  5476  0030B4  EC06  F052         	call	_LCDOff	;wreg free
  5477                           
  5478                           ;main.c: 169:             if (ch=='O') LCDOn();
  5479  0030B8  0E4F               	movlw	79
  5480  0030BA  0103               	movlb	3	; () banked
  5481  0030BC  19F9               	xorwf	main@ch& (0+255),w,b
  5482  0030BE  A4D8               	btfss	status,2,c
  5483  0030C0  D663               	goto	l22393
  5484                           
  5485                           ; BSR set to: 3
  5486  0030C2  EC01  F052         	call	_LCDOn	;wreg free
  5487                           
  5488                           ; BSR set to: 3
  5489                           
  5490                           ;main.c: 174:         }
  5491  0030C6  D660               	goto	l22393
  5492  0030C8                     __end_of_main:
  5493                           	opt callstack 0
  5494                           
  5495 ;; *************** function _getch *****************
  5496 ;; Defined at:
  5497 ;;		line 224 in file "mcc_generated_files/uart1.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      unsigned char 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 3F/1
  5508 ;;		On exit  : 3F/1
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:        0 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:   17
  5518 ;; This function calls:
  5519 ;;		_UART1_Read
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text1
  5526  00A598                     __ptext1:
  5527                           	opt callstack 0
  5528  00A598                     _getch:
  5529                           	opt callstack 13
  5530                           
  5531                           ; BSR set to: 1
  5532                           ;mcc_generated_files/uart1.c: 226:     return UART1_Read();
  5533                           
  5534                           ; BSR set to: 3
  5535                           ;incstack = 0
  5536  00A598  ECAA  F048         	call	_UART1_Read	;wreg free
  5537                           
  5538                           ; BSR set to: 1
  5539  00A59C  0012               	return		;funcret
  5540  00A59E                     __end_of_getch:
  5541                           	opt callstack 0
  5542                           
  5543 ;; *************** function _UART1_Read *****************
  5544 ;; Defined at:
  5545 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  readValue       1    4[BANK1 ] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      unsigned char 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 3F/1
  5556 ;;		On exit  : 3F/1
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;Total ram usage:        1 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:   16
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_getch
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text2
  5574  009154                     __ptext2:
  5575                           	opt callstack 0
  5576  009154                     _UART1_Read:
  5577                           	opt callstack 13
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;mcc_generated_files/uart1.c: 183:     while(0 == uart1RxCount)
  5581                           
  5582                           ; BSR set to: 1
  5583                           ;mcc_generated_files/uart1.c: 183:     while(0 == uart1RxCount)
  5584                           
  5585                           ; BSR set to: 1
  5586                           ;incstack = 0
  5587  009154  51F1               	movf	_uart1RxCount& (0+255),w,b	;volatile
  5588  009156  B4D8               	btfsc	status,2,c
  5589  009158  D7FD               	goto	_UART1_Read
  5590                           
  5591                           ; BSR set to: 1
  5592                           ;mcc_generated_files/uart1.c: 187:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
  5593  00915A  0E0A               	movlw	low _uart1RxStatusBuffer
  5594  00915C  25F2               	addwf	_uart1RxTail& (0+255),w,b	;volatile
  5595  00915E  6ED9               	movwf	fsr2l,c
  5596  009160  6ADA               	clrf	fsr2h,c
  5597  009162  0E02               	movlw	high _uart1RxStatusBuffer
  5598  009164  22DA               	addwfc	fsr2h,f,c
  5599  009166  50DF               	movf	indf2,w,c
  5600  009168  0102               	movlb	2	; () banked
  5601  00916A  6FB9               	movwf	_uart1RxLastError& (0+255),b	;volatile
  5602                           
  5603                           ;mcc_generated_files/uart1.c: 189:     readValue = uart1RxBuffer[uart1RxTail++];
  5604  00916C  0E12               	movlw	low _uart1RxBuffer
  5605  00916E  0101               	movlb	1	; () banked
  5606  009170  25F2               	addwf	_uart1RxTail& (0+255),w,b	;volatile
  5607  009172  6ED9               	movwf	fsr2l,c
  5608  009174  6ADA               	clrf	fsr2h,c
  5609  009176  0E02               	movlw	high _uart1RxBuffer
  5610  009178  22DA               	addwfc	fsr2h,f,c
  5611  00917A  50DF               	movf	indf2,w,c
  5612  00917C  6F04               	movwf	UART1_Read@readValue& (0+255),b
  5613                           
  5614                           ; BSR set to: 1
  5615  00917E  2BF2               	incf	_uart1RxTail& (0+255),f,b	;volatile
  5616                           
  5617                           ; BSR set to: 1
  5618                           ;mcc_generated_files/uart1.c: 190:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
  5619  009180  0E07               	movlw	7
  5620  009182  65F2               	cpfsgt	_uart1RxTail& (0+255),b
  5621  009184  D002               	goto	l20507
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;mcc_generated_files/uart1.c: 191:     {;mcc_generated_files/uart1.c: 192:         uart1
      +                          RxTail = 0;
  5625  009186  0E00               	movlw	0
  5626  009188  6FF2               	movwf	_uart1RxTail& (0+255),b	;volatile
  5627  00918A                     l20507:
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;mcc_generated_files/uart1.c: 194:     PIE3bits.U1RXIE = 0;
  5631  00918A  0139               	movlb	57	; () banked
  5632  00918C  9793               	bcf	147,3,b	;volatile
  5633                           
  5634                           ; BSR set to: 57
  5635                           ;mcc_generated_files/uart1.c: 195:     uart1RxCount--;
  5636  00918E  0101               	movlb	1	; () banked
  5637  009190  07F1               	decf	_uart1RxCount& (0+255),f,b	;volatile
  5638                           
  5639                           ; BSR set to: 1
  5640                           ;mcc_generated_files/uart1.c: 196:     PIE3bits.U1RXIE = 1;
  5641  009192  0139               	movlb	57	; () banked
  5642  009194  8793               	bsf	147,3,b	;volatile
  5643                           
  5644                           ; BSR set to: 57
  5645                           ;mcc_generated_files/uart1.c: 198:     return readValue;
  5646  009196  0101               	movlb	1	; () banked
  5647  009198  5104               	movf	UART1_Read@readValue& (0+255),w,b
  5648                           
  5649                           ; BSR set to: 1
  5650  00919A  0012               	return		;funcret
  5651  00919C                     __end_of_UART1_Read:
  5652                           	opt callstack 0
  5653                           
  5654 ;; *************** function ___llmod *****************
  5655 ;; Defined at:
  5656 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/llmod.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  dividend        4    4[BANK1 ] unsigned long 
  5659 ;;  divisor         4    8[BANK1 ] unsigned long 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  counter         1   12[BANK1 ] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  4    4[BANK1 ] unsigned long 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 3F/1
  5668 ;;		On exit  : 3F/1
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5671 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;Total ram usage:        9 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:   16
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text3
  5686  008502                     __ptext3:
  5687                           	opt callstack 0
  5688  008502                     ___llmod:
  5689                           	opt callstack 14
  5690                           
  5691                           ; BSR set to: 1
  5692                           
  5693                           ; BSR set to: 1
  5694                           ;incstack = 0
  5695  008502  5108               	movf	___llmod@divisor& (0+255),w,b
  5696  008504  1109               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5697  008506  110A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5698  008508  110B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5699  00850A  B4D8               	btfsc	status,2,c
  5700  00850C  D024               	goto	l4028
  5701                           
  5702                           ; BSR set to: 1
  5703  00850E  0E01               	movlw	1
  5704  008510  6F0C               	movwf	___llmod@counter& (0+255),b
  5705  008512  D006               	goto	l22299
  5706  008514                     l22297:
  5707                           
  5708                           ; BSR set to: 1
  5709  008514  90D8               	bcf	status,0,c
  5710  008516  3708               	rlcf	___llmod@divisor& (0+255),f,b
  5711  008518  3709               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5712  00851A  370A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5713  00851C  370B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5714  00851E  2B0C               	incf	___llmod@counter& (0+255),f,b
  5715  008520                     l22299:
  5716                           
  5717                           ; BSR set to: 1
  5718  008520  AF0B               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5719  008522  D7F8               	goto	l22297
  5720  008524                     u22040:
  5721                           
  5722                           ; BSR set to: 1
  5723  008524  5108               	movf	___llmod@divisor& (0+255),w,b
  5724  008526  5D04               	subwf	___llmod@dividend& (0+255),w,b
  5725  008528  5109               	movf	(___llmod@divisor+1)& (0+255),w,b
  5726  00852A  5905               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5727  00852C  510A               	movf	(___llmod@divisor+2)& (0+255),w,b
  5728  00852E  5906               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5729  008530  510B               	movf	(___llmod@divisor+3)& (0+255),w,b
  5730  008532  5907               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5731  008534  A0D8               	btfss	status,0,c
  5732  008536  D008               	goto	l22305
  5733                           
  5734                           ; BSR set to: 1
  5735  008538  5108               	movf	___llmod@divisor& (0+255),w,b
  5736  00853A  5F04               	subwf	___llmod@dividend& (0+255),f,b
  5737  00853C  5109               	movf	(___llmod@divisor+1)& (0+255),w,b
  5738  00853E  5B05               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5739  008540  510A               	movf	(___llmod@divisor+2)& (0+255),w,b
  5740  008542  5B06               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5741  008544  510B               	movf	(___llmod@divisor+3)& (0+255),w,b
  5742  008546  5B07               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5743  008548                     l22305:
  5744                           
  5745                           ; BSR set to: 1
  5746  008548  90D8               	bcf	status,0,c
  5747  00854A  330B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5748  00854C  330A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5749  00854E  3309               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5750  008550  3308               	rrcf	___llmod@divisor& (0+255),f,b
  5751                           
  5752                           ; BSR set to: 1
  5753  008552  2F0C               	decfsz	___llmod@counter& (0+255),f,b
  5754  008554  D7E7               	goto	u22040
  5755  008556                     l4028:
  5756                           
  5757                           ; BSR set to: 1
  5758  008556  0060  F410  F104   	movff	___llmod@dividend,?___llmod
  5759  00855C  0060  F414  F105   	movff	___llmod@dividend+1,?___llmod+1
  5760  008562  0060  F418  F106   	movff	___llmod@dividend+2,?___llmod+2
  5761  008568  0060  F41C  F107   	movff	___llmod@dividend+3,?___llmod+3
  5762                           
  5763                           ; BSR set to: 1
  5764  00856E  0012               	return		;funcret
  5765  008570                     __end_of___llmod:
  5766                           	opt callstack 0
  5767                           
  5768 ;; *************** function _UART1_is_rx_ready *****************
  5769 ;; Defined at:
  5770 ;;		line 160 in file "mcc_generated_files/uart1.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      _Bool 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2
  5779 ;; Tracked objects:
  5780 ;;		On entry : 3F/1
  5781 ;;		On exit  : 3F/1
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:   16
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text4
  5799  00A19C                     __ptext4:
  5800                           	opt callstack 0
  5801  00A19C                     _UART1_is_rx_ready:
  5802                           	opt callstack 14
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;mcc_generated_files/uart1.c: 162:     return (uart1RxCount ? 1 : 0);
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;incstack = 0
  5809  00A19C  51F1               	movf	_uart1RxCount& (0+255),w,b	;volatile
  5810  00A19E  B4D8               	btfsc	status,2,c
  5811  00A1A0  D002               	goto	u21310
  5812  00A1A2  0E01               	movlw	1
  5813  00A1A4  0012               	return	
  5814  00A1A6                     u21310:
  5815  00A1A6  0E00               	movlw	0
  5816                           
  5817                           ; BSR set to: 1
  5818  00A1A8  0012               	return		;funcret
  5819  00A1AA                     __end_of_UART1_is_rx_ready:
  5820                           	opt callstack 0
  5821                           
  5822 ;; *************** function _TestAlarm *****************
  5823 ;; Defined at:
  5824 ;;		line 341 in file "alarm.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  id              2  131[BANK1 ] int 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  i               2  137[BANK1 ] int 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 3F/1
  5835 ;;		On exit  : 3F/2
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5838 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;Total ram usage:        8 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:   25
  5845 ;; This function calls:
  5846 ;;		_printf
  5847 ;;		_putchar
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text5
  5854  00739C                     __ptext5:
  5855                           	opt callstack 0
  5856  00739C                     _TestAlarm:
  5857                           	opt callstack 5
  5858                           
  5859                           ; BSR set to: 1
  5860                           ;alarm.c: 342:     testAlarm[id] = !testAlarm[id];
  5861                           
  5862                           ; BSR set to: 1
  5863                           ;incstack = 0
  5864  00739C  90D8               	bcf	status,0,c
  5865  00739E  3583               	rlcf	TestAlarm@id& (0+255),w,b
  5866  0073A0  6ED9               	movwf	fsr2l,c
  5867  0073A2  3584               	rlcf	(TestAlarm@id+1)& (0+255),w,b
  5868  0073A4  6EDA               	movwf	fsr2h,c
  5869  0073A6  0E26               	movlw	low _testAlarm
  5870  0073A8  26D9               	addwf	fsr2l,f,c
  5871  0073AA  0E03               	movlw	high _testAlarm
  5872  0073AC  22DA               	addwfc	fsr2h,f,c
  5873  0073AE  50DE               	movf	postinc2,w,c
  5874  0073B0  10DE               	iorwf	postinc2,w,c
  5875  0073B2  A4D8               	btfss	status,2,c
  5876  0073B4  D002               	goto	u21940
  5877  0073B6  0E01               	movlw	1
  5878  0073B8  D001               	goto	u21950
  5879  0073BA                     u21940:
  5880  0073BA  0E00               	movlw	0
  5881  0073BC                     u21950:
  5882  0073BC  6F87               	movwf	(??_TestAlarm+2)& (0+255),b
  5883  0073BE  6B88               	clrf	(??_TestAlarm+3)& (0+255),b
  5884  0073C0  90D8               	bcf	status,0,c
  5885  0073C2  3583               	rlcf	TestAlarm@id& (0+255),w,b
  5886  0073C4  6ED9               	movwf	fsr2l,c
  5887  0073C6  3584               	rlcf	(TestAlarm@id+1)& (0+255),w,b
  5888  0073C8  6EDA               	movwf	fsr2h,c
  5889  0073CA  0E26               	movlw	low _testAlarm
  5890  0073CC  26D9               	addwf	fsr2l,f,c
  5891  0073CE  0E03               	movlw	high _testAlarm
  5892  0073D0  22DA               	addwfc	fsr2h,f,c
  5893  0073D2  0060  F61F  FFDE   	movff	??_TestAlarm+2,postinc2
  5894  0073D8  0060  F623  FFDD   	movff	??_TestAlarm+3,postdec2
  5895                           
  5896                           ; BSR set to: 1
  5897                           ;alarm.c: 343:     printf("\r\nTA: ");
  5898  0073DE  0EBA               	movlw	low STR_23
  5899  0073E0  6F71               	movwf	printf@fmt& (0+255),b
  5900  0073E2  0EFF               	movlw	high STR_23
  5901  0073E4  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5902  0073E6  ECFF  F04C         	call	_printf	;wreg free
  5903                           
  5904                           ; BSR set to: 2
  5905                           ;alarm.c: 344:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++)
  5906  0073EA  0E00               	movlw	0
  5907  0073EC  0101               	movlb	1	; () banked
  5908  0073EE  6F8A               	movwf	(TestAlarm@i+1)& (0+255),b
  5909  0073F0  0E00               	movlw	0
  5910  0073F2  6F89               	movwf	TestAlarm@i& (0+255),b
  5911  0073F4                     l22207:
  5912                           
  5913                           ; BSR set to: 1
  5914                           ;alarm.c: 345:     {;alarm.c: 346:         if (testAlarm[i]) putchar('0'+i); else putcha
      +                          r('.');
  5915  0073F4  90D8               	bcf	status,0,c
  5916  0073F6  3589               	rlcf	TestAlarm@i& (0+255),w,b
  5917  0073F8  6ED9               	movwf	fsr2l,c
  5918  0073FA  358A               	rlcf	(TestAlarm@i+1)& (0+255),w,b
  5919  0073FC  6EDA               	movwf	fsr2h,c
  5920  0073FE  0E26               	movlw	low _testAlarm
  5921  007400  26D9               	addwf	fsr2l,f,c
  5922  007402  0E03               	movlw	high _testAlarm
  5923  007404  22DA               	addwfc	fsr2h,f,c
  5924  007406  50DE               	movf	postinc2,w,c
  5925  007408  10DE               	iorwf	postinc2,w,c
  5926  00740A  B4D8               	btfsc	status,2,c
  5927  00740C  D009               	goto	l22211
  5928                           
  5929                           ; BSR set to: 1
  5930  00740E  0E30               	movlw	48
  5931  007410  2589               	addwf	TestAlarm@i& (0+255),w,b
  5932  007412  6F0F               	movwf	putchar@c& (0+255),b
  5933  007414  0E00               	movlw	0
  5934  007416  218A               	addwfc	(TestAlarm@i+1)& (0+255),w,b
  5935  007418  6F10               	movwf	(putchar@c+1)& (0+255),b
  5936  00741A  EC84  F04F         	call	_putchar	;wreg free
  5937  00741E  D006               	goto	l22213
  5938  007420                     l22211:
  5939                           
  5940                           ; BSR set to: 1
  5941  007420  0E00               	movlw	0
  5942  007422  6F10               	movwf	(putchar@c+1)& (0+255),b
  5943  007424  0E2E               	movlw	46
  5944  007426  6F0F               	movwf	putchar@c& (0+255),b
  5945  007428  EC84  F04F         	call	_putchar	;wreg free
  5946  00742C                     l22213:
  5947                           
  5948                           ; BSR set to: 1
  5949                           ;alarm.c: 347:     }
  5950  00742C  4B89               	infsnz	TestAlarm@i& (0+255),f,b
  5951  00742E  2B8A               	incf	(TestAlarm@i+1)& (0+255),f,b
  5952                           
  5953                           ; BSR set to: 1
  5954  007430  518A               	movf	(TestAlarm@i+1)& (0+255),w,b
  5955  007432  E104               	bnz	u21970
  5956  007434  0E13               	movlw	19
  5957  007436  5D89               	subwf	TestAlarm@i& (0+255),w,b
  5958  007438  A0D8               	btfss	status,0,c
  5959  00743A  D7DC               	goto	l22207
  5960  00743C                     u21970:
  5961                           
  5962                           ; BSR set to: 1
  5963                           ;alarm.c: 348:     printf("\r\n");
  5964  00743C  0EBA               	movlw	low (STR_22+15)
  5965  00743E  6F71               	movwf	printf@fmt& (0+255),b
  5966  007440  0EFE               	movlw	high (STR_22+15)
  5967  007442  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5968  007444  ECFF  F04C         	call	_printf	;wreg free
  5969                           
  5970                           ; BSR set to: 2
  5971  007448  0012               	return		;funcret
  5972  00744A                     __end_of_TestAlarm:
  5973                           	opt callstack 0
  5974                           
  5975 ;; *************** function _putchar *****************
  5976 ;; Defined at:
  5977 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/putchar.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  c               2   15[BANK1 ] int 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2   15[BANK1 ] int 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 3F/1
  5988 ;;		On exit  : 3F/1
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        2 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:   19
  5998 ;; This function calls:
  5999 ;;		_fputc
  6000 ;; This function is called by:
  6001 ;;		_TestAlarm
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text6
  6006  009F08                     __ptext6:
  6007                           	opt callstack 0
  6008  009F08                     _putchar:
  6009                           	opt callstack 10
  6010                           
  6011                           ; BSR set to: 1
  6012                           ;	Return value of _putchar is never used
  6013                           
  6014                           ; BSR set to: 2
  6015                           ;incstack = 0
  6016  009F08  0060  F43C  F106   	movff	putchar@c,fputc@c
  6017  009F0E  0060  F440  F107   	movff	putchar@c+1,fputc@c+1
  6018  009F14  0E00               	movlw	0
  6019  009F16  6F08               	movwf	fputc@fp& (0+255),b
  6020  009F18  0E00               	movlw	0
  6021  009F1A  6F09               	movwf	(fputc@fp+1)& (0+255),b
  6022  009F1C  ECB3  F037         	call	_fputc	;wreg free
  6023                           
  6024                           ; BSR set to: 1
  6025  009F20  0012               	return		;funcret
  6026  009F22                     __end_of_putchar:
  6027                           	opt callstack 0
  6028                           
  6029 ;; *************** function _SetSV1 *****************
  6030 ;; Defined at:
  6031 ;;		line 890 in file "monitor.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  value           1    wreg     _Bool 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  value           1  131[BANK1 ] _Bool 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 1/3D
  6042 ;;		On exit  : 3D/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;Total ram usage:        1 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:   25
  6052 ;; This function calls:
  6053 ;;		_printf
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text7
  6060  009664                     __ptext7:
  6061                           	opt callstack 0
  6062  009664                     _SetSV1:
  6063                           	opt callstack 5
  6064                           
  6065                           ; BSR set to: 1
  6066                           ;incstack = 0
  6067                           ;SetSV1@value stored from wreg
  6068  009664  0101               	movlb	1	; () banked
  6069  009666  6F83               	movwf	SetSV1@value& (0+255),b
  6070                           
  6071                           ;monitor.c: 891:     static _Bool last= 0;;monitor.c: 892:     if (last!=value) printf("
      +                          \r\nSV1: %d\r\n", value);
  6072  009668  0101               	movlb	1	; () banked
  6073  00966A  5183               	movf	SetSV1@value& (0+255),w,b
  6074  00966C  0100               	movlb	0	; () banked
  6075  00966E  19F1               	xorwf	SetSV1@last& (0+255),w,b
  6076  009670  B4D8               	btfsc	status,2,c
  6077  009672  D00B               	goto	l21825
  6078                           
  6079                           ; BSR set to: 0
  6080  009674  0E90               	movlw	low STR_48
  6081  009676  0101               	movlb	1	; () banked
  6082  009678  6F71               	movwf	printf@fmt& (0+255),b
  6083  00967A  0EFF               	movlw	high STR_48
  6084  00967C  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6085  00967E  0060  F60C  F173   	movff	SetSV1@value,?_printf+2
  6086  009684  6B74               	clrf	(?_printf+3)& (0+255),b
  6087  009686  ECFF  F04C         	call	_printf	;wreg free
  6088  00968A                     l21825:
  6089                           
  6090                           ;monitor.c: 893:     last = value;
  6091  00968A  0060  F60C  F0F1   	movff	SetSV1@value,SetSV1@last
  6092                           
  6093                           ;monitor.c: 894:     normalSV1 = value;
  6094  009690  0060  F60C  F29F   	movff	SetSV1@value,_normalSV1
  6095  009696  0012               	return		;funcret
  6096  009698                     __end_of_SetSV1:
  6097                           	opt callstack 0
  6098                           
  6099 ;; *************** function _SetCalibrateState *****************
  6100 ;; Defined at:
  6101 ;;		line 245 in file "monitor.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  calib           1    wreg     _Bool 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  calib           1  131[BANK1 ] _Bool 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 3F/3
  6112 ;;		On exit  : 3C/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;Total ram usage:        1 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:   25
  6122 ;; This function calls:
  6123 ;;		_ClearVars
  6124 ;;		_GetPressureV_pa
  6125 ;;		_GetPressure_pa
  6126 ;;		_TMR0_StartTimer
  6127 ;;		_TMR0_StopTimer
  6128 ;;		_UnDisplayCalibrate
  6129 ;;		___awdiv
  6130 ;;		_printf
  6131 ;; This function is called by:
  6132 ;;		_main
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text8
  6137  0063A6                     __ptext8:
  6138                           	opt callstack 0
  6139  0063A6                     _SetCalibrateState:
  6140                           	opt callstack 5
  6141                           
  6142                           ;incstack = 0
  6143                           ;SetCalibrateState@calib stored from wreg
  6144  0063A6  0101               	movlb	1	; () banked
  6145  0063A8  6F83               	movwf	SetCalibrateState@calib& (0+255),b
  6146                           
  6147                           ;monitor.c: 246:     TMR0_StopTimer();
  6148  0063AA  EC1C  F053         	call	_TMR0_StopTimer	;wreg free
  6149                           
  6150                           ;monitor.c: 247:     if (calib) {
  6151  0063AE  0101               	movlb	1	; () banked
  6152  0063B0  5183               	movf	SetCalibrateState@calib& (0+255),w,b
  6153  0063B2  B4D8               	btfsc	status,2,c
  6154  0063B4  D005               	goto	l22275
  6155                           
  6156                           ; BSR set to: 1
  6157                           ;monitor.c: 249:         state = 1;
  6158  0063B6  0E00               	movlw	0
  6159  0063B8  6FE0               	movwf	(_state+1)& (0+255),b
  6160  0063BA  0E01               	movlw	1
  6161  0063BC  6FDF               	movwf	_state& (0+255),b
  6162                           
  6163                           ;monitor.c: 250:     } else {
  6164  0063BE  D07F               	goto	l22285
  6165  0063C0                     l22275:
  6166                           
  6167                           ; BSR set to: 1
  6168                           ;monitor.c: 261:         if (state == 1) {
  6169  0063C0  05DF               	decf	_state& (0+255),w,b
  6170  0063C2  11E0               	iorwf	(_state+1)& (0+255),w,b
  6171  0063C4  A4D8               	btfss	status,2,c
  6172  0063C6  D079               	goto	l22283
  6173                           
  6174                           ; BSR set to: 1
  6175                           ;monitor.c: 262:             printf("\r\nPreCalib: Pres:%d Off:%d //Volume pres:%d Off:%
      +                          d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
  6176  0063C8  0E05               	movlw	low STR_40
  6177  0063CA  6F71               	movwf	printf@fmt& (0+255),b
  6178  0063CC  0EFD               	movlw	high STR_40
  6179  0063CE  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6180  0063D0  EC39  F026         	call	_GetPressure_pa	;wreg free
  6181  0063D4  0060  F478  F173   	movff	?_GetPressure_pa,?_printf+2
  6182  0063DA  0060  F47C  F174   	movff	?_GetPressure_pa+1,?_printf+3
  6183  0063E0  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6184  0063E6  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6185  0063EC  0E00               	movlw	0
  6186  0063EE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6187  0063F0  0E08               	movlw	8
  6188  0063F2  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6189  0063F4  EC9D  F03F         	call	___awdiv	;wreg free
  6190  0063F8  0060  F428  F175   	movff	?___awdiv,?_printf+4
  6191  0063FE  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
  6192  006404  EC76  F03B         	call	_GetPressureV_pa	;wreg free
  6193  006408  0060  F448  F177   	movff	?_GetPressureV_pa,?_printf+6
  6194  00640E  0060  F44C  F178   	movff	?_GetPressureV_pa+1,?_printf+7
  6195  006414  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6196  00641A  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6197  006420  0E00               	movlw	0
  6198  006422  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6199  006424  0E08               	movlw	8
  6200  006426  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6201  006428  EC9D  F03F         	call	___awdiv	;wreg free
  6202  00642C  0060  F428  F179   	movff	?___awdiv,?_printf+8
  6203  006432  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
  6204  006438  ECFF  F04C         	call	_printf	;wreg free
  6205                           
  6206                           ; BSR set to: 2
  6207                           ;monitor.c: 263:             state = 0;
  6208  00643C  0E00               	movlw	0
  6209  00643E  0101               	movlb	1	; () banked
  6210  006440  6FE0               	movwf	(_state+1)& (0+255),b
  6211  006442  0E00               	movlw	0
  6212  006444  6FDF               	movwf	_state& (0+255),b
  6213                           
  6214                           ; BSR set to: 1
  6215                           ;monitor.c: 264:             printf("\r\nCalibrated: Pres:%d Off:%d //Volume pres:%d Off
      +                          :%d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
  6216  006446  0E98               	movlw	low STR_41
  6217  006448  6F71               	movwf	printf@fmt& (0+255),b
  6218  00644A  0EFC               	movlw	high STR_41
  6219  00644C  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6220  00644E  EC39  F026         	call	_GetPressure_pa	;wreg free
  6221  006452  0060  F478  F173   	movff	?_GetPressure_pa,?_printf+2
  6222  006458  0060  F47C  F174   	movff	?_GetPressure_pa+1,?_printf+3
  6223  00645E  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6224  006464  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6225  00646A  0E00               	movlw	0
  6226  00646C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6227  00646E  0E08               	movlw	8
  6228  006470  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6229  006472  EC9D  F03F         	call	___awdiv	;wreg free
  6230  006476  0060  F428  F175   	movff	?___awdiv,?_printf+4
  6231  00647C  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
  6232  006482  EC76  F03B         	call	_GetPressureV_pa	;wreg free
  6233  006486  0060  F448  F177   	movff	?_GetPressureV_pa,?_printf+6
  6234  00648C  0060  F44C  F178   	movff	?_GetPressureV_pa+1,?_printf+7
  6235  006492  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6236  006498  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6237  00649E  0E00               	movlw	0
  6238  0064A0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6239  0064A2  0E08               	movlw	8
  6240  0064A4  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6241  0064A6  EC9D  F03F         	call	___awdiv	;wreg free
  6242  0064AA  0060  F428  F179   	movff	?___awdiv,?_printf+8
  6243  0064B0  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
  6244  0064B6  ECFF  F04C         	call	_printf	;wreg free
  6245  0064BA                     l22283:
  6246                           
  6247                           ;monitor.c: 266:         UnDisplayCalibrate();
  6248  0064BA  ECD5  F050         	call	_UnDisplayCalibrate	;wreg free
  6249  0064BE                     l22285:
  6250                           
  6251                           ;monitor.c: 268:     ClearVars();
  6252  0064BE  EC71  F020         	call	_ClearVars	;wreg free
  6253                           
  6254                           ; BSR set to: 2
  6255                           ;monitor.c: 269:     TMR0_StartTimer();
  6256  0064C2  EC20  F053         	call	_TMR0_StartTimer	;wreg free
  6257  0064C6  0012               	return		;funcret
  6258  0064C8                     __end_of_SetCalibrateState:
  6259                           	opt callstack 0
  6260                           
  6261 ;; *************** function _UnDisplayCalibrate *****************
  6262 ;; Defined at:
  6263 ;;		line 61 in file "display.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2
  6272 ;; Tracked objects:
  6273 ;;		On entry : 3C/1
  6274 ;;		On exit  : 3F/3
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;Total ram usage:        0 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:   16
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_SetCalibrateState
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text9
  6292  00A1AA                     __ptext9:
  6293                           	opt callstack 0
  6294  00A1AA                     _UnDisplayCalibrate:
  6295                           	opt callstack 13
  6296                           
  6297                           ;display.c: 62:     calibrate=0;
  6298                           
  6299                           ;incstack = 0
  6300  00A1AA  0E00               	movlw	0
  6301  00A1AC  0100               	movlb	0	; () banked
  6302  00A1AE  6FFF               	movwf	_calibrate& (0+255),b
  6303                           
  6304                           ;display.c: 63:     msg4[0]=0;
  6305  00A1B0  0E00               	movlw	0
  6306  00A1B2  0103               	movlb	3	; () banked
  6307  00A1B4  6FA9               	movwf	_msg4& (0+255),b
  6308                           
  6309                           ; BSR set to: 3
  6310  00A1B6  0012               	return		;funcret
  6311  00A1B8                     __end_of_UnDisplayCalibrate:
  6312                           	opt callstack 0
  6313                           
  6314 ;; *************** function _TMR0_StopTimer *****************
  6315 ;; Defined at:
  6316 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		None
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/1
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:   16
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_SetCalibrateState
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text10
  6345  00A638                     __ptext10:
  6346                           	opt callstack 0
  6347  00A638                     _TMR0_StopTimer:
  6348                           	opt callstack 13
  6349                           
  6350                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
  6351                           
  6352                           ; BSR set to: 3
  6353                           ;incstack = 0
  6354  00A638  9EB8               	bcf	184,7,c	;volatile
  6355  00A63A  0012               	return		;funcret
  6356  00A63C                     __end_of_TMR0_StopTimer:
  6357                           	opt callstack 0
  6358                           
  6359 ;; *************** function _GetPressure_pa *****************
  6360 ;; Defined at:
  6361 ;;		line 787 in file "monitor.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  mv              4   42[BANK1 ] long 
  6366 ;;  p32             4   34[BANK1 ] long 
  6367 ;;  p               2   40[BANK1 ] short 
  6368 ;;  adc             2   38[BANK1 ] unsigned short 
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  2   30[BANK1 ] short 
  6371 ;; Registers used:
  6372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 3F/1
  6375 ;;		On exit  : 3F/1
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6378 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;Total ram usage:       16 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:   18
  6385 ;; This function calls:
  6386 ;;		_AdcGetData
  6387 ;;		___aldiv
  6388 ;;		___awdiv
  6389 ;;		___lmul
  6390 ;; This function is called by:
  6391 ;;		_SetCalibrateState
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text11
  6396  004C72                     __ptext11:
  6397                           	opt callstack 0
  6398  004C72                     _GetPressure_pa:
  6399                           	opt callstack 11
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;monitor.c: 788:     adc_result_t adc = AdcGetData(0);
  6403                           
  6404                           ;incstack = 0
  6405  004C72  0E00               	movlw	0
  6406  004C74  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
  6407  004C76  0E00               	movlw	0
  6408  004C78  6F0A               	movwf	AdcGetData@id& (0+255),b
  6409  004C7A  EC99  F044         	call	_AdcGetData	;wreg free
  6410  004C7E  0060  F428  F126   	movff	?_AdcGetData,GetPressure_pa@adc
  6411  004C84  0060  F42C  F127   	movff	?_AdcGetData+1,GetPressure_pa@adc+1
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;monitor.c: 789:     if (state == 1) {
  6415  004C8A  05DF               	decf	_state& (0+255),w,b
  6416  004C8C  11E0               	iorwf	(_state+1)& (0+255),w,b
  6417  004C8E  A4D8               	btfss	status,2,c
  6418  004C90  D007               	goto	l21073
  6419                           
  6420                           ; BSR set to: 1
  6421                           ;monitor.c: 790:         return adc;
  6422  004C92  0060  F498  F11E   	movff	GetPressure_pa@adc,?_GetPressure_pa
  6423  004C98  0060  F49C  F11F   	movff	GetPressure_pa@adc+1,?_GetPressure_pa+1
  6424  004C9E  0012               	return	
  6425  004CA0                     l21073:
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;monitor.c: 793:     int32_t mv = adc - adcOffset/8;
  6429  004CA0  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6430  004CA6  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6431  004CAC  0E00               	movlw	0
  6432  004CAE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6433  004CB0  0E08               	movlw	8
  6434  004CB2  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6435  004CB4  EC9D  F03F         	call	___awdiv	;wreg free
  6436  004CB8  0060  F498  F120   	movff	GetPressure_pa@adc,??_GetPressure_pa
  6437  004CBE  0060  F49C  F121   	movff	GetPressure_pa@adc+1,??_GetPressure_pa+1
  6438  004CC4  510A               	movf	?___awdiv& (0+255),w,b
  6439  004CC6  5F20               	subwf	??_GetPressure_pa& (0+255),f,b
  6440  004CC8  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6441  004CCA  5B21               	subwfb	(??_GetPressure_pa+1)& (0+255),f,b
  6442  004CCC  0060  F480  F12A   	movff	??_GetPressure_pa,GetPressure_pa@mv
  6443  004CD2  0060  F484  F12B   	movff	??_GetPressure_pa+1,GetPressure_pa@mv+1
  6444  004CD8  6B2C               	clrf	(GetPressure_pa@mv+2)& (0+255),b
  6445  004CDA  6B2D               	clrf	(GetPressure_pa@mv+3)& (0+255),b
  6446                           
  6447                           ; BSR set to: 1
  6448                           ;monitor.c: 794:     mv = (mv < 0) ? 0 : mv;
  6449  004CDC  AF2D               	btfss	(GetPressure_pa@mv+3)& (0+255),7,b
  6450  004CDE  D008               	goto	l21081
  6451                           
  6452                           ; BSR set to: 1
  6453  004CE0  0E00               	movlw	0
  6454  004CE2  6F2A               	movwf	GetPressure_pa@mv& (0+255),b
  6455  004CE4  0E00               	movlw	0
  6456  004CE6  6F2B               	movwf	(GetPressure_pa@mv+1)& (0+255),b
  6457  004CE8  0E00               	movlw	0
  6458  004CEA  6F2C               	movwf	(GetPressure_pa@mv+2)& (0+255),b
  6459  004CEC  0E00               	movlw	0
  6460  004CEE  6F2D               	movwf	(GetPressure_pa@mv+3)& (0+255),b
  6461  004CF0                     l21081:
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;monitor.c: 795:     mv = ( mv * 625 )/ 512;
  6465  004CF0  0060  F4A8  F104   	movff	GetPressure_pa@mv,___lmul@multiplier
  6466  004CF6  0060  F4AC  F105   	movff	GetPressure_pa@mv+1,___lmul@multiplier+1
  6467  004CFC  0060  F4B0  F106   	movff	GetPressure_pa@mv+2,___lmul@multiplier+2
  6468  004D02  0060  F4B4  F107   	movff	GetPressure_pa@mv+3,___lmul@multiplier+3
  6469  004D08  0E71               	movlw	113
  6470  004D0A  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6471  004D0C  0E02               	movlw	2
  6472  004D0E  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6473  004D10  0E00               	movlw	0
  6474  004D12  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6475  004D14  0E00               	movlw	0
  6476  004D16  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6477  004D18  EC93  F045         	call	___lmul	;wreg free
  6478  004D1C  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6479  004D22  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6480  004D28  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6481  004D2E  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6482  004D34  0E00               	movlw	0
  6483  004D36  6F14               	movwf	___aldiv@divisor& (0+255),b
  6484  004D38  0E02               	movlw	2
  6485  004D3A  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6486  004D3C  0E00               	movlw	0
  6487  004D3E  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6488  004D40  0E00               	movlw	0
  6489  004D42  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6490  004D44  ECB4  F035         	call	___aldiv	;wreg free
  6491  004D48  0060  F440  F12A   	movff	?___aldiv,GetPressure_pa@mv
  6492  004D4E  0060  F444  F12B   	movff	?___aldiv+1,GetPressure_pa@mv+1
  6493  004D54  0060  F448  F12C   	movff	?___aldiv+2,GetPressure_pa@mv+2
  6494  004D5A  0060  F44C  F12D   	movff	?___aldiv+3,GetPressure_pa@mv+3
  6495                           
  6496                           ; BSR set to: 1
  6497                           ;monitor.c: 797:     int32_t p32 = (mv*20)/9;
  6498  004D60  0060  F4A8  F104   	movff	GetPressure_pa@mv,___lmul@multiplier
  6499  004D66  0060  F4AC  F105   	movff	GetPressure_pa@mv+1,___lmul@multiplier+1
  6500  004D6C  0060  F4B0  F106   	movff	GetPressure_pa@mv+2,___lmul@multiplier+2
  6501  004D72  0060  F4B4  F107   	movff	GetPressure_pa@mv+3,___lmul@multiplier+3
  6502  004D78  0E14               	movlw	20
  6503  004D7A  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6504  004D7C  0E00               	movlw	0
  6505  004D7E  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6506  004D80  0E00               	movlw	0
  6507  004D82  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6508  004D84  0E00               	movlw	0
  6509  004D86  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6510  004D88  EC93  F045         	call	___lmul	;wreg free
  6511  004D8C  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6512  004D92  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6513  004D98  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6514  004D9E  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6515  004DA4  0E09               	movlw	9
  6516  004DA6  6F14               	movwf	___aldiv@divisor& (0+255),b
  6517  004DA8  0E00               	movlw	0
  6518  004DAA  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6519  004DAC  0E00               	movlw	0
  6520  004DAE  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6521  004DB0  0E00               	movlw	0
  6522  004DB2  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6523  004DB4  ECB4  F035         	call	___aldiv	;wreg free
  6524  004DB8  0060  F440  F122   	movff	?___aldiv,GetPressure_pa@p32
  6525  004DBE  0060  F444  F123   	movff	?___aldiv+1,GetPressure_pa@p32+1
  6526  004DC4  0060  F448  F124   	movff	?___aldiv+2,GetPressure_pa@p32+2
  6527  004DCA  0060  F44C  F125   	movff	?___aldiv+3,GetPressure_pa@p32+3
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;monitor.c: 798:     int16_t p = ((int16_t) p32);
  6531  004DD0  0060  F488  F128   	movff	GetPressure_pa@p32,GetPressure_pa@p
  6532  004DD6  0060  F48C  F129   	movff	GetPressure_pa@p32+1,GetPressure_pa@p+1
  6533                           
  6534                           ; BSR set to: 1
  6535                           ;monitor.c: 799:     if (p<0) p=0;
  6536  004DDC  AF29               	btfss	(GetPressure_pa@p+1)& (0+255),7,b
  6537  004DDE  D004               	goto	l21091
  6538                           
  6539                           ; BSR set to: 1
  6540  004DE0  0E00               	movlw	0
  6541  004DE2  6F29               	movwf	(GetPressure_pa@p+1)& (0+255),b
  6542  004DE4  0E00               	movlw	0
  6543  004DE6  6F28               	movwf	GetPressure_pa@p& (0+255),b
  6544  004DE8                     l21091:
  6545                           
  6546                           ; BSR set to: 1
  6547                           ;monitor.c: 800:     return p;
  6548  004DE8  0060  F4A0  F11E   	movff	GetPressure_pa@p,?_GetPressure_pa
  6549  004DEE  0060  F4A4  F11F   	movff	GetPressure_pa@p+1,?_GetPressure_pa+1
  6550                           
  6551                           ; BSR set to: 1
  6552  004DF4  0012               	return		;funcret
  6553  004DF6                     __end_of_GetPressure_pa:
  6554                           	opt callstack 0
  6555                           
  6556 ;; *************** function _GetPressureV_pa *****************
  6557 ;; Defined at:
  6558 ;;		line 814 in file "monitor.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;		None
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  mv              4   24[BANK1 ] long 
  6563 ;;  p               2   28[BANK1 ] short 
  6564 ;;  adcv            2   22[BANK1 ] unsigned short 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  2   18[BANK1 ] short 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 3F/1
  6571 ;;		On exit  : 3F/1
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6574 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;Total ram usage:       12 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:   18
  6581 ;; This function calls:
  6582 ;;		_AdcGetData
  6583 ;;		___awdiv
  6584 ;; This function is called by:
  6585 ;;		_SetCalibrateState
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text12
  6590  0076EC                     __ptext12:
  6591                           	opt callstack 0
  6592  0076EC                     _GetPressureV_pa:
  6593                           	opt callstack 11
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;monitor.c: 816:     adc_result_t adcv = AdcGetData(2);
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;incstack = 0
  6600  0076EC  0E00               	movlw	0
  6601  0076EE  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
  6602  0076F0  0E02               	movlw	2
  6603  0076F2  6F0A               	movwf	AdcGetData@id& (0+255),b
  6604  0076F4  EC99  F044         	call	_AdcGetData	;wreg free
  6605  0076F8  0060  F428  F116   	movff	?_AdcGetData,GetPressureV_pa@adcv
  6606  0076FE  0060  F42C  F117   	movff	?_AdcGetData+1,GetPressureV_pa@adcv+1
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;monitor.c: 817:     if (state == 1) {
  6610  007704  05DF               	decf	_state& (0+255),w,b
  6611  007706  11E0               	iorwf	(_state+1)& (0+255),w,b
  6612  007708  A4D8               	btfss	status,2,c
  6613  00770A  D007               	goto	l21101
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;monitor.c: 818:         return adcv;
  6617  00770C  0060  F458  F112   	movff	GetPressureV_pa@adcv,?_GetPressureV_pa
  6618  007712  0060  F45C  F113   	movff	GetPressureV_pa@adcv+1,?_GetPressureV_pa+1
  6619  007718  0012               	return	
  6620  00771A                     l21101:
  6621                           
  6622                           ; BSR set to: 1
  6623                           ;monitor.c: 821:     int32_t mv = adcv - adcVOffset/8;
  6624  00771A  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6625  007720  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6626  007726  0E00               	movlw	0
  6627  007728  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6628  00772A  0E08               	movlw	8
  6629  00772C  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6630  00772E  EC9D  F03F         	call	___awdiv	;wreg free
  6631  007732  0060  F458  F114   	movff	GetPressureV_pa@adcv,??_GetPressureV_pa
  6632  007738  0060  F45C  F115   	movff	GetPressureV_pa@adcv+1,??_GetPressureV_pa+1
  6633  00773E  510A               	movf	?___awdiv& (0+255),w,b
  6634  007740  5F14               	subwf	??_GetPressureV_pa& (0+255),f,b
  6635  007742  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6636  007744  5B15               	subwfb	(??_GetPressureV_pa+1)& (0+255),f,b
  6637  007746  0060  F450  F118   	movff	??_GetPressureV_pa,GetPressureV_pa@mv
  6638  00774C  0060  F454  F119   	movff	??_GetPressureV_pa+1,GetPressureV_pa@mv+1
  6639  007752  6B1A               	clrf	(GetPressureV_pa@mv+2)& (0+255),b
  6640  007754  6B1B               	clrf	(GetPressureV_pa@mv+3)& (0+255),b
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;monitor.c: 822:     mv = (mv < 0) ? 0 : mv;
  6644  007756  AF1B               	btfss	(GetPressureV_pa@mv+3)& (0+255),7,b
  6645  007758  D008               	goto	l21109
  6646                           
  6647                           ; BSR set to: 1
  6648  00775A  0E00               	movlw	0
  6649  00775C  6F18               	movwf	GetPressureV_pa@mv& (0+255),b
  6650  00775E  0E00               	movlw	0
  6651  007760  6F19               	movwf	(GetPressureV_pa@mv+1)& (0+255),b
  6652  007762  0E00               	movlw	0
  6653  007764  6F1A               	movwf	(GetPressureV_pa@mv+2)& (0+255),b
  6654  007766  0E00               	movlw	0
  6655  007768  6F1B               	movwf	(GetPressureV_pa@mv+3)& (0+255),b
  6656  00776A                     l21109:
  6657                           
  6658                           ; BSR set to: 1
  6659                           ;monitor.c: 825:     int16_t p = mv;
  6660  00776A  0060  F460  F11C   	movff	GetPressureV_pa@mv,GetPressureV_pa@p
  6661  007770  0060  F464  F11D   	movff	GetPressureV_pa@mv+1,GetPressureV_pa@p+1
  6662                           
  6663                           ; BSR set to: 1
  6664                           ;monitor.c: 827:     if (p<0) p=0;
  6665  007776  AF1D               	btfss	(GetPressureV_pa@p+1)& (0+255),7,b
  6666  007778  D004               	goto	l21115
  6667                           
  6668                           ; BSR set to: 1
  6669  00777A  0E00               	movlw	0
  6670  00777C  6F1D               	movwf	(GetPressureV_pa@p+1)& (0+255),b
  6671  00777E  0E00               	movlw	0
  6672  007780  6F1C               	movwf	GetPressureV_pa@p& (0+255),b
  6673  007782                     l21115:
  6674                           
  6675                           ; BSR set to: 1
  6676                           ;monitor.c: 828:     return p;
  6677  007782  0060  F470  F112   	movff	GetPressureV_pa@p,?_GetPressureV_pa
  6678  007788  0060  F474  F113   	movff	GetPressureV_pa@p+1,?_GetPressureV_pa+1
  6679                           
  6680                           ; BSR set to: 1
  6681  00778E  0012               	return		;funcret
  6682  007790                     __end_of_GetPressureV_pa:
  6683                           	opt callstack 0
  6684                           
  6685 ;; *************** function _SeePressure_pa *****************
  6686 ;; Defined at:
  6687 ;;		line 803 in file "monitor.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  mv              4   42[BANK1 ] long 
  6692 ;;  p32             4   34[BANK1 ] long 
  6693 ;;  p               2   40[BANK1 ] short 
  6694 ;;  adc             2   38[BANK1 ] unsigned short 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  2   30[BANK1 ] short 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 3F/1
  6701 ;;		On exit  : 3F/1
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6704 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;Total ram usage:       16 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:   18
  6711 ;; This function calls:
  6712 ;;		_AdcSeeData
  6713 ;;		___aldiv
  6714 ;;		___awdiv
  6715 ;;		___lmul
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text13
  6722  005842                     __ptext13:
  6723                           	opt callstack 0
  6724  005842                     _SeePressure_pa:
  6725                           	opt callstack 12
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;monitor.c: 804:     adc_result_t adc = AdcSeeData(0);
  6729                           
  6730                           ; BSR set to: 1
  6731                           ;incstack = 0
  6732  005842  0E00               	movlw	0
  6733  005844  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
  6734  005846  0E00               	movlw	0
  6735  005848  6F0A               	movwf	AdcSeeData@id& (0+255),b
  6736  00584A  EC78  F049         	call	_AdcSeeData	;wreg free
  6737  00584E  0060  F428  F126   	movff	?_AdcSeeData,SeePressure_pa@adc
  6738  005854  0060  F42C  F127   	movff	?_AdcSeeData+1,SeePressure_pa@adc+1
  6739                           
  6740                           ; BSR set to: 1
  6741                           ;monitor.c: 805:     int32_t mv = adc - adcOffset/8;
  6742  00585A  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
  6743  005860  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6744  005866  0E00               	movlw	0
  6745  005868  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6746  00586A  0E08               	movlw	8
  6747  00586C  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6748  00586E  EC9D  F03F         	call	___awdiv	;wreg free
  6749  005872  0060  F498  F120   	movff	SeePressure_pa@adc,??_SeePressure_pa
  6750  005878  0060  F49C  F121   	movff	SeePressure_pa@adc+1,??_SeePressure_pa+1
  6751  00587E  510A               	movf	?___awdiv& (0+255),w,b
  6752  005880  5F20               	subwf	??_SeePressure_pa& (0+255),f,b
  6753  005882  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6754  005884  5B21               	subwfb	(??_SeePressure_pa+1)& (0+255),f,b
  6755  005886  0060  F480  F12A   	movff	??_SeePressure_pa,SeePressure_pa@mv
  6756  00588C  0060  F484  F12B   	movff	??_SeePressure_pa+1,SeePressure_pa@mv+1
  6757  005892  6B2C               	clrf	(SeePressure_pa@mv+2)& (0+255),b
  6758  005894  6B2D               	clrf	(SeePressure_pa@mv+3)& (0+255),b
  6759                           
  6760                           ; BSR set to: 1
  6761                           ;monitor.c: 806:     mv = (mv < 0) ? 0 : mv;
  6762  005896  AF2D               	btfss	(SeePressure_pa@mv+3)& (0+255),7,b
  6763  005898  D008               	goto	l22237
  6764                           
  6765                           ; BSR set to: 1
  6766  00589A  0E00               	movlw	0
  6767  00589C  6F2A               	movwf	SeePressure_pa@mv& (0+255),b
  6768  00589E  0E00               	movlw	0
  6769  0058A0  6F2B               	movwf	(SeePressure_pa@mv+1)& (0+255),b
  6770  0058A2  0E00               	movlw	0
  6771  0058A4  6F2C               	movwf	(SeePressure_pa@mv+2)& (0+255),b
  6772  0058A6  0E00               	movlw	0
  6773  0058A8  6F2D               	movwf	(SeePressure_pa@mv+3)& (0+255),b
  6774  0058AA                     l22237:
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;monitor.c: 807:     mv = ( mv * 625 )/ 512;
  6778  0058AA  0060  F4A8  F104   	movff	SeePressure_pa@mv,___lmul@multiplier
  6779  0058B0  0060  F4AC  F105   	movff	SeePressure_pa@mv+1,___lmul@multiplier+1
  6780  0058B6  0060  F4B0  F106   	movff	SeePressure_pa@mv+2,___lmul@multiplier+2
  6781  0058BC  0060  F4B4  F107   	movff	SeePressure_pa@mv+3,___lmul@multiplier+3
  6782  0058C2  0E71               	movlw	113
  6783  0058C4  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6784  0058C6  0E02               	movlw	2
  6785  0058C8  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6786  0058CA  0E00               	movlw	0
  6787  0058CC  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6788  0058CE  0E00               	movlw	0
  6789  0058D0  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6790  0058D2  EC93  F045         	call	___lmul	;wreg free
  6791  0058D6  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6792  0058DC  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6793  0058E2  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6794  0058E8  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6795  0058EE  0E00               	movlw	0
  6796  0058F0  6F14               	movwf	___aldiv@divisor& (0+255),b
  6797  0058F2  0E02               	movlw	2
  6798  0058F4  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6799  0058F6  0E00               	movlw	0
  6800  0058F8  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6801  0058FA  0E00               	movlw	0
  6802  0058FC  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6803  0058FE  ECB4  F035         	call	___aldiv	;wreg free
  6804  005902  0060  F440  F12A   	movff	?___aldiv,SeePressure_pa@mv
  6805  005908  0060  F444  F12B   	movff	?___aldiv+1,SeePressure_pa@mv+1
  6806  00590E  0060  F448  F12C   	movff	?___aldiv+2,SeePressure_pa@mv+2
  6807  005914  0060  F44C  F12D   	movff	?___aldiv+3,SeePressure_pa@mv+3
  6808                           
  6809                           ; BSR set to: 1
  6810                           ;monitor.c: 808:     int32_t p32 = (mv*20)/9;
  6811  00591A  0060  F4A8  F104   	movff	SeePressure_pa@mv,___lmul@multiplier
  6812  005920  0060  F4AC  F105   	movff	SeePressure_pa@mv+1,___lmul@multiplier+1
  6813  005926  0060  F4B0  F106   	movff	SeePressure_pa@mv+2,___lmul@multiplier+2
  6814  00592C  0060  F4B4  F107   	movff	SeePressure_pa@mv+3,___lmul@multiplier+3
  6815  005932  0E14               	movlw	20
  6816  005934  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6817  005936  0E00               	movlw	0
  6818  005938  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6819  00593A  0E00               	movlw	0
  6820  00593C  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6821  00593E  0E00               	movlw	0
  6822  005940  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6823  005942  EC93  F045         	call	___lmul	;wreg free
  6824  005946  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6825  00594C  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6826  005952  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6827  005958  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6828  00595E  0E09               	movlw	9
  6829  005960  6F14               	movwf	___aldiv@divisor& (0+255),b
  6830  005962  0E00               	movlw	0
  6831  005964  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6832  005966  0E00               	movlw	0
  6833  005968  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6834  00596A  0E00               	movlw	0
  6835  00596C  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6836  00596E  ECB4  F035         	call	___aldiv	;wreg free
  6837  005972  0060  F440  F122   	movff	?___aldiv,SeePressure_pa@p32
  6838  005978  0060  F444  F123   	movff	?___aldiv+1,SeePressure_pa@p32+1
  6839  00597E  0060  F448  F124   	movff	?___aldiv+2,SeePressure_pa@p32+2
  6840  005984  0060  F44C  F125   	movff	?___aldiv+3,SeePressure_pa@p32+3
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;monitor.c: 809:     int16_t p = ((int16_t) p32);
  6844  00598A  0060  F488  F128   	movff	SeePressure_pa@p32,SeePressure_pa@p
  6845  005990  0060  F48C  F129   	movff	SeePressure_pa@p32+1,SeePressure_pa@p+1
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;monitor.c: 810:     if (p<0) p=0;
  6849  005996  AF29               	btfss	(SeePressure_pa@p+1)& (0+255),7,b
  6850  005998  D004               	goto	l22247
  6851                           
  6852                           ; BSR set to: 1
  6853  00599A  0E00               	movlw	0
  6854  00599C  6F29               	movwf	(SeePressure_pa@p+1)& (0+255),b
  6855  00599E  0E00               	movlw	0
  6856  0059A0  6F28               	movwf	SeePressure_pa@p& (0+255),b
  6857  0059A2                     l22247:
  6858                           
  6859                           ; BSR set to: 1
  6860                           ;monitor.c: 811:     return p;
  6861  0059A2  0060  F4A0  F11E   	movff	SeePressure_pa@p,?_SeePressure_pa
  6862  0059A8  0060  F4A4  F11F   	movff	SeePressure_pa@p+1,?_SeePressure_pa+1
  6863                           
  6864                           ; BSR set to: 1
  6865  0059AE  0012               	return		;funcret
  6866  0059B0                     __end_of_SeePressure_pa:
  6867                           	opt callstack 0
  6868                           
  6869 ;; *************** function _SeePressureV_pa *****************
  6870 ;; Defined at:
  6871 ;;		line 831 in file "monitor.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  mv              4   26[BANK1 ] long 
  6876 ;;  p               2   24[BANK1 ] short 
  6877 ;;  adcv            2   22[BANK1 ] unsigned short 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  2   18[BANK1 ] short 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 3F/1
  6884 ;;		On exit  : 3F/1
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6887 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;Total ram usage:       12 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:   18
  6894 ;; This function calls:
  6895 ;;		_AdcSeeData
  6896 ;;		___awdiv
  6897 ;; This function is called by:
  6898 ;;		_main
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text14
  6903  0080D0                     __ptext14:
  6904                           	opt callstack 0
  6905  0080D0                     _SeePressureV_pa:
  6906                           	opt callstack 12
  6907                           
  6908                           ; BSR set to: 1
  6909                           ;monitor.c: 832:     adc_result_t adcv = AdcSeeData(2);
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;incstack = 0
  6913  0080D0  0E00               	movlw	0
  6914  0080D2  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
  6915  0080D4  0E02               	movlw	2
  6916  0080D6  6F0A               	movwf	AdcSeeData@id& (0+255),b
  6917  0080D8  EC78  F049         	call	_AdcSeeData	;wreg free
  6918  0080DC  0060  F428  F116   	movff	?_AdcSeeData,SeePressureV_pa@adcv
  6919  0080E2  0060  F42C  F117   	movff	?_AdcSeeData+1,SeePressureV_pa@adcv+1
  6920                           
  6921                           ; BSR set to: 1
  6922                           ;monitor.c: 833:     int32_t mv = adcv - adcVOffset/8;
  6923  0080E8  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6924  0080EE  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6925  0080F4  0E00               	movlw	0
  6926  0080F6  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6927  0080F8  0E08               	movlw	8
  6928  0080FA  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6929  0080FC  EC9D  F03F         	call	___awdiv	;wreg free
  6930  008100  0060  F458  F114   	movff	SeePressureV_pa@adcv,??_SeePressureV_pa
  6931  008106  0060  F45C  F115   	movff	SeePressureV_pa@adcv+1,??_SeePressureV_pa+1
  6932  00810C  510A               	movf	?___awdiv& (0+255),w,b
  6933  00810E  5F14               	subwf	??_SeePressureV_pa& (0+255),f,b
  6934  008110  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6935  008112  5B15               	subwfb	(??_SeePressureV_pa+1)& (0+255),f,b
  6936  008114  0060  F450  F11A   	movff	??_SeePressureV_pa,SeePressureV_pa@mv
  6937  00811A  0060  F454  F11B   	movff	??_SeePressureV_pa+1,SeePressureV_pa@mv+1
  6938  008120  6B1C               	clrf	(SeePressureV_pa@mv+2)& (0+255),b
  6939  008122  6B1D               	clrf	(SeePressureV_pa@mv+3)& (0+255),b
  6940                           
  6941                           ; BSR set to: 1
  6942                           ;monitor.c: 834:     mv = (mv < 0) ? 0 : mv;
  6943  008124  AF1D               	btfss	(SeePressureV_pa@mv+3)& (0+255),7,b
  6944  008126  D008               	goto	l22261
  6945                           
  6946                           ; BSR set to: 1
  6947  008128  0E00               	movlw	0
  6948  00812A  6F1A               	movwf	SeePressureV_pa@mv& (0+255),b
  6949  00812C  0E00               	movlw	0
  6950  00812E  6F1B               	movwf	(SeePressureV_pa@mv+1)& (0+255),b
  6951  008130  0E00               	movlw	0
  6952  008132  6F1C               	movwf	(SeePressureV_pa@mv+2)& (0+255),b
  6953  008134  0E00               	movlw	0
  6954  008136  6F1D               	movwf	(SeePressureV_pa@mv+3)& (0+255),b
  6955  008138                     l22261:
  6956                           
  6957                           ; BSR set to: 1
  6958                           ;monitor.c: 836:     int16_t p = mv;
  6959  008138  0060  F468  F118   	movff	SeePressureV_pa@mv,SeePressureV_pa@p
  6960  00813E  0060  F46C  F119   	movff	SeePressureV_pa@mv+1,SeePressureV_pa@p+1
  6961                           
  6962                           ; BSR set to: 1
  6963                           ;monitor.c: 837:     return p;
  6964  008144  0060  F460  F112   	movff	SeePressureV_pa@p,?_SeePressureV_pa
  6965  00814A  0060  F464  F113   	movff	SeePressureV_pa@p+1,?_SeePressureV_pa+1
  6966                           
  6967                           ; BSR set to: 1
  6968  008150  0012               	return		;funcret
  6969  008152                     __end_of_SeePressureV_pa:
  6970                           	opt callstack 0
  6971                           
  6972 ;; *************** function _SYSTEM_Initialize *****************
  6973 ;; Defined at:
  6974 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 3F/3D
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:   18
  6995 ;; This function calls:
  6996 ;;		_ADCC_Initialize
  6997 ;;		_CMP1_Initialize
  6998 ;;		_FVR_Initialize
  6999 ;;		_I2C2_Initialize
  7000 ;;		_INTERRUPT_Initialize
  7001 ;;		_OSCILLATOR_Initialize
  7002 ;;		_PIN_MANAGER_Initialize
  7003 ;;		_PMD_Initialize
  7004 ;;		_PWM6_Initialize
  7005 ;;		_TMR0_Initialize
  7006 ;;		_TMR1_Initialize
  7007 ;;		_TMR2_Initialize
  7008 ;;		_TMR4_Initialize
  7009 ;;		_TMR5_Initialize
  7010 ;;		_TMR6_Initialize
  7011 ;;		_UART1_Initialize
  7012 ;; This function is called by:
  7013 ;;		_main
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text15
  7018  00926E                     __ptext15:
  7019                           	opt callstack 0
  7020  00926E                     _SYSTEM_Initialize:
  7021                           	opt callstack 12
  7022                           
  7023                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  7024                           
  7025                           ; BSR set to: 1
  7026                           ;incstack = 0
  7027  00926E  EC1E  F053         	call	_INTERRUPT_Initialize	;wreg free
  7028                           
  7029                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  7030  009272  EC0D  F04E         	call	_PMD_Initialize	;wreg free
  7031                           
  7032                           ; BSR set to: 57
  7033                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7034  009276  EC6A  F038         	call	_PIN_MANAGER_Initialize	;wreg free
  7035                           
  7036                           ; BSR set to: 58
  7037                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7038  00927A  ECDE  F04F         	call	_OSCILLATOR_Initialize	;wreg free
  7039                           
  7040                           ; BSR set to: 57
  7041                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  7042  00927E  EC38  F052         	call	_FVR_Initialize	;wreg free
  7043                           
  7044                           ; BSR set to: 62
  7045                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  7046  009282  EC5D  F043         	call	_ADCC_Initialize	;wreg free
  7047                           
  7048                           ; BSR set to: 1
  7049                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  7050  009286  EC49  F04C         	call	_TMR4_Initialize	;wreg free
  7051                           
  7052                           ; BSR set to: 1
  7053                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7054  00928A  EC2B  F04F         	call	_TMR2_Initialize	;wreg free
  7055                           
  7056                           ; BSR set to: 57
  7057                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7058  00928E  ECFB  F04D         	call	_TMR0_Initialize	;wreg free
  7059                           
  7060                           ; BSR set to: 1
  7061                           ;mcc_generated_files/mcc.c: 61:     PWM6_Initialize();
  7062  009292  ECD2  F04F         	call	_PWM6_Initialize	;wreg free
  7063                           
  7064                           ; BSR set to: 63
  7065                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
  7066  009296  EC32  F04C         	call	_TMR6_Initialize	;wreg free
  7067                           
  7068                           ; BSR set to: 1
  7069                           ;mcc_generated_files/mcc.c: 63:     CMP1_Initialize();
  7070  00929A  ECAB  F04E         	call	_CMP1_Initialize	;wreg free
  7071                           
  7072                           ; BSR set to: 57
  7073                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
  7074  00929E  EC97  F047         	call	_TMR5_Initialize	;wreg free
  7075                           
  7076                           ; BSR set to: 1
  7077                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  7078  0092A2  ECF3  F046         	call	_TMR1_Initialize	;wreg free
  7079                           
  7080                           ; BSR set to: 1
  7081                           ;mcc_generated_files/mcc.c: 66:     UART1_Initialize();
  7082  0092A6  EC53  F037         	call	_UART1_Initialize	;wreg free
  7083                           
  7084                           ; BSR set to: 57
  7085                           ;mcc_generated_files/mcc.c: 67:     I2C2_Initialize();
  7086  0092AA  EC73  F050         	call	_I2C2_Initialize	;wreg free
  7087                           
  7088                           ; BSR set to: 61
  7089  0092AE  0012               	return		;funcret
  7090  0092B0                     __end_of_SYSTEM_Initialize:
  7091                           	opt callstack 0
  7092                           
  7093 ;; *************** function _UART1_Initialize *****************
  7094 ;; Defined at:
  7095 ;;		line 86 in file "mcc_generated_files/uart1.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 3F/1
  7106 ;;		On exit  : 3F/39
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:   17
  7116 ;; This function calls:
  7117 ;;		_UART1_SetErrorHandler
  7118 ;;		_UART1_SetFramingErrorHandler
  7119 ;;		_UART1_SetOverrunErrorHandler
  7120 ;;		_UART1_SetRxInterruptHandler
  7121 ;;		_UART1_SetTxInterruptHandler
  7122 ;; This function is called by:
  7123 ;;		_SYSTEM_Initialize
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text16
  7128  006EA6                     __ptext16:
  7129                           	opt callstack 0
  7130  006EA6                     _UART1_Initialize:
  7131                           	opt callstack 12
  7132                           
  7133                           ; BSR set to: 1
  7134                           ;mcc_generated_files/uart1.c: 89:     PIE3bits.U1RXIE = 0;
  7135                           
  7136                           ; BSR set to: 61
  7137                           ;incstack = 0
  7138  006EA6  0139               	movlb	57	; () banked
  7139  006EA8  9793               	bcf	147,3,b	;volatile
  7140                           
  7141                           ; BSR set to: 57
  7142                           ;mcc_generated_files/uart1.c: 90:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  7143  006EAA  0E32               	movlw	low _UART1_Receive_ISR
  7144  006EAC  0101               	movlb	1	; () banked
  7145  006EAE  6F04               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
  7146  006EB0  0E78               	movlw	high _UART1_Receive_ISR
  7147  006EB2  6F05               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
  7148  006EB4  ECE3  F050         	call	_UART1_SetRxInterruptHandler	;wreg free
  7149                           
  7150                           ; BSR set to: 1
  7151                           ;mcc_generated_files/uart1.c: 91:     PIE3bits.U1TXIE = 0;
  7152  006EB8  0139               	movlb	57	; () banked
  7153  006EBA  9993               	bcf	147,4,b	;volatile
  7154                           
  7155                           ;mcc_generated_files/uart1.c: 92:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  7156  006EBC  0E9C               	movlw	low _UART1_Transmit_ISR
  7157  006EBE  0101               	movlb	1	; () banked
  7158  006EC0  6F04               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
  7159  006EC2  0E91               	movlw	high _UART1_Transmit_ISR
  7160  006EC4  6F05               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
  7161  006EC6  ECDC  F050         	call	_UART1_SetTxInterruptHandler	;wreg free
  7162                           
  7163                           ; BSR set to: 1
  7164                           ;mcc_generated_files/uart1.c: 97:     U1P1L = 0x00;
  7165  006ECA  0E00               	movlw	0
  7166  006ECC  013D               	movlb	61	; () banked
  7167  006ECE  6FEC               	movwf	236,b	;volatile
  7168                           
  7169                           ; BSR set to: 61
  7170                           ;mcc_generated_files/uart1.c: 100:     U1P1H = 0x00;
  7171  006ED0  0E00               	movlw	0
  7172  006ED2  6FED               	movwf	237,b	;volatile
  7173                           
  7174                           ; BSR set to: 61
  7175                           ;mcc_generated_files/uart1.c: 103:     U1P2L = 0x00;
  7176  006ED4  0E00               	movlw	0
  7177  006ED6  6FEE               	movwf	238,b	;volatile
  7178                           
  7179                           ; BSR set to: 61
  7180                           ;mcc_generated_files/uart1.c: 106:     U1P2H = 0x00;
  7181  006ED8  0E00               	movlw	0
  7182  006EDA  6FEF               	movwf	239,b	;volatile
  7183                           
  7184                           ; BSR set to: 61
  7185                           ;mcc_generated_files/uart1.c: 109:     U1P3L = 0x00;
  7186  006EDC  0E00               	movlw	0
  7187  006EDE  6FF0               	movwf	240,b	;volatile
  7188                           
  7189                           ; BSR set to: 61
  7190                           ;mcc_generated_files/uart1.c: 112:     U1P3H = 0x00;
  7191  006EE0  0E00               	movlw	0
  7192  006EE2  6FF1               	movwf	241,b	;volatile
  7193                           
  7194                           ; BSR set to: 61
  7195                           ;mcc_generated_files/uart1.c: 115:     U1CON0 = 0xB0;
  7196  006EE4  0EB0               	movlw	176
  7197  006EE6  6FF2               	movwf	242,b	;volatile
  7198                           
  7199                           ; BSR set to: 61
  7200                           ;mcc_generated_files/uart1.c: 118:     U1CON1 = 0x80;
  7201  006EE8  0E80               	movlw	128
  7202  006EEA  6FF3               	movwf	243,b	;volatile
  7203                           
  7204                           ; BSR set to: 61
  7205                           ;mcc_generated_files/uart1.c: 121:     U1CON2 = 0x00;
  7206  006EEC  0E00               	movlw	0
  7207  006EEE  6FF4               	movwf	244,b	;volatile
  7208                           
  7209                           ; BSR set to: 61
  7210                           ;mcc_generated_files/uart1.c: 124:     U1BRGL = 0x8A;
  7211  006EF0  0E8A               	movlw	138
  7212  006EF2  6FF5               	movwf	245,b	;volatile
  7213                           
  7214                           ; BSR set to: 61
  7215                           ;mcc_generated_files/uart1.c: 127:     U1BRGH = 0x00;
  7216  006EF4  0E00               	movlw	0
  7217  006EF6  6FF6               	movwf	246,b	;volatile
  7218                           
  7219                           ; BSR set to: 61
  7220                           ;mcc_generated_files/uart1.c: 130:     U1FIFO = 0x00;
  7221  006EF8  0E00               	movlw	0
  7222  006EFA  6FF7               	movwf	247,b	;volatile
  7223                           
  7224                           ; BSR set to: 61
  7225                           ;mcc_generated_files/uart1.c: 133:     U1UIR = 0x00;
  7226  006EFC  0E00               	movlw	0
  7227  006EFE  6FF8               	movwf	248,b	;volatile
  7228                           
  7229                           ; BSR set to: 61
  7230                           ;mcc_generated_files/uart1.c: 136:     U1ERRIR = 0x00;
  7231  006F00  0E00               	movlw	0
  7232  006F02  6FF9               	movwf	249,b	;volatile
  7233                           
  7234                           ; BSR set to: 61
  7235                           ;mcc_generated_files/uart1.c: 139:     U1ERRIE = 0x00;
  7236  006F04  0E00               	movlw	0
  7237  006F06  6FFA               	movwf	250,b	;volatile
  7238                           
  7239                           ; BSR set to: 61
  7240                           ;mcc_generated_files/uart1.c: 142:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  7241  006F08  0EAC               	movlw	low _UART1_DefaultFramingErrorHandler
  7242  006F0A  0101               	movlb	1	; () banked
  7243  006F0C  6F04               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  7244  006F0E  0EA6               	movlw	high _UART1_DefaultFramingErrorHandler
  7245  006F10  6F05               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  7246  006F12  ECF1  F050         	call	_UART1_SetFramingErrorHandler	;wreg free
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;mcc_generated_files/uart1.c: 143:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  7250  006F16  0EAA               	movlw	low _UART1_DefaultOverrunErrorHandler
  7251  006F18  6F04               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  7252  006F1A  0EA6               	movlw	high _UART1_DefaultOverrunErrorHandler
  7253  006F1C  6F05               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  7254  006F1E  ECEA  F050         	call	_UART1_SetOverrunErrorHandler	;wreg free
  7255                           
  7256                           ; BSR set to: 1
  7257                           ;mcc_generated_files/uart1.c: 144:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  7258  006F22  0ED4               	movlw	low _UART1_DefaultErrorHandler
  7259  006F24  6F04               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
  7260  006F26  0EA5               	movlw	high _UART1_DefaultErrorHandler
  7261  006F28  6F05               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  7262  006F2A  ECF8  F050         	call	_UART1_SetErrorHandler	;wreg free
  7263                           
  7264                           ;mcc_generated_files/uart1.c: 146:     uart1RxLastError.status = 0;
  7265  006F2E  0E00               	movlw	0
  7266  006F30  0102               	movlb	2	; () banked
  7267  006F32  6FB9               	movwf	_uart1RxLastError& (0+255),b	;volatile
  7268                           
  7269                           ;mcc_generated_files/uart1.c: 149:     uart1TxHead = 0;
  7270  006F34  0E00               	movlw	0
  7271  006F36  0101               	movlb	1	; () banked
  7272  006F38  6FEE               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
  7273  006F3A  0E00               	movlw	0
  7274  006F3C  6FED               	movwf	_uart1TxHead& (0+255),b	;volatile
  7275                           
  7276                           ;mcc_generated_files/uart1.c: 150:     uart1TxTail = 0;
  7277  006F3E  0E00               	movlw	0
  7278  006F40  0100               	movlb	0	; () banked
  7279  006F42  6FED               	movwf	(_uart1TxTail+1)& (0+255),b	;volatile
  7280  006F44  0E00               	movlw	0
  7281  006F46  6FEC               	movwf	_uart1TxTail& (0+255),b	;volatile
  7282                           
  7283                           ;mcc_generated_files/uart1.c: 151:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  7284  006F48  0E04               	movlw	4
  7285  006F4A  0102               	movlb	2	; () banked
  7286  006F4C  6FEC               	movwf	(_uart1TxBufferRemaining+1)& (0+255),b	;volatile
  7287  006F4E  0EB0               	movlw	176
  7288  006F50  6FEB               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  7289                           
  7290                           ;mcc_generated_files/uart1.c: 152:     uart1RxHead = 0;
  7291  006F52  0E00               	movlw	0
  7292  006F54  0101               	movlb	1	; () banked
  7293  006F56  6FF3               	movwf	_uart1RxHead& (0+255),b	;volatile
  7294                           
  7295                           ;mcc_generated_files/uart1.c: 153:     uart1RxTail = 0;
  7296  006F58  0E00               	movlw	0
  7297  006F5A  6FF2               	movwf	_uart1RxTail& (0+255),b	;volatile
  7298                           
  7299                           ;mcc_generated_files/uart1.c: 154:     uart1RxCount = 0;
  7300  006F5C  0E00               	movlw	0
  7301  006F5E  6FF1               	movwf	_uart1RxCount& (0+255),b	;volatile
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;mcc_generated_files/uart1.c: 157:     PIE3bits.U1RXIE = 1;
  7305  006F60  0139               	movlb	57	; () banked
  7306  006F62  8793               	bsf	147,3,b	;volatile
  7307                           
  7308                           ; BSR set to: 57
  7309  006F64  0012               	return		;funcret
  7310  006F66                     __end_of_UART1_Initialize:
  7311                           	opt callstack 0
  7312                           
  7313 ;; *************** function _UART1_SetTxInterruptHandler *****************
  7314 ;; Defined at:
  7315 ;;		line 318 in file "mcc_generated_files/uart1.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  7318 ;;		 -> UART1_Transmit_ISR(1), 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0
  7325 ;; Tracked objects:
  7326 ;;		On entry : 3F/1
  7327 ;;		On exit  : 3F/1
  7328 ;;		Unchanged: 3F/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7330 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;Total ram usage:        2 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:   16
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_UART1_Initialize
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text17
  7345  00A1B8                     __ptext17:
  7346                           	opt callstack 0
  7347  00A1B8                     _UART1_SetTxInterruptHandler:
  7348                           	opt callstack 12
  7349                           
  7350                           ; BSR set to: 1
  7351                           ;mcc_generated_files/uart1.c: 319:     UART1_TxInterruptHandler = InterruptHandler;
  7352                           
  7353                           ; BSR set to: 57
  7354                           ;incstack = 0
  7355  00A1B8  0060  F410  F2EF   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  7356  00A1BE  0060  F414  F2F0   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  7357                           
  7358                           ; BSR set to: 1
  7359  00A1C4  0012               	return		;funcret
  7360  00A1C6                     __end_of_UART1_SetTxInterruptHandler:
  7361                           	opt callstack 0
  7362                           
  7363 ;; *************** function _UART1_SetRxInterruptHandler *****************
  7364 ;; Defined at:
  7365 ;;		line 314 in file "mcc_generated_files/uart1.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  7368 ;;		 -> UART1_Receive_ISR(1), 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 3F/1
  7377 ;;		On exit  : 3F/1
  7378 ;;		Unchanged: 3F/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7380 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7384 ;;Total ram usage:        2 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:   16
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_UART1_Initialize
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text18
  7395  00A1C6                     __ptext18:
  7396                           	opt callstack 0
  7397  00A1C6                     _UART1_SetRxInterruptHandler:
  7398                           	opt callstack 12
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;mcc_generated_files/uart1.c: 315:     UART1_RxInterruptHandler = InterruptHandler;
  7402                           
  7403                           ; BSR set to: 1
  7404                           ;incstack = 0
  7405  00A1C6  0060  F410  F2F1   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  7406  00A1CC  0060  F414  F2F2   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  7407                           
  7408                           ; BSR set to: 1
  7409  00A1D2  0012               	return		;funcret
  7410  00A1D4                     __end_of_UART1_SetRxInterruptHandler:
  7411                           	opt callstack 0
  7412                           
  7413 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  7414 ;; Defined at:
  7415 ;;		line 304 in file "mcc_generated_files/uart1.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7418 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0
  7425 ;; Tracked objects:
  7426 ;;		On entry : 3F/1
  7427 ;;		On exit  : 3F/1
  7428 ;;		Unchanged: 3F/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7430 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:        2 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:   16
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_UART1_Initialize
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text19
  7445  00A1D4                     __ptext19:
  7446                           	opt callstack 0
  7447  00A1D4                     _UART1_SetOverrunErrorHandler:
  7448                           	opt callstack 12
  7449                           
  7450                           ; BSR set to: 1
  7451                           ;mcc_generated_files/uart1.c: 305:     UART1_OverrunErrorHandler = interruptHandler;
  7452                           
  7453                           ; BSR set to: 1
  7454                           ;incstack = 0
  7455  00A1D4  0060  F410  F2E7   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  7456  00A1DA  0060  F414  F2E8   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  7457                           
  7458                           ; BSR set to: 1
  7459  00A1E0  0012               	return		;funcret
  7460  00A1E2                     __end_of_UART1_SetOverrunErrorHandler:
  7461                           	opt callstack 0
  7462                           
  7463 ;; *************** function _UART1_SetFramingErrorHandler *****************
  7464 ;; Defined at:
  7465 ;;		line 300 in file "mcc_generated_files/uart1.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7468 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 3F/1
  7477 ;;		On exit  : 3F/1
  7478 ;;		Unchanged: 3F/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7480 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;Total ram usage:        2 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:   16
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_UART1_Initialize
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text20
  7495  00A1E2                     __ptext20:
  7496                           	opt callstack 0
  7497  00A1E2                     _UART1_SetFramingErrorHandler:
  7498                           	opt callstack 12
  7499                           
  7500                           ; BSR set to: 1
  7501                           ;mcc_generated_files/uart1.c: 301:     UART1_FramingErrorHandler = interruptHandler;
  7502                           
  7503                           ; BSR set to: 1
  7504                           ;incstack = 0
  7505  00A1E2  0060  F410  F2E9   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  7506  00A1E8  0060  F414  F2EA   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  7507                           
  7508                           ; BSR set to: 1
  7509  00A1EE  0012               	return		;funcret
  7510  00A1F0                     __end_of_UART1_SetFramingErrorHandler:
  7511                           	opt callstack 0
  7512                           
  7513 ;; *************** function _UART1_SetErrorHandler *****************
  7514 ;; Defined at:
  7515 ;;		line 308 in file "mcc_generated_files/uart1.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7518 ;;		 -> UART1_DefaultErrorHandler(1), 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 3F/1
  7527 ;;		On exit  : 3F/1
  7528 ;;		Unchanged: 3F/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7530 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;Total ram usage:        2 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:   16
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_UART1_Initialize
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text21
  7545  00A1F0                     __ptext21:
  7546                           	opt callstack 0
  7547  00A1F0                     _UART1_SetErrorHandler:
  7548                           	opt callstack 12
  7549                           
  7550                           ; BSR set to: 1
  7551                           ;mcc_generated_files/uart1.c: 309:     UART1_ErrorHandler = interruptHandler;
  7552                           
  7553                           ; BSR set to: 1
  7554                           ;incstack = 0
  7555  00A1F0  0060  F410  F2E5   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  7556  00A1F6  0060  F414  F2E6   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  7557                           
  7558                           ; BSR set to: 1
  7559  00A1FC  0012               	return		;funcret
  7560  00A1FE                     __end_of_UART1_SetErrorHandler:
  7561                           	opt callstack 0
  7562                           
  7563 ;; *************** function _TMR6_Initialize *****************
  7564 ;; Defined at:
  7565 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;		None
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 3F/3F
  7576 ;;		On exit  : 3F/1
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7583 ;;Total ram usage:        0 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:   17
  7586 ;; This function calls:
  7587 ;;		_TMR6_SetInterruptHandler
  7588 ;; This function is called by:
  7589 ;;		_SYSTEM_Initialize
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text22
  7594  009864                     __ptext22:
  7595                           	opt callstack 0
  7596  009864                     _TMR6_Initialize:
  7597                           	opt callstack 12
  7598                           
  7599                           ; BSR set to: 63
  7600                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x04;
  7601                           
  7602                           ; BSR set to: 1
  7603                           ;incstack = 0
  7604  009864  0E04               	movlw	4
  7605  009866  6E96               	movwf	150,c	;volatile
  7606                           
  7607                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x20;
  7608  009868  0E20               	movlw	32
  7609  00986A  6E95               	movwf	149,c	;volatile
  7610                           
  7611                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
  7612  00986C  0E00               	movlw	0
  7613  00986E  6E97               	movwf	151,c	;volatile
  7614                           
  7615                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0x90;
  7616  009870  0E90               	movlw	144
  7617  009872  6E93               	movwf	147,c	;volatile
  7618                           
  7619                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
  7620  009874  0E00               	movlw	0
  7621  009876  6E92               	movwf	146,c	;volatile
  7622                           
  7623                           ; BSR set to: 63
  7624                           ;mcc_generated_files/tmr6.c: 84:     PIR9bits.TMR6IF = 0;
  7625  009878  0139               	movlb	57	; () banked
  7626  00987A  91A9               	bcf	169,0,b	;volatile
  7627                           
  7628                           ; BSR set to: 57
  7629                           ;mcc_generated_files/tmr6.c: 87:     PIE9bits.TMR6IE = 1;
  7630  00987C  8199               	bsf	153,0,b	;volatile
  7631                           
  7632                           ; BSR set to: 57
  7633                           ;mcc_generated_files/tmr6.c: 90:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  7634  00987E  0EAE               	movlw	low _TMR6_DefaultInterruptHandler
  7635  009880  0101               	movlb	1	; () banked
  7636  009882  6F04               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7637  009884  0EA6               	movlw	high _TMR6_DefaultInterruptHandler
  7638  009886  6F05               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7639  009888  EC0D  F051         	call	_TMR6_SetInterruptHandler	;wreg free
  7640                           
  7641                           ; BSR set to: 1
  7642                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0xD0;
  7643  00988C  0ED0               	movlw	208
  7644  00988E  6E94               	movwf	148,c	;volatile
  7645                           
  7646                           ; BSR set to: 1
  7647  009890  0012               	return		;funcret
  7648  009892                     __end_of_TMR6_Initialize:
  7649                           	opt callstack 0
  7650                           
  7651 ;; *************** function _TMR5_Initialize *****************
  7652 ;; Defined at:
  7653 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 3F/39
  7664 ;;		On exit  : 3F/1
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7670 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;Total ram usage:        2 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:   17
  7674 ;; This function calls:
  7675 ;;		_TMR5_SetInterruptHandler
  7676 ;; This function is called by:
  7677 ;;		_SYSTEM_Initialize
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           	psect	text23
  7682  008F2E                     __ptext23:
  7683                           	opt callstack 0
  7684  008F2E                     _TMR5_Initialize:
  7685                           	opt callstack 12
  7686                           
  7687                           ; BSR set to: 57
  7688                           ;mcc_generated_files/tmr5.c: 69:     T5GCON = 0x00;
  7689                           
  7690                           ; BSR set to: 1
  7691                           ;incstack = 0
  7692  008F2E  0E00               	movlw	0
  7693  008F30  6E9B               	movwf	155,c	;volatile
  7694                           
  7695                           ;mcc_generated_files/tmr5.c: 72:     T5GATE = 0x00;
  7696  008F32  0E00               	movlw	0
  7697  008F34  6E9C               	movwf	156,c	;volatile
  7698                           
  7699                           ;mcc_generated_files/tmr5.c: 75:     T5CLK = 0x04;
  7700  008F36  0E04               	movlw	4
  7701  008F38  6E9D               	movwf	157,c	;volatile
  7702                           
  7703                           ;mcc_generated_files/tmr5.c: 78:     TMR5H = 0xF0;
  7704  008F3A  0EF0               	movlw	240
  7705  008F3C  6E99               	movwf	153,c	;volatile
  7706                           
  7707                           ;mcc_generated_files/tmr5.c: 81:     TMR5L = 0xDD;
  7708  008F3E  0EDD               	movlw	221
  7709  008F40  6E98               	movwf	152,c	;volatile
  7710                           
  7711                           ; BSR set to: 57
  7712                           ;mcc_generated_files/tmr5.c: 84:     PIR8bits.TMR5IF = 0;
  7713  008F42  9DA8               	bcf	168,6,b	;volatile
  7714                           
  7715                           ; BSR set to: 57
  7716                           ;mcc_generated_files/tmr5.c: 87:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  7717  008F44  5098               	movf	152,w,c	;volatile
  7718  008F46  006F FE64  F106    	movff	16281,??_TMR5_Initialize	;volatile
  7719  008F4C  0101               	movlb	1	; () banked
  7720  008F4E  6B07               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  7721  008F50  0060  F418  F107   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  7722  008F56  6B06               	clrf	??_TMR5_Initialize& (0+255),b
  7723  008F58  1106               	iorwf	??_TMR5_Initialize& (0+255),w,b
  7724  008F5A  0102               	movlb	2	; () banked
  7725  008F5C  6FE3               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  7726  008F5E  0101               	movlb	1	; () banked
  7727  008F60  5107               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  7728  008F62  0102               	movlb	2	; () banked
  7729  008F64  6FE4               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  7730                           
  7731                           ; BSR set to: 2
  7732                           ;mcc_generated_files/tmr5.c: 90:     PIE8bits.TMR5IE = 1;
  7733  008F66  0139               	movlb	57	; () banked
  7734  008F68  8D98               	bsf	152,6,b	;volatile
  7735                           
  7736                           ; BSR set to: 57
  7737                           ;mcc_generated_files/tmr5.c: 93:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  7738  008F6A  0EB0               	movlw	low _TMR5_DefaultInterruptHandler
  7739  008F6C  0101               	movlb	1	; () banked
  7740  008F6E  6F04               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  7741  008F70  0EA6               	movlw	high _TMR5_DefaultInterruptHandler
  7742  008F72  6F05               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7743  008F74  EC4C  F051         	call	_TMR5_SetInterruptHandler	;wreg free
  7744                           
  7745                           ; BSR set to: 1
  7746                           ;mcc_generated_files/tmr5.c: 96:     T5CON = 0x31;
  7747  008F78  0E31               	movlw	49
  7748  008F7A  6E9A               	movwf	154,c	;volatile
  7749                           
  7750                           ; BSR set to: 1
  7751  008F7C  0012               	return		;funcret
  7752  008F7E                     __end_of_TMR5_Initialize:
  7753                           	opt callstack 0
  7754                           
  7755 ;; *************** function _TMR4_Initialize *****************
  7756 ;; Defined at:
  7757 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 3F/1
  7768 ;;		On exit  : 3F/1
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;Total ram usage:        0 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:   17
  7778 ;; This function calls:
  7779 ;;		_TMR4_SetInterruptHandler
  7780 ;; This function is called by:
  7781 ;;		_SYSTEM_Initialize
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text24
  7786  009892                     __ptext24:
  7787                           	opt callstack 0
  7788  009892                     _TMR4_Initialize:
  7789                           	opt callstack 12
  7790                           
  7791                           ; BSR set to: 1
  7792                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x04;
  7793                           
  7794                           ; BSR set to: 1
  7795                           ;incstack = 0
  7796  009892  0E04               	movlw	4
  7797  009894  6EA2               	movwf	162,c	;volatile
  7798                           
  7799                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x08;
  7800  009896  0E08               	movlw	8
  7801  009898  6EA1               	movwf	161,c	;volatile
  7802                           
  7803                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  7804  00989A  0E00               	movlw	0
  7805  00989C  6EA3               	movwf	163,c	;volatile
  7806                           
  7807                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0x17;
  7808  00989E  0E17               	movlw	23
  7809  0098A0  6E9F               	movwf	159,c	;volatile
  7810                           
  7811                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  7812  0098A2  0E00               	movlw	0
  7813  0098A4  6E9E               	movwf	158,c	;volatile
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;mcc_generated_files/tmr4.c: 84:     PIR7bits.TMR4IF = 0;
  7817  0098A6  0139               	movlb	57	; () banked
  7818  0098A8  91A7               	bcf	167,0,b	;volatile
  7819                           
  7820                           ; BSR set to: 57
  7821                           ;mcc_generated_files/tmr4.c: 87:     PIE7bits.TMR4IE = 1;
  7822  0098AA  8197               	bsf	151,0,b	;volatile
  7823                           
  7824                           ; BSR set to: 57
  7825                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7826  0098AC  0EB2               	movlw	low _TMR4_DefaultInterruptHandler
  7827  0098AE  0101               	movlb	1	; () banked
  7828  0098B0  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  7829  0098B2  0EA6               	movlw	high _TMR4_DefaultInterruptHandler
  7830  0098B4  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7831  0098B6  EC61  F051         	call	_TMR4_SetInterruptHandler	;wreg free
  7832                           
  7833                           ; BSR set to: 1
  7834                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
  7835  0098BA  0EF0               	movlw	240
  7836  0098BC  6EA0               	movwf	160,c	;volatile
  7837                           
  7838                           ; BSR set to: 1
  7839  0098BE  0012               	return		;funcret
  7840  0098C0                     __end_of_TMR4_Initialize:
  7841                           	opt callstack 0
  7842                           
  7843 ;; *************** function _TMR2_Initialize *****************
  7844 ;; Defined at:
  7845 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2
  7854 ;; Tracked objects:
  7855 ;;		On entry : 3F/1
  7856 ;;		On exit  : 3F/39
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:   16
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_SYSTEM_Initialize
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text25
  7874  009E56                     __ptext25:
  7875                           	opt callstack 0
  7876  009E56                     _TMR2_Initialize:
  7877                           	opt callstack 13
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;incstack = 0
  7884  009E56  0E01               	movlw	1
  7885  009E58  6EAE               	movwf	174,c	;volatile
  7886                           
  7887                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7888  009E5A  0E00               	movlw	0
  7889  009E5C  6EAD               	movwf	173,c	;volatile
  7890                           
  7891                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7892  009E5E  0E00               	movlw	0
  7893  009E60  6EAF               	movwf	175,c	;volatile
  7894                           
  7895                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xF9;
  7896  009E62  0EF9               	movlw	249
  7897  009E64  6EAB               	movwf	171,c	;volatile
  7898                           
  7899                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7900  009E66  0E00               	movlw	0
  7901  009E68  6EAA               	movwf	170,c	;volatile
  7902                           
  7903                           ; BSR set to: 1
  7904                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7905  009E6A  0139               	movlb	57	; () banked
  7906  009E6C  95A4               	bcf	164,2,b	;volatile
  7907                           
  7908                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
  7909  009E6E  0EF0               	movlw	240
  7910  009E70  6EAC               	movwf	172,c	;volatile
  7911                           
  7912                           ; BSR set to: 57
  7913  009E72  0012               	return		;funcret
  7914  009E74                     __end_of_TMR2_Initialize:
  7915                           	opt callstack 0
  7916                           
  7917 ;; *************** function _TMR1_Initialize *****************
  7918 ;; Defined at:
  7919 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  1    wreg      void 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 3F/1
  7930 ;;		On exit  : 3F/1
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;Total ram usage:        2 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:   17
  7940 ;; This function calls:
  7941 ;;		_TMR1_SetInterruptHandler
  7942 ;; This function is called by:
  7943 ;;		_SYSTEM_Initialize
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text26
  7948  008DE6                     __ptext26:
  7949                           	opt callstack 0
  7950  008DE6                     _TMR1_Initialize:
  7951                           	opt callstack 12
  7952                           
  7953                           ; BSR set to: 1
  7954                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7955                           
  7956                           ; BSR set to: 57
  7957                           ;incstack = 0
  7958  008DE6  0E00               	movlw	0
  7959  008DE8  6EB3               	movwf	179,c	;volatile
  7960                           
  7961                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7962  008DEA  0E00               	movlw	0
  7963  008DEC  6EB4               	movwf	180,c	;volatile
  7964                           
  7965                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x01;
  7966  008DEE  0E01               	movlw	1
  7967  008DF0  6EB5               	movwf	181,c	;volatile
  7968                           
  7969                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x63;
  7970  008DF2  0E63               	movlw	99
  7971  008DF4  6EB1               	movwf	177,c	;volatile
  7972                           
  7973                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xC0;
  7974  008DF6  0EC0               	movlw	192
  7975  008DF8  6EB0               	movwf	176,c	;volatile
  7976                           
  7977                           ; BSR set to: 1
  7978                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  7979  008DFA  0139               	movlb	57	; () banked
  7980  008DFC  91A4               	bcf	164,0,b	;volatile
  7981                           
  7982                           ; BSR set to: 57
  7983                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7984  008DFE  50B0               	movf	176,w,c	;volatile
  7985  008E00  006F FEC4  F106    	movff	16305,??_TMR1_Initialize	;volatile
  7986  008E06  0101               	movlb	1	; () banked
  7987  008E08  6B07               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  7988  008E0A  0060  F418  F107   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  7989  008E10  6B06               	clrf	??_TMR1_Initialize& (0+255),b
  7990  008E12  1106               	iorwf	??_TMR1_Initialize& (0+255),w,b
  7991  008E14  0102               	movlb	2	; () banked
  7992  008E16  6FDD               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  7993  008E18  0101               	movlb	1	; () banked
  7994  008E1A  5107               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  7995  008E1C  0102               	movlb	2	; () banked
  7996  008E1E  6FDE               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  7997                           
  7998                           ; BSR set to: 2
  7999                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  8000  008E20  0139               	movlb	57	; () banked
  8001  008E22  8194               	bsf	148,0,b	;volatile
  8002                           
  8003                           ; BSR set to: 57
  8004                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8005  008E24  0EB4               	movlw	low _TMR1_DefaultInterruptHandler
  8006  008E26  0101               	movlb	1	; () banked
  8007  008E28  6F04               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  8008  008E2A  0EA6               	movlw	high _TMR1_DefaultInterruptHandler
  8009  008E2C  6F05               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8010  008E2E  EC45  F051         	call	_TMR1_SetInterruptHandler	;wreg free
  8011                           
  8012                           ; BSR set to: 1
  8013                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x31;
  8014  008E32  0E31               	movlw	49
  8015  008E34  6EB2               	movwf	178,c	;volatile
  8016                           
  8017                           ; BSR set to: 1
  8018  008E36  0012               	return		;funcret
  8019  008E38                     __end_of_TMR1_Initialize:
  8020                           	opt callstack 0
  8021                           
  8022 ;; *************** function _TMR0_Initialize *****************
  8023 ;; Defined at:
  8024 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 3F/39
  8035 ;;		On exit  : 3F/1
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:        0 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:   17
  8045 ;; This function calls:
  8046 ;;		_TMR0_SetInterruptHandler
  8047 ;; This function is called by:
  8048 ;;		_SYSTEM_Initialize
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text27
  8053  009BF6                     __ptext27:
  8054                           	opt callstack 0
  8055  009BF6                     _TMR0_Initialize:
  8056                           	opt callstack 12
  8057                           
  8058                           ; BSR set to: 57
  8059                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x65;
  8060                           
  8061                           ; BSR set to: 1
  8062                           ;incstack = 0
  8063  009BF6  0E65               	movlw	101
  8064  009BF8  6EB9               	movwf	185,c	;volatile
  8065                           
  8066                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8067  009BFA  0EF9               	movlw	249
  8068  009BFC  6EB7               	movwf	183,c	;volatile
  8069                           
  8070                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8071  009BFE  0E00               	movlw	0
  8072  009C00  6EB6               	movwf	182,c	;volatile
  8073                           
  8074                           ; BSR set to: 57
  8075                           ;mcc_generated_files/tmr0.c: 75:     PIR3bits.TMR0IF = 0;
  8076  009C02  9FA3               	bcf	163,7,b	;volatile
  8077                           
  8078                           ; BSR set to: 57
  8079                           ;mcc_generated_files/tmr0.c: 78:     PIE3bits.TMR0IE = 1;
  8080  009C04  8F93               	bsf	147,7,b	;volatile
  8081                           
  8082                           ; BSR set to: 57
  8083                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8084  009C06  0EB6               	movlw	low _TMR0_DefaultInterruptHandler
  8085  009C08  0101               	movlb	1	; () banked
  8086  009C0A  6F04               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8087  009C0C  0EA6               	movlw	high _TMR0_DefaultInterruptHandler
  8088  009C0E  6F05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8089  009C10  ECFF  F050         	call	_TMR0_SetInterruptHandler	;wreg free
  8090                           
  8091                           ; BSR set to: 1
  8092                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x8F;
  8093  009C14  0E8F               	movlw	143
  8094  009C16  6EB8               	movwf	184,c	;volatile
  8095                           
  8096                           ; BSR set to: 1
  8097  009C18  0012               	return		;funcret
  8098  009C1A                     __end_of_TMR0_Initialize:
  8099                           	opt callstack 0
  8100                           
  8101 ;; *************** function _PWM6_Initialize *****************
  8102 ;; Defined at:
  8103 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      void 
  8110 ;; Registers used:
  8111 ;;		wreg, status,2
  8112 ;; Tracked objects:
  8113 ;;		On entry : 3F/1
  8114 ;;		On exit  : 3F/3F
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:   16
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_SYSTEM_Initialize
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text28
  8132  009FA4                     __ptext28:
  8133                           	opt callstack 0
  8134  009FA4                     _PWM6_Initialize:
  8135                           	opt callstack 13
  8136                           
  8137                           ; BSR set to: 1
  8138                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  8139                           
  8140                           ; BSR set to: 1
  8141                           ;incstack = 0
  8142  009FA4  0E80               	movlw	128
  8143  009FA6  6E6A               	movwf	106,c	;volatile
  8144                           
  8145                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7C;
  8146  009FA8  0E7C               	movlw	124
  8147  009FAA  6E69               	movwf	105,c	;volatile
  8148                           
  8149                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  8150  009FAC  0EC0               	movlw	192
  8151  009FAE  6E68               	movwf	104,c	;volatile
  8152                           
  8153                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  8154  009FB0  013F               	movlb	63	; () banked
  8155  009FB2  515F               	movf	95,w,b	;volatile
  8156  009FB4  0BF3               	andlw	-13
  8157  009FB6  0904               	iorlw	4
  8158  009FB8  6F5F               	movwf	95,b	;volatile
  8159                           
  8160                           ; BSR set to: 63
  8161  009FBA  0012               	return		;funcret
  8162  009FBC                     __end_of_PWM6_Initialize:
  8163                           	opt callstack 0
  8164                           
  8165 ;; *************** function _PMD_Initialize *****************
  8166 ;; Defined at:
  8167 ;;		line 84 in file "mcc_generated_files/mcc.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;		None
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 3F/39
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;Total ram usage:        0 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:   16
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_SYSTEM_Initialize
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text29
  8196  009C1A                     __ptext29:
  8197                           	opt callstack 0
  8198  009C1A                     _PMD_Initialize:
  8199                           	opt callstack 13
  8200                           
  8201                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
  8202                           
  8203                           ; BSR set to: 63
  8204                           ;incstack = 0
  8205  009C1A  0E00               	movlw	0
  8206  009C1C  0139               	movlb	57	; () banked
  8207  009C1E  6FC0               	movwf	192,b	;volatile
  8208                           
  8209                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
  8210  009C20  0E00               	movlw	0
  8211  009C22  6FC1               	movwf	193,b	;volatile
  8212                           
  8213                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
  8214  009C24  0E00               	movlw	0
  8215  009C26  6FC2               	movwf	194,b	;volatile
  8216                           
  8217                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
  8218  009C28  0E00               	movlw	0
  8219  009C2A  6FC3               	movwf	195,b	;volatile
  8220                           
  8221                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
  8222  009C2C  0E00               	movlw	0
  8223  009C2E  6FC4               	movwf	196,b	;volatile
  8224                           
  8225                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
  8226  009C30  0E00               	movlw	0
  8227  009C32  6FC5               	movwf	197,b	;volatile
  8228                           
  8229                           ;mcc_generated_files/mcc.c: 99:     PMD6 = 0x00;
  8230  009C34  0E00               	movlw	0
  8231  009C36  6FC6               	movwf	198,b	;volatile
  8232                           
  8233                           ;mcc_generated_files/mcc.c: 101:     PMD7 = 0x00;
  8234  009C38  0E00               	movlw	0
  8235  009C3A  6FC7               	movwf	199,b	;volatile
  8236                           
  8237                           ; BSR set to: 57
  8238  009C3C  0012               	return		;funcret
  8239  009C3E                     __end_of_PMD_Initialize:
  8240                           	opt callstack 0
  8241                           
  8242 ;; *************** function _PIN_MANAGER_Initialize *****************
  8243 ;; Defined at:
  8244 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, status,2
  8253 ;; Tracked objects:
  8254 ;;		On entry : 3F/39
  8255 ;;		On exit  : 3F/3A
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:   16
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_SYSTEM_Initialize
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text30
  8273  0070D4                     __ptext30:
  8274                           	opt callstack 0
  8275  0070D4                     _PIN_MANAGER_Initialize:
  8276                           	opt callstack 13
  8277                           
  8278                           ; BSR set to: 57
  8279                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8280                           
  8281                           ; BSR set to: 57
  8282                           ;incstack = 0
  8283  0070D4  0E00               	movlw	0
  8284  0070D6  6EBE               	movwf	190,c	;volatile
  8285                           
  8286                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8287  0070D8  0E00               	movlw	0
  8288  0070DA  6EBD               	movwf	189,c	;volatile
  8289                           
  8290                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x08;
  8291  0070DC  0E08               	movlw	8
  8292  0070DE  6EBA               	movwf	186,c	;volatile
  8293                           
  8294                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8295  0070E0  0E00               	movlw	0
  8296  0070E2  6EBB               	movwf	187,c	;volatile
  8297                           
  8298                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8299  0070E4  0E00               	movlw	0
  8300  0070E6  6EBC               	movwf	188,c	;volatile
  8301                           
  8302                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8303  0070E8  0E07               	movlw	7
  8304  0070EA  6EC6               	movwf	198,c	;volatile
  8305                           
  8306                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFD;
  8307  0070EC  0EFD               	movlw	253
  8308  0070EE  6EC2               	movwf	194,c	;volatile
  8309                           
  8310                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xCF;
  8311  0070F0  0ECF               	movlw	207
  8312  0070F2  6EC3               	movwf	195,c	;volatile
  8313                           
  8314                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x1D;
  8315  0070F4  0E1D               	movlw	29
  8316  0070F6  6EC4               	movwf	196,c	;volatile
  8317                           
  8318                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x06;
  8319  0070F8  0E06               	movlw	6
  8320  0070FA  6EC5               	movwf	197,c	;volatile
  8321                           
  8322                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF9;
  8323  0070FC  0EF9               	movlw	249
  8324  0070FE  013A               	movlb	58	; () banked
  8325  007100  6F70               	movwf	112,b	;volatile
  8326                           
  8327                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFE;
  8328  007102  0EFE               	movlw	254
  8329  007104  6F60               	movwf	96,b	;volatile
  8330                           
  8331                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xCF;
  8332  007106  0ECF               	movlw	207
  8333  007108  6F50               	movwf	80,b	;volatile
  8334                           
  8335                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8336  00710A  0E07               	movlw	7
  8337  00710C  6F80               	movwf	128,b	;volatile
  8338                           
  8339                           ; BSR set to: 58
  8340                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8341  00710E  6940               	setf	64,b	;volatile
  8342                           
  8343                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8344  007110  0E00               	movlw	0
  8345  007112  6F71               	movwf	113,b	;volatile
  8346                           
  8347                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8348  007114  0E00               	movlw	0
  8349  007116  6F81               	movwf	129,b	;volatile
  8350                           
  8351                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x3C;
  8352  007118  0E3C               	movlw	60
  8353  00711A  6F51               	movwf	81,b	;volatile
  8354                           
  8355                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8356  00711C  0E00               	movlw	0
  8357  00711E  6F41               	movwf	65,b	;volatile
  8358                           
  8359                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x18;
  8360  007120  0E18               	movlw	24
  8361  007122  6F61               	movwf	97,b	;volatile
  8362                           
  8363                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  8364  007124  0E00               	movlw	0
  8365  007126  6F5A               	movwf	90,b	;volatile
  8366                           
  8367                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  8368  007128  0E00               	movlw	0
  8369  00712A  6F5B               	movwf	91,b	;volatile
  8370                           
  8371                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  8372  00712C  0E00               	movlw	0
  8373  00712E  6F6A               	movwf	106,b	;volatile
  8374                           
  8375                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  8376  007130  0E00               	movlw	0
  8377  007132  6F6B               	movwf	107,b	;volatile
  8378                           
  8379                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  8380  007134  0E00               	movlw	0
  8381  007136  6F7A               	movwf	122,b	;volatile
  8382                           
  8383                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  8384  007138  0E00               	movlw	0
  8385  00713A  6F7B               	movwf	123,b	;volatile
  8386                           
  8387                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  8388  00713C  0E00               	movlw	0
  8389  00713E  6F82               	movwf	130,b	;volatile
  8390                           
  8391                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  8392  007140  0E00               	movlw	0
  8393  007142  6F42               	movwf	66,b	;volatile
  8394                           
  8395                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x7F;
  8396  007144  0E7F               	movlw	127
  8397  007146  6F52               	movwf	82,b	;volatile
  8398                           
  8399                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x18;
  8400  007148  0E18               	movlw	24
  8401  00714A  6F62               	movwf	98,b	;volatile
  8402                           
  8403                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  8404  00714C  0E00               	movlw	0
  8405  00714E  6F72               	movwf	114,b	;volatile
  8406                           
  8407                           ; BSR set to: 58
  8408                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  8409  007150  6943               	setf	67,b	;volatile
  8410                           
  8411                           ; BSR set to: 58
  8412                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  8413  007152  6953               	setf	83,b	;volatile
  8414                           
  8415                           ; BSR set to: 58
  8416                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  8417  007154  6963               	setf	99,b	;volatile
  8418                           
  8419                           ; BSR set to: 58
  8420                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  8421  007156  6973               	setf	115,b	;volatile
  8422                           
  8423                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  8424  007158  0E07               	movlw	7
  8425  00715A  6F83               	movwf	131,b	;volatile
  8426                           
  8427                           ; BSR set to: 58
  8428                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  8429  00715C  6944               	setf	68,b	;volatile
  8430                           
  8431                           ; BSR set to: 58
  8432                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  8433  00715E  6954               	setf	84,b	;volatile
  8434                           
  8435                           ; BSR set to: 58
  8436                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  8437  007160  6964               	setf	100,b	;volatile
  8438                           
  8439                           ; BSR set to: 58
  8440                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  8441  007162  6974               	setf	116,b	;volatile
  8442                           
  8443                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  8444  007164  0E0F               	movlw	15
  8445  007166  6F84               	movwf	132,b	;volatile
  8446                           
  8447                           ;mcc_generated_files/pin_manager.c: 137:     I2C2SCLPPS = 0x0D;
  8448  007168  0E0D               	movlw	13
  8449  00716A  6FE3               	movwf	227,b	;volatile
  8450                           
  8451                           ;mcc_generated_files/pin_manager.c: 138:     RB5PPS = 0x23;
  8452  00716C  0E23               	movlw	35
  8453  00716E  6F0D               	movwf	13,b	;volatile
  8454                           
  8455                           ;mcc_generated_files/pin_manager.c: 139:     RC1PPS = 0x13;
  8456  007170  0E13               	movlw	19
  8457  007172  6F11               	movwf	17,b	;volatile
  8458                           
  8459                           ;mcc_generated_files/pin_manager.c: 140:     RB4PPS = 0x24;
  8460  007174  0E24               	movlw	36
  8461  007176  6F0C               	movwf	12,b	;volatile
  8462                           
  8463                           ;mcc_generated_files/pin_manager.c: 141:     RD0PPS = 0x0E;
  8464  007178  0E0E               	movlw	14
  8465  00717A  6F18               	movwf	24,b	;volatile
  8466                           
  8467                           ;mcc_generated_files/pin_manager.c: 142:     U1RXPPS = 0x10;
  8468  00717C  0E10               	movlw	16
  8469  00717E  6FE5               	movwf	229,b	;volatile
  8470                           
  8471                           ;mcc_generated_files/pin_manager.c: 143:     I2C2SDAPPS = 0x0C;
  8472  007180  0E0C               	movlw	12
  8473  007182  6FE4               	movwf	228,b	;volatile
  8474                           
  8475                           ; BSR set to: 58
  8476  007184  0012               	return		;funcret
  8477  007186                     __end_of_PIN_MANAGER_Initialize:
  8478                           	opt callstack 0
  8479                           
  8480 ;; *************** function _OSCILLATOR_Initialize *****************
  8481 ;; Defined at:
  8482 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;		None
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2
  8491 ;; Tracked objects:
  8492 ;;		On entry : 3F/3A
  8493 ;;		On exit  : 3F/39
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;Total ram usage:        0 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:   16
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_SYSTEM_Initialize
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text31
  8511  009FBC                     __ptext31:
  8512                           	opt callstack 0
  8513  009FBC                     _OSCILLATOR_Initialize:
  8514                           	opt callstack 13
  8515                           
  8516                           ; BSR set to: 58
  8517                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x60;
  8518                           
  8519                           ; BSR set to: 58
  8520                           ;incstack = 0
  8521  009FBC  0E60               	movlw	96
  8522  009FBE  0139               	movlb	57	; () banked
  8523  009FC0  6FD9               	movwf	217,b	;volatile
  8524                           
  8525                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
  8526  009FC2  0E00               	movlw	0
  8527  009FC4  6FDB               	movwf	219,b	;volatile
  8528                           
  8529                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
  8530  009FC6  0E00               	movlw	0
  8531  009FC8  6FDD               	movwf	221,b	;volatile
  8532                           
  8533                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x08;
  8534  009FCA  0E08               	movlw	8
  8535  009FCC  6FDF               	movwf	223,b	;volatile
  8536                           
  8537                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
  8538  009FCE  0E00               	movlw	0
  8539  009FD0  6FDE               	movwf	222,b	;volatile
  8540                           
  8541                           ; BSR set to: 57
  8542  009FD2  0012               	return		;funcret
  8543  009FD4                     __end_of_OSCILLATOR_Initialize:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function _INTERRUPT_Initialize *****************
  8547 ;; Defined at:
  8548 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		None
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:   16
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_SYSTEM_Initialize
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text32
  8577  00A63C                     __ptext32:
  8578                           	opt callstack 0
  8579  00A63C                     _INTERRUPT_Initialize:
  8580                           	opt callstack 13
  8581                           
  8582                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  8583                           
  8584                           ; BSR set to: 57
  8585                           ;incstack = 0
  8586  00A63C  9AD2               	bcf	210,5,c	;volatile
  8587  00A63E  0012               	return		;funcret
  8588  00A640                     __end_of_INTERRUPT_Initialize:
  8589                           	opt callstack 0
  8590                           
  8591 ;; *************** function _I2C2_Initialize *****************
  8592 ;; Defined at:
  8593 ;;		line 115 in file "mcc_generated_files/i2c2_slave.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2
  8602 ;; Tracked objects:
  8603 ;;		On entry : 3F/39
  8604 ;;		On exit  : 3F/3D
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8611 ;;Total ram usage:        0 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:   16
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_SYSTEM_Initialize
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text33
  8622  00A0E6                     __ptext33:
  8623                           	opt callstack 0
  8624  00A0E6                     _I2C2_Initialize:
  8625                           	opt callstack 13
  8626                           
  8627                           ; BSR set to: 57
  8628                           ;mcc_generated_files/i2c2_slave.c: 118:     I2C2CON0 = 0x00;
  8629                           
  8630                           ;incstack = 0
  8631  00A0E6  0E00               	movlw	0
  8632  00A0E8  013D               	movlb	61	; () banked
  8633  00A0EA  6F5D               	movwf	93,b	;volatile
  8634                           
  8635                           ;mcc_generated_files/i2c2_slave.c: 120:     I2C2CON1 = 0x00;
  8636  00A0EC  0E00               	movlw	0
  8637  00A0EE  6F5E               	movwf	94,b	;volatile
  8638                           
  8639                           ;mcc_generated_files/i2c2_slave.c: 122:     I2C2CON2 = 0x00;
  8640  00A0F0  0E00               	movlw	0
  8641  00A0F2  6F5F               	movwf	95,b	;volatile
  8642                           
  8643                           ; BSR set to: 61
  8644                           ;mcc_generated_files/i2c2_slave.c: 124:     I2C2CNT = 0xFF;
  8645  00A0F4  6956               	setf	86,b	;volatile
  8646                           
  8647                           ; BSR set to: 61
  8648  00A0F6  0012               	return		;funcret
  8649  00A0F8                     __end_of_I2C2_Initialize:
  8650                           	opt callstack 0
  8651                           
  8652 ;; *************** function _FVR_Initialize *****************
  8653 ;; Defined at:
  8654 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;		None
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;		None
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, status,2
  8663 ;; Tracked objects:
  8664 ;;		On entry : 3F/39
  8665 ;;		On exit  : 3F/3E
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;Total ram usage:        0 bytes
  8673 ;; Hardware stack levels used:    1
  8674 ;; Hardware stack levels required when called:   16
  8675 ;; This function calls:
  8676 ;;		Nothing
  8677 ;; This function is called by:
  8678 ;;		_SYSTEM_Initialize
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text34
  8683  00A470                     __ptext34:
  8684                           	opt callstack 0
  8685  00A470                     _FVR_Initialize:
  8686                           	opt callstack 13
  8687                           
  8688                           ; BSR set to: 57
  8689                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x87;
  8690                           
  8691                           ; BSR set to: 61
  8692                           ;incstack = 0
  8693  00A470  0E87               	movlw	135
  8694  00A472  013E               	movlb	62	; () banked
  8695  00A474  6FC1               	movwf	193,b	;volatile
  8696                           
  8697                           ; BSR set to: 62
  8698  00A476  0012               	return		;funcret
  8699  00A478                     __end_of_FVR_Initialize:
  8700                           	opt callstack 0
  8701                           
  8702 ;; *************** function _CMP1_Initialize *****************
  8703 ;; Defined at:
  8704 ;;		line 60 in file "mcc_generated_files/cmp1.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      void 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, cstack
  8713 ;; Tracked objects:
  8714 ;;		On entry : 3F/1
  8715 ;;		On exit  : 3F/39
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8722 ;;Total ram usage:        0 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; Hardware stack levels required when called:   17
  8725 ;; This function calls:
  8726 ;;		_CMP1_Disable
  8727 ;;		_CMP1_Enable
  8728 ;; This function is called by:
  8729 ;;		_SYSTEM_Initialize
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text35
  8734  009D56                     __ptext35:
  8735                           	opt callstack 0
  8736  009D56                     _CMP1_Initialize:
  8737                           	opt callstack 12
  8738                           
  8739                           ; BSR set to: 1
  8740                           ;mcc_generated_files/cmp1.c: 67:     CMP1_Disable();
  8741                           
  8742                           ; BSR set to: 62
  8743                           ;incstack = 0
  8744  009D56  EC70  F052         	call	_CMP1_Disable	;wreg free
  8745                           
  8746                           ; BSR set to: 57
  8747                           ;mcc_generated_files/cmp1.c: 70:     CM1CON0 = 0x80;
  8748  009D5A  0E80               	movlw	128
  8749  009D5C  013E               	movlb	62	; () banked
  8750  009D5E  6FBC               	movwf	188,b	;volatile
  8751                           
  8752                           ; BSR set to: 62
  8753                           ;mcc_generated_files/cmp1.c: 73:     CM1CON1 = 0x02;
  8754  009D60  0E02               	movlw	2
  8755  009D62  6FBD               	movwf	189,b	;volatile
  8756                           
  8757                           ; BSR set to: 62
  8758                           ;mcc_generated_files/cmp1.c: 76:     CM1NCH = 0x06;
  8759  009D64  0E06               	movlw	6
  8760  009D66  6FBE               	movwf	190,b	;volatile
  8761                           
  8762                           ; BSR set to: 62
  8763                           ;mcc_generated_files/cmp1.c: 79:     CM1PCH = 0x01;
  8764  009D68  0E01               	movlw	1
  8765  009D6A  6FBF               	movwf	191,b	;volatile
  8766                           
  8767                           ; BSR set to: 62
  8768                           ;mcc_generated_files/cmp1.c: 82:     PIR1bits.C1IF = 0;
  8769  009D6C  0139               	movlb	57	; () banked
  8770  009D6E  99A1               	bcf	161,4,b	;volatile
  8771                           
  8772                           ;mcc_generated_files/cmp1.c: 85:     CMP1_Enable();
  8773  009D70  EC6C  F052         	call	_CMP1_Enable	;wreg free
  8774                           
  8775                           ; BSR set to: 57
  8776  009D74  0012               	return		;funcret
  8777  009D76                     __end_of_CMP1_Initialize:
  8778                           	opt callstack 0
  8779                           
  8780 ;; *************** function _ADCC_Initialize *****************
  8781 ;; Defined at:
  8782 ;;		line 63 in file "mcc_generated_files/adcc.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;		None
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, status,2, status,0, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 3F/3E
  8793 ;;		On exit  : 3F/1
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        0 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:   17
  8803 ;; This function calls:
  8804 ;;		_ADCC_SetADTIInterruptHandler
  8805 ;; This function is called by:
  8806 ;;		_SYSTEM_Initialize
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text36
  8811  0086BA                     __ptext36:
  8812                           	opt callstack 0
  8813  0086BA                     _ADCC_Initialize:
  8814                           	opt callstack 12
  8815                           
  8816                           ; BSR set to: 62
  8817                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
  8818                           
  8819                           ; BSR set to: 57
  8820                           ;incstack = 0
  8821  0086BA  69DE               	setf	222,b	;volatile
  8822                           
  8823                           ; BSR set to: 62
  8824                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
  8825  0086BC  0E7F               	movlw	127
  8826  0086BE  6FDF               	movwf	223,b	;volatile
  8827                           
  8828                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  8829  0086C0  0E00               	movlw	0
  8830  0086C2  6FE0               	movwf	224,b	;volatile
  8831                           
  8832                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
  8833  0086C4  0E80               	movlw	128
  8834  0086C6  6FE1               	movwf	225,b	;volatile
  8835                           
  8836                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  8837  0086C8  0E00               	movlw	0
  8838  0086CA  6FE4               	movwf	228,b	;volatile
  8839                           
  8840                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  8841  0086CC  0E00               	movlw	0
  8842  0086CE  6FE5               	movwf	229,b	;volatile
  8843                           
  8844                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
  8845  0086D0  0E00               	movlw	0
  8846  0086D2  6FEA               	movwf	234,b	;volatile
  8847                           
  8848                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
  8849  0086D4  0E10               	movlw	16
  8850  0086D6  6FEC               	movwf	236,b	;volatile
  8851                           
  8852                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
  8853  0086D8  0E00               	movlw	0
  8854  0086DA  6FF1               	movwf	241,b	;volatile
  8855                           
  8856                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
  8857  0086DC  0E80               	movlw	128
  8858  0086DE  6FF3               	movwf	243,b	;volatile
  8859                           
  8860                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
  8861  0086E0  0E00               	movlw	0
  8862  0086E2  6FF4               	movwf	244,b	;volatile
  8863                           
  8864                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
  8865  0086E4  0E00               	movlw	0
  8866  0086E6  6FF5               	movwf	245,b	;volatile
  8867                           
  8868                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
  8869  0086E8  0E00               	movlw	0
  8870  0086EA  6FF6               	movwf	246,b	;volatile
  8871                           
  8872                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
  8873  0086EC  0E00               	movlw	0
  8874  0086EE  6FF7               	movwf	247,b	;volatile
  8875                           
  8876                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
  8877  0086F0  0E00               	movlw	0
  8878  0086F2  6FF9               	movwf	249,b	;volatile
  8879                           
  8880                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
  8881  0086F4  0E43               	movlw	67
  8882  0086F6  6FFA               	movwf	250,b	;volatile
  8883                           
  8884                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
  8885  0086F8  0E27               	movlw	39
  8886  0086FA  6FFB               	movwf	251,b	;volatile
  8887                           
  8888                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
  8889  0086FC  0E00               	movlw	0
  8890  0086FE  6FFC               	movwf	252,b	;volatile
  8891                           
  8892                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
  8893  008700  0E03               	movlw	3
  8894  008702  6FFD               	movwf	253,b	;volatile
  8895                           
  8896                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
  8897  008704  0E00               	movlw	0
  8898  008706  6FFE               	movwf	254,b	;volatile
  8899                           
  8900                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x27;
  8901  008708  0E27               	movlw	39
  8902  00870A  6FFF               	movwf	255,b	;volatile
  8903                           
  8904                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
  8905  00870C  0E84               	movlw	132
  8906  00870E  6FF8               	movwf	248,b	;volatile
  8907                           
  8908                           ; BSR set to: 62
  8909                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
  8910  008710  0139               	movlb	57	; () banked
  8911  008712  97A1               	bcf	161,3,b	;volatile
  8912                           
  8913                           ; BSR set to: 57
  8914                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
  8915  008714  8791               	bsf	145,3,b	;volatile
  8916                           
  8917                           ; BSR set to: 57
  8918                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8919  008716  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
  8920  008718  0101               	movlb	1	; () banked
  8921  00871A  6F04               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  8922  00871C  0EA6               	movlw	high _ADCC_DefaultInterruptHandler
  8923  00871E  6F05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  8924  008720  EC06  F051         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8925                           
  8926                           ; BSR set to: 1
  8927  008724  0012               	return		;funcret
  8928  008726                     __end_of_ADCC_Initialize:
  8929                           	opt callstack 0
  8930                           
  8931 ;; *************** function _MuteAlarm *****************
  8932 ;; Defined at:
  8933 ;;		line 377 in file "alarm.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;		None
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  high            2  135[BANK1 ] int 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 3F/3
  8944 ;;		On exit  : 3D/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;Total ram usage:        5 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:   26
  8954 ;; This function calls:
  8955 ;;		_AnyAlarm
  8956 ;;		_BuzzerClear
  8957 ;;		_ClearCircuitFailureAlarm
  8958 ;;		_ClearControlFailAlarm
  8959 ;;		_ClearGasFailureAlarm
  8960 ;;		_ClearHighPressureAlarmHigh
  8961 ;;		_ClearMonitorFailAlarm
  8962 ;;		_ClearVeryHighPressureAlarmHigh
  8963 ;;		_HigherAlarm
  8964 ;;		_SetAlarmSV1
  8965 ;;		___wmul
  8966 ;;		_printf
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text37
  8973  00457C                     __ptext37:
  8974                           	opt callstack 0
  8975  00457C                     _MuteAlarm:
  8976                           	opt callstack 4
  8977                           
  8978                           ; BSR set to: 3
  8979                           ;alarm.c: 378:     printf("MUTE");
  8980                           
  8981                           ; BSR set to: 1
  8982                           ;incstack = 0
  8983  00457C  0EC1               	movlw	low STR_25
  8984  00457E  0101               	movlb	1	; () banked
  8985  004580  6F71               	movwf	printf@fmt& (0+255),b
  8986  004582  0EFF               	movlw	high STR_25
  8987  004584  6F72               	movwf	(printf@fmt+1)& (0+255),b
  8988  004586  ECFF  F04C         	call	_printf	;wreg free
  8989                           
  8990                           ; BSR set to: 2
  8991                           ;alarm.c: 380:     if (muteSec && muteSec<115) {
  8992  00458A  0101               	movlb	1	; () banked
  8993  00458C  51EB               	movf	_muteSec& (0+255),w,b
  8994  00458E  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
  8995  004590  B4D8               	btfsc	status,2,c
  8996  004592  D00C               	goto	l22145
  8997                           
  8998                           ; BSR set to: 1
  8999  004594  BFEC               	btfsc	(_muteSec+1)& (0+255),7,b
  9000  004596  D006               	goto	u21800
  9001  004598  51EC               	movf	(_muteSec+1)& (0+255),w,b
  9002  00459A  E108               	bnz	l22145
  9003  00459C  0E73               	movlw	115
  9004  00459E  5DEB               	subwf	_muteSec& (0+255),w,b
  9005  0045A0  B0D8               	btfsc	status,0,c
  9006  0045A2  D004               	goto	l22145
  9007  0045A4                     u21800:
  9008                           
  9009                           ; BSR set to: 1
  9010                           ;alarm.c: 381:         muteSec = 0;
  9011  0045A4  0E00               	movlw	0
  9012  0045A6  6FEC               	movwf	(_muteSec+1)& (0+255),b
  9013  0045A8  0E00               	movlw	0
  9014  0045AA  6FEB               	movwf	_muteSec& (0+255),b
  9015  0045AC                     l22145:
  9016                           
  9017                           ; BSR set to: 1
  9018                           ;alarm.c: 384:     if (AnyAlarm()) {
  9019  0045AC  EC70  F04A         	call	_AnyAlarm	;wreg free
  9020  0045B0  0900               	iorlw	0
  9021  0045B2  B4D8               	btfsc	status,2,c
  9022  0045B4  D0B0               	goto	l2632
  9023                           
  9024                           ; BSR set to: 1
  9025                           ;alarm.c: 386:         BuzzerClear();
  9026  0045B6  EC9E  F050         	call	_BuzzerClear	;wreg free
  9027                           
  9028                           ; BSR set to: 57
  9029                           ;alarm.c: 387:         muteSec = 120;
  9030  0045BA  0E00               	movlw	0
  9031  0045BC  0101               	movlb	1	; () banked
  9032  0045BE  6FEC               	movwf	(_muteSec+1)& (0+255),b
  9033  0045C0  0E78               	movlw	120
  9034  0045C2  6FEB               	movwf	_muteSec& (0+255),b
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;alarm.c: 389:         int high = HigherAlarm();
  9038  0045C4  ECC3  F038         	call	_HigherAlarm	;wreg free
  9039  0045C8  0060  F428  F187   	movff	?_HigherAlarm,MuteAlarm@high
  9040  0045CE  0060  F42C  F188   	movff	?_HigherAlarm+1,MuteAlarm@high+1
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;alarm.c: 390:         if (alarmData[high].func==HighPressureAlarmHigh) {
  9044  0045D4  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9045  0045DA  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9046  0045E0  0E00               	movlw	0
  9047  0045E2  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9048  0045E4  0E15               	movlw	21
  9049  0045E6  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9050  0045E8  EC60  F04C         	call	___wmul	;wreg free
  9051  0045EC  0E27               	movlw	low (_alarmData+19)
  9052  0045EE  2504               	addwf	?___wmul& (0+255),w,b
  9053  0045F0  6ED9               	movwf	fsr2l,c
  9054  0045F2  0E09               	movlw	high (_alarmData+19)
  9055  0045F4  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9056  0045F6  6EDA               	movwf	fsr2h,c
  9057  0045F8  0E74               	movlw	low _HighPressureAlarmHigh
  9058  0045FA  18DE               	xorwf	postinc2,w,c
  9059  0045FC  E105               	bnz	l22157
  9060  0045FE  0EA6               	movlw	high _HighPressureAlarmHigh
  9061  004600  18DE               	xorwf	postinc2,w,c
  9062  004602  B4D8               	btfsc	status,2,c
  9063                           
  9064                           ; BSR set to: 1
  9065                           ;alarm.c: 392:             ClearHighPressureAlarmHigh();
  9066  004604  EC40  F052         	call	_ClearHighPressureAlarmHigh	;wreg free
  9067  004608                     l22157:
  9068                           
  9069                           ;alarm.c: 394:         if (alarmData[high].func==VeryHighPressureAlarmHigh) {
  9070  004608  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9071  00460E  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9072  004614  0E00               	movlw	0
  9073  004616  0101               	movlb	1	; () banked
  9074  004618  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9075  00461A  0E15               	movlw	21
  9076  00461C  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9077  00461E  EC60  F04C         	call	___wmul	;wreg free
  9078  004622  0E27               	movlw	low (_alarmData+19)
  9079  004624  2504               	addwf	?___wmul& (0+255),w,b
  9080  004626  6ED9               	movwf	fsr2l,c
  9081  004628  0E09               	movlw	high (_alarmData+19)
  9082  00462A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9083  00462C  6EDA               	movwf	fsr2h,c
  9084  00462E  0E7C               	movlw	low _VeryHighPressureAlarmHigh
  9085  004630  18DE               	xorwf	postinc2,w,c
  9086  004632  E105               	bnz	l22161
  9087  004634  0EA6               	movlw	high _VeryHighPressureAlarmHigh
  9088  004636  18DE               	xorwf	postinc2,w,c
  9089  004638  B4D8               	btfsc	status,2,c
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;alarm.c: 396:             ClearVeryHighPressureAlarmHigh();
  9093  00463A  EC3C  F052         	call	_ClearVeryHighPressureAlarmHigh	;wreg free
  9094  00463E                     l22161:
  9095                           
  9096                           ;alarm.c: 398:         if (alarmData[high].func==MonitorFailAlarm) {
  9097  00463E  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9098  004644  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9099  00464A  0E00               	movlw	0
  9100  00464C  0101               	movlb	1	; () banked
  9101  00464E  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9102  004650  0E15               	movlw	21
  9103  004652  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9104  004654  EC60  F04C         	call	___wmul	;wreg free
  9105  004658  0E27               	movlw	low (_alarmData+19)
  9106  00465A  2504               	addwf	?___wmul& (0+255),w,b
  9107  00465C  6ED9               	movwf	fsr2l,c
  9108  00465E  0E09               	movlw	high (_alarmData+19)
  9109  004660  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9110  004662  6EDA               	movwf	fsr2h,c
  9111  004664  0E90               	movlw	low _MonitorFailAlarm
  9112  004666  18DE               	xorwf	postinc2,w,c
  9113  004668  E105               	bnz	l22165
  9114  00466A  0E6A               	movlw	high _MonitorFailAlarm
  9115  00466C  18DE               	xorwf	postinc2,w,c
  9116  00466E  B4D8               	btfsc	status,2,c
  9117                           
  9118                           ; BSR set to: 1
  9119                           ;alarm.c: 400:             ClearMonitorFailAlarm();
  9120  004670  EC68  F052         	call	_ClearMonitorFailAlarm	;wreg free
  9121  004674                     l22165:
  9122                           
  9123                           ;alarm.c: 402:         if (alarmData[high].func==ControlFailAlarm) {
  9124  004674  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9125  00467A  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9126  004680  0E00               	movlw	0
  9127  004682  0101               	movlb	1	; () banked
  9128  004684  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9129  004686  0E15               	movlw	21
  9130  004688  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9131  00468A  EC60  F04C         	call	___wmul	;wreg free
  9132  00468E  0E27               	movlw	low (_alarmData+19)
  9133  004690  2504               	addwf	?___wmul& (0+255),w,b
  9134  004692  6ED9               	movwf	fsr2l,c
  9135  004694  0E09               	movlw	high (_alarmData+19)
  9136  004696  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9137  004698  6EDA               	movwf	fsr2h,c
  9138  00469A  0EAA               	movlw	low _ControlFailAlarm
  9139  00469C  18DE               	xorwf	postinc2,w,c
  9140  00469E  E105               	bnz	l22169
  9141  0046A0  0EA0               	movlw	high _ControlFailAlarm
  9142  0046A2  18DE               	xorwf	postinc2,w,c
  9143  0046A4  B4D8               	btfsc	status,2,c
  9144                           
  9145                           ; BSR set to: 1
  9146                           ;alarm.c: 404:             ClearControlFailAlarm();
  9147  0046A6  EC48  F052         	call	_ClearControlFailAlarm	;wreg free
  9148  0046AA                     l22169:
  9149                           
  9150                           ;alarm.c: 406:         if (alarmData[high].func==GasFailureAlarm) {
  9151  0046AA  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9152  0046B0  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9153  0046B6  0E00               	movlw	0
  9154  0046B8  0101               	movlb	1	; () banked
  9155  0046BA  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9156  0046BC  0E15               	movlw	21
  9157  0046BE  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9158  0046C0  EC60  F04C         	call	___wmul	;wreg free
  9159  0046C4  0E27               	movlw	low (_alarmData+19)
  9160  0046C6  2504               	addwf	?___wmul& (0+255),w,b
  9161  0046C8  6ED9               	movwf	fsr2l,c
  9162  0046CA  0E09               	movlw	high (_alarmData+19)
  9163  0046CC  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9164  0046CE  6EDA               	movwf	fsr2h,c
  9165  0046D0  0E78               	movlw	low _GasFailureAlarm
  9166  0046D2  18DE               	xorwf	postinc2,w,c
  9167  0046D4  E105               	bnz	l22173
  9168  0046D6  0EA6               	movlw	high _GasFailureAlarm
  9169  0046D8  18DE               	xorwf	postinc2,w,c
  9170  0046DA  B4D8               	btfsc	status,2,c
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;alarm.c: 408:             ClearGasFailureAlarm();
  9174  0046DC  EC44  F052         	call	_ClearGasFailureAlarm	;wreg free
  9175  0046E0                     l22173:
  9176                           
  9177                           ;alarm.c: 410:         if (alarmData[high].func==CircuitFailureAlarm) {
  9178  0046E0  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9179  0046E6  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9180  0046EC  0E00               	movlw	0
  9181  0046EE  0101               	movlb	1	; () banked
  9182  0046F0  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9183  0046F2  0E15               	movlw	21
  9184  0046F4  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9185  0046F6  EC60  F04C         	call	___wmul	;wreg free
  9186  0046FA  0E27               	movlw	low (_alarmData+19)
  9187  0046FC  2504               	addwf	?___wmul& (0+255),w,b
  9188  0046FE  6ED9               	movwf	fsr2l,c
  9189  004700  0E09               	movlw	high (_alarmData+19)
  9190  004702  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9191  004704  6EDA               	movwf	fsr2h,c
  9192  004706  0E70               	movlw	low _CircuitFailureAlarm
  9193  004708  18DE               	xorwf	postinc2,w,c
  9194  00470A  E105               	bnz	l2632
  9195  00470C  0EA6               	movlw	high _CircuitFailureAlarm
  9196  00470E  18DE               	xorwf	postinc2,w,c
  9197  004710  B4D8               	btfsc	status,2,c
  9198                           
  9199                           ; BSR set to: 1
  9200                           ;alarm.c: 412:             ClearCircuitFailureAlarm();
  9201  004712  EC4C  F052         	call	_ClearCircuitFailureAlarm	;wreg free
  9202  004716                     l2632:
  9203                           
  9204                           ;alarm.c: 417:     ClearVeryHighPressureAlarmHigh();
  9205  004716  EC3C  F052         	call	_ClearVeryHighPressureAlarmHigh	;wreg free
  9206                           
  9207                           ;alarm.c: 418:     ClearHighPressureAlarmHigh();
  9208  00471A  EC40  F052         	call	_ClearHighPressureAlarmHigh	;wreg free
  9209                           
  9210                           ;alarm.c: 419:     ClearCircuitFailureAlarm();
  9211  00471E  EC4C  F052         	call	_ClearCircuitFailureAlarm	;wreg free
  9212                           
  9213                           ;alarm.c: 420:     ClearGasFailureAlarm();
  9214  004722  EC44  F052         	call	_ClearGasFailureAlarm	;wreg free
  9215                           
  9216                           ;alarm.c: 421:     ClearControlFailAlarm();
  9217  004726  EC48  F052         	call	_ClearControlFailAlarm	;wreg free
  9218                           
  9219                           ;alarm.c: 422:     ClearMonitorFailAlarm();
  9220  00472A  EC68  F052         	call	_ClearMonitorFailAlarm	;wreg free
  9221                           
  9222                           ; BSR set to: 2
  9223                           ;alarm.c: 424:     controlSV1 = 1;
  9224  00472E  0E01               	movlw	1
  9225  004730  0101               	movlb	1	; () banked
  9226  004732  6FF9               	movwf	_controlSV1& (0+255),b
  9227                           
  9228                           ; BSR set to: 1
  9229                           ;alarm.c: 425:     monitorSV1 = 1;
  9230  004734  0E01               	movlw	1
  9231  004736  6FF8               	movwf	_monitorSV1& (0+255),b
  9232                           
  9233                           ; BSR set to: 1
  9234                           ;alarm.c: 426:     veryHighSV1 = 1;
  9235  004738  0E01               	movlw	1
  9236  00473A  6FFB               	movwf	_veryHighSV1& (0+255),b
  9237                           
  9238                           ; BSR set to: 1
  9239                           ;alarm.c: 428:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
  9240  00473C  0E00               	movlw	0
  9241  00473E  6F86               	movwf	_MuteAlarm$4543& (0+255),b
  9242                           
  9243                           ; BSR set to: 1
  9244  004740  51F9               	movf	_controlSV1& (0+255),w,b
  9245  004742  B4D8               	btfsc	status,2,c
  9246  004744  D00B               	goto	l22195
  9247                           
  9248                           ; BSR set to: 1
  9249  004746  51F8               	movf	_monitorSV1& (0+255),w,b
  9250  004748  B4D8               	btfsc	status,2,c
  9251  00474A  D008               	goto	l22195
  9252                           
  9253                           ; BSR set to: 1
  9254  00474C  51FB               	movf	_veryHighSV1& (0+255),w,b
  9255  00474E  B4D8               	btfsc	status,2,c
  9256  004750  D005               	goto	l22195
  9257                           
  9258                           ; BSR set to: 1
  9259  004752  51FA               	movf	_batterySV1& (0+255),w,b
  9260  004754  B4D8               	btfsc	status,2,c
  9261  004756  D002               	goto	l22195
  9262                           
  9263                           ; BSR set to: 1
  9264  004758  0E01               	movlw	1
  9265  00475A  6F86               	movwf	_MuteAlarm$4543& (0+255),b
  9266  00475C                     l22195:
  9267                           
  9268                           ; BSR set to: 1
  9269  00475C  5186               	movf	_MuteAlarm$4543& (0+255),w,b
  9270  00475E  B4D8               	btfsc	status,2,c
  9271  004760  D002               	goto	u21920
  9272  004762  0E01               	movlw	1
  9273  004764  D001               	goto	u21930
  9274  004766                     u21920:
  9275  004766  0E00               	movlw	0
  9276  004768                     u21930:
  9277  004768  EC4C  F04B         	call	_SetAlarmSV1
  9278  00476C  0012               	return		;funcret
  9279  00476E                     __end_of_MuteAlarm:
  9280                           	opt callstack 0
  9281                           
  9282 ;; *************** function _ClearVeryHighPressureAlarmHigh *****************
  9283 ;; Defined at:
  9284 ;;		line 278 in file "alarm.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;		None
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;		None
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      void 
  9291 ;; Registers used:
  9292 ;;		wreg, status,2
  9293 ;; Tracked objects:
  9294 ;;		On entry : 3C/1
  9295 ;;		On exit  : 3F/2
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9302 ;;Total ram usage:        0 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:   16
  9305 ;; This function calls:
  9306 ;;		Nothing
  9307 ;; This function is called by:
  9308 ;;		_MuteAlarm
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text38
  9313  00A478                     __ptext38:
  9314                           	opt callstack 0
  9315  00A478                     _ClearVeryHighPressureAlarmHigh:
  9316                           	opt callstack 13
  9317                           
  9318                           ;incstack = 0
  9319  00A478  0E00               	movlw	0
  9320  00A47A  0102               	movlb	2	; () banked
  9321  00A47C  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
  9322                           
  9323                           ; BSR set to: 2
  9324  00A47E  0012               	return		;funcret
  9325  00A480                     __end_of_ClearVeryHighPressureAlarmHigh:
  9326                           	opt callstack 0
  9327                           
  9328 ;; *************** function _ClearHighPressureAlarmHigh *****************
  9329 ;; Defined at:
  9330 ;;		line 277 in file "alarm.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2
  9339 ;; Tracked objects:
  9340 ;;		On entry : 3C/1
  9341 ;;		On exit  : 3F/2
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;Total ram usage:        0 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:   16
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_MuteAlarm
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text39
  9359  00A480                     __ptext39:
  9360                           	opt callstack 0
  9361  00A480                     _ClearHighPressureAlarmHigh:
  9362                           	opt callstack 13
  9363                           
  9364                           ; BSR set to: 2
  9365                           ;incstack = 0
  9366  00A480  0E00               	movlw	0
  9367  00A482  0102               	movlb	2	; () banked
  9368  00A484  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
  9369                           
  9370                           ; BSR set to: 2
  9371  00A486  0012               	return		;funcret
  9372  00A488                     __end_of_ClearHighPressureAlarmHigh:
  9373                           	opt callstack 0
  9374                           
  9375 ;; *************** function _ClearGasFailureAlarm *****************
  9376 ;; Defined at:
  9377 ;;		line 275 in file "alarm.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2
  9386 ;; Tracked objects:
  9387 ;;		On entry : 3C/1
  9388 ;;		On exit  : 3F/2
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:   16
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_MuteAlarm
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text40
  9406  00A488                     __ptext40:
  9407                           	opt callstack 0
  9408  00A488                     _ClearGasFailureAlarm:
  9409                           	opt callstack 13
  9410                           
  9411                           ; BSR set to: 2
  9412                           ;incstack = 0
  9413  00A488  0E00               	movlw	0
  9414  00A48A  0102               	movlb	2	; () banked
  9415  00A48C  6FAF               	movwf	_gasFailureAlarm& (0+255),b
  9416                           
  9417                           ; BSR set to: 2
  9418  00A48E  0012               	return		;funcret
  9419  00A490                     __end_of_ClearGasFailureAlarm:
  9420                           	opt callstack 0
  9421                           
  9422 ;; *************** function _ClearControlFailAlarm *****************
  9423 ;; Defined at:
  9424 ;;		line 274 in file "alarm.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;		None
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;		None
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg, status,2
  9433 ;; Tracked objects:
  9434 ;;		On entry : 3C/1
  9435 ;;		On exit  : 3F/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;Total ram usage:        0 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:   16
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_MuteAlarm
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text41
  9453  00A490                     __ptext41:
  9454                           	opt callstack 0
  9455  00A490                     _ClearControlFailAlarm:
  9456                           	opt callstack 13
  9457                           
  9458                           ; BSR set to: 2
  9459                           ;incstack = 0
  9460  00A490  0E00               	movlw	0
  9461  00A492  0100               	movlb	0	; () banked
  9462  00A494  6FF6               	movwf	_controlFailAlarm& (0+255),b
  9463                           
  9464                           ; BSR set to: 0
  9465  00A496  0012               	return		;funcret
  9466  00A498                     __end_of_ClearControlFailAlarm:
  9467                           	opt callstack 0
  9468                           
  9469 ;; *************** function _MonitorInit *****************
  9470 ;; Defined at:
  9471 ;;		line 752 in file "monitor.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 3C/0
  9482 ;;		On exit  : 3C/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:   18
  9492 ;; This function calls:
  9493 ;;		_AdcInit
  9494 ;;		_ClearVars
  9495 ;;		_TMR0_SetInterruptHandler
  9496 ;;		_TMR0_StartTimer
  9497 ;; This function is called by:
  9498 ;;		_main
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text42
  9503  0083AE                     __ptext42:
  9504                           	opt callstack 0
  9505  0083AE                     _MonitorInit:
  9506                           	opt callstack 12
  9507                           
  9508                           ;monitor.c: 754:     AdcInit();
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;incstack = 0
  9512  0083AE  EC29  F041         	call	_AdcInit	;wreg free
  9513                           
  9514                           ; BSR set to: 62
  9515                           ;monitor.c: 757:     targetHigh = 20*5;
  9516  0083B2  0E00               	movlw	0
  9517  0083B4  0101               	movlb	1	; () banked
  9518  0083B6  6FE4               	movwf	(_targetHigh+1)& (0+255),b
  9519  0083B8  0E64               	movlw	100
  9520  0083BA  6FE3               	movwf	_targetHigh& (0+255),b
  9521                           
  9522                           ; BSR set to: 1
  9523                           ;monitor.c: 758:     targetLow = 7*5;
  9524  0083BC  0E00               	movlw	0
  9525  0083BE  6FE2               	movwf	(_targetLow+1)& (0+255),b
  9526  0083C0  0E23               	movlw	35
  9527  0083C2  6FE1               	movwf	_targetLow& (0+255),b
  9528                           
  9529                           ; BSR set to: 1
  9530                           ;monitor.c: 759:     targetPmax = 25*5;
  9531  0083C4  0E00               	movlw	0
  9532  0083C6  0102               	movlb	2	; () banked
  9533  0083C8  6F6F               	movwf	(_targetPmax+1)& (0+255),b
  9534  0083CA  0E7D               	movlw	125
  9535  0083CC  6F6E               	movwf	_targetPmax& (0+255),b
  9536                           
  9537                           ; BSR set to: 2
  9538                           ;monitor.c: 760:     adcVOffset = 162*8;
  9539  0083CE  0E05               	movlw	5
  9540  0083D0  0101               	movlb	1	; () banked
  9541  0083D2  6FF5               	movwf	(_adcVOffset+1)& (0+255),b
  9542  0083D4  0E10               	movlw	16
  9543  0083D6  6FF4               	movwf	_adcVOffset& (0+255),b
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;monitor.c: 761:     adcOffset = 174*8;
  9547  0083D8  0E05               	movlw	5
  9548  0083DA  6FF7               	movwf	(_adcOffset+1)& (0+255),b
  9549  0083DC  0E70               	movlw	112
  9550  0083DE  6FF6               	movwf	_adcOffset& (0+255),b
  9551                           
  9552                           ; BSR set to: 1
  9553                           ;monitor.c: 762:     volumeMax = 500;
  9554  0083E0  0E01               	movlw	1
  9555  0083E2  0102               	movlb	2	; () banked
  9556  0083E4  6F6B               	movwf	(_volumeMax+1)& (0+255),b
  9557  0083E6  0EF4               	movlw	244
  9558  0083E8  6F6A               	movwf	_volumeMax& (0+255),b
  9559                           
  9560                           ; BSR set to: 2
  9561                           ;monitor.c: 763:     volumeMin = 100;
  9562  0083EA  0E00               	movlw	0
  9563  0083EC  6F69               	movwf	(_volumeMin+1)& (0+255),b
  9564  0083EE  0E64               	movlw	100
  9565  0083F0  6F68               	movwf	_volumeMin& (0+255),b
  9566                           
  9567                           ; BSR set to: 2
  9568                           ;monitor.c: 764:     disableAlarmSV1=0;
  9569  0083F2  0E00               	movlw	0
  9570  0083F4  0100               	movlb	0	; () banked
  9571  0083F6  6FF3               	movwf	_disableAlarmSV1& (0+255),b
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;monitor.c: 765:     state = 0;
  9575  0083F8  0E00               	movlw	0
  9576  0083FA  0101               	movlb	1	; () banked
  9577  0083FC  6FE0               	movwf	(_state+1)& (0+255),b
  9578  0083FE  0E00               	movlw	0
  9579  008400  6FDF               	movwf	_state& (0+255),b
  9580                           
  9581                           ; BSR set to: 1
  9582                           ;monitor.c: 766:     enable = 0;
  9583  008402  0E00               	movlw	0
  9584  008404  0102               	movlb	2	; () banked
  9585  008406  6FA2               	movwf	monitor@enable& (0+255),b
  9586                           
  9587                           ; BSR set to: 2
  9588                           ;monitor.c: 767:     ClearVars();
  9589  008408  EC71  F020         	call	_ClearVars	;wreg free
  9590                           
  9591                           ; BSR set to: 2
  9592                           ;monitor.c: 768:     TMR0_SetInterruptHandler(MonitorPressureTask);
  9593  00840C  0E1E               	movlw	low _MonitorPressureTask
  9594  00840E  0101               	movlb	1	; () banked
  9595  008410  6F04               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9596  008412  0E00               	movlw	high _MonitorPressureTask
  9597  008414  6F05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9598  008416  ECFF  F050         	call	_TMR0_SetInterruptHandler	;wreg free
  9599                           
  9600                           ; BSR set to: 1
  9601                           ;monitor.c: 769:     TMR0_StartTimer();
  9602  00841A  EC20  F053         	call	_TMR0_StartTimer	;wreg free
  9603  00841E  0012               	return		;funcret
  9604  008420                     __end_of_MonitorInit:
  9605                           	opt callstack 0
  9606                           
  9607 ;; *************** function _TMR0_StartTimer *****************
  9608 ;; Defined at:
  9609 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;		None
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;		None
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		None
  9618 ;; Tracked objects:
  9619 ;;		On entry : 3C/2
  9620 ;;		On exit  : 3C/0
  9621 ;;		Unchanged: 3C/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;Total ram usage:        0 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:   16
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		_SetCalibrateState
  9634 ;;		_MonitorInit
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text43
  9639  00A640                     __ptext43:
  9640                           	opt callstack 0
  9641  00A640                     _TMR0_StartTimer:
  9642                           	opt callstack 13
  9643                           
  9644                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
  9645                           
  9646                           ;incstack = 0
  9647  00A640  8EB8               	bsf	184,7,c	;volatile
  9648  00A642  0012               	return		;funcret
  9649  00A644                     __end_of_TMR0_StartTimer:
  9650                           	opt callstack 0
  9651                           
  9652 ;; *************** function _TMR0_SetInterruptHandler *****************
  9653 ;; Defined at:
  9654 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  9657 ;;		 -> MonitorPressureTask(1), TMR0_DefaultInterruptHandler(1), 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;		None
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2, status,0
  9664 ;; Tracked objects:
  9665 ;;		On entry : 3F/1
  9666 ;;		On exit  : 3F/1
  9667 ;;		Unchanged: 3F/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9669 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;Total ram usage:        2 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:   16
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_TMR0_Initialize
  9680 ;;		_MonitorInit
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text44
  9685  00A1FE                     __ptext44:
  9686                           	opt callstack 0
  9687  00A1FE                     _TMR0_SetInterruptHandler:
  9688                           	opt callstack 12
  9689                           
  9690                           ; BSR set to: 1
  9691                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  9692                           
  9693                           ;incstack = 0
  9694  00A1FE  0060  F410  F2DF   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  9695  00A204  0060  F414  F2E0   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  9696                           
  9697                           ; BSR set to: 1
  9698  00A20A  0012               	return		;funcret
  9699  00A20C                     __end_of_TMR0_SetInterruptHandler:
  9700                           	opt callstack 0
  9701                           
  9702 ;; *************** function _ClearVars *****************
  9703 ;; Defined at:
  9704 ;;		line 692 in file "monitor.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;  i               2    6[BANK1 ] int 
  9709 ;;  i               2    4[BANK1 ] int 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 3C/1
  9716 ;;		On exit  : 3F/2
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;Total ram usage:        4 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:   17
  9726 ;; This function calls:
  9727 ;;		_ClearCircuitFailureAlarm
  9728 ;;		_ClearEPAboveSetAlarm
  9729 ;;		_ClearEPBelowSetAlarm
  9730 ;;		_ClearIPAboveSetAlarm
  9731 ;;		_ClearIPBelowSetAlarm
  9732 ;; This function is called by:
  9733 ;;		_SetCalibrateState
  9734 ;;		_MonitorInit
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text45
  9739  0040E2                     __ptext45:
  9740                           	opt callstack 0
  9741  0040E2                     _ClearVars:
  9742                           	opt callstack 12
  9743                           
  9744                           ;monitor.c: 693:     count = 0;
  9745                           
  9746                           ; BSR set to: 1
  9747                           ;incstack = 0
  9748  0040E2  0E00               	movlw	0
  9749  0040E4  0102               	movlb	2	; () banked
  9750  0040E6  6F45               	movwf	(_count+1)& (0+255),b
  9751  0040E8  0E00               	movlw	0
  9752  0040EA  6F44               	movwf	_count& (0+255),b
  9753                           
  9754                           ;monitor.c: 694:     tt = 0;
  9755  0040EC  0E00               	movlw	0
  9756  0040EE  0100               	movlb	0	; () banked
  9757  0040F0  6FC8               	movwf	_tt& (0+255),b
  9758  0040F2  0E00               	movlw	0
  9759  0040F4  6FC9               	movwf	(_tt+1)& (0+255),b
  9760  0040F6  0E00               	movlw	0
  9761  0040F8  6FCA               	movwf	(_tt+2)& (0+255),b
  9762  0040FA  0E00               	movlw	0
  9763  0040FC  6FCB               	movwf	(_tt+3)& (0+255),b
  9764                           
  9765                           ;monitor.c: 695:     for (int i=0; i<25; i++) {
  9766  0040FE  0E00               	movlw	0
  9767  004100  0101               	movlb	1	; () banked
  9768  004102  6F05               	movwf	(ClearVars@i+1)& (0+255),b
  9769  004104  0E00               	movlw	0
  9770  004106  6F04               	movwf	ClearVars@i& (0+255),b
  9771  004108                     l21125:
  9772                           
  9773                           ; BSR set to: 1
  9774                           ;monitor.c: 696:         prFastBuffer[i] = 0;
  9775  004108  90D8               	bcf	status,0,c
  9776  00410A  3504               	rlcf	ClearVars@i& (0+255),w,b
  9777  00410C  6ED9               	movwf	fsr2l,c
  9778  00410E  3505               	rlcf	(ClearVars@i+1)& (0+255),w,b
  9779  004110  6EDA               	movwf	fsr2h,c
  9780  004112  0E00               	movlw	low _prFastBuffer
  9781  004114  26D9               	addwf	fsr2l,f,c
  9782  004116  0E04               	movlw	high _prFastBuffer
  9783  004118  22DA               	addwfc	fsr2h,f,c
  9784  00411A  0E00               	movlw	0
  9785  00411C  6EDE               	movwf	postinc2,c
  9786  00411E  0E00               	movlw	0
  9787  004120  6EDD               	movwf	postdec2,c
  9788                           
  9789                           ;monitor.c: 697:         prSlowBuffer[i] = 0;
  9790  004122  90D8               	bcf	status,0,c
  9791  004124  3504               	rlcf	ClearVars@i& (0+255),w,b
  9792  004126  6ED9               	movwf	fsr2l,c
  9793  004128  3505               	rlcf	(ClearVars@i+1)& (0+255),w,b
  9794  00412A  6EDA               	movwf	fsr2h,c
  9795  00412C  0E32               	movlw	low _prSlowBuffer
  9796  00412E  26D9               	addwf	fsr2l,f,c
  9797  004130  0E04               	movlw	high _prSlowBuffer
  9798  004132  22DA               	addwfc	fsr2h,f,c
  9799  004134  0E00               	movlw	0
  9800  004136  6EDE               	movwf	postinc2,c
  9801  004138  0E00               	movlw	0
  9802  00413A  6EDD               	movwf	postdec2,c
  9803                           
  9804                           ; BSR set to: 1
  9805                           ;monitor.c: 698:     }
  9806  00413C  4B04               	infsnz	ClearVars@i& (0+255),f,b
  9807  00413E  2B05               	incf	(ClearVars@i+1)& (0+255),f,b
  9808                           
  9809                           ; BSR set to: 1
  9810  004140  BF05               	btfsc	(ClearVars@i+1)& (0+255),7,b
  9811  004142  D7E2               	goto	l21125
  9812  004144  5105               	movf	(ClearVars@i+1)& (0+255),w,b
  9813  004146  E104               	bnz	u20250
  9814  004148  0E19               	movlw	25
  9815  00414A  5D04               	subwf	ClearVars@i& (0+255),w,b
  9816  00414C  A0D8               	btfss	status,0,c
  9817  00414E  D7DC               	goto	l21125
  9818  004150                     u20250:
  9819                           
  9820                           ; BSR set to: 1
  9821                           ;monitor.c: 699:     for (int i=0; i<10; i++) {
  9822  004150  0E00               	movlw	0
  9823  004152  6F07               	movwf	(ClearVars@i_4906+1)& (0+255),b
  9824  004154  0E00               	movlw	0
  9825  004156  6F06               	movwf	ClearVars@i_4906& (0+255),b
  9826  004158                     l21137:
  9827                           
  9828                           ; BSR set to: 1
  9829                           ;monitor.c: 700:         tdiBuffer[i] = 0;
  9830  004158  90D8               	bcf	status,0,c
  9831  00415A  3506               	rlcf	ClearVars@i_4906& (0+255),w,b
  9832  00415C  6ED9               	movwf	fsr2l,c
  9833  00415E  3507               	rlcf	(ClearVars@i_4906+1)& (0+255),w,b
  9834  004160  6EDA               	movwf	fsr2h,c
  9835  004162  0E61               	movlw	low _tdiBuffer
  9836  004164  26D9               	addwf	fsr2l,f,c
  9837  004166  0E03               	movlw	high _tdiBuffer
  9838  004168  22DA               	addwfc	fsr2h,f,c
  9839  00416A  0E00               	movlw	0
  9840  00416C  6EDE               	movwf	postinc2,c
  9841  00416E  0E00               	movlw	0
  9842  004170  6EDD               	movwf	postdec2,c
  9843                           
  9844                           ;monitor.c: 701:         tdeBuffer[i] = 0;
  9845  004172  90D8               	bcf	status,0,c
  9846  004174  3506               	rlcf	ClearVars@i_4906& (0+255),w,b
  9847  004176  6ED9               	movwf	fsr2l,c
  9848  004178  3507               	rlcf	(ClearVars@i_4906+1)& (0+255),w,b
  9849  00417A  6EDA               	movwf	fsr2h,c
  9850  00417C  0E75               	movlw	low _tdeBuffer
  9851  00417E  26D9               	addwf	fsr2l,f,c
  9852  004180  0E03               	movlw	high _tdeBuffer
  9853  004182  22DA               	addwfc	fsr2h,f,c
  9854  004184  0E00               	movlw	0
  9855  004186  6EDE               	movwf	postinc2,c
  9856  004188  0E00               	movlw	0
  9857  00418A  6EDD               	movwf	postdec2,c
  9858                           
  9859                           ; BSR set to: 1
  9860                           ;monitor.c: 702:     }
  9861  00418C  4B06               	infsnz	ClearVars@i_4906& (0+255),f,b
  9862  00418E  2B07               	incf	(ClearVars@i_4906+1)& (0+255),f,b
  9863                           
  9864                           ; BSR set to: 1
  9865  004190  BF07               	btfsc	(ClearVars@i_4906+1)& (0+255),7,b
  9866  004192  D7E2               	goto	l21137
  9867  004194  5107               	movf	(ClearVars@i_4906+1)& (0+255),w,b
  9868  004196  E104               	bnz	u20260
  9869  004198  0E0A               	movlw	10
  9870  00419A  5D06               	subwf	ClearVars@i_4906& (0+255),w,b
  9871  00419C  A0D8               	btfss	status,0,c
  9872  00419E  D7DC               	goto	l21137
  9873  0041A0                     u20260:
  9874                           
  9875                           ; BSR set to: 1
  9876                           ;monitor.c: 703:     numtdi = 0;
  9877  0041A0  0E00               	movlw	0
  9878  0041A2  0100               	movlb	0	; () banked
  9879  0041A4  6FD3               	movwf	(_numtdi+1)& (0+255),b
  9880  0041A6  0E00               	movlw	0
  9881  0041A8  6FD2               	movwf	_numtdi& (0+255),b
  9882                           
  9883                           ;monitor.c: 704:     numtde = 0;
  9884  0041AA  0E00               	movlw	0
  9885  0041AC  6FD1               	movwf	(_numtde+1)& (0+255),b
  9886  0041AE  0E00               	movlw	0
  9887  0041B0  6FD0               	movwf	_numtde& (0+255),b
  9888                           
  9889                           ;monitor.c: 705:     ti = 0;
  9890  0041B2  0E00               	movlw	0
  9891  0041B4  0102               	movlb	2	; () banked
  9892  0041B6  6F5B               	movwf	(_ti+1)& (0+255),b
  9893  0041B8  0E00               	movlw	0
  9894  0041BA  6F5A               	movwf	_ti& (0+255),b
  9895                           
  9896                           ;monitor.c: 706:     te = 0;
  9897  0041BC  0E00               	movlw	0
  9898  0041BE  6F59               	movwf	(_te+1)& (0+255),b
  9899  0041C0  0E00               	movlw	0
  9900  0041C2  6F58               	movwf	_te& (0+255),b
  9901                           
  9902                           ;monitor.c: 707:     tdi = 0;
  9903  0041C4  0E00               	movlw	0
  9904  0041C6  0101               	movlb	1	; () banked
  9905  0041C8  6FDA               	movwf	(_tdi+1)& (0+255),b
  9906  0041CA  0E00               	movlw	0
  9907  0041CC  6FD9               	movwf	_tdi& (0+255),b
  9908                           
  9909                           ;monitor.c: 708:     tde = 0;
  9910  0041CE  0E00               	movlw	0
  9911  0041D0  6FD8               	movwf	(_tde+1)& (0+255),b
  9912  0041D2  0E00               	movlw	0
  9913  0041D4  6FD7               	movwf	_tde& (0+255),b
  9914                           
  9915                           ;monitor.c: 709:     tt = 0;
  9916  0041D6  0E00               	movlw	0
  9917  0041D8  0100               	movlb	0	; () banked
  9918  0041DA  6FC8               	movwf	_tt& (0+255),b
  9919  0041DC  0E00               	movlw	0
  9920  0041DE  6FC9               	movwf	(_tt+1)& (0+255),b
  9921  0041E0  0E00               	movlw	0
  9922  0041E2  6FCA               	movwf	(_tt+2)& (0+255),b
  9923  0041E4  0E00               	movlw	0
  9924  0041E6  6FCB               	movwf	(_tt+3)& (0+255),b
  9925                           
  9926                           ;monitor.c: 710:     ttExt = 0;
  9927  0041E8  0E00               	movlw	0
  9928  0041EA  0102               	movlb	2	; () banked
  9929  0041EC  6F65               	movwf	(_ttExt+1)& (0+255),b
  9930  0041EE  0E00               	movlw	0
  9931  0041F0  6F64               	movwf	_ttExt& (0+255),b
  9932                           
  9933                           ;monitor.c: 711:     ttNoAlarm = 0;
  9934  0041F2  0E00               	movlw	0
  9935  0041F4  6F5F               	movwf	(_ttNoAlarm+1)& (0+255),b
  9936  0041F6  0E00               	movlw	0
  9937  0041F8  6F5E               	movwf	_ttNoAlarm& (0+255),b
  9938                           
  9939                           ;monitor.c: 712:     ttAlarm = 0;
  9940  0041FA  0E00               	movlw	0
  9941  0041FC  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
  9942  0041FE  0E00               	movlw	0
  9943  004200  6F5C               	movwf	_ttAlarm& (0+255),b
  9944                           
  9945                           ;monitor.c: 713:     enableAlarms = 0;
  9946  004202  0E00               	movlw	0
  9947  004204  0100               	movlb	0	; () banked
  9948  004206  6FF4               	movwf	_enableAlarms& (0+255),b
  9949                           
  9950                           ;monitor.c: 714:     tt1 = 0;
  9951  004208  0E00               	movlw	0
  9952  00420A  0102               	movlb	2	; () banked
  9953  00420C  6F67               	movwf	(_tt1+1)& (0+255),b
  9954  00420E  0E00               	movlw	0
  9955  004210  6F66               	movwf	_tt1& (0+255),b
  9956                           
  9957                           ;monitor.c: 715:     tt2 = 0;
  9958  004212  0E00               	movlw	0
  9959  004214  0100               	movlb	0	; () banked
  9960  004216  6FDF               	movwf	(_tt2+1)& (0+255),b
  9961  004218  0E00               	movlw	0
  9962  00421A  6FDE               	movwf	_tt2& (0+255),b
  9963                           
  9964                           ;monitor.c: 716:     tt3 = 0;
  9965  00421C  0E00               	movlw	0
  9966  00421E  0101               	movlb	1	; () banked
  9967  004220  6FDC               	movwf	(_tt3+1)& (0+255),b
  9968  004222  0E00               	movlw	0
  9969  004224  6FDB               	movwf	_tt3& (0+255),b
  9970                           
  9971                           ;monitor.c: 717:     tt4 = 0;
  9972  004226  0E00               	movlw	0
  9973  004228  0100               	movlb	0	; () banked
  9974  00422A  6FDD               	movwf	(_tt4+1)& (0+255),b
  9975  00422C  0E00               	movlw	0
  9976  00422E  6FDC               	movwf	_tt4& (0+255),b
  9977                           
  9978                           ;monitor.c: 718:     tt12 = 0;
  9979  004230  0E00               	movlw	0
  9980  004232  0102               	movlb	2	; () banked
  9981  004234  6F63               	movwf	(_tt12+1)& (0+255),b
  9982  004236  0E00               	movlw	0
  9983  004238  6F62               	movwf	_tt12& (0+255),b
  9984                           
  9985                           ;monitor.c: 719:     tt34 = 0;
  9986  00423A  0E00               	movlw	0
  9987  00423C  6F61               	movwf	(_tt34+1)& (0+255),b
  9988  00423E  0E00               	movlw	0
  9989  004240  6F60               	movwf	_tt34& (0+255),b
  9990                           
  9991                           ;monitor.c: 720:     bpm = 0;
  9992  004242  0E00               	movlw	0
  9993  004244  6F57               	movwf	(_bpm+1)& (0+255),b
  9994  004246  0E00               	movlw	0
  9995  004248  6F56               	movwf	_bpm& (0+255),b
  9996                           
  9997                           ;monitor.c: 721:     bp = 0;
  9998  00424A  0E00               	movlw	0
  9999  00424C  6FBB               	movwf	(_bp+1)& (0+255),b
 10000  00424E  0E00               	movlw	0
 10001  004250  6FBA               	movwf	_bp& (0+255),b
 10002                           
 10003                           ;monitor.c: 723:     pi = 0;
 10004  004252  0E00               	movlw	0
 10005  004254  0101               	movlb	1	; () banked
 10006  004256  6FD6               	movwf	(_pi+1)& (0+255),b
 10007  004258  0E00               	movlw	0
 10008  00425A  6FD5               	movwf	_pi& (0+255),b
 10009                           
 10010                           ;monitor.c: 724:     pe = 0;
 10011  00425C  0E00               	movlw	0
 10012  00425E  0100               	movlb	0	; () banked
 10013  004260  6FDB               	movwf	(_pe+1)& (0+255),b
 10014  004262  0E00               	movlw	0
 10015  004264  6FDA               	movwf	_pe& (0+255),b
 10016                           
 10017                           ;monitor.c: 725:     rpi = 0;
 10018  004266  0E00               	movlw	0
 10019  004268  0102               	movlb	2	; () banked
 10020  00426A  6F49               	movwf	(_rpi+1)& (0+255),b
 10021  00426C  0E00               	movlw	0
 10022  00426E  6F48               	movwf	_rpi& (0+255),b
 10023                           
 10024                           ;monitor.c: 726:     rpe = 0;
 10025  004270  0E00               	movlw	0
 10026  004272  6F47               	movwf	(_rpe+1)& (0+255),b
 10027  004274  0E00               	movlw	0
 10028  004276  6F46               	movwf	_rpe& (0+255),b
 10029                           
 10030                           ;monitor.c: 727:     lrpi = 0;
 10031  004278  0E00               	movlw	0
 10032  00427A  0101               	movlb	1	; () banked
 10033  00427C  6FD2               	movwf	(_lrpi+1)& (0+255),b
 10034  00427E  0E00               	movlw	0
 10035  004280  6FD1               	movwf	_lrpi& (0+255),b
 10036                           
 10037                           ;monitor.c: 728:     lrpe = 0;
 10038  004282  0E00               	movlw	0
 10039  004284  0100               	movlb	0	; () banked
 10040  004286  6FD5               	movwf	(_lrpe+1)& (0+255),b
 10041  004288  0E00               	movlw	0
 10042  00428A  6FD4               	movwf	_lrpe& (0+255),b
 10043                           
 10044                           ;monitor.c: 729:     maxPressure = 0;
 10045  00428C  0E00               	movlw	0
 10046  00428E  0102               	movlb	2	; () banked
 10047  004290  6F53               	movwf	(_maxPressure+1)& (0+255),b
 10048  004292  0E00               	movlw	0
 10049  004294  6F52               	movwf	_maxPressure& (0+255),b
 10050                           
 10051                           ;monitor.c: 730:     minPressure = 40*5;
 10052  004296  0E00               	movlw	0
 10053  004298  0100               	movlb	0	; () banked
 10054  00429A  6FD7               	movwf	(_minPressure+1)& (0+255),b
 10055  00429C  0EC8               	movlw	200
 10056  00429E  6FD6               	movwf	_minPressure& (0+255),b
 10057                           
 10058                           ;monitor.c: 731:     pHighAcc = 0;
 10059  0042A0  0E00               	movlw	0
 10060  0042A2  0102               	movlb	2	; () banked
 10061  0042A4  6F1E               	movwf	_pHighAcc& (0+255),b
 10062  0042A6  0E00               	movlw	0
 10063  0042A8  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 10064  0042AA  0E00               	movlw	0
 10065  0042AC  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 10066  0042AE  0E00               	movlw	0
 10067  0042B0  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 10068                           
 10069                           ;monitor.c: 732:     pLowAcc = 0;
 10070  0042B2  0E00               	movlw	0
 10071  0042B4  6F1A               	movwf	_pLowAcc& (0+255),b
 10072  0042B6  0E00               	movlw	0
 10073  0042B8  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 10074  0042BA  0E00               	movlw	0
 10075  0042BC  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 10076  0042BE  0E00               	movlw	0
 10077  0042C0  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 10078                           
 10079                           ;monitor.c: 734:     alarmMaxPressure = 0;
 10080  0042C2  0E00               	movlw	0
 10081  0042C4  6F51               	movwf	(_alarmMaxPressure+1)& (0+255),b
 10082  0042C6  0E00               	movlw	0
 10083  0042C8  6F50               	movwf	_alarmMaxPressure& (0+255),b
 10084                           
 10085                           ;monitor.c: 735:     prSlow = 0;
 10086  0042CA  0E00               	movlw	0
 10087  0042CC  0100               	movlb	0	; () banked
 10088  0042CE  6FCF               	movwf	(_prSlow+1)& (0+255),b
 10089  0042D0  0E00               	movlw	0
 10090  0042D2  6FCE               	movwf	_prSlow& (0+255),b
 10091                           
 10092                           ;monitor.c: 736:     prSlowDev = 0;
 10093  0042D4  0E00               	movlw	0
 10094  0042D6  0102               	movlb	2	; () banked
 10095  0042D8  6F43               	movwf	(_prSlowDev+1)& (0+255),b
 10096  0042DA  0E00               	movlw	0
 10097  0042DC  6F42               	movwf	_prSlowDev& (0+255),b
 10098                           
 10099                           ;monitor.c: 737:     prSlowNumStable = 0;
 10100  0042DE  0E00               	movlw	0
 10101  0042E0  6F41               	movwf	(_prSlowNumStable+1)& (0+255),b
 10102  0042E2  0E00               	movlw	0
 10103  0042E4  6F40               	movwf	_prSlowNumStable& (0+255),b
 10104                           
 10105                           ;monitor.c: 738:     hiLimit = 40*5;
 10106  0042E6  0E00               	movlw	0
 10107  0042E8  0101               	movlb	1	; () banked
 10108  0042EA  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 10109  0042EC  0EC8               	movlw	200
 10110  0042EE  6FCF               	movwf	_hiLimit& (0+255),b
 10111                           
 10112                           ;monitor.c: 739:     loLimit = 0;
 10113  0042F0  0E00               	movlw	0
 10114  0042F2  6FCE               	movwf	(_loLimit+1)& (0+255),b
 10115  0042F4  0E00               	movlw	0
 10116  0042F6  6FCD               	movwf	_loLimit& (0+255),b
 10117                           
 10118                           ;monitor.c: 740:     volumeAcc = 0;
 10119  0042F8  0E00               	movlw	0
 10120  0042FA  0102               	movlb	2	; () banked
 10121  0042FC  6F22               	movwf	_volumeAcc& (0+255),b
 10122  0042FE  0E00               	movlw	0
 10123  004300  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 10124  004302  0E00               	movlw	0
 10125  004304  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 10126  004306  0E00               	movlw	0
 10127  004308  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 10128                           
 10129                           ;monitor.c: 741:     volume = 0;
 10130  00430A  0E00               	movlw	0
 10131  00430C  0101               	movlb	1	; () banked
 10132  00430E  6FDE               	movwf	(_volume+1)& (0+255),b
 10133  004310  0E00               	movlw	0
 10134  004312  6FDD               	movwf	_volume& (0+255),b
 10135                           
 10136                           ;monitor.c: 743:     alarmSV1=1;
 10137  004314  0E01               	movlw	1
 10138  004316  0102               	movlb	2	; () banked
 10139  004318  6FA0               	movwf	_alarmSV1& (0+255),b
 10140                           
 10141                           ; BSR set to: 2
 10142                           ;monitor.c: 745:     ClearEPAboveSetAlarm();
 10143  00431A  ECEA  F04F         	call	_ClearEPAboveSetAlarm	;wreg free
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;monitor.c: 746:     ClearEPBelowSetAlarm();
 10147  00431E  EC4B  F050         	call	_ClearEPBelowSetAlarm	;wreg free
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;monitor.c: 747:     ClearIPAboveSetAlarm();
 10151  004322  EC41  F050         	call	_ClearIPAboveSetAlarm	;wreg free
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;monitor.c: 748:     ClearIPBelowSetAlarm();
 10155  004326  EC37  F050         	call	_ClearIPBelowSetAlarm	;wreg free
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;monitor.c: 749:     ClearCircuitFailureAlarm();
 10159  00432A  EC4C  F052         	call	_ClearCircuitFailureAlarm	;wreg free
 10160                           
 10161                           ; BSR set to: 2
 10162  00432E  0012               	return		;funcret
 10163  004330                     __end_of_ClearVars:
 10164                           	opt callstack 0
 10165                           
 10166 ;; *************** function _ClearIPBelowSetAlarm *****************
 10167 ;; Defined at:
 10168 ;;		line 284 in file "alarm.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;		None
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;		None
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, status,2, status,0
 10177 ;; Tracked objects:
 10178 ;;		On entry : 3F/0
 10179 ;;		On exit  : 3F/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10186 ;;Total ram usage:        0 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:   16
 10189 ;; This function calls:
 10190 ;;		Nothing
 10191 ;; This function is called by:
 10192 ;;		_ClearVars
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text46
 10197  00A06E                     __ptext46:
 10198                           	opt callstack 0
 10199  00A06E                     _ClearIPBelowSetAlarm:
 10200                           	opt callstack 12
 10201                           
 10202                           ; BSR set to: 0
 10203                           
 10204                           ; BSR set to: 2
 10205                           ;incstack = 0
 10206  00A06E  07E4               	decf	_ipBelowSetAlarm& (0+255),f,b
 10207  00A070  A0D8               	btfss	status,0,c
 10208  00A072  07E5               	decf	(_ipBelowSetAlarm+1)& (0+255),f,b
 10209                           
 10210                           ; BSR set to: 0
 10211  00A074  AFE5               	btfss	(_ipBelowSetAlarm+1)& (0+255),7,b
 10212  00A076  0012               	return	
 10213                           
 10214                           ; BSR set to: 0
 10215  00A078  0E00               	movlw	0
 10216  00A07A  6FE5               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 10217  00A07C  0E00               	movlw	0
 10218  00A07E  6FE4               	movwf	_ipBelowSetAlarm& (0+255),b
 10219                           
 10220                           ; BSR set to: 0
 10221  00A080  0012               	return		;funcret
 10222  00A082                     __end_of_ClearIPBelowSetAlarm:
 10223                           	opt callstack 0
 10224                           
 10225 ;; *************** function _ClearIPAboveSetAlarm *****************
 10226 ;; Defined at:
 10227 ;;		line 285 in file "alarm.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;		None
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;		None
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      void 
 10234 ;; Registers used:
 10235 ;;		wreg, status,2, status,0
 10236 ;; Tracked objects:
 10237 ;;		On entry : 3F/0
 10238 ;;		On exit  : 3F/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;Total ram usage:        0 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:   16
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_ClearVars
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text47
 10256  00A082                     __ptext47:
 10257                           	opt callstack 0
 10258  00A082                     _ClearIPAboveSetAlarm:
 10259                           	opt callstack 12
 10260                           
 10261                           ; BSR set to: 0
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;incstack = 0
 10265  00A082  07E2               	decf	_ipAboveSetAlarm& (0+255),f,b
 10266  00A084  A0D8               	btfss	status,0,c
 10267  00A086  07E3               	decf	(_ipAboveSetAlarm+1)& (0+255),f,b
 10268                           
 10269                           ; BSR set to: 0
 10270  00A088  AFE3               	btfss	(_ipAboveSetAlarm+1)& (0+255),7,b
 10271  00A08A  0012               	return	
 10272                           
 10273                           ; BSR set to: 0
 10274  00A08C  0E00               	movlw	0
 10275  00A08E  6FE3               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 10276  00A090  0E00               	movlw	0
 10277  00A092  6FE2               	movwf	_ipAboveSetAlarm& (0+255),b
 10278                           
 10279                           ; BSR set to: 0
 10280  00A094  0012               	return		;funcret
 10281  00A096                     __end_of_ClearIPAboveSetAlarm:
 10282                           	opt callstack 0
 10283                           
 10284 ;; *************** function _ClearEPBelowSetAlarm *****************
 10285 ;; Defined at:
 10286 ;;		line 282 in file "alarm.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;		None
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;		None
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  1    wreg      void 
 10293 ;; Registers used:
 10294 ;;		wreg, status,2, status,0
 10295 ;; Tracked objects:
 10296 ;;		On entry : 3F/0
 10297 ;;		On exit  : 3F/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;Total ram usage:        0 bytes
 10305 ;; Hardware stack levels used:    1
 10306 ;; Hardware stack levels required when called:   16
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_ClearVars
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text48
 10315  00A096                     __ptext48:
 10316                           	opt callstack 0
 10317  00A096                     _ClearEPBelowSetAlarm:
 10318                           	opt callstack 12
 10319                           
 10320                           ; BSR set to: 0
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;incstack = 0
 10324  00A096  07E8               	decf	_epBelowSetAlarm& (0+255),f,b
 10325  00A098  A0D8               	btfss	status,0,c
 10326  00A09A  07E9               	decf	(_epBelowSetAlarm+1)& (0+255),f,b
 10327                           
 10328                           ; BSR set to: 0
 10329  00A09C  AFE9               	btfss	(_epBelowSetAlarm+1)& (0+255),7,b
 10330  00A09E  0012               	return	
 10331                           
 10332                           ; BSR set to: 0
 10333  00A0A0  0E00               	movlw	0
 10334  00A0A2  6FE9               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 10335  00A0A4  0E00               	movlw	0
 10336  00A0A6  6FE8               	movwf	_epBelowSetAlarm& (0+255),b
 10337                           
 10338                           ; BSR set to: 0
 10339  00A0A8  0012               	return		;funcret
 10340  00A0AA                     __end_of_ClearEPBelowSetAlarm:
 10341                           	opt callstack 0
 10342                           
 10343 ;; *************** function _ClearEPAboveSetAlarm *****************
 10344 ;; Defined at:
 10345 ;;		line 283 in file "alarm.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;		None
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, status,2, status,0
 10354 ;; Tracked objects:
 10355 ;;		On entry : 3F/2
 10356 ;;		On exit  : 3F/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10363 ;;Total ram usage:        0 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   16
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		_ClearVars
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text49
 10374  009FD4                     __ptext49:
 10375                           	opt callstack 0
 10376  009FD4                     _ClearEPAboveSetAlarm:
 10377                           	opt callstack 12
 10378                           
 10379                           ; BSR set to: 2
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;incstack = 0
 10383  009FD4  0100               	movlb	0	; () banked
 10384  009FD6  07E6               	decf	_epAboveSetAlarm& (0+255),f,b
 10385  009FD8  A0D8               	btfss	status,0,c
 10386  009FDA  07E7               	decf	(_epAboveSetAlarm+1)& (0+255),f,b
 10387                           
 10388                           ; BSR set to: 0
 10389  009FDC  AFE7               	btfss	(_epAboveSetAlarm+1)& (0+255),7,b
 10390  009FDE  0012               	return	
 10391                           
 10392                           ; BSR set to: 0
 10393  009FE0  0E00               	movlw	0
 10394  009FE2  6FE7               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 10395  009FE4  0E00               	movlw	0
 10396  009FE6  6FE6               	movwf	_epAboveSetAlarm& (0+255),b
 10397                           
 10398                           ; BSR set to: 0
 10399  009FE8  0012               	return		;funcret
 10400  009FEA                     __end_of_ClearEPAboveSetAlarm:
 10401                           	opt callstack 0
 10402                           
 10403 ;; *************** function _ClearCircuitFailureAlarm *****************
 10404 ;; Defined at:
 10405 ;;		line 279 in file "alarm.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;		None
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;		None
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  1    wreg      void 
 10412 ;; Registers used:
 10413 ;;		wreg, status,2
 10414 ;; Tracked objects:
 10415 ;;		On entry : 3C/1
 10416 ;;		On exit  : 3F/2
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10423 ;;Total ram usage:        0 bytes
 10424 ;; Hardware stack levels used:    1
 10425 ;; Hardware stack levels required when called:   16
 10426 ;; This function calls:
 10427 ;;		Nothing
 10428 ;; This function is called by:
 10429 ;;		_MuteAlarm
 10430 ;;		_ClearVars
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           	psect	text50
 10435  00A498                     __ptext50:
 10436                           	opt callstack 0
 10437  00A498                     _ClearCircuitFailureAlarm:
 10438                           	opt callstack 12
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;incstack = 0
 10442  00A498  0E00               	movlw	0
 10443  00A49A  0102               	movlb	2	; () banked
 10444  00A49C  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 10445                           
 10446                           ; BSR set to: 2
 10447  00A49E  0012               	return		;funcret
 10448  00A4A0                     __end_of_ClearCircuitFailureAlarm:
 10449                           	opt callstack 0
 10450                           
 10451 ;; *************** function _AdcInit *****************
 10452 ;; Defined at:
 10453 ;;		line 57 in file "monitor.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;		None
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;		None
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      void 
 10460 ;; Registers used:
 10461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10462 ;; Tracked objects:
 10463 ;;		On entry : 3C/0
 10464 ;;		On exit  : 3F/3E
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;Total ram usage:        0 bytes
 10472 ;; Hardware stack levels used:    1
 10473 ;; Hardware stack levels required when called:   17
 10474 ;; This function calls:
 10475 ;;		_ADCC_SetADTIInterruptHandler
 10476 ;;		_ADCC_StartConversion
 10477 ;;		___wmul
 10478 ;; This function is called by:
 10479 ;;		_MonitorInit
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	text51
 10484  008252                     __ptext51:
 10485                           	opt callstack 0
 10486  008252                     _AdcInit:
 10487                           	opt callstack 12
 10488                           
 10489                           ;monitor.c: 58:     currentChannel = 0;
 10490                           
 10491                           ; BSR set to: 2
 10492                           ;incstack = 0
 10493  008252  0E00               	movlw	0
 10494  008254  0101               	movlb	1	; () banked
 10495  008256  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 10496  008258  0E00               	movlw	0
 10497  00825A  6FE5               	movwf	_currentChannel& (0+255),b
 10498                           
 10499                           ; BSR set to: 1
 10500                           ;monitor.c: 59:     ADCC_SetADTIInterruptHandler(AdcHandler);
 10501  00825C  0E18               	movlw	low _AdcHandler
 10502  00825E  6F04               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 10503  008260  0E60               	movlw	high _AdcHandler
 10504  008262  6F05               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 10505  008264  EC06  F051         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 10506                           
 10507                           ; BSR set to: 1
 10508                           ;monitor.c: 62:     ADCON0bits.ADON = 0;
 10509  008268  013E               	movlb	62	; () banked
 10510  00826A  9FF8               	bcf	248,7,b	;volatile
 10511                           
 10512                           ; BSR set to: 62
 10513                           ;monitor.c: 63:     ADREF = adcChannels[currentChannel].ref;
 10514  00826C  0060  F794  F104   	movff	_currentChannel,___wmul@multiplier
 10515  008272  0060  F798  F105   	movff	_currentChannel+1,___wmul@multiplier+1
 10516  008278  0E00               	movlw	0
 10517  00827A  0101               	movlb	1	; () banked
 10518  00827C  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10519  00827E  0E05               	movlw	5
 10520  008280  6F06               	movwf	___wmul@multiplicand& (0+255),b
 10521  008282  EC60  F04C         	call	___wmul	;wreg free
 10522  008286  0EC0               	movlw	low (_adcChannels+4)
 10523  008288  2504               	addwf	?___wmul& (0+255),w,b
 10524  00828A  6ED9               	movwf	fsr2l,c
 10525  00828C  0E02               	movlw	high (_adcChannels+4)
 10526  00828E  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 10527  008290  6EDA               	movwf	fsr2h,c
 10528  008292  50DF               	movf	indf2,w,c
 10529  008294  013E               	movlb	62	; () banked
 10530  008296  6FFD               	movwf	253,b	;volatile
 10531                           
 10532                           ; BSR set to: 62
 10533                           ;monitor.c: 64:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 10534  008298  0060  F794  F104   	movff	_currentChannel,___wmul@multiplier
 10535  00829E  0060  F798  F105   	movff	_currentChannel+1,___wmul@multiplier+1
 10536  0082A4  0E00               	movlw	0
 10537  0082A6  0101               	movlb	1	; () banked
 10538  0082A8  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10539  0082AA  0E05               	movlw	5
 10540  0082AC  6F06               	movwf	___wmul@multiplicand& (0+255),b
 10541  0082AE  EC60  F04C         	call	___wmul	;wreg free
 10542  0082B2  0EBC               	movlw	low _adcChannels
 10543  0082B4  2504               	addwf	?___wmul& (0+255),w,b
 10544  0082B6  6ED9               	movwf	fsr2l,c
 10545  0082B8  0E02               	movlw	high _adcChannels
 10546  0082BA  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 10547  0082BC  6EDA               	movwf	fsr2h,c
 10548  0082BE  50DF               	movf	indf2,w,c
 10549  0082C0  EC8E  F050         	call	_ADCC_StartConversion
 10550                           
 10551                           ; BSR set to: 62
 10552  0082C4  0012               	return		;funcret
 10553  0082C6                     __end_of_AdcInit:
 10554                           	opt callstack 0
 10555                           
 10556 ;; *************** function _ADCC_StartConversion *****************
 10557 ;; Defined at:
 10558 ;;		line 120 in file "mcc_generated_files/adcc.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  channel         1    wreg     enum E16053
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  channel         1    4[BANK1 ] enum E16053
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      void 
 10565 ;; Registers used:
 10566 ;;		wreg
 10567 ;; Tracked objects:
 10568 ;;		On entry : 3F/1
 10569 ;;		On exit  : 3F/3E
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10576 ;;Total ram usage:        1 bytes
 10577 ;; Hardware stack levels used:    1
 10578 ;; Hardware stack levels required when called:   16
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_AdcInit
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text52
 10587  00A11C                     __ptext52:
 10588                           	opt callstack 0
 10589  00A11C                     _ADCC_StartConversion:
 10590                           	opt callstack 12
 10591                           
 10592                           ; BSR set to: 62
 10593                           ;incstack = 0
 10594                           ;ADCC_StartConversion@channel stored from wreg
 10595  00A11C  6F04               	movwf	ADCC_StartConversion@channel& (0+255),b
 10596                           
 10597                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 10598  00A11E  0060  F413  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 10599                           
 10600                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 10601  00A124  013E               	movlb	62	; () banked
 10602  00A126  8FF8               	bsf	248,7,b	;volatile
 10603                           
 10604                           ; BSR set to: 62
 10605                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 10606  00A128  81F8               	bsf	248,0,b	;volatile
 10607                           
 10608                           ; BSR set to: 62
 10609  00A12A  0012               	return		;funcret
 10610  00A12C                     __end_of_ADCC_StartConversion:
 10611                           	opt callstack 0
 10612                           
 10613 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 10614 ;; Defined at:
 10615 ;;		line 316 in file "mcc_generated_files/adcc.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 10618 ;;		 -> AdcHandler(1), ADCC_DefaultInterruptHandler(1), 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;		None
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  1    wreg      void 
 10623 ;; Registers used:
 10624 ;;		wreg, status,2, status,0
 10625 ;; Tracked objects:
 10626 ;;		On entry : 3F/1
 10627 ;;		On exit  : 3F/1
 10628 ;;		Unchanged: 3F/0
 10629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10630 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;Total ram usage:        2 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; Hardware stack levels required when called:   16
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_ADCC_Initialize
 10641 ;;		_AdcInit
 10642 ;; This function uses a non-reentrant model
 10643 ;;
 10644                           
 10645                           	psect	text53
 10646  00A20C                     __ptext53:
 10647                           	opt callstack 0
 10648  00A20C                     _ADCC_SetADTIInterruptHandler:
 10649                           	opt callstack 12
 10650                           
 10651                           ; BSR set to: 1
 10652                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 10653                           
 10654                           ; BSR set to: 62
 10655                           ;incstack = 0
 10656  00A20C  0060  F410  F2F3   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 10657  00A212  0060  F414  F2F4   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 10658                           
 10659                           ; BSR set to: 1
 10660  00A218  0012               	return		;funcret
 10661  00A21A                     __end_of_ADCC_SetADTIInterruptHandler:
 10662                           	opt callstack 0
 10663                           
 10664 ;; *************** function _MonitorEnable *****************
 10665 ;; Defined at:
 10666 ;;		line 272 in file "monitor.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		wreg, status,2
 10675 ;; Tracked objects:
 10676 ;;		On entry : 3F/3
 10677 ;;		On exit  : 3F/2
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;Total ram usage:        0 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:   16
 10687 ;; This function calls:
 10688 ;;		Nothing
 10689 ;; This function is called by:
 10690 ;;		_main
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text54
 10695  00A4A0                     __ptext54:
 10696                           	opt callstack 0
 10697  00A4A0                     _MonitorEnable:
 10698                           	opt callstack 14
 10699                           
 10700                           ; BSR set to: 3
 10701                           
 10702                           ; BSR set to: 1
 10703                           ;incstack = 0
 10704  00A4A0  0E01               	movlw	1
 10705  00A4A2  0102               	movlb	2	; () banked
 10706  00A4A4  6FA2               	movwf	monitor@enable& (0+255),b
 10707                           
 10708                           ; BSR set to: 2
 10709  00A4A6  0012               	return		;funcret
 10710  00A4A8                     __end_of_MonitorEnable:
 10711                           	opt callstack 0
 10712                           
 10713 ;; *************** function _MonitorDump *****************
 10714 ;; Defined at:
 10715 ;;		line 214 in file "monitor.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10724 ;; Tracked objects:
 10725 ;;		On entry : 3F/3
 10726 ;;		On exit  : 3F/2
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:   25
 10736 ;; This function calls:
 10737 ;;		_See12V
 10738 ;;		_See5V
 10739 ;;		___awdiv
 10740 ;;		_printf
 10741 ;; This function is called by:
 10742 ;;		_main
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           	psect	text55
 10747  0030C8                     __ptext55:
 10748                           	opt callstack 0
 10749  0030C8                     _MonitorDump:
 10750                           	opt callstack 5
 10751                           
 10752                           ; BSR set to: 3
 10753                           ;monitor.c: 217:             printf("\r\nNew Breath: TT12: %d TT2: %d TT3: %d TT34: %d T
      +                          T4: %d TT1: %d ", tt12*2, tt2*2, tt3*2, tt34*2, tt4*2, tt1*2);
 10754                           
 10755                           ; BSR set to: 2
 10756                           ;incstack = 0
 10757  0030C8  0E57               	movlw	low STR_33
 10758  0030CA  0101               	movlb	1	; () banked
 10759  0030CC  6F71               	movwf	printf@fmt& (0+255),b
 10760  0030CE  0EFC               	movlw	high STR_33
 10761  0030D0  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10762  0030D2  90D8               	bcf	status,0,c
 10763  0030D4  0102               	movlb	2	; () banked
 10764  0030D6  3562               	rlcf	_tt12& (0+255),w,b
 10765  0030D8  0101               	movlb	1	; () banked
 10766  0030DA  6F73               	movwf	(?_printf+2)& (0+255),b
 10767  0030DC  0102               	movlb	2	; () banked
 10768  0030DE  3563               	rlcf	(_tt12+1)& (0+255),w,b
 10769  0030E0  0101               	movlb	1	; () banked
 10770  0030E2  6F74               	movwf	(?_printf+3)& (0+255),b
 10771  0030E4  90D8               	bcf	status,0,c
 10772  0030E6  0100               	movlb	0	; () banked
 10773  0030E8  35DE               	rlcf	_tt2& (0+255),w,b
 10774  0030EA  0101               	movlb	1	; () banked
 10775  0030EC  6F75               	movwf	(?_printf+4)& (0+255),b
 10776  0030EE  0100               	movlb	0	; () banked
 10777  0030F0  35DF               	rlcf	(_tt2+1)& (0+255),w,b
 10778  0030F2  0101               	movlb	1	; () banked
 10779  0030F4  6F76               	movwf	(?_printf+5)& (0+255),b
 10780  0030F6  90D8               	bcf	status,0,c
 10781  0030F8  35DB               	rlcf	_tt3& (0+255),w,b
 10782  0030FA  6F77               	movwf	(?_printf+6)& (0+255),b
 10783  0030FC  35DC               	rlcf	(_tt3+1)& (0+255),w,b
 10784  0030FE  6F78               	movwf	(?_printf+7)& (0+255),b
 10785  003100  90D8               	bcf	status,0,c
 10786  003102  0102               	movlb	2	; () banked
 10787  003104  3560               	rlcf	_tt34& (0+255),w,b
 10788  003106  0101               	movlb	1	; () banked
 10789  003108  6F79               	movwf	(?_printf+8)& (0+255),b
 10790  00310A  0102               	movlb	2	; () banked
 10791  00310C  3561               	rlcf	(_tt34+1)& (0+255),w,b
 10792  00310E  0101               	movlb	1	; () banked
 10793  003110  6F7A               	movwf	(?_printf+9)& (0+255),b
 10794  003112  90D8               	bcf	status,0,c
 10795  003114  0100               	movlb	0	; () banked
 10796  003116  35DC               	rlcf	_tt4& (0+255),w,b
 10797  003118  0101               	movlb	1	; () banked
 10798  00311A  6F7B               	movwf	(?_printf+10)& (0+255),b
 10799  00311C  0100               	movlb	0	; () banked
 10800  00311E  35DD               	rlcf	(_tt4+1)& (0+255),w,b
 10801  003120  0101               	movlb	1	; () banked
 10802  003122  6F7C               	movwf	(?_printf+11)& (0+255),b
 10803  003124  90D8               	bcf	status,0,c
 10804  003126  0102               	movlb	2	; () banked
 10805  003128  3566               	rlcf	_tt1& (0+255),w,b
 10806  00312A  0101               	movlb	1	; () banked
 10807  00312C  6F7D               	movwf	(?_printf+12)& (0+255),b
 10808  00312E  0102               	movlb	2	; () banked
 10809  003130  3567               	rlcf	(_tt1+1)& (0+255),w,b
 10810  003132  0101               	movlb	1	; () banked
 10811  003134  6F7E               	movwf	(?_printf+13)& (0+255),b
 10812  003136  ECFF  F04C         	call	_printf	;wreg free
 10813                           
 10814                           ;monitor.c: 218:             printf("TI: %d TE: %d TDI: %d TDE: %d\r\n", ti*2, te*2, tdi
      +                          *2, tde*2);
 10815  00313A  0E47               	movlw	low STR_34
 10816  00313C  0101               	movlb	1	; () banked
 10817  00313E  6F71               	movwf	printf@fmt& (0+255),b
 10818  003140  0EFE               	movlw	high STR_34
 10819  003142  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10820  003144  90D8               	bcf	status,0,c
 10821  003146  0102               	movlb	2	; () banked
 10822  003148  355A               	rlcf	_ti& (0+255),w,b
 10823  00314A  0101               	movlb	1	; () banked
 10824  00314C  6F73               	movwf	(?_printf+2)& (0+255),b
 10825  00314E  0102               	movlb	2	; () banked
 10826  003150  355B               	rlcf	(_ti+1)& (0+255),w,b
 10827  003152  0101               	movlb	1	; () banked
 10828  003154  6F74               	movwf	(?_printf+3)& (0+255),b
 10829  003156  90D8               	bcf	status,0,c
 10830  003158  0102               	movlb	2	; () banked
 10831  00315A  3558               	rlcf	_te& (0+255),w,b
 10832  00315C  0101               	movlb	1	; () banked
 10833  00315E  6F75               	movwf	(?_printf+4)& (0+255),b
 10834  003160  0102               	movlb	2	; () banked
 10835  003162  3559               	rlcf	(_te+1)& (0+255),w,b
 10836  003164  0101               	movlb	1	; () banked
 10837  003166  6F76               	movwf	(?_printf+5)& (0+255),b
 10838  003168  90D8               	bcf	status,0,c
 10839  00316A  35D9               	rlcf	_tdi& (0+255),w,b
 10840  00316C  6F77               	movwf	(?_printf+6)& (0+255),b
 10841  00316E  35DA               	rlcf	(_tdi+1)& (0+255),w,b
 10842  003170  6F78               	movwf	(?_printf+7)& (0+255),b
 10843  003172  90D8               	bcf	status,0,c
 10844  003174  35D7               	rlcf	_tde& (0+255),w,b
 10845  003176  6F79               	movwf	(?_printf+8)& (0+255),b
 10846  003178  35D8               	rlcf	(_tde+1)& (0+255),w,b
 10847  00317A  6F7A               	movwf	(?_printf+9)& (0+255),b
 10848  00317C  ECFF  F04C         	call	_printf	;wreg free
 10849                           
 10850                           ;monitor.c: 219:             printf("   Pmax: %d lIP: %d IP: %d Phigh: %d -- ", pmax/5, 
      +                          lrpi/5, pi/5, pHigh/5);
 10851  003180  0E92               	movlw	low STR_35
 10852  003182  0101               	movlb	1	; () banked
 10853  003184  6F71               	movwf	printf@fmt& (0+255),b
 10854  003186  0EFD               	movlw	high STR_35
 10855  003188  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10856  00318A  0060  F360  F10A   	movff	_pmax,___awdiv@dividend
 10857  003190  0060  F364  F10B   	movff	_pmax+1,___awdiv@dividend+1
 10858  003196  0E00               	movlw	0
 10859  003198  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10860  00319A  0E05               	movlw	5
 10861  00319C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10862  00319E  EC9D  F03F         	call	___awdiv	;wreg free
 10863  0031A2  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10864  0031A8  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10865  0031AE  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 10866  0031B4  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 10867  0031BA  0E00               	movlw	0
 10868  0031BC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10869  0031BE  0E05               	movlw	5
 10870  0031C0  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10871  0031C2  EC9D  F03F         	call	___awdiv	;wreg free
 10872  0031C6  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10873  0031CC  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10874  0031D2  0060  F754  F10A   	movff	_pi,___awdiv@dividend
 10875  0031D8  0060  F758  F10B   	movff	_pi+1,___awdiv@dividend+1
 10876  0031DE  0E00               	movlw	0
 10877  0031E0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10878  0031E2  0E05               	movlw	5
 10879  0031E4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10880  0031E6  EC9D  F03F         	call	___awdiv	;wreg free
 10881  0031EA  0060  F428  F177   	movff	?___awdiv,?_printf+6
 10882  0031F0  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 10883  0031F6  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 10884  0031FC  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 10885  003202  0E00               	movlw	0
 10886  003204  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10887  003206  0E05               	movlw	5
 10888  003208  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10889  00320A  EC9D  F03F         	call	___awdiv	;wreg free
 10890  00320E  0060  F428  F179   	movff	?___awdiv,?_printf+8
 10891  003214  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
 10892  00321A  ECFF  F04C         	call	_printf	;wreg free
 10893                           
 10894                           ;monitor.c: 220:             printf("Pmin: %d lEP: %d EP: %d Plow:%d -- ", pmin/5, lrpe/
      +                          5, pe/5, pLow/5 );
 10895  00321E  0EE3               	movlw	low STR_36
 10896  003220  0101               	movlb	1	; () banked
 10897  003222  6F71               	movwf	printf@fmt& (0+255),b
 10898  003224  0EFD               	movlw	high STR_36
 10899  003226  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10900  003228  0060  F950  F10A   	movff	_pmin,___awdiv@dividend
 10901  00322E  0060  F954  F10B   	movff	_pmin+1,___awdiv@dividend+1
 10902  003234  0E00               	movlw	0
 10903  003236  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10904  003238  0E05               	movlw	5
 10905  00323A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10906  00323C  EC9D  F03F         	call	___awdiv	;wreg free
 10907  003240  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10908  003246  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10909  00324C  0060  F350  F10A   	movff	_lrpe,___awdiv@dividend
 10910  003252  0060  F354  F10B   	movff	_lrpe+1,___awdiv@dividend+1
 10911  003258  0E00               	movlw	0
 10912  00325A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10913  00325C  0E05               	movlw	5
 10914  00325E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10915  003260  EC9D  F03F         	call	___awdiv	;wreg free
 10916  003264  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10917  00326A  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10918  003270  0060  F368  F10A   	movff	_pe,___awdiv@dividend
 10919  003276  0060  F36C  F10B   	movff	_pe+1,___awdiv@dividend+1
 10920  00327C  0E00               	movlw	0
 10921  00327E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10922  003280  0E05               	movlw	5
 10923  003282  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10924  003284  EC9D  F03F         	call	___awdiv	;wreg free
 10925  003288  0060  F428  F177   	movff	?___awdiv,?_printf+6
 10926  00328E  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 10927  003294  0060  F938  F10A   	movff	_pLow,___awdiv@dividend
 10928  00329A  0060  F93C  F10B   	movff	_pLow+1,___awdiv@dividend+1
 10929  0032A0  0E00               	movlw	0
 10930  0032A2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10931  0032A4  0E05               	movlw	5
 10932  0032A6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10933  0032A8  EC9D  F03F         	call	___awdiv	;wreg free
 10934  0032AC  0060  F428  F179   	movff	?___awdiv,?_printf+8
 10935  0032B2  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
 10936  0032B8  ECFF  F04C         	call	_printf	;wreg free
 10937                           
 10938                           ;monitor.c: 221:             printf("HiLimit: %d LoLimit: %d -- Volume: %d\r\n", hiLimit
      +                          /5, loLimit/5, volume);
 10939  0032BC  0EBB               	movlw	low STR_37
 10940  0032BE  0101               	movlb	1	; () banked
 10941  0032C0  6F71               	movwf	printf@fmt& (0+255),b
 10942  0032C2  0EFD               	movlw	high STR_37
 10943  0032C4  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10944  0032C6  0060  F73C  F10A   	movff	_hiLimit,___awdiv@dividend
 10945  0032CC  0060  F740  F10B   	movff	_hiLimit+1,___awdiv@dividend+1
 10946  0032D2  0E00               	movlw	0
 10947  0032D4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10948  0032D6  0E05               	movlw	5
 10949  0032D8  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10950  0032DA  EC9D  F03F         	call	___awdiv	;wreg free
 10951  0032DE  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10952  0032E4  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10953  0032EA  0060  F734  F10A   	movff	_loLimit,___awdiv@dividend
 10954  0032F0  0060  F738  F10B   	movff	_loLimit+1,___awdiv@dividend+1
 10955  0032F6  0E00               	movlw	0
 10956  0032F8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10957  0032FA  0E05               	movlw	5
 10958  0032FC  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10959  0032FE  EC9D  F03F         	call	___awdiv	;wreg free
 10960  003302  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10961  003308  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10962  00330E  0060  F774  F177   	movff	_volume,?_printf+6
 10963  003314  0060  F778  F178   	movff	_volume+1,?_printf+7
 10964  00331A  ECFF  F04C         	call	_printf	;wreg free
 10965                           
 10966                           ;monitor.c: 222:             printf("ADCoffset: %d ADCVoffset: %d 12V: %d mV 5V: %d mV -
      +                          - ", adcOffset/8, adcVOffset/8, See12V(), See5V());
 10967  00331E  0ECF               	movlw	low STR_38
 10968  003320  0101               	movlb	1	; () banked
 10969  003322  6F71               	movwf	printf@fmt& (0+255),b
 10970  003324  0EFC               	movlw	high STR_38
 10971  003326  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10972  003328  0060  F7D8  F10A   	movff	_adcOffset,___awdiv@dividend
 10973  00332E  0060  F7DC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
 10974  003334  0E00               	movlw	0
 10975  003336  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10976  003338  0E08               	movlw	8
 10977  00333A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10978  00333C  EC9D  F03F         	call	___awdiv	;wreg free
 10979  003340  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10980  003346  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10981  00334C  0060  F7D0  F10A   	movff	_adcVOffset,___awdiv@dividend
 10982  003352  0060  F7D4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
 10983  003358  0E00               	movlw	0
 10984  00335A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10985  00335C  0E08               	movlw	8
 10986  00335E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10987  003360  EC9D  F03F         	call	___awdiv	;wreg free
 10988  003364  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10989  00336A  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10990  003370  EC69  F03C         	call	_See12V	;wreg free
 10991  003374  0060  F478  F177   	movff	?_See12V,?_printf+6
 10992  00337A  0060  F47C  F178   	movff	?_See12V+1,?_printf+7
 10993  003380  ECB8  F042         	call	_See5V	;wreg free
 10994  003384  0060  F478  F179   	movff	?_See5V,?_printf+8
 10995  00338A  0060  F47C  F17A   	movff	?_See5V+1,?_printf+9
 10996  003390  ECFF  F04C         	call	_printf	;wreg free
 10997                           
 10998                           ;monitor.c: 223:             printf("Targets: Pmax: %d IP: %d EP: %d V: %d/%d\r\n", targ
      +                          etPmax/5, targetHigh/5, targetLow/5, volumeMax, volumeMin);
 10999  003394  0E67               	movlw	low STR_39
 11000  003396  0101               	movlb	1	; () banked
 11001  003398  6F71               	movwf	printf@fmt& (0+255),b
 11002  00339A  0EFD               	movlw	high STR_39
 11003  00339C  6F72               	movwf	(printf@fmt+1)& (0+255),b
 11004  00339E  0060  F9B8  F10A   	movff	_targetPmax,___awdiv@dividend
 11005  0033A4  0060  F9BC  F10B   	movff	_targetPmax+1,___awdiv@dividend+1
 11006  0033AA  0E00               	movlw	0
 11007  0033AC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11008  0033AE  0E05               	movlw	5
 11009  0033B0  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11010  0033B2  EC9D  F03F         	call	___awdiv	;wreg free
 11011  0033B6  0060  F428  F173   	movff	?___awdiv,?_printf+2
 11012  0033BC  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 11013  0033C2  0060  F78C  F10A   	movff	_targetHigh,___awdiv@dividend
 11014  0033C8  0060  F790  F10B   	movff	_targetHigh+1,___awdiv@dividend+1
 11015  0033CE  0E00               	movlw	0
 11016  0033D0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11017  0033D2  0E05               	movlw	5
 11018  0033D4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11019  0033D6  EC9D  F03F         	call	___awdiv	;wreg free
 11020  0033DA  0060  F428  F175   	movff	?___awdiv,?_printf+4
 11021  0033E0  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 11022  0033E6  0060  F784  F10A   	movff	_targetLow,___awdiv@dividend
 11023  0033EC  0060  F788  F10B   	movff	_targetLow+1,___awdiv@dividend+1
 11024  0033F2  0E00               	movlw	0
 11025  0033F4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11026  0033F6  0E05               	movlw	5
 11027  0033F8  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11028  0033FA  EC9D  F03F         	call	___awdiv	;wreg free
 11029  0033FE  0060  F428  F177   	movff	?___awdiv,?_printf+6
 11030  003404  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 11031  00340A  0060  F9A8  F179   	movff	_volumeMax,?_printf+8
 11032  003410  0060  F9AC  F17A   	movff	_volumeMax+1,?_printf+9
 11033  003416  0060  F9A0  F17B   	movff	_volumeMin,?_printf+10
 11034  00341C  0060  F9A4  F17C   	movff	_volumeMin+1,?_printf+11
 11035  003422  ECFF  F04C         	call	_printf	;wreg free
 11036                           
 11037                           ; BSR set to: 2
 11038  003426  0012               	return		;funcret
 11039  003428                     __end_of_MonitorDump:
 11040                           	opt callstack 0
 11041                           
 11042 ;; *************** function _See5V *****************
 11043 ;; Defined at:
 11044 ;;		line 840 in file "monitor.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;		None
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;  mv              4   32[BANK1 ] long 
 11049 ;;  v12             2   38[BANK1 ] short 
 11050 ;;  adc             2   36[BANK1 ] unsigned short 
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  2   30[BANK1 ] short 
 11053 ;; Registers used:
 11054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 3F/1
 11057 ;;		On exit  : 3F/1
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11060 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11061 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;Total ram usage:       10 bytes
 11065 ;; Hardware stack levels used:    1
 11066 ;; Hardware stack levels required when called:   18
 11067 ;; This function calls:
 11068 ;;		_AdcSeeData
 11069 ;;		___aldiv
 11070 ;; This function is called by:
 11071 ;;		_main
 11072 ;;		_MonitorDump
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           	psect	text56
 11077  008570                     __ptext56:
 11078                           	opt callstack 0
 11079  008570                     _See5V:
 11080                           	opt callstack 12
 11081                           
 11082                           ; BSR set to: 1
 11083                           ;monitor.c: 841:     adc_result_t adc = AdcSeeData(1);
 11084                           
 11085                           ; BSR set to: 2
 11086                           ;incstack = 0
 11087  008570  0E00               	movlw	0
 11088  008572  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
 11089  008574  0E01               	movlw	1
 11090  008576  6F0A               	movwf	AdcSeeData@id& (0+255),b
 11091  008578  EC78  F049         	call	_AdcSeeData	;wreg free
 11092  00857C  0060  F428  F124   	movff	?_AdcSeeData,See5V@adc
 11093  008582  0060  F42C  F125   	movff	?_AdcSeeData+1,See5V@adc+1
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;monitor.c: 842:     int32_t mv = adc;
 11097  008588  0060  F490  F120   	movff	See5V@adc,See5V@mv
 11098  00858E  0060  F494  F121   	movff	See5V@adc+1,See5V@mv+1
 11099  008594  6B22               	clrf	(See5V@mv+2)& (0+255),b
 11100  008596  6B23               	clrf	(See5V@mv+3)& (0+255),b
 11101                           
 11102                           ; BSR set to: 1
 11103                           ;monitor.c: 845:     int16_t v12 = mv/2;
 11104  008598  0060  F480  F110   	movff	See5V@mv,___aldiv@dividend
 11105  00859E  0060  F484  F111   	movff	See5V@mv+1,___aldiv@dividend+1
 11106  0085A4  0060  F488  F112   	movff	See5V@mv+2,___aldiv@dividend+2
 11107  0085AA  0060  F48C  F113   	movff	See5V@mv+3,___aldiv@dividend+3
 11108  0085B0  0E02               	movlw	2
 11109  0085B2  6F14               	movwf	___aldiv@divisor& (0+255),b
 11110  0085B4  0E00               	movlw	0
 11111  0085B6  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11112  0085B8  0E00               	movlw	0
 11113  0085BA  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11114  0085BC  0E00               	movlw	0
 11115  0085BE  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11116  0085C0  ECB4  F035         	call	___aldiv	;wreg free
 11117  0085C4  0060  F440  F126   	movff	?___aldiv,See5V@v12
 11118  0085CA  0060  F444  F127   	movff	?___aldiv+1,See5V@v12+1
 11119                           
 11120                           ; BSR set to: 1
 11121                           ;monitor.c: 846:     return v12;
 11122  0085D0  0060  F498  F11E   	movff	See5V@v12,?_See5V
 11123  0085D6  0060  F49C  F11F   	movff	See5V@v12+1,?_See5V+1
 11124                           
 11125                           ; BSR set to: 1
 11126  0085DC  0012               	return		;funcret
 11127  0085DE                     __end_of_See5V:
 11128                           	opt callstack 0
 11129                           
 11130 ;; *************** function _See12V *****************
 11131 ;; Defined at:
 11132 ;;		line 857 in file "monitor.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;		None
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;  mv              4   32[BANK1 ] long 
 11137 ;;  v12             2   38[BANK1 ] short 
 11138 ;;  adc             2   36[BANK1 ] unsigned short 
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  2   30[BANK1 ] short 
 11141 ;; Registers used:
 11142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11143 ;; Tracked objects:
 11144 ;;		On entry : 3F/1
 11145 ;;		On exit  : 3F/1
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11148 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;Total ram usage:       10 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; Hardware stack levels required when called:   18
 11155 ;; This function calls:
 11156 ;;		_AdcSeeData
 11157 ;;		___aldiv
 11158 ;;		___lmul
 11159 ;; This function is called by:
 11160 ;;		_main
 11161 ;;		_MonitorDump
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text57
 11166  0078D2                     __ptext57:
 11167                           	opt callstack 0
 11168  0078D2                     _See12V:
 11169                           	opt callstack 12
 11170                           
 11171                           ; BSR set to: 1
 11172                           ;monitor.c: 858:     adc_result_t adc = AdcSeeData(3);
 11173                           
 11174                           ; BSR set to: 1
 11175                           ;incstack = 0
 11176  0078D2  0E00               	movlw	0
 11177  0078D4  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
 11178  0078D6  0E03               	movlw	3
 11179  0078D8  6F0A               	movwf	AdcSeeData@id& (0+255),b
 11180  0078DA  EC78  F049         	call	_AdcSeeData	;wreg free
 11181  0078DE  0060  F428  F124   	movff	?_AdcSeeData,See12V@adc
 11182  0078E4  0060  F42C  F125   	movff	?_AdcSeeData+1,See12V@adc+1
 11183                           
 11184                           ; BSR set to: 1
 11185                           ;monitor.c: 859:     int32_t mv = adc;
 11186  0078EA  0060  F490  F120   	movff	See12V@adc,See12V@mv
 11187  0078F0  0060  F494  F121   	movff	See12V@adc+1,See12V@mv+1
 11188  0078F6  6B22               	clrf	(See12V@mv+2)& (0+255),b
 11189  0078F8  6B23               	clrf	(See12V@mv+3)& (0+255),b
 11190                           
 11191                           ; BSR set to: 1
 11192                           ;monitor.c: 861:     int16_t v12 = (mv*33)/10;
 11193  0078FA  0060  F480  F104   	movff	See12V@mv,___lmul@multiplier
 11194  007900  0060  F484  F105   	movff	See12V@mv+1,___lmul@multiplier+1
 11195  007906  0060  F488  F106   	movff	See12V@mv+2,___lmul@multiplier+2
 11196  00790C  0060  F48C  F107   	movff	See12V@mv+3,___lmul@multiplier+3
 11197  007912  0E21               	movlw	33
 11198  007914  6F08               	movwf	___lmul@multiplicand& (0+255),b
 11199  007916  0E00               	movlw	0
 11200  007918  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11201  00791A  0E00               	movlw	0
 11202  00791C  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11203  00791E  0E00               	movlw	0
 11204  007920  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11205  007922  EC93  F045         	call	___lmul	;wreg free
 11206  007926  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
 11207  00792C  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
 11208  007932  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
 11209  007938  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
 11210  00793E  0E0A               	movlw	10
 11211  007940  6F14               	movwf	___aldiv@divisor& (0+255),b
 11212  007942  0E00               	movlw	0
 11213  007944  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11214  007946  0E00               	movlw	0
 11215  007948  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11216  00794A  0E00               	movlw	0
 11217  00794C  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11218  00794E  ECB4  F035         	call	___aldiv	;wreg free
 11219  007952  0060  F440  F126   	movff	?___aldiv,See12V@v12
 11220  007958  0060  F444  F127   	movff	?___aldiv+1,See12V@v12+1
 11221                           
 11222                           ; BSR set to: 1
 11223                           ;monitor.c: 862:     return v12;
 11224  00795E  0060  F498  F11E   	movff	See12V@v12,?_See12V
 11225  007964  0060  F49C  F11F   	movff	See12V@v12+1,?_See12V+1
 11226                           
 11227                           ; BSR set to: 1
 11228  00796A  0012               	return		;funcret
 11229  00796C                     __end_of_See12V:
 11230                           	opt callstack 0
 11231                           
 11232 ;; *************** function _AdcSeeData *****************
 11233 ;; Defined at:
 11234 ;;		line 82 in file "monitor.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  id              2   10[BANK1 ] int 
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;  data            2   12[BANK1 ] unsigned short 
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  2   10[BANK1 ] unsigned short 
 11241 ;; Registers used:
 11242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 3F/1
 11245 ;;		On exit  : 3F/1
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11248 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11251 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;Total ram usage:        4 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:   17
 11255 ;; This function calls:
 11256 ;;		___wmul
 11257 ;; This function is called by:
 11258 ;;		_SeePressure_pa
 11259 ;;		_SeePressureV_pa
 11260 ;;		_See5V
 11261 ;;		_See12V
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text58
 11266  0092F0                     __ptext58:
 11267                           	opt callstack 0
 11268  0092F0                     _AdcSeeData:
 11269                           	opt callstack 12
 11270                           
 11271                           ; BSR set to: 1
 11272                           ;monitor.c: 83:     adc_result_t data;;monitor.c: 84:     data = adcChannels[id].data;
 11273                           
 11274                           ; BSR set to: 1
 11275                           ;incstack = 0
 11276  0092F0  0060  F428  F104   	movff	AdcSeeData@id,___wmul@multiplier
 11277  0092F6  0060  F42C  F105   	movff	AdcSeeData@id+1,___wmul@multiplier+1
 11278  0092FC  0E00               	movlw	0
 11279  0092FE  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11280  009300  0E05               	movlw	5
 11281  009302  6F06               	movwf	___wmul@multiplicand& (0+255),b
 11282  009304  EC60  F04C         	call	___wmul	;wreg free
 11283  009308  0EBE               	movlw	low (_adcChannels+2)
 11284  00930A  2504               	addwf	?___wmul& (0+255),w,b
 11285  00930C  6ED9               	movwf	fsr2l,c
 11286  00930E  0E02               	movlw	high (_adcChannels+2)
 11287  009310  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 11288  009312  6EDA               	movwf	fsr2h,c
 11289  009314  006F FF78  F10C    	movff	postinc2,AdcSeeData@data
 11290  00931A  006F FF74  F10D    	movff	postdec2,AdcSeeData@data+1
 11291                           
 11292                           ; BSR set to: 1
 11293                           ;monitor.c: 86:     return data;
 11294  009320  0060  F430  F10A   	movff	AdcSeeData@data,?_AdcSeeData
 11295  009326  0060  F434  F10B   	movff	AdcSeeData@data+1,?_AdcSeeData+1
 11296                           
 11297                           ; BSR set to: 1
 11298  00932C  0012               	return		;funcret
 11299  00932E                     __end_of_AdcSeeData:
 11300                           	opt callstack 0
 11301                           
 11302 ;; *************** function _MonitorDisable *****************
 11303 ;; Defined at:
 11304 ;;		line 273 in file "monitor.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;		None
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  1    wreg      void 
 11311 ;; Registers used:
 11312 ;;		wreg, status,2
 11313 ;; Tracked objects:
 11314 ;;		On entry : 3F/3
 11315 ;;		On exit  : 3F/2
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;Total ram usage:        0 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:   16
 11325 ;; This function calls:
 11326 ;;		Nothing
 11327 ;; This function is called by:
 11328 ;;		_main
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text59
 11333  00A4A8                     __ptext59:
 11334                           	opt callstack 0
 11335  00A4A8                     _MonitorDisable:
 11336                           	opt callstack 14
 11337                           
 11338                           ; BSR set to: 3
 11339                           
 11340                           ; BSR set to: 1
 11341                           ;incstack = 0
 11342  00A4A8  0E00               	movlw	0
 11343  00A4AA  0102               	movlb	2	; () banked
 11344  00A4AC  6FA2               	movwf	monitor@enable& (0+255),b
 11345                           
 11346                           ; BSR set to: 2
 11347  00A4AE  0012               	return		;funcret
 11348  00A4B0                     __end_of_MonitorDisable:
 11349                           	opt callstack 0
 11350                           
 11351 ;; *************** function _LCDOn *****************
 11352 ;; Defined at:
 11353 ;;		line 119 in file "lcd.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;		None
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      void 
 11360 ;; Registers used:
 11361 ;;		wreg, status,2
 11362 ;; Tracked objects:
 11363 ;;		On entry : 3E/2
 11364 ;;		On exit  : 3F/1
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11371 ;;Total ram usage:        0 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:   16
 11374 ;; This function calls:
 11375 ;;		Nothing
 11376 ;; This function is called by:
 11377 ;;		_main
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text60
 11382  00A402                     __ptext60:
 11383                           	opt callstack 0
 11384  00A402                     _LCDOn:
 11385                           	opt callstack 14
 11386                           
 11387                           ;lcd.c: 120:     LED = 1;
 11388                           
 11389                           ; BSR set to: 2
 11390                           ;incstack = 0
 11391  00A402  0E01               	movlw	1
 11392  00A404  0101               	movlb	1	; () banked
 11393  00A406  6FF0               	movwf	_LED& (0+255),b
 11394                           
 11395                           ; BSR set to: 1
 11396  00A408  8ABC               	bsf	188,5,c	;volatile
 11397                           
 11398                           ; BSR set to: 1
 11399  00A40A  0012               	return		;funcret
 11400  00A40C                     __end_of_LCDOn:
 11401                           	opt callstack 0
 11402                           
 11403 ;; *************** function _LCDOff *****************
 11404 ;; Defined at:
 11405 ;;		line 112 in file "lcd.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;		None
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      void 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2
 11414 ;; Tracked objects:
 11415 ;;		On entry : 3F/3
 11416 ;;		On exit  : 3F/1
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;Total ram usage:        0 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:   16
 11426 ;; This function calls:
 11427 ;;		Nothing
 11428 ;; This function is called by:
 11429 ;;		_main
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text61
 11434  00A40C                     __ptext61:
 11435                           	opt callstack 0
 11436  00A40C                     _LCDOff:
 11437                           	opt callstack 14
 11438                           
 11439                           ; BSR set to: 3
 11440                           ;lcd.c: 113:     LED = 0;
 11441                           
 11442                           ; BSR set to: 1
 11443                           ;incstack = 0
 11444  00A40C  0E00               	movlw	0
 11445  00A40E  0101               	movlb	1	; () banked
 11446  00A410  6FF0               	movwf	_LED& (0+255),b
 11447                           
 11448                           ; BSR set to: 1
 11449  00A412  9ABC               	bcf	188,5,c	;volatile
 11450                           
 11451                           ; BSR set to: 1
 11452  00A414  0012               	return		;funcret
 11453  00A416                     __end_of_LCDOff:
 11454                           	opt callstack 0
 11455                           
 11456 ;; *************** function _InitDisplay *****************
 11457 ;; Defined at:
 11458 ;;		line 40 in file "display.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;		None
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;		None
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  1    wreg      void 
 11465 ;; Registers used:
 11466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11467 ;; Tracked objects:
 11468 ;;		On entry : 3F/1
 11469 ;;		On exit  : 3F/0
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11476 ;;Total ram usage:        0 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; Hardware stack levels required when called:   21
 11479 ;; This function calls:
 11480 ;;		_LCDInit
 11481 ;; This function is called by:
 11482 ;;		_main
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text62
 11487  00A3A2                     __ptext62:
 11488                           	opt callstack 0
 11489  00A3A2                     _InitDisplay:
 11490                           	opt callstack 9
 11491                           
 11492                           ; BSR set to: 1
 11493                           ;display.c: 41:     LCDInit();
 11494                           
 11495                           ; BSR set to: 1
 11496                           ;incstack = 0
 11497  00A3A2  EC64  F034         	call	_LCDInit	;wreg free
 11498                           
 11499                           ; BSR set to: 1
 11500                           ;display.c: 42:     calibrate=0;
 11501  00A3A6  0E00               	movlw	0
 11502  00A3A8  0100               	movlb	0	; () banked
 11503  00A3AA  6FFF               	movwf	_calibrate& (0+255),b
 11504                           
 11505                           ; BSR set to: 0
 11506  00A3AC  0012               	return		;funcret
 11507  00A3AE                     __end_of_InitDisplay:
 11508                           	opt callstack 0
 11509                           
 11510 ;; *************** function _LCDInit *****************
 11511 ;; Defined at:
 11512 ;;		line 38 in file "lcd.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;		None
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;		None
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      void 
 11519 ;; Registers used:
 11520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11521 ;; Tracked objects:
 11522 ;;		On entry : 3F/1
 11523 ;;		On exit  : 3F/1
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;Total ram usage:        2 bytes
 11531 ;; Hardware stack levels used:    1
 11532 ;; Hardware stack levels required when called:   20
 11533 ;; This function calls:
 11534 ;;		_LCDMessage
 11535 ;;		_LCDTest
 11536 ;;		_LCDWrite4
 11537 ;;		_LCDWriteCmd
 11538 ;; This function is called by:
 11539 ;;		_InitDisplay
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text63
 11544  0068C8                     __ptext63:
 11545                           	opt callstack 0
 11546  0068C8                     _LCDInit:
 11547                           	opt callstack 9
 11548                           
 11549                           ; BSR set to: 1
 11550                           ;lcd.c: 40:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;incstack = 0
 11554  0068C8  0E05               	movlw	5
 11555  0068CA  0101               	movlb	1	; () banked
 11556  0068CC  6F3D               	movwf	(??_LCDInit+1)& (0+255),b
 11557  0068CE  0E0F               	movlw	15
 11558  0068D0  6F3C               	movwf	??_LCDInit& (0+255),b
 11559  0068D2  0EF1               	movlw	241
 11560  0068D4                     u22757:
 11561  0068D4  2EE8               	decfsz	wreg,f,c
 11562  0068D6  D7FE               	bra	u22757
 11563  0068D8  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11564  0068DA  D7FC               	bra	u22757
 11565  0068DC  2F3D               	decfsz	(??_LCDInit+1)& (0+255),f,b
 11566  0068DE  D7FA               	bra	u22757
 11567                           
 11568                           ;lcd.c: 42:     LCDWrite4(0x30);
 11569  0068E0  0E30               	movlw	48
 11570  0068E2  EC37  F048         	call	_LCDWrite4
 11571                           
 11572                           ;lcd.c: 43:     _delay((unsigned long)((5)*(64000000/4000.0)));
 11573  0068E6  0E68               	movlw	104
 11574  0068E8  0101               	movlb	1	; () banked
 11575  0068EA  6F3C               	movwf	??_LCDInit& (0+255),b
 11576  0068EC  0EE4               	movlw	228
 11577  0068EE                     u22767:
 11578  0068EE  2EE8               	decfsz	wreg,f,c
 11579  0068F0  D7FE               	bra	u22767
 11580  0068F2  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11581  0068F4  D7FC               	bra	u22767
 11582  0068F6  F000               	nop	
 11583                           
 11584                           ;lcd.c: 44:     LCDWrite4(0x30);
 11585  0068F8  0E30               	movlw	48
 11586  0068FA  EC37  F048         	call	_LCDWrite4
 11587                           
 11588                           ;lcd.c: 45:     _delay((unsigned long)((5)*(64000000/4000.0)));
 11589  0068FE  0E68               	movlw	104
 11590  006900  0101               	movlb	1	; () banked
 11591  006902  6F3C               	movwf	??_LCDInit& (0+255),b
 11592  006904  0EE4               	movlw	228
 11593  006906                     u22777:
 11594  006906  2EE8               	decfsz	wreg,f,c
 11595  006908  D7FE               	bra	u22777
 11596  00690A  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11597  00690C  D7FC               	bra	u22777
 11598  00690E  F000               	nop	
 11599                           
 11600                           ;lcd.c: 46:     LCDWrite4(0x30);
 11601  006910  0E30               	movlw	48
 11602  006912  EC37  F048         	call	_LCDWrite4
 11603                           
 11604                           ;lcd.c: 47:     _delay((unsigned long)((1)*(64000000/4000.0)));
 11605  006916  0E15               	movlw	21
 11606  006918  0101               	movlb	1	; () banked
 11607  00691A  6F3C               	movwf	??_LCDInit& (0+255),b
 11608  00691C  0EC6               	movlw	198
 11609  00691E                     u22787:
 11610  00691E  2EE8               	decfsz	wreg,f,c
 11611  006920  D7FE               	bra	u22787
 11612  006922  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11613  006924  D7FC               	bra	u22787
 11614  006926  F000               	nop	
 11615                           
 11616                           ;lcd.c: 48:     LCDWrite4(0x20);
 11617  006928  0E20               	movlw	32
 11618  00692A  EC37  F048         	call	_LCDWrite4
 11619                           
 11620                           ;lcd.c: 50:     LCDWriteCmd(0x28);
 11621  00692E  0E28               	movlw	40
 11622  006930  ECE9  F03D         	call	_LCDWriteCmd
 11623                           
 11624                           ;lcd.c: 51:     LCDWriteCmd(0x08);
 11625  006934  0E08               	movlw	8
 11626  006936  ECE9  F03D         	call	_LCDWriteCmd
 11627                           
 11628                           ;lcd.c: 52:     LCDWriteCmd(0x01);
 11629  00693A  0E01               	movlw	1
 11630  00693C  ECE9  F03D         	call	_LCDWriteCmd
 11631                           
 11632                           ;lcd.c: 53:     _delay((unsigned long)((2)*(64000000/4000.0)));
 11633  006940  0E2A               	movlw	42
 11634  006942  0101               	movlb	1	; () banked
 11635  006944  6F3C               	movwf	??_LCDInit& (0+255),b
 11636  006946  0E8D               	movlw	141
 11637  006948                     u22797:
 11638  006948  2EE8               	decfsz	wreg,f,c
 11639  00694A  D7FE               	bra	u22797
 11640  00694C  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11641  00694E  D7FC               	bra	u22797
 11642  006950  D000               	nop2	
 11643                           
 11644                           ;lcd.c: 54:     LCDWriteCmd(0x06);
 11645  006952  0E06               	movlw	6
 11646  006954  ECE9  F03D         	call	_LCDWriteCmd
 11647                           
 11648                           ;lcd.c: 56:     LCDWriteCmd(0x0C);
 11649  006958  0E0C               	movlw	12
 11650  00695A  ECE9  F03D         	call	_LCDWriteCmd
 11651                           
 11652                           ;lcd.c: 57:     LCDWriteCmd(0x02);
 11653  00695E  0E02               	movlw	2
 11654  006960  ECE9  F03D         	call	_LCDWriteCmd
 11655                           
 11656                           ;lcd.c: 59:     LCDMessage("Emerg Respirator");
 11657  006964  0EF0               	movlw	low STR_5
 11658  006966  0101               	movlb	1	; () banked
 11659  006968  6F08               	movwf	LCDMessage@str& (0+255),b
 11660  00696A  0EFE               	movlw	high STR_5
 11661  00696C  6F09               	movwf	(LCDMessage@str+1)& (0+255),b
 11662  00696E  ECC8  F03B         	call	_LCDMessage	;wreg free
 11663                           
 11664                           ; BSR set to: 1
 11665                           ;lcd.c: 60:     LCDWriteCmd(0xC0);
 11666  006972  0EC0               	movlw	192
 11667  006974  ECE9  F03D         	call	_LCDWriteCmd
 11668                           
 11669                           ;lcd.c: 61:     LCDMessage("    OxyVita     ");
 11670  006978  0EDF               	movlw	low STR_6
 11671  00697A  0101               	movlb	1	; () banked
 11672  00697C  6F08               	movwf	LCDMessage@str& (0+255),b
 11673  00697E  0EFE               	movlw	high STR_6
 11674  006980  6F09               	movwf	(LCDMessage@str+1)& (0+255),b
 11675  006982  ECC8  F03B         	call	_LCDMessage	;wreg free
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;lcd.c: 62:     LCDWriteCmd(0x02);
 11679  006986  0E02               	movlw	2
 11680  006988  ECE9  F03D         	call	_LCDWriteCmd
 11681                           
 11682                           ;lcd.c: 63:     _delay((unsigned long)((750)*(64000000/4000.0)));
 11683  00698C  0E3D               	movlw	61
 11684  00698E  0101               	movlb	1	; () banked
 11685  006990  6F3D               	movwf	(??_LCDInit+1)& (0+255),b
 11686  006992  0EE1               	movlw	225
 11687  006994  6F3C               	movwf	??_LCDInit& (0+255),b
 11688  006996  0E3F               	movlw	63
 11689  006998                     u22807:
 11690  006998  2EE8               	decfsz	wreg,f,c
 11691  00699A  D7FE               	bra	u22807
 11692  00699C  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11693  00699E  D7FC               	bra	u22807
 11694  0069A0  2F3D               	decfsz	(??_LCDInit+1)& (0+255),f,b
 11695  0069A2  D7FA               	bra	u22807
 11696  0069A4  D000               	nop2	
 11697                           
 11698                           ;lcd.c: 65:     LCDTest();
 11699  0069A6  ECCA  F03E         	call	_LCDTest	;wreg free
 11700                           
 11701                           ; BSR set to: 1
 11702  0069AA  0012               	return		;funcret
 11703  0069AC                     __end_of_LCDInit:
 11704                           	opt callstack 0
 11705                           
 11706 ;; *************** function _LCDWrite4 *****************
 11707 ;; Defined at:
 11708 ;;		line 196 in file "lcd.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  chr             1    wreg     unsigned char 
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;  chr             1    4[BANK1 ] unsigned char 
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/1
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;Total ram usage:        1 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:   16
 11729 ;; This function calls:
 11730 ;;		Nothing
 11731 ;; This function is called by:
 11732 ;;		_LCDInit
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text64
 11737  00906E                     __ptext64:
 11738                           	opt callstack 0
 11739  00906E                     _LCDWrite4:
 11740                           	opt callstack 12
 11741                           
 11742                           ; BSR set to: 1
 11743                           ;incstack = 0
 11744                           ;LCDWrite4@chr stored from wreg
 11745  00906E  0101               	movlb	1	; () banked
 11746  009070  6F04               	movwf	LCDWrite4@chr& (0+255),b
 11747                           
 11748                           ;lcd.c: 196: void LCDWrite4(uint8_t chr);lcd.c: 197: {;lcd.c: 208:     if (chr&0x80) do 
      +                          { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 11749  009072  0101               	movlb	1	; () banked
 11750  009074  AF04               	btfss	LCDWrite4@chr& (0+255),7,b
 11751  009076  D002               	goto	l1710
 11752                           
 11753                           ; BSR set to: 1
 11754  009078  8EBD               	bsf	189,7,c	;volatile
 11755  00907A  D001               	goto	l19345
 11756  00907C                     l1710:
 11757                           
 11758                           ; BSR set to: 1
 11759  00907C  9EBD               	bcf	189,7,c	;volatile
 11760  00907E                     l19345:
 11761                           
 11762                           ; BSR set to: 1
 11763                           ;lcd.c: 209:     if (chr&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 11764  00907E  AD04               	btfss	LCDWrite4@chr& (0+255),6,b
 11765  009080  D002               	goto	l1716
 11766                           
 11767                           ; BSR set to: 1
 11768  009082  8CBD               	bsf	189,6,c	;volatile
 11769  009084  D001               	goto	l19347
 11770  009086                     l1716:
 11771                           
 11772                           ; BSR set to: 1
 11773  009086  9CBD               	bcf	189,6,c	;volatile
 11774  009088                     l19347:
 11775                           
 11776                           ; BSR set to: 1
 11777                           ;lcd.c: 210:     if (chr&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 11778  009088  AB04               	btfss	LCDWrite4@chr& (0+255),5,b
 11779  00908A  D002               	goto	l1722
 11780                           
 11781                           ; BSR set to: 1
 11782  00908C  8ABD               	bsf	189,5,c	;volatile
 11783  00908E  D001               	goto	l19349
 11784  009090                     l1722:
 11785                           
 11786                           ; BSR set to: 1
 11787  009090  9ABD               	bcf	189,5,c	;volatile
 11788  009092                     l19349:
 11789                           
 11790                           ; BSR set to: 1
 11791                           ;lcd.c: 211:     if (chr&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 11792  009092  A904               	btfss	LCDWrite4@chr& (0+255),4,b
 11793  009094  D002               	goto	l1728
 11794                           
 11795                           ; BSR set to: 1
 11796  009096  88BD               	bsf	189,4,c	;volatile
 11797  009098  D001               	goto	l1730
 11798  00909A                     l1728:
 11799                           
 11800                           ; BSR set to: 1
 11801  00909A  98BD               	bcf	189,4,c	;volatile
 11802  00909C                     l1730:
 11803                           
 11804                           ; BSR set to: 1
 11805  00909C  9CBC               	bcf	188,6,c	;volatile
 11806                           
 11807                           ; BSR set to: 1
 11808                           ;lcd.c: 214:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 11809  00909E  0E1A               	movlw	26
 11810  0090A0                     u22817:
 11811  0090A0  2EE8               	decfsz	wreg,f,c
 11812  0090A2  D7FE               	bra	u22817
 11813  0090A4  D000               	nop2	
 11814  0090A6  8EBC               	bsf	188,7,c	;volatile
 11815                           
 11816                           ;lcd.c: 216:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 11817  0090A8  0E35               	movlw	53
 11818  0090AA                     u22827:
 11819  0090AA  2EE8               	decfsz	wreg,f,c
 11820  0090AC  D7FE               	bra	u22827
 11821  0090AE  F000               	nop	
 11822  0090B0  9EBC               	bcf	188,7,c	;volatile
 11823                           
 11824                           ;lcd.c: 218:  _delay((unsigned long)((38)*(64000000/4000000.0)));
 11825  0090B2  0ECA               	movlw	202
 11826  0090B4                     u22837:
 11827  0090B4  2EE8               	decfsz	wreg,f,c
 11828  0090B6  D7FE               	bra	u22837
 11829  0090B8  D000               	nop2	
 11830  0090BA  0012               	return		;funcret
 11831  0090BC                     __end_of_LCDWrite4:
 11832                           	opt callstack 0
 11833                           
 11834 ;; *************** function _LCDTest *****************
 11835 ;; Defined at:
 11836 ;;		line 77 in file "lcd.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;		None
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;  j               2   58[BANK1 ] int 
 11841 ;;  i               2   56[BANK1 ] int 
 11842 ;;  msg2           17   39[BANK1 ] unsigned char [17]
 11843 ;;  msg1           17   22[BANK1 ] unsigned char [17]
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/1
 11850 ;;		On exit  : 3F/1
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11855 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11856 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;Total ram usage:       40 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:   19
 11860 ;; This function calls:
 11861 ;;		_LCDMessage12
 11862 ;; This function is called by:
 11863 ;;		_LCDInit
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text65
 11868  007D94                     __ptext65:
 11869                           	opt callstack 0
 11870  007D94                     _LCDTest:
 11871                           	opt callstack 9
 11872                           
 11873                           ;lcd.c: 78:     char msg1[17];;lcd.c: 79:     char msg2[17];;lcd.c: 81:     for (int i=0
      +                          ; i<9; i++) {
 11874                           
 11875                           ;incstack = 0
 11876  007D94  0E00               	movlw	0
 11877  007D96  0101               	movlb	1	; () banked
 11878  007D98  6F39               	movwf	(LCDTest@i+1)& (0+255),b
 11879  007D9A  0E00               	movlw	0
 11880  007D9C  6F38               	movwf	LCDTest@i& (0+255),b
 11881  007D9E                     l19363:
 11882                           
 11883                           ; BSR set to: 1
 11884                           ;lcd.c: 82:         for (int j=0; j<17; j++) {
 11885  007D9E  0E00               	movlw	0
 11886  007DA0  6F3B               	movwf	(LCDTest@j+1)& (0+255),b
 11887  007DA2  0E00               	movlw	0
 11888  007DA4  6F3A               	movwf	LCDTest@j& (0+255),b
 11889  007DA6                     l19369:
 11890                           
 11891                           ; BSR set to: 1
 11892                           ;lcd.c: 83:             msg1[j] = '0' + i; msg2[j] = '0' + i + 1;
 11893  007DA6  0E16               	movlw	low LCDTest@msg1
 11894  007DA8  253A               	addwf	LCDTest@j& (0+255),w,b
 11895  007DAA  6ED9               	movwf	fsr2l,c
 11896  007DAC  0E01               	movlw	high LCDTest@msg1
 11897  007DAE  213B               	addwfc	(LCDTest@j+1)& (0+255),w,b
 11898  007DB0  6EDA               	movwf	fsr2h,c
 11899  007DB2  5138               	movf	LCDTest@i& (0+255),w,b
 11900  007DB4  0F30               	addlw	48
 11901  007DB6  6EDF               	movwf	indf2,c
 11902  007DB8  0E27               	movlw	low LCDTest@msg2
 11903  007DBA  253A               	addwf	LCDTest@j& (0+255),w,b
 11904  007DBC  6ED9               	movwf	fsr2l,c
 11905  007DBE  0E01               	movlw	high LCDTest@msg2
 11906  007DC0  213B               	addwfc	(LCDTest@j+1)& (0+255),w,b
 11907  007DC2  6EDA               	movwf	fsr2h,c
 11908  007DC4  5138               	movf	LCDTest@i& (0+255),w,b
 11909  007DC6  0F31               	addlw	49
 11910  007DC8  6EDF               	movwf	indf2,c
 11911                           
 11912                           ; BSR set to: 1
 11913                           ;lcd.c: 84:         }
 11914  007DCA  4B3A               	infsnz	LCDTest@j& (0+255),f,b
 11915  007DCC  2B3B               	incf	(LCDTest@j+1)& (0+255),f,b
 11916                           
 11917                           ; BSR set to: 1
 11918  007DCE  BF3B               	btfsc	(LCDTest@j+1)& (0+255),7,b
 11919  007DD0  D7EA               	goto	l19369
 11920  007DD2  513B               	movf	(LCDTest@j+1)& (0+255),w,b
 11921  007DD4  E104               	bnz	u19030
 11922  007DD6  0E11               	movlw	17
 11923  007DD8  5D3A               	subwf	LCDTest@j& (0+255),w,b
 11924  007DDA  A0D8               	btfss	status,0,c
 11925  007DDC  D7E4               	goto	l19369
 11926  007DDE                     u19030:
 11927                           
 11928                           ; BSR set to: 1
 11929                           ;lcd.c: 85:         LCDMessage12(msg1,msg2);
 11930  007DDE  0E16               	movlw	low LCDTest@msg1
 11931  007DE0  6F10               	movwf	LCDMessage12@str1& (0+255),b
 11932  007DE2  0E01               	movlw	high LCDTest@msg1
 11933  007DE4  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 11934  007DE6  0E27               	movlw	low LCDTest@msg2
 11935  007DE8  6F12               	movwf	LCDMessage12@str2& (0+255),b
 11936  007DEA  0E01               	movlw	high LCDTest@msg2
 11937  007DEC  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 11938  007DEE  EC97  F049         	call	_LCDMessage12	;wreg free
 11939                           
 11940                           ; BSR set to: 1
 11941                           ;lcd.c: 86:         _delay((unsigned long)((500)*(64000000/4000.0)));
 11942  007DF2  0E29               	movlw	41
 11943  007DF4  0101               	movlb	1	; () banked
 11944  007DF6  6F15               	movwf	(??_LCDTest+1)& (0+255),b
 11945  007DF8  0E96               	movlw	150
 11946  007DFA  6F14               	movwf	??_LCDTest& (0+255),b
 11947  007DFC  0E7F               	movlw	127
 11948  007DFE                     u22847:
 11949  007DFE  2EE8               	decfsz	wreg,f,c
 11950  007E00  D7FE               	bra	u22847
 11951  007E02  2F14               	decfsz	??_LCDTest& (0+255),f,b
 11952  007E04  D7FC               	bra	u22847
 11953  007E06  2F15               	decfsz	(??_LCDTest+1)& (0+255),f,b
 11954  007E08  D7FA               	bra	u22847
 11955                           
 11956                           ;lcd.c: 87:     }
 11957  007E0A  0101               	movlb	1	; () banked
 11958  007E0C  4B38               	infsnz	LCDTest@i& (0+255),f,b
 11959  007E0E  2B39               	incf	(LCDTest@i+1)& (0+255),f,b
 11960                           
 11961                           ; BSR set to: 1
 11962  007E10  BF39               	btfsc	(LCDTest@i+1)& (0+255),7,b
 11963  007E12  D7C5               	goto	l19363
 11964  007E14  5139               	movf	(LCDTest@i+1)& (0+255),w,b
 11965  007E16  E105               	bnz	u19040
 11966  007E18  0E09               	movlw	9
 11967  007E1A  5D38               	subwf	LCDTest@i& (0+255),w,b
 11968  007E1C  B0D8               	btfsc	status,0,c
 11969  007E1E  0012               	return	
 11970  007E20  D7BE               	goto	l19363
 11971  007E22                     u19040:
 11972                           
 11973                           ; BSR set to: 1
 11974  007E22  0012               	return		;funcret
 11975  007E24                     __end_of_LCDTest:
 11976                           	opt callstack 0
 11977                           
 11978 ;; *************** function _HistAlarm *****************
 11979 ;; Defined at:
 11980 ;;		line 465 in file "alarm.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;		None
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;  i               2    2[BANK2 ] int 
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      void 
 11987 ;; Registers used:
 11988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11989 ;; Tracked objects:
 11990 ;;		On entry : 3F/3
 11991 ;;		On exit  : 3C/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11995 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;Total ram usage:        4 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:   28
 12001 ;; This function calls:
 12002 ;;		_AlarmUpdateLCD
 12003 ;;		_TMR5_StartTimer
 12004 ;;		_TMR5_StopTimer
 12005 ;; This function is called by:
 12006 ;;		_main
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text66
 12011  0064C8                     __ptext66:
 12012                           	opt callstack 0
 12013  0064C8                     _HistAlarm:
 12014                           	opt callstack 2
 12015                           
 12016                           ; BSR set to: 3
 12017                           ;alarm.c: 466:     TMR5_StopTimer();
 12018                           
 12019                           ; BSR set to: 1
 12020                           ;incstack = 0
 12021  0064C8  EC22  F053         	call	_TMR5_StopTimer	;wreg free
 12022                           
 12023                           ; BSR set to: 3
 12024                           ;alarm.c: 467:     int i;;alarm.c: 469:     if (histSec == 0 ) {
 12025  0064CC  0101               	movlb	1	; () banked
 12026  0064CE  51E9               	movf	_histSec& (0+255),w,b
 12027  0064D0  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 12028  0064D2  A4D8               	btfss	status,2,c
 12029  0064D4  D02E               	goto	l22093
 12030                           
 12031                           ; BSR set to: 1
 12032                           ;alarm.c: 471:         for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 12033  0064D6  0E00               	movlw	0
 12034  0064D8  0102               	movlb	2	; () banked
 12035  0064DA  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12036  0064DC  0E00               	movlw	0
 12037  0064DE  6FF7               	movwf	HistAlarm@i& (0+255),b
 12038  0064E0                     l22075:
 12039                           
 12040                           ; BSR set to: 2
 12041                           ;alarm.c: 472:             if (alarms[i]) break;
 12042  0064E0  90D8               	bcf	status,0,c
 12043  0064E2  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12044  0064E4  6ED9               	movwf	fsr2l,c
 12045  0064E6  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12046  0064E8  6EDA               	movwf	fsr2h,c
 12047  0064EA  0E00               	movlw	low _alarms
 12048  0064EC  26D9               	addwf	fsr2l,f,c
 12049  0064EE  0E03               	movlw	high _alarms
 12050  0064F0  22DA               	addwfc	fsr2h,f,c
 12051  0064F2  50DE               	movf	postinc2,w,c
 12052  0064F4  10DE               	iorwf	postinc2,w,c
 12053  0064F6  A4D8               	btfss	status,2,c
 12054  0064F8  D008               	goto	u21700
 12055                           
 12056                           ; BSR set to: 2
 12057                           ;alarm.c: 473:         }
 12058  0064FA  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12059  0064FC  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12060                           
 12061                           ; BSR set to: 2
 12062  0064FE  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12063  006500  E104               	bnz	u21700
 12064  006502  0E13               	movlw	19
 12065  006504  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12066  006506  A0D8               	btfss	status,0,c
 12067  006508  D7EB               	goto	l22075
 12068  00650A                     u21700:
 12069                           
 12070                           ; BSR set to: 2
 12071                           ;alarm.c: 475:         if (i == sizeof(alarmData)/sizeof(a)) {
 12072  00650A  0E13               	movlw	19
 12073  00650C  19F7               	xorwf	HistAlarm@i& (0+255),w,b
 12074  00650E  11F8               	iorwf	(HistAlarm@i+1)& (0+255),w,b
 12075  006510  A4D8               	btfss	status,2,c
 12076  006512  D003               	goto	l22089
 12077  006514                     u21710:
 12078                           
 12079                           ;alarm.c: 476:             TMR5_StartTimer();
 12080  006514  EC28  F053         	call	_TMR5_StartTimer	;wreg free
 12081  006518  0012               	return	
 12082  00651A                     l22089:
 12083                           
 12084                           ; BSR set to: 2
 12085                           ;alarm.c: 479:         histSec = 5;
 12086  00651A  0E00               	movlw	0
 12087  00651C  0101               	movlb	1	; () banked
 12088  00651E  6FEA               	movwf	(_histSec+1)& (0+255),b
 12089  006520  0E05               	movlw	5
 12090  006522  6FE9               	movwf	_histSec& (0+255),b
 12091                           
 12092                           ; BSR set to: 1
 12093                           ;alarm.c: 480:         hist=i;
 12094  006524  0060  FBDC  F1E7   	movff	HistAlarm@i,_hist
 12095  00652A  0060  FBE0  F1E8   	movff	HistAlarm@i+1,_hist+1
 12096                           
 12097                           ;alarm.c: 481:     } else {
 12098  006530  D04C               	goto	l22133
 12099  006532                     l22093:
 12100                           
 12101                           ; BSR set to: 1
 12102                           ;alarm.c: 484:         for (i=hist+1; i<sizeof(alarmData)/sizeof(a); i++) {
 12103  006532  0E01               	movlw	1
 12104  006534  25E7               	addwf	_hist& (0+255),w,b
 12105  006536  0102               	movlb	2	; () banked
 12106  006538  6FF7               	movwf	HistAlarm@i& (0+255),b
 12107  00653A  0E00               	movlw	0
 12108  00653C  0101               	movlb	1	; () banked
 12109  00653E  21E8               	addwfc	(_hist+1)& (0+255),w,b
 12110  006540  0102               	movlb	2	; () banked
 12111  006542  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12112  006544  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12113  006546  E116               	bnz	l22105
 12114  006548  D011               	goto	L1
 12115  00654A                     l22097:
 12116                           
 12117                           ; BSR set to: 2
 12118                           ;alarm.c: 485:             if (alarms[i]) break;
 12119  00654A  90D8               	bcf	status,0,c
 12120  00654C  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12121  00654E  6ED9               	movwf	fsr2l,c
 12122  006550  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12123  006552  6EDA               	movwf	fsr2h,c
 12124  006554  0E00               	movlw	low _alarms
 12125  006556  26D9               	addwf	fsr2l,f,c
 12126  006558  0E03               	movlw	high _alarms
 12127  00655A  22DA               	addwfc	fsr2h,f,c
 12128  00655C  50DE               	movf	postinc2,w,c
 12129  00655E  10DE               	iorwf	postinc2,w,c
 12130  006560  A4D8               	btfss	status,2,c
 12131  006562  D008               	goto	u21740
 12132                           
 12133                           ; BSR set to: 2
 12134                           ;alarm.c: 486:         }
 12135  006564  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12136  006566  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12137                           
 12138                           ; BSR set to: 2
 12139  006568  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12140  00656A  E104               	bnz	u21740
 12141  00656C                     L1:
 12142  00656C  0E13               	movlw	19
 12143  00656E  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12144  006570  A0D8               	btfss	status,0,c
 12145  006572  D7EB               	goto	l22097
 12146  006574                     u21740:
 12147  006574                     l22105:
 12148                           
 12149                           ; BSR set to: 2
 12150                           ;alarm.c: 488:         if (i>=sizeof(alarmData)/sizeof(a)) {
 12151  006574  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12152  006576  E104               	bnz	u21750
 12153  006578  0E13               	movlw	19
 12154  00657A  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12155  00657C  A0D8               	btfss	status,0,c
 12156  00657E  D7CD               	goto	l22089
 12157  006580                     u21750:
 12158                           
 12159                           ; BSR set to: 2
 12160                           ;alarm.c: 490:             for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 12161  006580  0E00               	movlw	0
 12162  006582  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12163  006584  0E00               	movlw	0
 12164  006586  6FF7               	movwf	HistAlarm@i& (0+255),b
 12165  006588                     l22113:
 12166                           
 12167                           ; BSR set to: 2
 12168                           ;alarm.c: 491:                 if (alarms[i]) break;
 12169  006588  90D8               	bcf	status,0,c
 12170  00658A  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12171  00658C  6ED9               	movwf	fsr2l,c
 12172  00658E  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12173  006590  6EDA               	movwf	fsr2h,c
 12174  006592  0E00               	movlw	low _alarms
 12175  006594  26D9               	addwf	fsr2l,f,c
 12176  006596  0E03               	movlw	high _alarms
 12177  006598  22DA               	addwfc	fsr2h,f,c
 12178  00659A  50DE               	movf	postinc2,w,c
 12179  00659C  10DE               	iorwf	postinc2,w,c
 12180  00659E  A4D8               	btfss	status,2,c
 12181  0065A0  D008               	goto	u21770
 12182                           
 12183                           ; BSR set to: 2
 12184                           ;alarm.c: 492:             }
 12185  0065A2  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12186  0065A4  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12187                           
 12188                           ; BSR set to: 2
 12189  0065A6  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12190  0065A8  E104               	bnz	u21770
 12191  0065AA  0E13               	movlw	19
 12192  0065AC  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12193  0065AE  A0D8               	btfss	status,0,c
 12194  0065B0  D7EB               	goto	l22113
 12195  0065B2                     u21770:
 12196                           
 12197                           ; BSR set to: 2
 12198                           ;alarm.c: 494:             if (i >= sizeof(alarmData)/sizeof(a)) {
 12199  0065B2  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12200  0065B4  E104               	bnz	u21780
 12201  0065B6  0E13               	movlw	19
 12202  0065B8  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12203  0065BA  A0D8               	btfss	status,0,c
 12204  0065BC  D7AE               	goto	l22089
 12205  0065BE                     u21780:
 12206                           
 12207                           ; BSR set to: 2
 12208                           ;alarm.c: 495:                 histSec = 0;
 12209  0065BE  0E00               	movlw	0
 12210  0065C0  0101               	movlb	1	; () banked
 12211  0065C2  6FEA               	movwf	(_histSec+1)& (0+255),b
 12212  0065C4  0E00               	movlw	0
 12213  0065C6  6FE9               	movwf	_histSec& (0+255),b
 12214  0065C8  D7A5               	goto	u21710
 12215  0065CA                     l22133:
 12216                           
 12217                           ; BSR set to: 1
 12218                           ;alarm.c: 505:     AlarmUpdateLCD();
 12219  0065CA  EC30  F02E         	call	_AlarmUpdateLCD	;wreg free
 12220  0065CE  D7A2               	goto	u21710
 12221  0065D0                     __end_of_HistAlarm:
 12222                           	opt callstack 0
 12223                           
 12224 ;; *************** function _TMR5_StopTimer *****************
 12225 ;; Defined at:
 12226 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;		None
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;		None
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      void 
 12233 ;; Registers used:
 12234 ;;		None
 12235 ;; Tracked objects:
 12236 ;;		On entry : 3F/3
 12237 ;;		On exit  : 3F/3
 12238 ;;		Unchanged: 3E/0
 12239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;Total ram usage:        0 bytes
 12245 ;; Hardware stack levels used:    1
 12246 ;; Hardware stack levels required when called:   16
 12247 ;; This function calls:
 12248 ;;		Nothing
 12249 ;; This function is called by:
 12250 ;;		_HistAlarm
 12251 ;; This function uses a non-reentrant model
 12252 ;;
 12253                           
 12254                           	psect	text67
 12255  00A644                     __ptext67:
 12256                           	opt callstack 0
 12257  00A644                     _TMR5_StopTimer:
 12258                           	opt callstack 13
 12259                           
 12260                           ; BSR set to: 3
 12261                           ;mcc_generated_files/tmr5.c: 108:     T5CONbits.TMR5ON = 0;
 12262                           
 12263                           ;incstack = 0
 12264  00A644  909A               	bcf	154,0,c	;volatile
 12265                           
 12266                           ; BSR set to: 3
 12267  00A646  0012               	return		;funcret
 12268  00A648                     __end_of_TMR5_StopTimer:
 12269                           	opt callstack 0
 12270                           
 12271 ;; *************** function _EnableAlarmSV1 *****************
 12272 ;; Defined at:
 12273 ;;		line 877 in file "monitor.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      void 
 12280 ;; Registers used:
 12281 ;;		wreg, status,2
 12282 ;; Tracked objects:
 12283 ;;		On entry : 3F/3
 12284 ;;		On exit  : 3F/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12291 ;;Total ram usage:        0 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:   16
 12294 ;; This function calls:
 12295 ;;		Nothing
 12296 ;; This function is called by:
 12297 ;;		_main
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text68
 12302  00A4B0                     __ptext68:
 12303                           	opt callstack 0
 12304  00A4B0                     _EnableAlarmSV1:
 12305                           	opt callstack 14
 12306                           
 12307                           ; BSR set to: 3
 12308                           ;monitor.c: 878:     disableAlarmSV1=0;
 12309                           
 12310                           ; BSR set to: 3
 12311                           ;incstack = 0
 12312  00A4B0  0E00               	movlw	0
 12313  00A4B2  0100               	movlb	0	; () banked
 12314  00A4B4  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 12315                           
 12316                           ; BSR set to: 0
 12317  00A4B6  0012               	return		;funcret
 12318  00A4B8                     __end_of_EnableAlarmSV1:
 12319                           	opt callstack 0
 12320                           
 12321 ;; *************** function _DumpI2C *****************
 12322 ;; Defined at:
 12323 ;;		line 232 in file "controller.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      void 
 12330 ;; Registers used:
 12331 ;;		None
 12332 ;; Tracked objects:
 12333 ;;		On entry : 3F/3
 12334 ;;		On exit  : 3F/3
 12335 ;;		Unchanged: 3E/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; Hardware stack levels required when called:   16
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_main
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           	psect	text69
 12352  00A6A8                     __ptext69:
 12353                           	opt callstack 0
 12354  00A6A8                     _DumpI2C:
 12355                           	opt callstack 14
 12356                           
 12357                           ; BSR set to: 3
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;incstack = 0
 12361  00A6A8  0012               	return		;funcret
 12362  00A6AA                     __end_of_DumpI2C:
 12363                           	opt callstack 0
 12364                           
 12365 ;; *************** function _DisplayTask *****************
 12366 ;; Defined at:
 12367 ;;		line 122 in file "display.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;		None
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      void 
 12374 ;; Registers used:
 12375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/2
 12378 ;;		On exit  : 3D/1
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;Total ram usage:        0 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:   19
 12388 ;; This function calls:
 12389 ;;		_LCDMessage1
 12390 ;;		_LCDMessage12
 12391 ;;		_LCDMessage2
 12392 ;; This function is called by:
 12393 ;;		_main
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           	psect	text70
 12398  0074F8                     __ptext70:
 12399                           	opt callstack 0
 12400  0074F8                     _DisplayTask:
 12401                           	opt callstack 11
 12402                           
 12403                           ;display.c: 124:     if (msg1[0] && msg2[0]) {
 12404                           
 12405                           ; BSR set to: 3
 12406                           ;incstack = 0
 12407  0074F8  0103               	movlb	3	; () banked
 12408  0074FA  51E5               	movf	_msg1& (0+255),w,b
 12409  0074FC  B4D8               	btfsc	status,2,c
 12410  0074FE  D015               	goto	l21939
 12411                           
 12412                           ; BSR set to: 3
 12413  007500  51D1               	movf	_msg2& (0+255),w,b
 12414  007502  B4D8               	btfsc	status,2,c
 12415  007504  D012               	goto	l21939
 12416                           
 12417                           ; BSR set to: 3
 12418                           ;display.c: 126:         LCDMessage12(msg1,msg2);
 12419  007506  0EE5               	movlw	low _msg1
 12420  007508  0101               	movlb	1	; () banked
 12421  00750A  6F10               	movwf	LCDMessage12@str1& (0+255),b
 12422  00750C  0E03               	movlw	high _msg1
 12423  00750E  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 12424  007510  0ED1               	movlw	low _msg2
 12425  007512  6F12               	movwf	LCDMessage12@str2& (0+255),b
 12426  007514  0E03               	movlw	high _msg2
 12427  007516  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 12428  007518  EC97  F049         	call	_LCDMessage12	;wreg free
 12429                           
 12430                           ; BSR set to: 1
 12431                           ;display.c: 127:         msg2[0]=0;
 12432  00751C  0E00               	movlw	0
 12433  00751E  0103               	movlb	3	; () banked
 12434  007520  6FD1               	movwf	_msg2& (0+255),b
 12435  007522                     l21935:
 12436                           
 12437                           ;display.c: 128:         msg1[0]=0;
 12438  007522  0E00               	movlw	0
 12439  007524  0103               	movlb	3	; () banked
 12440  007526  6FE5               	movwf	_msg1& (0+255),b
 12441  007528  0012               	return	
 12442  00752A                     l21939:
 12443                           
 12444                           ; BSR set to: 3
 12445                           ;display.c: 132:     if (msg4[0]) {
 12446  00752A  51A9               	movf	_msg4& (0+255),w,b
 12447  00752C  B4D8               	btfsc	status,2,c
 12448  00752E  D008               	goto	l21945
 12449                           
 12450                           ; BSR set to: 3
 12451                           ;display.c: 134:         LCDMessage2(msg4);
 12452  007530  0EA9               	movlw	low _msg4
 12453  007532  0101               	movlb	1	; () banked
 12454  007534  6F10               	movwf	LCDMessage2@str& (0+255),b
 12455  007536  0E03               	movlw	high _msg4
 12456  007538  6F11               	movwf	(LCDMessage2@str+1)& (0+255),b
 12457  00753A  EC50  F04D         	call	_LCDMessage2	;wreg free
 12458  00753E  0012               	return	
 12459  007540                     l21945:
 12460                           
 12461                           ; BSR set to: 3
 12462                           ;display.c: 138:     if (msg2[0]) {
 12463  007540  51D1               	movf	_msg2& (0+255),w,b
 12464  007542  B4D8               	btfsc	status,2,c
 12465  007544  D00B               	goto	l21953
 12466                           
 12467                           ; BSR set to: 3
 12468                           ;display.c: 140:         LCDMessage2(msg2);
 12469  007546  0ED1               	movlw	low _msg2
 12470  007548  0101               	movlb	1	; () banked
 12471  00754A  6F10               	movwf	LCDMessage2@str& (0+255),b
 12472  00754C  0E03               	movlw	high _msg2
 12473  00754E  6F11               	movwf	(LCDMessage2@str+1)& (0+255),b
 12474  007550  EC50  F04D         	call	_LCDMessage2	;wreg free
 12475                           
 12476                           ; BSR set to: 1
 12477                           ;display.c: 141:         msg2[0]=0;
 12478  007554  0E00               	movlw	0
 12479  007556  0103               	movlb	3	; () banked
 12480  007558  6FD1               	movwf	_msg2& (0+255),b
 12481  00755A  0012               	return	
 12482  00755C                     l21953:
 12483                           
 12484                           ; BSR set to: 3
 12485                           ;display.c: 145:     if (msg1[0] && msg3[0]) {
 12486  00755C  51E5               	movf	_msg1& (0+255),w,b
 12487  00755E  B4D8               	btfsc	status,2,c
 12488  007560  D014               	goto	l21965
 12489                           
 12490                           ; BSR set to: 3
 12491  007562  51BD               	movf	_msg3& (0+255),w,b
 12492  007564  B4D8               	btfsc	status,2,c
 12493  007566  D011               	goto	l21965
 12494                           
 12495                           ; BSR set to: 3
 12496                           ;display.c: 147:         LCDMessage12(msg1,msg3);
 12497  007568  0EE5               	movlw	low _msg1
 12498  00756A  0101               	movlb	1	; () banked
 12499  00756C  6F10               	movwf	LCDMessage12@str1& (0+255),b
 12500  00756E  0E03               	movlw	high _msg1
 12501  007570  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 12502  007572  0EBD               	movlw	low _msg3
 12503  007574  6F12               	movwf	LCDMessage12@str2& (0+255),b
 12504  007576  0E03               	movlw	high _msg3
 12505  007578  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 12506  00757A  EC97  F049         	call	_LCDMessage12	;wreg free
 12507                           
 12508                           ; BSR set to: 1
 12509                           ;display.c: 148:         msg1[0]=0;
 12510  00757E  0E00               	movlw	0
 12511  007580  0103               	movlb	3	; () banked
 12512  007582  6FE5               	movwf	_msg1& (0+255),b
 12513                           
 12514                           ; BSR set to: 3
 12515                           ;display.c: 149:         msg3[0]=0;
 12516  007584  0E00               	movlw	0
 12517  007586  6FBD               	movwf	_msg3& (0+255),b
 12518  007588  0012               	return	
 12519  00758A                     l21965:
 12520                           
 12521                           ; BSR set to: 3
 12522                           ;display.c: 154:     if (msg1[0]) {
 12523  00758A  51E5               	movf	_msg1& (0+255),w,b
 12524  00758C  B4D8               	btfsc	status,2,c
 12525  00758E  0012               	return	
 12526                           
 12527                           ; BSR set to: 3
 12528                           ;display.c: 157:         LCDMessage1(msg1);
 12529  007590  0EE5               	movlw	low _msg1
 12530  007592  0101               	movlb	1	; () banked
 12531  007594  6F10               	movwf	LCDMessage1@str& (0+255),b
 12532  007596  0E03               	movlw	high _msg1
 12533  007598  6F11               	movwf	(LCDMessage1@str+1)& (0+255),b
 12534  00759A  ECBB  F04E         	call	_LCDMessage1	;wreg free
 12535  00759E  D7C1               	goto	l21935
 12536  0075A0                     __end_of_DisplayTask:
 12537                           	opt callstack 0
 12538                           
 12539 ;; *************** function _LCDMessage2 *****************
 12540 ;; Defined at:
 12541 ;;		line 148 in file "lcd.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;  str             2   16[BANK1 ] PTR unsigned char 
 12544 ;;		 -> msg2(20), msg4(20), 
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;		None
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      void 
 12549 ;; Registers used:
 12550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12551 ;; Tracked objects:
 12552 ;;		On entry : 3F/1
 12553 ;;		On exit  : 3F/1
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12556 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12559 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12560 ;;Total ram usage:        2 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:   18
 12563 ;; This function calls:
 12564 ;;		_LCDMessage
 12565 ;;		_LCDWriteCmd
 12566 ;; This function is called by:
 12567 ;;		_DisplayTask
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text71
 12572  009AA0                     __ptext71:
 12573                           	opt callstack 0
 12574  009AA0                     _LCDMessage2:
 12575                           	opt callstack 11
 12576                           
 12577                           ; BSR set to: 1
 12578                           ;lcd.c: 149:     LCDWriteCmd(0x02);
 12579                           
 12580                           ;incstack = 0
 12581  009AA0  0E02               	movlw	2
 12582  009AA2  ECE9  F03D         	call	_LCDWriteCmd
 12583                           
 12584                           ;lcd.c: 150:     LCDWriteCmd(0xC0);
 12585  009AA6  0EC0               	movlw	192
 12586  009AA8  ECE9  F03D         	call	_LCDWriteCmd
 12587                           
 12588                           ;lcd.c: 151:     if (LED) LCDMessage(str);
 12589  009AAC  0101               	movlb	1	; () banked
 12590  009AAE  51F0               	movf	_LED& (0+255),w,b
 12591  009AB0  B4D8               	btfsc	status,2,c
 12592  009AB2  0012               	return	
 12593                           
 12594                           ; BSR set to: 1
 12595  009AB4  0060  F440  F108   	movff	LCDMessage2@str,LCDMessage@str
 12596  009ABA  0060  F444  F109   	movff	LCDMessage2@str+1,LCDMessage@str+1
 12597  009AC0  ECC8  F03B         	call	_LCDMessage	;wreg free
 12598                           
 12599                           ; BSR set to: 1
 12600  009AC4  0012               	return		;funcret
 12601  009AC6                     __end_of_LCDMessage2:
 12602                           	opt callstack 0
 12603                           
 12604 ;; *************** function _LCDMessage12 *****************
 12605 ;; Defined at:
 12606 ;;		line 141 in file "lcd.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;  str1            2   16[BANK1 ] PTR unsigned char 
 12609 ;;		 -> msg1(20), LCDTest@msg1(17), 
 12610 ;;  str2            2   18[BANK1 ] PTR unsigned char 
 12611 ;;		 -> msg3(20), msg2(20), LCDTest@msg2(17), 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      void 
 12616 ;; Registers used:
 12617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 3F/1
 12620 ;;		On exit  : 3F/1
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12623 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;Total ram usage:        4 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:   18
 12630 ;; This function calls:
 12631 ;;		_LCDMessage
 12632 ;;		_LCDWriteCmd
 12633 ;; This function is called by:
 12634 ;;		_LCDTest
 12635 ;;		_DisplayTask
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text72
 12640  00932E                     __ptext72:
 12641                           	opt callstack 0
 12642  00932E                     _LCDMessage12:
 12643                           	opt callstack 9
 12644                           
 12645                           ; BSR set to: 1
 12646                           ;lcd.c: 142:     LCDWriteCmd(0x02);
 12647                           
 12648                           ; BSR set to: 1
 12649                           ;incstack = 0
 12650  00932E  0E02               	movlw	2
 12651  009330  ECE9  F03D         	call	_LCDWriteCmd
 12652                           
 12653                           ;lcd.c: 143:     if (LED) LCDMessage(str1);
 12654  009334  0101               	movlb	1	; () banked
 12655  009336  51F0               	movf	_LED& (0+255),w,b
 12656  009338  B4D8               	btfsc	status,2,c
 12657  00933A  D008               	goto	l18945
 12658                           
 12659                           ; BSR set to: 1
 12660  00933C  0060  F440  F108   	movff	LCDMessage12@str1,LCDMessage@str
 12661  009342  0060  F444  F109   	movff	LCDMessage12@str1+1,LCDMessage@str+1
 12662  009348  ECC8  F03B         	call	_LCDMessage	;wreg free
 12663  00934C                     l18945:
 12664                           
 12665                           ; BSR set to: 1
 12666                           ;lcd.c: 144:     LCDWriteCmd(0xC0);
 12667  00934C  0EC0               	movlw	192
 12668  00934E  ECE9  F03D         	call	_LCDWriteCmd
 12669                           
 12670                           ;lcd.c: 145:     if (LED) LCDMessage(str2);
 12671  009352  0101               	movlb	1	; () banked
 12672  009354  51F0               	movf	_LED& (0+255),w,b
 12673  009356  B4D8               	btfsc	status,2,c
 12674  009358  0012               	return	
 12675                           
 12676                           ; BSR set to: 1
 12677  00935A  0060  F448  F108   	movff	LCDMessage12@str2,LCDMessage@str
 12678  009360  0060  F44C  F109   	movff	LCDMessage12@str2+1,LCDMessage@str+1
 12679  009366  ECC8  F03B         	call	_LCDMessage	;wreg free
 12680                           
 12681                           ; BSR set to: 1
 12682  00936A  0012               	return		;funcret
 12683  00936C                     __end_of_LCDMessage12:
 12684                           	opt callstack 0
 12685                           
 12686 ;; *************** function _LCDMessage1 *****************
 12687 ;; Defined at:
 12688 ;;		line 136 in file "lcd.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;  str             2   16[BANK1 ] PTR unsigned char 
 12691 ;;		 -> msg1(20), 
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;		None
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  1    wreg      void 
 12696 ;; Registers used:
 12697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12698 ;; Tracked objects:
 12699 ;;		On entry : 3F/1
 12700 ;;		On exit  : 3F/1
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12703 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12706 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12707 ;;Total ram usage:        2 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:   18
 12710 ;; This function calls:
 12711 ;;		_LCDMessage
 12712 ;;		_LCDWriteCmd
 12713 ;; This function is called by:
 12714 ;;		_DisplayTask
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718                           	psect	text73
 12719  009D76                     __ptext73:
 12720                           	opt callstack 0
 12721  009D76                     _LCDMessage1:
 12722                           	opt callstack 11
 12723                           
 12724                           ; BSR set to: 1
 12725                           ;lcd.c: 137:     LCDWriteCmd(0x02);
 12726                           
 12727                           ; BSR set to: 1
 12728                           ;incstack = 0
 12729  009D76  0E02               	movlw	2
 12730  009D78  ECE9  F03D         	call	_LCDWriteCmd
 12731                           
 12732                           ;lcd.c: 138:     if (LED) LCDMessage(str);
 12733  009D7C  0101               	movlb	1	; () banked
 12734  009D7E  51F0               	movf	_LED& (0+255),w,b
 12735  009D80  B4D8               	btfsc	status,2,c
 12736  009D82  0012               	return	
 12737                           
 12738                           ; BSR set to: 1
 12739  009D84  0060  F440  F108   	movff	LCDMessage1@str,LCDMessage@str
 12740  009D8A  0060  F444  F109   	movff	LCDMessage1@str+1,LCDMessage@str+1
 12741  009D90  ECC8  F03B         	call	_LCDMessage	;wreg free
 12742                           
 12743                           ; BSR set to: 1
 12744  009D94  0012               	return		;funcret
 12745  009D96                     __end_of_LCDMessage1:
 12746                           	opt callstack 0
 12747                           
 12748 ;; *************** function _LCDWriteCmd *****************
 12749 ;; Defined at:
 12750 ;;		line 222 in file "lcd.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;  data            1    wreg     unsigned char 
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;  data            1    4[BANK1 ] unsigned char 
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      void 
 12757 ;; Registers used:
 12758 ;;		wreg, status,2, cstack
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/1
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12765 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;Total ram usage:        1 bytes
 12769 ;; Hardware stack levels used:    1
 12770 ;; Hardware stack levels required when called:   16
 12771 ;; This function calls:
 12772 ;;		Nothing
 12773 ;; This function is called by:
 12774 ;;		_LCDInit
 12775 ;;		_LCDMessage1
 12776 ;;		_LCDMessage12
 12777 ;;		_LCDMessage2
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781                           	psect	text74
 12782  007BD2                     __ptext74:
 12783                           	opt callstack 0
 12784  007BD2                     _LCDWriteCmd:
 12785                           	opt callstack 12
 12786                           
 12787                           ; BSR set to: 1
 12788                           ;incstack = 0
 12789                           ;LCDWriteCmd@data stored from wreg
 12790  007BD2  0101               	movlb	1	; () banked
 12791  007BD4  6F04               	movwf	LCDWriteCmd@data& (0+255),b
 12792                           
 12793                           ;lcd.c: 222: void LCDWriteCmd(uint8_t data);lcd.c: 223: {;lcd.c: 239:  if (data&0x80) do
      +                           { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 12794  007BD6  0101               	movlb	1	; () banked
 12795  007BD8  AF04               	btfss	LCDWriteCmd@data& (0+255),7,b
 12796  007BDA  D002               	goto	l1743
 12797                           
 12798                           ; BSR set to: 1
 12799  007BDC  8EBD               	bsf	189,7,c	;volatile
 12800  007BDE  D001               	goto	l18607
 12801  007BE0                     l1743:
 12802                           
 12803                           ; BSR set to: 1
 12804  007BE0  9EBD               	bcf	189,7,c	;volatile
 12805  007BE2                     l18607:
 12806                           
 12807                           ; BSR set to: 1
 12808                           ;lcd.c: 240:     if (data&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.
      +                          LATD6 = 0; } while(0);
 12809  007BE2  AD04               	btfss	LCDWriteCmd@data& (0+255),6,b
 12810  007BE4  D002               	goto	l1749
 12811                           
 12812                           ; BSR set to: 1
 12813  007BE6  8CBD               	bsf	189,6,c	;volatile
 12814  007BE8  D001               	goto	l18609
 12815  007BEA                     l1749:
 12816                           
 12817                           ; BSR set to: 1
 12818  007BEA  9CBD               	bcf	189,6,c	;volatile
 12819  007BEC                     l18609:
 12820                           
 12821                           ; BSR set to: 1
 12822                           ;lcd.c: 241:     if (data&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.
      +                          LATD5 = 0; } while(0);
 12823  007BEC  AB04               	btfss	LCDWriteCmd@data& (0+255),5,b
 12824  007BEE  D002               	goto	l1755
 12825                           
 12826                           ; BSR set to: 1
 12827  007BF0  8ABD               	bsf	189,5,c	;volatile
 12828  007BF2  D001               	goto	l18611
 12829  007BF4                     l1755:
 12830                           
 12831                           ; BSR set to: 1
 12832  007BF4  9ABD               	bcf	189,5,c	;volatile
 12833  007BF6                     l18611:
 12834                           
 12835                           ; BSR set to: 1
 12836                           ;lcd.c: 242:     if (data&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.
      +                          LATD4 = 0; } while(0);
 12837  007BF6  A904               	btfss	LCDWriteCmd@data& (0+255),4,b
 12838  007BF8  D002               	goto	l1761
 12839                           
 12840                           ; BSR set to: 1
 12841  007BFA  88BD               	bsf	189,4,c	;volatile
 12842  007BFC  D001               	goto	l1763
 12843  007BFE                     l1761:
 12844                           
 12845                           ; BSR set to: 1
 12846  007BFE  98BD               	bcf	189,4,c	;volatile
 12847  007C00                     l1763:
 12848                           
 12849                           ; BSR set to: 1
 12850  007C00  9CBC               	bcf	188,6,c	;volatile
 12851                           
 12852                           ; BSR set to: 1
 12853                           ;lcd.c: 245:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 12854  007C02  0E1A               	movlw	26
 12855  007C04                     u22857:
 12856  007C04  2EE8               	decfsz	wreg,f,c
 12857  007C06  D7FE               	bra	u22857
 12858  007C08  D000               	nop2	
 12859  007C0A  8EBC               	bsf	188,7,c	;volatile
 12860                           
 12861                           ;lcd.c: 247:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 12862  007C0C  0E35               	movlw	53
 12863  007C0E                     u22867:
 12864  007C0E  2EE8               	decfsz	wreg,f,c
 12865  007C10  D7FE               	bra	u22867
 12866  007C12  F000               	nop	
 12867  007C14  9EBC               	bcf	188,7,c	;volatile
 12868                           
 12869                           ;lcd.c: 249:  _delay((unsigned long)((5)*(64000000/4000000.0)));
 12870  007C16  0E1A               	movlw	26
 12871  007C18                     u22877:
 12872  007C18  2EE8               	decfsz	wreg,f,c
 12873  007C1A  D7FE               	bra	u22877
 12874  007C1C  D000               	nop2	
 12875                           
 12876                           ;lcd.c: 250:     if (data&0x8) do { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.L
      +                          ATD7 = 0; } while(0);
 12877  007C1E  0101               	movlb	1	; () banked
 12878  007C20  A704               	btfss	LCDWriteCmd@data& (0+255),3,b
 12879  007C22  D002               	goto	l1773
 12880                           
 12881                           ; BSR set to: 1
 12882  007C24  8EBD               	bsf	189,7,c	;volatile
 12883  007C26  D001               	goto	l18621
 12884  007C28                     l1773:
 12885                           
 12886                           ; BSR set to: 1
 12887  007C28  9EBD               	bcf	189,7,c	;volatile
 12888  007C2A                     l18621:
 12889                           
 12890                           ; BSR set to: 1
 12891                           ;lcd.c: 251:     if (data&0x4) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 12892  007C2A  A504               	btfss	LCDWriteCmd@data& (0+255),2,b
 12893  007C2C  D002               	goto	l1779
 12894                           
 12895                           ; BSR set to: 1
 12896  007C2E  8CBD               	bsf	189,6,c	;volatile
 12897  007C30  D001               	goto	l18623
 12898  007C32                     l1779:
 12899                           
 12900                           ; BSR set to: 1
 12901  007C32  9CBD               	bcf	189,6,c	;volatile
 12902  007C34                     l18623:
 12903                           
 12904                           ; BSR set to: 1
 12905                           ;lcd.c: 252:     if (data&0x2) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 12906  007C34  A304               	btfss	LCDWriteCmd@data& (0+255),1,b
 12907  007C36  D002               	goto	l1785
 12908                           
 12909                           ; BSR set to: 1
 12910  007C38  8ABD               	bsf	189,5,c	;volatile
 12911  007C3A  D001               	goto	l18625
 12912  007C3C                     l1785:
 12913                           
 12914                           ; BSR set to: 1
 12915  007C3C  9ABD               	bcf	189,5,c	;volatile
 12916  007C3E                     l18625:
 12917                           
 12918                           ; BSR set to: 1
 12919                           ;lcd.c: 253:     if (data&0x1) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 12920  007C3E  A104               	btfss	LCDWriteCmd@data& (0+255),0,b
 12921  007C40  D002               	goto	l1791
 12922                           
 12923                           ; BSR set to: 1
 12924  007C42  88BD               	bsf	189,4,c	;volatile
 12925  007C44  D001               	goto	l1793
 12926  007C46                     l1791:
 12927                           
 12928                           ; BSR set to: 1
 12929  007C46  98BD               	bcf	189,4,c	;volatile
 12930  007C48                     l1793:
 12931                           
 12932                           ; BSR set to: 1
 12933  007C48  9CBC               	bcf	188,6,c	;volatile
 12934                           
 12935                           ; BSR set to: 1
 12936                           ;lcd.c: 256:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 12937  007C4A  0E1A               	movlw	26
 12938  007C4C                     u22887:
 12939  007C4C  2EE8               	decfsz	wreg,f,c
 12940  007C4E  D7FE               	bra	u22887
 12941  007C50  D000               	nop2	
 12942  007C52  8EBC               	bsf	188,7,c	;volatile
 12943                           
 12944                           ;lcd.c: 258:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 12945  007C54  0E35               	movlw	53
 12946  007C56                     u22897:
 12947  007C56  2EE8               	decfsz	wreg,f,c
 12948  007C58  D7FE               	bra	u22897
 12949  007C5A  F000               	nop	
 12950  007C5C  9EBC               	bcf	188,7,c	;volatile
 12951                           
 12952                           ;lcd.c: 260:     _delay((unsigned long)((38)*(64000000/4000000.0)));
 12953  007C5E  0ECA               	movlw	202
 12954  007C60                     u22907:
 12955  007C60  2EE8               	decfsz	wreg,f,c
 12956  007C62  D7FE               	bra	u22907
 12957  007C64  D000               	nop2	
 12958  007C66  0012               	return		;funcret
 12959  007C68                     __end_of_LCDWriteCmd:
 12960                           	opt callstack 0
 12961                           
 12962 ;; *************** function _LCDMessage *****************
 12963 ;; Defined at:
 12964 ;;		line 125 in file "lcd.c"
 12965 ;; Parameters:    Size  Location     Type
 12966 ;;  str             2    8[BANK1 ] PTR unsigned char 
 12967 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 12968 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;  i               2   14[BANK1 ] int 
 12971 ;;  length          2   12[BANK1 ] int 
 12972 ;; Return value:  Size  Location     Type
 12973 ;;                  1    wreg      void 
 12974 ;; Registers used:
 12975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12976 ;; Tracked objects:
 12977 ;;		On entry : 3F/1
 12978 ;;		On exit  : 3F/1
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12981 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;Total ram usage:        8 bytes
 12986 ;; Hardware stack levels used:    1
 12987 ;; Hardware stack levels required when called:   17
 12988 ;; This function calls:
 12989 ;;		_LCDWriteChar
 12990 ;;		_strlen
 12991 ;; This function is called by:
 12992 ;;		_LCDInit
 12993 ;;		_LCDMessage1
 12994 ;;		_LCDMessage12
 12995 ;;		_LCDMessage2
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text75
 13000  007790                     __ptext75:
 13001                           	opt callstack 0
 13002  007790                     _LCDMessage:
 13003                           	opt callstack 9
 13004                           
 13005                           ; BSR set to: 1
 13006                           ;lcd.c: 127:     int length = (strlen(str))>(16)?(16):(strlen(str));
 13007                           
 13008                           ;incstack = 0
 13009  007790  0060  F420  F104   	movff	LCDMessage@str,strlen@s
 13010  007796  0060  F424  F105   	movff	LCDMessage@str+1,strlen@s+1
 13011  00779C  ECC9  F046         	call	_strlen	;wreg free
 13012  0077A0  5105               	movf	(?_strlen+1)& (0+255),w,b
 13013  0077A2  E113               	bnz	l18637
 13014  0077A4  0E11               	movlw	17
 13015  0077A6  5D04               	subwf	?_strlen& (0+255),w,b
 13016  0077A8  B0D8               	btfsc	status,0,c
 13017  0077AA  D00F               	goto	l18637
 13018                           
 13019                           ; BSR set to: 1
 13020  0077AC  0060  F420  F104   	movff	LCDMessage@str,strlen@s
 13021  0077B2  0060  F424  F105   	movff	LCDMessage@str+1,strlen@s+1
 13022  0077B8  ECC9  F046         	call	_strlen	;wreg free
 13023  0077BC  0060  F410  F10C   	movff	?_strlen,LCDMessage@length
 13024  0077C2  0060  F414  F10D   	movff	?_strlen+1,LCDMessage@length+1
 13025  0077C8  D004               	goto	l1623
 13026  0077CA                     l18637:
 13027                           
 13028                           ; BSR set to: 1
 13029  0077CA  0E00               	movlw	0
 13030  0077CC  6F0D               	movwf	(LCDMessage@length+1)& (0+255),b
 13031  0077CE  0E10               	movlw	16
 13032  0077D0  6F0C               	movwf	LCDMessage@length& (0+255),b
 13033  0077D2                     l1623:
 13034                           
 13035                           ; BSR set to: 1
 13036                           ;lcd.c: 129:     for (int i= 0; i<length; i++) {
 13037  0077D2  0E00               	movlw	0
 13038  0077D4  6F0F               	movwf	(LCDMessage@i+1)& (0+255),b
 13039  0077D6  0E00               	movlw	0
 13040  0077D8  6F0E               	movwf	LCDMessage@i& (0+255),b
 13041  0077DA  D020               	goto	l18643
 13042  0077DC                     l18639:
 13043                           
 13044                           ; BSR set to: 1
 13045                           ;lcd.c: 130:         LCDWriteChar(str[i]);
 13046  0077DC  510E               	movf	LCDMessage@i& (0+255),w,b
 13047  0077DE  2508               	addwf	LCDMessage@str& (0+255),w,b
 13048  0077E0  6F0A               	movwf	??_LCDMessage& (0+255),b
 13049  0077E2  510F               	movf	(LCDMessage@i+1)& (0+255),w,b
 13050  0077E4  2109               	addwfc	(LCDMessage@str+1)& (0+255),w,b
 13051  0077E6  6F0B               	movwf	(??_LCDMessage+1)& (0+255),b
 13052  0077E8  0060  F42B  FFF6   	movff	??_LCDMessage,tblptrl
 13053  0077EE  0060  F42F  FFF7   	movff	??_LCDMessage+1,tblptrh
 13054  0077F4  0E00               	movlw	low (__mediumconst shr (0+16))
 13055  0077F6  6EF8               	movwf	tblptru,c
 13056  0077F8  0E0F               	movlw	(high __ramtop+-1)
 13057  0077FA  64F7               	cpfsgt	tblptrh,c
 13058  0077FC  D003               	bra	u18217
 13059  0077FE  0008               	tblrd		*
 13060  007800  50F5               	movf	tablat,w,c
 13061  007802  D007               	bra	u18210
 13062  007804                     u18217:
 13063  007804  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13064  00780A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13065  007810  50E7               	movf	indf1,w,c
 13066  007812                     u18210:
 13067  007812  EC34  F03E         	call	_LCDWriteChar
 13068                           
 13069                           ;lcd.c: 131:     }
 13070  007816  0101               	movlb	1	; () banked
 13071  007818  4B0E               	infsnz	LCDMessage@i& (0+255),f,b
 13072  00781A  2B0F               	incf	(LCDMessage@i+1)& (0+255),f,b
 13073  00781C                     l18643:
 13074                           
 13075                           ; BSR set to: 1
 13076  00781C  510C               	movf	LCDMessage@length& (0+255),w,b
 13077  00781E  5D0E               	subwf	LCDMessage@i& (0+255),w,b
 13078  007820  510F               	movf	(LCDMessage@i+1)& (0+255),w,b
 13079  007822  0A80               	xorlw	128
 13080  007824  6F0A               	movwf	??_LCDMessage& (0+255),b
 13081  007826  510D               	movf	(LCDMessage@length+1)& (0+255),w,b
 13082  007828  0A80               	xorlw	128
 13083  00782A  590A               	subwfb	??_LCDMessage& (0+255),w,b
 13084  00782C  B0D8               	btfsc	status,0,c
 13085  00782E  0012               	return	
 13086  007830  D7D5               	goto	l18639
 13087  007832                     __end_of_LCDMessage:
 13088                           	opt callstack 0
 13089                           
 13090 ;; *************** function _LCDWriteChar *****************
 13091 ;; Defined at:
 13092 ;;		line 154 in file "lcd.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  chr             1    wreg     unsigned char 
 13095 ;; Auto vars:     Size  Location     Type
 13096 ;;  chr             1    4[BANK1 ] unsigned char 
 13097 ;; Return value:  Size  Location     Type
 13098 ;;                  1    wreg      void 
 13099 ;; Registers used:
 13100 ;;		wreg, status,2, cstack
 13101 ;; Tracked objects:
 13102 ;;		On entry : 0/1
 13103 ;;		On exit  : 0/0
 13104 ;;		Unchanged: 0/0
 13105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13109 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13110 ;;Total ram usage:        1 bytes
 13111 ;; Hardware stack levels used:    1
 13112 ;; Hardware stack levels required when called:   16
 13113 ;; This function calls:
 13114 ;;		Nothing
 13115 ;; This function is called by:
 13116 ;;		_LCDMessage
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           	psect	text76
 13121  007C68                     __ptext76:
 13122                           	opt callstack 0
 13123  007C68                     _LCDWriteChar:
 13124                           	opt callstack 9
 13125                           
 13126                           ; BSR set to: 1
 13127                           ;incstack = 0
 13128                           ;LCDWriteChar@chr stored from wreg
 13129  007C68  0101               	movlb	1	; () banked
 13130  007C6A  6F04               	movwf	LCDWriteChar@chr& (0+255),b
 13131                           
 13132                           ;lcd.c: 154: void LCDWriteChar(char chr);lcd.c: 155: {;lcd.c: 171:     if (chr&0x80) do 
      +                          { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 13133  007C6C  0101               	movlb	1	; () banked
 13134  007C6E  AF04               	btfss	LCDWriteChar@chr& (0+255),7,b
 13135  007C70  D002               	goto	l1647
 13136                           
 13137                           ; BSR set to: 1
 13138  007C72  8EBD               	bsf	189,7,c	;volatile
 13139  007C74  D001               	goto	l18295
 13140  007C76                     l1647:
 13141                           
 13142                           ; BSR set to: 1
 13143  007C76  9EBD               	bcf	189,7,c	;volatile
 13144  007C78                     l18295:
 13145                           
 13146                           ; BSR set to: 1
 13147                           ;lcd.c: 172:     if (chr&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 13148  007C78  AD04               	btfss	LCDWriteChar@chr& (0+255),6,b
 13149  007C7A  D002               	goto	l1653
 13150                           
 13151                           ; BSR set to: 1
 13152  007C7C  8CBD               	bsf	189,6,c	;volatile
 13153  007C7E  D001               	goto	l18297
 13154  007C80                     l1653:
 13155                           
 13156                           ; BSR set to: 1
 13157  007C80  9CBD               	bcf	189,6,c	;volatile
 13158  007C82                     l18297:
 13159                           
 13160                           ; BSR set to: 1
 13161                           ;lcd.c: 173:     if (chr&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 13162  007C82  AB04               	btfss	LCDWriteChar@chr& (0+255),5,b
 13163  007C84  D002               	goto	l1659
 13164                           
 13165                           ; BSR set to: 1
 13166  007C86  8ABD               	bsf	189,5,c	;volatile
 13167  007C88  D001               	goto	l18299
 13168  007C8A                     l1659:
 13169                           
 13170                           ; BSR set to: 1
 13171  007C8A  9ABD               	bcf	189,5,c	;volatile
 13172  007C8C                     l18299:
 13173                           
 13174                           ; BSR set to: 1
 13175                           ;lcd.c: 174:     if (chr&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 13176  007C8C  A904               	btfss	LCDWriteChar@chr& (0+255),4,b
 13177  007C8E  D002               	goto	l1665
 13178                           
 13179                           ; BSR set to: 1
 13180  007C90  88BD               	bsf	189,4,c	;volatile
 13181  007C92  D001               	goto	l1667
 13182  007C94                     l1665:
 13183                           
 13184                           ; BSR set to: 1
 13185  007C94  98BD               	bcf	189,4,c	;volatile
 13186  007C96                     l1667:
 13187                           
 13188                           ; BSR set to: 1
 13189  007C96  8CBC               	bsf	188,6,c	;volatile
 13190                           
 13191                           ; BSR set to: 1
 13192                           ;lcd.c: 177:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 13193  007C98  0E1A               	movlw	26
 13194  007C9A                     u22917:
 13195  007C9A  2EE8               	decfsz	wreg,f,c
 13196  007C9C  D7FE               	bra	u22917
 13197  007C9E  D000               	nop2	
 13198  007CA0  8EBC               	bsf	188,7,c	;volatile
 13199                           
 13200                           ;lcd.c: 179:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 13201  007CA2  0E35               	movlw	53
 13202  007CA4                     u22927:
 13203  007CA4  2EE8               	decfsz	wreg,f,c
 13204  007CA6  D7FE               	bra	u22927
 13205  007CA8  F000               	nop	
 13206  007CAA  9EBC               	bcf	188,7,c	;volatile
 13207                           
 13208                           ;lcd.c: 181:  _delay((unsigned long)((5)*(64000000/4000000.0)));
 13209  007CAC  0E1A               	movlw	26
 13210  007CAE                     u22937:
 13211  007CAE  2EE8               	decfsz	wreg,f,c
 13212  007CB0  D7FE               	bra	u22937
 13213  007CB2  D000               	nop2	
 13214                           
 13215                           ;lcd.c: 182:     if (chr&0x8) do { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LA
      +                          TD7 = 0; } while(0);
 13216  007CB4  0101               	movlb	1	; () banked
 13217  007CB6  A704               	btfss	LCDWriteChar@chr& (0+255),3,b
 13218  007CB8  D002               	goto	l1677
 13219                           
 13220                           ; BSR set to: 1
 13221  007CBA  8EBD               	bsf	189,7,c	;volatile
 13222  007CBC  D001               	goto	l18309
 13223  007CBE                     l1677:
 13224                           
 13225                           ; BSR set to: 1
 13226  007CBE  9EBD               	bcf	189,7,c	;volatile
 13227  007CC0                     l18309:
 13228                           
 13229                           ; BSR set to: 1
 13230                           ;lcd.c: 183:     if (chr&0x4) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.LA
      +                          TD6 = 0; } while(0);
 13231  007CC0  A504               	btfss	LCDWriteChar@chr& (0+255),2,b
 13232  007CC2  D002               	goto	l1683
 13233                           
 13234                           ; BSR set to: 1
 13235  007CC4  8CBD               	bsf	189,6,c	;volatile
 13236  007CC6  D001               	goto	l18311
 13237  007CC8                     l1683:
 13238                           
 13239                           ; BSR set to: 1
 13240  007CC8  9CBD               	bcf	189,6,c	;volatile
 13241  007CCA                     l18311:
 13242                           
 13243                           ; BSR set to: 1
 13244                           ;lcd.c: 184:     if (chr&0x2) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.LA
      +                          TD5 = 0; } while(0);
 13245  007CCA  A304               	btfss	LCDWriteChar@chr& (0+255),1,b
 13246  007CCC  D002               	goto	l1689
 13247                           
 13248                           ; BSR set to: 1
 13249  007CCE  8ABD               	bsf	189,5,c	;volatile
 13250  007CD0  D001               	goto	l18313
 13251  007CD2                     l1689:
 13252                           
 13253                           ; BSR set to: 1
 13254  007CD2  9ABD               	bcf	189,5,c	;volatile
 13255  007CD4                     l18313:
 13256                           
 13257                           ; BSR set to: 1
 13258                           ;lcd.c: 185:     if (chr&0x1) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.LA
      +                          TD4 = 0; } while(0);
 13259  007CD4  A104               	btfss	LCDWriteChar@chr& (0+255),0,b
 13260  007CD6  D002               	goto	l1695
 13261                           
 13262                           ; BSR set to: 1
 13263  007CD8  88BD               	bsf	189,4,c	;volatile
 13264  007CDA  D001               	goto	l1697
 13265  007CDC                     l1695:
 13266                           
 13267                           ; BSR set to: 1
 13268  007CDC  98BD               	bcf	189,4,c	;volatile
 13269  007CDE                     l1697:
 13270                           
 13271                           ; BSR set to: 1
 13272  007CDE  8CBC               	bsf	188,6,c	;volatile
 13273                           
 13274                           ; BSR set to: 1
 13275                           ;lcd.c: 188:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 13276  007CE0  0E1A               	movlw	26
 13277  007CE2                     u22947:
 13278  007CE2  2EE8               	decfsz	wreg,f,c
 13279  007CE4  D7FE               	bra	u22947
 13280  007CE6  D000               	nop2	
 13281  007CE8  8EBC               	bsf	188,7,c	;volatile
 13282                           
 13283                           ;lcd.c: 190:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 13284  007CEA  0E35               	movlw	53
 13285  007CEC                     u22957:
 13286  007CEC  2EE8               	decfsz	wreg,f,c
 13287  007CEE  D7FE               	bra	u22957
 13288  007CF0  F000               	nop	
 13289  007CF2  9EBC               	bcf	188,7,c	;volatile
 13290                           
 13291                           ;lcd.c: 192:     _delay((unsigned long)((38)*(64000000/4000000.0)));
 13292  007CF4  0ECA               	movlw	202
 13293  007CF6                     u22967:
 13294  007CF6  2EE8               	decfsz	wreg,f,c
 13295  007CF8  D7FE               	bra	u22967
 13296  007CFA  D000               	nop2	
 13297  007CFC  0012               	return		;funcret
 13298  007CFE                     __end_of_LCDWriteChar:
 13299                           	opt callstack 0
 13300                           
 13301 ;; *************** function _DisableAlarmSV1 *****************
 13302 ;; Defined at:
 13303 ;;		line 873 in file "monitor.c"
 13304 ;; Parameters:    Size  Location     Type
 13305 ;;		None
 13306 ;; Auto vars:     Size  Location     Type
 13307 ;;		None
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  1    wreg      void 
 13310 ;; Registers used:
 13311 ;;		wreg, status,2
 13312 ;; Tracked objects:
 13313 ;;		On entry : 3F/3
 13314 ;;		On exit  : 3F/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;Total ram usage:        0 bytes
 13322 ;; Hardware stack levels used:    1
 13323 ;; Hardware stack levels required when called:   16
 13324 ;; This function calls:
 13325 ;;		Nothing
 13326 ;; This function is called by:
 13327 ;;		_main
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text77
 13332  00A4B8                     __ptext77:
 13333                           	opt callstack 0
 13334  00A4B8                     _DisableAlarmSV1:
 13335                           	opt callstack 14
 13336                           
 13337                           ; BSR set to: 3
 13338                           ;monitor.c: 874:     disableAlarmSV1=1;
 13339                           
 13340                           ;incstack = 0
 13341  00A4B8  0E01               	movlw	1
 13342  00A4BA  0100               	movlb	0	; () banked
 13343  00A4BC  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 13344                           
 13345                           ; BSR set to: 0
 13346  00A4BE  0012               	return		;funcret
 13347  00A4C0                     __end_of_DisableAlarmSV1:
 13348                           	opt callstack 0
 13349                           
 13350 ;; *************** function _ControllerInit *****************
 13351 ;; Defined at:
 13352 ;;		line 214 in file "controller.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;		None
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;		None
 13357 ;; Return value:  Size  Location     Type
 13358 ;;                  1    wreg      void 
 13359 ;; Registers used:
 13360 ;;		wreg, status,2, status,0, cstack
 13361 ;; Tracked objects:
 13362 ;;		On entry : 3C/0
 13363 ;;		On exit  : 3F/1
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13370 ;;Total ram usage:        0 bytes
 13371 ;; Hardware stack levels used:    1
 13372 ;; Hardware stack levels required when called:   18
 13373 ;; This function calls:
 13374 ;;		_I2C2_Open
 13375 ;;		_I2C2_SlaveSetReadIntHandler
 13376 ;;		_I2C2_SlaveSetStopIntHandler
 13377 ;;		_TMR6_SetInterruptHandler
 13378 ;;		_TMR6_StartTimer
 13379 ;; This function is called by:
 13380 ;;		_main
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           	psect	text78
 13385  0092B0                     __ptext78:
 13386                           	opt callstack 0
 13387  0092B0                     _ControllerInit:
 13388                           	opt callstack 12
 13389                           
 13390                           ;controller.c: 216:     commandReceived = 0;
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;incstack = 0
 13394  0092B0  0E00               	movlw	0
 13395  0092B2  0102               	movlb	2	; () banked
 13396  0092B4  6F9B               	movwf	_commandReceived& (0+255),b
 13397                           
 13398                           ;controller.c: 217:     init = 0;
 13399  0092B6  0E00               	movlw	0
 13400  0092B8  6F9A               	movwf	_init& (0+255),b
 13401                           
 13402                           ;controller.c: 218:     run = 0;
 13403  0092BA  0E00               	movlw	0
 13404  0092BC  0100               	movlb	0	; () banked
 13405  0092BE  6FF0               	movwf	_run& (0+255),b
 13406                           
 13407                           ; BSR set to: 0
 13408                           ;controller.c: 221:     I2C2_Open();
 13409  0092C0  EC66  F044         	call	_I2C2_Open	;wreg free
 13410                           
 13411                           ; BSR set to: 61
 13412                           ;controller.c: 225:     I2C2_SlaveSetReadIntHandler( ReceiveHandler);
 13413  0092C4  0E0A               	movlw	low _ReceiveHandler
 13414  0092C6  0101               	movlb	1	; () banked
 13415  0092C8  6F04               	movwf	I2C2_SlaveSetReadIntHandler@handler& (0+255),b
 13416  0092CA  0E91               	movlw	high _ReceiveHandler
 13417  0092CC  6F05               	movwf	(I2C2_SlaveSetReadIntHandler@handler+1)& (0+255),b
 13418  0092CE  EC29  F051         	call	_I2C2_SlaveSetReadIntHandler	;wreg free
 13419                           
 13420                           ; BSR set to: 1
 13421                           ;controller.c: 227:     I2C2_SlaveSetStopIntHandler( StopHandler);
 13422  0092D2  0EE6               	movlw	low _StopHandler
 13423  0092D4  6F04               	movwf	I2C2_SlaveSetStopIntHandler@handler& (0+255),b
 13424  0092D6  0E8C               	movlw	high _StopHandler
 13425  0092D8  6F05               	movwf	(I2C2_SlaveSetStopIntHandler@handler+1)& (0+255),b
 13426  0092DA  EC14  F051         	call	_I2C2_SlaveSetStopIntHandler	;wreg free
 13427                           
 13428                           ; BSR set to: 1
 13429                           ;controller.c: 228:     TMR6_SetInterruptHandler(ControllerTimerHandler);
 13430  0092DE  0E4A               	movlw	low _ControllerTimerHandler
 13431  0092E0  6F04               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 13432  0092E2  0E80               	movlw	high _ControllerTimerHandler
 13433  0092E4  6F05               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13434  0092E6  EC0D  F051         	call	_TMR6_SetInterruptHandler	;wreg free
 13435                           
 13436                           ; BSR set to: 1
 13437                           ;controller.c: 229:     TMR6_StartTimer();
 13438  0092EA  ECCF  F052         	call	_TMR6_StartTimer	;wreg free
 13439                           
 13440                           ; BSR set to: 1
 13441  0092EE  0012               	return		;funcret
 13442  0092F0                     __end_of_ControllerInit:
 13443                           	opt callstack 0
 13444                           
 13445 ;; *************** function _TMR6_StartTimer *****************
 13446 ;; Defined at:
 13447 ;;		line 114 in file "mcc_generated_files/tmr6.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;		None
 13450 ;; Auto vars:     Size  Location     Type
 13451 ;;		None
 13452 ;; Return value:  Size  Location     Type
 13453 ;;                  1    wreg      void 
 13454 ;; Registers used:
 13455 ;;		cstack
 13456 ;; Tracked objects:
 13457 ;;		On entry : 3F/1
 13458 ;;		On exit  : 3F/1
 13459 ;;		Unchanged: 3F/0
 13460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13465 ;;Total ram usage:        0 bytes
 13466 ;; Hardware stack levels used:    1
 13467 ;; Hardware stack levels required when called:   17
 13468 ;; This function calls:
 13469 ;;		_TMR6_Start
 13470 ;; This function is called by:
 13471 ;;		_ControllerInit
 13472 ;; This function uses a non-reentrant model
 13473 ;;
 13474                           
 13475                           	psect	text79
 13476  00A59E                     __ptext79:
 13477                           	opt callstack 0
 13478  00A59E                     _TMR6_StartTimer:
 13479                           	opt callstack 12
 13480                           
 13481                           ; BSR set to: 1
 13482                           ;mcc_generated_files/tmr6.c: 116:     TMR6_Start();
 13483                           
 13484                           ; BSR set to: 1
 13485                           ;incstack = 0
 13486  00A59E  EC24  F053         	call	_TMR6_Start	;wreg free
 13487                           
 13488                           ; BSR set to: 1
 13489  00A5A2  0012               	return		;funcret
 13490  00A5A4                     __end_of_TMR6_StartTimer:
 13491                           	opt callstack 0
 13492                           
 13493 ;; *************** function _TMR6_Start *****************
 13494 ;; Defined at:
 13495 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 13496 ;; Parameters:    Size  Location     Type
 13497 ;;		None
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;		None
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  1    wreg      void 
 13502 ;; Registers used:
 13503 ;;		None
 13504 ;; Tracked objects:
 13505 ;;		On entry : 3F/1
 13506 ;;		On exit  : 3F/1
 13507 ;;		Unchanged: 3F/0
 13508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13513 ;;Total ram usage:        0 bytes
 13514 ;; Hardware stack levels used:    1
 13515 ;; Hardware stack levels required when called:   16
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		_TMR6_StartTimer
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text80
 13524  00A648                     __ptext80:
 13525                           	opt callstack 0
 13526  00A648                     _TMR6_Start:
 13527                           	opt callstack 12
 13528                           
 13529                           ; BSR set to: 1
 13530                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 13531                           
 13532                           ; BSR set to: 1
 13533                           ;incstack = 0
 13534  00A648  8E94               	bsf	148,7,c	;volatile
 13535                           
 13536                           ; BSR set to: 1
 13537  00A64A  0012               	return		;funcret
 13538  00A64C                     __end_of_TMR6_Start:
 13539                           	opt callstack 0
 13540                           
 13541 ;; *************** function _TMR6_SetInterruptHandler *****************
 13542 ;; Defined at:
 13543 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 13546 ;;		 -> ControllerTimerHandler(1), TMR6_DefaultInterruptHandler(1), 
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;		None
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  1    wreg      void 
 13551 ;; Registers used:
 13552 ;;		wreg, status,2, status,0
 13553 ;; Tracked objects:
 13554 ;;		On entry : 3F/1
 13555 ;;		On exit  : 3F/1
 13556 ;;		Unchanged: 3F/0
 13557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13558 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13561 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13562 ;;Total ram usage:        2 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; Hardware stack levels required when called:   16
 13565 ;; This function calls:
 13566 ;;		Nothing
 13567 ;; This function is called by:
 13568 ;;		_TMR6_Initialize
 13569 ;;		_ControllerInit
 13570 ;; This function uses a non-reentrant model
 13571 ;;
 13572                           
 13573                           	psect	text81
 13574  00A21A                     __ptext81:
 13575                           	opt callstack 0
 13576  00A21A                     _TMR6_SetInterruptHandler:
 13577                           	opt callstack 12
 13578                           
 13579                           ; BSR set to: 1
 13580                           ;mcc_generated_files/tmr6.c: 179:     TMR6_InterruptHandler = InterruptHandler;
 13581                           
 13582                           ; BSR set to: 1
 13583                           ;incstack = 0
 13584  00A21A  0060  F410  F2D9   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 13585  00A220  0060  F414  F2DA   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 13586                           
 13587                           ; BSR set to: 1
 13588  00A226  0012               	return		;funcret
 13589  00A228                     __end_of_TMR6_SetInterruptHandler:
 13590                           	opt callstack 0
 13591                           
 13592 ;; *************** function _I2C2_SlaveSetStopIntHandler *****************
 13593 ;; Defined at:
 13594 ;;		line 269 in file "mcc_generated_files/i2c2_slave.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13597 ;;		 -> StopHandler(1), 
 13598 ;; Auto vars:     Size  Location     Type
 13599 ;;		None
 13600 ;; Return value:  Size  Location     Type
 13601 ;;                  1    wreg      void 
 13602 ;; Registers used:
 13603 ;;		wreg, status,2, status,0
 13604 ;; Tracked objects:
 13605 ;;		On entry : 3F/1
 13606 ;;		On exit  : 3F/1
 13607 ;;		Unchanged: 3F/0
 13608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13609 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13613 ;;Total ram usage:        2 bytes
 13614 ;; Hardware stack levels used:    1
 13615 ;; Hardware stack levels required when called:   16
 13616 ;; This function calls:
 13617 ;;		Nothing
 13618 ;; This function is called by:
 13619 ;;		_ControllerInit
 13620 ;; This function uses a non-reentrant model
 13621 ;;
 13622                           
 13623                           	psect	text82
 13624  00A228                     __ptext82:
 13625                           	opt callstack 0
 13626  00A228                     _I2C2_SlaveSetStopIntHandler:
 13627                           	opt callstack 13
 13628                           
 13629                           ; BSR set to: 1
 13630                           ;mcc_generated_files/i2c2_slave.c: 270:     I2C2_SlaveStopInterruptHandler = handler;
 13631                           
 13632                           ; BSR set to: 1
 13633                           ;incstack = 0
 13634  00A228  0060  F410  F292   	movff	I2C2_SlaveSetStopIntHandler@handler,_I2C2_SlaveStopInterruptHandler
 13635  00A22E  0060  F414  F293   	movff	I2C2_SlaveSetStopIntHandler@handler+1,_I2C2_SlaveStopInterruptHandler+1
 13636                           
 13637                           ; BSR set to: 1
 13638  00A234  0012               	return		;funcret
 13639  00A236                     __end_of_I2C2_SlaveSetStopIntHandler:
 13640                           	opt callstack 0
 13641                           
 13642 ;; *************** function _I2C2_Open *****************
 13643 ;; Defined at:
 13644 ;;		line 128 in file "mcc_generated_files/i2c2_slave.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;		None
 13647 ;; Auto vars:     Size  Location     Type
 13648 ;;		None
 13649 ;; Return value:  Size  Location     Type
 13650 ;;                  1    wreg      void 
 13651 ;; Registers used:
 13652 ;;		wreg, status,2, status,0, cstack
 13653 ;; Tracked objects:
 13654 ;;		On entry : 3F/0
 13655 ;;		On exit  : 3F/3D
 13656 ;;		Unchanged: 0/0
 13657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13662 ;;Total ram usage:        0 bytes
 13663 ;; Hardware stack levels used:    1
 13664 ;; Hardware stack levels required when called:   17
 13665 ;; This function calls:
 13666 ;;		_I2C2_SlaveEnableIrq
 13667 ;;		_I2C2_SlaveOpen
 13668 ;;		_I2C2_SlaveSetAddrIntHandler
 13669 ;;		_I2C2_SlaveSetBusColIntHandler
 13670 ;;		_I2C2_SlaveSetIsrHandler
 13671 ;;		_I2C2_SlaveSetReadIntHandler
 13672 ;;		_I2C2_SlaveSetSlaveAddr
 13673 ;;		_I2C2_SlaveSetSlaveMask
 13674 ;;		_I2C2_SlaveSetWrColIntHandler
 13675 ;;		_I2C2_SlaveSetWriteIntHandler
 13676 ;; This function is called by:
 13677 ;;		_ControllerInit
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text83
 13682  0088CC                     __ptext83:
 13683                           	opt callstack 0
 13684  0088CC                     _I2C2_Open:
 13685                           	opt callstack 12
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;mcc_generated_files/i2c2_slave.c: 130:     I2C2_on = 1;
 13689                           
 13690                           ; BSR set to: 1
 13691                           ;incstack = 0
 13692  0088CC  0E01               	movlw	1
 13693  0088CE  0102               	movlb	2	; () banked
 13694  0088D0  6FB4               	movwf	_I2C2_on& (0+255),b
 13695                           
 13696                           ; BSR set to: 2
 13697                           ;mcc_generated_files/i2c2_slave.c: 131:     I2C2_SlaveOpen();
 13698  0088D2  EC0B  F052         	call	_I2C2_SlaveOpen	;wreg free
 13699                           
 13700                           ; BSR set to: 61
 13701                           ;mcc_generated_files/i2c2_slave.c: 132:     I2C2_SlaveSetSlaveAddr(0x50 << 1);
 13702  0088D6  0EA0               	movlw	160
 13703  0088D8  ECD7  F051         	call	_I2C2_SlaveSetSlaveAddr
 13704                           
 13705                           ;mcc_generated_files/i2c2_slave.c: 134:     I2C2_SlaveSetSlaveMask(0);
 13706  0088DC  0E00               	movlw	0
 13707  0088DE  EC96  F050         	call	_I2C2_SlaveSetSlaveMask
 13708                           
 13709                           ; BSR set to: 61
 13710                           ;mcc_generated_files/i2c2_slave.c: 135:     I2C2_SlaveSetIsrHandler(I2C2_Isr);
 13711  0088E2  0E64               	movlw	low _I2C2_Isr
 13712  0088E4  0101               	movlb	1	; () banked
 13713  0088E6  6F04               	movwf	I2C2_SlaveSetIsrHandler@handler& (0+255),b
 13714  0088E8  0E88               	movlw	high _I2C2_Isr
 13715  0088EA  6F05               	movwf	(I2C2_SlaveSetIsrHandler@handler+1)& (0+255),b
 13716  0088EC  EC30  F051         	call	_I2C2_SlaveSetIsrHandler	;wreg free
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;mcc_generated_files/i2c2_slave.c: 136:     I2C2_SlaveSetBusColIntHandler(I2C2_SlaveDefB
      +                          usColInterruptHandler);
 13720  0088F0  0E00               	movlw	0
 13721  0088F2  6F04               	movwf	I2C2_SlaveSetBusColIntHandler@handler& (0+255),b
 13722  0088F4  0E00               	movlw	0
 13723  0088F6  6F05               	movwf	(I2C2_SlaveSetBusColIntHandler@handler+1)& (0+255),b
 13724  0088F8  EC37  F051         	call	_I2C2_SlaveSetBusColIntHandler	;wreg free
 13725                           
 13726                           ; BSR set to: 1
 13727                           ;mcc_generated_files/i2c2_slave.c: 137:     I2C2_SlaveSetWriteIntHandler(I2C2_SlaveDefWr
      +                          InterruptHandler);
 13728  0088FC  0E00               	movlw	0
 13729  0088FE  6F04               	movwf	I2C2_SlaveSetWriteIntHandler@handler& (0+255),b
 13730  008900  0E00               	movlw	0
 13731  008902  6F05               	movwf	(I2C2_SlaveSetWriteIntHandler@handler+1)& (0+255),b
 13732  008904  EC1B  F051         	call	_I2C2_SlaveSetWriteIntHandler	;wreg free
 13733                           
 13734                           ; BSR set to: 1
 13735                           ;mcc_generated_files/i2c2_slave.c: 138:     I2C2_SlaveSetReadIntHandler(I2C2_SlaveDefRdI
      +                          nterruptHandler);
 13736  008908  0E5C               	movlw	low _I2C2_SlaveDefRdInterruptHandler
 13737  00890A  6F04               	movwf	I2C2_SlaveSetReadIntHandler@handler& (0+255),b
 13738  00890C  0EA4               	movlw	high _I2C2_SlaveDefRdInterruptHandler
 13739  00890E  6F05               	movwf	(I2C2_SlaveSetReadIntHandler@handler+1)& (0+255),b
 13740  008910  EC29  F051         	call	_I2C2_SlaveSetReadIntHandler	;wreg free
 13741                           
 13742                           ; BSR set to: 1
 13743                           ;mcc_generated_files/i2c2_slave.c: 139:     I2C2_SlaveSetAddrIntHandler(I2C2_SlaveDefAdd
      +                          rInterruptHandler);
 13744  008914  0E00               	movlw	0
 13745  008916  6F04               	movwf	I2C2_SlaveSetAddrIntHandler@handler& (0+255),b
 13746  008918  0E00               	movlw	0
 13747  00891A  6F05               	movwf	(I2C2_SlaveSetAddrIntHandler@handler+1)& (0+255),b
 13748  00891C  EC3E  F051         	call	_I2C2_SlaveSetAddrIntHandler	;wreg free
 13749                           
 13750                           ; BSR set to: 1
 13751                           ;mcc_generated_files/i2c2_slave.c: 140:     I2C2_SlaveSetWrColIntHandler(I2C2_SlaveDefWr
      +                          ColInterruptHandler);
 13752  008920  0E00               	movlw	0
 13753  008922  6F04               	movwf	I2C2_SlaveSetWrColIntHandler@handler& (0+255),b
 13754  008924  0E00               	movlw	0
 13755  008926  6F05               	movwf	(I2C2_SlaveSetWrColIntHandler@handler+1)& (0+255),b
 13756  008928  EC22  F051         	call	_I2C2_SlaveSetWrColIntHandler	;wreg free
 13757                           
 13758                           ; BSR set to: 1
 13759                           ;mcc_generated_files/i2c2_slave.c: 141:     I2C2_SlaveEnableIrq();
 13760  00892C  ECF5  F04F         	call	_I2C2_SlaveEnableIrq	;wreg free
 13761                           
 13762                           ; BSR set to: 61
 13763  008930  0012               	return		;funcret
 13764  008932                     __end_of_I2C2_Open:
 13765                           	opt callstack 0
 13766                           
 13767 ;; *************** function _I2C2_SlaveSetWriteIntHandler *****************
 13768 ;; Defined at:
 13769 ;;		line 252 in file "mcc_generated_files/i2c2_slave.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13772 ;;		 -> I2C2_SlaveDefWrInterruptHandler(1), 
 13773 ;; Auto vars:     Size  Location     Type
 13774 ;;		None
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      void 
 13777 ;; Registers used:
 13778 ;;		wreg, status,2, status,0
 13779 ;; Tracked objects:
 13780 ;;		On entry : 3F/1
 13781 ;;		On exit  : 3F/1
 13782 ;;		Unchanged: 3F/0
 13783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13784 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13788 ;;Total ram usage:        2 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; Hardware stack levels required when called:   16
 13791 ;; This function calls:
 13792 ;;		Nothing
 13793 ;; This function is called by:
 13794 ;;		_I2C2_Open
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text84
 13799  00A236                     __ptext84:
 13800                           	opt callstack 0
 13801  00A236                     _I2C2_SlaveSetWriteIntHandler:
 13802                           	opt callstack 12
 13803                           
 13804                           ; BSR set to: 1
 13805                           ;mcc_generated_files/i2c2_slave.c: 253:     I2C2_SlaveWrInterruptHandler = handler;
 13806                           
 13807                           ; BSR set to: 61
 13808                           ;incstack = 0
 13809  00A236  0060  F410  F294   	movff	I2C2_SlaveSetWriteIntHandler@handler,_I2C2_SlaveWrInterruptHandler
 13810  00A23C  0060  F414  F295   	movff	I2C2_SlaveSetWriteIntHandler@handler+1,_I2C2_SlaveWrInterruptHandler+1
 13811                           
 13812                           ; BSR set to: 1
 13813  00A242  0012               	return		;funcret
 13814  00A244                     __end_of_I2C2_SlaveSetWriteIntHandler:
 13815                           	opt callstack 0
 13816                           
 13817 ;; *************** function _I2C2_SlaveSetWrColIntHandler *****************
 13818 ;; Defined at:
 13819 ;;		line 301 in file "mcc_generated_files/i2c2_slave.c"
 13820 ;; Parameters:    Size  Location     Type
 13821 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13822 ;;		 -> I2C2_SlaveDefWrColInterruptHandler(1), 
 13823 ;; Auto vars:     Size  Location     Type
 13824 ;;		None
 13825 ;; Return value:  Size  Location     Type
 13826 ;;                  1    wreg      void 
 13827 ;; Registers used:
 13828 ;;		wreg, status,2, status,0
 13829 ;; Tracked objects:
 13830 ;;		On entry : 3F/1
 13831 ;;		On exit  : 3F/1
 13832 ;;		Unchanged: 3F/0
 13833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13834 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13837 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13838 ;;Total ram usage:        2 bytes
 13839 ;; Hardware stack levels used:    1
 13840 ;; Hardware stack levels required when called:   16
 13841 ;; This function calls:
 13842 ;;		Nothing
 13843 ;; This function is called by:
 13844 ;;		_I2C2_Open
 13845 ;; This function uses a non-reentrant model
 13846 ;;
 13847                           
 13848                           	psect	text85
 13849  00A244                     __ptext85:
 13850                           	opt callstack 0
 13851  00A244                     _I2C2_SlaveSetWrColIntHandler:
 13852                           	opt callstack 12
 13853                           
 13854                           ; BSR set to: 1
 13855                           ;mcc_generated_files/i2c2_slave.c: 302:     I2C2_SlaveWrColInterruptHandler = handler;
 13856                           
 13857                           ; BSR set to: 1
 13858                           ;incstack = 0
 13859  00A244  0060  F410  F28C   	movff	I2C2_SlaveSetWrColIntHandler@handler,_I2C2_SlaveWrColInterruptHandler
 13860  00A24A  0060  F414  F28D   	movff	I2C2_SlaveSetWrColIntHandler@handler+1,_I2C2_SlaveWrColInterruptHandler+1
 13861                           
 13862                           ; BSR set to: 1
 13863  00A250  0012               	return		;funcret
 13864  00A252                     __end_of_I2C2_SlaveSetWrColIntHandler:
 13865                           	opt callstack 0
 13866                           
 13867 ;; *************** function _I2C2_SlaveSetSlaveMask *****************
 13868 ;; Defined at:
 13869 ;;		line 354 in file "mcc_generated_files/i2c2_slave.c"
 13870 ;; Parameters:    Size  Location     Type
 13871 ;;  maskAddr        1    wreg     unsigned char 
 13872 ;; Auto vars:     Size  Location     Type
 13873 ;;  maskAddr        1    4[BANK1 ] unsigned char 
 13874 ;; Return value:  Size  Location     Type
 13875 ;;                  1    wreg      void 
 13876 ;; Registers used:
 13877 ;;		wreg, status,2, status,0
 13878 ;; Tracked objects:
 13879 ;;		On entry : 0/3D
 13880 ;;		On exit  : 3F/3D
 13881 ;;		Unchanged: 0/0
 13882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13884 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13886 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13887 ;;Total ram usage:        1 bytes
 13888 ;; Hardware stack levels used:    1
 13889 ;; Hardware stack levels required when called:   16
 13890 ;; This function calls:
 13891 ;;		Nothing
 13892 ;; This function is called by:
 13893 ;;		_I2C2_Open
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           	psect	text86
 13898  00A12C                     __ptext86:
 13899                           	opt callstack 0
 13900  00A12C                     _I2C2_SlaveSetSlaveMask:
 13901                           	opt callstack 12
 13902                           
 13903                           ; BSR set to: 1
 13904                           ;incstack = 0
 13905                           ;I2C2_SlaveSetSlaveMask@maskAddr stored from wreg
 13906  00A12C  0101               	movlb	1	; () banked
 13907  00A12E  6F04               	movwf	I2C2_SlaveSetSlaveMask@maskAddr& (0+255),b
 13908                           
 13909                           ;mcc_generated_files/i2c2_slave.c: 354: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c2_slave.c: 355: {;mcc_generated_file
      +                          s/i2c2_slave.c: 356:     I2C2ADR1 = ~maskAddr;
 13910  00A130  0101               	movlb	1	; () banked
 13911  00A132  5104               	movf	I2C2_SlaveSetSlaveMask@maskAddr& (0+255),w,b
 13912  00A134  0AFF               	xorlw	255
 13913  00A136  013D               	movlb	61	; () banked
 13914  00A138  6F5A               	movwf	90,b	;volatile
 13915                           
 13916                           ; BSR set to: 61
 13917  00A13A  0012               	return		;funcret
 13918  00A13C                     __end_of_I2C2_SlaveSetSlaveMask:
 13919                           	opt callstack 0
 13920                           
 13921 ;; *************** function _I2C2_SlaveSetSlaveAddr *****************
 13922 ;; Defined at:
 13923 ;;		line 349 in file "mcc_generated_files/i2c2_slave.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  slaveAddr       1    wreg     unsigned char 
 13926 ;; Auto vars:     Size  Location     Type
 13927 ;;  slaveAddr       1    4[BANK1 ] unsigned char 
 13928 ;; Return value:  Size  Location     Type
 13929 ;;                  1    wreg      void 
 13930 ;; Registers used:
 13931 ;;		wreg
 13932 ;; Tracked objects:
 13933 ;;		On entry : 3F/3D
 13934 ;;		On exit  : 0/0
 13935 ;;		Unchanged: 0/0
 13936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13941 ;;Total ram usage:        1 bytes
 13942 ;; Hardware stack levels used:    1
 13943 ;; Hardware stack levels required when called:   16
 13944 ;; This function calls:
 13945 ;;		Nothing
 13946 ;; This function is called by:
 13947 ;;		_I2C2_Open
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text87
 13952  00A3AE                     __ptext87:
 13953                           	opt callstack 0
 13954  00A3AE                     _I2C2_SlaveSetSlaveAddr:
 13955                           	opt callstack 12
 13956                           
 13957                           ; BSR set to: 61
 13958                           ;incstack = 0
 13959                           ;I2C2_SlaveSetSlaveAddr@slaveAddr stored from wreg
 13960  00A3AE  0101               	movlb	1	; () banked
 13961  00A3B0  6F04               	movwf	I2C2_SlaveSetSlaveAddr@slaveAddr& (0+255),b
 13962                           
 13963                           ;mcc_generated_files/i2c2_slave.c: 349: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c2_slave.c: 350: {;mcc_generated_fil
      +                          es/i2c2_slave.c: 351:     I2C2ADR0 = slaveAddr;
 13964  00A3B2  0060  F413  FD59   	movff	I2C2_SlaveSetSlaveAddr@slaveAddr,15705	;volatile
 13965  00A3B8  0012               	return		;funcret
 13966  00A3BA                     __end_of_I2C2_SlaveSetSlaveAddr:
 13967                           	opt callstack 0
 13968                           
 13969 ;; *************** function _I2C2_SlaveSetReadIntHandler *****************
 13970 ;; Defined at:
 13971 ;;		line 235 in file "mcc_generated_files/i2c2_slave.c"
 13972 ;; Parameters:    Size  Location     Type
 13973 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13974 ;;		 -> ReceiveHandler(1), I2C2_SlaveDefRdInterruptHandler(1), 
 13975 ;; Auto vars:     Size  Location     Type
 13976 ;;		None
 13977 ;; Return value:  Size  Location     Type
 13978 ;;                  1    wreg      void 
 13979 ;; Registers used:
 13980 ;;		wreg, status,2, status,0
 13981 ;; Tracked objects:
 13982 ;;		On entry : 3F/1
 13983 ;;		On exit  : 3F/1
 13984 ;;		Unchanged: 3F/0
 13985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13986 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13989 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13990 ;;Total ram usage:        2 bytes
 13991 ;; Hardware stack levels used:    1
 13992 ;; Hardware stack levels required when called:   16
 13993 ;; This function calls:
 13994 ;;		Nothing
 13995 ;; This function is called by:
 13996 ;;		_I2C2_Open
 13997 ;;		_ControllerInit
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001                           	psect	text88
 14002  00A252                     __ptext88:
 14003                           	opt callstack 0
 14004  00A252                     _I2C2_SlaveSetReadIntHandler:
 14005                           	opt callstack 13
 14006                           
 14007                           ; BSR set to: 1
 14008                           ;mcc_generated_files/i2c2_slave.c: 236:     I2C2_SlaveRdInterruptHandler = handler;
 14009                           
 14010                           ;incstack = 0
 14011  00A252  0060  F410  F296   	movff	I2C2_SlaveSetReadIntHandler@handler,_I2C2_SlaveRdInterruptHandler
 14012  00A258  0060  F414  F297   	movff	I2C2_SlaveSetReadIntHandler@handler+1,_I2C2_SlaveRdInterruptHandler+1
 14013                           
 14014                           ; BSR set to: 1
 14015  00A25E  0012               	return		;funcret
 14016  00A260                     __end_of_I2C2_SlaveSetReadIntHandler:
 14017                           	opt callstack 0
 14018                           
 14019 ;; *************** function _I2C2_SlaveSetIsrHandler *****************
 14020 ;; Defined at:
 14021 ;;		line 229 in file "mcc_generated_files/i2c2_slave.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14024 ;;		 -> I2C2_Isr(1), 
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;		None
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  1    wreg      void 
 14029 ;; Registers used:
 14030 ;;		wreg, status,2, status,0
 14031 ;; Tracked objects:
 14032 ;;		On entry : 3F/1
 14033 ;;		On exit  : 3F/1
 14034 ;;		Unchanged: 3F/0
 14035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14036 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14039 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14040 ;;Total ram usage:        2 bytes
 14041 ;; Hardware stack levels used:    1
 14042 ;; Hardware stack levels required when called:   16
 14043 ;; This function calls:
 14044 ;;		Nothing
 14045 ;; This function is called by:
 14046 ;;		_I2C2_Open
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           	psect	text89
 14051  00A260                     __ptext89:
 14052                           	opt callstack 0
 14053  00A260                     _I2C2_SlaveSetIsrHandler:
 14054                           	opt callstack 12
 14055                           
 14056                           ; BSR set to: 1
 14057                           ;mcc_generated_files/i2c2_slave.c: 229: void I2C2_SlaveSetIsrHandler(interruptHandler ha
      +                          ndler);mcc_generated_files/i2c2_slave.c: 230: {;mcc_generated_files/i2c2_slave.c: 231:  
      +                             I2C2_InterruptHandler = handler;
 14058                           
 14059                           ; BSR set to: 1
 14060                           ;incstack = 0
 14061  00A260  0060  F410  F0EE   	movff	I2C2_SlaveSetIsrHandler@handler,_I2C2_InterruptHandler
 14062  00A266  0060  F414  F0EF   	movff	I2C2_SlaveSetIsrHandler@handler+1,_I2C2_InterruptHandler+1
 14063                           
 14064                           ; BSR set to: 1
 14065  00A26C  0012               	return		;funcret
 14066  00A26E                     __end_of_I2C2_SlaveSetIsrHandler:
 14067                           	opt callstack 0
 14068                           
 14069 ;; *************** function _I2C2_SlaveSetBusColIntHandler *****************
 14070 ;; Defined at:
 14071 ;;		line 317 in file "mcc_generated_files/i2c2_slave.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14074 ;;		 -> I2C2_SlaveDefBusColInterruptHandler(1), 
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;		None
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  1    wreg      void 
 14079 ;; Registers used:
 14080 ;;		wreg, status,2, status,0
 14081 ;; Tracked objects:
 14082 ;;		On entry : 3F/1
 14083 ;;		On exit  : 3F/1
 14084 ;;		Unchanged: 3F/0
 14085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14086 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14089 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14090 ;;Total ram usage:        2 bytes
 14091 ;; Hardware stack levels used:    1
 14092 ;; Hardware stack levels required when called:   16
 14093 ;; This function calls:
 14094 ;;		Nothing
 14095 ;; This function is called by:
 14096 ;;		_I2C2_Open
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text90
 14101  00A26E                     __ptext90:
 14102                           	opt callstack 0
 14103  00A26E                     _I2C2_SlaveSetBusColIntHandler:
 14104                           	opt callstack 12
 14105                           
 14106                           ; BSR set to: 1
 14107                           ;mcc_generated_files/i2c2_slave.c: 318:     I2C2_SlaveBusColInterruptHandler = handler;
 14108                           
 14109                           ; BSR set to: 1
 14110                           ;incstack = 0
 14111  00A26E  0060  F410  F28E   	movff	I2C2_SlaveSetBusColIntHandler@handler,_I2C2_SlaveBusColInterruptHandler
 14112  00A274  0060  F414  F28F   	movff	I2C2_SlaveSetBusColIntHandler@handler+1,_I2C2_SlaveBusColInterruptHandler+1
 14113                           
 14114                           ; BSR set to: 1
 14115  00A27A  0012               	return		;funcret
 14116  00A27C                     __end_of_I2C2_SlaveSetBusColIntHandler:
 14117                           	opt callstack 0
 14118                           
 14119 ;; *************** function _I2C2_SlaveSetAddrIntHandler *****************
 14120 ;; Defined at:
 14121 ;;		line 285 in file "mcc_generated_files/i2c2_slave.c"
 14122 ;; Parameters:    Size  Location     Type
 14123 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14124 ;;		 -> I2C2_SlaveDefAddrInterruptHandler(1), 
 14125 ;; Auto vars:     Size  Location     Type
 14126 ;;		None
 14127 ;; Return value:  Size  Location     Type
 14128 ;;                  1    wreg      void 
 14129 ;; Registers used:
 14130 ;;		wreg, status,2, status,0
 14131 ;; Tracked objects:
 14132 ;;		On entry : 3F/1
 14133 ;;		On exit  : 3F/1
 14134 ;;		Unchanged: 3F/0
 14135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14136 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14139 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14140 ;;Total ram usage:        2 bytes
 14141 ;; Hardware stack levels used:    1
 14142 ;; Hardware stack levels required when called:   16
 14143 ;; This function calls:
 14144 ;;		Nothing
 14145 ;; This function is called by:
 14146 ;;		_I2C2_Open
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150                           	psect	text91
 14151  00A27C                     __ptext91:
 14152                           	opt callstack 0
 14153  00A27C                     _I2C2_SlaveSetAddrIntHandler:
 14154                           	opt callstack 12
 14155                           
 14156                           ; BSR set to: 1
 14157                           ;mcc_generated_files/i2c2_slave.c: 286:     I2C2_SlaveAddrInterruptHandler = handler;
 14158                           
 14159                           ; BSR set to: 1
 14160                           ;incstack = 0
 14161  00A27C  0060  F410  F290   	movff	I2C2_SlaveSetAddrIntHandler@handler,_I2C2_SlaveAddrInterruptHandler
 14162  00A282  0060  F414  F291   	movff	I2C2_SlaveSetAddrIntHandler@handler+1,_I2C2_SlaveAddrInterruptHandler+1
 14163                           
 14164                           ; BSR set to: 1
 14165  00A288  0012               	return		;funcret
 14166  00A28A                     __end_of_I2C2_SlaveSetAddrIntHandler:
 14167                           	opt callstack 0
 14168                           
 14169 ;; *************** function _I2C2_SlaveOpen *****************
 14170 ;; Defined at:
 14171 ;;		line 332 in file "mcc_generated_files/i2c2_slave.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;		None
 14174 ;; Auto vars:     Size  Location     Type
 14175 ;;		None
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  1    wreg      _Bool 
 14178 ;; Registers used:
 14179 ;;		None
 14180 ;; Tracked objects:
 14181 ;;		On entry : 3F/2
 14182 ;;		On exit  : 3F/3D
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14189 ;;Total ram usage:        0 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:   16
 14192 ;; This function calls:
 14193 ;;		Nothing
 14194 ;; This function is called by:
 14195 ;;		_I2C2_Open
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text92
 14200  00A416                     __ptext92:
 14201                           	opt callstack 0
 14202  00A416                     _I2C2_SlaveOpen:
 14203                           	opt callstack 12
 14204                           
 14205                           ; BSR set to: 2
 14206                           ;mcc_generated_files/i2c2_slave.c: 334:     if(!I2C2CON0bits.EN)
 14207                           
 14208                           ; BSR set to: 1
 14209                           ;incstack = 0
 14210  00A416  013D               	movlb	61	; () banked
 14211  00A418  BF5D               	btfsc	93,7,b	;volatile
 14212  00A41A  0012               	return	
 14213                           
 14214                           ; BSR set to: 61
 14215                           ;mcc_generated_files/i2c2_slave.c: 335:     {;mcc_generated_files/i2c2_slave.c: 336:    
      +                               I2C2CON0bits.EN = 1;
 14216  00A41C  8F5D               	bsf	93,7,b	;volatile
 14217                           
 14218                           ; BSR set to: 61
 14219                           
 14220                           ;mcc_generated_files/i2c2_slave.c: 337:         return 1;;	Return value of _I2C2_SlaveOp
      +                          en is never used
 14221  00A41E  0012               	return		;funcret
 14222  00A420                     __end_of_I2C2_SlaveOpen:
 14223                           	opt callstack 0
 14224                           
 14225 ;; *************** function _I2C2_SlaveEnableIrq *****************
 14226 ;; Defined at:
 14227 ;;		line 359 in file "mcc_generated_files/i2c2_slave.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;		None
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;		None
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1    wreg      void 
 14234 ;; Registers used:
 14235 ;;		None
 14236 ;; Tracked objects:
 14237 ;;		On entry : 3F/1
 14238 ;;		On exit  : 3F/3D
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14245 ;;Total ram usage:        0 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:   16
 14248 ;; This function calls:
 14249 ;;		Nothing
 14250 ;; This function is called by:
 14251 ;;		_I2C2_Open
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text93
 14256  009FEA                     __ptext93:
 14257                           	opt callstack 0
 14258  009FEA                     _I2C2_SlaveEnableIrq:
 14259                           	opt callstack 12
 14260                           
 14261                           ; BSR set to: 1
 14262                           ;mcc_generated_files/i2c2_slave.c: 361:     PIE6bits.I2C2IE = 1;
 14263                           
 14264                           ; BSR set to: 61
 14265                           ;incstack = 0
 14266  009FEA  0139               	movlb	57	; () banked
 14267  009FEC  8196               	bsf	150,0,b	;volatile
 14268                           
 14269                           ;mcc_generated_files/i2c2_slave.c: 362:     PIE6bits.I2C2EIE = 0;
 14270  009FEE  9396               	bcf	150,1,b	;volatile
 14271                           
 14272                           ;mcc_generated_files/i2c2_slave.c: 363:     PIE5bits.I2C2RXIE = 1;
 14273  009FF0  8D95               	bsf	149,6,b	;volatile
 14274                           
 14275                           ;mcc_generated_files/i2c2_slave.c: 364:     PIE5bits.I2C2TXIE = 1;
 14276  009FF2  8F95               	bsf	149,7,b	;volatile
 14277                           
 14278                           ;mcc_generated_files/i2c2_slave.c: 365:     I2C2PIEbits.PCIE = 1;
 14279  009FF4  013D               	movlb	61	; () banked
 14280  009FF6  8564               	bsf	100,2,b	;volatile
 14281                           
 14282                           ;mcc_generated_files/i2c2_slave.c: 366:     I2C2PIEbits.ADRIE = 0;
 14283  009FF8  9764               	bcf	100,3,b	;volatile
 14284                           
 14285                           ;mcc_generated_files/i2c2_slave.c: 367:     I2C2ERRbits.NACKIE = 0;
 14286  009FFA  9160               	bcf	96,0,b	;volatile
 14287                           
 14288                           ;mcc_generated_files/i2c2_slave.c: 369:     I2C2PIEbits.WRIE = 0;
 14289  009FFC  9964               	bcf	100,4,b	;volatile
 14290                           
 14291                           ; BSR set to: 61
 14292  009FFE  0012               	return		;funcret
 14293  00A000                     __end_of_I2C2_SlaveEnableIrq:
 14294                           	opt callstack 0
 14295                           
 14296 ;; *************** function _BuzzerTest *****************
 14297 ;; Defined at:
 14298 ;;		line 97 in file "buzzer.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  note            1    wreg     unsigned char 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;  note            1    8[BANK1 ] unsigned char 
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  1    wreg      void 
 14305 ;; Registers used:
 14306 ;;		wreg, status,2, status,0, cstack
 14307 ;; Tracked objects:
 14308 ;;		On entry : 3F/3
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14313 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14316 ;;Total ram usage:        3 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:   18
 14319 ;; This function calls:
 14320 ;;		_BuzzerOff
 14321 ;;		_BuzzerOn
 14322 ;;		_TMR4_Period8BitSet
 14323 ;;		_TMR4_SetInterruptHandler
 14324 ;;		_TMR4_Start
 14325 ;; This function is called by:
 14326 ;;		_main
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330                           	psect	text94
 14331  007E24                     __ptext94:
 14332                           	opt callstack 0
 14333  007E24                     _BuzzerTest:
 14334                           	opt callstack 12
 14335                           
 14336                           ; BSR set to: 61
 14337                           ;incstack = 0
 14338                           ;BuzzerTest@note stored from wreg
 14339  007E24  0101               	movlb	1	; () banked
 14340  007E26  6F08               	movwf	BuzzerTest@note& (0+255),b
 14341                           
 14342                           ;buzzer.c: 98:     TMR4_SetInterruptHandler(BuzzerTestHandler);
 14343  007E28  0E1C               	movlw	low _BuzzerTestHandler
 14344  007E2A  0101               	movlb	1	; () banked
 14345  007E2C  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 14346  007E2E  0E99               	movlw	high _BuzzerTestHandler
 14347  007E30  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14348  007E32  EC61  F051         	call	_TMR4_SetInterruptHandler	;wreg free
 14349                           
 14350                           ;buzzer.c: 99:     switch (note) {
 14351  007E36  D01B               	goto	l22055
 14352  007E38                     l22037:
 14353                           
 14354                           ; BSR set to: 1
 14355                           ;buzzer.c: 101:             BuzzerOn(0x8D);
 14356  007E38  0E8D               	movlw	141
 14357  007E3A  EC3A  F04F         	call	_BuzzerOn
 14358                           
 14359                           ;buzzer.c: 102:             break;
 14360  007E3E  D032               	goto	l22057
 14361  007E40                     l22039:
 14362                           
 14363                           ; BSR set to: 1
 14364                           ;buzzer.c: 104:             BuzzerOn(0xFC);
 14365  007E40  0EFC               	movlw	252
 14366  007E42  EC3A  F04F         	call	_BuzzerOn
 14367                           
 14368                           ;buzzer.c: 105:             break;
 14369  007E46  D02E               	goto	l22057
 14370  007E48                     l22041:
 14371                           
 14372                           ; BSR set to: 1
 14373                           ;buzzer.c: 107:             BuzzerOn(0xEE);
 14374  007E48  0EEE               	movlw	238
 14375  007E4A  EC3A  F04F         	call	_BuzzerOn
 14376                           
 14377                           ;buzzer.c: 108:             break;
 14378  007E4E  D02A               	goto	l22057
 14379  007E50                     l22043:
 14380                           
 14381                           ; BSR set to: 1
 14382                           ;buzzer.c: 110:             BuzzerOn(0xD4);
 14383  007E50  0ED4               	movlw	212
 14384  007E52  EC3A  F04F         	call	_BuzzerOn
 14385                           
 14386                           ;buzzer.c: 111:             break;
 14387  007E56  D026               	goto	l22057
 14388  007E58                     l22045:
 14389                           
 14390                           ; BSR set to: 1
 14391                           ;buzzer.c: 113:             BuzzerOn(0xBD);
 14392  007E58  0EBD               	movlw	189
 14393  007E5A  EC3A  F04F         	call	_BuzzerOn
 14394                           
 14395                           ;buzzer.c: 114:             break;
 14396  007E5E  D022               	goto	l22057
 14397  007E60                     l22047:
 14398                           
 14399                           ; BSR set to: 1
 14400                           ;buzzer.c: 116:             BuzzerOn(0xB2);
 14401  007E60  0EB2               	movlw	178
 14402  007E62  EC3A  F04F         	call	_BuzzerOn
 14403                           
 14404                           ;buzzer.c: 117:             break;
 14405  007E66  D01E               	goto	l22057
 14406  007E68                     l22049:
 14407                           
 14408                           ; BSR set to: 1
 14409                           ;buzzer.c: 119:             BuzzerOff();
 14410  007E68  ECA6  F050         	call	_BuzzerOff	;wreg free
 14411  007E6C  0012               	return	
 14412  007E6E                     l22055:
 14413                           
 14414                           ; BSR set to: 1
 14415  007E6E  5108               	movf	BuzzerTest@note& (0+255),w,b
 14416  007E70  6F06               	movwf	??_BuzzerTest& (0+255),b
 14417  007E72  6B07               	clrf	(??_BuzzerTest+1)& (0+255),b
 14418                           
 14419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14420                           ; Switch size 1, requested type "simple"
 14421                           ; Number of cases is 1, Range of values is 0 to 0
 14422                           ; switch strategies available:
 14423                           ; Name         Instructions Cycles
 14424                           ; simple_byte            4     3 (average)
 14425                           ;	Chosen strategy is simple_byte
 14426  007E74  5107               	movf	(??_BuzzerTest+1)& (0+255),w,b
 14427  007E76  0A00               	xorlw	0	; case 0
 14428  007E78  A4D8               	btfss	status,2,c
 14429  007E7A  D7F6               	goto	l22049
 14430                           
 14431                           ; BSR set to: 1
 14432                           ; Switch size 1, requested type "simple"
 14433                           ; Number of cases is 6, Range of values is 65 to 70
 14434                           ; switch strategies available:
 14435                           ; Name         Instructions Cycles
 14436                           ; simple_byte           19    10 (average)
 14437                           ;	Chosen strategy is simple_byte
 14438  007E7C  5106               	movf	??_BuzzerTest& (0+255),w,b
 14439  007E7E  0A41               	xorlw	65	; case 65
 14440  007E80  B4D8               	btfsc	status,2,c
 14441  007E82  D7DA               	goto	l22037
 14442  007E84  0A03               	xorlw	3	; case 66
 14443  007E86  B4D8               	btfsc	status,2,c
 14444  007E88  D7DB               	goto	l22039
 14445  007E8A  0A01               	xorlw	1	; case 67
 14446  007E8C  B4D8               	btfsc	status,2,c
 14447  007E8E  D7DC               	goto	l22041
 14448  007E90  0A07               	xorlw	7	; case 68
 14449  007E92  B4D8               	btfsc	status,2,c
 14450  007E94  D7DD               	goto	l22043
 14451  007E96  0A01               	xorlw	1	; case 69
 14452  007E98  B4D8               	btfsc	status,2,c
 14453  007E9A  D7DE               	goto	l22045
 14454  007E9C  0A03               	xorlw	3	; case 70
 14455  007E9E  B4D8               	btfsc	status,2,c
 14456  007EA0  D7DF               	goto	l22047
 14457  007EA2  D7E2               	goto	l22049
 14458  007EA4                     l22057:
 14459                           
 14460                           ; BSR set to: 57
 14461                           ;buzzer.c: 122:     TMR4_Period8BitSet(51);
 14462  007EA4  0E33               	movlw	51
 14463  007EA6  ECDD  F051         	call	_TMR4_Period8BitSet
 14464                           
 14465                           ;buzzer.c: 123:     TMR4_Start();
 14466  007EAA  EC40  F053         	call	_TMR4_Start	;wreg free
 14467  007EAE  0012               	return		;funcret
 14468  007EB0                     __end_of_BuzzerTest:
 14469                           	opt callstack 0
 14470                           
 14471 ;; *************** function _BuzzerCheck *****************
 14472 ;; Defined at:
 14473 ;;		line 427 in file "buzzer.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;		None
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;		None
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  1    wreg      void 
 14480 ;; Registers used:
 14481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14482 ;; Tracked objects:
 14483 ;;		On entry : 3D/1
 14484 ;;		On exit  : 3F/2
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14490 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;Total ram usage:        2 bytes
 14492 ;; Hardware stack levels used:    1
 14493 ;; Hardware stack levels required when called:   25
 14494 ;; This function calls:
 14495 ;;		_BuzzerOff
 14496 ;;		_BuzzerOn
 14497 ;;		_SetMonitorFailAlarm
 14498 ;;		_printf
 14499 ;; This function is called by:
 14500 ;;		_main
 14501 ;; This function uses a non-reentrant model
 14502 ;;
 14503                           
 14504                           	psect	text95
 14505  007CFE                     __ptext95:
 14506                           	opt callstack 0
 14507  007CFE                     _BuzzerCheck:
 14508                           	opt callstack 5
 14509                           
 14510                           ;buzzer.c: 428:     BuzzerOn(0x8D);
 14511                           
 14512                           ;incstack = 0
 14513  007CFE  0E8D               	movlw	141
 14514  007D00  EC3A  F04F         	call	_BuzzerOn
 14515                           
 14516                           ; BSR set to: 57
 14517                           ;buzzer.c: 429:     _delay((unsigned long)((250)*(64000000/4000.0)));
 14518  007D04  0E15               	movlw	21
 14519  007D06  0101               	movlb	1	; () banked
 14520  007D08  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14521  007D0A  0E4B               	movlw	75
 14522  007D0C  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14523  007D0E  0EBE               	movlw	190
 14524  007D10                     u22977:
 14525  007D10  2EE8               	decfsz	wreg,f,c
 14526  007D12  D7FE               	bra	u22977
 14527  007D14  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14528  007D16  D7FC               	bra	u22977
 14529  007D18  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14530  007D1A  D7FA               	bra	u22977
 14531  007D1C  F000               	nop	
 14532                           
 14533                           ;buzzer.c: 430:     BuzzerOff();
 14534  007D1E  ECA6  F050         	call	_BuzzerOff	;wreg free
 14535                           
 14536                           ; BSR set to: 57
 14537                           ;buzzer.c: 431:     if (detected==0) {
 14538  007D22  0100               	movlb	0	; () banked
 14539  007D24  51F8               	movf	_detected& (0+255),w,b
 14540  007D26  A4D8               	btfss	status,2,c
 14541  007D28  D02D               	goto	l21925
 14542                           
 14543                           ; BSR set to: 0
 14544                           ;buzzer.c: 432:         _delay((unsigned long)((100)*(64000000/4000.0)));
 14545  007D2A  0E09               	movlw	9
 14546  007D2C  0101               	movlb	1	; () banked
 14547  007D2E  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14548  007D30  0E1E               	movlw	30
 14549  007D32  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14550  007D34  0EE4               	movlw	228
 14551  007D36                     u22987:
 14552  007D36  2EE8               	decfsz	wreg,f,c
 14553  007D38  D7FE               	bra	u22987
 14554  007D3A  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14555  007D3C  D7FC               	bra	u22987
 14556  007D3E  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14557  007D40  D7FA               	bra	u22987
 14558  007D42  F000               	nop	
 14559                           
 14560                           ;buzzer.c: 433:         BuzzerOn(0x8D);
 14561  007D44  0E8D               	movlw	141
 14562  007D46  EC3A  F04F         	call	_BuzzerOn
 14563                           
 14564                           ; BSR set to: 57
 14565                           ;buzzer.c: 434:         _delay((unsigned long)((250)*(64000000/4000.0)));
 14566  007D4A  0E15               	movlw	21
 14567  007D4C  0101               	movlb	1	; () banked
 14568  007D4E  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14569  007D50  0E4B               	movlw	75
 14570  007D52  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14571  007D54  0EBE               	movlw	190
 14572  007D56                     u22997:
 14573  007D56  2EE8               	decfsz	wreg,f,c
 14574  007D58  D7FE               	bra	u22997
 14575  007D5A  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14576  007D5C  D7FC               	bra	u22997
 14577  007D5E  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14578  007D60  D7FA               	bra	u22997
 14579  007D62  F000               	nop	
 14580                           
 14581                           ;buzzer.c: 435:         BuzzerOff();
 14582  007D64  ECA6  F050         	call	_BuzzerOff	;wreg free
 14583                           
 14584                           ; BSR set to: 57
 14585                           ;buzzer.c: 436:         if (detected==0) {
 14586  007D68  0100               	movlb	0	; () banked
 14587  007D6A  51F8               	movf	_detected& (0+255),w,b
 14588  007D6C  A4D8               	btfss	status,2,c
 14589  007D6E  D00A               	goto	l21925
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;buzzer.c: 437:             SetMonitorFailAlarm();
 14593  007D70  EC64  F052         	call	_SetMonitorFailAlarm	;wreg free
 14594                           
 14595                           ; BSR set to: 2
 14596                           ;buzzer.c: 438:             printf("Error Buzzer\r\n");
 14597  007D74  0E2F               	movlw	low STR_20
 14598  007D76  0101               	movlb	1	; () banked
 14599  007D78  6F71               	movwf	printf@fmt& (0+255),b
 14600  007D7A  0EFF               	movlw	high STR_20
 14601  007D7C  6F72               	movwf	(printf@fmt+1)& (0+255),b
 14602  007D7E  ECFF  F04C         	call	_printf	;wreg free
 14603  007D82  0012               	return	
 14604  007D84                     l21925:
 14605                           
 14606                           ; BSR set to: 0
 14607                           ;buzzer.c: 442:     printf("Found Buzzer\r\n");
 14608  007D84  0E20               	movlw	low STR_21
 14609  007D86  0101               	movlb	1	; () banked
 14610  007D88  6F71               	movwf	printf@fmt& (0+255),b
 14611  007D8A  0EFF               	movlw	high STR_21
 14612  007D8C  6F72               	movwf	(printf@fmt+1)& (0+255),b
 14613  007D8E  ECFF  F04C         	call	_printf	;wreg free
 14614                           
 14615                           ; BSR set to: 2
 14616  007D92  0012               	return		;funcret
 14617  007D94                     __end_of_BuzzerCheck:
 14618                           	opt callstack 0
 14619                           
 14620 ;; *************** function _ButtonInit *****************
 14621 ;; Defined at:
 14622 ;;		line 34 in file "buttons.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;		None
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;		None
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  1    wreg      void 
 14629 ;; Registers used:
 14630 ;;		wreg, status,2, status,0, cstack
 14631 ;; Tracked objects:
 14632 ;;		On entry : 3F/1
 14633 ;;		On exit  : 3F/1
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14640 ;;Total ram usage:        0 bytes
 14641 ;; Hardware stack levels used:    1
 14642 ;; Hardware stack levels required when called:   17
 14643 ;; This function calls:
 14644 ;;		_TMR1_SetInterruptHandler
 14645 ;;		_TMR1_StartTimer
 14646 ;; This function is called by:
 14647 ;;		_main
 14648 ;; This function uses a non-reentrant model
 14649 ;;
 14650                           
 14651                           	psect	text96
 14652  0099D4                     __ptext96:
 14653                           	opt callstack 0
 14654  0099D4                     _ButtonInit:
 14655                           	opt callstack 13
 14656                           
 14657                           ; BSR set to: 1
 14658                           ;buttons.c: 35:     ledCnt=0;
 14659                           
 14660                           ; BSR set to: 2
 14661                           ;incstack = 0
 14662  0099D4  0E00               	movlw	0
 14663  0099D6  0100               	movlb	0	; () banked
 14664  0099D8  6FEB               	movwf	(_ledCnt+1)& (0+255),b
 14665  0099DA  0E00               	movlw	0
 14666  0099DC  6FEA               	movwf	_ledCnt& (0+255),b
 14667                           
 14668                           ;buttons.c: 36:     ledType=0;
 14669  0099DE  0E00               	movlw	0
 14670  0099E0  6FFB               	movwf	_ledType& (0+255),b
 14671                           
 14672                           ;buttons.c: 37:     muteButton=0;
 14673  0099E2  0E00               	movlw	0
 14674  0099E4  6FFD               	movwf	_muteButton& (0+255),b
 14675                           
 14676                           ;buttons.c: 38:     histButton=0;
 14677  0099E6  0E00               	movlw	0
 14678  0099E8  6FFC               	movwf	_histButton& (0+255),b
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;buttons.c: 39:     TMR1_SetInterruptHandler(ButtonTask);
 14682  0099EA  0ED0               	movlw	low _ButtonTask
 14683  0099EC  0101               	movlb	1	; () banked
 14684  0099EE  6F04               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 14685  0099F0  0E65               	movlw	high _ButtonTask
 14686  0099F2  6F05               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14687  0099F4  EC45  F051         	call	_TMR1_SetInterruptHandler	;wreg free
 14688                           
 14689                           ; BSR set to: 1
 14690                           ;buttons.c: 40:     TMR1_StartTimer();
 14691  0099F8  EC26  F053         	call	_TMR1_StartTimer	;wreg free
 14692                           
 14693                           ; BSR set to: 1
 14694  0099FC  0012               	return		;funcret
 14695  0099FE                     __end_of_ButtonInit:
 14696                           	opt callstack 0
 14697                           
 14698 ;; *************** function _TMR1_StartTimer *****************
 14699 ;; Defined at:
 14700 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 14701 ;; Parameters:    Size  Location     Type
 14702 ;;		None
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;		None
 14705 ;; Return value:  Size  Location     Type
 14706 ;;                  1    wreg      void 
 14707 ;; Registers used:
 14708 ;;		None
 14709 ;; Tracked objects:
 14710 ;;		On entry : 3F/1
 14711 ;;		On exit  : 3F/1
 14712 ;;		Unchanged: 3F/0
 14713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14718 ;;Total ram usage:        0 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; Hardware stack levels required when called:   16
 14721 ;; This function calls:
 14722 ;;		Nothing
 14723 ;; This function is called by:
 14724 ;;		_ButtonInit
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text97
 14729  00A64C                     __ptext97:
 14730                           	opt callstack 0
 14731  00A64C                     _TMR1_StartTimer:
 14732                           	opt callstack 13
 14733                           
 14734                           ; BSR set to: 1
 14735                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 14736                           
 14737                           ; BSR set to: 1
 14738                           ;incstack = 0
 14739  00A64C  80B2               	bsf	178,0,c	;volatile
 14740                           
 14741                           ; BSR set to: 1
 14742  00A64E  0012               	return		;funcret
 14743  00A650                     __end_of_TMR1_StartTimer:
 14744                           	opt callstack 0
 14745                           
 14746 ;; *************** function _TMR1_SetInterruptHandler *****************
 14747 ;; Defined at:
 14748 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 14751 ;;		 -> ButtonTask(1), TMR1_DefaultInterruptHandler(1), 
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;		None
 14754 ;; Return value:  Size  Location     Type
 14755 ;;                  1    wreg      void 
 14756 ;; Registers used:
 14757 ;;		wreg, status,2, status,0
 14758 ;; Tracked objects:
 14759 ;;		On entry : 3F/1
 14760 ;;		On exit  : 3F/1
 14761 ;;		Unchanged: 3F/0
 14762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14763 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14766 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14767 ;;Total ram usage:        2 bytes
 14768 ;; Hardware stack levels used:    1
 14769 ;; Hardware stack levels required when called:   16
 14770 ;; This function calls:
 14771 ;;		Nothing
 14772 ;; This function is called by:
 14773 ;;		_TMR1_Initialize
 14774 ;;		_ButtonInit
 14775 ;; This function uses a non-reentrant model
 14776 ;;
 14777                           
 14778                           	psect	text98
 14779  00A28A                     __ptext98:
 14780                           	opt callstack 0
 14781  00A28A                     _TMR1_SetInterruptHandler:
 14782                           	opt callstack 12
 14783                           
 14784                           ; BSR set to: 1
 14785                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 14786                           
 14787                           ; BSR set to: 1
 14788                           ;incstack = 0
 14789  00A28A  0060  F410  F2DB   	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 14790  00A290  0060  F414  F2DC   	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 14791                           
 14792                           ; BSR set to: 1
 14793  00A296  0012               	return		;funcret
 14794  00A298                     __end_of_TMR1_SetInterruptHandler:
 14795                           	opt callstack 0
 14796                           
 14797 ;; *************** function _AlarmInit *****************
 14798 ;; Defined at:
 14799 ;;		line 571 in file "alarm.c"
 14800 ;; Parameters:    Size  Location     Type
 14801 ;;		None
 14802 ;; Auto vars:     Size  Location     Type
 14803 ;;  i               2    6[BANK1 ] int 
 14804 ;; Return value:  Size  Location     Type
 14805 ;;                  1    wreg      void 
 14806 ;; Registers used:
 14807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14808 ;; Tracked objects:
 14809 ;;		On entry : 3F/0
 14810 ;;		On exit  : 3C/0
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14814 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14816 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14817 ;;Total ram usage:        2 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:   19
 14820 ;; This function calls:
 14821 ;;		_BuzzerInit
 14822 ;;		_TMR5_SetInterruptHandler
 14823 ;;		_TMR5_StartTimer
 14824 ;; This function is called by:
 14825 ;;		_main
 14826 ;; This function uses a non-reentrant model
 14827 ;;
 14828                           
 14829                           	psect	text99
 14830  0081D4                     __ptext99:
 14831                           	opt callstack 0
 14832  0081D4                     _AlarmInit:
 14833                           	opt callstack 11
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;alarm.c: 572:     BuzzerInit();
 14837                           
 14838                           ; BSR set to: 1
 14839                           ;incstack = 0
 14840  0081D4  EC1A  F04C         	call	_BuzzerInit	;wreg free
 14841                           
 14842                           ; BSR set to: 2
 14843                           ;alarm.c: 573:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 14844  0081D8  0E00               	movlw	0
 14845  0081DA  0101               	movlb	1	; () banked
 14846  0081DC  6F07               	movwf	(AlarmInit@i+1)& (0+255),b
 14847  0081DE  0E00               	movlw	0
 14848  0081E0  6F06               	movwf	AlarmInit@i& (0+255),b
 14849  0081E2                     l21845:
 14850                           
 14851                           ; BSR set to: 1
 14852                           ;alarm.c: 574:         alarms[i] = 0;
 14853  0081E2  90D8               	bcf	status,0,c
 14854  0081E4  3506               	rlcf	AlarmInit@i& (0+255),w,b
 14855  0081E6  6ED9               	movwf	fsr2l,c
 14856  0081E8  3507               	rlcf	(AlarmInit@i+1)& (0+255),w,b
 14857  0081EA  6EDA               	movwf	fsr2h,c
 14858  0081EC  0E00               	movlw	low _alarms
 14859  0081EE  26D9               	addwf	fsr2l,f,c
 14860  0081F0  0E03               	movlw	high _alarms
 14861  0081F2  22DA               	addwfc	fsr2h,f,c
 14862  0081F4  0E00               	movlw	0
 14863  0081F6  6EDE               	movwf	postinc2,c
 14864  0081F8  0E00               	movlw	0
 14865  0081FA  6EDD               	movwf	postdec2,c
 14866                           
 14867                           ;alarm.c: 575:         testAlarm[i] =0;
 14868  0081FC  90D8               	bcf	status,0,c
 14869  0081FE  3506               	rlcf	AlarmInit@i& (0+255),w,b
 14870  008200  6ED9               	movwf	fsr2l,c
 14871  008202  3507               	rlcf	(AlarmInit@i+1)& (0+255),w,b
 14872  008204  6EDA               	movwf	fsr2h,c
 14873  008206  0E26               	movlw	low _testAlarm
 14874  008208  26D9               	addwf	fsr2l,f,c
 14875  00820A  0E03               	movlw	high _testAlarm
 14876  00820C  22DA               	addwfc	fsr2h,f,c
 14877  00820E  0E00               	movlw	0
 14878  008210  6EDE               	movwf	postinc2,c
 14879  008212  0E00               	movlw	0
 14880  008214  6EDD               	movwf	postdec2,c
 14881                           
 14882                           ; BSR set to: 1
 14883                           ;alarm.c: 576:     }
 14884  008216  4B06               	infsnz	AlarmInit@i& (0+255),f,b
 14885  008218  2B07               	incf	(AlarmInit@i+1)& (0+255),f,b
 14886                           
 14887                           ; BSR set to: 1
 14888  00821A  5107               	movf	(AlarmInit@i+1)& (0+255),w,b
 14889  00821C  E104               	bnz	u21440
 14890  00821E  0E13               	movlw	19
 14891  008220  5D06               	subwf	AlarmInit@i& (0+255),w,b
 14892  008222  A0D8               	btfss	status,0,c
 14893  008224  D7DE               	goto	l21845
 14894  008226                     u21440:
 14895                           
 14896                           ; BSR set to: 1
 14897                           ;alarm.c: 577:     displayStatus = 0;
 14898  008226  0E00               	movlw	0
 14899  008228  0100               	movlb	0	; () banked
 14900  00822A  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 14901  00822C  0E00               	movlw	0
 14902  00822E  6FE0               	movwf	_displayStatus& (0+255),b
 14903                           
 14904                           ;alarm.c: 578:     alarmPmax = 40;
 14905  008230  0E00               	movlw	0
 14906  008232  0102               	movlb	2	; () banked
 14907  008234  6FD8               	movwf	(_alarmPmax+1)& (0+255),b
 14908  008236  0E28               	movlw	40
 14909  008238  6FD7               	movwf	_alarmPmax& (0+255),b
 14910                           
 14911                           ;alarm.c: 579:     alarmCheck = 0;
 14912  00823A  0E00               	movlw	0
 14913  00823C  6FA3               	movwf	_alarmCheck& (0+255),b
 14914                           
 14915                           ; BSR set to: 2
 14916                           ;alarm.c: 581:     TMR5_SetInterruptHandler(AlarmHandler);
 14917  00823E  0EFC               	movlw	low _AlarmHandler
 14918  008240  0101               	movlb	1	; () banked
 14919  008242  6F04               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 14920  008244  0E87               	movlw	high _AlarmHandler
 14921  008246  6F05               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14922  008248  EC4C  F051         	call	_TMR5_SetInterruptHandler	;wreg free
 14923                           
 14924                           ; BSR set to: 1
 14925                           ;alarm.c: 582:     TMR5_StartTimer();
 14926  00824C  EC28  F053         	call	_TMR5_StartTimer	;wreg free
 14927  008250  0012               	return		;funcret
 14928  008252                     __end_of_AlarmInit:
 14929                           	opt callstack 0
 14930                           
 14931 ;; *************** function _TMR5_StartTimer *****************
 14932 ;; Defined at:
 14933 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 14934 ;; Parameters:    Size  Location     Type
 14935 ;;		None
 14936 ;; Auto vars:     Size  Location     Type
 14937 ;;		None
 14938 ;; Return value:  Size  Location     Type
 14939 ;;                  1    wreg      void 
 14940 ;; Registers used:
 14941 ;;		None
 14942 ;; Tracked objects:
 14943 ;;		On entry : 3C/2
 14944 ;;		On exit  : 3C/0
 14945 ;;		Unchanged: 3C/0
 14946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14951 ;;Total ram usage:        0 bytes
 14952 ;; Hardware stack levels used:    1
 14953 ;; Hardware stack levels required when called:   16
 14954 ;; This function calls:
 14955 ;;		Nothing
 14956 ;; This function is called by:
 14957 ;;		_HistAlarm
 14958 ;;		_AlarmInit
 14959 ;; This function uses a non-reentrant model
 14960 ;;
 14961                           
 14962                           	psect	text100
 14963  00A650                     __ptext100:
 14964                           	opt callstack 0
 14965  00A650                     _TMR5_StartTimer:
 14966                           	opt callstack 13
 14967                           
 14968                           ;mcc_generated_files/tmr5.c: 102:     T5CONbits.TMR5ON = 1;
 14969                           
 14970                           ;incstack = 0
 14971  00A650  809A               	bsf	154,0,c	;volatile
 14972  00A652  0012               	return		;funcret
 14973  00A654                     __end_of_TMR5_StartTimer:
 14974                           	opt callstack 0
 14975                           
 14976 ;; *************** function _TMR5_SetInterruptHandler *****************
 14977 ;; Defined at:
 14978 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 14981 ;;		 -> AlarmHandler(1), TMR5_DefaultInterruptHandler(1), 
 14982 ;; Auto vars:     Size  Location     Type
 14983 ;;		None
 14984 ;; Return value:  Size  Location     Type
 14985 ;;                  1    wreg      void 
 14986 ;; Registers used:
 14987 ;;		wreg, status,2, status,0
 14988 ;; Tracked objects:
 14989 ;;		On entry : 3F/1
 14990 ;;		On exit  : 3F/1
 14991 ;;		Unchanged: 3F/0
 14992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14993 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14996 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14997 ;;Total ram usage:        2 bytes
 14998 ;; Hardware stack levels used:    1
 14999 ;; Hardware stack levels required when called:   16
 15000 ;; This function calls:
 15001 ;;		Nothing
 15002 ;; This function is called by:
 15003 ;;		_TMR5_Initialize
 15004 ;;		_AlarmInit
 15005 ;; This function uses a non-reentrant model
 15006 ;;
 15007                           
 15008                           	psect	text101
 15009  00A298                     __ptext101:
 15010                           	opt callstack 0
 15011  00A298                     _TMR5_SetInterruptHandler:
 15012                           	opt callstack 12
 15013                           
 15014                           ; BSR set to: 1
 15015                           ;mcc_generated_files/tmr5.c: 179:     TMR5_InterruptHandler = InterruptHandler;
 15016                           
 15017                           ;incstack = 0
 15018  00A298  0060  F410  F2E1   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15019  00A29E  0060  F414  F2E2   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15020                           
 15021                           ; BSR set to: 1
 15022  00A2A4  0012               	return		;funcret
 15023  00A2A6                     __end_of_TMR5_SetInterruptHandler:
 15024                           	opt callstack 0
 15025                           
 15026 ;; *************** function _BuzzerInit *****************
 15027 ;; Defined at:
 15028 ;;		line 405 in file "buzzer.c"
 15029 ;; Parameters:    Size  Location     Type
 15030 ;;		None
 15031 ;; Auto vars:     Size  Location     Type
 15032 ;;		None
 15033 ;; Return value:  Size  Location     Type
 15034 ;;                  1    wreg      void 
 15035 ;; Registers used:
 15036 ;;		wreg, status,2, status,0, cstack
 15037 ;; Tracked objects:
 15038 ;;		On entry : 3F/0
 15039 ;;		On exit  : 3F/2
 15040 ;;		Unchanged: 0/0
 15041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15046 ;;Total ram usage:        0 bytes
 15047 ;; Hardware stack levels used:    1
 15048 ;; Hardware stack levels required when called:   18
 15049 ;; This function calls:
 15050 ;;		_BuzzerOff
 15051 ;;		_CMP1_SetIntHandler
 15052 ;;		_TMR4_SetInterruptHandler
 15053 ;; This function is called by:
 15054 ;;		_AlarmInit
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058                           	psect	text102
 15059  009834                     __ptext102:
 15060                           	opt callstack 0
 15061  009834                     _BuzzerInit:
 15062                           	opt callstack 11
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;buzzer.c: 407:     TMR4_SetInterruptHandler(BuzzerHandler);
 15066                           
 15067                           ; BSR set to: 1
 15068                           ;incstack = 0
 15069  009834  0EDA               	movlw	low _BuzzerHandler
 15070  009836  0101               	movlb	1	; () banked
 15071  009838  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15072  00983A  0EA5               	movlw	high _BuzzerHandler
 15073  00983C  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15074  00983E  EC61  F051         	call	_TMR4_SetInterruptHandler	;wreg free
 15075                           
 15076                           ;buzzer.c: 408:     CMP1_SetIntHandler(BuzzerCMPHandler);
 15077  009842  0EAA               	movlw	low _BuzzerCMPHandler
 15078  009844  6F04               	movwf	CMP1_SetIntHandler@handler& (0+255),b
 15079  009846  0E9B               	movlw	high _BuzzerCMPHandler
 15080  009848  6F05               	movwf	(CMP1_SetIntHandler@handler+1)& (0+255),b
 15081  00984A  EC53  F051         	call	_CMP1_SetIntHandler	;wreg free
 15082                           
 15083                           ; BSR set to: 1
 15084                           ;buzzer.c: 409:     BuzzerOff();
 15085  00984E  ECA6  F050         	call	_BuzzerOff	;wreg free
 15086                           
 15087                           ; BSR set to: 57
 15088                           ;buzzer.c: 410:     detected = 1;
 15089  009852  0E01               	movlw	1
 15090  009854  0100               	movlb	0	; () banked
 15091  009856  6FF8               	movwf	_detected& (0+255),b
 15092                           
 15093                           ; BSR set to: 0
 15094                           ;buzzer.c: 411:     checkController = 0;
 15095  009858  0E00               	movlw	0
 15096  00985A  0102               	movlb	2	; () banked
 15097  00985C  6FB2               	movwf	_checkController& (0+255),b
 15098                           
 15099                           ; BSR set to: 2
 15100                           ;buzzer.c: 412:     controllerDetected = 0;
 15101  00985E  0E00               	movlw	0
 15102  009860  6FB1               	movwf	_controllerDetected& (0+255),b
 15103                           
 15104                           ; BSR set to: 2
 15105  009862  0012               	return		;funcret
 15106  009864                     __end_of_BuzzerInit:
 15107                           	opt callstack 0
 15108                           
 15109 ;; *************** function _CMP1_SetIntHandler *****************
 15110 ;; Defined at:
 15111 ;;		line 94 in file "mcc_generated_files/cmp1.c"
 15112 ;; Parameters:    Size  Location     Type
 15113 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 15114 ;;		 -> BuzzerCMPHandler(1), 
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  1    wreg      void 
 15119 ;; Registers used:
 15120 ;;		wreg, status,2, status,0
 15121 ;; Tracked objects:
 15122 ;;		On entry : 3F/1
 15123 ;;		On exit  : 3F/1
 15124 ;;		Unchanged: 3F/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15126 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;Total ram usage:        2 bytes
 15131 ;; Hardware stack levels used:    1
 15132 ;; Hardware stack levels required when called:   16
 15133 ;; This function calls:
 15134 ;;		Nothing
 15135 ;; This function is called by:
 15136 ;;		_BuzzerInit
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           	psect	text103
 15141  00A2A6                     __ptext103:
 15142                           	opt callstack 0
 15143  00A2A6                     _CMP1_SetIntHandler:
 15144                           	opt callstack 12
 15145                           
 15146                           ; BSR set to: 1
 15147                           ;mcc_generated_files/cmp1.c: 95:     CMP1_InterruptHandler = handler;
 15148                           
 15149                           ; BSR set to: 2
 15150                           ;incstack = 0
 15151  00A2A6  0060  F410  F28A   	movff	CMP1_SetIntHandler@handler,_CMP1_InterruptHandler
 15152  00A2AC  0060  F414  F28B   	movff	CMP1_SetIntHandler@handler+1,_CMP1_InterruptHandler+1
 15153                           
 15154                           ; BSR set to: 1
 15155  00A2B2  0012               	return		;funcret
 15156  00A2B4                     __end_of_CMP1_SetIntHandler:
 15157                           	opt callstack 0
 15158                           
 15159 ;; *************** function _AlarmCheckTask *****************
 15160 ;; Defined at:
 15161 ;;		line 510 in file "alarm.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;		None
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;  type            2    7[BANK2 ] int 
 15166 ;;  id              2    9[BANK2 ] int 
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  1    wreg      void 
 15169 ;; Registers used:
 15170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15171 ;; Tracked objects:
 15172 ;;		On entry : 3D/3
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15177 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15178 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15179 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15180 ;;Total ram usage:       11 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:   28
 15183 ;; This function calls:
 15184 ;;		_AlarmClear
 15185 ;;		_AlarmSet
 15186 ;;		_AlarmUpdateLCD
 15187 ;;		_AnyAlarm
 15188 ;;		_BaterryLowAlarmHigh
 15189 ;;		_BaterryLowAlarmMed
 15190 ;;		_BatteryFailAlarm
 15191 ;;		_BuzzerClear
 15192 ;;		_BuzzerSet
 15193 ;;		_CircuitFailureAlarm
 15194 ;;		_ClearAlarmLED
 15195 ;;		_ControlFailAlarm
 15196 ;;		_EPAboveSetAlarm
 15197 ;;		_EPBelowSetAlarm
 15198 ;;		_GasFailureAlarm
 15199 ;;		_HighPressureAlarmHigh
 15200 ;;		_HighPressureAlarmLow
 15201 ;;		_HigherAlarm
 15202 ;;		_IPAboveSetAlarm
 15203 ;;		_IPBelowSetAlarm
 15204 ;;		_MonitorFailAlarm
 15205 ;;		_NoPowerSupplyAlarm
 15206 ;;		_SetAlarmLED
 15207 ;;		_SetAlarmSV1
 15208 ;;		_TdeTooLongAlarm
 15209 ;;		_TdiTooLongAlarm
 15210 ;;		_VAboveMaxAlarm
 15211 ;;		_VBelowMinAlarm
 15212 ;;		_VeryHighPressureAlarmHigh
 15213 ;;		___wmul
 15214 ;; This function is called by:
 15215 ;;		_main
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           	psect	text104
 15220  004DF6                     __ptext104:
 15221                           	opt callstack 0
 15222  004DF6                     _AlarmCheckTask:
 15223                           	opt callstack 2
 15224                           
 15225                           ;alarm.c: 511:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
 15226                           
 15227                           ; BSR set to: 1
 15228                           ;incstack = 0
 15229  004DF6  0E00               	movlw	0
 15230  004DF8  0102               	movlb	2	; () banked
 15231  004DFA  6FFB               	movwf	_AlarmCheckTask$4558& (0+255),b
 15232  004DFC  0101               	movlb	1	; () banked
 15233  004DFE  51F9               	movf	_controlSV1& (0+255),w,b
 15234  004E00  B4D8               	btfsc	status,2,c
 15235  004E02  D00C               	goto	l21981
 15236                           
 15237                           ; BSR set to: 1
 15238  004E04  51F8               	movf	_monitorSV1& (0+255),w,b
 15239  004E06  B4D8               	btfsc	status,2,c
 15240  004E08  D009               	goto	l21981
 15241                           
 15242                           ; BSR set to: 1
 15243  004E0A  51FB               	movf	_veryHighSV1& (0+255),w,b
 15244  004E0C  B4D8               	btfsc	status,2,c
 15245  004E0E  D006               	goto	l21981
 15246                           
 15247                           ; BSR set to: 1
 15248  004E10  51FA               	movf	_batterySV1& (0+255),w,b
 15249  004E12  B4D8               	btfsc	status,2,c
 15250  004E14  D003               	goto	l21981
 15251                           
 15252                           ; BSR set to: 1
 15253  004E16  0E01               	movlw	1
 15254  004E18  0102               	movlb	2	; () banked
 15255  004E1A  6FFB               	movwf	_AlarmCheckTask$4558& (0+255),b
 15256  004E1C                     l21981:
 15257  004E1C  0102               	movlb	2	; () banked
 15258  004E1E  51FB               	movf	_AlarmCheckTask$4558& (0+255),w,b
 15259  004E20  B4D8               	btfsc	status,2,c
 15260  004E22  D002               	goto	u21580
 15261  004E24  0E01               	movlw	1
 15262  004E26  D001               	goto	u21590
 15263  004E28                     u21580:
 15264  004E28  0E00               	movlw	0
 15265  004E2A                     u21590:
 15266  004E2A  EC4C  F04B         	call	_SetAlarmSV1
 15267                           
 15268                           ;alarm.c: 512:     if (alarmCheck == 0) return;
 15269  004E2E  0102               	movlb	2	; () banked
 15270  004E30  51A3               	movf	_alarmCheck& (0+255),w,b
 15271  004E32  B4D8               	btfsc	status,2,c
 15272  004E34  0012               	return	
 15273                           
 15274                           ; BSR set to: 2
 15275                           ;alarm.c: 513:     alarmCheck = 0;
 15276  004E36  0E00               	movlw	0
 15277  004E38  6FA3               	movwf	_alarmCheck& (0+255),b
 15278                           
 15279                           ;alarm.c: 515:     static int current = 0;;alarm.c: 518:     for (int id=0; id<sizeof(al
      +                          armData)/sizeof(a); id++) {
 15280  004E3A  0E00               	movlw	0
 15281  004E3C  6FFF               	movwf	(AlarmCheckTask@id+1)& (0+255),b
 15282  004E3E  0E00               	movlw	0
 15283  004E40  6FFE               	movwf	AlarmCheckTask@id& (0+255),b
 15284  004E42                     l21993:
 15285                           
 15286                           ; BSR set to: 2
 15287                           ;alarm.c: 519:         if (alarmData[id].func() || testAlarm[id]) {
 15288  004E42  0060  FBF8  F104   	movff	AlarmCheckTask@id,___wmul@multiplier
 15289  004E48  0060  FBFC  F105   	movff	AlarmCheckTask@id+1,___wmul@multiplier+1
 15290  004E4E  0E00               	movlw	0
 15291  004E50  0101               	movlb	1	; () banked
 15292  004E52  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15293  004E54  0E15               	movlw	21
 15294  004E56  6F06               	movwf	___wmul@multiplicand& (0+255),b
 15295  004E58  EC60  F04C         	call	___wmul	;wreg free
 15296  004E5C  0E27               	movlw	low (_alarmData+19)
 15297  004E5E  2504               	addwf	?___wmul& (0+255),w,b
 15298  004E60  6ED9               	movwf	fsr2l,c
 15299  004E62  0E09               	movlw	high (_alarmData+19)
 15300  004E64  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 15301  004E66  6EDA               	movwf	fsr2h,c
 15302  004E68  006F FF78  F2F9    	movff	postinc2,_AlarmCheckTask$6537
 15303  004E6E  006F FF74  F2FA    	movff	postdec2,_AlarmCheckTask$6537+1
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;alarm.c: 519:         if (alarmData[id].func() || testAlarm[id]) {
 15307  004E74  D801               	call	u21618
 15308  004E76  D00A               	goto	u21619
 15309  004E78                     u21618:
 15310  004E78  0005               	push	
 15311  004E7A  6EFA               	movwf	pclath,c
 15312  004E7C  0102               	movlb	2	; () banked
 15313  004E7E  51F9               	movf	_AlarmCheckTask$6537& (0+255),w,b
 15314  004E80  6EFD               	movwf	tosl,c
 15315  004E82  51FA               	movf	(_AlarmCheckTask$6537+1)& (0+255),w,b
 15316  004E84  6EFE               	movwf	tosh,c
 15317  004E86  6AFF               	clrf	tosu,c
 15318  004E88  50FA               	movf	pclath,w,c
 15319  004E8A  0012               	return		;indir
 15320  004E8C                     u21619:
 15321  004E8C  0900               	iorlw	0
 15322  004E8E  A4D8               	btfss	status,2,c
 15323  004E90  D00E               	goto	u21630
 15324  004E92  90D8               	bcf	status,0,c
 15325  004E94  0102               	movlb	2	; () banked
 15326  004E96  35FE               	rlcf	AlarmCheckTask@id& (0+255),w,b
 15327  004E98  6ED9               	movwf	fsr2l,c
 15328  004E9A  35FF               	rlcf	(AlarmCheckTask@id+1)& (0+255),w,b
 15329  004E9C  6EDA               	movwf	fsr2h,c
 15330  004E9E  0E26               	movlw	low _testAlarm
 15331  004EA0  26D9               	addwf	fsr2l,f,c
 15332  004EA2  0E03               	movlw	high _testAlarm
 15333  004EA4  22DA               	addwfc	fsr2h,f,c
 15334  004EA6  50DE               	movf	postinc2,w,c
 15335  004EA8  10DE               	iorwf	postinc2,w,c
 15336  004EAA  B4D8               	btfsc	status,2,c
 15337  004EAC  D005               	goto	l22001
 15338  004EAE                     u21630:
 15339                           
 15340                           ;alarm.c: 520:             AlarmSet(id);
 15341  004EAE  0102               	movlb	2	; () banked
 15342  004EB0  51FE               	movf	AlarmCheckTask@id& (0+255),w,b
 15343  004EB2  ECCB  F04E         	call	_AlarmSet
 15344                           
 15345                           ;alarm.c: 521:         } else {
 15346  004EB6  D003               	goto	l22003
 15347  004EB8                     l22001:
 15348                           
 15349                           ; BSR set to: 2
 15350                           ;alarm.c: 522:             AlarmClear(id);
 15351  004EB8  51FE               	movf	AlarmCheckTask@id& (0+255),w,b
 15352  004EBA  ECDB  F04E         	call	_AlarmClear
 15353  004EBE                     l22003:
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;alarm.c: 524:     }
 15357  004EBE  0102               	movlb	2	; () banked
 15358  004EC0  4BFE               	infsnz	AlarmCheckTask@id& (0+255),f,b
 15359  004EC2  2BFF               	incf	(AlarmCheckTask@id+1)& (0+255),f,b
 15360                           
 15361                           ; BSR set to: 2
 15362  004EC4  51FF               	movf	(AlarmCheckTask@id+1)& (0+255),w,b
 15363  004EC6  E104               	bnz	u21640
 15364  004EC8  0E13               	movlw	19
 15365  004ECA  5DFE               	subwf	AlarmCheckTask@id& (0+255),w,b
 15366  004ECC  A0D8               	btfss	status,0,c
 15367  004ECE  D7B9               	goto	l21993
 15368  004ED0                     u21640:
 15369                           
 15370                           ; BSR set to: 2
 15371                           ;alarm.c: 526:     AlarmUpdateLCD();
 15372  004ED0  EC30  F02E         	call	_AlarmUpdateLCD	;wreg free
 15373                           
 15374                           ;alarm.c: 530:     if (AnyAlarm()) {
 15375  004ED4  EC70  F04A         	call	_AnyAlarm	;wreg free
 15376  004ED8  0900               	iorlw	0
 15377  004EDA  B4D8               	btfsc	status,2,c
 15378  004EDC  D044               	goto	l22029
 15379                           
 15380                           ; BSR set to: 1
 15381                           ;alarm.c: 532:         int type = alarmData[HigherAlarm()].type;
 15382  004EDE  ECC3  F038         	call	_HigherAlarm	;wreg free
 15383  004EE2  0060  F428  F2F7   	movff	?_HigherAlarm,_AlarmCheckTask$6533
 15384  004EE8  0060  F42C  F2F8   	movff	?_HigherAlarm+1,_AlarmCheckTask$6533+1
 15385                           
 15386                           ; BSR set to: 1
 15387                           ;alarm.c: 532:         int type = alarmData[HigherAlarm()].type;
 15388  004EEE  0060  FBDC  F104   	movff	_AlarmCheckTask$6533,___wmul@multiplier
 15389  004EF4  0060  FBE0  F105   	movff	_AlarmCheckTask$6533+1,___wmul@multiplier+1
 15390  004EFA  0E00               	movlw	0
 15391  004EFC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15392  004EFE  0E15               	movlw	21
 15393  004F00  6F06               	movwf	___wmul@multiplicand& (0+255),b
 15394  004F02  EC60  F04C         	call	___wmul	;wreg free
 15395  004F06  0E25               	movlw	low (_alarmData+17)
 15396  004F08  2504               	addwf	?___wmul& (0+255),w,b
 15397  004F0A  6ED9               	movwf	fsr2l,c
 15398  004F0C  0E09               	movlw	high (_alarmData+17)
 15399  004F0E  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 15400  004F10  6EDA               	movwf	fsr2h,c
 15401  004F12  006F FF78  F2FC    	movff	postinc2,AlarmCheckTask@type
 15402  004F18  006F FF74  F2FD    	movff	postdec2,AlarmCheckTask@type+1
 15403                           
 15404                           ; BSR set to: 1
 15405                           ;alarm.c: 534:         if (type!=current) {
 15406  004F1E  0102               	movlb	2	; () banked
 15407  004F20  5174               	movf	AlarmCheckTask@current& (0+255),w,b
 15408  004F22  19FC               	xorwf	AlarmCheckTask@type& (0+255),w,b
 15409  004F24  E104               	bnz	u21660
 15410  004F26  5175               	movf	(AlarmCheckTask@current+1)& (0+255),w,b
 15411  004F28  19FD               	xorwf	(AlarmCheckTask@type+1)& (0+255),w,b
 15412  004F2A  B4D8               	btfsc	status,2,c
 15413  004F2C  0012               	return	
 15414  004F2E                     u21660:
 15415                           
 15416                           ; BSR set to: 2
 15417                           ;alarm.c: 536:             current = type;
 15418  004F2E  0060  FBF0  F274   	movff	AlarmCheckTask@type,AlarmCheckTask@current
 15419  004F34  0060  FBF4  F275   	movff	AlarmCheckTask@type+1,AlarmCheckTask@current+1
 15420                           
 15421                           ; BSR set to: 2
 15422                           ;alarm.c: 537:             if (muteSec == 0) {
 15423  004F3A  0101               	movlb	1	; () banked
 15424  004F3C  51EB               	movf	_muteSec& (0+255),w,b
 15425  004F3E  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 15426  004F40  A4D8               	btfss	status,2,c
 15427  004F42  D005               	goto	l22023
 15428                           
 15429                           ; BSR set to: 1
 15430                           ;alarm.c: 538:                 BuzzerSet(type);
 15431  004F44  0102               	movlb	2	; () banked
 15432  004F46  51FC               	movf	AlarmCheckTask@type& (0+255),w,b
 15433  004F48  ECC5  F04F         	call	_BuzzerSet
 15434                           
 15435                           ;alarm.c: 539:             } else {
 15436  004F4C  D007               	goto	l22027
 15437  004F4E                     l22023:
 15438                           
 15439                           ; BSR set to: 1
 15440                           ;alarm.c: 541:                 current = 0;
 15441  004F4E  0E00               	movlw	0
 15442  004F50  0102               	movlb	2	; () banked
 15443  004F52  6F75               	movwf	(AlarmCheckTask@current+1)& (0+255),b
 15444  004F54  0E00               	movlw	0
 15445  004F56  6F74               	movwf	AlarmCheckTask@current& (0+255),b
 15446                           
 15447                           ; BSR set to: 2
 15448                           ;alarm.c: 542:                 BuzzerClear();
 15449  004F58  EC9E  F050         	call	_BuzzerClear	;wreg free
 15450  004F5C                     l22027:
 15451                           
 15452                           ;alarm.c: 544:             SetAlarmLED(type);
 15453  004F5C  0102               	movlb	2	; () banked
 15454  004F5E  51FC               	movf	AlarmCheckTask@type& (0+255),w,b
 15455  004F60  EC5A  F051         	call	_SetAlarmLED
 15456                           
 15457                           ;alarm.c: 545:         } else { }
 15458  004F64  0012               	return	
 15459  004F66                     l22029:
 15460                           
 15461                           ; BSR set to: 1
 15462                           ;alarm.c: 548:         current = 0;
 15463  004F66  0E00               	movlw	0
 15464  004F68  0102               	movlb	2	; () banked
 15465  004F6A  6F75               	movwf	(AlarmCheckTask@current+1)& (0+255),b
 15466  004F6C  0E00               	movlw	0
 15467  004F6E  6F74               	movwf	AlarmCheckTask@current& (0+255),b
 15468                           
 15469                           ; BSR set to: 2
 15470                           ;alarm.c: 549:         BuzzerClear();
 15471  004F70  EC9E  F050         	call	_BuzzerClear	;wreg free
 15472                           
 15473                           ; BSR set to: 57
 15474                           ;alarm.c: 550:         ClearAlarmLED();
 15475  004F74  EC10  F052         	call	_ClearAlarmLED	;wreg free
 15476  004F78  0012               	return		;funcret
 15477  004F7A                     __end_of_AlarmCheckTask:
 15478                           	opt callstack 0
 15479                           
 15480 ;; *************** function _NoPowerSupplyAlarm *****************
 15481 ;; Defined at:
 15482 ;;		line 220 in file "alarm.c"
 15483 ;; Parameters:    Size  Location     Type
 15484 ;;		None
 15485 ;; Auto vars:     Size  Location     Type
 15486 ;;		None
 15487 ;; Return value:  Size  Location     Type
 15488 ;;                  1    wreg      _Bool 
 15489 ;; Registers used:
 15490 ;;		wreg, status,2
 15491 ;; Tracked objects:
 15492 ;;		On entry : 3F/2
 15493 ;;		On exit  : 3F/2
 15494 ;;		Unchanged: 0/0
 15495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15500 ;;Total ram usage:        0 bytes
 15501 ;; Hardware stack levels used:    1
 15502 ;; Hardware stack levels required when called:   16
 15503 ;; This function calls:
 15504 ;;		Nothing
 15505 ;; This function is called by:
 15506 ;;		_AlarmCheckTask
 15507 ;; This function uses a non-reentrant model
 15508 ;;
 15509                           
 15510                           	psect	text105
 15511  00A654                     __ptext105:
 15512                           	opt callstack 0
 15513  00A654                     _NoPowerSupplyAlarm:
 15514                           	opt callstack 13
 15515                           
 15516                           ; BSR set to: 2
 15517                           
 15518                           ;incstack = 0
 15519  00A654  51A4               	movf	_noPowerSupplyAlarm& (0+255),w,b
 15520                           
 15521                           ; BSR set to: 2
 15522  00A656  0012               	return		;funcret
 15523  00A658                     __end_of_NoPowerSupplyAlarm:
 15524                           	opt callstack 0
 15525                           
 15526 ;; *************** function _VBelowMinAlarm *****************
 15527 ;; Defined at:
 15528 ;;		line 216 in file "alarm.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;		None
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;		None
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1    wreg      _Bool 
 15535 ;; Registers used:
 15536 ;;		wreg, status,2
 15537 ;; Tracked objects:
 15538 ;;		On entry : 3F/2
 15539 ;;		On exit  : 3F/2
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15546 ;;Total ram usage:        0 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:   16
 15549 ;; This function calls:
 15550 ;;		Nothing
 15551 ;; This function is called by:
 15552 ;;		_AlarmCheckTask
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           	psect	text106
 15557  00A658                     __ptext106:
 15558                           	opt callstack 0
 15559  00A658                     _VBelowMinAlarm:
 15560                           	opt callstack 13
 15561                           
 15562                           ; BSR set to: 2
 15563                           ;alarm.c: 217:     return vBelowMinAlarm;
 15564                           
 15565                           ; BSR set to: 2
 15566                           ;incstack = 0
 15567  00A658  51A6               	movf	_vBelowMinAlarm& (0+255),w,b
 15568                           
 15569                           ; BSR set to: 2
 15570  00A65A  0012               	return		;funcret
 15571  00A65C                     __end_of_VBelowMinAlarm:
 15572                           	opt callstack 0
 15573                           
 15574 ;; *************** function _VAboveMaxAlarm *****************
 15575 ;; Defined at:
 15576 ;;		line 212 in file "alarm.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      _Bool 
 15583 ;; Registers used:
 15584 ;;		wreg, status,2
 15585 ;; Tracked objects:
 15586 ;;		On entry : 3F/2
 15587 ;;		On exit  : 3F/2
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;Total ram usage:        0 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:   16
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_AlarmCheckTask
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text107
 15605  00A65C                     __ptext107:
 15606                           	opt callstack 0
 15607  00A65C                     _VAboveMaxAlarm:
 15608                           	opt callstack 13
 15609                           
 15610                           ; BSR set to: 2
 15611                           ;alarm.c: 213:     return vAboveMaxAlarm;
 15612                           
 15613                           ; BSR set to: 2
 15614                           ;incstack = 0
 15615  00A65C  51A5               	movf	_vAboveMaxAlarm& (0+255),w,b
 15616                           
 15617                           ; BSR set to: 2
 15618  00A65E  0012               	return		;funcret
 15619  00A660                     __end_of_VAboveMaxAlarm:
 15620                           	opt callstack 0
 15621                           
 15622 ;; *************** function _TdeTooLongAlarm *****************
 15623 ;; Defined at:
 15624 ;;		line 206 in file "alarm.c"
 15625 ;; Parameters:    Size  Location     Type
 15626 ;;		None
 15627 ;; Auto vars:     Size  Location     Type
 15628 ;;		None
 15629 ;; Return value:  Size  Location     Type
 15630 ;;                  1    wreg      _Bool 
 15631 ;; Registers used:
 15632 ;;		wreg, status,2
 15633 ;; Tracked objects:
 15634 ;;		On entry : 3F/2
 15635 ;;		On exit  : 3F/2
 15636 ;;		Unchanged: 0/0
 15637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15642 ;;Total ram usage:        0 bytes
 15643 ;; Hardware stack levels used:    1
 15644 ;; Hardware stack levels required when called:   16
 15645 ;; This function calls:
 15646 ;;		Nothing
 15647 ;; This function is called by:
 15648 ;;		_AlarmCheckTask
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           	psect	text108
 15653  00A660                     __ptext108:
 15654                           	opt callstack 0
 15655  00A660                     _TdeTooLongAlarm:
 15656                           	opt callstack 13
 15657                           
 15658                           ; BSR set to: 2
 15659                           ;alarm.c: 209:     return tdeTooLongAlarm;
 15660                           
 15661                           ; BSR set to: 2
 15662                           ;incstack = 0
 15663  00A660  51A7               	movf	_tdeTooLongAlarm& (0+255),w,b
 15664                           
 15665                           ; BSR set to: 2
 15666  00A662  0012               	return		;funcret
 15667  00A664                     __end_of_TdeTooLongAlarm:
 15668                           	opt callstack 0
 15669                           
 15670 ;; *************** function _TdiTooLongAlarm *****************
 15671 ;; Defined at:
 15672 ;;		line 200 in file "alarm.c"
 15673 ;; Parameters:    Size  Location     Type
 15674 ;;		None
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;		None
 15677 ;; Return value:  Size  Location     Type
 15678 ;;                  1    wreg      _Bool 
 15679 ;; Registers used:
 15680 ;;		wreg, status,2
 15681 ;; Tracked objects:
 15682 ;;		On entry : 3F/2
 15683 ;;		On exit  : 3F/2
 15684 ;;		Unchanged: 0/0
 15685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15690 ;;Total ram usage:        0 bytes
 15691 ;; Hardware stack levels used:    1
 15692 ;; Hardware stack levels required when called:   16
 15693 ;; This function calls:
 15694 ;;		Nothing
 15695 ;; This function is called by:
 15696 ;;		_AlarmCheckTask
 15697 ;; This function uses a non-reentrant model
 15698 ;;
 15699                           
 15700                           	psect	text109
 15701  00A664                     __ptext109:
 15702                           	opt callstack 0
 15703  00A664                     _TdiTooLongAlarm:
 15704                           	opt callstack 13
 15705                           
 15706                           ; BSR set to: 2
 15707                           ;alarm.c: 203:     return tdiTooLongAlarm;
 15708                           
 15709                           ; BSR set to: 2
 15710                           ;incstack = 0
 15711  00A664  51A8               	movf	_tdiTooLongAlarm& (0+255),w,b
 15712                           
 15713                           ; BSR set to: 2
 15714  00A666  0012               	return		;funcret
 15715  00A668                     __end_of_TdiTooLongAlarm:
 15716                           	opt callstack 0
 15717                           
 15718 ;; *************** function _IPAboveSetAlarm *****************
 15719 ;; Defined at:
 15720 ;;		line 196 in file "alarm.c"
 15721 ;; Parameters:    Size  Location     Type
 15722 ;;		None
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;		None
 15725 ;; Return value:  Size  Location     Type
 15726 ;;                  1    wreg      _Bool 
 15727 ;; Registers used:
 15728 ;;		wreg, status,2, status,0
 15729 ;; Tracked objects:
 15730 ;;		On entry : 3F/2
 15731 ;;		On exit  : 3F/0
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15738 ;;Total ram usage:        0 bytes
 15739 ;; Hardware stack levels used:    1
 15740 ;; Hardware stack levels required when called:   16
 15741 ;; This function calls:
 15742 ;;		Nothing
 15743 ;; This function is called by:
 15744 ;;		_AlarmCheckTask
 15745 ;; This function uses a non-reentrant model
 15746 ;;
 15747                           
 15748                           	psect	text110
 15749  009F22                     __ptext110:
 15750                           	opt callstack 0
 15751  009F22                     _IPAboveSetAlarm:
 15752                           	opt callstack 13
 15753                           
 15754                           ; BSR set to: 2
 15755                           ;alarm.c: 197:     if (ipAboveSetAlarm> 3) { return 1; }
 15756                           
 15757                           ; BSR set to: 2
 15758                           ;incstack = 0
 15759  009F22  0100               	movlb	0	; () banked
 15760  009F24  BFE3               	btfsc	(_ipAboveSetAlarm+1)& (0+255),7,b
 15761  009F26  D008               	goto	l20933
 15762  009F28  51E3               	movf	(_ipAboveSetAlarm+1)& (0+255),w,b
 15763  009F2A  E104               	bnz	u20060
 15764  009F2C  0E04               	movlw	4
 15765  009F2E  5DE2               	subwf	_ipAboveSetAlarm& (0+255),w,b
 15766  009F30  A0D8               	btfss	status,0,c
 15767  009F32  D002               	goto	l20933
 15768  009F34                     u20060:
 15769                           
 15770                           ; BSR set to: 0
 15771  009F34  0E01               	movlw	1
 15772  009F36  0012               	return	
 15773  009F38                     l20933:
 15774                           
 15775                           ; BSR set to: 0
 15776  009F38  0E00               	movlw	0
 15777                           
 15778                           ; BSR set to: 0
 15779  009F3A  0012               	return		;funcret
 15780  009F3C                     __end_of_IPAboveSetAlarm:
 15781                           	opt callstack 0
 15782                           
 15783 ;; *************** function _IPBelowSetAlarm *****************
 15784 ;; Defined at:
 15785 ;;		line 192 in file "alarm.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;		None
 15788 ;; Auto vars:     Size  Location     Type
 15789 ;;		None
 15790 ;; Return value:  Size  Location     Type
 15791 ;;                  1    wreg      _Bool 
 15792 ;; Registers used:
 15793 ;;		wreg, status,2, status,0
 15794 ;; Tracked objects:
 15795 ;;		On entry : 3F/2
 15796 ;;		On exit  : 3F/0
 15797 ;;		Unchanged: 0/0
 15798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15803 ;;Total ram usage:        0 bytes
 15804 ;; Hardware stack levels used:    1
 15805 ;; Hardware stack levels required when called:   16
 15806 ;; This function calls:
 15807 ;;		Nothing
 15808 ;; This function is called by:
 15809 ;;		_AlarmCheckTask
 15810 ;; This function uses a non-reentrant model
 15811 ;;
 15812                           
 15813                           	psect	text111
 15814  009F3C                     __ptext111:
 15815                           	opt callstack 0
 15816  009F3C                     _IPBelowSetAlarm:
 15817                           	opt callstack 13
 15818                           
 15819                           ; BSR set to: 2
 15820                           ;alarm.c: 193:     if (ipBelowSetAlarm> 3) { return 1; }
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;incstack = 0
 15824  009F3C  0100               	movlb	0	; () banked
 15825  009F3E  BFE5               	btfsc	(_ipBelowSetAlarm+1)& (0+255),7,b
 15826  009F40  D008               	goto	l20921
 15827  009F42  51E5               	movf	(_ipBelowSetAlarm+1)& (0+255),w,b
 15828  009F44  E104               	bnz	u20050
 15829  009F46  0E04               	movlw	4
 15830  009F48  5DE4               	subwf	_ipBelowSetAlarm& (0+255),w,b
 15831  009F4A  A0D8               	btfss	status,0,c
 15832  009F4C  D002               	goto	l20921
 15833  009F4E                     u20050:
 15834                           
 15835                           ; BSR set to: 0
 15836  009F4E  0E01               	movlw	1
 15837  009F50  0012               	return	
 15838  009F52                     l20921:
 15839                           
 15840                           ; BSR set to: 0
 15841  009F52  0E00               	movlw	0
 15842                           
 15843                           ; BSR set to: 0
 15844  009F54  0012               	return		;funcret
 15845  009F56                     __end_of_IPBelowSetAlarm:
 15846                           	opt callstack 0
 15847                           
 15848 ;; *************** function _EPAboveSetAlarm *****************
 15849 ;; Defined at:
 15850 ;;		line 188 in file "alarm.c"
 15851 ;; Parameters:    Size  Location     Type
 15852 ;;		None
 15853 ;; Auto vars:     Size  Location     Type
 15854 ;;		None
 15855 ;; Return value:  Size  Location     Type
 15856 ;;                  1    wreg      _Bool 
 15857 ;; Registers used:
 15858 ;;		wreg, status,2, status,0
 15859 ;; Tracked objects:
 15860 ;;		On entry : 3F/2
 15861 ;;		On exit  : 3F/0
 15862 ;;		Unchanged: 0/0
 15863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15868 ;;Total ram usage:        0 bytes
 15869 ;; Hardware stack levels used:    1
 15870 ;; Hardware stack levels required when called:   16
 15871 ;; This function calls:
 15872 ;;		Nothing
 15873 ;; This function is called by:
 15874 ;;		_AlarmCheckTask
 15875 ;; This function uses a non-reentrant model
 15876 ;;
 15877                           
 15878                           	psect	text112
 15879  009F56                     __ptext112:
 15880                           	opt callstack 0
 15881  009F56                     _EPAboveSetAlarm:
 15882                           	opt callstack 13
 15883                           
 15884                           ; BSR set to: 2
 15885                           ;alarm.c: 189:     if (epAboveSetAlarm> 3) return 1;
 15886                           
 15887                           ; BSR set to: 0
 15888                           ;incstack = 0
 15889  009F56  0100               	movlb	0	; () banked
 15890  009F58  BFE7               	btfsc	(_epAboveSetAlarm+1)& (0+255),7,b
 15891  009F5A  D008               	goto	l20909
 15892  009F5C  51E7               	movf	(_epAboveSetAlarm+1)& (0+255),w,b
 15893  009F5E  E104               	bnz	u20040
 15894  009F60  0E04               	movlw	4
 15895  009F62  5DE6               	subwf	_epAboveSetAlarm& (0+255),w,b
 15896  009F64  A0D8               	btfss	status,0,c
 15897  009F66  D002               	goto	l20909
 15898  009F68                     u20040:
 15899                           
 15900                           ; BSR set to: 0
 15901  009F68  0E01               	movlw	1
 15902  009F6A  0012               	return	
 15903  009F6C                     l20909:
 15904                           
 15905                           ; BSR set to: 0
 15906  009F6C  0E00               	movlw	0
 15907                           
 15908                           ; BSR set to: 0
 15909  009F6E  0012               	return		;funcret
 15910  009F70                     __end_of_EPAboveSetAlarm:
 15911                           	opt callstack 0
 15912                           
 15913 ;; *************** function _EPBelowSetAlarm *****************
 15914 ;; Defined at:
 15915 ;;		line 184 in file "alarm.c"
 15916 ;; Parameters:    Size  Location     Type
 15917 ;;		None
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;		None
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  1    wreg      _Bool 
 15922 ;; Registers used:
 15923 ;;		wreg, status,2, status,0
 15924 ;; Tracked objects:
 15925 ;;		On entry : 3F/2
 15926 ;;		On exit  : 3F/0
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15933 ;;Total ram usage:        0 bytes
 15934 ;; Hardware stack levels used:    1
 15935 ;; Hardware stack levels required when called:   16
 15936 ;; This function calls:
 15937 ;;		Nothing
 15938 ;; This function is called by:
 15939 ;;		_AlarmCheckTask
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943                           	psect	text113
 15944  009F70                     __ptext113:
 15945                           	opt callstack 0
 15946  009F70                     _EPBelowSetAlarm:
 15947                           	opt callstack 13
 15948                           
 15949                           ; BSR set to: 2
 15950                           ;alarm.c: 185:     if (epBelowSetAlarm> 3) return 1;
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;incstack = 0
 15954  009F70  0100               	movlb	0	; () banked
 15955  009F72  BFE9               	btfsc	(_epBelowSetAlarm+1)& (0+255),7,b
 15956  009F74  D008               	goto	l20897
 15957  009F76  51E9               	movf	(_epBelowSetAlarm+1)& (0+255),w,b
 15958  009F78  E104               	bnz	u20030
 15959  009F7A  0E04               	movlw	4
 15960  009F7C  5DE8               	subwf	_epBelowSetAlarm& (0+255),w,b
 15961  009F7E  A0D8               	btfss	status,0,c
 15962  009F80  D002               	goto	l20897
 15963  009F82                     u20030:
 15964                           
 15965                           ; BSR set to: 0
 15966  009F82  0E01               	movlw	1
 15967  009F84  0012               	return	
 15968  009F86                     l20897:
 15969                           
 15970                           ; BSR set to: 0
 15971  009F86  0E00               	movlw	0
 15972                           
 15973                           ; BSR set to: 0
 15974  009F88  0012               	return		;funcret
 15975  009F8A                     __end_of_EPBelowSetAlarm:
 15976                           	opt callstack 0
 15977                           
 15978 ;; *************** function _BaterryLowAlarmHigh *****************
 15979 ;; Defined at:
 15980 ;;		line 183 in file "alarm.c"
 15981 ;; Parameters:    Size  Location     Type
 15982 ;;		None
 15983 ;; Auto vars:     Size  Location     Type
 15984 ;;		None
 15985 ;; Return value:  Size  Location     Type
 15986 ;;                  1    wreg      _Bool 
 15987 ;; Registers used:
 15988 ;;		wreg, status,2
 15989 ;; Tracked objects:
 15990 ;;		On entry : 3F/2
 15991 ;;		On exit  : 3F/2
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15998 ;;Total ram usage:        0 bytes
 15999 ;; Hardware stack levels used:    1
 16000 ;; Hardware stack levels required when called:   16
 16001 ;; This function calls:
 16002 ;;		Nothing
 16003 ;; This function is called by:
 16004 ;;		_AlarmCheckTask
 16005 ;; This function uses a non-reentrant model
 16006 ;;
 16007                           
 16008                           	psect	text114
 16009  00A668                     __ptext114:
 16010                           	opt callstack 0
 16011  00A668                     _BaterryLowAlarmHigh:
 16012                           	opt callstack 13
 16013                           
 16014                           ; BSR set to: 2
 16015                           
 16016                           ; BSR set to: 0
 16017                           ;incstack = 0
 16018  00A668  51A9               	movf	_baterryLowAlarmHigh& (0+255),w,b
 16019                           
 16020                           ; BSR set to: 2
 16021  00A66A  0012               	return		;funcret
 16022  00A66C                     __end_of_BaterryLowAlarmHigh:
 16023                           	opt callstack 0
 16024                           
 16025 ;; *************** function _BaterryLowAlarmMed *****************
 16026 ;; Defined at:
 16027 ;;		line 182 in file "alarm.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;		None
 16030 ;; Auto vars:     Size  Location     Type
 16031 ;;		None
 16032 ;; Return value:  Size  Location     Type
 16033 ;;                  1    wreg      _Bool 
 16034 ;; Registers used:
 16035 ;;		wreg, status,2
 16036 ;; Tracked objects:
 16037 ;;		On entry : 3F/2
 16038 ;;		On exit  : 3F/2
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16045 ;;Total ram usage:        0 bytes
 16046 ;; Hardware stack levels used:    1
 16047 ;; Hardware stack levels required when called:   16
 16048 ;; This function calls:
 16049 ;;		Nothing
 16050 ;; This function is called by:
 16051 ;;		_AlarmCheckTask
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055                           	psect	text115
 16056  00A66C                     __ptext115:
 16057                           	opt callstack 0
 16058  00A66C                     _BaterryLowAlarmMed:
 16059                           	opt callstack 13
 16060                           
 16061                           ; BSR set to: 2
 16062                           
 16063                           ; BSR set to: 2
 16064                           ;incstack = 0
 16065  00A66C  51AA               	movf	_baterryLowAlarmMed& (0+255),w,b
 16066                           
 16067                           ; BSR set to: 2
 16068  00A66E  0012               	return		;funcret
 16069  00A670                     __end_of_BaterryLowAlarmMed:
 16070                           	opt callstack 0
 16071                           
 16072 ;; *************** function _CircuitFailureAlarm *****************
 16073 ;; Defined at:
 16074 ;;		line 179 in file "alarm.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;		None
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;		None
 16079 ;; Return value:  Size  Location     Type
 16080 ;;                  1    wreg      _Bool 
 16081 ;; Registers used:
 16082 ;;		wreg, status,2
 16083 ;; Tracked objects:
 16084 ;;		On entry : 3F/2
 16085 ;;		On exit  : 3F/2
 16086 ;;		Unchanged: 0/0
 16087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16092 ;;Total ram usage:        0 bytes
 16093 ;; Hardware stack levels used:    1
 16094 ;; Hardware stack levels required when called:   16
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		_MuteAlarm
 16099 ;;		i2_MuteAlarm
 16100 ;;		_AlarmCheckTask
 16101 ;; This function uses a non-reentrant model
 16102 ;;
 16103                           
 16104                           	psect	text116
 16105  00A670                     __ptext116:
 16106                           	opt callstack 0
 16107  00A670                     _CircuitFailureAlarm:
 16108                           	opt callstack 13
 16109                           
 16110                           ; BSR set to: 2
 16111                           ;alarm.c: 180:     return circuitFailureAlarm;
 16112                           
 16113                           ; BSR set to: 2
 16114                           ;incstack = 0
 16115  00A670  51AB               	movf	_circuitFailureAlarm& (0+255),w,b
 16116                           
 16117                           ; BSR set to: 2
 16118  00A672  0012               	return		;funcret
 16119  00A674                     __end_of_CircuitFailureAlarm:
 16120                           	opt callstack 0
 16121                           
 16122 ;; *************** function _HighPressureAlarmHigh *****************
 16123 ;; Defined at:
 16124 ;;		line 172 in file "alarm.c"
 16125 ;; Parameters:    Size  Location     Type
 16126 ;;		None
 16127 ;; Auto vars:     Size  Location     Type
 16128 ;;		None
 16129 ;; Return value:  Size  Location     Type
 16130 ;;                  1    wreg      _Bool 
 16131 ;; Registers used:
 16132 ;;		wreg, status,2
 16133 ;; Tracked objects:
 16134 ;;		On entry : 3F/2
 16135 ;;		On exit  : 3F/2
 16136 ;;		Unchanged: 0/0
 16137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16142 ;;Total ram usage:        0 bytes
 16143 ;; Hardware stack levels used:    1
 16144 ;; Hardware stack levels required when called:   16
 16145 ;; This function calls:
 16146 ;;		Nothing
 16147 ;; This function is called by:
 16148 ;;		_MuteAlarm
 16149 ;;		i2_MuteAlarm
 16150 ;;		_AlarmCheckTask
 16151 ;; This function uses a non-reentrant model
 16152 ;;
 16153                           
 16154                           	psect	text117
 16155  00A674                     __ptext117:
 16156                           	opt callstack 0
 16157  00A674                     _HighPressureAlarmHigh:
 16158                           	opt callstack 13
 16159                           
 16160                           ; BSR set to: 2
 16161                           ;alarm.c: 174:     return highPressureAlarmHigh;
 16162                           
 16163                           ; BSR set to: 2
 16164                           ;incstack = 0
 16165  00A674  51AD               	movf	_highPressureAlarmHigh& (0+255),w,b
 16166                           
 16167                           ; BSR set to: 2
 16168  00A676  0012               	return		;funcret
 16169  00A678                     __end_of_HighPressureAlarmHigh:
 16170                           	opt callstack 0
 16171                           
 16172 ;; *************** function _HighPressureAlarmLow *****************
 16173 ;; Defined at:
 16174 ;;		line 146 in file "alarm.c"
 16175 ;; Parameters:    Size  Location     Type
 16176 ;;		None
 16177 ;; Auto vars:     Size  Location     Type
 16178 ;;  max             2   23[BANK1 ] short 
 16179 ;; Return value:  Size  Location     Type
 16180 ;;                  1    wreg      _Bool 
 16181 ;; Registers used:
 16182 ;;		wreg, status,2, status,0, cstack
 16183 ;; Tracked objects:
 16184 ;;		On entry : 3F/2
 16185 ;;		On exit  : 3F/2
 16186 ;;		Unchanged: 0/0
 16187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16189 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16190 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16191 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16192 ;;Total ram usage:        3 bytes
 16193 ;; Hardware stack levels used:    1
 16194 ;; Hardware stack levels required when called:   18
 16195 ;; This function calls:
 16196 ;;		_GetMaxPressure
 16197 ;;		_SetHighPressureAlarmHigh
 16198 ;;		_SetVeryHighPressureAlarmHigh
 16199 ;; This function is called by:
 16200 ;;		_AlarmCheckTask
 16201 ;; This function uses a non-reentrant model
 16202 ;;
 16203                           
 16204                           	psect	text118
 16205  008152                     __ptext118:
 16206                           	opt callstack 0
 16207  008152                     _HighPressureAlarmLow:
 16208                           	opt callstack 11
 16209                           
 16210                           ; BSR set to: 2
 16211                           ;alarm.c: 147:     static int count = 0;;alarm.c: 148:     static int countVery = 0;;ala
      +                          rm.c: 149:     int16_t max = GetMaxPressure();
 16212                           
 16213                           ; BSR set to: 2
 16214                           ;incstack = 0
 16215  008152  ECB6  F049         	call	_GetMaxPressure	;wreg free
 16216  008156  0060  F448  F117   	movff	?_GetMaxPressure,HighPressureAlarmLow@max
 16217  00815C  0060  F44C  F118   	movff	?_GetMaxPressure+1,HighPressureAlarmLow@max+1
 16218                           
 16219                           ; BSR set to: 2
 16220                           ;alarm.c: 150:     if (max>alarmPmax) {
 16221  008162  0101               	movlb	1	; () banked
 16222  008164  5117               	movf	HighPressureAlarmLow@max& (0+255),w,b
 16223  008166  0102               	movlb	2	; () banked
 16224  008168  5DD7               	subwf	_alarmPmax& (0+255),w,b
 16225  00816A  51D8               	movf	(_alarmPmax+1)& (0+255),w,b
 16226  00816C  0A80               	xorlw	128
 16227  00816E  0101               	movlb	1	; () banked
 16228  008170  6F16               	movwf	??_HighPressureAlarmLow& (0+255),b
 16229  008172  5118               	movf	(HighPressureAlarmLow@max+1)& (0+255),w,b
 16230  008174  0A80               	xorlw	128
 16231  008176  5916               	subwfb	??_HighPressureAlarmLow& (0+255),w,b
 16232  008178  B0D8               	btfsc	status,0,c
 16233  00817A  D006               	goto	l20851
 16234                           
 16235                           ; BSR set to: 1
 16236                           ;alarm.c: 151:         highPressureAlarmLow = 1;
 16237  00817C  0E01               	movlw	1
 16238  00817E  0102               	movlb	2	; () banked
 16239  008180  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 16240                           
 16241                           ; BSR set to: 2
 16242                           ;alarm.c: 152:         count ++;
 16243  008182  4B78               	infsnz	HighPressureAlarmLow@count& (0+255),f,b
 16244  008184  2B79               	incf	(HighPressureAlarmLow@count+1)& (0+255),f,b
 16245                           
 16246                           ;alarm.c: 153:     } else
 16247  008186  D007               	goto	l20853
 16248  008188                     l20851:
 16249                           
 16250                           ; BSR set to: 1
 16251                           ;alarm.c: 154:     {;alarm.c: 155:         highPressureAlarmLow= 0;
 16252  008188  0E00               	movlw	0
 16253  00818A  0102               	movlb	2	; () banked
 16254  00818C  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 16255                           
 16256                           ;alarm.c: 156:         count = 0;
 16257  00818E  0E00               	movlw	0
 16258  008190  6F79               	movwf	(HighPressureAlarmLow@count+1)& (0+255),b
 16259  008192  0E00               	movlw	0
 16260  008194  6F78               	movwf	HighPressureAlarmLow@count& (0+255),b
 16261  008196                     l20853:
 16262                           
 16263                           ; BSR set to: 2
 16264                           ;alarm.c: 158:     if (count >= 3) {
 16265  008196  BF79               	btfsc	(HighPressureAlarmLow@count+1)& (0+255),7,b
 16266  008198  D00C               	goto	l20859
 16267  00819A  5179               	movf	(HighPressureAlarmLow@count+1)& (0+255),w,b
 16268  00819C  E104               	bnz	u20010
 16269  00819E  0E03               	movlw	3
 16270  0081A0  5D78               	subwf	HighPressureAlarmLow@count& (0+255),w,b
 16271  0081A2  A0D8               	btfss	status,0,c
 16272  0081A4  D006               	goto	l20859
 16273  0081A6                     u20010:
 16274                           
 16275                           ; BSR set to: 2
 16276                           ;alarm.c: 159:         SetHighPressureAlarmHigh();
 16277  0081A6  ECD2  F052         	call	_SetHighPressureAlarmHigh	;wreg free
 16278                           
 16279                           ; BSR set to: 2
 16280                           ;alarm.c: 160:         count = 3;
 16281  0081AA  0E00               	movlw	0
 16282  0081AC  6F79               	movwf	(HighPressureAlarmLow@count+1)& (0+255),b
 16283  0081AE  0E03               	movlw	3
 16284  0081B0  6F78               	movwf	HighPressureAlarmLow@count& (0+255),b
 16285  0081B2                     l20859:
 16286                           
 16287                           ; BSR set to: 2
 16288                           ;alarm.c: 164:     if (max>70){
 16289  0081B2  0101               	movlb	1	; () banked
 16290  0081B4  BF18               	btfsc	(HighPressureAlarmLow@max+1)& (0+255),7,b
 16291  0081B6  D00B               	goto	l20865
 16292  0081B8  5118               	movf	(HighPressureAlarmLow@max+1)& (0+255),w,b
 16293  0081BA  E104               	bnz	u20020
 16294  0081BC  0E47               	movlw	71
 16295  0081BE  5D17               	subwf	HighPressureAlarmLow@max& (0+255),w,b
 16296  0081C0  A0D8               	btfss	status,0,c
 16297  0081C2  D005               	goto	l20865
 16298  0081C4                     u20020:
 16299                           
 16300                           ; BSR set to: 1
 16301                           ;alarm.c: 165:         SetVeryHighPressureAlarmHigh();
 16302  0081C4  EC60  F052         	call	_SetVeryHighPressureAlarmHigh	;wreg free
 16303                           
 16304                           ; BSR set to: 2
 16305                           ;alarm.c: 166:         veryHighSV1 = 0;
 16306  0081C8  0E00               	movlw	0
 16307  0081CA  0101               	movlb	1	; () banked
 16308  0081CC  6FFB               	movwf	_veryHighSV1& (0+255),b
 16309  0081CE                     l20865:
 16310                           
 16311                           ; BSR set to: 1
 16312                           ;alarm.c: 170:     return highPressureAlarmLow;
 16313  0081CE  0102               	movlb	2	; () banked
 16314  0081D0  51AE               	movf	_highPressureAlarmLow& (0+255),w,b
 16315                           
 16316                           ; BSR set to: 2
 16317  0081D2  0012               	return		;funcret
 16318  0081D4                     __end_of_HighPressureAlarmLow:
 16319                           	opt callstack 0
 16320                           
 16321 ;; *************** function _GasFailureAlarm *****************
 16322 ;; Defined at:
 16323 ;;		line 143 in file "alarm.c"
 16324 ;; Parameters:    Size  Location     Type
 16325 ;;		None
 16326 ;; Auto vars:     Size  Location     Type
 16327 ;;		None
 16328 ;; Return value:  Size  Location     Type
 16329 ;;                  1    wreg      _Bool 
 16330 ;; Registers used:
 16331 ;;		wreg, status,2
 16332 ;; Tracked objects:
 16333 ;;		On entry : 3F/2
 16334 ;;		On exit  : 3F/2
 16335 ;;		Unchanged: 0/0
 16336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16341 ;;Total ram usage:        0 bytes
 16342 ;; Hardware stack levels used:    1
 16343 ;; Hardware stack levels required when called:   16
 16344 ;; This function calls:
 16345 ;;		Nothing
 16346 ;; This function is called by:
 16347 ;;		_MuteAlarm
 16348 ;;		i2_MuteAlarm
 16349 ;;		_AlarmCheckTask
 16350 ;; This function uses a non-reentrant model
 16351 ;;
 16352                           
 16353                           	psect	text119
 16354  00A678                     __ptext119:
 16355                           	opt callstack 0
 16356  00A678                     _GasFailureAlarm:
 16357                           	opt callstack 13
 16358                           
 16359                           ; BSR set to: 2
 16360                           
 16361                           ; BSR set to: 2
 16362                           ;incstack = 0
 16363  00A678  51AF               	movf	_gasFailureAlarm& (0+255),w,b
 16364                           
 16365                           ; BSR set to: 2
 16366  00A67A  0012               	return		;funcret
 16367  00A67C                     __end_of_GasFailureAlarm:
 16368                           	opt callstack 0
 16369                           
 16370 ;; *************** function _ControlFailAlarm *****************
 16371 ;; Defined at:
 16372 ;;		line 136 in file "alarm.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;		None
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;		None
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      _Bool 
 16379 ;; Registers used:
 16380 ;;		wreg, status,2
 16381 ;; Tracked objects:
 16382 ;;		On entry : 3F/2
 16383 ;;		On exit  : 3F/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;Total ram usage:        0 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; Hardware stack levels required when called:   16
 16393 ;; This function calls:
 16394 ;;		Nothing
 16395 ;; This function is called by:
 16396 ;;		_MuteAlarm
 16397 ;;		i2_MuteAlarm
 16398 ;;		_AlarmCheckTask
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402                           	psect	text120
 16403  00A0AA                     __ptext120:
 16404                           	opt callstack 0
 16405  00A0AA                     _ControlFailAlarm:
 16406                           	opt callstack 13
 16407                           
 16408                           ; BSR set to: 2
 16409                           ;alarm.c: 137:     if (controlFailAlarm) {
 16410                           
 16411                           ; BSR set to: 2
 16412                           ;incstack = 0
 16413  00A0AA  0100               	movlb	0	; () banked
 16414  00A0AC  51F6               	movf	_controlFailAlarm& (0+255),w,b
 16415  00A0AE  B4D8               	btfsc	status,2,c
 16416  00A0B0  D003               	goto	l2389
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;alarm.c: 138:         controlSV1=0;
 16420  00A0B2  0E00               	movlw	0
 16421  00A0B4  0101               	movlb	1	; () banked
 16422  00A0B6  6FF9               	movwf	_controlSV1& (0+255),b
 16423  00A0B8                     l2389:
 16424                           
 16425                           ;alarm.c: 140:     return controlFailAlarm;
 16426  00A0B8  0100               	movlb	0	; () banked
 16427  00A0BA  51F6               	movf	_controlFailAlarm& (0+255),w,b
 16428                           
 16429                           ; BSR set to: 0
 16430  00A0BC  0012               	return		;funcret
 16431  00A0BE                     __end_of_ControlFailAlarm:
 16432                           	opt callstack 0
 16433                           
 16434 ;; *************** function _MonitorFailAlarm *****************
 16435 ;; Defined at:
 16436 ;;		line 107 in file "alarm.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;		None
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;  v5              2  132[BANK1 ] short 
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1    wreg      _Bool 
 16443 ;; Registers used:
 16444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 3F/2
 16447 ;;		On exit  : 3F/1
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16451 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16453 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16454 ;;Total ram usage:        3 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; Hardware stack levels required when called:   25
 16457 ;; This function calls:
 16458 ;;		_AdcDataReady
 16459 ;;		_Get5V
 16460 ;;		_printf
 16461 ;; This function is called by:
 16462 ;;		_MuteAlarm
 16463 ;;		i2_MuteAlarm
 16464 ;;		_AlarmCheckTask
 16465 ;; This function uses a non-reentrant model
 16466 ;;
 16467                           
 16468                           	psect	text121
 16469  006A90                     __ptext121:
 16470                           	opt callstack 0
 16471  006A90                     _MonitorFailAlarm:
 16472                           	opt callstack 4
 16473                           
 16474                           ; BSR set to: 2
 16475                           ;alarm.c: 108:     int16_t v5;;alarm.c: 109:     static _Bool monitorFailAlarm5V = 0;;al
      +                          arm.c: 110:     static int cnt5v = 0;;alarm.c: 111:     if (AdcDataReady(1)) {
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;incstack = 0
 16479  006A90  0E00               	movlw	0
 16480  006A92  0101               	movlb	1	; () banked
 16481  006A94  6F0B               	movwf	(AdcDataReady@id+1)& (0+255),b
 16482  006A96  0E01               	movlw	1
 16483  006A98  6F0A               	movwf	AdcDataReady@id& (0+255),b
 16484  006A9A  EC14  F04D         	call	_AdcDataReady	;wreg free
 16485  006A9E  0900               	iorlw	0
 16486  006AA0  B4D8               	btfsc	status,2,c
 16487  006AA2  D049               	goto	l2377
 16488                           
 16489                           ; BSR set to: 1
 16490                           ;alarm.c: 112:         v5= Get5V();
 16491  006AA4  ECEF  F042         	call	_Get5V	;wreg free
 16492  006AA8  0060  F478  F184   	movff	?_Get5V,MonitorFailAlarm@v5
 16493  006AAE  0060  F47C  F185   	movff	?_Get5V+1,MonitorFailAlarm@v5+1
 16494                           
 16495                           ; BSR set to: 1
 16496                           ;alarm.c: 113:         if (v5>3000) {
 16497  006AB4  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16498  006AB6  D03F               	goto	l2377
 16499  006AB8  0EB9               	movlw	185
 16500  006ABA  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16501  006ABC  0E0B               	movlw	11
 16502  006ABE  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16503  006AC0  A0D8               	btfss	status,0,c
 16504  006AC2  D039               	goto	l2377
 16505                           
 16506                           ; BSR set to: 1
 16507                           ;alarm.c: 114:             if (v5 < 4700/2 || v5 > 5300/2) {
 16508  006AC4  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16509  006AC6  D00E               	goto	u19930
 16510  006AC8  0E2E               	movlw	46
 16511  006ACA  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16512  006ACC  0E09               	movlw	9
 16513  006ACE  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16514  006AD0  A0D8               	btfss	status,0,c
 16515  006AD2  D008               	goto	u19930
 16516                           
 16517                           ; BSR set to: 1
 16518  006AD4  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16519  006AD6  D027               	goto	l20825
 16520  006AD8  0E5B               	movlw	91
 16521  006ADA  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16522  006ADC  0E0A               	movlw	10
 16523  006ADE  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16524  006AE0  A0D8               	btfss	status,0,c
 16525  006AE2  D021               	goto	l20825
 16526  006AE4                     u19930:
 16527                           
 16528                           ; BSR set to: 1
 16529                           ;alarm.c: 115:                 cnt5v++;
 16530  006AE4  0102               	movlb	2	; () banked
 16531  006AE6  4B7A               	infsnz	MonitorFailAlarm@cnt5v& (0+255),f,b
 16532  006AE8  2B7B               	incf	(MonitorFailAlarm@cnt5v+1)& (0+255),f,b
 16533                           
 16534                           ; BSR set to: 2
 16535                           ;alarm.c: 116:                 if (cnt5v>3) {
 16536  006AEA  BF7B               	btfsc	(MonitorFailAlarm@cnt5v+1)& (0+255),7,b
 16537  006AEC  D024               	goto	l2377
 16538  006AEE  517B               	movf	(MonitorFailAlarm@cnt5v+1)& (0+255),w,b
 16539  006AF0  E104               	bnz	u19940
 16540  006AF2  0E04               	movlw	4
 16541  006AF4  5D7A               	subwf	MonitorFailAlarm@cnt5v& (0+255),w,b
 16542  006AF6  A0D8               	btfss	status,0,c
 16543  006AF8  D01E               	goto	l2377
 16544  006AFA                     u19940:
 16545                           
 16546                           ; BSR set to: 2
 16547                           ;alarm.c: 117:                     monitorFailAlarm5V = 1;
 16548  006AFA  0E01               	movlw	1
 16549  006AFC  0100               	movlb	0	; () banked
 16550  006AFE  6FF5               	movwf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),b
 16551                           
 16552                           ;alarm.c: 118:                     cnt5v = 4;
 16553  006B00  0E00               	movlw	0
 16554  006B02  0102               	movlb	2	; () banked
 16555  006B04  6F7B               	movwf	(MonitorFailAlarm@cnt5v+1)& (0+255),b
 16556  006B06  0E04               	movlw	4
 16557  006B08  6F7A               	movwf	MonitorFailAlarm@cnt5v& (0+255),b
 16558                           
 16559                           ; BSR set to: 2
 16560                           ;alarm.c: 119:                     printf("\r\nFail 5V : %d \r\n", v5);
 16561  006B0A  0EAB               	movlw	low STR_22
 16562  006B0C  0101               	movlb	1	; () banked
 16563  006B0E  6F71               	movwf	printf@fmt& (0+255),b
 16564  006B10  0EFE               	movlw	high STR_22
 16565  006B12  6F72               	movwf	(printf@fmt+1)& (0+255),b
 16566  006B14  0060  F610  F173   	movff	MonitorFailAlarm@v5,?_printf+2
 16567  006B1A  0060  F614  F174   	movff	MonitorFailAlarm@v5+1,?_printf+3
 16568  006B20  ECFF  F04C         	call	_printf	;wreg free
 16569  006B24  D008               	goto	l2377
 16570  006B26                     l20825:
 16571                           
 16572                           ; BSR set to: 1
 16573                           ;alarm.c: 122:             {;alarm.c: 123:                 monitorFailAlarm5V = 0;
 16574  006B26  0E00               	movlw	0
 16575  006B28  0100               	movlb	0	; () banked
 16576  006B2A  6FF5               	movwf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),b
 16577                           
 16578                           ;alarm.c: 124:                 cnt5v = 0;
 16579  006B2C  0E00               	movlw	0
 16580  006B2E  0102               	movlb	2	; () banked
 16581  006B30  6F7B               	movwf	(MonitorFailAlarm@cnt5v+1)& (0+255),b
 16582  006B32  0E00               	movlw	0
 16583  006B34  6F7A               	movwf	MonitorFailAlarm@cnt5v& (0+255),b
 16584  006B36                     l2377:
 16585                           
 16586                           ;alarm.c: 128:     monitorSV1 = !monitorFailAlarm5V;
 16587  006B36  0100               	movlb	0	; () banked
 16588  006B38  51F5               	movf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),w,b
 16589  006B3A  A4D8               	btfss	status,2,c
 16590  006B3C  D002               	goto	u19950
 16591  006B3E  0E01               	movlw	1
 16592  006B40  D001               	goto	u19960
 16593  006B42                     u19950:
 16594  006B42  0E00               	movlw	0
 16595  006B44                     u19960:
 16596  006B44  0101               	movlb	1	; () banked
 16597  006B46  6FF8               	movwf	_monitorSV1& (0+255),b
 16598                           
 16599                           ;alarm.c: 133:     return monitorFailAlarm || monitorFailAlarm5V;
 16600  006B48  0E01               	movlw	1
 16601  006B4A  6F83               	movwf	_MonitorFailAlarm$4446& (0+255),b
 16602  006B4C  0102               	movlb	2	; () banked
 16603  006B4E  51B0               	movf	_monitorFailAlarm& (0+255),w,b
 16604  006B50  A4D8               	btfss	status,2,c
 16605  006B52  D007               	goto	l2385
 16606                           
 16607                           ; BSR set to: 2
 16608  006B54  0100               	movlb	0	; () banked
 16609  006B56  51F5               	movf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),w,b
 16610  006B58  A4D8               	btfss	status,2,c
 16611  006B5A  D003               	goto	l2385
 16612                           
 16613                           ; BSR set to: 0
 16614  006B5C  0E00               	movlw	0
 16615  006B5E  0101               	movlb	1	; () banked
 16616  006B60  6F83               	movwf	_MonitorFailAlarm$4446& (0+255),b
 16617  006B62                     l2385:
 16618  006B62  0101               	movlb	1	; () banked
 16619  006B64  5183               	movf	_MonitorFailAlarm$4446& (0+255),w,b
 16620                           
 16621                           ; BSR set to: 1
 16622  006B66  0012               	return		;funcret
 16623  006B68                     __end_of_MonitorFailAlarm:
 16624                           	opt callstack 0
 16625                           
 16626 ;; *************** function _BatteryFailAlarm *****************
 16627 ;; Defined at:
 16628 ;;		line 58 in file "alarm.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;		None
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;  bat             2   40[BANK1 ] short 
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  1    wreg      _Bool 
 16635 ;; Registers used:
 16636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16637 ;; Tracked objects:
 16638 ;;		On entry : 3F/2
 16639 ;;		On exit  : 3F/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16643 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16645 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16646 ;;Total ram usage:        2 bytes
 16647 ;; Hardware stack levels used:    1
 16648 ;; Hardware stack levels required when called:   19
 16649 ;; This function calls:
 16650 ;;		_AdcDataReady
 16651 ;;		_ClearBaterryLowAlarmHigh
 16652 ;;		_ClearBaterryLowAlarmMed
 16653 ;;		_ClearBatteryFailAlarm
 16654 ;;		_ClearNoPowerSupplyAlarm
 16655 ;;		_Get12V
 16656 ;;		_SetBaterryLowAlarmHigh
 16657 ;;		_SetBaterryLowAlarmMed
 16658 ;;		_SetBatteryFailAlarm
 16659 ;;		_SetNoPowerSupplyAlarm
 16660 ;; This function is called by:
 16661 ;;		_AlarmCheckTask
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           	psect	text122
 16666  0069AC                     __ptext122:
 16667                           	opt callstack 0
 16668  0069AC                     _BatteryFailAlarm:
 16669                           	opt callstack 10
 16670                           
 16671                           ; BSR set to: 2
 16672                           ;alarm.c: 59:     static int timeBattery = 0;;alarm.c: 60:     static int timeBelow10 = 
      +                          0;;alarm.c: 61:     static int timeFail = 0;;alarm.c: 62:     int16_t bat;;alarm.c: 64: 
      +                              if (AdcDataReady(3)) {
 16673                           
 16674                           ; BSR set to: 1
 16675                           ;incstack = 0
 16676  0069AC  0E00               	movlw	0
 16677  0069AE  0101               	movlb	1	; () banked
 16678  0069B0  6F0B               	movwf	(AdcDataReady@id+1)& (0+255),b
 16679  0069B2  0E03               	movlw	3
 16680  0069B4  6F0A               	movwf	AdcDataReady@id& (0+255),b
 16681  0069B6  EC14  F04D         	call	_AdcDataReady	;wreg free
 16682  0069BA  0900               	iorlw	0
 16683  0069BC  B4D8               	btfsc	status,2,c
 16684  0069BE  D065               	goto	l20799
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;alarm.c: 65:         bat= Get12V();
 16688  0069C0  ECB6  F03C         	call	_Get12V	;wreg free
 16689  0069C4  0060  F478  F128   	movff	?_Get12V,BatteryFailAlarm@bat
 16690  0069CA  0060  F47C  F129   	movff	?_Get12V+1,BatteryFailAlarm@bat+1
 16691                           
 16692                           ; BSR set to: 1
 16693                           ;alarm.c: 67:         if (bat < 11300) {
 16694  0069D0  BF29               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16695  0069D2  D006               	goto	u19850
 16696  0069D4  0E24               	movlw	36
 16697  0069D6  5D28               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16698  0069D8  0E2C               	movlw	44
 16699  0069DA  5929               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16700  0069DC  B0D8               	btfsc	status,0,c
 16701  0069DE  D011               	goto	l20769
 16702  0069E0                     u19850:
 16703                           
 16704                           ; BSR set to: 1
 16705                           ;alarm.c: 68:             timeFail++;
 16706  0069E0  0102               	movlb	2	; () banked
 16707  0069E2  4B7C               	infsnz	BatteryFailAlarm@timeFail& (0+255),f,b
 16708  0069E4  2B7D               	incf	(BatteryFailAlarm@timeFail+1)& (0+255),f,b
 16709                           
 16710                           ; BSR set to: 2
 16711                           ;alarm.c: 69:             if (timeFail>10*60) {
 16712  0069E6  BF7D               	btfsc	(BatteryFailAlarm@timeFail+1)& (0+255),7,b
 16713  0069E8  D016               	goto	l20773
 16714  0069EA  0E59               	movlw	89
 16715  0069EC  5D7C               	subwf	BatteryFailAlarm@timeFail& (0+255),w,b
 16716  0069EE  0E02               	movlw	2
 16717  0069F0  597D               	subwfb	(BatteryFailAlarm@timeFail+1)& (0+255),w,b
 16718  0069F2  A0D8               	btfss	status,0,c
 16719  0069F4  D010               	goto	l20773
 16720                           
 16721                           ; BSR set to: 2
 16722                           ;alarm.c: 70:                 SetBatteryFailAlarm ();
 16723  0069F6  EC74  F052         	call	_SetBatteryFailAlarm	;wreg free
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;alarm.c: 71:                 batterySV1=0;
 16727  0069FA  0E00               	movlw	0
 16728  0069FC  0101               	movlb	1	; () banked
 16729  0069FE  6FFA               	movwf	_batterySV1& (0+255),b
 16730  006A00  D00A               	goto	l20773
 16731  006A02                     l20769:
 16732                           
 16733                           ; BSR set to: 1
 16734                           ;alarm.c: 74:             timeFail = 0;
 16735  006A02  0E00               	movlw	0
 16736  006A04  0102               	movlb	2	; () banked
 16737  006A06  6F7D               	movwf	(BatteryFailAlarm@timeFail+1)& (0+255),b
 16738  006A08  0E00               	movlw	0
 16739  006A0A  6F7C               	movwf	BatteryFailAlarm@timeFail& (0+255),b
 16740                           
 16741                           ;alarm.c: 75:             batterySV1=1;
 16742  006A0C  0E01               	movlw	1
 16743  006A0E  0101               	movlb	1	; () banked
 16744  006A10  6FFA               	movwf	_batterySV1& (0+255),b
 16745                           
 16746                           ; BSR set to: 1
 16747                           ;alarm.c: 76:             ClearBatteryFailAlarm ();
 16748  006A12  EC78  F052         	call	_ClearBatteryFailAlarm	;wreg free
 16749  006A16                     l20773:
 16750                           
 16751                           ;alarm.c: 79:         if (bat < 11500) {
 16752  006A16  0101               	movlb	1	; () banked
 16753  006A18  BF29               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16754  006A1A  D006               	goto	u19870
 16755  006A1C  0EEC               	movlw	236
 16756  006A1E  5D28               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16757  006A20  0E2C               	movlw	44
 16758  006A22  5929               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16759  006A24  B0D8               	btfsc	status,0,c
 16760  006A26  D012               	goto	l20783
 16761  006A28                     u19870:
 16762                           
 16763                           ; BSR set to: 1
 16764                           ;alarm.c: 80:             timeBelow10++;
 16765  006A28  0102               	movlb	2	; () banked
 16766  006A2A  4B7E               	infsnz	BatteryFailAlarm@timeBelow10& (0+255),f,b
 16767  006A2C  2B7F               	incf	(BatteryFailAlarm@timeBelow10+1)& (0+255),f,b
 16768                           
 16769                           ; BSR set to: 2
 16770                           ;alarm.c: 81:             SetBaterryLowAlarmMed();
 16771  006A2E  ECD8  F052         	call	_SetBaterryLowAlarmMed	;wreg free
 16772                           
 16773                           ; BSR set to: 2
 16774                           ;alarm.c: 82:             if (timeBelow10>3*60) {
 16775  006A32  BF7F               	btfsc	(BatteryFailAlarm@timeBelow10+1)& (0+255),7,b
 16776  006A34  D014               	goto	l20789
 16777  006A36  517F               	movf	(BatteryFailAlarm@timeBelow10+1)& (0+255),w,b
 16778  006A38  E104               	bnz	u19880
 16779  006A3A  0EB5               	movlw	181
 16780  006A3C  5D7E               	subwf	BatteryFailAlarm@timeBelow10& (0+255),w,b
 16781  006A3E  A0D8               	btfss	status,0,c
 16782  006A40  D00E               	goto	l20789
 16783  006A42                     u19880:
 16784                           
 16785                           ; BSR set to: 2
 16786                           ;alarm.c: 83:                 SetBaterryLowAlarmHigh();
 16787  006A42  ECDB  F052         	call	_SetBaterryLowAlarmHigh	;wreg free
 16788                           
 16789                           ;alarm.c: 84:                 ClearBaterryLowAlarmHigh();
 16790  006A46  ECE4  F052         	call	_ClearBaterryLowAlarmHigh	;wreg free
 16791  006A4A  D009               	goto	l20789
 16792  006A4C                     l20783:
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;alarm.c: 87:             timeBelow10 = 0;
 16796  006A4C  0E00               	movlw	0
 16797  006A4E  0102               	movlb	2	; () banked
 16798  006A50  6F7F               	movwf	(BatteryFailAlarm@timeBelow10+1)& (0+255),b
 16799  006A52  0E00               	movlw	0
 16800  006A54  6F7E               	movwf	BatteryFailAlarm@timeBelow10& (0+255),b
 16801                           
 16802                           ; BSR set to: 2
 16803                           ;alarm.c: 88:             ClearBaterryLowAlarmMed();
 16804  006A56  ECE1  F052         	call	_ClearBaterryLowAlarmMed	;wreg free
 16805                           
 16806                           ; BSR set to: 2
 16807                           ;alarm.c: 89:             ClearBaterryLowAlarmHigh();
 16808  006A5A  ECE4  F052         	call	_ClearBaterryLowAlarmHigh	;wreg free
 16809  006A5E                     l20789:
 16810                           
 16811                           ; BSR set to: 2
 16812                           ;alarm.c: 92:         if (bat < 13250) {
 16813  006A5E  0101               	movlb	1	; () banked
 16814  006A60  BF29               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16815  006A62  D006               	goto	u19890
 16816  006A64  0EC2               	movlw	194
 16817  006A66  5D28               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16818  006A68  0E33               	movlw	51
 16819  006A6A  5929               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16820  006A6C  B0D8               	btfsc	status,0,c
 16821  006A6E  D006               	goto	l20795
 16822  006A70                     u19890:
 16823                           
 16824                           ; BSR set to: 1
 16825                           ;alarm.c: 93:             timeBattery++;
 16826  006A70  0102               	movlb	2	; () banked
 16827  006A72  4B80               	infsnz	BatteryFailAlarm@timeBattery& (0+255),f,b
 16828  006A74  2B81               	incf	(BatteryFailAlarm@timeBattery+1)& (0+255),f,b
 16829                           
 16830                           ; BSR set to: 2
 16831                           ;alarm.c: 94:             SetNoPowerSupplyAlarm();
 16832  006A76  ECD5  F052         	call	_SetNoPowerSupplyAlarm	;wreg free
 16833                           
 16834                           ;alarm.c: 95:         }
 16835  006A7A  D007               	goto	l20799
 16836  006A7C                     l20795:
 16837                           
 16838                           ; BSR set to: 1
 16839                           ;alarm.c: 97:         {;alarm.c: 98:             timeBattery = 0;
 16840  006A7C  0E00               	movlw	0
 16841  006A7E  0102               	movlb	2	; () banked
 16842  006A80  6F81               	movwf	(BatteryFailAlarm@timeBattery+1)& (0+255),b
 16843  006A82  0E00               	movlw	0
 16844  006A84  6F80               	movwf	BatteryFailAlarm@timeBattery& (0+255),b
 16845                           
 16846                           ; BSR set to: 2
 16847                           ;alarm.c: 99:             ClearNoPowerSupplyAlarm();
 16848  006A86  ECDE  F052         	call	_ClearNoPowerSupplyAlarm	;wreg free
 16849  006A8A                     l20799:
 16850                           
 16851                           ;alarm.c: 101:         return batteryFailAlarm;
 16852  006A8A  0100               	movlb	0	; () banked
 16853  006A8C  51F7               	movf	_batteryFailAlarm& (0+255),w,b
 16854                           
 16855                           ; BSR set to: 0
 16856  006A8E  0012               	return		;funcret
 16857  006A90                     __end_of_BatteryFailAlarm:
 16858                           	opt callstack 0
 16859                           
 16860 ;; *************** function _VeryHighPressureAlarmHigh *****************
 16861 ;; Defined at:
 16862 ;;		line 176 in file "alarm.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;		None
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;		None
 16867 ;; Return value:  Size  Location     Type
 16868 ;;                  1    wreg      _Bool 
 16869 ;; Registers used:
 16870 ;;		wreg, status,2
 16871 ;; Tracked objects:
 16872 ;;		On entry : 3F/2
 16873 ;;		On exit  : 3F/2
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16880 ;;Total ram usage:        0 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:   16
 16883 ;; This function calls:
 16884 ;;		Nothing
 16885 ;; This function is called by:
 16886 ;;		_MuteAlarm
 16887 ;;		i2_MuteAlarm
 16888 ;;		_AlarmCheckTask
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892                           	psect	text123
 16893  00A67C                     __ptext123:
 16894                           	opt callstack 0
 16895  00A67C                     _VeryHighPressureAlarmHigh:
 16896                           	opt callstack 13
 16897                           
 16898                           ; BSR set to: 2
 16899                           ;alarm.c: 177:     return veryHighPressureAlarmHigh;
 16900                           
 16901                           ; BSR set to: 0
 16902                           ;incstack = 0
 16903  00A67C  51AC               	movf	_veryHighPressureAlarmHigh& (0+255),w,b
 16904                           
 16905                           ; BSR set to: 2
 16906  00A67E  0012               	return		;funcret
 16907  00A680                     __end_of_VeryHighPressureAlarmHigh:
 16908                           	opt callstack 0
 16909                           
 16910 ;; *************** function _SetAlarmSV1 *****************
 16911 ;; Defined at:
 16912 ;;		line 883 in file "monitor.c"
 16913 ;; Parameters:    Size  Location     Type
 16914 ;;  value           1    wreg     _Bool 
 16915 ;; Auto vars:     Size  Location     Type
 16916 ;;  value           1  131[BANK1 ] _Bool 
 16917 ;; Return value:  Size  Location     Type
 16918 ;;                  1    wreg      void 
 16919 ;; Registers used:
 16920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16921 ;; Tracked objects:
 16922 ;;		On entry : 3C/0
 16923 ;;		On exit  : 3D/0
 16924 ;;		Unchanged: 0/0
 16925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16929 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16930 ;;Total ram usage:        1 bytes
 16931 ;; Hardware stack levels used:    1
 16932 ;; Hardware stack levels required when called:   25
 16933 ;; This function calls:
 16934 ;;		_printf
 16935 ;; This function is called by:
 16936 ;;		_main
 16937 ;;		_MuteAlarm
 16938 ;;		_AlarmCheckTask
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text124
 16943  009698                     __ptext124:
 16944                           	opt callstack 0
 16945  009698                     _SetAlarmSV1:
 16946                           	opt callstack 5
 16947                           
 16948                           ; BSR set to: 2
 16949                           ;incstack = 0
 16950                           ;SetAlarmSV1@value stored from wreg
 16951  009698  0101               	movlb	1	; () banked
 16952  00969A  6F83               	movwf	SetAlarmSV1@value& (0+255),b
 16953                           
 16954                           ;monitor.c: 884:     static _Bool last= 0;;monitor.c: 885:     if (last!=value) printf("
      +                          \r\nAlSV1: %d\r\n", value);
 16955  00969C  0101               	movlb	1	; () banked
 16956  00969E  5183               	movf	SetAlarmSV1@value& (0+255),w,b
 16957  0096A0  0100               	movlb	0	; () banked
 16958  0096A2  19F2               	xorwf	SetAlarmSV1@last& (0+255),w,b
 16959  0096A4  B4D8               	btfsc	status,2,c
 16960  0096A6  D00B               	goto	l20565
 16961                           
 16962                           ; BSR set to: 0
 16963  0096A8  0E5C               	movlw	low STR_47
 16964  0096AA  0101               	movlb	1	; () banked
 16965  0096AC  6F71               	movwf	printf@fmt& (0+255),b
 16966  0096AE  0EFF               	movlw	high STR_47
 16967  0096B0  6F72               	movwf	(printf@fmt+1)& (0+255),b
 16968  0096B2  0060  F60C  F173   	movff	SetAlarmSV1@value,?_printf+2
 16969  0096B8  6B74               	clrf	(?_printf+3)& (0+255),b
 16970  0096BA  ECFF  F04C         	call	_printf	;wreg free
 16971  0096BE                     l20565:
 16972                           
 16973                           ;monitor.c: 886:     alarmSV1 = value;
 16974  0096BE  0060  F60C  F2A0   	movff	SetAlarmSV1@value,_alarmSV1
 16975                           
 16976                           ;monitor.c: 887:     last = value;
 16977  0096C4  0060  F60C  F0F2   	movff	SetAlarmSV1@value,SetAlarmSV1@last
 16978  0096CA  0012               	return		;funcret
 16979  0096CC                     __end_of_SetAlarmSV1:
 16980                           	opt callstack 0
 16981                           
 16982 ;; *************** function _SetAlarmLED *****************
 16983 ;; Defined at:
 16984 ;;		line 88 in file "buttons.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;  type            1    wreg     unsigned char 
 16987 ;; Auto vars:     Size  Location     Type
 16988 ;;  type            1    4[BANK1 ] unsigned char 
 16989 ;; Return value:  Size  Location     Type
 16990 ;;                  1    wreg      void 
 16991 ;; Registers used:
 16992 ;;		wreg
 16993 ;; Tracked objects:
 16994 ;;		On entry : 3F/2
 16995 ;;		On exit  : 0/0
 16996 ;;		Unchanged: 0/0
 16997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16999 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17001 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17002 ;;Total ram usage:        1 bytes
 17003 ;; Hardware stack levels used:    1
 17004 ;; Hardware stack levels required when called:   16
 17005 ;; This function calls:
 17006 ;;		Nothing
 17007 ;; This function is called by:
 17008 ;;		_AlarmCheckTask
 17009 ;; This function uses a non-reentrant model
 17010 ;;
 17011                           
 17012                           	psect	text125
 17013  00A2B4                     __ptext125:
 17014                           	opt callstack 0
 17015  00A2B4                     _SetAlarmLED:
 17016                           	opt callstack 13
 17017                           
 17018                           ;incstack = 0
 17019                           ;SetAlarmLED@type stored from wreg
 17020  00A2B4  0101               	movlb	1	; () banked
 17021  00A2B6  6F04               	movwf	SetAlarmLED@type& (0+255),b
 17022                           
 17023                           ;buttons.c: 89:     ledType = type;
 17024  00A2B8  0060  F410  F0FB   	movff	SetAlarmLED@type,_ledType
 17025  00A2BE  86BD               	bsf	189,3,c	;volatile
 17026  00A2C0  0012               	return		;funcret
 17027  00A2C2                     __end_of_SetAlarmLED:
 17028                           	opt callstack 0
 17029                           
 17030 ;; *************** function _Get5V *****************
 17031 ;; Defined at:
 17032 ;;		line 849 in file "monitor.c"
 17033 ;; Parameters:    Size  Location     Type
 17034 ;;		None
 17035 ;; Auto vars:     Size  Location     Type
 17036 ;;  mv              4   32[BANK1 ] long 
 17037 ;;  v12             2   38[BANK1 ] short 
 17038 ;;  adc             2   36[BANK1 ] unsigned short 
 17039 ;; Return value:  Size  Location     Type
 17040 ;;                  2   30[BANK1 ] short 
 17041 ;; Registers used:
 17042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17043 ;; Tracked objects:
 17044 ;;		On entry : 3F/1
 17045 ;;		On exit  : 3F/1
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17048 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17049 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17051 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17052 ;;Total ram usage:       10 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; Hardware stack levels required when called:   18
 17055 ;; This function calls:
 17056 ;;		_AdcGetData
 17057 ;;		___aldiv
 17058 ;; This function is called by:
 17059 ;;		_MonitorFailAlarm
 17060 ;; This function uses a non-reentrant model
 17061 ;;
 17062                           
 17063                           	psect	text126
 17064  0085DE                     __ptext126:
 17065                           	opt callstack 0
 17066  0085DE                     _Get5V:
 17067                           	opt callstack 10
 17068                           
 17069                           ; BSR set to: 1
 17070                           ;monitor.c: 850:     adc_result_t adc = AdcGetData(1);
 17071                           
 17072                           ;incstack = 0
 17073  0085DE  0E00               	movlw	0
 17074  0085E0  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
 17075  0085E2  0E01               	movlw	1
 17076  0085E4  6F0A               	movwf	AdcGetData@id& (0+255),b
 17077  0085E6  EC99  F044         	call	_AdcGetData	;wreg free
 17078  0085EA  0060  F428  F124   	movff	?_AdcGetData,Get5V@adc
 17079  0085F0  0060  F42C  F125   	movff	?_AdcGetData+1,Get5V@adc+1
 17080                           
 17081                           ; BSR set to: 1
 17082                           ;monitor.c: 851:     int32_t mv = adc;
 17083  0085F6  0060  F490  F120   	movff	Get5V@adc,Get5V@mv
 17084  0085FC  0060  F494  F121   	movff	Get5V@adc+1,Get5V@mv+1
 17085  008602  6B22               	clrf	(Get5V@mv+2)& (0+255),b
 17086  008604  6B23               	clrf	(Get5V@mv+3)& (0+255),b
 17087                           
 17088                           ; BSR set to: 1
 17089                           ;monitor.c: 853:     int16_t v12 = mv/2;
 17090  008606  0060  F480  F110   	movff	Get5V@mv,___aldiv@dividend
 17091  00860C  0060  F484  F111   	movff	Get5V@mv+1,___aldiv@dividend+1
 17092  008612  0060  F488  F112   	movff	Get5V@mv+2,___aldiv@dividend+2
 17093  008618  0060  F48C  F113   	movff	Get5V@mv+3,___aldiv@dividend+3
 17094  00861E  0E02               	movlw	2
 17095  008620  6F14               	movwf	___aldiv@divisor& (0+255),b
 17096  008622  0E00               	movlw	0
 17097  008624  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 17098  008626  0E00               	movlw	0
 17099  008628  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 17100  00862A  0E00               	movlw	0
 17101  00862C  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 17102  00862E  ECB4  F035         	call	___aldiv	;wreg free
 17103  008632  0060  F440  F126   	movff	?___aldiv,Get5V@v12
 17104  008638  0060  F444  F127   	movff	?___aldiv+1,Get5V@v12+1
 17105                           
 17106                           ; BSR set to: 1
 17107                           ;monitor.c: 854:     return v12;
 17108  00863E  0060  F498  F11E   	movff	Get5V@v12,?_Get5V
 17109  008644  0060  F49C  F11F   	movff	Get5V@v12+1,?_Get5V+1
 17110                           
 17111                           ; BSR set to: 1
 17112  00864A  0012               	return		;funcret
 17113  00864C                     __end_of_Get5V:
 17114                           	opt callstack 0
 17115                           
 17116 ;; *************** function _SetVeryHighPressureAlarmHigh *****************
 17117 ;; Defined at:
 17118 ;;		line 233 in file "alarm.c"
 17119 ;; Parameters:    Size  Location     Type
 17120 ;;		None
 17121 ;; Auto vars:     Size  Location     Type
 17122 ;;		None
 17123 ;; Return value:  Size  Location     Type
 17124 ;;                  1    wreg      void 
 17125 ;; Registers used:
 17126 ;;		wreg, status,2
 17127 ;; Tracked objects:
 17128 ;;		On entry : 3F/1
 17129 ;;		On exit  : 3F/2
 17130 ;;		Unchanged: 0/0
 17131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17136 ;;Total ram usage:        0 bytes
 17137 ;; Hardware stack levels used:    1
 17138 ;; Hardware stack levels required when called:   16
 17139 ;; This function calls:
 17140 ;;		Nothing
 17141 ;; This function is called by:
 17142 ;;		_HighPressureAlarmLow
 17143 ;; This function uses a non-reentrant model
 17144 ;;
 17145                           
 17146                           	psect	text127
 17147  00A4C0                     __ptext127:
 17148                           	opt callstack 0
 17149  00A4C0                     _SetVeryHighPressureAlarmHigh:
 17150                           	opt callstack 12
 17151                           
 17152                           ; BSR set to: 1
 17153                           
 17154                           ; BSR set to: 1
 17155                           ;incstack = 0
 17156  00A4C0  0E01               	movlw	1
 17157  00A4C2  0102               	movlb	2	; () banked
 17158  00A4C4  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
 17159                           
 17160                           ; BSR set to: 2
 17161  00A4C6  0012               	return		;funcret
 17162  00A4C8                     __end_of_SetVeryHighPressureAlarmHigh:
 17163                           	opt callstack 0
 17164                           
 17165 ;; *************** function _SetHighPressureAlarmHigh *****************
 17166 ;; Defined at:
 17167 ;;		line 232 in file "alarm.c"
 17168 ;; Parameters:    Size  Location     Type
 17169 ;;		None
 17170 ;; Auto vars:     Size  Location     Type
 17171 ;;		None
 17172 ;; Return value:  Size  Location     Type
 17173 ;;                  1    wreg      void 
 17174 ;; Registers used:
 17175 ;;		wreg, status,2
 17176 ;; Tracked objects:
 17177 ;;		On entry : 3F/2
 17178 ;;		On exit  : 3F/2
 17179 ;;		Unchanged: 0/0
 17180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17185 ;;Total ram usage:        0 bytes
 17186 ;; Hardware stack levels used:    1
 17187 ;; Hardware stack levels required when called:   16
 17188 ;; This function calls:
 17189 ;;		Nothing
 17190 ;; This function is called by:
 17191 ;;		_HighPressureAlarmLow
 17192 ;; This function uses a non-reentrant model
 17193 ;;
 17194                           
 17195                           	psect	text128
 17196  00A5A4                     __ptext128:
 17197                           	opt callstack 0
 17198  00A5A4                     _SetHighPressureAlarmHigh:
 17199                           	opt callstack 12
 17200                           
 17201                           ; BSR set to: 2
 17202                           
 17203                           ; BSR set to: 2
 17204                           ;incstack = 0
 17205  00A5A4  0E01               	movlw	1
 17206  00A5A6  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
 17207                           
 17208                           ; BSR set to: 2
 17209  00A5A8  0012               	return		;funcret
 17210  00A5AA                     __end_of_SetHighPressureAlarmHigh:
 17211                           	opt callstack 0
 17212                           
 17213 ;; *************** function _GetMaxPressure *****************
 17214 ;; Defined at:
 17215 ;;		line 171 in file "monitor.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;		None
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;  temp            2   20[BANK1 ] int 
 17220 ;; Return value:  Size  Location     Type
 17221 ;;                  2   18[BANK1 ] short 
 17222 ;; Registers used:
 17223 ;;		wreg, status,2, status,0, cstack
 17224 ;; Tracked objects:
 17225 ;;		On entry : 3F/2
 17226 ;;		On exit  : 3F/2
 17227 ;;		Unchanged: 0/0
 17228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17229 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17230 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17232 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17233 ;;Total ram usage:        4 bytes
 17234 ;; Hardware stack levels used:    1
 17235 ;; Hardware stack levels required when called:   17
 17236 ;; This function calls:
 17237 ;;		___awdiv
 17238 ;; This function is called by:
 17239 ;;		_HighPressureAlarmLow
 17240 ;; This function uses a non-reentrant model
 17241 ;;
 17242                           
 17243                           	psect	text129
 17244  00936C                     __ptext129:
 17245                           	opt callstack 0
 17246  00936C                     _GetMaxPressure:
 17247                           	opt callstack 11
 17248                           
 17249                           ; BSR set to: 2
 17250                           ;monitor.c: 172:     int temp = alarmMaxPressure/5;
 17251                           
 17252                           ; BSR set to: 2
 17253                           ;incstack = 0
 17254  00936C  0060  F940  F10A   	movff	_alarmMaxPressure,___awdiv@dividend
 17255  009372  0060  F944  F10B   	movff	_alarmMaxPressure+1,___awdiv@dividend+1
 17256  009378  0E00               	movlw	0
 17257  00937A  0101               	movlb	1	; () banked
 17258  00937C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 17259  00937E  0E05               	movlw	5
 17260  009380  6F0C               	movwf	___awdiv@divisor& (0+255),b
 17261  009382  EC9D  F03F         	call	___awdiv	;wreg free
 17262  009386  0060  F428  F114   	movff	?___awdiv,GetMaxPressure@temp
 17263  00938C  0060  F42C  F115   	movff	?___awdiv+1,GetMaxPressure@temp+1
 17264                           
 17265                           ; BSR set to: 1
 17266                           ;monitor.c: 174:     alarmMaxPressure = 0;
 17267  009392  0E00               	movlw	0
 17268  009394  0102               	movlb	2	; () banked
 17269  009396  6F51               	movwf	(_alarmMaxPressure+1)& (0+255),b
 17270  009398  0E00               	movlw	0
 17271  00939A  6F50               	movwf	_alarmMaxPressure& (0+255),b
 17272                           
 17273                           ; BSR set to: 2
 17274                           ;monitor.c: 175:     return temp;
 17275  00939C  0060  F450  F112   	movff	GetMaxPressure@temp,?_GetMaxPressure
 17276  0093A2  0060  F454  F113   	movff	GetMaxPressure@temp+1,?_GetMaxPressure+1
 17277                           
 17278                           ; BSR set to: 2
 17279  0093A8  0012               	return		;funcret
 17280  0093AA                     __end_of_GetMaxPressure:
 17281                           	opt callstack 0
 17282                           
 17283 ;; *************** function _ClearAlarmLED *****************
 17284 ;; Defined at:
 17285 ;;		line 93 in file "buttons.c"
 17286 ;; Parameters:    Size  Location     Type
 17287 ;;		None
 17288 ;; Auto vars:     Size  Location     Type
 17289 ;;		None
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  1    wreg      void 
 17292 ;; Registers used:
 17293 ;;		wreg, status,2
 17294 ;; Tracked objects:
 17295 ;;		On entry : 3F/39
 17296 ;;		On exit  : 3F/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17303 ;;Total ram usage:        0 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; Hardware stack levels required when called:   16
 17306 ;; This function calls:
 17307 ;;		Nothing
 17308 ;; This function is called by:
 17309 ;;		_AlarmCheckTask
 17310 ;; This function uses a non-reentrant model
 17311 ;;
 17312                           
 17313                           	psect	text130
 17314  00A420                     __ptext130:
 17315                           	opt callstack 0
 17316  00A420                     _ClearAlarmLED:
 17317                           	opt callstack 13
 17318                           
 17319                           ; BSR set to: 57
 17320                           ;buttons.c: 94:     ledType = 0;
 17321                           
 17322                           ; BSR set to: 2
 17323                           ;incstack = 0
 17324  00A420  0E00               	movlw	0
 17325  00A422  0100               	movlb	0	; () banked
 17326  00A424  6FFB               	movwf	_ledType& (0+255),b
 17327                           
 17328                           ; BSR set to: 0
 17329  00A426  96BD               	bcf	189,3,c	;volatile
 17330                           
 17331                           ; BSR set to: 0
 17332  00A428  0012               	return		;funcret
 17333  00A42A                     __end_of_ClearAlarmLED:
 17334                           	opt callstack 0
 17335                           
 17336 ;; *************** function _BuzzerSet *****************
 17337 ;; Defined at:
 17338 ;;		line 64 in file "buzzer.c"
 17339 ;; Parameters:    Size  Location     Type
 17340 ;;  state           1    wreg     unsigned char 
 17341 ;; Auto vars:     Size  Location     Type
 17342 ;;  state           1  133[BANK1 ] unsigned char 
 17343 ;; Return value:  Size  Location     Type
 17344 ;;                  1    wreg      void 
 17345 ;; Registers used:
 17346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17347 ;; Tracked objects:
 17348 ;;		On entry : 3F/2
 17349 ;;		On exit  : 0/0
 17350 ;;		Unchanged: 0/0
 17351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17353 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17355 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17356 ;;Total ram usage:        1 bytes
 17357 ;; Hardware stack levels used:    1
 17358 ;; Hardware stack levels required when called:   26
 17359 ;; This function calls:
 17360 ;;		_BuzzerOff
 17361 ;;		_BuzzerTask
 17362 ;; This function is called by:
 17363 ;;		_AlarmCheckTask
 17364 ;; This function uses a non-reentrant model
 17365 ;;
 17366                           
 17367                           	psect	text131
 17368  009F8A                     __ptext131:
 17369                           	opt callstack 0
 17370  009F8A                     _BuzzerSet:
 17371                           	opt callstack 3
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;incstack = 0
 17375                           ;BuzzerSet@state stored from wreg
 17376  009F8A  0101               	movlb	1	; () banked
 17377  009F8C  6F85               	movwf	BuzzerSet@state& (0+255),b
 17378                           
 17379                           ;buzzer.c: 65:     alarmState = state;
 17380  009F8E  0060  F614  F0FA   	movff	BuzzerSet@state,_alarmState
 17381                           
 17382                           ;buzzer.c: 66:     alarmStep = 0;
 17383  009F94  0E00               	movlw	0
 17384  009F96  0101               	movlb	1	; () banked
 17385  009F98  6FEF               	movwf	_alarmStep& (0+255),b
 17386                           
 17387                           ; BSR set to: 1
 17388                           ;buzzer.c: 67:     BuzzerOff();
 17389  009F9A  ECA6  F050         	call	_BuzzerOff	;wreg free
 17390                           
 17391                           ; BSR set to: 57
 17392                           ;buzzer.c: 68:     BuzzerTask();
 17393  009F9E  ECD0  F014         	call	_BuzzerTask	;wreg free
 17394  009FA2  0012               	return		;funcret
 17395  009FA4                     __end_of_BuzzerSet:
 17396                           	opt callstack 0
 17397                           
 17398 ;; *************** function _BuzzerTask *****************
 17399 ;; Defined at:
 17400 ;;		line 132 in file "buzzer.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;		None
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;		None
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  1    wreg      void 
 17407 ;; Registers used:
 17408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17409 ;; Tracked objects:
 17410 ;;		On entry : 3F/39
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17416 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17417 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17418 ;;Total ram usage:        2 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:   25
 17421 ;; This function calls:
 17422 ;;		_BuzzerOff
 17423 ;;		_BuzzerOn
 17424 ;;		_ClearMonitorFailAlarm
 17425 ;;		_SetMonitorFailAlarm
 17426 ;;		_TMR4_Period8BitSet
 17427 ;;		_TMR4_SetInterruptHandler
 17428 ;;		_TMR4_Start
 17429 ;;		_TMR4_Stop
 17430 ;;		_printf
 17431 ;; This function is called by:
 17432 ;;		_BuzzerSet
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           	psect	text132
 17437  0029A0                     __ptext132:
 17438                           	opt callstack 0
 17439  0029A0                     _BuzzerTask:
 17440                           	opt callstack 3
 17441                           
 17442                           ; BSR set to: 57
 17443                           ;buzzer.c: 133:     static int noDetections = 0;;buzzer.c: 134:     if (on) {
 17444                           
 17445                           ;incstack = 0
 17446  0029A0  0100               	movlb	0	; () banked
 17447  0029A2  51F9               	movf	_on& (0+255),w,b
 17448  0029A4  B4D8               	btfsc	status,2,c
 17449  0029A6  D026               	goto	l19427
 17450                           
 17451                           ; BSR set to: 0
 17452                           ;buzzer.c: 136:         if (detected) {
 17453  0029A8  51F8               	movf	_detected& (0+255),w,b
 17454  0029AA  B4D8               	btfsc	status,2,c
 17455  0029AC  D00E               	goto	l19419
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;buzzer.c: 138:             ClearMonitorFailAlarm();
 17459  0029AE  EC68  F052         	call	_ClearMonitorFailAlarm	;wreg free
 17460                           
 17461                           ; BSR set to: 2
 17462                           ;buzzer.c: 139:             noDetections = 0;
 17463  0029B2  0E00               	movlw	0
 17464  0029B4  6F83               	movwf	(BuzzerTask@noDetections+1)& (0+255),b
 17465  0029B6  0E00               	movlw	0
 17466  0029B8  6F82               	movwf	BuzzerTask@noDetections& (0+255),b
 17467                           
 17468                           ; BSR set to: 2
 17469                           ;buzzer.c: 140:             printf("_DB_");
 17470  0029BA  0EC6               	movlw	low STR_15
 17471  0029BC  0101               	movlb	1	; () banked
 17472  0029BE  6F71               	movwf	printf@fmt& (0+255),b
 17473  0029C0  0EFF               	movlw	high STR_15
 17474  0029C2  6F72               	movwf	(printf@fmt+1)& (0+255),b
 17475  0029C4  ECFF  F04C         	call	_printf	;wreg free
 17476                           
 17477                           ;buzzer.c: 141:         } else {
 17478  0029C8  D015               	goto	l19427
 17479  0029CA                     l19419:
 17480                           
 17481                           ; BSR set to: 0
 17482                           ;buzzer.c: 144:             if (noDetections>=3) {
 17483  0029CA  0102               	movlb	2	; () banked
 17484  0029CC  BF83               	btfsc	(BuzzerTask@noDetections+1)& (0+255),7,b
 17485  0029CE  D009               	goto	l19423
 17486  0029D0  5183               	movf	(BuzzerTask@noDetections+1)& (0+255),w,b
 17487  0029D2  E104               	bnz	u19090
 17488  0029D4  0E03               	movlw	3
 17489  0029D6  5D82               	subwf	BuzzerTask@noDetections& (0+255),w,b
 17490  0029D8  A0D8               	btfss	status,0,c
 17491  0029DA  D003               	goto	l19423
 17492  0029DC                     u19090:
 17493                           
 17494                           ; BSR set to: 2
 17495                           ;buzzer.c: 145:                 SetMonitorFailAlarm();
 17496  0029DC  EC64  F052         	call	_SetMonitorFailAlarm	;wreg free
 17497                           
 17498                           ;buzzer.c: 146:             } else {
 17499  0029E0  D002               	goto	l19425
 17500  0029E2                     l19423:
 17501                           
 17502                           ; BSR set to: 2
 17503                           ;buzzer.c: 147:                 noDetections ++;
 17504  0029E2  4B82               	infsnz	BuzzerTask@noDetections& (0+255),f,b
 17505  0029E4  2B83               	incf	(BuzzerTask@noDetections+1)& (0+255),f,b
 17506  0029E6                     l19425:
 17507                           
 17508                           ; BSR set to: 2
 17509                           ;buzzer.c: 149:             printf("_EB_");
 17510  0029E6  0ECB               	movlw	low STR_16
 17511  0029E8  0101               	movlb	1	; () banked
 17512  0029EA  6F71               	movwf	printf@fmt& (0+255),b
 17513  0029EC  0EFF               	movlw	high STR_16
 17514  0029EE  6F72               	movwf	(printf@fmt+1)& (0+255),b
 17515  0029F0  ECFF  F04C         	call	_printf	;wreg free
 17516  0029F4                     l19427:
 17517                           
 17518                           ;buzzer.c: 152:     BuzzerOff();
 17519  0029F4  ECA6  F050         	call	_BuzzerOff	;wreg free
 17520                           
 17521                           ; BSR set to: 57
 17522                           ;buzzer.c: 153:     TMR4_Stop();
 17523  0029F8  EC42  F053         	call	_TMR4_Stop	;wreg free
 17524                           
 17525                           ; BSR set to: 57
 17526                           ;buzzer.c: 154:     TMR4_SetInterruptHandler(BuzzerHandler);
 17527  0029FC  0EDA               	movlw	low _BuzzerHandler
 17528  0029FE  0101               	movlb	1	; () banked
 17529  002A00  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 17530  002A02  0EA5               	movlw	high _BuzzerHandler
 17531  002A04  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17532  002A06  EC61  F051         	call	_TMR4_SetInterruptHandler	;wreg free
 17533                           
 17534                           ;buzzer.c: 155:     switch(alarmState) {
 17535  002A0A  D187               	goto	l19695
 17536  002A0C                     l19433:
 17537                           
 17538                           ; BSR set to: 1
 17539                           ;buzzer.c: 159:                     BuzzerOn(0xBD);
 17540  002A0C  0EBD               	movlw	189
 17541  002A0E  EC3A  F04F         	call	_BuzzerOn
 17542                           
 17543                           ; BSR set to: 57
 17544                           ;buzzer.c: 160:                     TMR4_Period8BitSet(51);
 17545  002A12  0E33               	movlw	51
 17546  002A14  ECDD  F051         	call	_TMR4_Period8BitSet
 17547  002A18                     l19437:
 17548                           
 17549                           ;buzzer.c: 161:                     alarmStep++;
 17550  002A18  0101               	movlb	1	; () banked
 17551  002A1A  2BEF               	incf	_alarmStep& (0+255),f,b
 17552  002A1C                     l19439:
 17553                           
 17554                           ; BSR set to: 1
 17555                           ;buzzer.c: 162:                     TMR4_Start();
 17556  002A1C  EC40  F053         	call	_TMR4_Start	;wreg free
 17557                           
 17558                           ;buzzer.c: 163:                     break;
 17559  002A20  0012               	return	
 17560  002A22                     l19441:
 17561                           
 17562                           ; BSR set to: 1
 17563                           ;buzzer.c: 165:                     TMR4_Period8BitSet(51);
 17564  002A22  0E33               	movlw	51
 17565  002A24  ECDD  F051         	call	_TMR4_Period8BitSet
 17566  002A28  D7F7               	goto	l19437
 17567  002A2A                     l19447:
 17568                           
 17569                           ; BSR set to: 1
 17570                           ;buzzer.c: 170:                     BuzzerOn(0xEE);
 17571  002A2A  0EEE               	movlw	238
 17572  002A2C  EC3A  F04F         	call	_BuzzerOn
 17573                           
 17574                           ; BSR set to: 57
 17575                           ;buzzer.c: 171:                     TMR4_Period8BitSet(51);
 17576  002A30  0E33               	movlw	51
 17577  002A32  ECDD  F051         	call	_TMR4_Period8BitSet
 17578  002A36  D7F0               	goto	l19437
 17579  002A38                     l2116:
 17580                           
 17581                           ; BSR set to: 1
 17582                           ;buzzer.c: 190:                     TMR4_Period8BitSet(255);
 17583                           
 17584                           ; BSR set to: 1
 17585  002A38  0EFF               	movlw	255
 17586  002A3A  ECDD  F051         	call	_TMR4_Period8BitSet
 17587  002A3E  D7EC               	goto	l19437
 17588  002A40                     l19461:
 17589                           
 17590                           ; BSR set to: 1
 17591                           ;buzzer.c: 195:                     TMR4_Period8BitSet(255);
 17592  002A40  0EFF               	movlw	255
 17593  002A42  ECDD  F051         	call	_TMR4_Period8BitSet
 17594  002A46                     l19463:
 17595                           
 17596                           ;buzzer.c: 196:                     alarmStep=0;
 17597  002A46  0E00               	movlw	0
 17598  002A48  0101               	movlb	1	; () banked
 17599  002A4A  6FEF               	movwf	_alarmStep& (0+255),b
 17600  002A4C  D7E7               	goto	l19439
 17601  002A4E                     l19467:
 17602                           
 17603                           ; BSR set to: 1
 17604                           ;buzzer.c: 200:                     TMR4_Period8BitSet(51);
 17605  002A4E  0E33               	movlw	51
 17606  002A50  ECDD  F051         	call	_TMR4_Period8BitSet
 17607  002A54  D7F8               	goto	l19463
 17608  002A56                     l19475:
 17609                           
 17610                           ; BSR set to: 1
 17611  002A56  51EF               	movf	_alarmStep& (0+255),w,b
 17612  002A58  6F83               	movwf	??_BuzzerTask& (0+255),b
 17613  002A5A  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 17614                           
 17615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17616                           ; Switch size 1, requested type "simple"
 17617                           ; Number of cases is 1, Range of values is 0 to 0
 17618                           ; switch strategies available:
 17619                           ; Name         Instructions Cycles
 17620                           ; simple_byte            4     3 (average)
 17621                           ;	Chosen strategy is simple_byte
 17622  002A5C  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 17623  002A5E  0A00               	xorlw	0	; case 0
 17624  002A60  A4D8               	btfss	status,2,c
 17625  002A62  D7F5               	goto	l19467
 17626                           
 17627                           ; BSR set to: 1
 17628                           ; Switch size 1, requested type "simple"
 17629                           ; Number of cases is 19, Range of values is 0 to 18
 17630                           ; switch strategies available:
 17631                           ; Name         Instructions Cycles
 17632                           ; simple_byte           58    30 (average)
 17633                           ;	Chosen strategy is simple_byte
 17634  002A64  5183               	movf	??_BuzzerTask& (0+255),w,b
 17635  002A66  0A00               	xorlw	0	; case 0
 17636  002A68  B4D8               	btfsc	status,2,c
 17637  002A6A  D7D0               	goto	l19433
 17638  002A6C  0A01               	xorlw	1	; case 1
 17639  002A6E  B4D8               	btfsc	status,2,c
 17640  002A70  D7D8               	goto	l19441
 17641  002A72  0A03               	xorlw	3	; case 2
 17642  002A74  B4D8               	btfsc	status,2,c
 17643  002A76  D7D9               	goto	l19447
 17644  002A78  0A01               	xorlw	1	; case 3
 17645  002A7A  B4D8               	btfsc	status,2,c
 17646  002A7C  D7DD               	goto	l2116
 17647  002A7E  0A07               	xorlw	7	; case 4
 17648  002A80  B4D8               	btfsc	status,2,c
 17649  002A82  D7DA               	goto	l2116
 17650  002A84  0A01               	xorlw	1	; case 5
 17651  002A86  B4D8               	btfsc	status,2,c
 17652  002A88  D7D7               	goto	l2116
 17653  002A8A  0A03               	xorlw	3	; case 6
 17654  002A8C  B4D8               	btfsc	status,2,c
 17655  002A8E  D7D4               	goto	l2116
 17656  002A90  0A01               	xorlw	1	; case 7
 17657  002A92  B4D8               	btfsc	status,2,c
 17658  002A94  D7D1               	goto	l2116
 17659  002A96  0A0F               	xorlw	15	; case 8
 17660  002A98  B4D8               	btfsc	status,2,c
 17661  002A9A  D7CE               	goto	l2116
 17662  002A9C  0A01               	xorlw	1	; case 9
 17663  002A9E  B4D8               	btfsc	status,2,c
 17664  002AA0  D7CB               	goto	l2116
 17665  002AA2  0A03               	xorlw	3	; case 10
 17666  002AA4  B4D8               	btfsc	status,2,c
 17667  002AA6  D7C8               	goto	l2116
 17668  002AA8  0A01               	xorlw	1	; case 11
 17669  002AAA  B4D8               	btfsc	status,2,c
 17670  002AAC  D7C5               	goto	l2116
 17671  002AAE  0A07               	xorlw	7	; case 12
 17672  002AB0  B4D8               	btfsc	status,2,c
 17673  002AB2  D7C2               	goto	l2116
 17674  002AB4  0A01               	xorlw	1	; case 13
 17675  002AB6  B4D8               	btfsc	status,2,c
 17676  002AB8  D7BF               	goto	l2116
 17677  002ABA  0A03               	xorlw	3	; case 14
 17678  002ABC  B4D8               	btfsc	status,2,c
 17679  002ABE  D7BC               	goto	l2116
 17680  002AC0  0A01               	xorlw	1	; case 15
 17681  002AC2  B4D8               	btfsc	status,2,c
 17682  002AC4  D7B9               	goto	l2116
 17683  002AC6  0A1F               	xorlw	31	; case 16
 17684  002AC8  B4D8               	btfsc	status,2,c
 17685  002ACA  D7B6               	goto	l2116
 17686  002ACC  0A01               	xorlw	1	; case 17
 17687  002ACE  B4D8               	btfsc	status,2,c
 17688  002AD0  D7B3               	goto	l2116
 17689  002AD2  0A03               	xorlw	3	; case 18
 17690  002AD4  B4D8               	btfsc	status,2,c
 17691  002AD6  D7B4               	goto	l19461
 17692  002AD8  D7BA               	goto	l19467
 17693  002ADA                     l19477:
 17694                           
 17695                           ; BSR set to: 1
 17696                           ;buzzer.c: 209:                     BuzzerOn(0xEE);
 17697  002ADA  0EEE               	movlw	238
 17698  002ADC  EC3A  F04F         	call	_BuzzerOn
 17699                           
 17700                           ; BSR set to: 57
 17701                           ;buzzer.c: 210:                     TMR4_Period8BitSet(51);
 17702  002AE0  0E33               	movlw	51
 17703  002AE2  ECDD  F051         	call	_TMR4_Period8BitSet
 17704  002AE6  D798               	goto	l19437
 17705  002AE8                     l19485:
 17706                           
 17707                           ; BSR set to: 1
 17708                           ;buzzer.c: 215:                     TMR4_Period8BitSet(51);
 17709  002AE8  0E33               	movlw	51
 17710  002AEA  ECDD  F051         	call	_TMR4_Period8BitSet
 17711  002AEE  D794               	goto	l19437
 17712  002AF0                     l19491:
 17713                           
 17714                           ; BSR set to: 1
 17715                           ;buzzer.c: 220:                     BuzzerOn(0x8D);
 17716  002AF0  0E8D               	movlw	141
 17717  002AF2  EC3A  F04F         	call	_BuzzerOn
 17718                           
 17719                           ; BSR set to: 57
 17720                           ;buzzer.c: 221:                     TMR4_Period8BitSet(51);
 17721  002AF6  0E33               	movlw	51
 17722  002AF8  ECDD  F051         	call	_TMR4_Period8BitSet
 17723  002AFC  D78D               	goto	l19437
 17724  002AFE                     l19499:
 17725                           
 17726                           ; BSR set to: 1
 17727                           ;buzzer.c: 226:                     TMR4_Period8BitSet(51);
 17728  002AFE  0E33               	movlw	51
 17729  002B00  ECDD  F051         	call	_TMR4_Period8BitSet
 17730  002B04  D789               	goto	l19437
 17731  002B06                     l19505:
 17732                           
 17733                           ; BSR set to: 1
 17734                           ;buzzer.c: 231:                     BuzzerOn(0xB2);
 17735  002B06  0EB2               	movlw	178
 17736  002B08  EC3A  F04F         	call	_BuzzerOn
 17737                           
 17738                           ; BSR set to: 57
 17739                           ;buzzer.c: 232:                     TMR4_Period8BitSet(51);
 17740  002B0C  0E33               	movlw	51
 17741  002B0E  ECDD  F051         	call	_TMR4_Period8BitSet
 17742  002B12  D782               	goto	l19437
 17743  002B14                     l2142:
 17744                           
 17745                           ; BSR set to: 1
 17746                           ;buzzer.c: 243:                     TMR4_Period8BitSet(255);
 17747                           
 17748                           ; BSR set to: 1
 17749  002B14  0EFF               	movlw	255
 17750  002B16  ECDD  F051         	call	_TMR4_Period8BitSet
 17751  002B1A  D77E               	goto	l19437
 17752  002B1C                     l19519:
 17753                           
 17754                           ; BSR set to: 1
 17755                           ;buzzer.c: 248:                     TMR4_Period8BitSet(255);
 17756  002B1C  0EFF               	movlw	255
 17757  002B1E  ECDD  F051         	call	_TMR4_Period8BitSet
 17758  002B22  D791               	goto	l19463
 17759  002B24                     l19525:
 17760                           
 17761                           ; BSR set to: 1
 17762                           ;buzzer.c: 253:                     TMR4_Period8BitSet(51);
 17763  002B24  0E33               	movlw	51
 17764  002B26  ECDD  F051         	call	_TMR4_Period8BitSet
 17765  002B2A  D78D               	goto	l19463
 17766  002B2C                     l19533:
 17767                           
 17768                           ; BSR set to: 1
 17769  002B2C  51EF               	movf	_alarmStep& (0+255),w,b
 17770  002B2E  6F83               	movwf	??_BuzzerTask& (0+255),b
 17771  002B30  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 17772                           
 17773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17774                           ; Switch size 1, requested type "simple"
 17775                           ; Number of cases is 1, Range of values is 0 to 0
 17776                           ; switch strategies available:
 17777                           ; Name         Instructions Cycles
 17778                           ; simple_byte            4     3 (average)
 17779                           ;	Chosen strategy is simple_byte
 17780  002B32  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 17781  002B34  0A00               	xorlw	0	; case 0
 17782  002B36  A4D8               	btfss	status,2,c
 17783  002B38  D7F5               	goto	l19525
 17784                           
 17785                           ; BSR set to: 1
 17786                           ; Switch size 1, requested type "simple"
 17787                           ; Number of cases is 13, Range of values is 0 to 12
 17788                           ; switch strategies available:
 17789                           ; Name         Instructions Cycles
 17790                           ; simple_byte           40    21 (average)
 17791                           ;	Chosen strategy is simple_byte
 17792  002B3A  5183               	movf	??_BuzzerTask& (0+255),w,b
 17793  002B3C  0A00               	xorlw	0	; case 0
 17794  002B3E  B4D8               	btfsc	status,2,c
 17795  002B40  D7CC               	goto	l19477
 17796  002B42  0A01               	xorlw	1	; case 1
 17797  002B44  B4D8               	btfsc	status,2,c
 17798  002B46  D7D0               	goto	l19485
 17799  002B48  0A03               	xorlw	3	; case 2
 17800  002B4A  B4D8               	btfsc	status,2,c
 17801  002B4C  D7D1               	goto	l19491
 17802  002B4E  0A01               	xorlw	1	; case 3
 17803  002B50  B4D8               	btfsc	status,2,c
 17804  002B52  D7D5               	goto	l19499
 17805  002B54  0A07               	xorlw	7	; case 4
 17806  002B56  B4D8               	btfsc	status,2,c
 17807  002B58  D7D6               	goto	l19505
 17808  002B5A  0A01               	xorlw	1	; case 5
 17809  002B5C  B4D8               	btfsc	status,2,c
 17810  002B5E  D7DA               	goto	l2142
 17811  002B60  0A03               	xorlw	3	; case 6
 17812  002B62  B4D8               	btfsc	status,2,c
 17813  002B64  D7D7               	goto	l2142
 17814  002B66  0A01               	xorlw	1	; case 7
 17815  002B68  B4D8               	btfsc	status,2,c
 17816  002B6A  D7D4               	goto	l2142
 17817  002B6C  0A0F               	xorlw	15	; case 8
 17818  002B6E  B4D8               	btfsc	status,2,c
 17819  002B70  D7D1               	goto	l2142
 17820  002B72  0A01               	xorlw	1	; case 9
 17821  002B74  B4D8               	btfsc	status,2,c
 17822  002B76  D7CE               	goto	l2142
 17823  002B78  0A03               	xorlw	3	; case 10
 17824  002B7A  B4D8               	btfsc	status,2,c
 17825  002B7C  D7CB               	goto	l2142
 17826  002B7E  0A01               	xorlw	1	; case 11
 17827  002B80  B4D8               	btfsc	status,2,c
 17828  002B82  D7C8               	goto	l2142
 17829  002B84  0A07               	xorlw	7	; case 12
 17830  002B86  B4D8               	btfsc	status,2,c
 17831  002B88  D7C9               	goto	l19519
 17832  002B8A  D7CC               	goto	l19525
 17833  002B8C                     l19535:
 17834                           
 17835                           ; BSR set to: 1
 17836                           ;buzzer.c: 262:                     BuzzerOn(0xEE);
 17837  002B8C  0EEE               	movlw	238
 17838  002B8E  EC3A  F04F         	call	_BuzzerOn
 17839                           
 17840                           ; BSR set to: 57
 17841                           ;buzzer.c: 263:                     TMR4_Period8BitSet(46);
 17842  002B92  0E2E               	movlw	46
 17843  002B94  ECDD  F051         	call	_TMR4_Period8BitSet
 17844  002B98  D73F               	goto	l19437
 17845  002B9A                     l19543:
 17846                           
 17847                           ; BSR set to: 1
 17848                           ;buzzer.c: 268:                     TMR4_Period8BitSet(26);
 17849  002B9A  0E1A               	movlw	26
 17850  002B9C  ECDD  F051         	call	_TMR4_Period8BitSet
 17851  002BA0  D73B               	goto	l19437
 17852  002BA2                     l19549:
 17853                           
 17854                           ; BSR set to: 1
 17855                           ;buzzer.c: 273:                     BuzzerOn(0x8D);
 17856  002BA2  0E8D               	movlw	141
 17857  002BA4  EC3A  F04F         	call	_BuzzerOn
 17858                           
 17859                           ; BSR set to: 57
 17860                           ;buzzer.c: 274:                     TMR4_Period8BitSet(46);
 17861  002BA8  0E2E               	movlw	46
 17862  002BAA  ECDD  F051         	call	_TMR4_Period8BitSet
 17863  002BAE  D734               	goto	l19437
 17864  002BB0                     l19557:
 17865                           
 17866                           ; BSR set to: 1
 17867                           ;buzzer.c: 279:                     TMR4_Period8BitSet(26);
 17868  002BB0  0E1A               	movlw	26
 17869  002BB2  ECDD  F051         	call	_TMR4_Period8BitSet
 17870  002BB6  D730               	goto	l19437
 17871  002BB8                     l19563:
 17872                           
 17873                           ; BSR set to: 1
 17874                           ;buzzer.c: 284:                     BuzzerOn(0xB2);
 17875  002BB8  0EB2               	movlw	178
 17876  002BBA  EC3A  F04F         	call	_BuzzerOn
 17877                           
 17878                           ; BSR set to: 57
 17879                           ;buzzer.c: 285:                     TMR4_Period8BitSet(46);
 17880  002BBE  0E2E               	movlw	46
 17881  002BC0  ECDD  F051         	call	_TMR4_Period8BitSet
 17882  002BC4  D729               	goto	l19437
 17883  002BC6                     l19571:
 17884                           
 17885                           ; BSR set to: 1
 17886                           ;buzzer.c: 290:                     TMR4_Period8BitSet(102);
 17887  002BC6  0E66               	movlw	102
 17888  002BC8  ECDD  F051         	call	_TMR4_Period8BitSet
 17889  002BCC  D725               	goto	l19437
 17890  002BCE                     l19577:
 17891                           
 17892                           ; BSR set to: 1
 17893                           ;buzzer.c: 295:                     BuzzerOn(0x8D);
 17894  002BCE  0E8D               	movlw	141
 17895  002BD0  EC3A  F04F         	call	_BuzzerOn
 17896                           
 17897                           ; BSR set to: 57
 17898                           ;buzzer.c: 296:                     TMR4_Period8BitSet(46);
 17899  002BD4  0E2E               	movlw	46
 17900  002BD6  ECDD  F051         	call	_TMR4_Period8BitSet
 17901  002BDA  D71E               	goto	l19437
 17902  002BDC                     l19585:
 17903                           
 17904                           ; BSR set to: 1
 17905                           ;buzzer.c: 301:                     TMR4_Period8BitSet(26);
 17906  002BDC  0E1A               	movlw	26
 17907  002BDE  ECDD  F051         	call	_TMR4_Period8BitSet
 17908  002BE2  D71A               	goto	l19437
 17909  002BE4                     l19591:
 17910                           
 17911                           ; BSR set to: 1
 17912                           ;buzzer.c: 306:                     BuzzerOn(0xB2);
 17913  002BE4  0EB2               	movlw	178
 17914  002BE6  EC3A  F04F         	call	_BuzzerOn
 17915                           
 17916                           ; BSR set to: 57
 17917                           ;buzzer.c: 307:                     TMR4_Period8BitSet(46);
 17918  002BEA  0E2E               	movlw	46
 17919  002BEC  ECDD  F051         	call	_TMR4_Period8BitSet
 17920  002BF0  D713               	goto	l19437
 17921  002BF2                     l19599:
 17922                           
 17923                           ; BSR set to: 1
 17924                           ;buzzer.c: 312:                     TMR4_Period8BitSet(255);
 17925  002BF2  0EFF               	movlw	255
 17926  002BF4  ECDD  F051         	call	_TMR4_Period8BitSet
 17927  002BF8  D70F               	goto	l19437
 17928  002BFA                     l19605:
 17929                           
 17930                           ; BSR set to: 1
 17931                           ;buzzer.c: 317:                     BuzzerOn(0xEE);
 17932  002BFA  0EEE               	movlw	238
 17933  002BFC  EC3A  F04F         	call	_BuzzerOn
 17934                           
 17935                           ; BSR set to: 57
 17936                           ;buzzer.c: 318:                     TMR4_Period8BitSet(46);
 17937  002C00  0E2E               	movlw	46
 17938  002C02  ECDD  F051         	call	_TMR4_Period8BitSet
 17939  002C06  D708               	goto	l19437
 17940  002C08                     l19613:
 17941                           
 17942                           ; BSR set to: 1
 17943                           ;buzzer.c: 323:                     TMR4_Period8BitSet(26);
 17944  002C08  0E1A               	movlw	26
 17945  002C0A  ECDD  F051         	call	_TMR4_Period8BitSet
 17946  002C0E  D704               	goto	l19437
 17947  002C10                     l19619:
 17948                           
 17949                           ; BSR set to: 1
 17950                           ;buzzer.c: 328:                     BuzzerOn(0x8D);
 17951  002C10  0E8D               	movlw	141
 17952  002C12  EC3A  F04F         	call	_BuzzerOn
 17953                           
 17954                           ; BSR set to: 57
 17955                           ;buzzer.c: 329:                     TMR4_Period8BitSet(46);
 17956  002C16  0E2E               	movlw	46
 17957  002C18  ECDD  F051         	call	_TMR4_Period8BitSet
 17958  002C1C  D6FD               	goto	l19437
 17959  002C1E                     l19627:
 17960                           
 17961                           ; BSR set to: 1
 17962                           ;buzzer.c: 334:                     TMR4_Period8BitSet(26);
 17963  002C1E  0E1A               	movlw	26
 17964  002C20  ECDD  F051         	call	_TMR4_Period8BitSet
 17965  002C24  D6F9               	goto	l19437
 17966  002C26                     l19633:
 17967                           
 17968                           ; BSR set to: 1
 17969                           ;buzzer.c: 339:                     BuzzerOn(0xB2);
 17970  002C26  0EB2               	movlw	178
 17971  002C28  EC3A  F04F         	call	_BuzzerOn
 17972                           
 17973                           ; BSR set to: 57
 17974                           ;buzzer.c: 340:                     TMR4_Period8BitSet(46);
 17975  002C2C  0E2E               	movlw	46
 17976  002C2E  ECDD  F051         	call	_TMR4_Period8BitSet
 17977  002C32  D6F2               	goto	l19437
 17978  002C34                     l19641:
 17979                           
 17980                           ; BSR set to: 1
 17981                           ;buzzer.c: 345:                     TMR4_Period8BitSet(102);
 17982  002C34  0E66               	movlw	102
 17983  002C36  ECDD  F051         	call	_TMR4_Period8BitSet
 17984  002C3A  D6EE               	goto	l19437
 17985  002C3C                     l19647:
 17986                           
 17987                           ; BSR set to: 1
 17988                           ;buzzer.c: 350:                     BuzzerOn(0x8D);
 17989  002C3C  0E8D               	movlw	141
 17990  002C3E  EC3A  F04F         	call	_BuzzerOn
 17991                           
 17992                           ; BSR set to: 57
 17993                           ;buzzer.c: 351:                     TMR4_Period8BitSet(46);
 17994  002C42  0E2E               	movlw	46
 17995  002C44  ECDD  F051         	call	_TMR4_Period8BitSet
 17996  002C48  D6E7               	goto	l19437
 17997  002C4A                     l19655:
 17998                           
 17999                           ; BSR set to: 1
 18000                           ;buzzer.c: 356:                     TMR4_Period8BitSet(26);
 18001  002C4A  0E1A               	movlw	26
 18002  002C4C  ECDD  F051         	call	_TMR4_Period8BitSet
 18003  002C50  D6E3               	goto	l19437
 18004  002C52                     l19661:
 18005                           
 18006                           ; BSR set to: 1
 18007                           ;buzzer.c: 361:                     BuzzerOn(0xB2);
 18008  002C52  0EB2               	movlw	178
 18009  002C54  EC3A  F04F         	call	_BuzzerOn
 18010                           
 18011                           ; BSR set to: 57
 18012                           ;buzzer.c: 362:                     TMR4_Period8BitSet(46);
 18013  002C58  0E2E               	movlw	46
 18014  002C5A  ECDD  F051         	call	_TMR4_Period8BitSet
 18015  002C5E  D6DC               	goto	l19437
 18016  002C60                     l19669:
 18017                           
 18018                           ; BSR set to: 1
 18019                           ;buzzer.c: 369:                     TMR4_Period8BitSet(255);
 18020  002C60  0EFF               	movlw	255
 18021  002C62  ECDD  F051         	call	_TMR4_Period8BitSet
 18022  002C66  D6D8               	goto	l19437
 18023  002C68                     l19675:
 18024                           
 18025                           ; BSR set to: 1
 18026                           ;buzzer.c: 374:                     TMR4_Period8BitSet(255);
 18027  002C68  0EFF               	movlw	255
 18028  002C6A  ECDD  F051         	call	_TMR4_Period8BitSet
 18029  002C6E  D6EB               	goto	l19463
 18030  002C70                     l19681:
 18031                           
 18032                           ; BSR set to: 1
 18033                           ;buzzer.c: 379:                     TMR4_Period8BitSet(51);
 18034  002C70  0E33               	movlw	51
 18035  002C72  ECDD  F051         	call	_TMR4_Period8BitSet
 18036  002C76  D6E7               	goto	l19463
 18037  002C78                     l19689:
 18038                           
 18039                           ; BSR set to: 1
 18040  002C78  51EF               	movf	_alarmStep& (0+255),w,b
 18041  002C7A  6F83               	movwf	??_BuzzerTask& (0+255),b
 18042  002C7C  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 18043                           
 18044                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18045                           ; Switch size 1, requested type "simple"
 18046                           ; Number of cases is 1, Range of values is 0 to 0
 18047                           ; switch strategies available:
 18048                           ; Name         Instructions Cycles
 18049                           ; simple_byte            4     3 (average)
 18050                           ;	Chosen strategy is simple_byte
 18051  002C7E  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 18052  002C80  0A00               	xorlw	0	; case 0
 18053  002C82  A4D8               	btfss	status,2,c
 18054  002C84  D7F5               	goto	l19681
 18055                           
 18056                           ; BSR set to: 1
 18057                           ; Switch size 1, requested type "simple"
 18058                           ; Number of cases is 23, Range of values is 0 to 22
 18059                           ; switch strategies available:
 18060                           ; Name         Instructions Cycles
 18061                           ; simple_byte           70    36 (average)
 18062                           ;	Chosen strategy is simple_byte
 18063  002C86  5183               	movf	??_BuzzerTask& (0+255),w,b
 18064  002C88  0A00               	xorlw	0	; case 0
 18065  002C8A  B4D8               	btfsc	status,2,c
 18066  002C8C  D77F               	goto	l19535
 18067  002C8E  0A01               	xorlw	1	; case 1
 18068  002C90  B4D8               	btfsc	status,2,c
 18069  002C92  D783               	goto	l19543
 18070  002C94  0A03               	xorlw	3	; case 2
 18071  002C96  B4D8               	btfsc	status,2,c
 18072  002C98  D784               	goto	l19549
 18073  002C9A  0A01               	xorlw	1	; case 3
 18074  002C9C  B4D8               	btfsc	status,2,c
 18075  002C9E  D788               	goto	l19557
 18076  002CA0  0A07               	xorlw	7	; case 4
 18077  002CA2  B4D8               	btfsc	status,2,c
 18078  002CA4  D789               	goto	l19563
 18079  002CA6  0A01               	xorlw	1	; case 5
 18080  002CA8  B4D8               	btfsc	status,2,c
 18081  002CAA  D78D               	goto	l19571
 18082  002CAC  0A03               	xorlw	3	; case 6
 18083  002CAE  B4D8               	btfsc	status,2,c
 18084  002CB0  D78E               	goto	l19577
 18085  002CB2  0A01               	xorlw	1	; case 7
 18086  002CB4  B4D8               	btfsc	status,2,c
 18087  002CB6  D792               	goto	l19585
 18088  002CB8  0A0F               	xorlw	15	; case 8
 18089  002CBA  B4D8               	btfsc	status,2,c
 18090  002CBC  D793               	goto	l19591
 18091  002CBE  0A01               	xorlw	1	; case 9
 18092  002CC0  B4D8               	btfsc	status,2,c
 18093  002CC2  D797               	goto	l19599
 18094  002CC4  0A03               	xorlw	3	; case 10
 18095  002CC6  B4D8               	btfsc	status,2,c
 18096  002CC8  D798               	goto	l19605
 18097  002CCA  0A01               	xorlw	1	; case 11
 18098  002CCC  B4D8               	btfsc	status,2,c
 18099  002CCE  D79C               	goto	l19613
 18100  002CD0  0A07               	xorlw	7	; case 12
 18101  002CD2  B4D8               	btfsc	status,2,c
 18102  002CD4  D79D               	goto	l19619
 18103  002CD6  0A01               	xorlw	1	; case 13
 18104  002CD8  B4D8               	btfsc	status,2,c
 18105  002CDA  D7A1               	goto	l19627
 18106  002CDC  0A03               	xorlw	3	; case 14
 18107  002CDE  B4D8               	btfsc	status,2,c
 18108  002CE0  D7A2               	goto	l19633
 18109  002CE2  0A01               	xorlw	1	; case 15
 18110  002CE4  B4D8               	btfsc	status,2,c
 18111  002CE6  D7A6               	goto	l19641
 18112  002CE8  0A1F               	xorlw	31	; case 16
 18113  002CEA  B4D8               	btfsc	status,2,c
 18114  002CEC  D7A7               	goto	l19647
 18115  002CEE  0A01               	xorlw	1	; case 17
 18116  002CF0  B4D8               	btfsc	status,2,c
 18117  002CF2  D7AB               	goto	l19655
 18118  002CF4  0A03               	xorlw	3	; case 18
 18119  002CF6  B4D8               	btfsc	status,2,c
 18120  002CF8  D7AC               	goto	l19661
 18121  002CFA  0A01               	xorlw	1	; case 19
 18122  002CFC  B4D8               	btfsc	status,2,c
 18123  002CFE  D7B0               	goto	l19669
 18124  002D00  0A07               	xorlw	7	; case 20
 18125  002D02  B4D8               	btfsc	status,2,c
 18126  002D04  D7AD               	goto	l19669
 18127  002D06  0A01               	xorlw	1	; case 21
 18128  002D08  B4D8               	btfsc	status,2,c
 18129  002D0A  D7AA               	goto	l19669
 18130  002D0C  0A03               	xorlw	3	; case 22
 18131  002D0E  B4D8               	btfsc	status,2,c
 18132  002D10  D7AB               	goto	l19675
 18133  002D12  D7AE               	goto	l19681
 18134  002D14                     l19691:
 18135                           
 18136                           ; BSR set to: 1
 18137                           ;buzzer.c: 387:             BuzzerOff();
 18138  002D14  ECA6  F050         	call	_BuzzerOff	;wreg free
 18139                           
 18140                           ;buzzer.c: 388:             break;
 18141  002D18  0012               	return	
 18142  002D1A                     l19695:
 18143                           
 18144                           ; BSR set to: 1
 18145  002D1A  0100               	movlb	0	; () banked
 18146  002D1C  51FA               	movf	_alarmState& (0+255),w,b
 18147  002D1E  0101               	movlb	1	; () banked
 18148  002D20  6F83               	movwf	??_BuzzerTask& (0+255),b
 18149  002D22  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 18150                           
 18151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18152                           ; Switch size 1, requested type "simple"
 18153                           ; Number of cases is 1, Range of values is 0 to 0
 18154                           ; switch strategies available:
 18155                           ; Name         Instructions Cycles
 18156                           ; simple_byte            4     3 (average)
 18157                           ;	Chosen strategy is simple_byte
 18158  002D24  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 18159  002D26  0A00               	xorlw	0	; case 0
 18160  002D28  A4D8               	btfss	status,2,c
 18161  002D2A  D7F4               	goto	l19691
 18162                           
 18163                           ; BSR set to: 1
 18164                           ; Switch size 1, requested type "simple"
 18165                           ; Number of cases is 4, Range of values is 0 to 4
 18166                           ; switch strategies available:
 18167                           ; Name         Instructions Cycles
 18168                           ; simple_byte           13     7 (average)
 18169                           ;	Chosen strategy is simple_byte
 18170  002D2C  5183               	movf	??_BuzzerTask& (0+255),w,b
 18171  002D2E  0A00               	xorlw	0	; case 0
 18172  002D30  B4D8               	btfsc	status,2,c
 18173  002D32  D7F0               	goto	l19691
 18174  002D34  0A01               	xorlw	1	; case 1
 18175  002D36  B4D8               	btfsc	status,2,c
 18176  002D38  D68E               	goto	l19475
 18177  002D3A  0A03               	xorlw	3	; case 2
 18178  002D3C  B4D8               	btfsc	status,2,c
 18179  002D3E  D6F6               	goto	l19533
 18180  002D40  0A06               	xorlw	6	; case 4
 18181  002D42  B4D8               	btfsc	status,2,c
 18182  002D44  D799               	goto	l19689
 18183  002D46  D7E6               	goto	l19691
 18184  002D48                     __end_of_BuzzerTask:
 18185                           	opt callstack 0
 18186                           
 18187 ;; *************** function _printf *****************
 18188 ;; Defined at:
 18189 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 18190 ;; Parameters:    Size  Location     Type
 18191 ;;  fmt             2  113[BANK1 ] PTR const unsigned char 
 18192 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 18193 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 18194 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 18195 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 18196 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 18197 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 18198 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 18199 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 18200 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 18201 ;;		 -> STR_15(5), STR_14(19), STR_4(45), STR_3(4), 
 18202 ;;		 -> STR_2(15), STR_1(13), 
 18203 ;; Auto vars:     Size  Location     Type
 18204 ;;  ap              2  129[BANK1 ] PTR void [1]
 18205 ;;		 -> ?_printf(2), ?_sprintf(2), 
 18206 ;;  ret             2    0        int 
 18207 ;; Return value:  Size  Location     Type
 18208 ;;                  2  113[BANK1 ] int 
 18209 ;; Registers used:
 18210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18211 ;; Tracked objects:
 18212 ;;		On entry : 3F/1
 18213 ;;		On exit  : 3F/2
 18214 ;;		Unchanged: 0/0
 18215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18216 ;;      Params:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18217 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18219 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18220 ;;Total ram usage:       18 bytes
 18221 ;; Hardware stack levels used:    1
 18222 ;; Hardware stack levels required when called:   24
 18223 ;; This function calls:
 18224 ;;		_vfprintf
 18225 ;; This function is called by:
 18226 ;;		_main
 18227 ;;		_BuzzerTask
 18228 ;;		_BuzzerCheck
 18229 ;;		_MonitorFailAlarm
 18230 ;;		_TestAlarm
 18231 ;;		_MuteAlarm
 18232 ;;		_MonitorDump
 18233 ;;		_SetCalibrateState
 18234 ;;		_SetAlarmSV1
 18235 ;;		_SetSV1
 18236 ;; This function uses a non-reentrant model
 18237 ;;
 18238                           
 18239                           	psect	text133
 18240  0099FE                     __ptext133:
 18241                           	opt callstack 0
 18242  0099FE                     _printf:
 18243                           	opt callstack 6
 18244                           
 18245                           ; BSR set to: 1
 18246                           
 18247                           ;incstack = 0
 18248  0099FE  0E73               	movlw	low (?_printf+2)
 18249  009A00  6F81               	movwf	printf@ap& (0+255),b
 18250  009A02  0E01               	movlw	high (?_printf+2)
 18251  009A04  6F82               	movwf	(printf@ap+1)& (0+255),b
 18252                           
 18253                           ; BSR set to: 1
 18254  009A06  0E00               	movlw	0
 18255  009A08  6F69               	movwf	vfprintf@fp& (0+255),b
 18256  009A0A  0E00               	movlw	0
 18257  009A0C  6F6A               	movwf	(vfprintf@fp+1)& (0+255),b
 18258  009A0E  0060  F5C4  F16B   	movff	printf@fmt,vfprintf@fmt
 18259  009A14  0060  F5C8  F16C   	movff	printf@fmt+1,vfprintf@fmt+1
 18260  009A1A  0E81               	movlw	low printf@ap
 18261  009A1C  6F6D               	movwf	vfprintf@ap& (0+255),b
 18262  009A1E  0E01               	movlw	high printf@ap
 18263  009A20  6F6E               	movwf	(vfprintf@ap+1)& (0+255),b
 18264  009A22  EC10  F042         	call	_vfprintf	;wreg free
 18265                           
 18266                           ; BSR set to: 2
 18267  009A26  0012               	return		;funcret
 18268  009A28                     __end_of_printf:
 18269                           	opt callstack 0
 18270                           
 18271 ;; *************** function _TMR4_Start *****************
 18272 ;; Defined at:
 18273 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 18274 ;; Parameters:    Size  Location     Type
 18275 ;;		None
 18276 ;; Auto vars:     Size  Location     Type
 18277 ;;		None
 18278 ;; Return value:  Size  Location     Type
 18279 ;;                  1    wreg      void 
 18280 ;; Registers used:
 18281 ;;		None
 18282 ;; Tracked objects:
 18283 ;;		On entry : 0/39
 18284 ;;		On exit  : 0/0
 18285 ;;		Unchanged: 0/0
 18286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18291 ;;Total ram usage:        0 bytes
 18292 ;; Hardware stack levels used:    1
 18293 ;; Hardware stack levels required when called:   16
 18294 ;; This function calls:
 18295 ;;		Nothing
 18296 ;; This function is called by:
 18297 ;;		_BuzzerTest
 18298 ;;		_BuzzerTask
 18299 ;; This function uses a non-reentrant model
 18300 ;;
 18301                           
 18302                           	psect	text134
 18303  00A680                     __ptext134:
 18304                           	opt callstack 0
 18305  00A680                     _TMR4_Start:
 18306                           	opt callstack 13
 18307                           
 18308                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 18309                           
 18310                           ; BSR set to: 2
 18311                           ;incstack = 0
 18312  00A680  8EA0               	bsf	160,7,c	;volatile
 18313  00A682  0012               	return		;funcret
 18314  00A684                     __end_of_TMR4_Start:
 18315                           	opt callstack 0
 18316                           
 18317 ;; *************** function _TMR4_SetInterruptHandler *****************
 18318 ;; Defined at:
 18319 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 18320 ;; Parameters:    Size  Location     Type
 18321 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 18322 ;;		 -> BuzzerTestHandler(1), BuzzerHandler(1), TMR4_DefaultInterruptHandler(1), 
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;		None
 18325 ;; Return value:  Size  Location     Type
 18326 ;;                  1    wreg      void 
 18327 ;; Registers used:
 18328 ;;		wreg, status,2, status,0
 18329 ;; Tracked objects:
 18330 ;;		On entry : 3F/1
 18331 ;;		On exit  : 3F/1
 18332 ;;		Unchanged: 3F/0
 18333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18334 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18337 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18338 ;;Total ram usage:        2 bytes
 18339 ;; Hardware stack levels used:    1
 18340 ;; Hardware stack levels required when called:   16
 18341 ;; This function calls:
 18342 ;;		Nothing
 18343 ;; This function is called by:
 18344 ;;		_TMR4_Initialize
 18345 ;;		_BuzzerTest
 18346 ;;		_BuzzerTask
 18347 ;;		_BuzzerInit
 18348 ;; This function uses a non-reentrant model
 18349 ;;
 18350                           
 18351                           	psect	text135
 18352  00A2C2                     __ptext135:
 18353                           	opt callstack 0
 18354  00A2C2                     _TMR4_SetInterruptHandler:
 18355                           	opt callstack 12
 18356                           
 18357                           ; BSR set to: 1
 18358                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 18359                           
 18360                           ;incstack = 0
 18361  00A2C2  0060  F410  F2ED   	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 18362  00A2C8  0060  F414  F2EE   	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 18363                           
 18364                           ; BSR set to: 1
 18365  00A2CE  0012               	return		;funcret
 18366  00A2D0                     __end_of_TMR4_SetInterruptHandler:
 18367                           	opt callstack 0
 18368                           
 18369 ;; *************** function _TMR4_Period8BitSet *****************
 18370 ;; Defined at:
 18371 ;;		line 155 in file "mcc_generated_files/tmr4.c"
 18372 ;; Parameters:    Size  Location     Type
 18373 ;;  periodVal       1    wreg     unsigned char 
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;  periodVal       1    4[BANK1 ] unsigned char 
 18376 ;; Return value:  Size  Location     Type
 18377 ;;                  1    wreg      void 
 18378 ;; Registers used:
 18379 ;;		wreg
 18380 ;; Tracked objects:
 18381 ;;		On entry : 7/39
 18382 ;;		On exit  : 0/0
 18383 ;;		Unchanged: 0/0
 18384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18386 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18388 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18389 ;;Total ram usage:        1 bytes
 18390 ;; Hardware stack levels used:    1
 18391 ;; Hardware stack levels required when called:   16
 18392 ;; This function calls:
 18393 ;;		Nothing
 18394 ;; This function is called by:
 18395 ;;		_BuzzerTest
 18396 ;;		_BuzzerTask
 18397 ;; This function uses a non-reentrant model
 18398 ;;
 18399                           
 18400                           	psect	text136
 18401  00A3BA                     __ptext136:
 18402                           	opt callstack 0
 18403  00A3BA                     _TMR4_Period8BitSet:
 18404                           	opt callstack 13
 18405                           
 18406                           ; BSR set to: 1
 18407                           ;incstack = 0
 18408                           ;TMR4_Period8BitSet@periodVal stored from wreg
 18409  00A3BA  0101               	movlb	1	; () banked
 18410  00A3BC  6F04               	movwf	TMR4_Period8BitSet@periodVal& (0+255),b
 18411                           
 18412                           ;mcc_generated_files/tmr4.c: 155: void TMR4_Period8BitSet(uint8_t periodVal);mcc_generat
      +                          ed_files/tmr4.c: 156: {;mcc_generated_files/tmr4.c: 157:    PR4 = periodVal;
 18413  00A3BE  0060  F413  FF9F   	movff	TMR4_Period8BitSet@periodVal,16287	;volatile
 18414  00A3C4  0012               	return		;funcret
 18415  00A3C6                     __end_of_TMR4_Period8BitSet:
 18416                           	opt callstack 0
 18417                           
 18418 ;; *************** function _SetMonitorFailAlarm *****************
 18419 ;; Defined at:
 18420 ;;		line 225 in file "alarm.c"
 18421 ;; Parameters:    Size  Location     Type
 18422 ;;		None
 18423 ;; Auto vars:     Size  Location     Type
 18424 ;;		None
 18425 ;; Return value:  Size  Location     Type
 18426 ;;                  1    wreg      void 
 18427 ;; Registers used:
 18428 ;;		wreg, status,2
 18429 ;; Tracked objects:
 18430 ;;		On entry : 3D/0
 18431 ;;		On exit  : 3F/2
 18432 ;;		Unchanged: 0/0
 18433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18438 ;;Total ram usage:        0 bytes
 18439 ;; Hardware stack levels used:    1
 18440 ;; Hardware stack levels required when called:   16
 18441 ;; This function calls:
 18442 ;;		Nothing
 18443 ;; This function is called by:
 18444 ;;		_BuzzerTask
 18445 ;;		_BuzzerCheck
 18446 ;; This function uses a non-reentrant model
 18447 ;;
 18448                           
 18449                           	psect	text137
 18450  00A4C8                     __ptext137:
 18451                           	opt callstack 0
 18452  00A4C8                     _SetMonitorFailAlarm:
 18453                           	opt callstack 13
 18454                           
 18455                           ;alarm.c: 226:     monitorFailAlarm = 1;
 18456                           
 18457                           ;incstack = 0
 18458  00A4C8  0E01               	movlw	1
 18459  00A4CA  0102               	movlb	2	; () banked
 18460  00A4CC  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 18461                           
 18462                           ; BSR set to: 2
 18463  00A4CE  0012               	return		;funcret
 18464  00A4D0                     __end_of_SetMonitorFailAlarm:
 18465                           	opt callstack 0
 18466                           
 18467 ;; *************** function _ClearMonitorFailAlarm *****************
 18468 ;; Defined at:
 18469 ;;		line 270 in file "alarm.c"
 18470 ;; Parameters:    Size  Location     Type
 18471 ;;		None
 18472 ;; Auto vars:     Size  Location     Type
 18473 ;;		None
 18474 ;; Return value:  Size  Location     Type
 18475 ;;                  1    wreg      void 
 18476 ;; Registers used:
 18477 ;;		wreg, status,2
 18478 ;; Tracked objects:
 18479 ;;		On entry : 3E/1
 18480 ;;		On exit  : 3F/2
 18481 ;;		Unchanged: 0/0
 18482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18487 ;;Total ram usage:        0 bytes
 18488 ;; Hardware stack levels used:    1
 18489 ;; Hardware stack levels required when called:   16
 18490 ;; This function calls:
 18491 ;;		Nothing
 18492 ;; This function is called by:
 18493 ;;		_BuzzerTask
 18494 ;;		_MuteAlarm
 18495 ;; This function uses a non-reentrant model
 18496 ;;
 18497                           
 18498                           	psect	text138
 18499  00A4D0                     __ptext138:
 18500                           	opt callstack 0
 18501  00A4D0                     _ClearMonitorFailAlarm:
 18502                           	opt callstack 13
 18503                           
 18504                           ;alarm.c: 272:     monitorFailAlarm = 0;
 18505                           
 18506                           ; BSR set to: 2
 18507                           ;incstack = 0
 18508  00A4D0  0E00               	movlw	0
 18509  00A4D2  0102               	movlb	2	; () banked
 18510  00A4D4  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 18511                           
 18512                           ; BSR set to: 2
 18513  00A4D6  0012               	return		;funcret
 18514  00A4D8                     __end_of_ClearMonitorFailAlarm:
 18515                           	opt callstack 0
 18516                           
 18517 ;; *************** function _BuzzerOn *****************
 18518 ;; Defined at:
 18519 ;;		line 446 in file "buzzer.c"
 18520 ;; Parameters:    Size  Location     Type
 18521 ;;  period          1    wreg     unsigned char 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;  period          1    4[BANK1 ] unsigned char 
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  1    wreg      void 
 18526 ;; Registers used:
 18527 ;;		wreg, status,2, cstack
 18528 ;; Tracked objects:
 18529 ;;		On entry : 0/1
 18530 ;;		On exit  : 3F/39
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18534 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18536 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18537 ;;Total ram usage:        1 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:   17
 18540 ;; This function calls:
 18541 ;;		_CMP1_Enable
 18542 ;; This function is called by:
 18543 ;;		_BuzzerTest
 18544 ;;		_BuzzerTask
 18545 ;;		_BuzzerCheck
 18546 ;; This function uses a non-reentrant model
 18547 ;;
 18548                           
 18549                           	psect	text139
 18550  009E74                     __ptext139:
 18551                           	opt callstack 0
 18552  009E74                     _BuzzerOn:
 18553                           	opt callstack 12
 18554                           
 18555                           ; BSR set to: 2
 18556                           ;incstack = 0
 18557                           ;BuzzerOn@period stored from wreg
 18558  009E74  0101               	movlb	1	; () banked
 18559  009E76  6F04               	movwf	BuzzerOn@period& (0+255),b
 18560                           
 18561                           ;buzzer.c: 448:     T2PR = period;
 18562  009E78  0060  F413  FFAB   	movff	BuzzerOn@period,16299	;volatile
 18563                           
 18564                           ;buzzer.c: 449:     PWM6CON = 0x80;
 18565  009E7E  0E80               	movlw	128
 18566  009E80  6E6A               	movwf	106,c	;volatile
 18567                           
 18568                           ;buzzer.c: 451:     on = 1;
 18569  009E82  0E01               	movlw	1
 18570  009E84  0100               	movlb	0	; () banked
 18571  009E86  6FF9               	movwf	_on& (0+255),b
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;buzzer.c: 452:     detected = 0;
 18575  009E88  0E00               	movlw	0
 18576  009E8A  6FF8               	movwf	_detected& (0+255),b
 18577                           
 18578                           ; BSR set to: 0
 18579                           ;buzzer.c: 454:     CMP1_Enable();
 18580  009E8C  EC6C  F052         	call	_CMP1_Enable	;wreg free
 18581                           
 18582                           ; BSR set to: 57
 18583  009E90  0012               	return		;funcret
 18584  009E92                     __end_of_BuzzerOn:
 18585                           	opt callstack 0
 18586                           
 18587 ;; *************** function _CMP1_Enable *****************
 18588 ;; Defined at:
 18589 ;;		line 104 in file "mcc_generated_files/cmp1.c"
 18590 ;; Parameters:    Size  Location     Type
 18591 ;;		None
 18592 ;; Auto vars:     Size  Location     Type
 18593 ;;		None
 18594 ;; Return value:  Size  Location     Type
 18595 ;;                  1    wreg      void 
 18596 ;; Registers used:
 18597 ;;		None
 18598 ;; Tracked objects:
 18599 ;;		On entry : 6/39
 18600 ;;		On exit  : 3F/39
 18601 ;;		Unchanged: 0/0
 18602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18607 ;;Total ram usage:        0 bytes
 18608 ;; Hardware stack levels used:    1
 18609 ;; Hardware stack levels required when called:   16
 18610 ;; This function calls:
 18611 ;;		Nothing
 18612 ;; This function is called by:
 18613 ;;		_CMP1_Initialize
 18614 ;;		_BuzzerOn
 18615 ;; This function uses a non-reentrant model
 18616 ;;
 18617                           
 18618                           	psect	text140
 18619  00A4D8                     __ptext140:
 18620                           	opt callstack 0
 18621  00A4D8                     _CMP1_Enable:
 18622                           	opt callstack 12
 18623                           
 18624                           ;mcc_generated_files/cmp1.c: 106:     PIR1bits.C1IF = 0;
 18625                           
 18626                           ; BSR set to: 57
 18627                           ;incstack = 0
 18628  00A4D8  0139               	movlb	57	; () banked
 18629  00A4DA  99A1               	bcf	161,4,b	;volatile
 18630                           
 18631                           ;mcc_generated_files/cmp1.c: 107:     PIE1bits.C1IE = 1;
 18632  00A4DC  8991               	bsf	145,4,b	;volatile
 18633                           
 18634                           ; BSR set to: 57
 18635  00A4DE  0012               	return		;funcret
 18636  00A4E0                     __end_of_CMP1_Enable:
 18637                           	opt callstack 0
 18638                           
 18639 ;; *************** function _BuzzerClear *****************
 18640 ;; Defined at:
 18641 ;;		line 71 in file "buzzer.c"
 18642 ;; Parameters:    Size  Location     Type
 18643 ;;		None
 18644 ;; Auto vars:     Size  Location     Type
 18645 ;;		None
 18646 ;; Return value:  Size  Location     Type
 18647 ;;                  1    wreg      void 
 18648 ;; Registers used:
 18649 ;;		wreg, status,2, cstack
 18650 ;; Tracked objects:
 18651 ;;		On entry : 3C/1
 18652 ;;		On exit  : 3F/39
 18653 ;;		Unchanged: 0/0
 18654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18659 ;;Total ram usage:        0 bytes
 18660 ;; Hardware stack levels used:    1
 18661 ;; Hardware stack levels required when called:   18
 18662 ;; This function calls:
 18663 ;;		_BuzzerOff
 18664 ;;		_TMR4_Stop
 18665 ;; This function is called by:
 18666 ;;		_MuteAlarm
 18667 ;;		_AlarmCheckTask
 18668 ;; This function uses a non-reentrant model
 18669 ;;
 18670                           
 18671                           	psect	text141
 18672  00A13C                     __ptext141:
 18673                           	opt callstack 0
 18674  00A13C                     _BuzzerClear:
 18675                           	opt callstack 11
 18676                           
 18677                           ;buzzer.c: 72:     alarmState = 0;
 18678                           
 18679                           ; BSR set to: 57
 18680                           ;incstack = 0
 18681  00A13C  0E00               	movlw	0
 18682  00A13E  0100               	movlb	0	; () banked
 18683  00A140  6FFA               	movwf	_alarmState& (0+255),b
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;buzzer.c: 73:     BuzzerOff();
 18687  00A142  ECA6  F050         	call	_BuzzerOff	;wreg free
 18688                           
 18689                           ;buzzer.c: 74:     TMR4_Stop();
 18690  00A146  EC42  F053         	call	_TMR4_Stop	;wreg free
 18691                           
 18692                           ; BSR set to: 57
 18693  00A14A  0012               	return		;funcret
 18694  00A14C                     __end_of_BuzzerClear:
 18695                           	opt callstack 0
 18696                           
 18697 ;; *************** function _TMR4_Stop *****************
 18698 ;; Defined at:
 18699 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 18700 ;; Parameters:    Size  Location     Type
 18701 ;;		None
 18702 ;; Auto vars:     Size  Location     Type
 18703 ;;		None
 18704 ;; Return value:  Size  Location     Type
 18705 ;;                  1    wreg      void 
 18706 ;; Registers used:
 18707 ;;		None
 18708 ;; Tracked objects:
 18709 ;;		On entry : 3F/39
 18710 ;;		On exit  : 3F/39
 18711 ;;		Unchanged: 3E/0
 18712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18717 ;;Total ram usage:        0 bytes
 18718 ;; Hardware stack levels used:    1
 18719 ;; Hardware stack levels required when called:   16
 18720 ;; This function calls:
 18721 ;;		Nothing
 18722 ;; This function is called by:
 18723 ;;		_BuzzerClear
 18724 ;;		_BuzzerTask
 18725 ;; This function uses a non-reentrant model
 18726 ;;
 18727                           
 18728                           	psect	text142
 18729  00A684                     __ptext142:
 18730                           	opt callstack 0
 18731  00A684                     _TMR4_Stop:
 18732                           	opt callstack 12
 18733                           
 18734                           ; BSR set to: 57
 18735                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 18736                           
 18737                           ; BSR set to: 57
 18738                           ;incstack = 0
 18739  00A684  9EA0               	bcf	160,7,c	;volatile
 18740                           
 18741                           ; BSR set to: 57
 18742  00A686  0012               	return		;funcret
 18743  00A688                     __end_of_TMR4_Stop:
 18744                           	opt callstack 0
 18745                           
 18746 ;; *************** function _BuzzerOff *****************
 18747 ;; Defined at:
 18748 ;;		line 458 in file "buzzer.c"
 18749 ;; Parameters:    Size  Location     Type
 18750 ;;		None
 18751 ;; Auto vars:     Size  Location     Type
 18752 ;;		None
 18753 ;; Return value:  Size  Location     Type
 18754 ;;                  1    wreg      void 
 18755 ;; Registers used:
 18756 ;;		wreg, status,2, cstack
 18757 ;; Tracked objects:
 18758 ;;		On entry : 0/1
 18759 ;;		On exit  : 3F/39
 18760 ;;		Unchanged: 0/0
 18761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18766 ;;Total ram usage:        0 bytes
 18767 ;; Hardware stack levels used:    1
 18768 ;; Hardware stack levels required when called:   17
 18769 ;; This function calls:
 18770 ;;		_CMP1_Disable
 18771 ;; This function is called by:
 18772 ;;		_BuzzerSet
 18773 ;;		_BuzzerClear
 18774 ;;		_BuzzerTest
 18775 ;;		_BuzzerTask
 18776 ;;		_BuzzerInit
 18777 ;;		_BuzzerCheck
 18778 ;; This function uses a non-reentrant model
 18779 ;;
 18780                           
 18781                           	psect	text143
 18782  00A14C                     __ptext143:
 18783                           	opt callstack 0
 18784  00A14C                     _BuzzerOff:
 18785                           	opt callstack 11
 18786                           
 18787                           ;buzzer.c: 459:     PWM6CON = 0x00;
 18788                           
 18789                           ; BSR set to: 57
 18790                           ;incstack = 0
 18791  00A14C  0E00               	movlw	0
 18792  00A14E  6E6A               	movwf	106,c	;volatile
 18793                           
 18794                           ;buzzer.c: 460:     on = 0;
 18795  00A150  0E00               	movlw	0
 18796  00A152  0100               	movlb	0	; () banked
 18797  00A154  6FF9               	movwf	_on& (0+255),b
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;buzzer.c: 461:     CMP1_Disable();
 18801  00A156  EC70  F052         	call	_CMP1_Disable	;wreg free
 18802                           
 18803                           ; BSR set to: 57
 18804  00A15A  0012               	return		;funcret
 18805  00A15C                     __end_of_BuzzerOff:
 18806                           	opt callstack 0
 18807                           
 18808 ;; *************** function _CMP1_Disable *****************
 18809 ;; Defined at:
 18810 ;;		line 98 in file "mcc_generated_files/cmp1.c"
 18811 ;; Parameters:    Size  Location     Type
 18812 ;;		None
 18813 ;; Auto vars:     Size  Location     Type
 18814 ;;		None
 18815 ;; Return value:  Size  Location     Type
 18816 ;;                  1    wreg      void 
 18817 ;; Registers used:
 18818 ;;		None
 18819 ;; Tracked objects:
 18820 ;;		On entry : 3E/1
 18821 ;;		On exit  : 3F/39
 18822 ;;		Unchanged: 0/0
 18823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18828 ;;Total ram usage:        0 bytes
 18829 ;; Hardware stack levels used:    1
 18830 ;; Hardware stack levels required when called:   16
 18831 ;; This function calls:
 18832 ;;		Nothing
 18833 ;; This function is called by:
 18834 ;;		_CMP1_Initialize
 18835 ;;		_BuzzerOff
 18836 ;; This function uses a non-reentrant model
 18837 ;;
 18838                           
 18839                           	psect	text144
 18840  00A4E0                     __ptext144:
 18841                           	opt callstack 0
 18842  00A4E0                     _CMP1_Disable:
 18843                           	opt callstack 12
 18844                           
 18845                           ;mcc_generated_files/cmp1.c: 100:     PIE1bits.C1IE = 0;
 18846                           
 18847                           ; BSR set to: 57
 18848                           ;incstack = 0
 18849  00A4E0  0139               	movlb	57	; () banked
 18850  00A4E2  9991               	bcf	145,4,b	;volatile
 18851                           
 18852                           ;mcc_generated_files/cmp1.c: 101:     PIR1bits.C1IF = 0;
 18853  00A4E4  99A1               	bcf	161,4,b	;volatile
 18854                           
 18855                           ; BSR set to: 57
 18856  00A4E6  0012               	return		;funcret
 18857  00A4E8                     __end_of_CMP1_Disable:
 18858                           	opt callstack 0
 18859                           
 18860 ;; *************** function _SetNoPowerSupplyAlarm *****************
 18861 ;; Defined at:
 18862 ;;		line 245 in file "alarm.c"
 18863 ;; Parameters:    Size  Location     Type
 18864 ;;		None
 18865 ;; Auto vars:     Size  Location     Type
 18866 ;;		None
 18867 ;; Return value:  Size  Location     Type
 18868 ;;                  1    wreg      void 
 18869 ;; Registers used:
 18870 ;;		wreg, status,2
 18871 ;; Tracked objects:
 18872 ;;		On entry : 3F/2
 18873 ;;		On exit  : 3F/2
 18874 ;;		Unchanged: 0/0
 18875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18880 ;;Total ram usage:        0 bytes
 18881 ;; Hardware stack levels used:    1
 18882 ;; Hardware stack levels required when called:   16
 18883 ;; This function calls:
 18884 ;;		Nothing
 18885 ;; This function is called by:
 18886 ;;		_BatteryFailAlarm
 18887 ;; This function uses a non-reentrant model
 18888 ;;
 18889                           
 18890                           	psect	text145
 18891  00A5AA                     __ptext145:
 18892                           	opt callstack 0
 18893  00A5AA                     _SetNoPowerSupplyAlarm:
 18894                           	opt callstack 12
 18895                           
 18896                           ; BSR set to: 2
 18897                           
 18898                           ; BSR set to: 57
 18899                           ;incstack = 0
 18900  00A5AA  0E01               	movlw	1
 18901  00A5AC  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 18902                           
 18903                           ; BSR set to: 2
 18904  00A5AE  0012               	return		;funcret
 18905  00A5B0                     __end_of_SetNoPowerSupplyAlarm:
 18906                           	opt callstack 0
 18907                           
 18908 ;; *************** function _SetBatteryFailAlarm *****************
 18909 ;; Defined at:
 18910 ;;		line 224 in file "alarm.c"
 18911 ;; Parameters:    Size  Location     Type
 18912 ;;		None
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;		None
 18915 ;; Return value:  Size  Location     Type
 18916 ;;                  1    wreg      void 
 18917 ;; Registers used:
 18918 ;;		wreg, status,2
 18919 ;; Tracked objects:
 18920 ;;		On entry : 3F/2
 18921 ;;		On exit  : 3F/0
 18922 ;;		Unchanged: 0/0
 18923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18928 ;;Total ram usage:        0 bytes
 18929 ;; Hardware stack levels used:    1
 18930 ;; Hardware stack levels required when called:   16
 18931 ;; This function calls:
 18932 ;;		Nothing
 18933 ;; This function is called by:
 18934 ;;		_BatteryFailAlarm
 18935 ;; This function uses a non-reentrant model
 18936 ;;
 18937                           
 18938                           	psect	text146
 18939  00A4E8                     __ptext146:
 18940                           	opt callstack 0
 18941  00A4E8                     _SetBatteryFailAlarm:
 18942                           	opt callstack 12
 18943                           
 18944                           ; BSR set to: 2
 18945                           
 18946                           ; BSR set to: 2
 18947                           ;incstack = 0
 18948  00A4E8  0E01               	movlw	1
 18949  00A4EA  0100               	movlb	0	; () banked
 18950  00A4EC  6FF7               	movwf	_batteryFailAlarm& (0+255),b
 18951                           
 18952                           ; BSR set to: 0
 18953  00A4EE  0012               	return		;funcret
 18954  00A4F0                     __end_of_SetBatteryFailAlarm:
 18955                           	opt callstack 0
 18956                           
 18957 ;; *************** function _SetBaterryLowAlarmMed *****************
 18958 ;; Defined at:
 18959 ;;		line 235 in file "alarm.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;		None
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;		None
 18964 ;; Return value:  Size  Location     Type
 18965 ;;                  1    wreg      void 
 18966 ;; Registers used:
 18967 ;;		wreg, status,2
 18968 ;; Tracked objects:
 18969 ;;		On entry : 3F/2
 18970 ;;		On exit  : 3F/2
 18971 ;;		Unchanged: 0/0
 18972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;Total ram usage:        0 bytes
 18978 ;; Hardware stack levels used:    1
 18979 ;; Hardware stack levels required when called:   16
 18980 ;; This function calls:
 18981 ;;		Nothing
 18982 ;; This function is called by:
 18983 ;;		_BatteryFailAlarm
 18984 ;; This function uses a non-reentrant model
 18985 ;;
 18986                           
 18987                           	psect	text147
 18988  00A5B0                     __ptext147:
 18989                           	opt callstack 0
 18990  00A5B0                     _SetBaterryLowAlarmMed:
 18991                           	opt callstack 12
 18992                           
 18993                           ; BSR set to: 2
 18994                           
 18995                           ; BSR set to: 0
 18996                           ;incstack = 0
 18997  00A5B0  0E01               	movlw	1
 18998  00A5B2  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 18999                           
 19000                           ; BSR set to: 2
 19001  00A5B4  0012               	return		;funcret
 19002  00A5B6                     __end_of_SetBaterryLowAlarmMed:
 19003                           	opt callstack 0
 19004                           
 19005 ;; *************** function _SetBaterryLowAlarmHigh *****************
 19006 ;; Defined at:
 19007 ;;		line 236 in file "alarm.c"
 19008 ;; Parameters:    Size  Location     Type
 19009 ;;		None
 19010 ;; Auto vars:     Size  Location     Type
 19011 ;;		None
 19012 ;; Return value:  Size  Location     Type
 19013 ;;                  1    wreg      void 
 19014 ;; Registers used:
 19015 ;;		wreg, status,2
 19016 ;; Tracked objects:
 19017 ;;		On entry : 3F/2
 19018 ;;		On exit  : 3F/2
 19019 ;;		Unchanged: 0/0
 19020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19025 ;;Total ram usage:        0 bytes
 19026 ;; Hardware stack levels used:    1
 19027 ;; Hardware stack levels required when called:   16
 19028 ;; This function calls:
 19029 ;;		Nothing
 19030 ;; This function is called by:
 19031 ;;		_BatteryFailAlarm
 19032 ;; This function uses a non-reentrant model
 19033 ;;
 19034                           
 19035                           	psect	text148
 19036  00A5B6                     __ptext148:
 19037                           	opt callstack 0
 19038  00A5B6                     _SetBaterryLowAlarmHigh:
 19039                           	opt callstack 12
 19040                           
 19041                           ; BSR set to: 2
 19042                           
 19043                           ; BSR set to: 2
 19044                           ;incstack = 0
 19045  00A5B6  0E01               	movlw	1
 19046  00A5B8  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 19047                           
 19048                           ; BSR set to: 2
 19049  00A5BA  0012               	return		;funcret
 19050  00A5BC                     __end_of_SetBaterryLowAlarmHigh:
 19051                           	opt callstack 0
 19052                           
 19053 ;; *************** function _Get12V *****************
 19054 ;; Defined at:
 19055 ;;		line 865 in file "monitor.c"
 19056 ;; Parameters:    Size  Location     Type
 19057 ;;		None
 19058 ;; Auto vars:     Size  Location     Type
 19059 ;;  mv              4   32[BANK1 ] long 
 19060 ;;  v12             2   38[BANK1 ] short 
 19061 ;;  adc             2   36[BANK1 ] unsigned short 
 19062 ;; Return value:  Size  Location     Type
 19063 ;;                  2   30[BANK1 ] short 
 19064 ;; Registers used:
 19065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19066 ;; Tracked objects:
 19067 ;;		On entry : 3F/1
 19068 ;;		On exit  : 3F/1
 19069 ;;		Unchanged: 0/0
 19070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19071 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19072 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19074 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19075 ;;Total ram usage:       10 bytes
 19076 ;; Hardware stack levels used:    1
 19077 ;; Hardware stack levels required when called:   18
 19078 ;; This function calls:
 19079 ;;		_AdcGetData
 19080 ;;		___aldiv
 19081 ;;		___lmul
 19082 ;; This function is called by:
 19083 ;;		_BatteryFailAlarm
 19084 ;; This function uses a non-reentrant model
 19085 ;;
 19086                           
 19087                           	psect	text149
 19088  00796C                     __ptext149:
 19089                           	opt callstack 0
 19090  00796C                     _Get12V:
 19091                           	opt callstack 10
 19092                           
 19093                           ; BSR set to: 1
 19094                           ;monitor.c: 866:     adc_result_t adc = AdcGetData(3);
 19095                           
 19096                           ; BSR set to: 2
 19097                           ;incstack = 0
 19098  00796C  0E00               	movlw	0
 19099  00796E  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
 19100  007970  0E03               	movlw	3
 19101  007972  6F0A               	movwf	AdcGetData@id& (0+255),b
 19102  007974  EC99  F044         	call	_AdcGetData	;wreg free
 19103  007978  0060  F428  F124   	movff	?_AdcGetData,Get12V@adc
 19104  00797E  0060  F42C  F125   	movff	?_AdcGetData+1,Get12V@adc+1
 19105                           
 19106                           ; BSR set to: 1
 19107                           ;monitor.c: 867:     int32_t mv = adc;
 19108  007984  0060  F490  F120   	movff	Get12V@adc,Get12V@mv
 19109  00798A  0060  F494  F121   	movff	Get12V@adc+1,Get12V@mv+1
 19110  007990  6B22               	clrf	(Get12V@mv+2)& (0+255),b
 19111  007992  6B23               	clrf	(Get12V@mv+3)& (0+255),b
 19112                           
 19113                           ; BSR set to: 1
 19114                           ;monitor.c: 869:     int16_t v12 = (mv*33)/10;
 19115  007994  0060  F480  F104   	movff	Get12V@mv,___lmul@multiplier
 19116  00799A  0060  F484  F105   	movff	Get12V@mv+1,___lmul@multiplier+1
 19117  0079A0  0060  F488  F106   	movff	Get12V@mv+2,___lmul@multiplier+2
 19118  0079A6  0060  F48C  F107   	movff	Get12V@mv+3,___lmul@multiplier+3
 19119  0079AC  0E21               	movlw	33
 19120  0079AE  6F08               	movwf	___lmul@multiplicand& (0+255),b
 19121  0079B0  0E00               	movlw	0
 19122  0079B2  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19123  0079B4  0E00               	movlw	0
 19124  0079B6  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19125  0079B8  0E00               	movlw	0
 19126  0079BA  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19127  0079BC  EC93  F045         	call	___lmul	;wreg free
 19128  0079C0  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
 19129  0079C6  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
 19130  0079CC  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
 19131  0079D2  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
 19132  0079D8  0E0A               	movlw	10
 19133  0079DA  6F14               	movwf	___aldiv@divisor& (0+255),b
 19134  0079DC  0E00               	movlw	0
 19135  0079DE  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 19136  0079E0  0E00               	movlw	0
 19137  0079E2  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 19138  0079E4  0E00               	movlw	0
 19139  0079E6  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 19140  0079E8  ECB4  F035         	call	___aldiv	;wreg free
 19141  0079EC  0060  F440  F126   	movff	?___aldiv,Get12V@v12
 19142  0079F2  0060  F444  F127   	movff	?___aldiv+1,Get12V@v12+1
 19143                           
 19144                           ; BSR set to: 1
 19145                           ;monitor.c: 870:     return v12;
 19146  0079F8  0060  F498  F11E   	movff	Get12V@v12,?_Get12V
 19147  0079FE  0060  F49C  F11F   	movff	Get12V@v12+1,?_Get12V+1
 19148                           
 19149                           ; BSR set to: 1
 19150  007A04  0012               	return		;funcret
 19151  007A06                     __end_of_Get12V:
 19152                           	opt callstack 0
 19153                           
 19154 ;; *************** function ___lmul *****************
 19155 ;; Defined at:
 19156 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 19157 ;; Parameters:    Size  Location     Type
 19158 ;;  multiplier      4    4[BANK1 ] unsigned long 
 19159 ;;  multiplicand    4    8[BANK1 ] unsigned long 
 19160 ;; Auto vars:     Size  Location     Type
 19161 ;;  product         4   12[BANK1 ] unsigned long 
 19162 ;; Return value:  Size  Location     Type
 19163 ;;                  4    4[BANK1 ] unsigned long 
 19164 ;; Registers used:
 19165 ;;		wreg, status,2, status,0
 19166 ;; Tracked objects:
 19167 ;;		On entry : 3F/1
 19168 ;;		On exit  : 3F/1
 19169 ;;		Unchanged: 0/0
 19170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19171 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19172 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19174 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19175 ;;Total ram usage:       12 bytes
 19176 ;; Hardware stack levels used:    1
 19177 ;; Hardware stack levels required when called:   16
 19178 ;; This function calls:
 19179 ;;		Nothing
 19180 ;; This function is called by:
 19181 ;;		_GetPressure_pa
 19182 ;;		_SeePressure_pa
 19183 ;;		_See12V
 19184 ;;		_Get12V
 19185 ;; This function uses a non-reentrant model
 19186 ;;
 19187                           
 19188                           	psect	text150
 19189  008B26                     __ptext150:
 19190                           	opt callstack 0
 19191  008B26                     ___lmul:
 19192                           	opt callstack 12
 19193                           
 19194                           ; BSR set to: 1
 19195                           
 19196                           ; BSR set to: 1
 19197                           ;incstack = 0
 19198  008B26  0E00               	movlw	0
 19199  008B28  6F0C               	movwf	___lmul@product& (0+255),b
 19200  008B2A  0E00               	movlw	0
 19201  008B2C  6F0D               	movwf	(___lmul@product+1)& (0+255),b
 19202  008B2E  0E00               	movlw	0
 19203  008B30  6F0E               	movwf	(___lmul@product+2)& (0+255),b
 19204  008B32  0E00               	movlw	0
 19205  008B34  6F0F               	movwf	(___lmul@product+3)& (0+255),b
 19206  008B36                     l19175:
 19207                           
 19208                           ; BSR set to: 1
 19209  008B36  A104               	btfss	___lmul@multiplier& (0+255),0,b
 19210  008B38  D008               	goto	l19179
 19211                           
 19212                           ; BSR set to: 1
 19213  008B3A  5108               	movf	___lmul@multiplicand& (0+255),w,b
 19214  008B3C  270C               	addwf	___lmul@product& (0+255),f,b
 19215  008B3E  5109               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19216  008B40  230D               	addwfc	(___lmul@product+1)& (0+255),f,b
 19217  008B42  510A               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19218  008B44  230E               	addwfc	(___lmul@product+2)& (0+255),f,b
 19219  008B46  510B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19220  008B48  230F               	addwfc	(___lmul@product+3)& (0+255),f,b
 19221  008B4A                     l19179:
 19222                           
 19223                           ; BSR set to: 1
 19224  008B4A  90D8               	bcf	status,0,c
 19225  008B4C  3708               	rlcf	___lmul@multiplicand& (0+255),f,b
 19226  008B4E  3709               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19227  008B50  370A               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19228  008B52  370B               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19229                           
 19230                           ; BSR set to: 1
 19231  008B54  90D8               	bcf	status,0,c
 19232  008B56  3307               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19233  008B58  3306               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19234  008B5A  3305               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19235  008B5C  3304               	rrcf	___lmul@multiplier& (0+255),f,b
 19236  008B5E  5104               	movf	___lmul@multiplier& (0+255),w,b
 19237  008B60  1105               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19238  008B62  1106               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19239  008B64  1107               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19240  008B66  A4D8               	btfss	status,2,c
 19241  008B68  D7E6               	goto	l19175
 19242                           
 19243                           ; BSR set to: 1
 19244  008B6A  0060  F430  F104   	movff	___lmul@product,?___lmul
 19245  008B70  0060  F434  F105   	movff	___lmul@product+1,?___lmul+1
 19246  008B76  0060  F438  F106   	movff	___lmul@product+2,?___lmul+2
 19247  008B7C  0060  F43C  F107   	movff	___lmul@product+3,?___lmul+3
 19248                           
 19249                           ; BSR set to: 1
 19250  008B82  0012               	return		;funcret
 19251  008B84                     __end_of___lmul:
 19252                           	opt callstack 0
 19253                           
 19254 ;; *************** function ___aldiv *****************
 19255 ;; Defined at:
 19256 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19257 ;; Parameters:    Size  Location     Type
 19258 ;;  dividend        4   16[BANK1 ] long 
 19259 ;;  divisor         4   20[BANK1 ] long 
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;  quotient        4   26[BANK1 ] long 
 19262 ;;  sign            1   25[BANK1 ] unsigned char 
 19263 ;;  counter         1   24[BANK1 ] unsigned char 
 19264 ;; Return value:  Size  Location     Type
 19265 ;;                  4   16[BANK1 ] long 
 19266 ;; Registers used:
 19267 ;;		wreg, status,2, status,0
 19268 ;; Tracked objects:
 19269 ;;		On entry : 3F/1
 19270 ;;		On exit  : 3F/1
 19271 ;;		Unchanged: 0/0
 19272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19273 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19274 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19276 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19277 ;;Total ram usage:       14 bytes
 19278 ;; Hardware stack levels used:    1
 19279 ;; Hardware stack levels required when called:   16
 19280 ;; This function calls:
 19281 ;;		Nothing
 19282 ;; This function is called by:
 19283 ;;		_GetPressure_pa
 19284 ;;		_SeePressure_pa
 19285 ;;		_See5V
 19286 ;;		_Get5V
 19287 ;;		_See12V
 19288 ;;		_Get12V
 19289 ;; This function uses a non-reentrant model
 19290 ;;
 19291                           
 19292                           	psect	text151
 19293  006B68                     __ptext151:
 19294                           	opt callstack 0
 19295  006B68                     ___aldiv:
 19296                           	opt callstack 12
 19297                           
 19298                           ; BSR set to: 1
 19299                           
 19300                           ; BSR set to: 1
 19301                           ;incstack = 0
 19302  006B68  0E00               	movlw	0
 19303  006B6A  6F19               	movwf	___aldiv@sign& (0+255),b
 19304                           
 19305                           ; BSR set to: 1
 19306  006B6C  AF17               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19307  006B6E  D00A               	goto	l19191
 19308                           
 19309                           ; BSR set to: 1
 19310  006B70  1F17               	comf	(___aldiv@divisor+3)& (0+255),f,b
 19311  006B72  1F16               	comf	(___aldiv@divisor+2)& (0+255),f,b
 19312  006B74  1F15               	comf	(___aldiv@divisor+1)& (0+255),f,b
 19313  006B76  6D14               	negf	___aldiv@divisor& (0+255),b
 19314  006B78  0E00               	movlw	0
 19315  006B7A  2315               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 19316  006B7C  2316               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 19317  006B7E  2317               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 19318                           
 19319                           ; BSR set to: 1
 19320  006B80  0E01               	movlw	1
 19321  006B82  6F19               	movwf	___aldiv@sign& (0+255),b
 19322  006B84                     l19191:
 19323                           
 19324                           ; BSR set to: 1
 19325  006B84  AF13               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 19326  006B86  D00A               	goto	l19197
 19327                           
 19328                           ; BSR set to: 1
 19329  006B88  1F13               	comf	(___aldiv@dividend+3)& (0+255),f,b
 19330  006B8A  1F12               	comf	(___aldiv@dividend+2)& (0+255),f,b
 19331  006B8C  1F11               	comf	(___aldiv@dividend+1)& (0+255),f,b
 19332  006B8E  6D10               	negf	___aldiv@dividend& (0+255),b
 19333  006B90  0E00               	movlw	0
 19334  006B92  2311               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 19335  006B94  2312               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 19336  006B96  2313               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 19337                           
 19338                           ; BSR set to: 1
 19339  006B98  0E01               	movlw	1
 19340  006B9A  1B19               	xorwf	___aldiv@sign& (0+255),f,b
 19341  006B9C                     l19197:
 19342                           
 19343                           ; BSR set to: 1
 19344  006B9C  0E00               	movlw	0
 19345  006B9E  6F1A               	movwf	___aldiv@quotient& (0+255),b
 19346  006BA0  0E00               	movlw	0
 19347  006BA2  6F1B               	movwf	(___aldiv@quotient+1)& (0+255),b
 19348  006BA4  0E00               	movlw	0
 19349  006BA6  6F1C               	movwf	(___aldiv@quotient+2)& (0+255),b
 19350  006BA8  0E00               	movlw	0
 19351  006BAA  6F1D               	movwf	(___aldiv@quotient+3)& (0+255),b
 19352                           
 19353                           ; BSR set to: 1
 19354  006BAC  5114               	movf	___aldiv@divisor& (0+255),w,b
 19355  006BAE  1115               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 19356  006BB0  1116               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 19357  006BB2  1117               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 19358  006BB4  B4D8               	btfsc	status,2,c
 19359  006BB6  D02A               	goto	l19219
 19360                           
 19361                           ; BSR set to: 1
 19362  006BB8  0E01               	movlw	1
 19363  006BBA  6F18               	movwf	___aldiv@counter& (0+255),b
 19364  006BBC  D006               	goto	l19205
 19365  006BBE                     l19203:
 19366                           
 19367                           ; BSR set to: 1
 19368  006BBE  90D8               	bcf	status,0,c
 19369  006BC0  3714               	rlcf	___aldiv@divisor& (0+255),f,b
 19370  006BC2  3715               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 19371  006BC4  3716               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 19372  006BC6  3717               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 19373  006BC8  2B18               	incf	___aldiv@counter& (0+255),f,b
 19374  006BCA                     l19205:
 19375                           
 19376                           ; BSR set to: 1
 19377  006BCA  AF17               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19378  006BCC  D7F8               	goto	l19203
 19379  006BCE                     u18900:
 19380                           
 19381                           ; BSR set to: 1
 19382  006BCE  90D8               	bcf	status,0,c
 19383  006BD0  371A               	rlcf	___aldiv@quotient& (0+255),f,b
 19384  006BD2  371B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 19385  006BD4  371C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 19386  006BD6  371D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 19387                           
 19388                           ; BSR set to: 1
 19389  006BD8  5114               	movf	___aldiv@divisor& (0+255),w,b
 19390  006BDA  5D10               	subwf	___aldiv@dividend& (0+255),w,b
 19391  006BDC  5115               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19392  006BDE  5911               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 19393  006BE0  5116               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19394  006BE2  5912               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 19395  006BE4  5117               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19396  006BE6  5913               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 19397  006BE8  A0D8               	btfss	status,0,c
 19398  006BEA  D009               	goto	l19215
 19399                           
 19400                           ; BSR set to: 1
 19401  006BEC  5114               	movf	___aldiv@divisor& (0+255),w,b
 19402  006BEE  5F10               	subwf	___aldiv@dividend& (0+255),f,b
 19403  006BF0  5115               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19404  006BF2  5B11               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 19405  006BF4  5116               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19406  006BF6  5B12               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 19407  006BF8  5117               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19408  006BFA  5B13               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 19409                           
 19410                           ; BSR set to: 1
 19411  006BFC  811A               	bsf	___aldiv@quotient& (0+255),0,b
 19412  006BFE                     l19215:
 19413                           
 19414                           ; BSR set to: 1
 19415  006BFE  90D8               	bcf	status,0,c
 19416  006C00  3317               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 19417  006C02  3316               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 19418  006C04  3315               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 19419  006C06  3314               	rrcf	___aldiv@divisor& (0+255),f,b
 19420                           
 19421                           ; BSR set to: 1
 19422  006C08  2F18               	decfsz	___aldiv@counter& (0+255),f,b
 19423  006C0A  D7E1               	goto	u18900
 19424  006C0C                     l19219:
 19425                           
 19426                           ; BSR set to: 1
 19427  006C0C  5119               	movf	___aldiv@sign& (0+255),w,b
 19428  006C0E  B4D8               	btfsc	status,2,c
 19429  006C10  D008               	goto	l19223
 19430                           
 19431                           ; BSR set to: 1
 19432  006C12  1F1D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 19433  006C14  1F1C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 19434  006C16  1F1B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 19435  006C18  6D1A               	negf	___aldiv@quotient& (0+255),b
 19436  006C1A  0E00               	movlw	0
 19437  006C1C  231B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 19438  006C1E  231C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 19439  006C20  231D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 19440  006C22                     l19223:
 19441                           
 19442                           ; BSR set to: 1
 19443  006C22  0060  F468  F110   	movff	___aldiv@quotient,?___aldiv
 19444  006C28  0060  F46C  F111   	movff	___aldiv@quotient+1,?___aldiv+1
 19445  006C2E  0060  F470  F112   	movff	___aldiv@quotient+2,?___aldiv+2
 19446  006C34  0060  F474  F113   	movff	___aldiv@quotient+3,?___aldiv+3
 19447                           
 19448                           ; BSR set to: 1
 19449  006C3A  0012               	return		;funcret
 19450  006C3C                     __end_of___aldiv:
 19451                           	opt callstack 0
 19452                           
 19453 ;; *************** function _AdcGetData *****************
 19454 ;; Defined at:
 19455 ;;		line 89 in file "monitor.c"
 19456 ;; Parameters:    Size  Location     Type
 19457 ;;  id              2   10[BANK1 ] int 
 19458 ;; Auto vars:     Size  Location     Type
 19459 ;;  data            2   12[BANK1 ] unsigned short 
 19460 ;; Return value:  Size  Location     Type
 19461 ;;                  2   10[BANK1 ] unsigned short 
 19462 ;; Registers used:
 19463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19464 ;; Tracked objects:
 19465 ;;		On entry : 3F/1
 19466 ;;		On exit  : 3F/1
 19467 ;;		Unchanged: 0/0
 19468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19469 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19470 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19472 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19473 ;;Total ram usage:        4 bytes
 19474 ;; Hardware stack levels used:    1
 19475 ;; Hardware stack levels required when called:   17
 19476 ;; This function calls:
 19477 ;;		___wmul
 19478 ;; This function is called by:
 19479 ;;		_GetPressure_pa
 19480 ;;		_GetPressureV_pa
 19481 ;;		_Get5V
 19482 ;;		_Get12V
 19483 ;; This function uses a non-reentrant model
 19484 ;;
 19485                           
 19486                           	psect	text152
 19487  008932                     __ptext152:
 19488                           	opt callstack 0
 19489  008932                     _AdcGetData:
 19490                           	opt callstack 11
 19491                           
 19492                           ; BSR set to: 1
 19493                           ;monitor.c: 90:     adc_result_t data;;monitor.c: 91:     data = adcChannels[id].data;
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;incstack = 0
 19497  008932  0060  F428  F104   	movff	AdcGetData@id,___wmul@multiplier
 19498  008938  0060  F42C  F105   	movff	AdcGetData@id+1,___wmul@multiplier+1
 19499  00893E  0E00               	movlw	0
 19500  008940  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19501  008942  0E05               	movlw	5
 19502  008944  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19503  008946  EC60  F04C         	call	___wmul	;wreg free
 19504  00894A  0EBE               	movlw	low (_adcChannels+2)
 19505  00894C  2504               	addwf	?___wmul& (0+255),w,b
 19506  00894E  6ED9               	movwf	fsr2l,c
 19507  008950  0E02               	movlw	high (_adcChannels+2)
 19508  008952  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19509  008954  6EDA               	movwf	fsr2h,c
 19510  008956  006F FF78  F10C    	movff	postinc2,AdcGetData@data
 19511  00895C  006F FF74  F10D    	movff	postdec2,AdcGetData@data+1
 19512                           
 19513                           ;monitor.c: 92:     adcChannels[id].dataValid=0;
 19514  008962  0060  F428  F104   	movff	AdcGetData@id,___wmul@multiplier
 19515  008968  0060  F42C  F105   	movff	AdcGetData@id+1,___wmul@multiplier+1
 19516  00896E  0E00               	movlw	0
 19517  008970  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19518  008972  0E05               	movlw	5
 19519  008974  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19520  008976  EC60  F04C         	call	___wmul	;wreg free
 19521  00897A  0EBD               	movlw	low (_adcChannels+1)
 19522  00897C  2504               	addwf	?___wmul& (0+255),w,b
 19523  00897E  6ED9               	movwf	fsr2l,c
 19524  008980  0E02               	movlw	high (_adcChannels+1)
 19525  008982  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19526  008984  6EDA               	movwf	fsr2h,c
 19527  008986  0E00               	movlw	0
 19528  008988  6EDF               	movwf	indf2,c
 19529                           
 19530                           ; BSR set to: 1
 19531                           ;monitor.c: 93:     return data;
 19532  00898A  0060  F430  F10A   	movff	AdcGetData@data,?_AdcGetData
 19533  008990  0060  F434  F10B   	movff	AdcGetData@data+1,?_AdcGetData+1
 19534                           
 19535                           ; BSR set to: 1
 19536  008996  0012               	return		;funcret
 19537  008998                     __end_of_AdcGetData:
 19538                           	opt callstack 0
 19539                           
 19540 ;; *************** function _ClearNoPowerSupplyAlarm *****************
 19541 ;; Defined at:
 19542 ;;		line 290 in file "alarm.c"
 19543 ;; Parameters:    Size  Location     Type
 19544 ;;		None
 19545 ;; Auto vars:     Size  Location     Type
 19546 ;;		None
 19547 ;; Return value:  Size  Location     Type
 19548 ;;                  1    wreg      void 
 19549 ;; Registers used:
 19550 ;;		wreg, status,2
 19551 ;; Tracked objects:
 19552 ;;		On entry : 3F/2
 19553 ;;		On exit  : 3F/2
 19554 ;;		Unchanged: 0/0
 19555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19560 ;;Total ram usage:        0 bytes
 19561 ;; Hardware stack levels used:    1
 19562 ;; Hardware stack levels required when called:   16
 19563 ;; This function calls:
 19564 ;;		Nothing
 19565 ;; This function is called by:
 19566 ;;		_BatteryFailAlarm
 19567 ;; This function uses a non-reentrant model
 19568 ;;
 19569                           
 19570                           	psect	text153
 19571  00A5BC                     __ptext153:
 19572                           	opt callstack 0
 19573  00A5BC                     _ClearNoPowerSupplyAlarm:
 19574                           	opt callstack 12
 19575                           
 19576                           ; BSR set to: 2
 19577                           
 19578                           ; BSR set to: 1
 19579                           ;incstack = 0
 19580  00A5BC  0E00               	movlw	0
 19581  00A5BE  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 19582                           
 19583                           ; BSR set to: 2
 19584  00A5C0  0012               	return		;funcret
 19585  00A5C2                     __end_of_ClearNoPowerSupplyAlarm:
 19586                           	opt callstack 0
 19587                           
 19588 ;; *************** function _ClearBatteryFailAlarm *****************
 19589 ;; Defined at:
 19590 ;;		line 269 in file "alarm.c"
 19591 ;; Parameters:    Size  Location     Type
 19592 ;;		None
 19593 ;; Auto vars:     Size  Location     Type
 19594 ;;		None
 19595 ;; Return value:  Size  Location     Type
 19596 ;;                  1    wreg      void 
 19597 ;; Registers used:
 19598 ;;		wreg, status,2
 19599 ;; Tracked objects:
 19600 ;;		On entry : 3F/1
 19601 ;;		On exit  : 3F/0
 19602 ;;		Unchanged: 0/0
 19603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19608 ;;Total ram usage:        0 bytes
 19609 ;; Hardware stack levels used:    1
 19610 ;; Hardware stack levels required when called:   16
 19611 ;; This function calls:
 19612 ;;		Nothing
 19613 ;; This function is called by:
 19614 ;;		_BatteryFailAlarm
 19615 ;; This function uses a non-reentrant model
 19616 ;;
 19617                           
 19618                           	psect	text154
 19619  00A4F0                     __ptext154:
 19620                           	opt callstack 0
 19621  00A4F0                     _ClearBatteryFailAlarm:
 19622                           	opt callstack 12
 19623                           
 19624                           ; BSR set to: 1
 19625                           
 19626                           ; BSR set to: 2
 19627                           ;incstack = 0
 19628  00A4F0  0E00               	movlw	0
 19629  00A4F2  0100               	movlb	0	; () banked
 19630  00A4F4  6FF7               	movwf	_batteryFailAlarm& (0+255),b
 19631                           
 19632                           ; BSR set to: 0
 19633  00A4F6  0012               	return		;funcret
 19634  00A4F8                     __end_of_ClearBatteryFailAlarm:
 19635                           	opt callstack 0
 19636                           
 19637 ;; *************** function _ClearBaterryLowAlarmMed *****************
 19638 ;; Defined at:
 19639 ;;		line 280 in file "alarm.c"
 19640 ;; Parameters:    Size  Location     Type
 19641 ;;		None
 19642 ;; Auto vars:     Size  Location     Type
 19643 ;;		None
 19644 ;; Return value:  Size  Location     Type
 19645 ;;                  1    wreg      void 
 19646 ;; Registers used:
 19647 ;;		wreg, status,2
 19648 ;; Tracked objects:
 19649 ;;		On entry : 3F/2
 19650 ;;		On exit  : 3F/2
 19651 ;;		Unchanged: 0/0
 19652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19657 ;;Total ram usage:        0 bytes
 19658 ;; Hardware stack levels used:    1
 19659 ;; Hardware stack levels required when called:   16
 19660 ;; This function calls:
 19661 ;;		Nothing
 19662 ;; This function is called by:
 19663 ;;		_BatteryFailAlarm
 19664 ;; This function uses a non-reentrant model
 19665 ;;
 19666                           
 19667                           	psect	text155
 19668  00A5C2                     __ptext155:
 19669                           	opt callstack 0
 19670  00A5C2                     _ClearBaterryLowAlarmMed:
 19671                           	opt callstack 12
 19672                           
 19673                           ; BSR set to: 2
 19674                           
 19675                           ; BSR set to: 0
 19676                           ;incstack = 0
 19677  00A5C2  0E00               	movlw	0
 19678  00A5C4  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 19679                           
 19680                           ; BSR set to: 2
 19681  00A5C6  0012               	return		;funcret
 19682  00A5C8                     __end_of_ClearBaterryLowAlarmMed:
 19683                           	opt callstack 0
 19684                           
 19685 ;; *************** function _ClearBaterryLowAlarmHigh *****************
 19686 ;; Defined at:
 19687 ;;		line 281 in file "alarm.c"
 19688 ;; Parameters:    Size  Location     Type
 19689 ;;		None
 19690 ;; Auto vars:     Size  Location     Type
 19691 ;;		None
 19692 ;; Return value:  Size  Location     Type
 19693 ;;                  1    wreg      void 
 19694 ;; Registers used:
 19695 ;;		wreg, status,2
 19696 ;; Tracked objects:
 19697 ;;		On entry : 3F/2
 19698 ;;		On exit  : 3F/2
 19699 ;;		Unchanged: 0/0
 19700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19705 ;;Total ram usage:        0 bytes
 19706 ;; Hardware stack levels used:    1
 19707 ;; Hardware stack levels required when called:   16
 19708 ;; This function calls:
 19709 ;;		Nothing
 19710 ;; This function is called by:
 19711 ;;		_BatteryFailAlarm
 19712 ;; This function uses a non-reentrant model
 19713 ;;
 19714                           
 19715                           	psect	text156
 19716  00A5C8                     __ptext156:
 19717                           	opt callstack 0
 19718  00A5C8                     _ClearBaterryLowAlarmHigh:
 19719                           	opt callstack 12
 19720                           
 19721                           ; BSR set to: 2
 19722                           
 19723                           ; BSR set to: 2
 19724                           ;incstack = 0
 19725  00A5C8  0E00               	movlw	0
 19726  00A5CA  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 19727                           
 19728                           ; BSR set to: 2
 19729  00A5CC  0012               	return		;funcret
 19730  00A5CE                     __end_of_ClearBaterryLowAlarmHigh:
 19731                           	opt callstack 0
 19732                           
 19733 ;; *************** function _AdcDataReady *****************
 19734 ;; Defined at:
 19735 ;;		line 78 in file "monitor.c"
 19736 ;; Parameters:    Size  Location     Type
 19737 ;;  id              2   10[BANK1 ] int 
 19738 ;; Auto vars:     Size  Location     Type
 19739 ;;		None
 19740 ;; Return value:  Size  Location     Type
 19741 ;;                  1    wreg      _Bool 
 19742 ;; Registers used:
 19743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19744 ;; Tracked objects:
 19745 ;;		On entry : 3F/1
 19746 ;;		On exit  : 3F/1
 19747 ;;		Unchanged: 0/0
 19748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19749 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19752 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19753 ;;Total ram usage:        2 bytes
 19754 ;; Hardware stack levels used:    1
 19755 ;; Hardware stack levels required when called:   17
 19756 ;; This function calls:
 19757 ;;		___wmul
 19758 ;; This function is called by:
 19759 ;;		_BatteryFailAlarm
 19760 ;;		_MonitorFailAlarm
 19761 ;; This function uses a non-reentrant model
 19762 ;;
 19763                           
 19764                           	psect	text157
 19765  009A28                     __ptext157:
 19766                           	opt callstack 0
 19767  009A28                     _AdcDataReady:
 19768                           	opt callstack 11
 19769                           
 19770                           ; BSR set to: 1
 19771                           ;monitor.c: 79:     return adcChannels[id].dataValid;
 19772                           
 19773                           ; BSR set to: 2
 19774                           ;incstack = 0
 19775  009A28  0060  F428  F104   	movff	AdcDataReady@id,___wmul@multiplier
 19776  009A2E  0060  F42C  F105   	movff	AdcDataReady@id+1,___wmul@multiplier+1
 19777  009A34  0E00               	movlw	0
 19778  009A36  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19779  009A38  0E05               	movlw	5
 19780  009A3A  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19781  009A3C  EC60  F04C         	call	___wmul	;wreg free
 19782  009A40  0EBD               	movlw	low (_adcChannels+1)
 19783  009A42  2504               	addwf	?___wmul& (0+255),w,b
 19784  009A44  6ED9               	movwf	fsr2l,c
 19785  009A46  0E02               	movlw	high (_adcChannels+1)
 19786  009A48  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19787  009A4A  6EDA               	movwf	fsr2h,c
 19788  009A4C  50DF               	movf	indf2,w,c
 19789                           
 19790                           ; BSR set to: 1
 19791  009A4E  0012               	return		;funcret
 19792  009A50                     __end_of_AdcDataReady:
 19793                           	opt callstack 0
 19794                           
 19795 ;; *************** function _AlarmUpdateLCD *****************
 19796 ;; Defined at:
 19797 ;;		line 440 in file "alarm.c"
 19798 ;; Parameters:    Size  Location     Type
 19799 ;;		None
 19800 ;; Auto vars:     Size  Location     Type
 19801 ;;  id              2  192[BANK1 ] int 
 19802 ;; Return value:  Size  Location     Type
 19803 ;;                  1    wreg      void 
 19804 ;; Registers used:
 19805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19806 ;; Tracked objects:
 19807 ;;		On entry : 3C/1
 19808 ;;		On exit  : 3E/0
 19809 ;;		Unchanged: 0/0
 19810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19812 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19814 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19815 ;;Total ram usage:        6 bytes
 19816 ;; Hardware stack levels used:    1
 19817 ;; Hardware stack levels required when called:   27
 19818 ;; This function calls:
 19819 ;;		_AlarmDisplay
 19820 ;;		_AnyAlarm
 19821 ;;		_HigherAlarm
 19822 ;;		_ValueDisplay
 19823 ;;		___wmul
 19824 ;; This function is called by:
 19825 ;;		_HistAlarm
 19826 ;;		_AlarmCheckTask
 19827 ;; This function uses a non-reentrant model
 19828 ;;
 19829                           
 19830                           	psect	text158
 19831  005C60                     __ptext158:
 19832                           	opt callstack 0
 19833  005C60                     _AlarmUpdateLCD:
 19834                           	opt callstack 2
 19835                           
 19836                           ;alarm.c: 442:     if (histSec) {
 19837                           
 19838                           ; BSR set to: 1
 19839                           ;incstack = 0
 19840  005C60  0101               	movlb	1	; () banked
 19841  005C62  51E9               	movf	_histSec& (0+255),w,b
 19842  005C64  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 19843  005C66  B4D8               	btfsc	status,2,c
 19844  005C68  D03F               	goto	l20983
 19845                           
 19846                           ; BSR set to: 1
 19847                           ;alarm.c: 443:         displayStatus = 2;
 19848  005C6A  0E00               	movlw	0
 19849  005C6C  0100               	movlb	0	; () banked
 19850  005C6E  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 19851  005C70  0E02               	movlw	2
 19852  005C72  6FE0               	movwf	_displayStatus& (0+255),b
 19853                           
 19854                           ; BSR set to: 0
 19855                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 19856  005C74  0060  F79C  F104   	movff	_hist,___wmul@multiplier
 19857  005C7A  0060  F7A0  F105   	movff	_hist+1,___wmul@multiplier+1
 19858  005C80  0E00               	movlw	0
 19859  005C82  0101               	movlb	1	; () banked
 19860  005C84  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19861  005C86  0E15               	movlw	21
 19862  005C88  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19863  005C8A  EC60  F04C         	call	___wmul	;wreg free
 19864  005C8E  0E25               	movlw	low (_alarmData+17)
 19865  005C90  2504               	addwf	?___wmul& (0+255),w,b
 19866  005C92  6ED9               	movwf	fsr2l,c
 19867  005C94  0E09               	movlw	high (_alarmData+17)
 19868  005C96  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19869  005C98  6EDA               	movwf	fsr2h,c
 19870  005C9A  006F FF78  F1C2    	movff	postinc2,_AlarmUpdateLCD$6531
 19871  005CA0  006F FF74  F1C3    	movff	postdec2,_AlarmUpdateLCD$6531+1
 19872                           
 19873                           ; BSR set to: 1
 19874                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 19875  005CA6  0060  F79C  F104   	movff	_hist,___wmul@multiplier
 19876  005CAC  0060  F7A0  F105   	movff	_hist+1,___wmul@multiplier+1
 19877  005CB2  0E00               	movlw	0
 19878  005CB4  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19879  005CB6  0E15               	movlw	21
 19880  005CB8  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19881  005CBA  EC60  F04C         	call	___wmul	;wreg free
 19882  005CBE  0E14               	movlw	low _alarmData
 19883  005CC0  2504               	addwf	?___wmul& (0+255),w,b
 19884  005CC2  6FC4               	movwf	_AlarmUpdateLCD$6532& (0+255),b
 19885  005CC4  0E09               	movlw	high _alarmData
 19886  005CC6  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19887  005CC8  6FC5               	movwf	(_AlarmUpdateLCD$6532+1)& (0+255),b
 19888                           
 19889                           ; BSR set to: 1
 19890                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 19891  005CCA  0060  F708  F1B7   	movff	_AlarmUpdateLCD$6531,AlarmDisplay@type
 19892  005CD0  0060  F70C  F1B8   	movff	_AlarmUpdateLCD$6531+1,AlarmDisplay@type+1
 19893  005CD6  0060  F710  F1B9   	movff	_AlarmUpdateLCD$6532,AlarmDisplay@alarm
 19894  005CDC  0060  F714  F1BA   	movff	_AlarmUpdateLCD$6532+1,AlarmDisplay@alarm+1
 19895  005CE2  EC03  F03D         	call	_AlarmDisplay	;wreg free
 19896                           
 19897                           ;alarm.c: 446:     } else {
 19898  005CE6  0012               	return	
 19899  005CE8                     l20983:
 19900                           
 19901                           ; BSR set to: 1
 19902                           ;alarm.c: 447:         if (displayStatus==1 && AnyAlarm())
 19903  005CE8  0100               	movlb	0	; () banked
 19904  005CEA  05E0               	decf	_displayStatus& (0+255),w,b
 19905  005CEC  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 19906  005CEE  A4D8               	btfss	status,2,c
 19907  005CF0  D04B               	goto	l20997
 19908                           
 19909                           ; BSR set to: 0
 19910  005CF2  EC70  F04A         	call	_AnyAlarm	;wreg free
 19911  005CF6  0900               	iorlw	0
 19912  005CF8  B4D8               	btfsc	status,2,c
 19913  005CFA  D046               	goto	l20997
 19914                           
 19915                           ; BSR set to: 1
 19916                           ;alarm.c: 448:         {;alarm.c: 449:             int id;;alarm.c: 451:             id 
      +                          = HigherAlarm();
 19917  005CFC  ECC3  F038         	call	_HigherAlarm	;wreg free
 19918  005D00  0060  F428  F1C0   	movff	?_HigherAlarm,AlarmUpdateLCD@id
 19919  005D06  0060  F42C  F1C1   	movff	?_HigherAlarm+1,AlarmUpdateLCD@id+1
 19920                           
 19921                           ; BSR set to: 1
 19922                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 19923  005D0C  0060  F700  F104   	movff	AlarmUpdateLCD@id,___wmul@multiplier
 19924  005D12  0060  F704  F105   	movff	AlarmUpdateLCD@id+1,___wmul@multiplier+1
 19925  005D18  0E00               	movlw	0
 19926  005D1A  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19927  005D1C  0E15               	movlw	21
 19928  005D1E  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19929  005D20  EC60  F04C         	call	___wmul	;wreg free
 19930  005D24  0E25               	movlw	low (_alarmData+17)
 19931  005D26  2504               	addwf	?___wmul& (0+255),w,b
 19932  005D28  6ED9               	movwf	fsr2l,c
 19933  005D2A  0E09               	movlw	high (_alarmData+17)
 19934  005D2C  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19935  005D2E  6EDA               	movwf	fsr2h,c
 19936  005D30  006F FF78  F1C2    	movff	postinc2,_AlarmUpdateLCD$6531
 19937  005D36  006F FF74  F1C3    	movff	postdec2,_AlarmUpdateLCD$6531+1
 19938                           
 19939                           ; BSR set to: 1
 19940                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 19941  005D3C  0060  F700  F104   	movff	AlarmUpdateLCD@id,___wmul@multiplier
 19942  005D42  0060  F704  F105   	movff	AlarmUpdateLCD@id+1,___wmul@multiplier+1
 19943  005D48  0E00               	movlw	0
 19944  005D4A  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19945  005D4C  0E15               	movlw	21
 19946  005D4E  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19947  005D50  EC60  F04C         	call	___wmul	;wreg free
 19948  005D54  0E14               	movlw	low _alarmData
 19949  005D56  2504               	addwf	?___wmul& (0+255),w,b
 19950  005D58  6FC4               	movwf	_AlarmUpdateLCD$6532& (0+255),b
 19951  005D5A  0E09               	movlw	high _alarmData
 19952  005D5C  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19953  005D5E  6FC5               	movwf	(_AlarmUpdateLCD$6532+1)& (0+255),b
 19954                           
 19955                           ; BSR set to: 1
 19956                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 19957  005D60  0060  F708  F1B7   	movff	_AlarmUpdateLCD$6531,AlarmDisplay@type
 19958  005D66  0060  F70C  F1B8   	movff	_AlarmUpdateLCD$6531+1,AlarmDisplay@type+1
 19959  005D6C  0060  F710  F1B9   	movff	_AlarmUpdateLCD$6532,AlarmDisplay@alarm
 19960  005D72  0060  F714  F1BA   	movff	_AlarmUpdateLCD$6532+1,AlarmDisplay@alarm+1
 19961  005D78  EC03  F03D         	call	_AlarmDisplay	;wreg free
 19962                           
 19963                           ; BSR set to: 1
 19964                           ;alarm.c: 454:             displayStatus = 0;
 19965  005D7C  0E00               	movlw	0
 19966  005D7E  0100               	movlb	0	; () banked
 19967  005D80  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 19968  005D82  0E00               	movlw	0
 19969  005D84  6FE0               	movwf	_displayStatus& (0+255),b
 19970                           
 19971                           ;alarm.c: 455:         } else {
 19972  005D86  0012               	return	
 19973  005D88                     l20997:
 19974                           
 19975                           ;alarm.c: 458:             ValueDisplay();
 19976  005D88  EC1C  F011         	call	_ValueDisplay	;wreg free
 19977                           
 19978                           ;alarm.c: 460:             if (AnyAlarm()) displayStatus = 1;
 19979  005D8C  EC70  F04A         	call	_AnyAlarm	;wreg free
 19980  005D90  0900               	iorlw	0
 19981  005D92  B4D8               	btfsc	status,2,c
 19982  005D94  0012               	return	
 19983                           
 19984                           ; BSR set to: 1
 19985  005D96  0E00               	movlw	0
 19986  005D98  0100               	movlb	0	; () banked
 19987  005D9A  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 19988  005D9C  0E01               	movlw	1
 19989  005D9E  6FE0               	movwf	_displayStatus& (0+255),b
 19990  005DA0  0012               	return		;funcret
 19991  005DA2                     __end_of_AlarmUpdateLCD:
 19992                           	opt callstack 0
 19993                           
 19994 ;; *************** function _HigherAlarm *****************
 19995 ;; Defined at:
 19996 ;;		line 359 in file "alarm.c"
 19997 ;; Parameters:    Size  Location     Type
 19998 ;;		None
 19999 ;; Auto vars:     Size  Location     Type
 20000 ;;  i               2   19[BANK1 ] int 
 20001 ;;  max             2   17[BANK1 ] int 
 20002 ;; Return value:  Size  Location     Type
 20003 ;;                  2   10[BANK1 ] int 
 20004 ;; Registers used:
 20005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20006 ;; Tracked objects:
 20007 ;;		On entry : 3F/1
 20008 ;;		On exit  : 3F/1
 20009 ;;		Unchanged: 0/0
 20010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20011 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20012 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20013 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20014 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20015 ;;Total ram usage:       11 bytes
 20016 ;; Hardware stack levels used:    1
 20017 ;; Hardware stack levels required when called:   17
 20018 ;; This function calls:
 20019 ;;		___wmul
 20020 ;; This function is called by:
 20021 ;;		_MuteAlarm
 20022 ;;		_AlarmUpdateLCD
 20023 ;;		_AlarmCheckTask
 20024 ;; This function uses a non-reentrant model
 20025 ;;
 20026                           
 20027                           	psect	text159
 20028  007186                     __ptext159:
 20029                           	opt callstack 0
 20030  007186                     _HigherAlarm:
 20031                           	opt callstack 12
 20032                           
 20033                           ; BSR set to: 1
 20034                           ;alarm.c: 360:     int max=-1;
 20035                           
 20036                           ;incstack = 0
 20037  007186  6911               	setf	HigherAlarm@max& (0+255),b
 20038  007188  6912               	setf	(HigherAlarm@max+1)& (0+255),b
 20039                           
 20040                           ; BSR set to: 1
 20041                           ;alarm.c: 361:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 20042  00718A  0E00               	movlw	0
 20043  00718C  6F14               	movwf	(HigherAlarm@i+1)& (0+255),b
 20044  00718E  0E00               	movlw	0
 20045  007190  6F13               	movwf	HigherAlarm@i& (0+255),b
 20046  007192                     l19807:
 20047                           
 20048                           ; BSR set to: 1
 20049                           ;alarm.c: 362:         if (alarms[i]) {
 20050  007192  90D8               	bcf	status,0,c
 20051  007194  3513               	rlcf	HigherAlarm@i& (0+255),w,b
 20052  007196  6ED9               	movwf	fsr2l,c
 20053  007198  3514               	rlcf	(HigherAlarm@i+1)& (0+255),w,b
 20054  00719A  6EDA               	movwf	fsr2h,c
 20055  00719C  0E00               	movlw	low _alarms
 20056  00719E  26D9               	addwf	fsr2l,f,c
 20057  0071A0  0E03               	movlw	high _alarms
 20058  0071A2  22DA               	addwfc	fsr2h,f,c
 20059  0071A4  50DE               	movf	postinc2,w,c
 20060  0071A6  10DE               	iorwf	postinc2,w,c
 20061  0071A8  B4D8               	btfsc	status,2,c
 20062  0071AA  D037               	goto	l19817
 20063                           
 20064                           ; BSR set to: 1
 20065                           ;alarm.c: 363:             if (max<0) max = i;
 20066  0071AC  AF12               	btfss	(HigherAlarm@max+1)& (0+255),7,b
 20067  0071AE  D007               	goto	l19813
 20068  0071B0                     u19150:
 20069                           
 20070                           ; BSR set to: 1
 20071  0071B0  0060  F44C  F111   	movff	HigherAlarm@i,HigherAlarm@max
 20072  0071B6  0060  F450  F112   	movff	HigherAlarm@i+1,HigherAlarm@max+1
 20073  0071BC  D02E               	goto	l19817
 20074  0071BE                     l19813:
 20075                           
 20076                           ; BSR set to: 1
 20077  0071BE  0060  F44C  F104   	movff	HigherAlarm@i,___wmul@multiplier
 20078  0071C4  0060  F450  F105   	movff	HigherAlarm@i+1,___wmul@multiplier+1
 20079  0071CA  0E00               	movlw	0
 20080  0071CC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20081  0071CE  0E15               	movlw	21
 20082  0071D0  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20083  0071D2  EC60  F04C         	call	___wmul	;wreg free
 20084  0071D6  0E25               	movlw	low (_alarmData+17)
 20085  0071D8  2504               	addwf	?___wmul& (0+255),w,b
 20086  0071DA  6ED9               	movwf	fsr2l,c
 20087  0071DC  0E09               	movlw	high (_alarmData+17)
 20088  0071DE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20089  0071E0  6EDA               	movwf	fsr2h,c
 20090  0071E2  0060  F444  F104   	movff	HigherAlarm@max,___wmul@multiplier
 20091  0071E8  0060  F448  F105   	movff	HigherAlarm@max+1,___wmul@multiplier+1
 20092  0071EE  0E00               	movlw	0
 20093  0071F0  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20094  0071F2  0E15               	movlw	21
 20095  0071F4  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20096  0071F6  EC60  F04C         	call	___wmul	;wreg free
 20097  0071FA  0E25               	movlw	low (_alarmData+17)
 20098  0071FC  2504               	addwf	?___wmul& (0+255),w,b
 20099  0071FE  6EE1               	movwf	fsr1l,c
 20100  007200  0E09               	movlw	high (_alarmData+17)
 20101  007202  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20102  007204  6EE2               	movwf	fsr1h,c
 20103  007206  50DE               	movf	postinc2,w,c
 20104  007208  5CE6               	subwf	postinc1,w,c
 20105  00720A  50E6               	movf	postinc1,w,c
 20106  00720C  0A80               	xorlw	128
 20107  00720E  6F10               	movwf	(??_HigherAlarm+4)& (0+255),b
 20108  007210  50DE               	movf	postinc2,w,c
 20109  007212  0A80               	xorlw	128
 20110  007214  5910               	subwfb	(??_HigherAlarm+4)& (0+255),w,b
 20111  007216  A0D8               	btfss	status,0,c
 20112  007218  D7CB               	goto	u19150
 20113  00721A                     l19817:
 20114                           
 20115                           ; BSR set to: 1
 20116                           ;alarm.c: 366:     }
 20117  00721A  4B13               	infsnz	HigherAlarm@i& (0+255),f,b
 20118  00721C  2B14               	incf	(HigherAlarm@i+1)& (0+255),f,b
 20119                           
 20120                           ; BSR set to: 1
 20121  00721E  5114               	movf	(HigherAlarm@i+1)& (0+255),w,b
 20122  007220  E104               	bnz	u19170
 20123  007222  0E13               	movlw	19
 20124  007224  5D13               	subwf	HigherAlarm@i& (0+255),w,b
 20125  007226  A0D8               	btfss	status,0,c
 20126  007228  D7B4               	goto	l19807
 20127  00722A                     u19170:
 20128                           
 20129                           ; BSR set to: 1
 20130                           ;alarm.c: 367:     return max;
 20131  00722A  0060  F444  F10A   	movff	HigherAlarm@max,?_HigherAlarm
 20132  007230  0060  F448  F10B   	movff	HigherAlarm@max+1,?_HigherAlarm+1
 20133                           
 20134                           ; BSR set to: 1
 20135  007236  0012               	return		;funcret
 20136  007238                     __end_of_HigherAlarm:
 20137                           	opt callstack 0
 20138                           
 20139 ;; *************** function _AlarmDisplay *****************
 20140 ;; Defined at:
 20141 ;;		line 110 in file "display.c"
 20142 ;; Parameters:    Size  Location     Type
 20143 ;;  type            2  183[BANK1 ] int 
 20144 ;;  alarm           2  185[BANK1 ] PTR unsigned char 
 20145 ;;		 -> alarmData(399), 
 20146 ;; Auto vars:     Size  Location     Type
 20147 ;;  t               1  187[BANK1 ] unsigned char 
 20148 ;; Return value:  Size  Location     Type
 20149 ;;                  1    wreg      void 
 20150 ;; Registers used:
 20151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20152 ;; Tracked objects:
 20153 ;;		On entry : 3F/1
 20154 ;;		On exit  : 3F/1
 20155 ;;		Unchanged: 0/0
 20156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20157 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20158 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20160 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20161 ;;Total ram usage:        9 bytes
 20162 ;; Hardware stack levels used:    1
 20163 ;; Hardware stack levels required when called:   26
 20164 ;; This function calls:
 20165 ;;		_ValueDisplay
 20166 ;;		___awmod
 20167 ;;		_sprintf
 20168 ;; This function is called by:
 20169 ;;		_AlarmUpdateLCD
 20170 ;; This function uses a non-reentrant model
 20171 ;;
 20172                           
 20173                           	psect	text160
 20174  007A06                     __ptext160:
 20175                           	opt callstack 0
 20176  007A06                     _AlarmDisplay:
 20177                           	opt callstack 2
 20178                           
 20179                           ; BSR set to: 1
 20180                           ;display.c: 111:     static int cnt = 0;;display.c: 112:     char t = (type==4) ? 'H' : 
      +                          ((type==2) ? 'M' : 'L');
 20181                           
 20182                           ; BSR set to: 1
 20183                           ;incstack = 0
 20184  007A06  0E04               	movlw	4
 20185  007A08  19B7               	xorwf	AlarmDisplay@type& (0+255),w,b
 20186  007A0A  11B8               	iorwf	(AlarmDisplay@type+1)& (0+255),w,b
 20187  007A0C  B4D8               	btfsc	status,2,c
 20188  007A0E  D014               	goto	l19397
 20189                           
 20190                           ; BSR set to: 1
 20191  007A10  0E02               	movlw	2
 20192  007A12  19B7               	xorwf	AlarmDisplay@type& (0+255),w,b
 20193  007A14  11B8               	iorwf	(AlarmDisplay@type+1)& (0+255),w,b
 20194  007A16  B4D8               	btfsc	status,2,c
 20195  007A18  D004               	goto	l19393
 20196                           
 20197                           ; BSR set to: 1
 20198  007A1A  0E00               	movlw	0
 20199  007A1C  6FBF               	movwf	(_AlarmDisplay$4016+1)& (0+255),b
 20200  007A1E  0E4C               	movlw	76
 20201  007A20  D003               	goto	L2
 20202  007A22                     l19393:
 20203                           
 20204                           ; BSR set to: 1
 20205  007A22  0E00               	movlw	0
 20206  007A24  6FBF               	movwf	(_AlarmDisplay$4016+1)& (0+255),b
 20207  007A26  0E4D               	movlw	77
 20208  007A28                     L2:
 20209  007A28  6FBE               	movwf	_AlarmDisplay$4016& (0+255),b
 20210                           
 20211                           ; BSR set to: 1
 20212  007A2A  0060  F6F8  F1BC   	movff	_AlarmDisplay$4016,_AlarmDisplay$4015
 20213  007A30  0060  F6FC  F1BD   	movff	_AlarmDisplay$4016+1,_AlarmDisplay$4015+1
 20214  007A36  D004               	goto	l19399
 20215  007A38                     l19397:
 20216                           
 20217                           ; BSR set to: 1
 20218  007A38  0E00               	movlw	0
 20219  007A3A  6FBD               	movwf	(_AlarmDisplay$4015+1)& (0+255),b
 20220  007A3C  0E48               	movlw	72
 20221  007A3E  6FBC               	movwf	_AlarmDisplay$4015& (0+255),b
 20222  007A40                     l19399:
 20223                           
 20224                           ; BSR set to: 1
 20225  007A40  0060  F6F0  F1BB   	movff	_AlarmDisplay$4015,AlarmDisplay@t
 20226                           
 20227                           ; BSR set to: 1
 20228                           ;display.c: 114:         sprintf(msg2, "%c %14s", t, alarm);
 20229  007A46  0ED1               	movlw	low _msg2
 20230  007A48  6F71               	movwf	sprintf@s& (0+255),b
 20231  007A4A  0E03               	movlw	high _msg2
 20232  007A4C  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20233  007A4E  0EB2               	movlw	low STR_13
 20234  007A50  6F73               	movwf	sprintf@fmt& (0+255),b
 20235  007A52  0EFF               	movlw	high STR_13
 20236  007A54  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20237  007A56  0060  F6EC  F175   	movff	AlarmDisplay@t,?_sprintf+4
 20238  007A5C  6B76               	clrf	(?_sprintf+5)& (0+255),b
 20239  007A5E  0060  F6E4  F177   	movff	AlarmDisplay@alarm,?_sprintf+6
 20240  007A64  0060  F6E8  F178   	movff	AlarmDisplay@alarm+1,?_sprintf+7
 20241  007A6A  ECF1  F045         	call	_sprintf	;wreg free
 20242                           
 20243                           ; BSR set to: 1
 20244                           ;display.c: 117:     ValueDisplay();
 20245  007A6E  EC1C  F011         	call	_ValueDisplay	;wreg free
 20246                           
 20247                           ;display.c: 118:     cnt++;
 20248  007A72  0102               	movlb	2	; () banked
 20249  007A74  4B86               	infsnz	AlarmDisplay@cnt& (0+255),f,b
 20250  007A76  2B87               	incf	(AlarmDisplay@cnt+1)& (0+255),f,b
 20251                           
 20252                           ; BSR set to: 2
 20253                           ;display.c: 119:     cnt = cnt%10;
 20254  007A78  0060  FA18  F104   	movff	AlarmDisplay@cnt,___awmod@dividend
 20255  007A7E  0060  FA1C  F105   	movff	AlarmDisplay@cnt+1,___awmod@dividend+1
 20256  007A84  0E00               	movlw	0
 20257  007A86  0101               	movlb	1	; () banked
 20258  007A88  6F07               	movwf	(___awmod@divisor+1)& (0+255),b
 20259  007A8A  0E0A               	movlw	10
 20260  007A8C  6F06               	movwf	___awmod@divisor& (0+255),b
 20261  007A8E  EC63  F041         	call	___awmod	;wreg free
 20262  007A92  0060  F410  F286   	movff	?___awmod,AlarmDisplay@cnt
 20263  007A98  0060  F414  F287   	movff	?___awmod+1,AlarmDisplay@cnt+1
 20264                           
 20265                           ; BSR set to: 1
 20266  007A9E  0012               	return		;funcret
 20267  007AA0                     __end_of_AlarmDisplay:
 20268                           	opt callstack 0
 20269                           
 20270 ;; *************** function _ValueDisplay *****************
 20271 ;; Defined at:
 20272 ;;		line 66 in file "display.c"
 20273 ;; Parameters:    Size  Location     Type
 20274 ;;		None
 20275 ;; Auto vars:     Size  Location     Type
 20276 ;;  ti              2  181[BANK1 ] short 
 20277 ;;  te              2  179[BANK1 ] short 
 20278 ;;  r               2  177[BANK1 ] short 
 20279 ;;  tde             2  172[BANK1 ] short 
 20280 ;;  tdi             2  170[BANK1 ] short 
 20281 ;;  spr             2  157[BANK1 ] short 
 20282 ;;  pmax            2  155[BANK1 ] short 
 20283 ;;  vol             2  153[BANK1 ] short 
 20284 ;;  pe              2  151[BANK1 ] short 
 20285 ;;  pi              2  149[BANK1 ] short 
 20286 ;;  tep             2    0        short 
 20287 ;;  tip             2    0        short 
 20288 ;;  bpm             2    0        short 
 20289 ;;  er              1  176[BANK1 ] char 
 20290 ;;  etde            1  175[BANK1 ] char 
 20291 ;;  etdi            1  174[BANK1 ] char 
 20292 ;;  dr              1  165[BANK1 ] char 
 20293 ;;  dtde            1  164[BANK1 ] char 
 20294 ;;  dtdi            1  163[BANK1 ] char 
 20295 ;;  ete             1  162[BANK1 ] char 
 20296 ;;  eti             1  161[BANK1 ] char 
 20297 ;;  dte             1    0        char 
 20298 ;;  dti             1    0        char 
 20299 ;; Return value:  Size  Location     Type
 20300 ;;                  1    wreg      void 
 20301 ;; Registers used:
 20302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20303 ;; Tracked objects:
 20304 ;;		On entry : 3E/0
 20305 ;;		On exit  : 3D/1
 20306 ;;		Unchanged: 0/0
 20307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20309 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20311 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20312 ;;Total ram usage:       42 bytes
 20313 ;; Hardware stack levels used:    1
 20314 ;; Hardware stack levels required when called:   25
 20315 ;; This function calls:
 20316 ;;		_GetAlarmState
 20317 ;;		_GetBpm
 20318 ;;		_GetDisableAlarmSV1
 20319 ;;		_GetEp
 20320 ;;		_GetIp
 20321 ;;		_GetPmax
 20322 ;;		_GetSpr
 20323 ;;		_GetTargetEp
 20324 ;;		_GetTargetIp
 20325 ;;		_GetTde
 20326 ;;		_GetTdi
 20327 ;;		_GetTe
 20328 ;;		_GetTi
 20329 ;;		_GetVolume
 20330 ;;		___awdiv
 20331 ;;		___awmod
 20332 ;;		___wmul
 20333 ;;		_sprintf
 20334 ;; This function is called by:
 20335 ;;		_AlarmDisplay
 20336 ;;		_AlarmUpdateLCD
 20337 ;; This function uses a non-reentrant model
 20338 ;;
 20339                           
 20340                           	psect	text161
 20341  002238                     __ptext161:
 20342                           	opt callstack 0
 20343  002238                     _ValueDisplay:
 20344                           	opt callstack 3
 20345                           
 20346                           ;display.c: 67:     if (!enable) {
 20347                           
 20348                           ; BSR set to: 1
 20349                           ;incstack = 0
 20350  002238  0100               	movlb	0	; () banked
 20351  00223A  51FE               	movf	_enable& (0+255),w,b
 20352  00223C  A4D8               	btfss	status,2,c
 20353  00223E  D01F               	goto	l18963
 20354                           
 20355                           ; BSR set to: 0
 20356                           ;display.c: 68:         if (msg1[0]==0) sprintf(msg1, "OxyVitaEmergency");
 20357  002240  0103               	movlb	3	; () banked
 20358  002242  51E5               	movf	_msg1& (0+255),w,b
 20359  002244  A4D8               	btfss	status,2,c
 20360  002246  D00B               	goto	l18957
 20361                           
 20362                           ; BSR set to: 3
 20363  002248  0EE5               	movlw	low _msg1
 20364  00224A  0101               	movlb	1	; () banked
 20365  00224C  6F71               	movwf	sprintf@s& (0+255),b
 20366  00224E  0E03               	movlw	high _msg1
 20367  002250  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20368  002252  0ECE               	movlw	low STR_8
 20369  002254  6F73               	movwf	sprintf@fmt& (0+255),b
 20370  002256  0EFE               	movlw	high STR_8
 20371  002258  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20372  00225A  ECF1  F045         	call	_sprintf	;wreg free
 20373  00225E                     l18957:
 20374                           
 20375                           ;display.c: 69:         if (msg2[0]==0) sprintf(msg2, "Ventilator v1.0 ");
 20376  00225E  0103               	movlb	3	; () banked
 20377  002260  51D1               	movf	_msg2& (0+255),w,b
 20378  002262  A4D8               	btfss	status,2,c
 20379  002264  0012               	return	
 20380                           
 20381                           ; BSR set to: 3
 20382  002266  0ED1               	movlw	low _msg2
 20383  002268  0101               	movlb	1	; () banked
 20384  00226A  6F71               	movwf	sprintf@s& (0+255),b
 20385  00226C  0E03               	movlw	high _msg2
 20386  00226E  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20387  002270  0EBD               	movlw	low STR_9
 20388  002272  6F73               	movwf	sprintf@fmt& (0+255),b
 20389  002274  0EFE               	movlw	high STR_9
 20390  002276  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20391  002278  ECF1  F045         	call	_sprintf	;wreg free
 20392  00227C  0012               	return	
 20393  00227E                     l18963:
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;display.c: 72:     static int cnt=0;;display.c: 74:     int16_t tdi = GetTdi();
 20397  00227E  EC6F  F051         	call	_GetTdi	;wreg free
 20398  002282  0060  F410  F1AA   	movff	?_GetTdi,ValueDisplay@tdi
 20399  002288  0060  F414  F1AB   	movff	?_GetTdi+1,ValueDisplay@tdi+1
 20400                           
 20401                           ;display.c: 75:     int16_t tde = GetTde();
 20402  00228E  ECE9  F051         	call	_GetTde	;wreg free
 20403  002292  0060  F410  F1AC   	movff	?_GetTde,ValueDisplay@tde
 20404  002298  0060  F414  F1AD   	movff	?_GetTde+1,ValueDisplay@tde+1
 20405                           
 20406                           ;display.c: 76:     int16_t ti = GetTi();
 20407  00229E  EC5F  F050         	call	_GetTi	;wreg free
 20408  0022A2  0060  F410  F1B5   	movff	?_GetTi,ValueDisplay@ti
 20409  0022A8  0060  F414  F1B6   	movff	?_GetTi+1,ValueDisplay@ti+1
 20410                           
 20411                           ;display.c: 77:     int16_t te = GetTe();
 20412  0022AE  EC69  F050         	call	_GetTe	;wreg free
 20413  0022B2  0060  F410  F1B3   	movff	?_GetTe,ValueDisplay@te
 20414  0022B8  0060  F414  F1B4   	movff	?_GetTe+1,ValueDisplay@te+1
 20415                           
 20416                           ;display.c: 78:     int8_t eti = ti/1000;
 20417  0022BE  0060  F6D4  F10A   	movff	ValueDisplay@ti,___awdiv@dividend
 20418  0022C4  0060  F6D8  F10B   	movff	ValueDisplay@ti+1,___awdiv@dividend+1
 20419  0022CA  0E03               	movlw	3
 20420  0022CC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20421  0022CE  0EE8               	movlw	232
 20422  0022D0  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20423  0022D2  EC9D  F03F         	call	___awdiv	;wreg free
 20424  0022D6  510A               	movf	?___awdiv& (0+255),w,b
 20425  0022D8  6FA1               	movwf	ValueDisplay@eti& (0+255),b
 20426                           
 20427                           ; BSR set to: 1
 20428  0022DA  51A1               	movf	ValueDisplay@eti& (0+255),w,b
 20429  0022DC  6F04               	movwf	___wmul@multiplier& (0+255),b
 20430  0022DE  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20431  0022E0  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20432  0022E2  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20433  0022E4  0EFC               	movlw	252
 20434  0022E6  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20435  0022E8  0E18               	movlw	24
 20436  0022EA  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20437  0022EC  EC60  F04C         	call	___wmul	;wreg free
 20438  0022F0  51B5               	movf	ValueDisplay@ti& (0+255),w,b
 20439  0022F2  2504               	addwf	?___wmul& (0+255),w,b
 20440  0022F4  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20441  0022F6  51B6               	movf	(ValueDisplay@ti+1)& (0+255),w,b
 20442  0022F8  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20443  0022FA  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20444  0022FC  0E00               	movlw	0
 20445  0022FE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20446  002300  0E0A               	movlw	10
 20447  002302  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20448  002304  EC9D  F03F         	call	___awdiv	;wreg free
 20449                           
 20450                           ; BSR set to: 1
 20451                           ;display.c: 80:     int8_t ete = te/1000;
 20452  002308  0060  F6CC  F10A   	movff	ValueDisplay@te,___awdiv@dividend
 20453  00230E  0060  F6D0  F10B   	movff	ValueDisplay@te+1,___awdiv@dividend+1
 20454  002314  0E03               	movlw	3
 20455  002316  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20456  002318  0EE8               	movlw	232
 20457  00231A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20458  00231C  EC9D  F03F         	call	___awdiv	;wreg free
 20459  002320  510A               	movf	?___awdiv& (0+255),w,b
 20460  002322  6FA2               	movwf	ValueDisplay@ete& (0+255),b
 20461  002324  51A2               	movf	ValueDisplay@ete& (0+255),w,b
 20462  002326  6F04               	movwf	___wmul@multiplier& (0+255),b
 20463  002328  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20464  00232A  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20465  00232C  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20466  00232E  0EFC               	movlw	252
 20467  002330  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20468  002332  0E18               	movlw	24
 20469  002334  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20470  002336  EC60  F04C         	call	___wmul	;wreg free
 20471  00233A  51B3               	movf	ValueDisplay@te& (0+255),w,b
 20472  00233C  2504               	addwf	?___wmul& (0+255),w,b
 20473  00233E  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20474  002340  51B4               	movf	(ValueDisplay@te+1)& (0+255),w,b
 20475  002342  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20476  002344  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20477  002346  0E00               	movlw	0
 20478  002348  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20479  00234A  0E0A               	movlw	10
 20480  00234C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20481  00234E  EC9D  F03F         	call	___awdiv	;wreg free
 20482                           
 20483                           ; BSR set to: 1
 20484  002352  EC7D  F051         	call	_GetBpm	;wreg free
 20485                           
 20486                           ; BSR set to: 1
 20487                           ;display.c: 83:     int16_t pi = GetIp();
 20488  002356  ECBD  F027         	call	_GetIp	;wreg free
 20489  00235A  0060  F448  F195   	movff	?_GetIp,ValueDisplay@pi
 20490  002360  0060  F44C  F196   	movff	?_GetIp+1,ValueDisplay@pi+1
 20491                           
 20492                           ; BSR set to: 1
 20493                           ;display.c: 84:     int16_t pe = GetEp();
 20494  002366  EC77  F04C         	call	_GetEp	;wreg free
 20495  00236A  0060  F448  F197   	movff	?_GetEp,ValueDisplay@pe
 20496  002370  0060  F44C  F198   	movff	?_GetEp+1,ValueDisplay@pe+1
 20497                           
 20498                           ; BSR set to: 1
 20499                           ;display.c: 85:     int8_t etdi = tdi/1000;
 20500  002376  0060  F6A8  F10A   	movff	ValueDisplay@tdi,___awdiv@dividend
 20501  00237C  0060  F6AC  F10B   	movff	ValueDisplay@tdi+1,___awdiv@dividend+1
 20502  002382  0E03               	movlw	3
 20503  002384  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20504  002386  0EE8               	movlw	232
 20505  002388  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20506  00238A  EC9D  F03F         	call	___awdiv	;wreg free
 20507  00238E  510A               	movf	?___awdiv& (0+255),w,b
 20508  002390  6FAE               	movwf	ValueDisplay@etdi& (0+255),b
 20509                           
 20510                           ; BSR set to: 1
 20511                           ;display.c: 86:     int8_t dtdi = (tdi-((int16_t) etdi)*1000)/10;
 20512  002392  51AE               	movf	ValueDisplay@etdi& (0+255),w,b
 20513  002394  6F04               	movwf	___wmul@multiplier& (0+255),b
 20514  002396  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20515  002398  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20516  00239A  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20517  00239C  0EFC               	movlw	252
 20518  00239E  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20519  0023A0  0E18               	movlw	24
 20520  0023A2  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20521  0023A4  EC60  F04C         	call	___wmul	;wreg free
 20522  0023A8  51AA               	movf	ValueDisplay@tdi& (0+255),w,b
 20523  0023AA  2504               	addwf	?___wmul& (0+255),w,b
 20524  0023AC  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20525  0023AE  51AB               	movf	(ValueDisplay@tdi+1)& (0+255),w,b
 20526  0023B0  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20527  0023B2  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20528  0023B4  0E00               	movlw	0
 20529  0023B6  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20530  0023B8  0E0A               	movlw	10
 20531  0023BA  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20532  0023BC  EC9D  F03F         	call	___awdiv	;wreg free
 20533  0023C0  510A               	movf	?___awdiv& (0+255),w,b
 20534  0023C2  6FA3               	movwf	ValueDisplay@dtdi& (0+255),b
 20535                           
 20536                           ; BSR set to: 1
 20537                           ;display.c: 87:     int8_t etde = tde/1000;
 20538  0023C4  0060  F6B0  F10A   	movff	ValueDisplay@tde,___awdiv@dividend
 20539  0023CA  0060  F6B4  F10B   	movff	ValueDisplay@tde+1,___awdiv@dividend+1
 20540  0023D0  0E03               	movlw	3
 20541  0023D2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20542  0023D4  0EE8               	movlw	232
 20543  0023D6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20544  0023D8  EC9D  F03F         	call	___awdiv	;wreg free
 20545  0023DC  510A               	movf	?___awdiv& (0+255),w,b
 20546  0023DE  6FAF               	movwf	ValueDisplay@etde& (0+255),b
 20547                           
 20548                           ; BSR set to: 1
 20549                           ;display.c: 88:     int8_t dtde = (tde-((int16_t) etde)*1000)/10;
 20550  0023E0  51AF               	movf	ValueDisplay@etde& (0+255),w,b
 20551  0023E2  6F04               	movwf	___wmul@multiplier& (0+255),b
 20552  0023E4  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20553  0023E6  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20554  0023E8  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20555  0023EA  0EFC               	movlw	252
 20556  0023EC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20557  0023EE  0E18               	movlw	24
 20558  0023F0  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20559  0023F2  EC60  F04C         	call	___wmul	;wreg free
 20560  0023F6  51AC               	movf	ValueDisplay@tde& (0+255),w,b
 20561  0023F8  2504               	addwf	?___wmul& (0+255),w,b
 20562  0023FA  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20563  0023FC  51AD               	movf	(ValueDisplay@tde+1)& (0+255),w,b
 20564  0023FE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20565  002400  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20566  002402  0E00               	movlw	0
 20567  002404  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20568  002406  0E0A               	movlw	10
 20569  002408  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20570  00240A  EC9D  F03F         	call	___awdiv	;wreg free
 20571  00240E  510A               	movf	?___awdiv& (0+255),w,b
 20572  002410  6FA4               	movwf	ValueDisplay@dtde& (0+255),b
 20573                           
 20574                           ; BSR set to: 1
 20575                           ;display.c: 89:     int16_t r;;display.c: 90:     if (ti!=0) r = (te)/(ti/10);
 20576  002412  51B5               	movf	ValueDisplay@ti& (0+255),w,b
 20577  002414  11B6               	iorwf	(ValueDisplay@ti+1)& (0+255),w,b
 20578  002416  B4D8               	btfsc	status,2,c
 20579  002418  D027               	goto	l18987
 20580                           
 20581                           ; BSR set to: 1
 20582  00241A  0E00               	movlw	0
 20583  00241C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20584  00241E  0E0A               	movlw	10
 20585  002420  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20586  002422  0060  F6D4  F10A   	movff	ValueDisplay@ti,___awdiv@dividend
 20587  002428  0060  F6D8  F10B   	movff	ValueDisplay@ti+1,___awdiv@dividend+1
 20588  00242E  EC9D  F03F         	call	___awdiv	;wreg free
 20589  002432  0060  F428  F19F   	movff	?___awdiv,_ValueDisplay$6530
 20590  002438  0060  F42C  F1A0   	movff	?___awdiv+1,_ValueDisplay$6530+1
 20591  00243E  0060  F6CC  F10A   	movff	ValueDisplay@te,___awdiv@dividend
 20592  002444  0060  F6D0  F10B   	movff	ValueDisplay@te+1,___awdiv@dividend+1
 20593  00244A  0060  F67C  F10C   	movff	_ValueDisplay$6530,___awdiv@divisor
 20594  002450  0060  F680  F10D   	movff	_ValueDisplay$6530+1,___awdiv@divisor+1
 20595  002456  EC9D  F03F         	call	___awdiv	;wreg free
 20596  00245A  0060  F428  F1B1   	movff	?___awdiv,ValueDisplay@r
 20597  002460  0060  F42C  F1B2   	movff	?___awdiv+1,ValueDisplay@r+1
 20598  002466  D004               	goto	l18989
 20599  002468                     l18987:
 20600                           
 20601                           ; BSR set to: 1
 20602  002468  0E00               	movlw	0
 20603  00246A  6FB2               	movwf	(ValueDisplay@r+1)& (0+255),b
 20604  00246C  0E00               	movlw	0
 20605  00246E  6FB1               	movwf	ValueDisplay@r& (0+255),b
 20606  002470                     l18989:
 20607                           
 20608                           ; BSR set to: 1
 20609                           ;display.c: 92:     int8_t er = r/10;
 20610  002470  0060  F6C4  F10A   	movff	ValueDisplay@r,___awdiv@dividend
 20611  002476  0060  F6C8  F10B   	movff	ValueDisplay@r+1,___awdiv@dividend+1
 20612  00247C  0E00               	movlw	0
 20613  00247E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20614  002480  0E0A               	movlw	10
 20615  002482  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20616  002484  EC9D  F03F         	call	___awdiv	;wreg free
 20617  002488  510A               	movf	?___awdiv& (0+255),w,b
 20618  00248A  6FB0               	movwf	ValueDisplay@er& (0+255),b
 20619                           
 20620                           ; BSR set to: 1
 20621                           ;display.c: 93:     int8_t dr = (r-((int16_t) er)*10);
 20622  00248C  51B0               	movf	ValueDisplay@er& (0+255),w,b
 20623  00248E  0DF6               	mullw	-10
 20624  002490  50F3               	movf	243,w,c
 20625  002492  25B1               	addwf	ValueDisplay@r& (0+255),w,b
 20626  002494  6FA5               	movwf	ValueDisplay@dr& (0+255),b
 20627                           
 20628                           ; BSR set to: 1
 20629  002496  EC63  F04D         	call	_GetTargetIp	;wreg free
 20630                           
 20631                           ; BSR set to: 1
 20632  00249A  EC76  F04D         	call	_GetTargetEp	;wreg free
 20633                           
 20634                           ; BSR set to: 1
 20635                           ;display.c: 96:     int16_t vol = GetVolume();
 20636  00249E  EC68  F051         	call	_GetVolume	;wreg free
 20637  0024A2  0060  F410  F199   	movff	?_GetVolume,ValueDisplay@vol
 20638  0024A8  0060  F414  F19A   	movff	?_GetVolume+1,ValueDisplay@vol+1
 20639                           
 20640                           ; BSR set to: 1
 20641                           ;display.c: 97:     int16_t pmax = GetPmax();
 20642  0024AE  EC89  F04D         	call	_GetPmax	;wreg free
 20643  0024B2  0060  F448  F19B   	movff	?_GetPmax,ValueDisplay@pmax
 20644  0024B8  0060  F44C  F19C   	movff	?_GetPmax+1,ValueDisplay@pmax+1
 20645                           
 20646                           ; BSR set to: 1
 20647                           ;display.c: 98:     int16_t spr = GetSpr();
 20648  0024BE  EC76  F051         	call	_GetSpr	;wreg free
 20649  0024C2  0060  F410  F19D   	movff	?_GetSpr,ValueDisplay@spr
 20650  0024C8  0060  F414  F19E   	movff	?_GetSpr+1,ValueDisplay@spr+1
 20651                           
 20652                           ; BSR set to: 1
 20653                           ;display.c: 102:     sprintf(msg1, "%2d%% %d.%02d %d.%02d%c%s", spr, etde,dtde, etdi, dt
      +                          di, GetDisableAlarmSV1() ? 'd':' ', calibrate? "Ca" : GetAlarmState() );
 20654  0024CE  0100               	movlb	0	; () banked
 20655  0024D0  51FF               	movf	_calibrate& (0+255),w,b
 20656  0024D2  A4D8               	btfss	status,2,c
 20657  0024D4  D009               	goto	l19007
 20658                           
 20659                           ; BSR set to: 0
 20660  0024D6  ECBF  F047         	call	_GetAlarmState	;wreg free
 20661  0024DA  0060  F420  F1A6   	movff	?_GetAlarmState,_ValueDisplay$4007
 20662  0024E0  0060  F424  F1A7   	movff	?_GetAlarmState+1,_ValueDisplay$4007+1
 20663  0024E6  D005               	goto	l19009
 20664  0024E8                     l19007:
 20665                           
 20666                           ; BSR set to: 0
 20667  0024E8  0EF9               	movlw	low STR_11
 20668  0024EA  0101               	movlb	1	; () banked
 20669  0024EC  6FA6               	movwf	_ValueDisplay$4007& (0+255),b
 20670  0024EE  0EFF               	movlw	high STR_11
 20671  0024F0  6FA7               	movwf	(_ValueDisplay$4007+1)& (0+255),b
 20672  0024F2                     l19009:
 20673                           
 20674                           ; BSR set to: 1
 20675  0024F2  ECE7  F052         	call	_GetDisableAlarmSV1	;wreg free
 20676  0024F6  0900               	iorlw	0
 20677  0024F8  A4D8               	btfss	status,2,c
 20678  0024FA  D005               	goto	l19013
 20679                           
 20680                           ; BSR set to: 0
 20681  0024FC  0E00               	movlw	0
 20682  0024FE  0101               	movlb	1	; () banked
 20683  002500  6FA9               	movwf	(_ValueDisplay$4008+1)& (0+255),b
 20684  002502  0E20               	movlw	32
 20685  002504  D004               	goto	L3
 20686  002506                     l19013:
 20687                           
 20688                           ; BSR set to: 0
 20689  002506  0E00               	movlw	0
 20690  002508  0101               	movlb	1	; () banked
 20691  00250A  6FA9               	movwf	(_ValueDisplay$4008+1)& (0+255),b
 20692  00250C  0E64               	movlw	100
 20693  00250E                     L3:
 20694  00250E  6FA8               	movwf	_ValueDisplay$4008& (0+255),b
 20695                           
 20696                           ; BSR set to: 1
 20697  002510  0EE5               	movlw	low _msg1
 20698  002512  6F71               	movwf	sprintf@s& (0+255),b
 20699  002514  0E03               	movlw	high _msg1
 20700  002516  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20701  002518  0E67               	movlw	low STR_10
 20702  00251A  6F73               	movwf	sprintf@fmt& (0+255),b
 20703  00251C  0EFE               	movlw	high STR_10
 20704  00251E  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20705  002520  0060  F674  F175   	movff	ValueDisplay@spr,?_sprintf+4
 20706  002526  0060  F678  F176   	movff	ValueDisplay@spr+1,?_sprintf+5
 20707  00252C  51AF               	movf	ValueDisplay@etde& (0+255),w,b
 20708  00252E  6F77               	movwf	(?_sprintf+6)& (0+255),b
 20709  002530  6B78               	clrf	(?_sprintf+7)& (0+255),b
 20710  002532  BF77               	btfsc	(?_sprintf+6)& (0+255),7,b
 20711  002534  0778               	decf	(?_sprintf+7)& (0+255),f,b
 20712  002536  51A4               	movf	ValueDisplay@dtde& (0+255),w,b
 20713  002538  6F79               	movwf	(?_sprintf+8)& (0+255),b
 20714  00253A  6B7A               	clrf	(?_sprintf+9)& (0+255),b
 20715  00253C  BF79               	btfsc	(?_sprintf+8)& (0+255),7,b
 20716  00253E  077A               	decf	(?_sprintf+9)& (0+255),f,b
 20717  002540  51AE               	movf	ValueDisplay@etdi& (0+255),w,b
 20718  002542  6F7B               	movwf	(?_sprintf+10)& (0+255),b
 20719  002544  6B7C               	clrf	(?_sprintf+11)& (0+255),b
 20720  002546  BF7B               	btfsc	(?_sprintf+10)& (0+255),7,b
 20721  002548  077C               	decf	(?_sprintf+11)& (0+255),f,b
 20722  00254A  51A3               	movf	ValueDisplay@dtdi& (0+255),w,b
 20723  00254C  6F7D               	movwf	(?_sprintf+12)& (0+255),b
 20724  00254E  6B7E               	clrf	(?_sprintf+13)& (0+255),b
 20725  002550  BF7D               	btfsc	(?_sprintf+12)& (0+255),7,b
 20726  002552  077E               	decf	(?_sprintf+13)& (0+255),f,b
 20727  002554  0060  F6A0  F17F   	movff	_ValueDisplay$4008,?_sprintf+14
 20728  00255A  0060  F6A4  F180   	movff	_ValueDisplay$4008+1,?_sprintf+15
 20729  002560  0060  F698  F181   	movff	_ValueDisplay$4007,?_sprintf+16
 20730  002566  0060  F69C  F182   	movff	_ValueDisplay$4007+1,?_sprintf+17
 20731  00256C  ECF1  F045         	call	_sprintf	;wreg free
 20732                           
 20733                           ; BSR set to: 1
 20734                           ;display.c: 104:     sprintf(msg3, "%1d%1d %2d %2d %2d %4d", er, dr, pe, pi, pmax, vol);
 20735  002570  0EBD               	movlw	low _msg3
 20736  002572  6F71               	movwf	sprintf@s& (0+255),b
 20737  002574  0E03               	movlw	high _msg3
 20738  002576  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20739  002578  0E81               	movlw	low STR_12
 20740  00257A  6F73               	movwf	sprintf@fmt& (0+255),b
 20741  00257C  0EFE               	movlw	high STR_12
 20742  00257E  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20743  002580  51B0               	movf	ValueDisplay@er& (0+255),w,b
 20744  002582  6F75               	movwf	(?_sprintf+4)& (0+255),b
 20745  002584  6B76               	clrf	(?_sprintf+5)& (0+255),b
 20746  002586  BF75               	btfsc	(?_sprintf+4)& (0+255),7,b
 20747  002588  0776               	decf	(?_sprintf+5)& (0+255),f,b
 20748  00258A  51A5               	movf	ValueDisplay@dr& (0+255),w,b
 20749  00258C  6F77               	movwf	(?_sprintf+6)& (0+255),b
 20750  00258E  6B78               	clrf	(?_sprintf+7)& (0+255),b
 20751  002590  BF77               	btfsc	(?_sprintf+6)& (0+255),7,b
 20752  002592  0778               	decf	(?_sprintf+7)& (0+255),f,b
 20753  002594  0060  F65C  F179   	movff	ValueDisplay@pe,?_sprintf+8
 20754  00259A  0060  F660  F17A   	movff	ValueDisplay@pe+1,?_sprintf+9
 20755  0025A0  0060  F654  F17B   	movff	ValueDisplay@pi,?_sprintf+10
 20756  0025A6  0060  F658  F17C   	movff	ValueDisplay@pi+1,?_sprintf+11
 20757  0025AC  0060  F66C  F17D   	movff	ValueDisplay@pmax,?_sprintf+12
 20758  0025B2  0060  F670  F17E   	movff	ValueDisplay@pmax+1,?_sprintf+13
 20759  0025B8  0060  F664  F17F   	movff	ValueDisplay@vol,?_sprintf+14
 20760  0025BE  0060  F668  F180   	movff	ValueDisplay@vol+1,?_sprintf+15
 20761  0025C4  ECF1  F045         	call	_sprintf	;wreg free
 20762                           
 20763                           ; BSR set to: 1
 20764                           ;display.c: 106:     cnt++;
 20765  0025C8  0102               	movlb	2	; () banked
 20766  0025CA  4B88               	infsnz	ValueDisplay@cnt& (0+255),f,b
 20767  0025CC  2B89               	incf	(ValueDisplay@cnt+1)& (0+255),f,b
 20768                           
 20769                           ; BSR set to: 2
 20770                           ;display.c: 107:     cnt=cnt%10;
 20771  0025CE  0060  FA20  F104   	movff	ValueDisplay@cnt,___awmod@dividend
 20772  0025D4  0060  FA24  F105   	movff	ValueDisplay@cnt+1,___awmod@dividend+1
 20773  0025DA  0E00               	movlw	0
 20774  0025DC  0101               	movlb	1	; () banked
 20775  0025DE  6F07               	movwf	(___awmod@divisor+1)& (0+255),b
 20776  0025E0  0E0A               	movlw	10
 20777  0025E2  6F06               	movwf	___awmod@divisor& (0+255),b
 20778  0025E4  EC63  F041         	call	___awmod	;wreg free
 20779  0025E8  0060  F410  F288   	movff	?___awmod,ValueDisplay@cnt
 20780  0025EE  0060  F414  F289   	movff	?___awmod+1,ValueDisplay@cnt+1
 20781  0025F4  0012               	return		;funcret
 20782  0025F6                     __end_of_ValueDisplay:
 20783                           	opt callstack 0
 20784                           
 20785 ;; *************** function _sprintf *****************
 20786 ;; Defined at:
 20787 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;  s               2  113[BANK1 ] PTR unsigned char 
 20790 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 20791 ;;  fmt             2  115[BANK1 ] PTR const unsigned char 
 20792 ;;		 -> STR_13(8), STR_12(23), STR_10(26), STR_9(17), 
 20793 ;;		 -> STR_8(17), STR_7(15), 
 20794 ;; Auto vars:     Size  Location     Type
 20795 ;;  f               6  135[BANK1 ] struct _IO_FILE
 20796 ;;  ap              2  133[BANK1 ] PTR void [1]
 20797 ;;		 -> ?_printf(2), ?_sprintf(2), 
 20798 ;;  ret             2    0        int 
 20799 ;; Return value:  Size  Location     Type
 20800 ;;                  2  113[BANK1 ] int 
 20801 ;; Registers used:
 20802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20803 ;; Tracked objects:
 20804 ;;		On entry : 3F/1
 20805 ;;		On exit  : 3F/1
 20806 ;;		Unchanged: 0/0
 20807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20808 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20809 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20811 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20812 ;;Total ram usage:       28 bytes
 20813 ;; Hardware stack levels used:    1
 20814 ;; Hardware stack levels required when called:   24
 20815 ;; This function calls:
 20816 ;;		_vfprintf
 20817 ;; This function is called by:
 20818 ;;		_ValueDisplay
 20819 ;;		_AlarmDisplay
 20820 ;; This function uses a non-reentrant model
 20821 ;;
 20822                           
 20823                           	psect	text162
 20824  008BE2                     __ptext162:
 20825                           	opt callstack 0
 20826  008BE2                     _sprintf:
 20827                           	opt callstack 3
 20828                           
 20829                           ; BSR set to: 1
 20830                           
 20831                           ;incstack = 0
 20832  008BE2  0E75               	movlw	low (?_sprintf+4)
 20833  008BE4  6F85               	movwf	sprintf@ap& (0+255),b
 20834  008BE6  0E01               	movlw	high (?_sprintf+4)
 20835  008BE8  6F86               	movwf	(sprintf@ap+1)& (0+255),b
 20836  008BEA  0060  F5C4  F187   	movff	sprintf@s,sprintf@f
 20837  008BF0  0060  F5C8  F188   	movff	sprintf@s+1,sprintf@f+1
 20838                           
 20839                           ; BSR set to: 1
 20840  008BF6  0E00               	movlw	0
 20841  008BF8  6F8A               	movwf	(sprintf@f+3)& (0+255),b
 20842  008BFA  0E00               	movlw	0
 20843  008BFC  6F89               	movwf	(sprintf@f+2)& (0+255),b
 20844                           
 20845                           ; BSR set to: 1
 20846  008BFE  0E00               	movlw	0
 20847  008C00  6F8C               	movwf	(sprintf@f+5)& (0+255),b
 20848  008C02  0E00               	movlw	0
 20849  008C04  6F8B               	movwf	(sprintf@f+4)& (0+255),b
 20850                           
 20851                           ; BSR set to: 1
 20852  008C06  0E87               	movlw	low sprintf@f
 20853  008C08  6F69               	movwf	vfprintf@fp& (0+255),b
 20854  008C0A  0E01               	movlw	high sprintf@f
 20855  008C0C  6F6A               	movwf	(vfprintf@fp+1)& (0+255),b
 20856  008C0E  0060  F5CC  F16B   	movff	sprintf@fmt,vfprintf@fmt
 20857  008C14  0060  F5D0  F16C   	movff	sprintf@fmt+1,vfprintf@fmt+1
 20858  008C1A  0E85               	movlw	low sprintf@ap
 20859  008C1C  6F6D               	movwf	vfprintf@ap& (0+255),b
 20860  008C1E  0E01               	movlw	high sprintf@ap
 20861  008C20  6F6E               	movwf	(vfprintf@ap+1)& (0+255),b
 20862  008C22  EC10  F042         	call	_vfprintf	;wreg free
 20863                           
 20864                           ; BSR set to: 2
 20865  008C26  0101               	movlb	1	; () banked
 20866  008C28  5189               	movf	(sprintf@f+2)& (0+255),w,b
 20867  008C2A  2571               	addwf	sprintf@s& (0+255),w,b
 20868  008C2C  6ED9               	movwf	fsr2l,c
 20869  008C2E  518A               	movf	(sprintf@f+3)& (0+255),w,b
 20870  008C30  2172               	addwfc	(sprintf@s+1)& (0+255),w,b
 20871  008C32  6EDA               	movwf	fsr2h,c
 20872  008C34  0E00               	movlw	0
 20873  008C36  6EDF               	movwf	indf2,c
 20874                           
 20875                           ; BSR set to: 1
 20876  008C38  0012               	return		;funcret
 20877  008C3A                     __end_of_sprintf:
 20878                           	opt callstack 0
 20879                           
 20880 ;; *************** function _vfprintf *****************
 20881 ;; Defined at:
 20882 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20883 ;; Parameters:    Size  Location     Type
 20884 ;;  fp              2  105[BANK1 ] PTR struct _IO_FILE
 20885 ;;		 -> sprintf@f(6), NULL(0), 
 20886 ;;  fmt             2  107[BANK1 ] PTR const unsigned char 
 20887 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 20888 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 20889 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 20890 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 20891 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 20892 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 20893 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 20894 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 20895 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 20896 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 20897 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 20898 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 20899 ;;  ap              2  109[BANK1 ] PTR PTR void 
 20900 ;;		 -> printf@ap(2), sprintf@ap(2), 
 20901 ;; Auto vars:     Size  Location     Type
 20902 ;;  cfmt            2  111[BANK1 ] PTR unsigned char 
 20903 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 20904 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 20905 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 20906 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 20907 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 20908 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 20909 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 20910 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 20911 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 20912 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 20913 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 20914 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 20915 ;; Return value:  Size  Location     Type
 20916 ;;                  2  105[BANK1 ] int 
 20917 ;; Registers used:
 20918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20919 ;; Tracked objects:
 20920 ;;		On entry : 3F/1
 20921 ;;		On exit  : 3F/2
 20922 ;;		Unchanged: 0/0
 20923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20924 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20925 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20927 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20928 ;;Total ram usage:        8 bytes
 20929 ;; Hardware stack levels used:    1
 20930 ;; Hardware stack levels required when called:   23
 20931 ;; This function calls:
 20932 ;;		_vfpfcnvrt
 20933 ;; This function is called by:
 20934 ;;		_sprintf
 20935 ;;		_printf
 20936 ;; This function uses a non-reentrant model
 20937 ;;
 20938                           
 20939                           	psect	text163
 20940  008420                     __ptext163:
 20941                           	opt callstack 0
 20942  008420                     _vfprintf:
 20943                           	opt callstack 6
 20944                           
 20945                           ; BSR set to: 1
 20946                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 20947                           
 20948                           ; BSR set to: 1
 20949                           ;incstack = 0
 20950  008420  0060  F5AC  F16F   	movff	vfprintf@fmt,vfprintf@cfmt
 20951  008426  0060  F5B0  F170   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 20952                           
 20953                           ; BSR set to: 1
 20954                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 20955  00842C  0E00               	movlw	0
 20956  00842E  0102               	movlb	2	; () banked
 20957  008430  6F2B               	movwf	(_nout+1)& (0+255),b
 20958  008432  0E00               	movlw	0
 20959  008434  6F2A               	movwf	_nout& (0+255),b
 20960                           
 20961                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 20962  008436  D01A               	goto	l18357
 20963  008438                     l18355:
 20964                           
 20965                           ; BSR set to: 2
 20966                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 20967  008438  0060  F5A4  F148   	movff	vfprintf@fp,vfpfcnvrt@fp
 20968  00843E  0060  F5A8  F149   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 20969  008444  0E6F               	movlw	low vfprintf@cfmt
 20970  008446  0101               	movlb	1	; () banked
 20971  008448  6F4A               	movwf	vfpfcnvrt@fmt& (0+255),b
 20972  00844A  0E01               	movlw	high vfprintf@cfmt
 20973  00844C  6F4B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 20974  00844E  0060  F5B4  F14C   	movff	vfprintf@ap,vfpfcnvrt@ap
 20975  008454  0060  F5B8  F14D   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 20976  00845A  EC4D  F00C         	call	_vfpfcnvrt	;wreg free
 20977  00845E  5148               	movf	?_vfpfcnvrt& (0+255),w,b
 20978  008460  0102               	movlb	2	; () banked
 20979  008462  272A               	addwf	_nout& (0+255),f,b
 20980  008464  0101               	movlb	1	; () banked
 20981  008466  5149               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 20982  008468  0102               	movlb	2	; () banked
 20983  00846A  232B               	addwfc	(_nout+1)& (0+255),f,b
 20984  00846C                     l18357:
 20985                           
 20986                           ; BSR set to: 2
 20987                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 20988  00846C  0060  F5BF  FFF6   	movff	vfprintf@cfmt,tblptrl
 20989  008472  0060  F5C3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 20990  008478                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20991  008478  6AF8               	clrf	tblptru,c
 20992  00847A                     	endif
 20993  00847A                     	if	0	;tblptru may be non-zero
 20994  00847A                     	endif
 20995  00847A  0008               	tblrd		*
 20996  00847C  50F5               	movf	tablat,w,c
 20997  00847E  0900               	iorlw	0
 20998  008480  A4D8               	btfss	status,2,c
 20999  008482  D7DA               	goto	l18355
 21000                           
 21001                           ; BSR set to: 2
 21002                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 21003  008484  0060  F8A8  F169   	movff	_nout,?_vfprintf
 21004  00848A  0060  F8AC  F16A   	movff	_nout+1,?_vfprintf+1
 21005                           
 21006                           ; BSR set to: 2
 21007  008490  0012               	return		;funcret
 21008  008492                     __end_of_vfprintf:
 21009                           	opt callstack 0
 21010                           
 21011 ;; *************** function _vfpfcnvrt *****************
 21012 ;; Defined at:
 21013 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21014 ;; Parameters:    Size  Location     Type
 21015 ;;  fp              2   72[BANK1 ] PTR struct _IO_FILE
 21016 ;;		 -> sprintf@f(6), NULL(0), 
 21017 ;;  fmt             2   74[BANK1 ] PTR PTR unsigned char 
 21018 ;;		 -> vfprintf@cfmt(2), 
 21019 ;;  ap              2   76[BANK1 ] PTR PTR void 
 21020 ;;		 -> printf@ap(2), sprintf@ap(2), 
 21021 ;; Auto vars:     Size  Location     Type
 21022 ;;  llu             8   90[BANK1 ] unsigned long long 
 21023 ;;  ll              8   82[BANK1 ] long long 
 21024 ;;  f               4    0        long long 
 21025 ;;  vp              3    0        PTR void 
 21026 ;;  ct              3    0        unsigned char [3]
 21027 ;;  done            2  100[BANK1 ] int 
 21028 ;;  cp              2   98[BANK1 ] PTR unsigned char 
 21029 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 21030 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 21031 ;;		 -> alarmData(399), STR_11(3), 
 21032 ;;  i               2    0        int 
 21033 ;;  c               1  104[BANK1 ] unsigned char 
 21034 ;; Return value:  Size  Location     Type
 21035 ;;                  2   72[BANK1 ] int 
 21036 ;; Registers used:
 21037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21038 ;; Tracked objects:
 21039 ;;		On entry : 3F/1
 21040 ;;		On exit  : 3F/1
 21041 ;;		Unchanged: 0/0
 21042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21043 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21044 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21045 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21046 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21047 ;;Total ram usage:       33 bytes
 21048 ;; Hardware stack levels used:    1
 21049 ;; Hardware stack levels required when called:   22
 21050 ;; This function calls:
 21051 ;;		_atoi
 21052 ;;		_ctoa
 21053 ;;		_dtoa
 21054 ;;		_fputc
 21055 ;;		_isdigit
 21056 ;;		_stoa
 21057 ;;		_xtoa
 21058 ;; This function is called by:
 21059 ;;		_vfprintf
 21060 ;; This function uses a non-reentrant model
 21061 ;;
 21062                           
 21063                           	psect	text164
 21064  00189A                     __ptext164:
 21065                           	opt callstack 0
 21066  00189A                     _vfpfcnvrt:
 21067                           	opt callstack 6
 21068                           
 21069                           ; BSR set to: 1
 21070                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 21071                           
 21072                           ; BSR set to: 2
 21073                           ;incstack = 0
 21074  00189A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21075  0018A0  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21076  0018A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 21077  0018AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 21078  0018B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21079  0018B2  6AF8               	clrf	tblptru,c
 21080  0018B4                     	endif
 21081  0018B4                     	if	0	;tblptru may be non-zero
 21082  0018B4                     	endif
 21083  0018B4  0008               	tblrd		*
 21084  0018B6  50F5               	movf	tablat,w,c
 21085  0018B8  0A25               	xorlw	37
 21086  0018BA  A4D8               	btfss	status,2,c
 21087  0018BC  D2B4               	goto	l18055
 21088                           
 21089                           ; BSR set to: 1
 21090                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 21091  0018BE  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21092  0018C4  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21093  0018CA  2ADE               	incf	postinc2,f,c
 21094  0018CC  0E00               	movlw	0
 21095  0018CE  22DD               	addwfc	postdec2,f,c
 21096                           
 21097                           ; BSR set to: 1
 21098                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 21099  0018D0  0E00               	movlw	0
 21100  0018D2  6FC8               	movwf	(_width+1)& (0+255),b
 21101  0018D4  0E00               	movlw	0
 21102  0018D6  6FC7               	movwf	_width& (0+255),b
 21103  0018D8  C1C7  F1CB         	movff	_width,_flags
 21104  0018DC  C1C8  F1CC         	movff	_width+1,_flags+1
 21105                           
 21106                           ; BSR set to: 1
 21107                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 21108  0018E0  69C9               	setf	_prec& (0+255),b
 21109  0018E2  69CA               	setf	(_prec+1)& (0+255),b
 21110                           
 21111                           ; BSR set to: 1
 21112                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 21113  0018E4  0E00               	movlw	0
 21114  0018E6  6F65               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 21115  0018E8  0E00               	movlw	0
 21116  0018EA  D016               	goto	L4
 21117  0018EC                     l17951:
 21118                           
 21119                           ; BSR set to: 1
 21120                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 21121  0018EC  81CB               	bsf	_flags& (0+255),0,b
 21122  0018EE  D007               	goto	l17969
 21123  0018F0                     l17955:
 21124                           
 21125                           ; BSR set to: 1
 21126                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 21127  0018F0  83CB               	bsf	_flags& (0+255),1,b
 21128  0018F2  D005               	goto	l17969
 21129  0018F4                     l17959:
 21130                           
 21131                           ; BSR set to: 1
 21132                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 21133  0018F4  85CB               	bsf	_flags& (0+255),2,b
 21134  0018F6  D003               	goto	l17969
 21135  0018F8                     l17963:
 21136                           
 21137                           ; BSR set to: 1
 21138                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 21139  0018F8  87CB               	bsf	_flags& (0+255),3,b
 21140  0018FA  D001               	goto	l17969
 21141  0018FC                     l17967:
 21142                           
 21143                           ; BSR set to: 1
 21144                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 21145  0018FC  89CB               	bsf	_flags& (0+255),4,b
 21146  0018FE                     l17969:
 21147                           
 21148                           ; BSR set to: 1
 21149                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 709:                
      +                               ++*fmt;
 21150  0018FE  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21151  001904  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21152  00190A  2ADE               	incf	postinc2,f,c
 21153  00190C  0E00               	movlw	0
 21154  00190E  22DD               	addwfc	postdec2,f,c
 21155                           
 21156                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 710:                
      +                               break;
 21157  001910  D02B               	goto	l17977
 21158  001912                     l17971:
 21159                           
 21160                           ; BSR set to: 1
 21161                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 21162  001912  0E00               	movlw	0
 21163  001914  6F65               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 21164  001916  0E01               	movlw	1
 21165  001918                     L4:
 21166  001918  6F64               	movwf	vfpfcnvrt@done& (0+255),b
 21167                           
 21168                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 21169  00191A  D026               	goto	l17977
 21170  00191C                     l17975:
 21171                           
 21172                           ; BSR set to: 1
 21173  00191C  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21174  001922  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21175  001928  006F FF7B FFF6     	movff	postinc2,tblptrl
 21176  00192E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21177  001934                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21178  001934  6AF8               	clrf	tblptru,c
 21179  001936                     	endif
 21180  001936                     	if	0	;tblptru may be non-zero
 21181  001936                     	endif
 21182  001936  0008               	tblrd		*
 21183  001938  50F5               	movf	tablat,w,c
 21184  00193A  6F4E               	movwf	??_vfpfcnvrt& (0+255),b
 21185  00193C  6B4F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 21186                           
 21187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21188                           ; Switch size 1, requested type "simple"
 21189                           ; Number of cases is 1, Range of values is 0 to 0
 21190                           ; switch strategies available:
 21191                           ; Name         Instructions Cycles
 21192                           ; simple_byte            4     3 (average)
 21193                           ;	Chosen strategy is simple_byte
 21194  00193E  514F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 21195  001940  0A00               	xorlw	0	; case 0
 21196  001942  A4D8               	btfss	status,2,c
 21197  001944  D7E6               	goto	l17971
 21198                           
 21199                           ; BSR set to: 1
 21200                           ; Switch size 1, requested type "simple"
 21201                           ; Number of cases is 5, Range of values is 32 to 48
 21202                           ; switch strategies available:
 21203                           ; Name         Instructions Cycles
 21204                           ; simple_byte           16     9 (average)
 21205                           ;	Chosen strategy is simple_byte
 21206  001946  514E               	movf	??_vfpfcnvrt& (0+255),w,b
 21207  001948  0A20               	xorlw	32	; case 32
 21208  00194A  B4D8               	btfsc	status,2,c
 21209  00194C  D7D5               	goto	l17963
 21210  00194E  0A03               	xorlw	3	; case 35
 21211  001950  B4D8               	btfsc	status,2,c
 21212  001952  D7D4               	goto	l17967
 21213  001954  0A08               	xorlw	8	; case 43
 21214  001956  B4D8               	btfsc	status,2,c
 21215  001958  D7CD               	goto	l17959
 21216  00195A  0A06               	xorlw	6	; case 45
 21217  00195C  B4D8               	btfsc	status,2,c
 21218  00195E  D7C6               	goto	l17951
 21219  001960  0A1D               	xorlw	29	; case 48
 21220  001962  B4D8               	btfsc	status,2,c
 21221  001964  D7C5               	goto	l17955
 21222  001966  D7D5               	goto	l17971
 21223  001968                     l17977:
 21224                           
 21225                           ; BSR set to: 1
 21226                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 21227  001968  5164               	movf	vfpfcnvrt@done& (0+255),w,b
 21228  00196A  1165               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 21229  00196C  B4D8               	btfsc	status,2,c
 21230  00196E  D7D6               	goto	l17975
 21231                           
 21232                           ; BSR set to: 1
 21233                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 21234  001970  B1CB               	btfsc	_flags& (0+255),0,b
 21235                           
 21236                           ; BSR set to: 1
 21237                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 21238  001972  93CB               	bcf	_flags& (0+255),1,b
 21239                           
 21240                           ; BSR set to: 1
 21241                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 21242  001974  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21243  00197A  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21244  001980  006F FF7B FFF6     	movff	postinc2,tblptrl
 21245  001986  006F FF77 FFF7     	movff	postdec2,tblptrh
 21246  00198C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21247  00198C  6AF8               	clrf	tblptru,c
 21248  00198E                     	endif
 21249  00198E                     	if	0	;tblptru may be non-zero
 21250  00198E                     	endif
 21251  00198E  0008               	tblrd		*
 21252  001990  50F5               	movf	tablat,w,c
 21253  001992  0A2A               	xorlw	42
 21254  001994  A4D8               	btfss	status,2,c
 21255  001996  D02D               	goto	l17989
 21256                           
 21257                           ; BSR set to: 1
 21258                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 21259  001998  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21260  00199E  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21261  0019A4  2ADE               	incf	postinc2,f,c
 21262  0019A6  0E00               	movlw	0
 21263  0019A8  22DD               	addwfc	postdec2,f,c
 21264                           
 21265                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 21266  0019AA  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21267  0019B0  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21268  0019B6  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21269  0019BC  0E02               	movlw	2
 21270  0019BE  26DE               	addwf	postinc2,f,c
 21271  0019C0  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21272  0019C6  0E00               	movlw	0
 21273  0019C8  22DD               	addwfc	postdec2,f,c
 21274  0019CA  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21275  0019D0  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21276  0019D6  006F FF78  F1C7    	movff	postinc2,_width
 21277  0019DC  006F FF74  F1C8    	movff	postdec2,_width+1
 21278                           
 21279                           ; BSR set to: 1
 21280                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 21281  0019E2  AFC8               	btfss	(_width+1)& (0+255),7,b
 21282  0019E4  D04C               	goto	u17480
 21283                           
 21284                           ; BSR set to: 1
 21285                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 21286  0019E6  81CB               	bsf	_flags& (0+255),0,b
 21287                           
 21288                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 21289  0019E8  6DC7               	negf	_width& (0+255),b
 21290  0019EA  1FC8               	comf	(_width+1)& (0+255),f,b
 21291  0019EC  B0D8               	btfsc	status,0,c
 21292  0019EE  2BC8               	incf	(_width+1)& (0+255),f,b
 21293  0019F0  D046               	goto	u17480
 21294  0019F2                     l17989:
 21295                           
 21296                           ; BSR set to: 1
 21297                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 21298  0019F2  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21299  0019F8  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21300  0019FE  006F FF78  F10B    	movff	postinc2,atoi@s
 21301  001A04  006F FF74  F10C    	movff	postdec2,atoi@s+1
 21302  001A0A  ECB1  F02A         	call	_atoi	;wreg free
 21303  001A0E  0060  F42C  F1C7   	movff	?_atoi,_width
 21304  001A14  0060  F430  F1C8   	movff	?_atoi+1,_width+1
 21305                           
 21306                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 21307  001A1A  D009               	goto	l17993
 21308  001A1C                     l17991:
 21309                           
 21310                           ; BSR set to: 1
 21311                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 21312  001A1C  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21313  001A22  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21314  001A28  2ADE               	incf	postinc2,f,c
 21315  001A2A  0E00               	movlw	0
 21316  001A2C  22DD               	addwfc	postdec2,f,c
 21317  001A2E                     l17993:
 21318                           
 21319                           ; BSR set to: 1
 21320  001A2E  0ED0               	movlw	208
 21321  001A30  6F4E               	movwf	??_vfpfcnvrt& (0+255),b
 21322  001A32  0EFF               	movlw	255
 21323  001A34  6F4F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 21324  001A36  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21325  001A3C  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21326  001A42  006F FF7B FFF6     	movff	postinc2,tblptrl
 21327  001A48  006F FF77 FFF7     	movff	postdec2,tblptrh
 21328  001A4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21329  001A4E  6AF8               	clrf	tblptru,c
 21330  001A50                     	endif
 21331  001A50                     	if	0	;tblptru may be non-zero
 21332  001A50                     	endif
 21333  001A50  0008               	tblrd		*
 21334  001A52  50F5               	movf	tablat,w,c
 21335  001A54  6F50               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 21336  001A56  6B51               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 21337  001A58  514E               	movf	??_vfpfcnvrt& (0+255),w,b
 21338  001A5A  2750               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 21339  001A5C  514F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 21340  001A5E  2351               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 21341  001A60  5151               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 21342  001A62  E106               	bnz	u17460
 21343  001A64  0E0A               	movlw	10
 21344  001A66  5D50               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 21345  001A68  B0D8               	btfsc	status,0,c
 21346  001A6A  D002               	goto	u17460
 21347  001A6C  0E01               	movlw	1
 21348  001A6E  D001               	goto	u17470
 21349  001A70                     u17460:
 21350  001A70  0E00               	movlw	0
 21351  001A72                     u17470:
 21352  001A72  6F66               	movwf	_vfpfcnvrt$5214& (0+255),b
 21353  001A74  6B67               	clrf	(_vfpfcnvrt$5214+1)& (0+255),b
 21354                           
 21355                           ; BSR set to: 1
 21356  001A76  5166               	movf	_vfpfcnvrt$5214& (0+255),w,b
 21357  001A78  1167               	iorwf	(_vfpfcnvrt$5214+1)& (0+255),w,b
 21358  001A7A  A4D8               	btfss	status,2,c
 21359  001A7C  D7CF               	goto	l17991
 21360  001A7E                     u17480:
 21361                           
 21362                           ; BSR set to: 1
 21363                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 21364  001A7E  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21365  001A84  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21366  001A8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21367  001A90  006F FF77 FFF7     	movff	postdec2,tblptrh
 21368  001A96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21369  001A96  6AF8               	clrf	tblptru,c
 21370  001A98                     	endif
 21371  001A98                     	if	0	;tblptru may be non-zero
 21372  001A98                     	endif
 21373  001A98  0008               	tblrd		*
 21374  001A9A  50F5               	movf	tablat,w,c
 21375  001A9C  0A63               	xorlw	99
 21376  001A9E  A4D8               	btfss	status,2,c
 21377  001AA0  D033               	goto	l18007
 21378                           
 21379                           ; BSR set to: 1
 21380                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 21381  001AA2  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21382  001AA8  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21383  001AAE  2ADE               	incf	postinc2,f,c
 21384  001AB0  0E00               	movlw	0
 21385  001AB2  22DD               	addwfc	postdec2,f,c
 21386                           
 21387                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21388  001AB4  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21389  001ABA  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21390  001AC0  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21391  001AC6  0E02               	movlw	2
 21392  001AC8  26DE               	addwf	postinc2,f,c
 21393  001ACA  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21394  001AD0  0E00               	movlw	0
 21395  001AD2  22DD               	addwfc	postdec2,f,c
 21396  001AD4  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21397  001ADA  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21398  001AE0  50DF               	movf	indf2,w,c
 21399  001AE2  6F68               	movwf	vfpfcnvrt@c& (0+255),b
 21400                           
 21401                           ; BSR set to: 1
 21402                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 21403  001AE4  0060  F520  F121   	movff	vfpfcnvrt@fp,ctoa@fp
 21404  001AEA  0060  F524  F122   	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 21405  001AF0  0060  F5A0  F123   	movff	vfpfcnvrt@c,ctoa@c
 21406  001AF6  EC31  F045         	call	_ctoa	;wreg free
 21407  001AFA  0060  F484  F148   	movff	?_ctoa,?_vfpfcnvrt
 21408  001B00  0060  F488  F149   	movff	?_ctoa+1,?_vfpfcnvrt+1
 21409  001B06  0012               	return	
 21410  001B08                     l18007:
 21411                           
 21412                           ; BSR set to: 1
 21413                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 21414  001B08  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21415  001B0E  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21416  001B14  006F FF7B FFF6     	movff	postinc2,tblptrl
 21417  001B1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 21418  001B20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21419  001B20  6AF8               	clrf	tblptru,c
 21420  001B22                     	endif
 21421  001B22                     	if	0	;tblptru may be non-zero
 21422  001B22                     	endif
 21423  001B22  0008               	tblrd		*
 21424  001B24  50F5               	movf	tablat,w,c
 21425  001B26  0A64               	xorlw	100
 21426  001B28  B4D8               	btfsc	status,2,c
 21427  001B2A  D012               	goto	u17510
 21428                           
 21429                           ; BSR set to: 1
 21430  001B2C  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21431  001B32  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21432  001B38  006F FF7B FFF6     	movff	postinc2,tblptrl
 21433  001B3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21434  001B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21435  001B44  6AF8               	clrf	tblptru,c
 21436  001B46                     	endif
 21437  001B46                     	if	0	;tblptru may be non-zero
 21438  001B46                     	endif
 21439  001B46  0008               	tblrd		*
 21440  001B48  50F5               	movf	tablat,w,c
 21441  001B4A  0A69               	xorlw	105
 21442  001B4C  A4D8               	btfss	status,2,c
 21443  001B4E  D055               	goto	l18017
 21444  001B50                     u17510:
 21445                           
 21446                           ; BSR set to: 1
 21447                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 21448  001B50  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21449  001B56  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21450  001B5C  2ADE               	incf	postinc2,f,c
 21451  001B5E  0E00               	movlw	0
 21452  001B60  22DD               	addwfc	postdec2,f,c
 21453                           
 21454                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21455  001B62  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21456  001B68  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21457  001B6E  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21458  001B74  0E02               	movlw	2
 21459  001B76  26DE               	addwf	postinc2,f,c
 21460  001B78  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21461  001B7E  0E00               	movlw	0
 21462  001B80  22DD               	addwfc	postdec2,f,c
 21463  001B82  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21464  001B88  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21465  001B8E  006F FF78  F152    	movff	postinc2,vfpfcnvrt@ll
 21466  001B94  006F FF74  F153    	movff	postdec2,vfpfcnvrt@ll+1
 21467  001B9A  0E00               	movlw	0
 21468  001B9C  BF53               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 21469  001B9E  0EFF               	movlw	-1
 21470  001BA0  6F54               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 21471  001BA2  6F55               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 21472  001BA4  6F56               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 21473  001BA6  6F57               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 21474  001BA8  6F58               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 21475  001BAA  6F59               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 21476                           
 21477                           ; BSR set to: 1
 21478                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 21479  001BAC  0060  F520  F121   	movff	vfpfcnvrt@fp,dtoa@fp
 21480  001BB2  0060  F524  F122   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 21481  001BB8  0060  F548  F123   	movff	vfpfcnvrt@ll,dtoa@d
 21482  001BBE  0060  F54C  F124   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 21483  001BC4  0060  F550  F125   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 21484  001BCA  0060  F554  F126   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 21485  001BD0  0060  F558  F127   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 21486  001BD6  0060  F55C  F128   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 21487  001BDC  0060  F560  F129   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 21488  001BE2  0060  F564  F12A   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 21489  001BE8  EC6D  F01B         	call	_dtoa	;wreg free
 21490  001BEC  0060  F484  F148   	movff	?_dtoa,?_vfpfcnvrt
 21491  001BF2  0060  F488  F149   	movff	?_dtoa+1,?_vfpfcnvrt+1
 21492  001BF8  0012               	return	
 21493  001BFA                     l18017:
 21494                           
 21495                           ; BSR set to: 1
 21496                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*f
      +                          mt[0] == 's') {
 21497  001BFA  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21498  001C00  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21499  001C06  006F FF7B FFF6     	movff	postinc2,tblptrl
 21500  001C0C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21501  001C12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21502  001C12  6AF8               	clrf	tblptru,c
 21503  001C14                     	endif
 21504  001C14                     	if	0	;tblptru may be non-zero
 21505  001C14                     	endif
 21506  001C14  0008               	tblrd		*
 21507  001C16  50F5               	movf	tablat,w,c
 21508  001C18  0A73               	xorlw	115
 21509  001C1A  A4D8               	btfss	status,2,c
 21510  001C1C  D03A               	goto	l18025
 21511                           
 21512                           ; BSR set to: 1
 21513                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++
      +                          *fmt;
 21514  001C1E  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21515  001C24  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21516  001C2A  2ADE               	incf	postinc2,f,c
 21517  001C2C  0E00               	movlw	0
 21518  001C2E  22DD               	addwfc	postdec2,f,c
 21519                           
 21520                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21521  001C30  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21522  001C36  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21523  001C3C  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21524  001C42  0E02               	movlw	2
 21525  001C44  26DE               	addwf	postinc2,f,c
 21526  001C46  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21527  001C4C  0E00               	movlw	0
 21528  001C4E  22DD               	addwfc	postdec2,f,c
 21529  001C50  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21530  001C56  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21531  001C5C  006F FF78  F162    	movff	postinc2,vfpfcnvrt@cp
 21532  001C62  006F FF74  F163    	movff	postdec2,vfpfcnvrt@cp+1
 21533                           
 21534                           ; BSR set to: 1
 21535                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             re
      +                          turn stoa(fp, cp);
 21536  001C68  0060  F520  F10F   	movff	vfpfcnvrt@fp,stoa@fp
 21537  001C6E  0060  F524  F110   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 21538  001C74  0060  F588  F111   	movff	vfpfcnvrt@cp,stoa@s
 21539  001C7A  0060  F58C  F112   	movff	vfpfcnvrt@cp+1,stoa@s+1
 21540  001C80  EC39  F029         	call	_stoa	;wreg free
 21541  001C84  0060  F43C  F148   	movff	?_stoa,?_vfpfcnvrt
 21542  001C8A  0060  F440  F149   	movff	?_stoa+1,?_vfpfcnvrt+1
 21543  001C90  0012               	return	
 21544  001C92                     l18025:
 21545                           
 21546                           ; BSR set to: 1
 21547                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21548  001C92  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21549  001C98  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21550  001C9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21551  001CA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 21552  001CAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21553  001CAA  6AF8               	clrf	tblptru,c
 21554  001CAC                     	endif
 21555  001CAC                     	if	0	;tblptru may be non-zero
 21556  001CAC                     	endif
 21557  001CAC  0008               	tblrd		*
 21558  001CAE  50F5               	movf	tablat,w,c
 21559  001CB0  0A78               	xorlw	120
 21560  001CB2  B4D8               	btfsc	status,2,c
 21561  001CB4  D012               	goto	u17540
 21562                           
 21563                           ; BSR set to: 1
 21564  001CB6  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21565  001CBC  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21566  001CC2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21567  001CC8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21568  001CCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21569  001CCE  6AF8               	clrf	tblptru,c
 21570  001CD0                     	endif
 21571  001CD0                     	if	0	;tblptru may be non-zero
 21572  001CD0                     	endif
 21573  001CD0  0008               	tblrd		*
 21574  001CD2  50F5               	movf	tablat,w,c
 21575  001CD4  0A58               	xorlw	88
 21576  001CD6  A4D8               	btfss	status,2,c
 21577  001CD8  D06C               	goto	l18039
 21578  001CDA                     u17540:
 21579                           
 21580                           ; BSR set to: 1
 21581                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 21582  001CDA  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21583  001CE0  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21584  001CE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 21585  001CEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 21586  001CF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21587  001CF2  6AF8               	clrf	tblptru,c
 21588  001CF4                     	endif
 21589  001CF4                     	if	0	;tblptru may be non-zero
 21590  001CF4                     	endif
 21591  001CF4  0008               	tblrd		*
 21592  001CF6  006F FFD4  F168    	movff	tablat,vfpfcnvrt@c
 21593                           
 21594                           ; BSR set to: 1
 21595                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 21596  001CFC  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21597  001D02  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21598  001D08  2ADE               	incf	postinc2,f,c
 21599  001D0A  0E00               	movlw	0
 21600  001D0C  22DD               	addwfc	postdec2,f,c
 21601                           
 21602                           ; BSR set to: 1
 21603                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 21604  001D0E  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21605  001D14  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21606  001D1A  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21607  001D20  0E02               	movlw	2
 21608  001D22  26DE               	addwf	postinc2,f,c
 21609  001D24  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21610  001D2A  0E00               	movlw	0
 21611  001D2C  22DD               	addwfc	postdec2,f,c
 21612  001D2E  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21613  001D34  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21614  001D3A  006F FF78  F150    	movff	postinc2,??_vfpfcnvrt+2
 21615  001D40  006F FF74  F151    	movff	postdec2,??_vfpfcnvrt+3
 21616  001D46  0060  F540  F15A   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 21617  001D4C  0060  F544  F15B   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 21618  001D52  6B5C               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 21619  001D54  6B5D               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 21620  001D56  6B5E               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 21621  001D58  6B5F               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 21622  001D5A  6B60               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 21623  001D5C  6B61               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 21627  001D5E  0060  F520  F121   	movff	vfpfcnvrt@fp,xtoa@fp
 21628  001D64  0060  F524  F122   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 21629  001D6A  0060  F568  F123   	movff	vfpfcnvrt@llu,xtoa@d
 21630  001D70  0060  F56C  F124   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 21631  001D76  0060  F570  F125   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 21632  001D7C  0060  F574  F126   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 21633  001D82  0060  F578  F127   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 21634  001D88  0060  F57C  F128   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 21635  001D8E  0060  F580  F129   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 21636  001D94  0060  F584  F12A   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 21637  001D9A  0060  F5A0  F12B   	movff	vfpfcnvrt@c,xtoa@x
 21638  001DA0  EC05  F01E         	call	_xtoa	;wreg free
 21639  001DA4  0060  F484  F148   	movff	?_xtoa,?_vfpfcnvrt
 21640  001DAA  0060  F488  F149   	movff	?_xtoa+1,?_vfpfcnvrt+1
 21641  001DB0  0012               	return	
 21642  001DB2                     l18039:
 21643                           
 21644                           ; BSR set to: 1
 21645                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 21646  001DB2  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21647  001DB8  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21648  001DBE  006F FF7B FFF6     	movff	postinc2,tblptrl
 21649  001DC4  006F FF77 FFF7     	movff	postdec2,tblptrh
 21650  001DCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21651  001DCA  6AF8               	clrf	tblptru,c
 21652  001DCC                     	endif
 21653  001DCC                     	if	0	;tblptru may be non-zero
 21654  001DCC                     	endif
 21655  001DCC  0008               	tblrd		*
 21656  001DCE  50F5               	movf	tablat,w,c
 21657  001DD0  0A25               	xorlw	37
 21658  001DD2  A4D8               	btfss	status,2,c
 21659  001DD4  D01A               	goto	l18049
 21660                           
 21661                           ; BSR set to: 1
 21662                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 21663  001DD6  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21664  001DDC  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21665  001DE2  2ADE               	incf	postinc2,f,c
 21666  001DE4  0E00               	movlw	0
 21667  001DE6  22DD               	addwfc	postdec2,f,c
 21668                           
 21669                           ; BSR set to: 1
 21670                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 21671  001DE8  0E00               	movlw	0
 21672  001DEA  6F07               	movwf	(fputc@c+1)& (0+255),b
 21673  001DEC  0E25               	movlw	37
 21674  001DEE  6F06               	movwf	fputc@c& (0+255),b
 21675  001DF0  0060  F520  F108   	movff	vfpfcnvrt@fp,fputc@fp
 21676  001DF6  0060  F524  F109   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21677  001DFC  ECB3  F037         	call	_fputc	;wreg free
 21678  001E00                     l18045:
 21679                           
 21680                           ; BSR set to: 1
 21681                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 21682  001E00  0E00               	movlw	0
 21683  001E02  6F49               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 21684  001E04  0E01               	movlw	1
 21685  001E06  6F48               	movwf	?_vfpfcnvrt& (0+255),b
 21686  001E08  0012               	return	
 21687  001E0A                     l18049:
 21688                           
 21689                           ; BSR set to: 1
 21690                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 21691  001E0A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21692  001E10  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21693  001E16  2ADE               	incf	postinc2,f,c
 21694  001E18  0E00               	movlw	0
 21695  001E1A  22DD               	addwfc	postdec2,f,c
 21696                           
 21697                           ; BSR set to: 1
 21698                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 21699  001E1C  0E00               	movlw	0
 21700  001E1E  6F49               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 21701  001E20  0E00               	movlw	0
 21702  001E22  6F48               	movwf	?_vfpfcnvrt& (0+255),b
 21703  001E24  0012               	return	
 21704  001E26                     l18055:
 21705                           
 21706                           ; BSR set to: 1
 21707                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 21708  001E26  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21709  001E2C  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21710  001E32  006F FF7B FFF6     	movff	postinc2,tblptrl
 21711  001E38  006F FF77 FFF7     	movff	postdec2,tblptrh
 21712  001E3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21713  001E3E  6AF8               	clrf	tblptru,c
 21714  001E40                     	endif
 21715  001E40                     	if	0	;tblptru may be non-zero
 21716  001E40                     	endif
 21717  001E40  0008               	tblrd		*
 21718  001E42  50F5               	movf	tablat,w,c
 21719  001E44  6F06               	movwf	fputc@c& (0+255),b
 21720  001E46  6B07               	clrf	(fputc@c+1)& (0+255),b
 21721  001E48  0060  F520  F108   	movff	vfpfcnvrt@fp,fputc@fp
 21722  001E4E  0060  F524  F109   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21723  001E54  ECB3  F037         	call	_fputc	;wreg free
 21724                           
 21725                           ; BSR set to: 1
 21726                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 21727  001E58  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21728  001E5E  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21729  001E64  2ADE               	incf	postinc2,f,c
 21730  001E66  0E00               	movlw	0
 21731  001E68  22DD               	addwfc	postdec2,f,c
 21732  001E6A  D7CA               	goto	l18045
 21733  001E6C                     __end_of_vfpfcnvrt:
 21734                           	opt callstack 0
 21735                           
 21736 ;; *************** function _xtoa *****************
 21737 ;; Defined at:
 21738 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21739 ;; Parameters:    Size  Location     Type
 21740 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 21741 ;;		 -> sprintf@f(6), NULL(0), 
 21742 ;;  d               8   35[BANK1 ] unsigned long long 
 21743 ;;  x               1   43[BANK1 ] unsigned char 
 21744 ;; Auto vars:     Size  Location     Type
 21745 ;;  n               8   60[BANK1 ] unsigned long long 
 21746 ;;  c               2   70[BANK1 ] int 
 21747 ;;  i               2   68[BANK1 ] int 
 21748 ;;  w               2   58[BANK1 ] int 
 21749 ;;  p               2   56[BANK1 ] int 
 21750 ;; Return value:  Size  Location     Type
 21751 ;;                  2   33[BANK1 ] int 
 21752 ;; Registers used:
 21753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21754 ;; Tracked objects:
 21755 ;;		On entry : 3F/1
 21756 ;;		On exit  : 3F/1
 21757 ;;		Unchanged: 0/0
 21758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21759 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21760 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21761 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21762 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21763 ;;Total ram usage:       39 bytes
 21764 ;; Hardware stack levels used:    1
 21765 ;; Hardware stack levels required when called:   21
 21766 ;; This function calls:
 21767 ;;		_isalpha
 21768 ;;		_isupper
 21769 ;;		_pad
 21770 ;;		_toupper
 21771 ;; This function is called by:
 21772 ;;		_vfpfcnvrt
 21773 ;; This function uses a non-reentrant model
 21774 ;;
 21775                           
 21776                           	psect	text165
 21777  003C0A                     __ptext165:
 21778                           	opt callstack 0
 21779  003C0A                     _xtoa:
 21780                           	opt callstack 6
 21781                           
 21782                           ; BSR set to: 1
 21783                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 21784                           
 21785                           ; BSR set to: 1
 21786                           ;incstack = 0
 21787  003C0A  AFCA               	btfss	(_prec+1)& (0+255),7,b
 21788                           
 21789                           ; BSR set to: 1
 21790                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 21791  003C0C  93CB               	bcf	_flags& (0+255),1,b
 21792                           
 21793                           ; BSR set to: 1
 21794                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 21795  003C0E  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 21796  003C10  D005               	goto	u17090
 21797  003C12  51CA               	movf	(_prec+1)& (0+255),w,b
 21798  003C14  E108               	bnz	l3539
 21799  003C16  05C9               	decf	_prec& (0+255),w,b
 21800  003C18  B0D8               	btfsc	status,0,c
 21801  003C1A  D005               	goto	l3539
 21802  003C1C                     u17090:
 21803                           
 21804                           ; BSR set to: 1
 21805  003C1C  0E00               	movlw	0
 21806  003C1E  6F39               	movwf	(xtoa@p+1)& (0+255),b
 21807  003C20  0E01               	movlw	1
 21808  003C22  6F38               	movwf	xtoa@p& (0+255),b
 21809  003C24  D006               	goto	l3541
 21810  003C26                     l3539:
 21811                           
 21812                           ; BSR set to: 1
 21813  003C26  0060  F724  F138   	movff	_prec,xtoa@p
 21814  003C2C  0060  F728  F139   	movff	_prec+1,xtoa@p+1
 21815  003C32                     l3541:
 21816                           
 21817                           ; BSR set to: 1
 21818                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 21819  003C32  0060  F71C  F13A   	movff	_width,xtoa@w
 21820  003C38  0060  F720  F13B   	movff	_width+1,xtoa@w+1
 21821                           
 21822                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 21823  003C3E  A9CB               	btfss	_flags& (0+255),4,b
 21824  003C40  D004               	goto	l17771
 21825                           
 21826                           ; BSR set to: 1
 21827                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 21828  003C42  0EFE               	movlw	254
 21829  003C44  273A               	addwf	xtoa@w& (0+255),f,b
 21830  003C46  0EFF               	movlw	255
 21831  003C48  233B               	addwfc	(xtoa@w+1)& (0+255),f,b
 21832  003C4A                     l17771:
 21833                           
 21834                           ; BSR set to: 1
 21835                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 21836  003C4A  0060  F48C  F13C   	movff	xtoa@d,xtoa@n
 21837  003C50  0060  F490  F13D   	movff	xtoa@d+1,xtoa@n+1
 21838  003C56  0060  F494  F13E   	movff	xtoa@d+2,xtoa@n+2
 21839  003C5C  0060  F498  F13F   	movff	xtoa@d+3,xtoa@n+3
 21840  003C62  0060  F49C  F140   	movff	xtoa@d+4,xtoa@n+4
 21841  003C68  0060  F4A0  F141   	movff	xtoa@d+5,xtoa@n+5
 21842  003C6E  0060  F4A4  F142   	movff	xtoa@d+6,xtoa@n+6
 21843  003C74  0060  F4A8  F143   	movff	xtoa@d+7,xtoa@n+7
 21844                           
 21845                           ; BSR set to: 1
 21846                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 21847  003C7A  0E00               	movlw	0
 21848  003C7C  6F45               	movwf	(xtoa@i+1)& (0+255),b
 21849  003C7E  0E1F               	movlw	31
 21850  003C80  6F44               	movwf	xtoa@i& (0+255),b
 21851                           
 21852                           ; BSR set to: 1
 21853                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 21854  003C82  0E00               	movlw	0
 21855  003C84  0103               	movlb	3	; () banked
 21856  003C86  6FA8               	movwf	(_dbuf+31)& (0+255),b
 21857                           
 21858                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21859  003C88  D0A8               	goto	l17807
 21860  003C8A                     l17777:
 21861                           
 21862                           ; BSR set to: 1
 21863                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 21864  003C8A  0744               	decf	xtoa@i& (0+255),f,b
 21865  003C8C  A0D8               	btfss	status,0,c
 21866  003C8E  0745               	decf	(xtoa@i+1)& (0+255),f,b
 21867                           
 21868                           ; BSR set to: 1
 21869                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 21870  003C90  0E0F               	movlw	15
 21871  003C92  153C               	andwf	xtoa@n& (0+255),w,b
 21872  003C94  6F46               	movwf	xtoa@c& (0+255),b
 21873  003C96  6B47               	clrf	(xtoa@c+1)& (0+255),b
 21874                           
 21875                           ; BSR set to: 1
 21876                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 21877  003C98  BF47               	btfsc	(xtoa@c+1)& (0+255),7,b
 21878  003C9A  D008               	goto	l17785
 21879  003C9C  5147               	movf	(xtoa@c+1)& (0+255),w,b
 21880  003C9E  E104               	bnz	u17110
 21881  003CA0  0E0A               	movlw	10
 21882  003CA2  5D46               	subwf	xtoa@c& (0+255),w,b
 21883  003CA4  A0D8               	btfss	status,0,c
 21884  003CA6  D002               	goto	l17785
 21885  003CA8                     u17110:
 21886                           
 21887                           ; BSR set to: 1
 21888  003CA8  0E57               	movlw	87
 21889  003CAA  D001               	goto	L5
 21890  003CAC                     l17785:
 21891                           
 21892                           ; BSR set to: 1
 21893  003CAC  0E30               	movlw	48
 21894  003CAE                     L5:
 21895  003CAE  2546               	addwf	xtoa@c& (0+255),w,b
 21896  003CB0  6F46               	movwf	xtoa@c& (0+255),b
 21897  003CB2  0E00               	movlw	0
 21898  003CB4  2147               	addwfc	(xtoa@c+1)& (0+255),w,b
 21899  003CB6  6F47               	movwf	(xtoa@c+1)& (0+255),b
 21900                           
 21901                           ; BSR set to: 1
 21902                           
 21903                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 21904  003CB8  0EBF               	movlw	191
 21905  003CBA  6F2C               	movwf	??_xtoa& (0+255),b
 21906  003CBC  0EFF               	movlw	255
 21907  003CBE  6F2D               	movwf	(??_xtoa+1)& (0+255),b
 21908  003CC0  512B               	movf	xtoa@x& (0+255),w,b
 21909  003CC2  6F2E               	movwf	(??_xtoa+2)& (0+255),b
 21910  003CC4  6B2F               	clrf	(??_xtoa+3)& (0+255),b
 21911  003CC6  512C               	movf	??_xtoa& (0+255),w,b
 21912  003CC8  272E               	addwf	(??_xtoa+2)& (0+255),f,b
 21913  003CCA  512D               	movf	(??_xtoa+1)& (0+255),w,b
 21914  003CCC  232F               	addwfc	(??_xtoa+3)& (0+255),f,b
 21915  003CCE  512F               	movf	(??_xtoa+3)& (0+255),w,b
 21916  003CD0  E106               	bnz	u17120
 21917  003CD2  0E1A               	movlw	26
 21918  003CD4  5D2E               	subwf	(??_xtoa+2)& (0+255),w,b
 21919  003CD6  B0D8               	btfsc	status,0,c
 21920  003CD8  D002               	goto	u17120
 21921  003CDA  0E01               	movlw	1
 21922  003CDC  D001               	goto	u17130
 21923  003CDE                     u17120:
 21924  003CDE  0E00               	movlw	0
 21925  003CE0                     u17130:
 21926  003CE0  6F34               	movwf	_xtoa$5199& (0+255),b
 21927  003CE2  6B35               	clrf	(_xtoa$5199+1)& (0+255),b
 21928                           
 21929                           ; BSR set to: 1
 21930  003CE4  5134               	movf	_xtoa$5199& (0+255),w,b
 21931  003CE6  1135               	iorwf	(_xtoa$5199+1)& (0+255),w,b
 21932  003CE8  B4D8               	btfsc	status,2,c
 21933  003CEA  D02B               	goto	l17799
 21934                           
 21935                           ; BSR set to: 1
 21936  003CEC  0E9F               	movlw	159
 21937  003CEE  6F2C               	movwf	??_xtoa& (0+255),b
 21938  003CF0  0EFF               	movlw	255
 21939  003CF2  6F2D               	movwf	(??_xtoa+1)& (0+255),b
 21940  003CF4  0E20               	movlw	32
 21941  003CF6  1146               	iorwf	xtoa@c& (0+255),w,b
 21942  003CF8  6F2E               	movwf	(??_xtoa+2)& (0+255),b
 21943  003CFA  0E00               	movlw	0
 21944  003CFC  1147               	iorwf	(xtoa@c+1)& (0+255),w,b
 21945  003CFE  6F2F               	movwf	(??_xtoa+3)& (0+255),b
 21946  003D00  512C               	movf	??_xtoa& (0+255),w,b
 21947  003D02  272E               	addwf	(??_xtoa+2)& (0+255),f,b
 21948  003D04  512D               	movf	(??_xtoa+1)& (0+255),w,b
 21949  003D06  232F               	addwfc	(??_xtoa+3)& (0+255),f,b
 21950  003D08  512F               	movf	(??_xtoa+3)& (0+255),w,b
 21951  003D0A  E106               	bnz	u17150
 21952  003D0C  0E1A               	movlw	26
 21953  003D0E  5D2E               	subwf	(??_xtoa+2)& (0+255),w,b
 21954  003D10  B0D8               	btfsc	status,0,c
 21955  003D12  D002               	goto	u17150
 21956  003D14  0E01               	movlw	1
 21957  003D16  D001               	goto	u17160
 21958  003D18                     u17150:
 21959  003D18  0E00               	movlw	0
 21960  003D1A                     u17160:
 21961  003D1A  6F36               	movwf	_xtoa$5200& (0+255),b
 21962  003D1C  6B37               	clrf	(_xtoa$5200+1)& (0+255),b
 21963                           
 21964                           ; BSR set to: 1
 21965  003D1E  5136               	movf	_xtoa$5200& (0+255),w,b
 21966  003D20  1137               	iorwf	(_xtoa$5200+1)& (0+255),w,b
 21967  003D22  B4D8               	btfsc	status,2,c
 21968  003D24  D00E               	goto	l17799
 21969                           
 21970                           ; BSR set to: 1
 21971                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 21972  003D26  0060  F518  F10A   	movff	xtoa@c,toupper@c
 21973  003D2C  0060  F51C  F10B   	movff	xtoa@c+1,toupper@c+1
 21974  003D32  EC1C  F047         	call	_toupper	;wreg free
 21975  003D36  0060  F428  F146   	movff	?_toupper,xtoa@c
 21976  003D3C  0060  F42C  F147   	movff	?_toupper+1,xtoa@c+1
 21977  003D42                     l17799:
 21978                           
 21979                           ; BSR set to: 1
 21980                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 21981  003D42  0E89               	movlw	low _dbuf
 21982  003D44  2544               	addwf	xtoa@i& (0+255),w,b
 21983  003D46  6ED9               	movwf	fsr2l,c
 21984  003D48  0E03               	movlw	high _dbuf
 21985  003D4A  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 21986  003D4C  6EDA               	movwf	fsr2h,c
 21987  003D4E  0060  F51B  FFDF   	movff	xtoa@c,indf2
 21988                           
 21989                           ; BSR set to: 1
 21990                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 21991  003D54  0738               	decf	xtoa@p& (0+255),f,b
 21992  003D56  A0D8               	btfss	status,0,c
 21993  003D58  0739               	decf	(xtoa@p+1)& (0+255),f,b
 21994                           
 21995                           ; BSR set to: 1
 21996                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 21997  003D5A  073A               	decf	xtoa@w& (0+255),f,b
 21998  003D5C  A0D8               	btfss	status,0,c
 21999  003D5E  073B               	decf	(xtoa@w+1)& (0+255),f,b
 22000                           
 22001                           ; BSR set to: 1
 22002                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 22003  003D60  0060  F4F0  F12C   	movff	xtoa@n,??_xtoa
 22004  003D66  0060  F4F4  F12D   	movff	xtoa@n+1,??_xtoa+1
 22005  003D6C  0060  F4F8  F12E   	movff	xtoa@n+2,??_xtoa+2
 22006  003D72  0060  F4FC  F12F   	movff	xtoa@n+3,??_xtoa+3
 22007  003D78  0060  F500  F130   	movff	xtoa@n+4,??_xtoa+4
 22008  003D7E  0060  F504  F131   	movff	xtoa@n+5,??_xtoa+5
 22009  003D84  0060  F508  F132   	movff	xtoa@n+6,??_xtoa+6
 22010  003D8A  0060  F50C  F133   	movff	xtoa@n+7,??_xtoa+7
 22011  003D90  0E05               	movlw	5
 22012  003D92  D009               	goto	u17180
 22013  003D94                     u17185:
 22014  003D94  90D8               	bcf	status,0,c
 22015  003D96  3333               	rrcf	(??_xtoa+7)& (0+255),f,b
 22016  003D98  3332               	rrcf	(??_xtoa+6)& (0+255),f,b
 22017  003D9A  3331               	rrcf	(??_xtoa+5)& (0+255),f,b
 22018  003D9C  3330               	rrcf	(??_xtoa+4)& (0+255),f,b
 22019  003D9E  332F               	rrcf	(??_xtoa+3)& (0+255),f,b
 22020  003DA0  332E               	rrcf	(??_xtoa+2)& (0+255),f,b
 22021  003DA2  332D               	rrcf	(??_xtoa+1)& (0+255),f,b
 22022  003DA4  332C               	rrcf	??_xtoa& (0+255),f,b
 22023  003DA6                     u17180:
 22024  003DA6  2EE8               	decfsz	wreg,f,c
 22025  003DA8  D7F5               	goto	u17185
 22026  003DAA  0060  F4B0  F13C   	movff	??_xtoa,xtoa@n
 22027  003DB0  0060  F4B4  F13D   	movff	??_xtoa+1,xtoa@n+1
 22028  003DB6  0060  F4B8  F13E   	movff	??_xtoa+2,xtoa@n+2
 22029  003DBC  0060  F4BC  F13F   	movff	??_xtoa+3,xtoa@n+3
 22030  003DC2  0060  F4C0  F140   	movff	??_xtoa+4,xtoa@n+4
 22031  003DC8  0060  F4C4  F141   	movff	??_xtoa+5,xtoa@n+5
 22032  003DCE  0060  F4C8  F142   	movff	??_xtoa+6,xtoa@n+6
 22033  003DD4  0060  F4CC  F143   	movff	??_xtoa+7,xtoa@n+7
 22034  003DDA                     l17807:
 22035                           
 22036                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22037  003DDA  0101               	movlb	1	; () banked
 22038  003DDC  BF45               	btfsc	(xtoa@i+1)& (0+255),7,b
 22039  003DDE  D020               	goto	u17230
 22040  003DE0  5145               	movf	(xtoa@i+1)& (0+255),w,b
 22041  003DE2  E104               	bnz	u17190
 22042  003DE4  0E02               	movlw	2
 22043  003DE6  5D44               	subwf	xtoa@i& (0+255),w,b
 22044  003DE8  A0D8               	btfss	status,0,c
 22045  003DEA  D01A               	goto	u17230
 22046  003DEC                     u17190:
 22047                           
 22048                           ; BSR set to: 1
 22049  003DEC  513C               	movf	xtoa@n& (0+255),w,b
 22050  003DEE  113D               	iorwf	(xtoa@n+1)& (0+255),w,b
 22051  003DF0  113E               	iorwf	(xtoa@n+2)& (0+255),w,b
 22052  003DF2  113F               	iorwf	(xtoa@n+3)& (0+255),w,b
 22053  003DF4  1140               	iorwf	(xtoa@n+4)& (0+255),w,b
 22054  003DF6  1141               	iorwf	(xtoa@n+5)& (0+255),w,b
 22055  003DF8  1142               	iorwf	(xtoa@n+6)& (0+255),w,b
 22056  003DFA  1143               	iorwf	(xtoa@n+7)& (0+255),w,b
 22057  003DFC  A4D8               	btfss	status,2,c
 22058  003DFE  D745               	goto	l17777
 22059                           
 22060                           ; BSR set to: 1
 22061  003E00  BF39               	btfsc	(xtoa@p+1)& (0+255),7,b
 22062  003E02  D005               	goto	u17210
 22063  003E04  5139               	movf	(xtoa@p+1)& (0+255),w,b
 22064  003E06  E102               	bnz	u17211
 22065  003E08  0538               	decf	xtoa@p& (0+255),w,b
 22066  003E0A  B0D8               	btfsc	status,0,c
 22067  003E0C                     u17211:
 22068  003E0C  D73E               	goto	l17777
 22069  003E0E                     u17210:
 22070                           
 22071                           ; BSR set to: 1
 22072  003E0E  BF3B               	btfsc	(xtoa@w+1)& (0+255),7,b
 22073  003E10  D007               	goto	u17230
 22074  003E12  513B               	movf	(xtoa@w+1)& (0+255),w,b
 22075  003E14  E103               	bnz	u17220
 22076  003E16  053A               	decf	xtoa@w& (0+255),w,b
 22077  003E18  A0D8               	btfss	status,0,c
 22078  003E1A  D002               	goto	u17230
 22079  003E1C                     u17220:
 22080                           
 22081                           ; BSR set to: 1
 22082  003E1C  B3CB               	btfsc	_flags& (0+255),1,b
 22083  003E1E  D735               	goto	l17777
 22084  003E20                     u17230:
 22085                           
 22086                           ; BSR set to: 1
 22087                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 22088  003E20  A9CB               	btfss	_flags& (0+255),4,b
 22089  003E22  D017               	goto	l17823
 22090                           
 22091                           ; BSR set to: 1
 22092                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 22093  003E24  0744               	decf	xtoa@i& (0+255),f,b
 22094  003E26  A0D8               	btfss	status,0,c
 22095  003E28  0745               	decf	(xtoa@i+1)& (0+255),f,b
 22096                           
 22097                           ; BSR set to: 1
 22098                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 22099  003E2A  0E89               	movlw	low _dbuf
 22100  003E2C  2544               	addwf	xtoa@i& (0+255),w,b
 22101  003E2E  6ED9               	movwf	fsr2l,c
 22102  003E30  0E03               	movlw	high _dbuf
 22103  003E32  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22104  003E34  6EDA               	movwf	fsr2h,c
 22105  003E36  0060  F4AF  FFDF   	movff	xtoa@x,indf2
 22106                           
 22107                           ; BSR set to: 1
 22108                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 22109  003E3C  0744               	decf	xtoa@i& (0+255),f,b
 22110  003E3E  A0D8               	btfss	status,0,c
 22111  003E40  0745               	decf	(xtoa@i+1)& (0+255),f,b
 22112                           
 22113                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 22114  003E42  0E89               	movlw	low _dbuf
 22115  003E44  2544               	addwf	xtoa@i& (0+255),w,b
 22116  003E46  6ED9               	movwf	fsr2l,c
 22117  003E48  0E03               	movlw	high _dbuf
 22118  003E4A  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22119  003E4C  6EDA               	movwf	fsr2h,c
 22120  003E4E  0E30               	movlw	48
 22121  003E50  6EDF               	movwf	indf2,c
 22122  003E52                     l17823:
 22123                           
 22124                           ; BSR set to: 1
 22125                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 22126  003E52  0060  F484  F116   	movff	xtoa@fp,pad@fp
 22127  003E58  0060  F488  F117   	movff	xtoa@fp+1,pad@fp+1
 22128  003E5E  0E89               	movlw	low _dbuf
 22129  003E60  2544               	addwf	xtoa@i& (0+255),w,b
 22130  003E62  6F18               	movwf	pad@buf& (0+255),b
 22131  003E64  0E03               	movlw	high _dbuf
 22132  003E66  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22133  003E68  6F19               	movwf	(pad@buf+1)& (0+255),b
 22134  003E6A  0060  F4E8  F11A   	movff	xtoa@w,pad@p
 22135  003E70  0060  F4EC  F11B   	movff	xtoa@w+1,pad@p+1
 22136  003E76  EC1C  F039         	call	_pad	;wreg free
 22137  003E7A  0060  F458  F121   	movff	?_pad,?_xtoa
 22138  003E80  0060  F45C  F122   	movff	?_pad+1,?_xtoa+1
 22139                           
 22140                           ; BSR set to: 1
 22141  003E86  0012               	return		;funcret
 22142  003E88                     __end_of_xtoa:
 22143                           	opt callstack 0
 22144                           
 22145 ;; *************** function _toupper *****************
 22146 ;; Defined at:
 22147 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 22148 ;; Parameters:    Size  Location     Type
 22149 ;;  c               2   10[BANK1 ] int 
 22150 ;; Auto vars:     Size  Location     Type
 22151 ;;		None
 22152 ;; Return value:  Size  Location     Type
 22153 ;;                  2   10[BANK1 ] int 
 22154 ;; Registers used:
 22155 ;;		wreg, status,2, status,0
 22156 ;; Tracked objects:
 22157 ;;		On entry : 3F/1
 22158 ;;		On exit  : 3F/1
 22159 ;;		Unchanged: 0/0
 22160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22161 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22162 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22163 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22164 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22165 ;;Total ram usage:        8 bytes
 22166 ;; Hardware stack levels used:    1
 22167 ;; Hardware stack levels required when called:   17
 22168 ;; This function calls:
 22169 ;;		_islower
 22170 ;; This function is called by:
 22171 ;;		_xtoa
 22172 ;; This function uses a non-reentrant model
 22173 ;;
 22174                           
 22175                           	psect	text166
 22176  008E38                     __ptext166:
 22177                           	opt callstack 0
 22178  008E38                     _toupper:
 22179                           	opt callstack 9
 22180                           
 22181                           ; BSR set to: 1
 22182                           
 22183                           ; BSR set to: 1
 22184                           ;incstack = 0
 22185  008E38  0E9F               	movlw	159
 22186  008E3A  6F0C               	movwf	??_toupper& (0+255),b
 22187  008E3C  0EFF               	movlw	255
 22188  008E3E  6F0D               	movwf	(??_toupper+1)& (0+255),b
 22189  008E40  0060  F428  F10E   	movff	toupper@c,??_toupper+2
 22190  008E46  0060  F42C  F10F   	movff	toupper@c+1,??_toupper+3
 22191  008E4C  510C               	movf	??_toupper& (0+255),w,b
 22192  008E4E  270E               	addwf	(??_toupper+2)& (0+255),f,b
 22193  008E50  510D               	movf	(??_toupper+1)& (0+255),w,b
 22194  008E52  230F               	addwfc	(??_toupper+3)& (0+255),f,b
 22195  008E54  510F               	movf	(??_toupper+3)& (0+255),w,b
 22196  008E56  E106               	bnz	u16470
 22197  008E58  0E1A               	movlw	26
 22198  008E5A  5D0E               	subwf	(??_toupper+2)& (0+255),w,b
 22199  008E5C  B0D8               	btfsc	status,0,c
 22200  008E5E  D002               	goto	u16470
 22201  008E60  0E01               	movlw	1
 22202  008E62  D001               	goto	u16480
 22203  008E64                     u16470:
 22204  008E64  0E00               	movlw	0
 22205  008E66                     u16480:
 22206  008E66  6F10               	movwf	_toupper$5789& (0+255),b
 22207  008E68  6B11               	clrf	(_toupper$5789+1)& (0+255),b
 22208                           
 22209                           ; BSR set to: 1
 22210  008E6A  5110               	movf	_toupper$5789& (0+255),w,b
 22211  008E6C  1111               	iorwf	(_toupper$5789+1)& (0+255),w,b
 22212  008E6E  B4D8               	btfsc	status,2,c
 22213  008E70  D005               	goto	l4393
 22214                           
 22215                           ; BSR set to: 1
 22216  008E72  0E5F               	movlw	95
 22217  008E74  150A               	andwf	toupper@c& (0+255),w,b
 22218  008E76  6F0A               	movwf	?_toupper& (0+255),b
 22219  008E78  6B0B               	clrf	(?_toupper+1)& (0+255),b
 22220  008E7A  0012               	return	
 22221  008E7C                     l4393:
 22222                           
 22223                           ; BSR set to: 1
 22224  008E7C  0060  F428  F10A   	movff	toupper@c,?_toupper
 22225  008E82  0060  F42C  F10B   	movff	toupper@c+1,?_toupper+1
 22226                           
 22227                           ; BSR set to: 1
 22228  008E88  0012               	return		;funcret
 22229  008E8A                     __end_of_toupper:
 22230                           	opt callstack 0
 22231                           
 22232 ;; *************** function _islower *****************
 22233 ;; Defined at:
 22234 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 22235 ;; Parameters:    Size  Location     Type
 22236 ;;  c               2    4[BANK1 ] int 
 22237 ;; Auto vars:     Size  Location     Type
 22238 ;;		None
 22239 ;; Return value:  Size  Location     Type
 22240 ;;                  2    4[BANK1 ] int 
 22241 ;; Registers used:
 22242 ;;		wreg, status,2, status,0
 22243 ;; Tracked objects:
 22244 ;;		On entry : 0/0
 22245 ;;		On exit  : 3F/1
 22246 ;;		Unchanged: 0/0
 22247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22248 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22250 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22251 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22252 ;;Total ram usage:        6 bytes
 22253 ;; Hardware stack levels used:    1
 22254 ;; Hardware stack levels required when called:   16
 22255 ;; This function calls:
 22256 ;;		Nothing
 22257 ;; This function is called by:
 22258 ;;		_toupper
 22259 ;; This function uses a non-reentrant model
 22260 ;;
 22261                           
 22262                           	psect	text167
 22263  009556                     __ptext167:
 22264                           	opt callstack 0
 22265  009556                     _islower:
 22266                           	opt callstack 9
 22267                           
 22268                           ; BSR set to: 1
 22269                           ;incstack = 0
 22270  009556  0E9F               	movlw	159
 22271  009558  0101               	movlb	1	; () banked
 22272  00955A  6F06               	movwf	??_islower& (0+255),b
 22273  00955C  0EFF               	movlw	255
 22274  00955E  6F07               	movwf	(??_islower+1)& (0+255),b
 22275  009560  0060  F410  F108   	movff	islower@c,??_islower+2
 22276  009566  0060  F414  F109   	movff	islower@c+1,??_islower+3
 22277  00956C  5106               	movf	??_islower& (0+255),w,b
 22278  00956E  2708               	addwf	(??_islower+2)& (0+255),f,b
 22279  009570  5107               	movf	(??_islower+1)& (0+255),w,b
 22280  009572  2309               	addwfc	(??_islower+3)& (0+255),f,b
 22281  009574  5109               	movf	(??_islower+3)& (0+255),w,b
 22282  009576  E106               	bnz	u15860
 22283  009578  0E1A               	movlw	26
 22284  00957A  5D08               	subwf	(??_islower+2)& (0+255),w,b
 22285  00957C  B0D8               	btfsc	status,0,c
 22286  00957E  D002               	goto	u15860
 22287  009580  0E01               	movlw	1
 22288  009582  D001               	goto	u15870
 22289  009584                     u15860:
 22290  009584  0E00               	movlw	0
 22291  009586                     u15870:
 22292  009586  6F04               	movwf	?_islower& (0+255),b
 22293  009588  6B05               	clrf	(?_islower+1)& (0+255),b
 22294                           
 22295                           ; BSR set to: 1
 22296  00958A  0012               	return		;funcret
 22297  00958C                     __end_of_islower:
 22298                           	opt callstack 0
 22299                           
 22300 ;; *************** function _isupper *****************
 22301 ;; Defined at:
 22302 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;  c               2    4[BANK1 ] int 
 22305 ;; Auto vars:     Size  Location     Type
 22306 ;;		None
 22307 ;; Return value:  Size  Location     Type
 22308 ;;                  2    4[BANK1 ] int 
 22309 ;; Registers used:
 22310 ;;		wreg, status,2, status,0
 22311 ;; Tracked objects:
 22312 ;;		On entry : 0/0
 22313 ;;		On exit  : 3F/1
 22314 ;;		Unchanged: 0/0
 22315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22316 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22318 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22319 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22320 ;;Total ram usage:        6 bytes
 22321 ;; Hardware stack levels used:    1
 22322 ;; Hardware stack levels required when called:   16
 22323 ;; This function calls:
 22324 ;;		Nothing
 22325 ;; This function is called by:
 22326 ;;		_xtoa
 22327 ;; This function uses a non-reentrant model
 22328 ;;
 22329                           
 22330                           	psect	text168
 22331  00958C                     __ptext168:
 22332                           	opt callstack 0
 22333  00958C                     _isupper:
 22334                           	opt callstack 10
 22335                           
 22336                           ; BSR set to: 1
 22337                           ;incstack = 0
 22338  00958C  0EBF               	movlw	191
 22339  00958E  0101               	movlb	1	; () banked
 22340  009590  6F06               	movwf	??_isupper& (0+255),b
 22341  009592  0EFF               	movlw	255
 22342  009594  6F07               	movwf	(??_isupper+1)& (0+255),b
 22343  009596  0060  F410  F108   	movff	isupper@c,??_isupper+2
 22344  00959C  0060  F414  F109   	movff	isupper@c+1,??_isupper+3
 22345  0095A2  5106               	movf	??_isupper& (0+255),w,b
 22346  0095A4  2708               	addwf	(??_isupper+2)& (0+255),f,b
 22347  0095A6  5107               	movf	(??_isupper+1)& (0+255),w,b
 22348  0095A8  2309               	addwfc	(??_isupper+3)& (0+255),f,b
 22349  0095AA  5109               	movf	(??_isupper+3)& (0+255),w,b
 22350  0095AC  E106               	bnz	u16430
 22351  0095AE  0E1A               	movlw	26
 22352  0095B0  5D08               	subwf	(??_isupper+2)& (0+255),w,b
 22353  0095B2  B0D8               	btfsc	status,0,c
 22354  0095B4  D002               	goto	u16430
 22355  0095B6  0E01               	movlw	1
 22356  0095B8  D001               	goto	u16440
 22357  0095BA                     u16430:
 22358  0095BA  0E00               	movlw	0
 22359  0095BC                     u16440:
 22360  0095BC  6F04               	movwf	?_isupper& (0+255),b
 22361  0095BE  6B05               	clrf	(?_isupper+1)& (0+255),b
 22362                           
 22363                           ; BSR set to: 1
 22364  0095C0  0012               	return		;funcret
 22365  0095C2                     __end_of_isupper:
 22366                           	opt callstack 0
 22367                           
 22368 ;; *************** function _isalpha *****************
 22369 ;; Defined at:
 22370 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 22371 ;; Parameters:    Size  Location     Type
 22372 ;;  c               2    4[BANK1 ] int 
 22373 ;; Auto vars:     Size  Location     Type
 22374 ;;		None
 22375 ;; Return value:  Size  Location     Type
 22376 ;;                  2    4[BANK1 ] int 
 22377 ;; Registers used:
 22378 ;;		wreg, status,2, status,0
 22379 ;; Tracked objects:
 22380 ;;		On entry : 0/0
 22381 ;;		On exit  : 3F/1
 22382 ;;		Unchanged: 0/0
 22383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22384 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22386 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22387 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22388 ;;Total ram usage:        6 bytes
 22389 ;; Hardware stack levels used:    1
 22390 ;; Hardware stack levels required when called:   16
 22391 ;; This function calls:
 22392 ;;		Nothing
 22393 ;; This function is called by:
 22394 ;;		_xtoa
 22395 ;; This function uses a non-reentrant model
 22396 ;;
 22397                           
 22398                           	psect	text169
 22399  0095C2                     __ptext169:
 22400                           	opt callstack 0
 22401  0095C2                     _isalpha:
 22402                           	opt callstack 10
 22403                           
 22404                           ; BSR set to: 1
 22405                           ;incstack = 0
 22406  0095C2  0E9F               	movlw	159
 22407  0095C4  0101               	movlb	1	; () banked
 22408  0095C6  6F06               	movwf	??_isalpha& (0+255),b
 22409  0095C8  0EFF               	movlw	255
 22410  0095CA  6F07               	movwf	(??_isalpha+1)& (0+255),b
 22411  0095CC  0E20               	movlw	32
 22412  0095CE  1104               	iorwf	isalpha@c& (0+255),w,b
 22413  0095D0  6F08               	movwf	(??_isalpha+2)& (0+255),b
 22414  0095D2  0E00               	movlw	0
 22415  0095D4  1105               	iorwf	(isalpha@c+1)& (0+255),w,b
 22416  0095D6  6F09               	movwf	(??_isalpha+3)& (0+255),b
 22417  0095D8  5106               	movf	??_isalpha& (0+255),w,b
 22418  0095DA  2708               	addwf	(??_isalpha+2)& (0+255),f,b
 22419  0095DC  5107               	movf	(??_isalpha+1)& (0+255),w,b
 22420  0095DE  2309               	addwfc	(??_isalpha+3)& (0+255),f,b
 22421  0095E0  5109               	movf	(??_isalpha+3)& (0+255),w,b
 22422  0095E2  E106               	bnz	u16450
 22423  0095E4  0E1A               	movlw	26
 22424  0095E6  5D08               	subwf	(??_isalpha+2)& (0+255),w,b
 22425  0095E8  B0D8               	btfsc	status,0,c
 22426  0095EA  D002               	goto	u16450
 22427  0095EC  0E01               	movlw	1
 22428  0095EE  D001               	goto	u16460
 22429  0095F0                     u16450:
 22430  0095F0  0E00               	movlw	0
 22431  0095F2                     u16460:
 22432  0095F2  6F04               	movwf	?_isalpha& (0+255),b
 22433  0095F4  6B05               	clrf	(?_isalpha+1)& (0+255),b
 22434                           
 22435                           ; BSR set to: 1
 22436  0095F6  0012               	return		;funcret
 22437  0095F8                     __end_of_isalpha:
 22438                           	opt callstack 0
 22439                           
 22440 ;; *************** function _stoa *****************
 22441 ;; Defined at:
 22442 ;;		line 546 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22443 ;; Parameters:    Size  Location     Type
 22444 ;;  fp              2   15[BANK1 ] PTR struct _IO_FILE
 22445 ;;		 -> sprintf@f(6), NULL(0), 
 22446 ;;  s               2   17[BANK1 ] PTR unsigned char 
 22447 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 22448 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 22449 ;;		 -> alarmData(399), STR_11(3), 
 22450 ;; Auto vars:     Size  Location     Type
 22451 ;;  nuls            7   20[BANK1 ] unsigned char [7]
 22452 ;;  l               2   35[BANK1 ] int 
 22453 ;;  p               2   33[BANK1 ] int 
 22454 ;;  cp              2   31[BANK1 ] PTR unsigned char 
 22455 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), adcVOffset(2), 
 22456 ;;		 -> adcOffset(2), STR_29(3), STR_28(3), STR_27(3), 
 22457 ;;		 -> STR_26(3), alarmData(399), STR_11(3), 
 22458 ;;  w               2   29[BANK1 ] int 
 22459 ;;  i               2   27[BANK1 ] int 
 22460 ;; Return value:  Size  Location     Type
 22461 ;;                  2   15[BANK1 ] int 
 22462 ;; Registers used:
 22463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22464 ;; Tracked objects:
 22465 ;;		On entry : 3F/1
 22466 ;;		On exit  : 3F/1
 22467 ;;		Unchanged: 0/0
 22468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22469 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22470 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22471 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22472 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22473 ;;Total ram usage:       22 bytes
 22474 ;; Hardware stack levels used:    1
 22475 ;; Hardware stack levels required when called:   19
 22476 ;; This function calls:
 22477 ;;		_fputc
 22478 ;;		_strlen
 22479 ;; This function is called by:
 22480 ;;		_vfpfcnvrt
 22481 ;; This function uses a non-reentrant model
 22482 ;;
 22483                           
 22484                           	psect	text170
 22485  005272                     __ptext170:
 22486                           	opt callstack 0
 22487  005272                     _stoa:
 22488                           	opt callstack 8
 22489                           
 22490                           ; BSR set to: 1
 22491                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 5
      +                          47: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *
      +                          cp, nuls[] = "(null)";
 22492                           
 22493                           ; BSR set to: 1
 22494                           ;incstack = 0
 22495  005272  EE20  F2D0         	lfsr	2,stoa@F1144
 22496  005276  EE10  F114         	lfsr	1,stoa@nuls
 22497  00527A  0E06               	movlw	6
 22498  00527C                     u16981:
 22499  00527C  006F FF6F FFE3     	movff	plusw2,plusw1
 22500  005282  06E8               	decf	wreg,f,c
 22501  005284  E2FB               	bc	u16981
 22502                           
 22503                           ; BSR set to: 1
 22504                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 22505  005286  0060  F444  F11F   	movff	stoa@s,stoa@cp
 22506  00528C  0060  F448  F120   	movff	stoa@s+1,stoa@cp+1
 22507                           
 22508                           ; BSR set to: 1
 22509                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 22510  005292  511F               	movf	stoa@cp& (0+255),w,b
 22511  005294  1120               	iorwf	(stoa@cp+1)& (0+255),w,b
 22512  005296  A4D8               	btfss	status,2,c
 22513  005298  D004               	goto	l17727
 22514                           
 22515                           ; BSR set to: 1
 22516                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nu
      +                          ls;
 22517  00529A  0E14               	movlw	low stoa@nuls
 22518  00529C  6F1F               	movwf	stoa@cp& (0+255),b
 22519  00529E  0E01               	movlw	high stoa@nuls
 22520  0052A0  6F20               	movwf	(stoa@cp+1)& (0+255),b
 22521  0052A2                     l17727:
 22522                           
 22523                           ; BSR set to: 1
 22524                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(
      +                          cp);
 22525  0052A2  0060  F47C  F104   	movff	stoa@cp,strlen@s
 22526  0052A8  0060  F480  F105   	movff	stoa@cp+1,strlen@s+1
 22527  0052AE  ECC9  F046         	call	_strlen	;wreg free
 22528  0052B2  0060  F410  F123   	movff	?_strlen,stoa@l
 22529  0052B8  0060  F414  F124   	movff	?_strlen+1,stoa@l+1
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 22533  0052BE  0060  F724  F121   	movff	_prec,stoa@p
 22534  0052C4  0060  F728  F122   	movff	_prec+1,stoa@p+1
 22535                           
 22536                           ; BSR set to: 1
 22537                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 22538  0052CA  BF22               	btfsc	(stoa@p+1)& (0+255),7,b
 22539  0052CC  D010               	goto	l3520
 22540                           
 22541                           ; BSR set to: 1
 22542  0052CE  5123               	movf	stoa@l& (0+255),w,b
 22543  0052D0  5D21               	subwf	stoa@p& (0+255),w,b
 22544  0052D2  5122               	movf	(stoa@p+1)& (0+255),w,b
 22545  0052D4  0A80               	xorlw	128
 22546  0052D6  6F13               	movwf	??_stoa& (0+255),b
 22547  0052D8  5124               	movf	(stoa@l+1)& (0+255),w,b
 22548  0052DA  0A80               	xorlw	128
 22549  0052DC  5913               	subwfb	??_stoa& (0+255),w,b
 22550  0052DE  B0D8               	btfsc	status,0,c
 22551  0052E0  D006               	goto	l3520
 22552                           
 22553                           ; BSR set to: 1
 22554  0052E2  0060  F484  F123   	movff	stoa@p,stoa@l
 22555  0052E8  0060  F488  F124   	movff	stoa@p+1,stoa@l+1
 22556  0052EE                     l3520:
 22557                           
 22558                           ; BSR set to: 1
 22559                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 22560  0052EE  0060  F48C  F121   	movff	stoa@l,stoa@p
 22561  0052F4  0060  F490  F122   	movff	stoa@l+1,stoa@p+1
 22562                           
 22563                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 22564  0052FA  0060  F71C  F11D   	movff	_width,stoa@w
 22565  005300  0060  F720  F11E   	movff	_width+1,stoa@w+1
 22566                           
 22567                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags
      +                           & (1 << 0))) {
 22568  005306  A1CB               	btfss	_flags& (0+255),0,b
 22569  005308  D00F               	goto	l17741
 22570  00530A  D018               	goto	u17030
 22571  00530C                     l17737:
 22572                           
 22573                           ; BSR set to: 1
 22574                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fpu
      +                          tc(' ', fp);
 22575  00530C  0E00               	movlw	0
 22576  00530E  6F07               	movwf	(fputc@c+1)& (0+255),b
 22577  005310  0E20               	movlw	32
 22578  005312  6F06               	movwf	fputc@c& (0+255),b
 22579  005314  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22580  00531A  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22581  005320  ECB3  F037         	call	_fputc	;wreg free
 22582                           
 22583                           ; BSR set to: 1
 22584                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l
      +                          ;
 22585  005324  4B23               	infsnz	stoa@l& (0+255),f,b
 22586  005326  2B24               	incf	(stoa@l+1)& (0+255),f,b
 22587  005328                     l17741:
 22588                           
 22589                           ; BSR set to: 1
 22590                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (
      +                          l < w) {
 22591  005328  511D               	movf	stoa@w& (0+255),w,b
 22592  00532A  5D23               	subwf	stoa@l& (0+255),w,b
 22593  00532C  5124               	movf	(stoa@l+1)& (0+255),w,b
 22594  00532E  0A80               	xorlw	128
 22595  005330  6F13               	movwf	??_stoa& (0+255),b
 22596  005332  511E               	movf	(stoa@w+1)& (0+255),w,b
 22597  005334  0A80               	xorlw	128
 22598  005336  5913               	subwfb	??_stoa& (0+255),w,b
 22599  005338  A0D8               	btfss	status,0,c
 22600  00533A  D7E8               	goto	l17737
 22601  00533C                     u17030:
 22602                           
 22603                           ; BSR set to: 1
 22604                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 22605  00533C  0E00               	movlw	0
 22606  00533E  6F1C               	movwf	(stoa@i+1)& (0+255),b
 22607  005340  0E00               	movlw	0
 22608  005342  6F1B               	movwf	stoa@i& (0+255),b
 22609                           
 22610                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 22611  005344  D026               	goto	l17751
 22612  005346                     l17745:
 22613                           
 22614                           ; BSR set to: 1
 22615                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*
      +                          cp, fp);
 22616  005346  0060  F47F  FFF6   	movff	stoa@cp,tblptrl
 22617  00534C  0060  F483  FFF7   	movff	stoa@cp+1,tblptrh
 22618  005352  0E00               	movlw	low (__mediumconst shr (0+16))
 22619  005354  6EF8               	movwf	tblptru,c
 22620  005356  0E0F               	movlw	(high __ramtop+-1)
 22621  005358  64F7               	cpfsgt	tblptrh,c
 22622  00535A  D003               	bra	u17047
 22623  00535C  0008               	tblrd		*
 22624  00535E  50F5               	movf	tablat,w,c
 22625  005360  D007               	bra	u17040
 22626  005362                     u17047:
 22627  005362  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22628  005368  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22629  00536E  50E7               	movf	indf1,w,c
 22630  005370                     u17040:
 22631  005370  0101               	movlb	1	; () banked
 22632  005372  6F13               	movwf	??_stoa& (0+255),b
 22633  005374  5113               	movf	??_stoa& (0+255),w,b
 22634  005376  6F06               	movwf	fputc@c& (0+255),b
 22635  005378  6B07               	clrf	(fputc@c+1)& (0+255),b
 22636  00537A  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22637  005380  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22638  005386  ECB3  F037         	call	_fputc	;wreg free
 22639                           
 22640                           ; BSR set to: 1
 22641                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 22642  00538A  4B1F               	infsnz	stoa@cp& (0+255),f,b
 22643  00538C  2B20               	incf	(stoa@cp+1)& (0+255),f,b
 22644                           
 22645                           ; BSR set to: 1
 22646                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 22647  00538E  4B1B               	infsnz	stoa@i& (0+255),f,b
 22648  005390  2B1C               	incf	(stoa@i+1)& (0+255),f,b
 22649  005392                     l17751:
 22650                           
 22651                           ; BSR set to: 1
 22652                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 22653  005392  5121               	movf	stoa@p& (0+255),w,b
 22654  005394  5D1B               	subwf	stoa@i& (0+255),w,b
 22655  005396  511C               	movf	(stoa@i+1)& (0+255),w,b
 22656  005398  0A80               	xorlw	128
 22657  00539A  6F13               	movwf	??_stoa& (0+255),b
 22658  00539C  5122               	movf	(stoa@p+1)& (0+255),w,b
 22659  00539E  0A80               	xorlw	128
 22660  0053A0  5913               	subwfb	??_stoa& (0+255),w,b
 22661  0053A2  A0D8               	btfss	status,0,c
 22662  0053A4  D7D0               	goto	l17745
 22663                           
 22664                           ; BSR set to: 1
 22665                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags &
      +                           (1 << 0)) {
 22666  0053A6  B1CB               	btfsc	_flags& (0+255),0,b
 22667  0053A8  D00F               	goto	l17759
 22668  0053AA  D018               	goto	u17070
 22669  0053AC                     l17755:
 22670                           
 22671                           ; BSR set to: 1
 22672                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fpu
      +                          tc(' ', fp);
 22673  0053AC  0E00               	movlw	0
 22674  0053AE  6F07               	movwf	(fputc@c+1)& (0+255),b
 22675  0053B0  0E20               	movlw	32
 22676  0053B2  6F06               	movwf	fputc@c& (0+255),b
 22677  0053B4  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22678  0053BA  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22679  0053C0  ECB3  F037         	call	_fputc	;wreg free
 22680                           
 22681                           ; BSR set to: 1
 22682                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l
      +                          ;
 22683  0053C4  4B23               	infsnz	stoa@l& (0+255),f,b
 22684  0053C6  2B24               	incf	(stoa@l+1)& (0+255),f,b
 22685  0053C8                     l17759:
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (
      +                          l < w) {
 22689  0053C8  511D               	movf	stoa@w& (0+255),w,b
 22690  0053CA  5D23               	subwf	stoa@l& (0+255),w,b
 22691  0053CC  5124               	movf	(stoa@l+1)& (0+255),w,b
 22692  0053CE  0A80               	xorlw	128
 22693  0053D0  6F13               	movwf	??_stoa& (0+255),b
 22694  0053D2  511E               	movf	(stoa@w+1)& (0+255),w,b
 22695  0053D4  0A80               	xorlw	128
 22696  0053D6  5913               	subwfb	??_stoa& (0+255),w,b
 22697  0053D8  A0D8               	btfss	status,0,c
 22698  0053DA  D7E8               	goto	l17755
 22699  0053DC                     u17070:
 22700                           
 22701                           ; BSR set to: 1
 22702                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 22703                           
 22704                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
 22705  0053DC  0060  F48C  F10F   	movff	stoa@l,?_stoa
 22706  0053E2  0060  F490  F110   	movff	stoa@l+1,?_stoa+1
 22707                           
 22708                           ; BSR set to: 1
 22709  0053E8  0012               	return		;funcret
 22710  0053EA                     __end_of_stoa:
 22711                           	opt callstack 0
 22712                           
 22713 ;; *************** function _dtoa *****************
 22714 ;; Defined at:
 22715 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22716 ;; Parameters:    Size  Location     Type
 22717 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 22718 ;;		 -> sprintf@f(6), NULL(0), 
 22719 ;;  d               8   35[BANK1 ] long long 
 22720 ;; Auto vars:     Size  Location     Type
 22721 ;;  n               8   59[BANK1 ] long long 
 22722 ;;  i               2   67[BANK1 ] int 
 22723 ;;  s               2   57[BANK1 ] int 
 22724 ;;  w               2   55[BANK1 ] int 
 22725 ;;  p               2   53[BANK1 ] int 
 22726 ;; Return value:  Size  Location     Type
 22727 ;;                  2   33[BANK1 ] int 
 22728 ;; Registers used:
 22729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22730 ;; Tracked objects:
 22731 ;;		On entry : 3F/1
 22732 ;;		On exit  : 3F/1
 22733 ;;		Unchanged: 0/0
 22734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22735 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22736 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22737 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22738 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22739 ;;Total ram usage:       36 bytes
 22740 ;; Hardware stack levels used:    1
 22741 ;; Hardware stack levels required when called:   21
 22742 ;; This function calls:
 22743 ;;		___aodiv
 22744 ;;		___aomod
 22745 ;;		_abs
 22746 ;;		_pad
 22747 ;; This function is called by:
 22748 ;;		_vfpfcnvrt
 22749 ;; This function uses a non-reentrant model
 22750 ;;
 22751                           
 22752                           	psect	text171
 22753  0036DA                     __ptext171:
 22754                           	opt callstack 0
 22755  0036DA                     _dtoa:
 22756                           	opt callstack 6
 22757                           
 22758                           ; BSR set to: 1
 22759                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 22760                           
 22761                           ; BSR set to: 1
 22762                           ;incstack = 0
 22763  0036DA  0060  F48C  F13B   	movff	dtoa@d,dtoa@n
 22764  0036E0  0060  F490  F13C   	movff	dtoa@d+1,dtoa@n+1
 22765  0036E6  0060  F494  F13D   	movff	dtoa@d+2,dtoa@n+2
 22766  0036EC  0060  F498  F13E   	movff	dtoa@d+3,dtoa@n+3
 22767  0036F2  0060  F49C  F13F   	movff	dtoa@d+4,dtoa@n+4
 22768  0036F8  0060  F4A0  F140   	movff	dtoa@d+5,dtoa@n+5
 22769  0036FE  0060  F4A4  F141   	movff	dtoa@d+6,dtoa@n+6
 22770  003704  0060  F4A8  F142   	movff	dtoa@d+7,dtoa@n+7
 22771                           
 22772                           ; BSR set to: 1
 22773                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 22774  00370A  AF42               	btfss	(dtoa@n+7)& (0+255),7,b
 22775  00370C  D002               	goto	u16830
 22776  00370E  0E01               	movlw	1
 22777  003710  D001               	goto	u16840
 22778  003712                     u16830:
 22779  003712  0E00               	movlw	0
 22780  003714                     u16840:
 22781  003714  6F39               	movwf	dtoa@s& (0+255),b
 22782  003716  6B3A               	clrf	(dtoa@s+1)& (0+255),b
 22783                           
 22784                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 22785  003718  5139               	movf	dtoa@s& (0+255),w,b
 22786  00371A  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 22787  00371C  B4D8               	btfsc	status,2,c
 22788  00371E  D010               	goto	l17663
 22789                           
 22790                           ; BSR set to: 1
 22791                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 22792  003720  1F42               	comf	(dtoa@n+7)& (0+255),f,b
 22793  003722  1F41               	comf	(dtoa@n+6)& (0+255),f,b
 22794  003724  1F40               	comf	(dtoa@n+5)& (0+255),f,b
 22795  003726  1F3F               	comf	(dtoa@n+4)& (0+255),f,b
 22796  003728  1F3E               	comf	(dtoa@n+3)& (0+255),f,b
 22797  00372A  1F3D               	comf	(dtoa@n+2)& (0+255),f,b
 22798  00372C  1F3C               	comf	(dtoa@n+1)& (0+255),f,b
 22799  00372E  6D3B               	negf	dtoa@n& (0+255),b
 22800  003730  0E00               	movlw	0
 22801  003732  233C               	addwfc	(dtoa@n+1)& (0+255),f,b
 22802  003734  233D               	addwfc	(dtoa@n+2)& (0+255),f,b
 22803  003736  233E               	addwfc	(dtoa@n+3)& (0+255),f,b
 22804  003738  233F               	addwfc	(dtoa@n+4)& (0+255),f,b
 22805  00373A  2340               	addwfc	(dtoa@n+5)& (0+255),f,b
 22806  00373C  2341               	addwfc	(dtoa@n+6)& (0+255),f,b
 22807  00373E  2342               	addwfc	(dtoa@n+7)& (0+255),f,b
 22808  003740                     l17663:
 22809                           
 22810                           ; BSR set to: 1
 22811                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 22812  003740  AFCA               	btfss	(_prec+1)& (0+255),7,b
 22813                           
 22814                           ; BSR set to: 1
 22815                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 22816  003742  93CB               	bcf	_flags& (0+255),1,b
 22817                           
 22818                           ; BSR set to: 1
 22819                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 22820  003744  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 22821  003746  D005               	goto	u16870
 22822  003748  51CA               	movf	(_prec+1)& (0+255),w,b
 22823  00374A  E108               	bnz	l3491
 22824  00374C  05C9               	decf	_prec& (0+255),w,b
 22825  00374E  B0D8               	btfsc	status,0,c
 22826  003750  D005               	goto	l3491
 22827  003752                     u16870:
 22828                           
 22829                           ; BSR set to: 1
 22830  003752  0E00               	movlw	0
 22831  003754  6F36               	movwf	(dtoa@p+1)& (0+255),b
 22832  003756  0E01               	movlw	1
 22833  003758  6F35               	movwf	dtoa@p& (0+255),b
 22834  00375A  D006               	goto	l3493
 22835  00375C                     l3491:
 22836                           
 22837                           ; BSR set to: 1
 22838  00375C  0060  F724  F135   	movff	_prec,dtoa@p
 22839  003762  0060  F728  F136   	movff	_prec+1,dtoa@p+1
 22840  003768                     l3493:
 22841                           
 22842                           ; BSR set to: 1
 22843                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22844  003768  0060  F71C  F137   	movff	_width,dtoa@w
 22845  00376E  0060  F720  F138   	movff	_width+1,dtoa@w+1
 22846                           
 22847                           ; BSR set to: 1
 22848                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 22849  003774  5139               	movf	dtoa@s& (0+255),w,b
 22850  003776  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 22851  003778  A4D8               	btfss	status,2,c
 22852  00377A  D002               	goto	u16890
 22853                           
 22854                           ; BSR set to: 1
 22855  00377C  A5CB               	btfss	_flags& (0+255),2,b
 22856  00377E  D003               	goto	l17677
 22857  003780                     u16890:
 22858                           
 22859                           ; BSR set to: 1
 22860                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 22861  003780  0737               	decf	dtoa@w& (0+255),f,b
 22862  003782  A0D8               	btfss	status,0,c
 22863  003784  0738               	decf	(dtoa@w+1)& (0+255),f,b
 22864  003786                     l17677:
 22865                           
 22866                           ; BSR set to: 1
 22867                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 22868  003786  0E00               	movlw	0
 22869  003788  6F44               	movwf	(dtoa@i+1)& (0+255),b
 22870  00378A  0E1F               	movlw	31
 22871  00378C  6F43               	movwf	dtoa@i& (0+255),b
 22872                           
 22873                           ; BSR set to: 1
 22874                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 22875  00378E  0E00               	movlw	0
 22876  003790  0103               	movlb	3	; () banked
 22877  003792  6FA8               	movwf	(_dbuf+31)& (0+255),b
 22878                           
 22879                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22880  003794  D09E               	goto	l17691
 22881  003796                     l17681:
 22882                           
 22883                           ; BSR set to: 1
 22884                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 22885  003796  0743               	decf	dtoa@i& (0+255),f,b
 22886  003798  A0D8               	btfss	status,0,c
 22887  00379A  0744               	decf	(dtoa@i+1)& (0+255),f,b
 22888                           
 22889                           ; BSR set to: 1
 22890                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 22891  00379C  0E89               	movlw	low _dbuf
 22892  00379E  2543               	addwf	dtoa@i& (0+255),w,b
 22893  0037A0  6ED9               	movwf	fsr2l,c
 22894  0037A2  0E03               	movlw	high _dbuf
 22895  0037A4  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 22896  0037A6  6EDA               	movwf	fsr2h,c
 22897  0037A8  0060  F4EC  F104   	movff	dtoa@n,___aomod@dividend
 22898  0037AE  0060  F4F0  F105   	movff	dtoa@n+1,___aomod@dividend+1
 22899  0037B4  0060  F4F4  F106   	movff	dtoa@n+2,___aomod@dividend+2
 22900  0037BA  0060  F4F8  F107   	movff	dtoa@n+3,___aomod@dividend+3
 22901  0037C0  0060  F4FC  F108   	movff	dtoa@n+4,___aomod@dividend+4
 22902  0037C6  0060  F500  F109   	movff	dtoa@n+5,___aomod@dividend+5
 22903  0037CC  0060  F504  F10A   	movff	dtoa@n+6,___aomod@dividend+6
 22904  0037D2  0060  F508  F10B   	movff	dtoa@n+7,___aomod@dividend+7
 22905  0037D8  0E0A               	movlw	10
 22906  0037DA  6F0C               	movwf	___aomod@divisor& (0+255),b
 22907  0037DC  0E00               	movlw	0
 22908  0037DE  6F0D               	movwf	(___aomod@divisor+1)& (0+255),b
 22909  0037E0  0E00               	movlw	0
 22910  0037E2  6F0E               	movwf	(___aomod@divisor+2)& (0+255),b
 22911  0037E4  0E00               	movlw	0
 22912  0037E6  6F0F               	movwf	(___aomod@divisor+3)& (0+255),b
 22913  0037E8  0E00               	movlw	0
 22914  0037EA  6F10               	movwf	(___aomod@divisor+4)& (0+255),b
 22915  0037EC  0E00               	movlw	0
 22916  0037EE  6F11               	movwf	(___aomod@divisor+5)& (0+255),b
 22917  0037F0  0E00               	movlw	0
 22918  0037F2  6F12               	movwf	(___aomod@divisor+6)& (0+255),b
 22919  0037F4  0E00               	movlw	0
 22920  0037F6  6F13               	movwf	(___aomod@divisor+7)& (0+255),b
 22921  0037F8  EC72  F02F         	call	___aomod	;wreg free
 22922  0037FC  0060  F410  F12B   	movff	?___aomod,??_dtoa
 22923  003802  0060  F414  F12C   	movff	?___aomod+1,??_dtoa+1
 22924  003808  0060  F418  F12D   	movff	?___aomod+2,??_dtoa+2
 22925  00380E  0060  F41C  F12E   	movff	?___aomod+3,??_dtoa+3
 22926  003814  0060  F420  F12F   	movff	?___aomod+4,??_dtoa+4
 22927  00381A  0060  F424  F130   	movff	?___aomod+5,??_dtoa+5
 22928  003820  0060  F428  F131   	movff	?___aomod+6,??_dtoa+6
 22929  003826  0060  F42C  F132   	movff	?___aomod+7,??_dtoa+7
 22930  00382C  0060  F4AC  F116   	movff	??_dtoa,abs@a
 22931  003832  0060  F4B4  F117   	movff	??_dtoa+2,abs@a+1
 22932  003838  ECD5  F049         	call	_abs	;wreg free
 22933  00383C  5116               	movf	?_abs& (0+255),w,b
 22934  00383E  0F30               	addlw	48
 22935  003840  6EDF               	movwf	indf2,c
 22936                           
 22937                           ; BSR set to: 1
 22938                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 22939  003842  0735               	decf	dtoa@p& (0+255),f,b
 22940  003844  A0D8               	btfss	status,0,c
 22941  003846  0736               	decf	(dtoa@p+1)& (0+255),f,b
 22942                           
 22943                           ; BSR set to: 1
 22944                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22945  003848  0737               	decf	dtoa@w& (0+255),f,b
 22946  00384A  A0D8               	btfss	status,0,c
 22947  00384C  0738               	decf	(dtoa@w+1)& (0+255),f,b
 22948                           
 22949                           ; BSR set to: 1
 22950                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 22951  00384E  0060  F4EC  F104   	movff	dtoa@n,___aodiv@dividend
 22952  003854  0060  F4F0  F105   	movff	dtoa@n+1,___aodiv@dividend+1
 22953  00385A  0060  F4F4  F106   	movff	dtoa@n+2,___aodiv@dividend+2
 22954  003860  0060  F4F8  F107   	movff	dtoa@n+3,___aodiv@dividend+3
 22955  003866  0060  F4FC  F108   	movff	dtoa@n+4,___aodiv@dividend+4
 22956  00386C  0060  F500  F109   	movff	dtoa@n+5,___aodiv@dividend+5
 22957  003872  0060  F504  F10A   	movff	dtoa@n+6,___aodiv@dividend+6
 22958  003878  0060  F508  F10B   	movff	dtoa@n+7,___aodiv@dividend+7
 22959  00387E  0E0A               	movlw	10
 22960  003880  6F0C               	movwf	___aodiv@divisor& (0+255),b
 22961  003882  0E00               	movlw	0
 22962  003884  6F0D               	movwf	(___aodiv@divisor+1)& (0+255),b
 22963  003886  0E00               	movlw	0
 22964  003888  6F0E               	movwf	(___aodiv@divisor+2)& (0+255),b
 22965  00388A  0E00               	movlw	0
 22966  00388C  6F0F               	movwf	(___aodiv@divisor+3)& (0+255),b
 22967  00388E  0E00               	movlw	0
 22968  003890  6F10               	movwf	(___aodiv@divisor+4)& (0+255),b
 22969  003892  0E00               	movlw	0
 22970  003894  6F11               	movwf	(___aodiv@divisor+5)& (0+255),b
 22971  003896  0E00               	movlw	0
 22972  003898  6F12               	movwf	(___aodiv@divisor+6)& (0+255),b
 22973  00389A  0E00               	movlw	0
 22974  00389C  6F13               	movwf	(___aodiv@divisor+7)& (0+255),b
 22975  00389E  ECD8  F02C         	call	___aodiv	;wreg free
 22976  0038A2  0060  F410  F13B   	movff	?___aodiv,dtoa@n
 22977  0038A8  0060  F414  F13C   	movff	?___aodiv+1,dtoa@n+1
 22978  0038AE  0060  F418  F13D   	movff	?___aodiv+2,dtoa@n+2
 22979  0038B4  0060  F41C  F13E   	movff	?___aodiv+3,dtoa@n+3
 22980  0038BA  0060  F420  F13F   	movff	?___aodiv+4,dtoa@n+4
 22981  0038C0  0060  F424  F140   	movff	?___aodiv+5,dtoa@n+5
 22982  0038C6  0060  F428  F141   	movff	?___aodiv+6,dtoa@n+6
 22983  0038CC  0060  F42C  F142   	movff	?___aodiv+7,dtoa@n+7
 22984  0038D2                     l17691:
 22985                           
 22986                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22987  0038D2  0101               	movlb	1	; () banked
 22988  0038D4  BF44               	btfsc	(dtoa@i+1)& (0+255),7,b
 22989  0038D6  D01F               	goto	u16940
 22990  0038D8  5144               	movf	(dtoa@i+1)& (0+255),w,b
 22991  0038DA  E103               	bnz	u16900
 22992  0038DC  0543               	decf	dtoa@i& (0+255),w,b
 22993  0038DE  A0D8               	btfss	status,0,c
 22994  0038E0  D01A               	goto	u16940
 22995  0038E2                     u16900:
 22996                           
 22997                           ; BSR set to: 1
 22998  0038E2  513B               	movf	dtoa@n& (0+255),w,b
 22999  0038E4  113C               	iorwf	(dtoa@n+1)& (0+255),w,b
 23000  0038E6  113D               	iorwf	(dtoa@n+2)& (0+255),w,b
 23001  0038E8  113E               	iorwf	(dtoa@n+3)& (0+255),w,b
 23002  0038EA  113F               	iorwf	(dtoa@n+4)& (0+255),w,b
 23003  0038EC  1140               	iorwf	(dtoa@n+5)& (0+255),w,b
 23004  0038EE  1141               	iorwf	(dtoa@n+6)& (0+255),w,b
 23005  0038F0  1142               	iorwf	(dtoa@n+7)& (0+255),w,b
 23006  0038F2  A4D8               	btfss	status,2,c
 23007  0038F4  D750               	goto	l17681
 23008                           
 23009                           ; BSR set to: 1
 23010  0038F6  BF36               	btfsc	(dtoa@p+1)& (0+255),7,b
 23011  0038F8  D005               	goto	u16920
 23012  0038FA  5136               	movf	(dtoa@p+1)& (0+255),w,b
 23013  0038FC  E102               	bnz	u16921
 23014  0038FE  0535               	decf	dtoa@p& (0+255),w,b
 23015  003900  B0D8               	btfsc	status,0,c
 23016  003902                     u16921:
 23017  003902  D749               	goto	l17681
 23018  003904                     u16920:
 23019                           
 23020                           ; BSR set to: 1
 23021  003904  BF38               	btfsc	(dtoa@w+1)& (0+255),7,b
 23022  003906  D007               	goto	u16940
 23023  003908  5138               	movf	(dtoa@w+1)& (0+255),w,b
 23024  00390A  E103               	bnz	u16930
 23025  00390C  0537               	decf	dtoa@w& (0+255),w,b
 23026  00390E  A0D8               	btfss	status,0,c
 23027  003910  D002               	goto	u16940
 23028  003912                     u16930:
 23029                           
 23030                           ; BSR set to: 1
 23031  003912  B3CB               	btfsc	_flags& (0+255),1,b
 23032  003914  D740               	goto	l17681
 23033  003916                     u16940:
 23034                           
 23035                           ; BSR set to: 1
 23036                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 23037  003916  5139               	movf	dtoa@s& (0+255),w,b
 23038  003918  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 23039  00391A  A4D8               	btfss	status,2,c
 23040  00391C  D002               	goto	u16960
 23041                           
 23042                           ; BSR set to: 1
 23043  00391E  A5CB               	btfss	_flags& (0+255),2,b
 23044  003920  D018               	goto	l17715
 23045  003922                     u16960:
 23046                           
 23047                           ; BSR set to: 1
 23048                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 23049  003922  0743               	decf	dtoa@i& (0+255),f,b
 23050  003924  A0D8               	btfss	status,0,c
 23051  003926  0744               	decf	(dtoa@i+1)& (0+255),f,b
 23052                           
 23053                           ; BSR set to: 1
 23054                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 23055  003928  5139               	movf	dtoa@s& (0+255),w,b
 23056  00392A  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 23057  00392C  A4D8               	btfss	status,2,c
 23058  00392E  D004               	goto	l17711
 23059                           
 23060                           ; BSR set to: 1
 23061  003930  0E00               	movlw	0
 23062  003932  6F34               	movwf	(_dtoa$5178+1)& (0+255),b
 23063  003934  0E2B               	movlw	43
 23064  003936  D003               	goto	L6
 23065  003938                     l17711:
 23066                           
 23067                           ; BSR set to: 1
 23068  003938  0E00               	movlw	0
 23069  00393A  6F34               	movwf	(_dtoa$5178+1)& (0+255),b
 23070  00393C  0E2D               	movlw	45
 23071  00393E                     L6:
 23072  00393E  6F33               	movwf	_dtoa$5178& (0+255),b
 23073                           
 23074                           ; BSR set to: 1
 23075  003940  0E89               	movlw	low _dbuf
 23076  003942  2543               	addwf	dtoa@i& (0+255),w,b
 23077  003944  6ED9               	movwf	fsr2l,c
 23078  003946  0E03               	movlw	high _dbuf
 23079  003948  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 23080  00394A  6EDA               	movwf	fsr2h,c
 23081  00394C  0060  F4CF  FFDF   	movff	_dtoa$5178,indf2
 23082  003952                     l17715:
 23083                           
 23084                           ; BSR set to: 1
 23085                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 23086  003952  0060  F484  F116   	movff	dtoa@fp,pad@fp
 23087  003958  0060  F488  F117   	movff	dtoa@fp+1,pad@fp+1
 23088  00395E  0E89               	movlw	low _dbuf
 23089  003960  2543               	addwf	dtoa@i& (0+255),w,b
 23090  003962  6F18               	movwf	pad@buf& (0+255),b
 23091  003964  0E03               	movlw	high _dbuf
 23092  003966  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 23093  003968  6F19               	movwf	(pad@buf+1)& (0+255),b
 23094  00396A  0060  F4DC  F11A   	movff	dtoa@w,pad@p
 23095  003970  0060  F4E0  F11B   	movff	dtoa@w+1,pad@p+1
 23096  003976  EC1C  F039         	call	_pad	;wreg free
 23097  00397A  0060  F458  F121   	movff	?_pad,?_dtoa
 23098  003980  0060  F45C  F122   	movff	?_pad+1,?_dtoa+1
 23099                           
 23100                           ; BSR set to: 1
 23101  003986  0012               	return		;funcret
 23102  003988                     __end_of_dtoa:
 23103                           	opt callstack 0
 23104                           
 23105 ;; *************** function _abs *****************
 23106 ;; Defined at:
 23107 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 23108 ;; Parameters:    Size  Location     Type
 23109 ;;  a               2   22[BANK1 ] int 
 23110 ;; Auto vars:     Size  Location     Type
 23111 ;;		None
 23112 ;; Return value:  Size  Location     Type
 23113 ;;                  2   22[BANK1 ] int 
 23114 ;; Registers used:
 23115 ;;		wreg, status,2, status,0
 23116 ;; Tracked objects:
 23117 ;;		On entry : 3F/1
 23118 ;;		On exit  : 3F/1
 23119 ;;		Unchanged: 0/0
 23120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23121 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23123 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23124 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23125 ;;Total ram usage:        4 bytes
 23126 ;; Hardware stack levels used:    1
 23127 ;; Hardware stack levels required when called:   16
 23128 ;; This function calls:
 23129 ;;		Nothing
 23130 ;; This function is called by:
 23131 ;;		_dtoa
 23132 ;; This function uses a non-reentrant model
 23133 ;;
 23134                           
 23135                           	psect	text172
 23136  0093AA                     __ptext172:
 23137                           	opt callstack 0
 23138  0093AA                     _abs:
 23139                           	opt callstack 10
 23140                           
 23141                           ; BSR set to: 1
 23142                           
 23143                           ; BSR set to: 1
 23144                           ;incstack = 0
 23145  0093AA  BF17               	btfsc	(abs@a+1)& (0+255),7,b
 23146  0093AC  D005               	goto	u16420
 23147  0093AE  5117               	movf	(abs@a+1)& (0+255),w,b
 23148  0093B0  E114               	bnz	l4283
 23149  0093B2  0516               	decf	abs@a& (0+255),w,b
 23150  0093B4  B0D8               	btfsc	status,0,c
 23151  0093B6  D011               	goto	l4283
 23152  0093B8                     u16420:
 23153                           
 23154                           ; BSR set to: 1
 23155  0093B8  0060  F458  F118   	movff	abs@a,??_abs
 23156  0093BE  0060  F45C  F119   	movff	abs@a+1,??_abs+1
 23157  0093C4  1F18               	comf	??_abs& (0+255),f,b
 23158  0093C6  1F19               	comf	(??_abs+1)& (0+255),f,b
 23159  0093C8  4B18               	infsnz	??_abs& (0+255),f,b
 23160  0093CA  2B19               	incf	(??_abs+1)& (0+255),f,b
 23161  0093CC  0060  F460  F116   	movff	??_abs,?_abs
 23162  0093D2  0060  F464  F117   	movff	??_abs+1,?_abs+1
 23163  0093D8  0012               	return	
 23164  0093DA                     l4283:
 23165                           
 23166                           ; BSR set to: 1
 23167  0093DA  0060  F458  F116   	movff	abs@a,?_abs
 23168  0093E0  0060  F45C  F117   	movff	abs@a+1,?_abs+1
 23169                           
 23170                           ; BSR set to: 1
 23171  0093E6  0012               	return		;funcret
 23172  0093E8                     __end_of_abs:
 23173                           	opt callstack 0
 23174                           
 23175 ;; *************** function ___aomod *****************
 23176 ;; Defined at:
 23177 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 23178 ;; Parameters:    Size  Location     Type
 23179 ;;  dividend        8    4[BANK1 ] long long 
 23180 ;;  divisor         8   12[BANK1 ] long long 
 23181 ;; Auto vars:     Size  Location     Type
 23182 ;;  sign            1   21[BANK1 ] unsigned char 
 23183 ;;  counter         1   20[BANK1 ] unsigned char 
 23184 ;; Return value:  Size  Location     Type
 23185 ;;                  8    4[BANK1 ] long long 
 23186 ;; Registers used:
 23187 ;;		wreg, status,2, status,0
 23188 ;; Tracked objects:
 23189 ;;		On entry : 3F/1
 23190 ;;		On exit  : 3F/1
 23191 ;;		Unchanged: 0/0
 23192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23193 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23194 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23196 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23197 ;;Total ram usage:       18 bytes
 23198 ;; Hardware stack levels used:    1
 23199 ;; Hardware stack levels required when called:   16
 23200 ;; This function calls:
 23201 ;;		Nothing
 23202 ;; This function is called by:
 23203 ;;		_dtoa
 23204 ;; This function uses a non-reentrant model
 23205 ;;
 23206                           
 23207                           	psect	text173
 23208  005EE4                     __ptext173:
 23209                           	opt callstack 0
 23210  005EE4                     ___aomod:
 23211                           	opt callstack 10
 23212                           
 23213                           ; BSR set to: 1
 23214                           
 23215                           ; BSR set to: 1
 23216                           ;incstack = 0
 23217  005EE4  0E00               	movlw	0
 23218  005EE6  6F15               	movwf	___aomod@sign& (0+255),b
 23219                           
 23220                           ; BSR set to: 1
 23221  005EE8  AF0B               	btfss	(___aomod@dividend+7)& (0+255),7,b
 23222  005EEA  D012               	goto	l17475
 23223                           
 23224                           ; BSR set to: 1
 23225  005EEC  1F0B               	comf	(___aomod@dividend+7)& (0+255),f,b
 23226  005EEE  1F0A               	comf	(___aomod@dividend+6)& (0+255),f,b
 23227  005EF0  1F09               	comf	(___aomod@dividend+5)& (0+255),f,b
 23228  005EF2  1F08               	comf	(___aomod@dividend+4)& (0+255),f,b
 23229  005EF4  1F07               	comf	(___aomod@dividend+3)& (0+255),f,b
 23230  005EF6  1F06               	comf	(___aomod@dividend+2)& (0+255),f,b
 23231  005EF8  1F05               	comf	(___aomod@dividend+1)& (0+255),f,b
 23232  005EFA  6D04               	negf	___aomod@dividend& (0+255),b
 23233  005EFC  0E00               	movlw	0
 23234  005EFE  2305               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 23235  005F00  2306               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 23236  005F02  2307               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 23237  005F04  2308               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 23238  005F06  2309               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 23239  005F08  230A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 23240  005F0A  230B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 23241                           
 23242                           ; BSR set to: 1
 23243  005F0C  0E01               	movlw	1
 23244  005F0E  6F15               	movwf	___aomod@sign& (0+255),b
 23245  005F10                     l17475:
 23246                           
 23247                           ; BSR set to: 1
 23248  005F10  AF13               	btfss	(___aomod@divisor+7)& (0+255),7,b
 23249  005F12  D010               	goto	l17479
 23250                           
 23251                           ; BSR set to: 1
 23252  005F14  1F13               	comf	(___aomod@divisor+7)& (0+255),f,b
 23253  005F16  1F12               	comf	(___aomod@divisor+6)& (0+255),f,b
 23254  005F18  1F11               	comf	(___aomod@divisor+5)& (0+255),f,b
 23255  005F1A  1F10               	comf	(___aomod@divisor+4)& (0+255),f,b
 23256  005F1C  1F0F               	comf	(___aomod@divisor+3)& (0+255),f,b
 23257  005F1E  1F0E               	comf	(___aomod@divisor+2)& (0+255),f,b
 23258  005F20  1F0D               	comf	(___aomod@divisor+1)& (0+255),f,b
 23259  005F22  6D0C               	negf	___aomod@divisor& (0+255),b
 23260  005F24  0E00               	movlw	0
 23261  005F26  230D               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 23262  005F28  230E               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 23263  005F2A  230F               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 23264  005F2C  2310               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 23265  005F2E  2311               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 23266  005F30  2312               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 23267  005F32  2313               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 23268  005F34                     l17479:
 23269                           
 23270                           ; BSR set to: 1
 23271  005F34  510C               	movf	___aomod@divisor& (0+255),w,b
 23272  005F36  110D               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 23273  005F38  110E               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 23274  005F3A  110F               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 23275  005F3C  1110               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 23276  005F3E  1111               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 23277  005F40  1112               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 23278  005F42  1113               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 23279  005F44  B4D8               	btfsc	status,2,c
 23280  005F46  D03C               	goto	l17495
 23281                           
 23282                           ; BSR set to: 1
 23283  005F48  0E01               	movlw	1
 23284  005F4A  6F14               	movwf	___aomod@counter& (0+255),b
 23285  005F4C  D00A               	goto	l17485
 23286  005F4E                     l17483:
 23287                           
 23288                           ; BSR set to: 1
 23289  005F4E  90D8               	bcf	status,0,c
 23290  005F50  370C               	rlcf	___aomod@divisor& (0+255),f,b
 23291  005F52  370D               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 23292  005F54  370E               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 23293  005F56  370F               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 23294  005F58  3710               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 23295  005F5A  3711               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 23296  005F5C  3712               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 23297  005F5E  3713               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 23298  005F60  2B14               	incf	___aomod@counter& (0+255),f,b
 23299  005F62                     l17485:
 23300                           
 23301                           ; BSR set to: 1
 23302  005F62  AF13               	btfss	(___aomod@divisor+7)& (0+255),7,b
 23303  005F64  D7F4               	goto	l17483
 23304  005F66                     u16620:
 23305                           
 23306                           ; BSR set to: 1
 23307  005F66  510C               	movf	___aomod@divisor& (0+255),w,b
 23308  005F68  5D04               	subwf	___aomod@dividend& (0+255),w,b
 23309  005F6A  510D               	movf	(___aomod@divisor+1)& (0+255),w,b
 23310  005F6C  5905               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 23311  005F6E  510E               	movf	(___aomod@divisor+2)& (0+255),w,b
 23312  005F70  5906               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 23313  005F72  510F               	movf	(___aomod@divisor+3)& (0+255),w,b
 23314  005F74  5907               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 23315  005F76  5110               	movf	(___aomod@divisor+4)& (0+255),w,b
 23316  005F78  5908               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 23317  005F7A  5111               	movf	(___aomod@divisor+5)& (0+255),w,b
 23318  005F7C  5909               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 23319  005F7E  5112               	movf	(___aomod@divisor+6)& (0+255),w,b
 23320  005F80  590A               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 23321  005F82  5113               	movf	(___aomod@divisor+7)& (0+255),w,b
 23322  005F84  590B               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 23323  005F86  A0D8               	btfss	status,0,c
 23324  005F88  D010               	goto	l17491
 23325                           
 23326                           ; BSR set to: 1
 23327  005F8A  510C               	movf	___aomod@divisor& (0+255),w,b
 23328  005F8C  5F04               	subwf	___aomod@dividend& (0+255),f,b
 23329  005F8E  510D               	movf	(___aomod@divisor+1)& (0+255),w,b
 23330  005F90  5B05               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 23331  005F92  510E               	movf	(___aomod@divisor+2)& (0+255),w,b
 23332  005F94  5B06               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 23333  005F96  510F               	movf	(___aomod@divisor+3)& (0+255),w,b
 23334  005F98  5B07               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 23335  005F9A  5110               	movf	(___aomod@divisor+4)& (0+255),w,b
 23336  005F9C  5B08               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 23337  005F9E  5111               	movf	(___aomod@divisor+5)& (0+255),w,b
 23338  005FA0  5B09               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 23339  005FA2  5112               	movf	(___aomod@divisor+6)& (0+255),w,b
 23340  005FA4  5B0A               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 23341  005FA6  5113               	movf	(___aomod@divisor+7)& (0+255),w,b
 23342  005FA8  5B0B               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 23343  005FAA                     l17491:
 23344                           
 23345                           ; BSR set to: 1
 23346  005FAA  90D8               	bcf	status,0,c
 23347  005FAC  3313               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 23348  005FAE  3312               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 23349  005FB0  3311               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 23350  005FB2  3310               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 23351  005FB4  330F               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 23352  005FB6  330E               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 23353  005FB8  330D               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 23354  005FBA  330C               	rrcf	___aomod@divisor& (0+255),f,b
 23355                           
 23356                           ; BSR set to: 1
 23357  005FBC  2F14               	decfsz	___aomod@counter& (0+255),f,b
 23358  005FBE  D7D3               	goto	u16620
 23359  005FC0                     l17495:
 23360                           
 23361                           ; BSR set to: 1
 23362  005FC0  5115               	movf	___aomod@sign& (0+255),w,b
 23363  005FC2  B4D8               	btfsc	status,2,c
 23364  005FC4  D010               	goto	l17499
 23365                           
 23366                           ; BSR set to: 1
 23367  005FC6  1F0B               	comf	(___aomod@dividend+7)& (0+255),f,b
 23368  005FC8  1F0A               	comf	(___aomod@dividend+6)& (0+255),f,b
 23369  005FCA  1F09               	comf	(___aomod@dividend+5)& (0+255),f,b
 23370  005FCC  1F08               	comf	(___aomod@dividend+4)& (0+255),f,b
 23371  005FCE  1F07               	comf	(___aomod@dividend+3)& (0+255),f,b
 23372  005FD0  1F06               	comf	(___aomod@dividend+2)& (0+255),f,b
 23373  005FD2  1F05               	comf	(___aomod@dividend+1)& (0+255),f,b
 23374  005FD4  6D04               	negf	___aomod@dividend& (0+255),b
 23375  005FD6  0E00               	movlw	0
 23376  005FD8  2305               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 23377  005FDA  2306               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 23378  005FDC  2307               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 23379  005FDE  2308               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 23380  005FE0  2309               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 23381  005FE2  230A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 23382  005FE4  230B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 23383  005FE6                     l17499:
 23384                           
 23385                           ; BSR set to: 1
 23386  005FE6  0060  F410  F104   	movff	___aomod@dividend,?___aomod
 23387  005FEC  0060  F414  F105   	movff	___aomod@dividend+1,?___aomod+1
 23388  005FF2  0060  F418  F106   	movff	___aomod@dividend+2,?___aomod+2
 23389  005FF8  0060  F41C  F107   	movff	___aomod@dividend+3,?___aomod+3
 23390  005FFE  0060  F420  F108   	movff	___aomod@dividend+4,?___aomod+4
 23391  006004  0060  F424  F109   	movff	___aomod@dividend+5,?___aomod+5
 23392  00600A  0060  F428  F10A   	movff	___aomod@dividend+6,?___aomod+6
 23393  006010  0060  F42C  F10B   	movff	___aomod@dividend+7,?___aomod+7
 23394                           
 23395                           ; BSR set to: 1
 23396  006016  0012               	return		;funcret
 23397  006018                     __end_of___aomod:
 23398                           	opt callstack 0
 23399                           
 23400 ;; *************** function ___aodiv *****************
 23401 ;; Defined at:
 23402 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;  dividend        8    4[BANK1 ] long long 
 23405 ;;  divisor         8   12[BANK1 ] long long 
 23406 ;; Auto vars:     Size  Location     Type
 23407 ;;  quotient        8   22[BANK1 ] long long 
 23408 ;;  sign            1   21[BANK1 ] unsigned char 
 23409 ;;  counter         1   20[BANK1 ] unsigned char 
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  8    4[BANK1 ] long long 
 23412 ;; Registers used:
 23413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23414 ;; Tracked objects:
 23415 ;;		On entry : 3F/1
 23416 ;;		On exit  : 3F/1
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23419 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23420 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23422 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23423 ;;Total ram usage:       26 bytes
 23424 ;; Hardware stack levels used:    1
 23425 ;; Hardware stack levels required when called:   16
 23426 ;; This function calls:
 23427 ;;		Nothing
 23428 ;; This function is called by:
 23429 ;;		_dtoa
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           	psect	text174
 23434  0059B0                     __ptext174:
 23435                           	opt callstack 0
 23436  0059B0                     ___aodiv:
 23437                           	opt callstack 10
 23438                           
 23439                           ; BSR set to: 1
 23440                           
 23441                           ; BSR set to: 1
 23442                           ;incstack = 0
 23443  0059B0  0E00               	movlw	0
 23444  0059B2  6F15               	movwf	___aodiv@sign& (0+255),b
 23445                           
 23446                           ; BSR set to: 1
 23447  0059B4  AF13               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 23448  0059B6  D012               	goto	l17431
 23449                           
 23450                           ; BSR set to: 1
 23451  0059B8  1F13               	comf	(___aodiv@divisor+7)& (0+255),f,b
 23452  0059BA  1F12               	comf	(___aodiv@divisor+6)& (0+255),f,b
 23453  0059BC  1F11               	comf	(___aodiv@divisor+5)& (0+255),f,b
 23454  0059BE  1F10               	comf	(___aodiv@divisor+4)& (0+255),f,b
 23455  0059C0  1F0F               	comf	(___aodiv@divisor+3)& (0+255),f,b
 23456  0059C2  1F0E               	comf	(___aodiv@divisor+2)& (0+255),f,b
 23457  0059C4  1F0D               	comf	(___aodiv@divisor+1)& (0+255),f,b
 23458  0059C6  6D0C               	negf	___aodiv@divisor& (0+255),b
 23459  0059C8  0E00               	movlw	0
 23460  0059CA  230D               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 23461  0059CC  230E               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 23462  0059CE  230F               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 23463  0059D0  2310               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 23464  0059D2  2311               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 23465  0059D4  2312               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 23466  0059D6  2313               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 23467                           
 23468                           ; BSR set to: 1
 23469  0059D8  0E01               	movlw	1
 23470  0059DA  6F15               	movwf	___aodiv@sign& (0+255),b
 23471  0059DC                     l17431:
 23472                           
 23473                           ; BSR set to: 1
 23474  0059DC  AF0B               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 23475  0059DE  D012               	goto	l17437
 23476                           
 23477                           ; BSR set to: 1
 23478  0059E0  1F0B               	comf	(___aodiv@dividend+7)& (0+255),f,b
 23479  0059E2  1F0A               	comf	(___aodiv@dividend+6)& (0+255),f,b
 23480  0059E4  1F09               	comf	(___aodiv@dividend+5)& (0+255),f,b
 23481  0059E6  1F08               	comf	(___aodiv@dividend+4)& (0+255),f,b
 23482  0059E8  1F07               	comf	(___aodiv@dividend+3)& (0+255),f,b
 23483  0059EA  1F06               	comf	(___aodiv@dividend+2)& (0+255),f,b
 23484  0059EC  1F05               	comf	(___aodiv@dividend+1)& (0+255),f,b
 23485  0059EE  6D04               	negf	___aodiv@dividend& (0+255),b
 23486  0059F0  0E00               	movlw	0
 23487  0059F2  2305               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 23488  0059F4  2306               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 23489  0059F6  2307               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 23490  0059F8  2308               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 23491  0059FA  2309               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 23492  0059FC  230A               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 23493  0059FE  230B               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 23494                           
 23495                           ; BSR set to: 1
 23496  005A00  0E01               	movlw	1
 23497  005A02  1B15               	xorwf	___aodiv@sign& (0+255),f,b
 23498  005A04                     l17437:
 23499                           
 23500                           ; BSR set to: 1
 23501  005A04  EE20  F116         	lfsr	2,___aodiv@quotient
 23502  005A08  0E07               	movlw	7
 23503  005A0A                     u16541:
 23504  005A0A  6ADE               	clrf	postinc2,c
 23505  005A0C  06E8               	decf	wreg,f,c
 23506  005A0E  E2FD               	bc	u16541
 23507                           
 23508                           ; BSR set to: 1
 23509  005A10  510C               	movf	___aodiv@divisor& (0+255),w,b
 23510  005A12  110D               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 23511  005A14  110E               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 23512  005A16  110F               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 23513  005A18  1110               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 23514  005A1A  1111               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 23515  005A1C  1112               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 23516  005A1E  1113               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 23517  005A20  B4D8               	btfsc	status,2,c
 23518  005A22  D046               	goto	l17459
 23519                           
 23520                           ; BSR set to: 1
 23521  005A24  0E01               	movlw	1
 23522  005A26  6F14               	movwf	___aodiv@counter& (0+255),b
 23523  005A28  D00A               	goto	l17445
 23524  005A2A                     l17443:
 23525                           
 23526                           ; BSR set to: 1
 23527  005A2A  90D8               	bcf	status,0,c
 23528  005A2C  370C               	rlcf	___aodiv@divisor& (0+255),f,b
 23529  005A2E  370D               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 23530  005A30  370E               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 23531  005A32  370F               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 23532  005A34  3710               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 23533  005A36  3711               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 23534  005A38  3712               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 23535  005A3A  3713               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 23536  005A3C  2B14               	incf	___aodiv@counter& (0+255),f,b
 23537  005A3E                     l17445:
 23538                           
 23539                           ; BSR set to: 1
 23540  005A3E  AF13               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 23541  005A40  D7F4               	goto	l17443
 23542  005A42                     u16560:
 23543                           
 23544                           ; BSR set to: 1
 23545  005A42  90D8               	bcf	status,0,c
 23546  005A44  3716               	rlcf	___aodiv@quotient& (0+255),f,b
 23547  005A46  3717               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 23548  005A48  3718               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 23549  005A4A  3719               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 23550  005A4C  371A               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 23551  005A4E  371B               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 23552  005A50  371C               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 23553  005A52  371D               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 23554                           
 23555                           ; BSR set to: 1
 23556  005A54  510C               	movf	___aodiv@divisor& (0+255),w,b
 23557  005A56  5D04               	subwf	___aodiv@dividend& (0+255),w,b
 23558  005A58  510D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 23559  005A5A  5905               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 23560  005A5C  510E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 23561  005A5E  5906               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 23562  005A60  510F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 23563  005A62  5907               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 23564  005A64  5110               	movf	(___aodiv@divisor+4)& (0+255),w,b
 23565  005A66  5908               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 23566  005A68  5111               	movf	(___aodiv@divisor+5)& (0+255),w,b
 23567  005A6A  5909               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 23568  005A6C  5112               	movf	(___aodiv@divisor+6)& (0+255),w,b
 23569  005A6E  590A               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 23570  005A70  5113               	movf	(___aodiv@divisor+7)& (0+255),w,b
 23571  005A72  590B               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 23572  005A74  A0D8               	btfss	status,0,c
 23573  005A76  D011               	goto	l17455
 23574                           
 23575                           ; BSR set to: 1
 23576  005A78  510C               	movf	___aodiv@divisor& (0+255),w,b
 23577  005A7A  5F04               	subwf	___aodiv@dividend& (0+255),f,b
 23578  005A7C  510D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 23579  005A7E  5B05               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 23580  005A80  510E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 23581  005A82  5B06               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 23582  005A84  510F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 23583  005A86  5B07               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 23584  005A88  5110               	movf	(___aodiv@divisor+4)& (0+255),w,b
 23585  005A8A  5B08               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 23586  005A8C  5111               	movf	(___aodiv@divisor+5)& (0+255),w,b
 23587  005A8E  5B09               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 23588  005A90  5112               	movf	(___aodiv@divisor+6)& (0+255),w,b
 23589  005A92  5B0A               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 23590  005A94  5113               	movf	(___aodiv@divisor+7)& (0+255),w,b
 23591  005A96  5B0B               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 23592                           
 23593                           ; BSR set to: 1
 23594  005A98  8116               	bsf	___aodiv@quotient& (0+255),0,b
 23595  005A9A                     l17455:
 23596                           
 23597                           ; BSR set to: 1
 23598  005A9A  90D8               	bcf	status,0,c
 23599  005A9C  3313               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 23600  005A9E  3312               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 23601  005AA0  3311               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 23602  005AA2  3310               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 23603  005AA4  330F               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 23604  005AA6  330E               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 23605  005AA8  330D               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 23606  005AAA  330C               	rrcf	___aodiv@divisor& (0+255),f,b
 23607                           
 23608                           ; BSR set to: 1
 23609  005AAC  2F14               	decfsz	___aodiv@counter& (0+255),f,b
 23610  005AAE  D7C9               	goto	u16560
 23611  005AB0                     l17459:
 23612                           
 23613                           ; BSR set to: 1
 23614  005AB0  5115               	movf	___aodiv@sign& (0+255),w,b
 23615  005AB2  B4D8               	btfsc	status,2,c
 23616  005AB4  D010               	goto	l17463
 23617                           
 23618                           ; BSR set to: 1
 23619  005AB6  1F1D               	comf	(___aodiv@quotient+7)& (0+255),f,b
 23620  005AB8  1F1C               	comf	(___aodiv@quotient+6)& (0+255),f,b
 23621  005ABA  1F1B               	comf	(___aodiv@quotient+5)& (0+255),f,b
 23622  005ABC  1F1A               	comf	(___aodiv@quotient+4)& (0+255),f,b
 23623  005ABE  1F19               	comf	(___aodiv@quotient+3)& (0+255),f,b
 23624  005AC0  1F18               	comf	(___aodiv@quotient+2)& (0+255),f,b
 23625  005AC2  1F17               	comf	(___aodiv@quotient+1)& (0+255),f,b
 23626  005AC4  6D16               	negf	___aodiv@quotient& (0+255),b
 23627  005AC6  0E00               	movlw	0
 23628  005AC8  2317               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 23629  005ACA  2318               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 23630  005ACC  2319               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 23631  005ACE  231A               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 23632  005AD0  231B               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 23633  005AD2  231C               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 23634  005AD4  231D               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 23635  005AD6                     l17463:
 23636                           
 23637                           ; BSR set to: 1
 23638  005AD6  0060  F458  F104   	movff	___aodiv@quotient,?___aodiv
 23639  005ADC  0060  F45C  F105   	movff	___aodiv@quotient+1,?___aodiv+1
 23640  005AE2  0060  F460  F106   	movff	___aodiv@quotient+2,?___aodiv+2
 23641  005AE8  0060  F464  F107   	movff	___aodiv@quotient+3,?___aodiv+3
 23642  005AEE  0060  F468  F108   	movff	___aodiv@quotient+4,?___aodiv+4
 23643  005AF4  0060  F46C  F109   	movff	___aodiv@quotient+5,?___aodiv+5
 23644  005AFA  0060  F470  F10A   	movff	___aodiv@quotient+6,?___aodiv+6
 23645  005B00  0060  F474  F10B   	movff	___aodiv@quotient+7,?___aodiv+7
 23646                           
 23647                           ; BSR set to: 1
 23648  005B06  0012               	return		;funcret
 23649  005B08                     __end_of___aodiv:
 23650                           	opt callstack 0
 23651                           
 23652 ;; *************** function _ctoa *****************
 23653 ;; Defined at:
 23654 ;;		line 259 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23655 ;; Parameters:    Size  Location     Type
 23656 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 23657 ;;		 -> sprintf@f(6), NULL(0), 
 23658 ;;  c               1   35[BANK1 ] unsigned char 
 23659 ;; Auto vars:     Size  Location     Type
 23660 ;;  w               2   36[BANK1 ] int 
 23661 ;;  l               2    0        int 
 23662 ;; Return value:  Size  Location     Type
 23663 ;;                  2   33[BANK1 ] int 
 23664 ;; Registers used:
 23665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23666 ;; Tracked objects:
 23667 ;;		On entry : 3F/1
 23668 ;;		On exit  : 3F/1
 23669 ;;		Unchanged: 0/0
 23670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23671 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23672 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23674 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23675 ;;Total ram usage:        5 bytes
 23676 ;; Hardware stack levels used:    1
 23677 ;; Hardware stack levels required when called:   21
 23678 ;; This function calls:
 23679 ;;		_pad
 23680 ;; This function is called by:
 23681 ;;		_vfpfcnvrt
 23682 ;; This function uses a non-reentrant model
 23683 ;;
 23684                           
 23685                           	psect	text175
 23686  008A62                     __ptext175:
 23687                           	opt callstack 0
 23688  008A62                     _ctoa:
 23689                           	opt callstack 6
 23690                           
 23691                           ; BSR set to: 1
 23692                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 23693                           
 23694                           ; BSR set to: 1
 23695                           ;incstack = 0
 23696  008A62  51C7               	movf	_width& (0+255),w,b
 23697  008A64  11C8               	iorwf	(_width+1)& (0+255),w,b
 23698  008A66  A4D8               	btfss	status,2,c
 23699  008A68  D007               	goto	l17647
 23700                           
 23701                           ; BSR set to: 1
 23702  008A6A  0060  F71C  F124   	movff	_width,ctoa@w
 23703  008A70  0060  F720  F125   	movff	_width+1,ctoa@w+1
 23704  008A76  D006               	goto	l17649
 23705  008A78                     l17647:
 23706                           
 23707                           ; BSR set to: 1
 23708  008A78  0EFF               	movlw	255
 23709  008A7A  25C7               	addwf	_width& (0+255),w,b
 23710  008A7C  6F24               	movwf	ctoa@w& (0+255),b
 23711  008A7E  0EFF               	movlw	255
 23712  008A80  21C8               	addwfc	(_width+1)& (0+255),w,b
 23713  008A82  6F25               	movwf	(ctoa@w+1)& (0+255),b
 23714  008A84                     l17649:
 23715                           
 23716                           ; BSR set to: 1
 23717                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 23718  008A84  0060  F48C  F389   	movff	ctoa@c,_dbuf
 23719                           
 23720                           ; BSR set to: 1
 23721                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 23722  008A8A  0E00               	movlw	0
 23723  008A8C  0103               	movlb	3	; () banked
 23724  008A8E  6F8A               	movwf	(_dbuf+1)& (0+255),b
 23725                           
 23726                           ; BSR set to: 3
 23727                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 23728  008A90  0060  F484  F116   	movff	ctoa@fp,pad@fp
 23729  008A96  0060  F488  F117   	movff	ctoa@fp+1,pad@fp+1
 23730  008A9C  0E89               	movlw	low _dbuf
 23731  008A9E  0101               	movlb	1	; () banked
 23732  008AA0  6F18               	movwf	pad@buf& (0+255),b
 23733  008AA2  0E03               	movlw	high _dbuf
 23734  008AA4  6F19               	movwf	(pad@buf+1)& (0+255),b
 23735  008AA6  0060  F490  F11A   	movff	ctoa@w,pad@p
 23736  008AAC  0060  F494  F11B   	movff	ctoa@w+1,pad@p+1
 23737  008AB2  EC1C  F039         	call	_pad	;wreg free
 23738  008AB6  0060  F458  F121   	movff	?_pad,?_ctoa
 23739  008ABC  0060  F45C  F122   	movff	?_pad+1,?_ctoa+1
 23740                           
 23741                           ; BSR set to: 1
 23742  008AC2  0012               	return		;funcret
 23743  008AC4                     __end_of_ctoa:
 23744                           	opt callstack 0
 23745                           
 23746 ;; *************** function _pad *****************
 23747 ;; Defined at:
 23748 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23749 ;; Parameters:    Size  Location     Type
 23750 ;;  fp              2   22[BANK1 ] PTR struct _IO_FILE
 23751 ;;		 -> sprintf@f(6), NULL(0), 
 23752 ;;  buf             2   24[BANK1 ] PTR unsigned char 
 23753 ;;		 -> dbuf(32), 
 23754 ;;  p               2   26[BANK1 ] int 
 23755 ;; Auto vars:     Size  Location     Type
 23756 ;;  w               2   31[BANK1 ] int 
 23757 ;;  i               2   29[BANK1 ] int 
 23758 ;; Return value:  Size  Location     Type
 23759 ;;                  2   22[BANK1 ] int 
 23760 ;; Registers used:
 23761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23762 ;; Tracked objects:
 23763 ;;		On entry : 3F/1
 23764 ;;		On exit  : 3F/1
 23765 ;;		Unchanged: 0/0
 23766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23767 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23768 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23769 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23770 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23771 ;;Total ram usage:       11 bytes
 23772 ;; Hardware stack levels used:    1
 23773 ;; Hardware stack levels required when called:   20
 23774 ;; This function calls:
 23775 ;;		_fputc
 23776 ;;		_fputs
 23777 ;;		_strlen
 23778 ;; This function is called by:
 23779 ;;		_ctoa
 23780 ;;		_dtoa
 23781 ;;		_xtoa
 23782 ;; This function uses a non-reentrant model
 23783 ;;
 23784                           
 23785                           	psect	text176
 23786  007238                     __ptext176:
 23787                           	opt callstack 0
 23788  007238                     _pad:
 23789                           	opt callstack 6
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 23793                           
 23794                           ; BSR set to: 1
 23795                           ;incstack = 0
 23796  007238  A1CB               	btfss	_flags& (0+255),0,b
 23797  00723A  D00E               	goto	l17373
 23798                           
 23799                           ; BSR set to: 1
 23800                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 23801  00723C  0060  F460  F10F   	movff	pad@buf,fputs@s
 23802  007242  0060  F464  F110   	movff	pad@buf+1,fputs@s+1
 23803  007248  0060  F458  F111   	movff	pad@fp,fputs@fp
 23804  00724E  0060  F45C  F112   	movff	pad@fp+1,fputs@fp+1
 23805  007254  ECF4  F049         	call	_fputs	;wreg free
 23806  007258                     l17373:
 23807                           
 23808                           ; BSR set to: 1
 23809                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 23810  007258  BF1B               	btfsc	(pad@p+1)& (0+255),7,b
 23811  00725A  D007               	goto	l17377
 23812                           
 23813                           ; BSR set to: 1
 23814  00725C  0060  F468  F11F   	movff	pad@p,pad@w
 23815  007262  0060  F46C  F120   	movff	pad@p+1,pad@w+1
 23816  007268  D004               	goto	l3473
 23817  00726A                     l17377:
 23818                           
 23819                           ; BSR set to: 1
 23820  00726A  0E00               	movlw	0
 23821  00726C  6F20               	movwf	(pad@w+1)& (0+255),b
 23822  00726E  0E00               	movlw	0
 23823  007270  6F1F               	movwf	pad@w& (0+255),b
 23824  007272                     l3473:
 23825                           
 23826                           ; BSR set to: 1
 23827                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23828  007272  0E00               	movlw	0
 23829  007274  6F1E               	movwf	(pad@i+1)& (0+255),b
 23830  007276  0E00               	movlw	0
 23831  007278  6F1D               	movwf	pad@i& (0+255),b
 23832                           
 23833                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 23834  00727A  D00E               	goto	l17383
 23835  00727C                     l17379:
 23836                           
 23837                           ; BSR set to: 1
 23838                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 23839  00727C  0E00               	movlw	0
 23840  00727E  6F07               	movwf	(fputc@c+1)& (0+255),b
 23841  007280  0E20               	movlw	32
 23842  007282  6F06               	movwf	fputc@c& (0+255),b
 23843  007284  0060  F458  F108   	movff	pad@fp,fputc@fp
 23844  00728A  0060  F45C  F109   	movff	pad@fp+1,fputc@fp+1
 23845  007290  ECB3  F037         	call	_fputc	;wreg free
 23846                           
 23847                           ; BSR set to: 1
 23848                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23849  007294  4B1D               	infsnz	pad@i& (0+255),f,b
 23850  007296  2B1E               	incf	(pad@i+1)& (0+255),f,b
 23851  007298                     l17383:
 23852                           
 23853                           ; BSR set to: 1
 23854                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 23855  007298  511F               	movf	pad@w& (0+255),w,b
 23856  00729A  5D1D               	subwf	pad@i& (0+255),w,b
 23857  00729C  511E               	movf	(pad@i+1)& (0+255),w,b
 23858  00729E  0A80               	xorlw	128
 23859  0072A0  6F1C               	movwf	??_pad& (0+255),b
 23860  0072A2  5120               	movf	(pad@w+1)& (0+255),w,b
 23861  0072A4  0A80               	xorlw	128
 23862  0072A6  591C               	subwfb	??_pad& (0+255),w,b
 23863  0072A8  A0D8               	btfss	status,0,c
 23864  0072AA  D7E8               	goto	l17379
 23865                           
 23866                           ; BSR set to: 1
 23867                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 23868  0072AC  B1CB               	btfsc	_flags& (0+255),0,b
 23869  0072AE  D00E               	goto	l17387
 23870                           
 23871                           ; BSR set to: 1
 23872                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 23873  0072B0  0060  F460  F10F   	movff	pad@buf,fputs@s
 23874  0072B6  0060  F464  F110   	movff	pad@buf+1,fputs@s+1
 23875  0072BC  0060  F458  F111   	movff	pad@fp,fputs@fp
 23876  0072C2  0060  F45C  F112   	movff	pad@fp+1,fputs@fp+1
 23877  0072C8  ECF4  F049         	call	_fputs	;wreg free
 23878  0072CC                     l17387:
 23879                           
 23880                           ; BSR set to: 1
 23881                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 23882  0072CC  0060  F460  F104   	movff	pad@buf,strlen@s
 23883  0072D2  0060  F464  F105   	movff	pad@buf+1,strlen@s+1
 23884  0072D8  ECC9  F046         	call	_strlen	;wreg free
 23885  0072DC  511F               	movf	pad@w& (0+255),w,b
 23886  0072DE  2504               	addwf	?_strlen& (0+255),w,b
 23887  0072E0  6F16               	movwf	?_pad& (0+255),b
 23888  0072E2  5120               	movf	(pad@w+1)& (0+255),w,b
 23889  0072E4  2105               	addwfc	(?_strlen+1)& (0+255),w,b
 23890  0072E6  6F17               	movwf	(?_pad+1)& (0+255),b
 23891                           
 23892                           ; BSR set to: 1
 23893  0072E8  0012               	return		;funcret
 23894  0072EA                     __end_of_pad:
 23895                           	opt callstack 0
 23896                           
 23897 ;; *************** function _strlen *****************
 23898 ;; Defined at:
 23899 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 23900 ;; Parameters:    Size  Location     Type
 23901 ;;  s               2    4[BANK1 ] PTR const unsigned char 
 23902 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 23903 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 23904 ;;		 -> STR_27(3), STR_26(3), alarmData(399), msg3(20), 
 23905 ;;		 -> STR_11(3), msg2(20), msg1(20), msg4(20), 
 23906 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 23907 ;; Auto vars:     Size  Location     Type
 23908 ;;  a               2    6[BANK1 ] PTR const unsigned char 
 23909 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 23910 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 23911 ;;		 -> STR_27(3), STR_26(3), alarmData(399), msg3(20), 
 23912 ;;		 -> STR_11(3), msg2(20), msg1(20), msg4(20), 
 23913 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 23914 ;; Return value:  Size  Location     Type
 23915 ;;                  2    4[BANK1 ] unsigned int 
 23916 ;; Registers used:
 23917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 23918 ;; Tracked objects:
 23919 ;;		On entry : 3F/1
 23920 ;;		On exit  : 3F/1
 23921 ;;		Unchanged: 0/0
 23922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23923 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23924 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23926 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23927 ;;Total ram usage:        4 bytes
 23928 ;; Hardware stack levels used:    1
 23929 ;; Hardware stack levels required when called:   16
 23930 ;; This function calls:
 23931 ;;		Nothing
 23932 ;; This function is called by:
 23933 ;;		_LCDMessage
 23934 ;;		_pad
 23935 ;;		_stoa
 23936 ;; This function uses a non-reentrant model
 23937 ;;
 23938                           
 23939                           	psect	text177
 23940  008D92                     __ptext177:
 23941                           	opt callstack 0
 23942  008D92                     _strlen:
 23943                           	opt callstack 9
 23944                           
 23945                           ; BSR set to: 1
 23946                           
 23947                           ; BSR set to: 1
 23948                           ;incstack = 0
 23949  008D92  0060  F410  F106   	movff	strlen@s,strlen@a
 23950  008D98  0060  F414  F107   	movff	strlen@s+1,strlen@a+1
 23951  008D9E  D003               	goto	l17123
 23952  008DA0                     l17121:
 23953  008DA0  0101               	movlb	1	; () banked
 23954  008DA2  4B04               	infsnz	strlen@s& (0+255),f,b
 23955  008DA4  2B05               	incf	(strlen@s+1)& (0+255),f,b
 23956  008DA6                     l17123:
 23957                           
 23958                           ; BSR set to: 1
 23959  008DA6  0060  F413  FFF6   	movff	strlen@s,tblptrl
 23960  008DAC  0060  F417  FFF7   	movff	strlen@s+1,tblptrh
 23961  008DB2  0E00               	movlw	low (__mediumconst shr (0+16))
 23962  008DB4  6EF8               	movwf	tblptru,c
 23963  008DB6  0E0F               	movlw	(high __ramtop+-1)
 23964  008DB8  64F7               	cpfsgt	tblptrh,c
 23965  008DBA  D003               	bra	u15837
 23966  008DBC  0008               	tblrd		*
 23967  008DBE  50F5               	movf	tablat,w,c
 23968  008DC0  D007               	bra	u15830
 23969  008DC2                     u15837:
 23970  008DC2  006F FFDB FFE1     	movff	tblptrl,fsr1l
 23971  008DC8  006F FFDF FFE2     	movff	tblptrh,fsr1h
 23972  008DCE  50E7               	movf	indf1,w,c
 23973  008DD0                     u15830:
 23974  008DD0  0900               	iorlw	0
 23975  008DD2  A4D8               	btfss	status,2,c
 23976  008DD4  D7E5               	goto	l17121
 23977  008DD6  0101               	movlb	1	; () banked
 23978  008DD8  5106               	movf	strlen@a& (0+255),w,b
 23979  008DDA  5D04               	subwf	strlen@s& (0+255),w,b
 23980  008DDC  6F04               	movwf	?_strlen& (0+255),b
 23981  008DDE  5107               	movf	(strlen@a+1)& (0+255),w,b
 23982  008DE0  5905               	subwfb	(strlen@s+1)& (0+255),w,b
 23983  008DE2  6F05               	movwf	(?_strlen+1)& (0+255),b
 23984                           
 23985                           ; BSR set to: 1
 23986  008DE4  0012               	return		;funcret
 23987  008DE6                     __end_of_strlen:
 23988                           	opt callstack 0
 23989                           
 23990 ;; *************** function _fputs *****************
 23991 ;; Defined at:
 23992 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 23993 ;; Parameters:    Size  Location     Type
 23994 ;;  s               2   15[BANK1 ] PTR const unsigned char 
 23995 ;;		 -> dbuf(32), 
 23996 ;;  fp              2   17[BANK1 ] PTR struct _IO_FILE
 23997 ;;		 -> sprintf@f(6), NULL(0), 
 23998 ;; Auto vars:     Size  Location     Type
 23999 ;;  i               2   20[BANK1 ] int 
 24000 ;;  c               1   19[BANK1 ] unsigned char 
 24001 ;; Return value:  Size  Location     Type
 24002 ;;                  2   15[BANK1 ] int 
 24003 ;; Registers used:
 24004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24005 ;; Tracked objects:
 24006 ;;		On entry : 3F/1
 24007 ;;		On exit  : 3F/1
 24008 ;;		Unchanged: 0/0
 24009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24010 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24011 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24013 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24014 ;;Total ram usage:        7 bytes
 24015 ;; Hardware stack levels used:    1
 24016 ;; Hardware stack levels required when called:   19
 24017 ;; This function calls:
 24018 ;;		_fputc
 24019 ;; This function is called by:
 24020 ;;		_pad
 24021 ;; This function uses a non-reentrant model
 24022 ;;
 24023                           
 24024                           	psect	text178
 24025  0093E8                     __ptext178:
 24026                           	opt callstack 0
 24027  0093E8                     _fputs:
 24028                           	opt callstack 6
 24029                           
 24030                           ; BSR set to: 1
 24031                           
 24032                           ; BSR set to: 1
 24033                           ;incstack = 0
 24034  0093E8  0E00               	movlw	0
 24035  0093EA  6F15               	movwf	(fputs@i+1)& (0+255),b
 24036  0093EC  0E00               	movlw	0
 24037  0093EE  6F14               	movwf	fputs@i& (0+255),b
 24038  0093F0  D00E               	goto	l17135
 24039  0093F2                     l17131:
 24040                           
 24041                           ; BSR set to: 1
 24042  0093F2  0060  F44C  F106   	movff	fputs@c,fputc@c
 24043  0093F8  6B07               	clrf	(fputc@c+1)& (0+255),b
 24044  0093FA  0060  F444  F108   	movff	fputs@fp,fputc@fp
 24045  009400  0060  F448  F109   	movff	fputs@fp+1,fputc@fp+1
 24046  009406  ECB3  F037         	call	_fputc	;wreg free
 24047                           
 24048                           ; BSR set to: 1
 24049  00940A  4B14               	infsnz	fputs@i& (0+255),f,b
 24050  00940C  2B15               	incf	(fputs@i+1)& (0+255),f,b
 24051  00940E                     l17135:
 24052                           
 24053                           ; BSR set to: 1
 24054  00940E  5114               	movf	fputs@i& (0+255),w,b
 24055  009410  250F               	addwf	fputs@s& (0+255),w,b
 24056  009412  6ED9               	movwf	fsr2l,c
 24057  009414  5115               	movf	(fputs@i+1)& (0+255),w,b
 24058  009416  2110               	addwfc	(fputs@s+1)& (0+255),w,b
 24059  009418  6EDA               	movwf	fsr2h,c
 24060  00941A  50DF               	movf	indf2,w,c
 24061  00941C  6F13               	movwf	fputs@c& (0+255),b
 24062  00941E  5113               	movf	fputs@c& (0+255),w,b
 24063  009420  B4D8               	btfsc	status,2,c
 24064  009422  0012               	return	
 24065  009424  D7E6               	goto	l17131
 24066  009426                     __end_of_fputs:
 24067                           	opt callstack 0
 24068                           
 24069 ;; *************** function _fputc *****************
 24070 ;; Defined at:
 24071 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 24072 ;; Parameters:    Size  Location     Type
 24073 ;;  c               2    6[BANK1 ] int 
 24074 ;;  fp              2    8[BANK1 ] PTR struct _IO_FILE
 24075 ;;		 -> sprintf@f(6), NULL(0), 
 24076 ;; Auto vars:     Size  Location     Type
 24077 ;;		None
 24078 ;; Return value:  Size  Location     Type
 24079 ;;                  2    6[BANK1 ] int 
 24080 ;; Registers used:
 24081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24082 ;; Tracked objects:
 24083 ;;		On entry : 3F/1
 24084 ;;		On exit  : 3F/1
 24085 ;;		Unchanged: 0/0
 24086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24087 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24089 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24090 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24091 ;;Total ram usage:        9 bytes
 24092 ;; Hardware stack levels used:    1
 24093 ;; Hardware stack levels required when called:   18
 24094 ;; This function calls:
 24095 ;;		_putch
 24096 ;; This function is called by:
 24097 ;;		_pad
 24098 ;;		_stoa
 24099 ;;		_vfpfcnvrt
 24100 ;;		_fputs
 24101 ;;		_putchar
 24102 ;; This function uses a non-reentrant model
 24103 ;;
 24104                           
 24105                           	psect	text179
 24106  006F66                     __ptext179:
 24107                           	opt callstack 0
 24108  006F66                     _fputc:
 24109                           	opt callstack 6
 24110                           
 24111                           ; BSR set to: 1
 24112                           
 24113                           ; BSR set to: 1
 24114                           ;incstack = 0
 24115  006F66  5108               	movf	fputc@fp& (0+255),w,b
 24116  006F68  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 24117  006F6A  B4D8               	btfsc	status,2,c
 24118  006F6C  D004               	goto	u15510
 24119                           
 24120                           ; BSR set to: 1
 24121  006F6E  5108               	movf	fputc@fp& (0+255),w,b
 24122  006F70  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 24123  006F72  A4D8               	btfss	status,2,c
 24124  006F74  D004               	goto	l16963
 24125  006F76                     u15510:
 24126                           
 24127                           ; BSR set to: 1
 24128  006F76  5106               	movf	fputc@c& (0+255),w,b
 24129  006F78  ECE3  F051         	call	_putch
 24130  006F7C  D04A               	goto	l16969
 24131  006F7E                     l16963:
 24132                           
 24133                           ; BSR set to: 1
 24134  006F7E  EE20 F004          	lfsr	2,4
 24135  006F82  5108               	movf	fputc@fp& (0+255),w,b
 24136  006F84  26D9               	addwf	fsr2l,f,c
 24137  006F86  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24138  006F88  22DA               	addwfc	fsr2h,f,c
 24139  006F8A  50DE               	movf	postinc2,w,c
 24140  006F8C  10DE               	iorwf	postinc2,w,c
 24141  006F8E  B4D8               	btfsc	status,2,c
 24142  006F90  D016               	goto	u15530
 24143                           
 24144                           ; BSR set to: 1
 24145  006F92  EE20 F004          	lfsr	2,4
 24146  006F96  5108               	movf	fputc@fp& (0+255),w,b
 24147  006F98  26D9               	addwf	fsr2l,f,c
 24148  006F9A  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24149  006F9C  22DA               	addwfc	fsr2h,f,c
 24150  006F9E  EE10 F002          	lfsr	1,2
 24151  006FA2  5108               	movf	fputc@fp& (0+255),w,b
 24152  006FA4  26E1               	addwf	fsr1l,f,c
 24153  006FA6  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24154  006FA8  22E2               	addwfc	fsr1h,f,c
 24155  006FAA  50DE               	movf	postinc2,w,c
 24156  006FAC  5CE6               	subwf	postinc1,w,c
 24157  006FAE  50E6               	movf	postinc1,w,c
 24158  006FB0  0A80               	xorlw	128
 24159  006FB2  6F0E               	movwf	(??_fputc+4)& (0+255),b
 24160  006FB4  50DE               	movf	postinc2,w,c
 24161  006FB6  0A80               	xorlw	128
 24162  006FB8  590E               	subwfb	(??_fputc+4)& (0+255),w,b
 24163  006FBA  B0D8               	btfsc	status,0,c
 24164  006FBC  D02A               	goto	l16969
 24165  006FBE                     u15530:
 24166                           
 24167                           ; BSR set to: 1
 24168  006FBE  EE20 F002          	lfsr	2,2
 24169  006FC2  5108               	movf	fputc@fp& (0+255),w,b
 24170  006FC4  26D9               	addwf	fsr2l,f,c
 24171  006FC6  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24172  006FC8  22DA               	addwfc	fsr2h,f,c
 24173  006FCA  006F FF78  F10A    	movff	postinc2,??_fputc
 24174  006FD0  006F FF74  F10B    	movff	postdec2,??_fputc+1
 24175  006FD6  0060  F423  FFD9   	movff	fputc@fp,fsr2l
 24176  006FDC  0060  F427  FFDA   	movff	fputc@fp+1,fsr2h
 24177  006FE2  006F FF78  F10C    	movff	postinc2,??_fputc+2
 24178  006FE8  006F FF74  F10D    	movff	postdec2,??_fputc+3
 24179  006FEE  510A               	movf	??_fputc& (0+255),w,b
 24180  006FF0  250C               	addwf	(??_fputc+2)& (0+255),w,b
 24181  006FF2  6ED9               	movwf	fsr2l,c
 24182  006FF4  510B               	movf	(??_fputc+1)& (0+255),w,b
 24183  006FF6  210D               	addwfc	(??_fputc+3)& (0+255),w,b
 24184  006FF8  6EDA               	movwf	fsr2h,c
 24185  006FFA  0060  F41B  FFDF   	movff	fputc@c,indf2
 24186  007000  EE20 F002          	lfsr	2,2
 24187  007004  5108               	movf	fputc@fp& (0+255),w,b
 24188  007006  26D9               	addwf	fsr2l,f,c
 24189  007008  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24190  00700A  22DA               	addwfc	fsr2h,f,c
 24191  00700C  2ADE               	incf	postinc2,f,c
 24192  00700E  0E00               	movlw	0
 24193  007010  22DD               	addwfc	postdec2,f,c
 24194  007012                     l16969:
 24195  007012  0060  F418  F106   	movff	fputc@c,?_fputc
 24196  007018  0101               	movlb	1	; () banked
 24197  00701A  6B07               	clrf	(?_fputc+1)& (0+255),b
 24198                           
 24199                           ; BSR set to: 1
 24200  00701C  0012               	return		;funcret
 24201  00701E                     __end_of_fputc:
 24202                           	opt callstack 0
 24203                           
 24204 ;; *************** function _putch *****************
 24205 ;; Defined at:
 24206 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24207 ;; Parameters:    Size  Location     Type
 24208 ;;  txData          1    wreg     unsigned char 
 24209 ;; Auto vars:     Size  Location     Type
 24210 ;;  txData          1    5[BANK1 ] unsigned char 
 24211 ;; Return value:  Size  Location     Type
 24212 ;;                  1    wreg      void 
 24213 ;; Registers used:
 24214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24215 ;; Tracked objects:
 24216 ;;		On entry : 3F/1
 24217 ;;		On exit  : 3F/39
 24218 ;;		Unchanged: 0/0
 24219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24221 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24223 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24224 ;;Total ram usage:        1 bytes
 24225 ;; Hardware stack levels used:    1
 24226 ;; Hardware stack levels required when called:   17
 24227 ;; This function calls:
 24228 ;;		_UART1_Write
 24229 ;; This function is called by:
 24230 ;;		_fputc
 24231 ;; This function uses a non-reentrant model
 24232 ;;
 24233                           
 24234                           	psect	text180
 24235  00A3C6                     __ptext180:
 24236                           	opt callstack 0
 24237  00A3C6                     _putch:
 24238                           	opt callstack 6
 24239                           
 24240                           ; BSR set to: 1
 24241                           ;incstack = 0
 24242                           ;putch@txData stored from wreg
 24243  00A3C6  6F05               	movwf	putch@txData& (0+255),b
 24244                           
 24245                           ;mcc_generated_files/uart1.c: 229: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          230: {;mcc_generated_files/uart1.c: 231:     UART1_Write(txData);
 24246  00A3C8  0101               	movlb	1	; () banked
 24247  00A3CA  5105               	movf	putch@txData& (0+255),w,b
 24248  00A3CC  EC1D  F046         	call	_UART1_Write
 24249                           
 24250                           ; BSR set to: 57
 24251  00A3D0  0012               	return		;funcret
 24252  00A3D2                     __end_of_putch:
 24253                           	opt callstack 0
 24254                           
 24255 ;; *************** function _UART1_Write *****************
 24256 ;; Defined at:
 24257 ;;		line 201 in file "mcc_generated_files/uart1.c"
 24258 ;; Parameters:    Size  Location     Type
 24259 ;;  txData          1    wreg     unsigned char 
 24260 ;; Auto vars:     Size  Location     Type
 24261 ;;  txData          1    4[BANK1 ] unsigned char 
 24262 ;; Return value:  Size  Location     Type
 24263 ;;                  1    wreg      void 
 24264 ;; Registers used:
 24265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24266 ;; Tracked objects:
 24267 ;;		On entry : 3F/1
 24268 ;;		On exit  : 3F/39
 24269 ;;		Unchanged: 0/0
 24270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24272 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24274 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24275 ;;Total ram usage:        1 bytes
 24276 ;; Hardware stack levels used:    1
 24277 ;; Hardware stack levels required when called:   16
 24278 ;; This function calls:
 24279 ;;		Nothing
 24280 ;; This function is called by:
 24281 ;;		_putch
 24282 ;; This function uses a non-reentrant model
 24283 ;;
 24284                           
 24285                           	psect	text181
 24286  008C3A                     __ptext181:
 24287                           	opt callstack 0
 24288  008C3A                     _UART1_Write:
 24289                           	opt callstack 6
 24290                           
 24291                           ; BSR set to: 57
 24292                           ;incstack = 0
 24293                           ;UART1_Write@txData stored from wreg
 24294  008C3A  6F04               	movwf	UART1_Write@txData& (0+255),b
 24295  008C3C                     
 24296                           ;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 24297                           
 24298                           ;mcc_generated_files/uart1.c: 201: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 202: {;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 24299  008C3C  0102               	movlb	2	; () banked
 24300  008C3E  51EB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 24301  008C40  11EC               	iorwf	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 24302  008C42  B4D8               	btfsc	status,2,c
 24303  008C44  D7FB               	goto	l16901
 24304                           
 24305                           ; BSR set to: 2
 24306                           ;mcc_generated_files/uart1.c: 207:     if(0 == PIE3bits.U1TXIE)
 24307  008C46  0139               	movlb	57	; () banked
 24308  008C48  B993               	btfsc	147,4,b	;volatile
 24309  008C4A  D004               	goto	l657
 24310                           
 24311                           ; BSR set to: 57
 24312                           ;mcc_generated_files/uart1.c: 208:     {;mcc_generated_files/uart1.c: 209:         U1TXB
      +                           = txData;
 24313  008C4C  0060  F413  FDEA   	movff	UART1_Write@txData,15850	;volatile
 24314                           
 24315                           ;mcc_generated_files/uart1.c: 210:     }
 24316  008C52  D01B               	goto	l16917
 24317  008C54                     l657:
 24318                           
 24319                           ; BSR set to: 57
 24320                           ;mcc_generated_files/uart1.c: 212:     {;mcc_generated_files/uart1.c: 213:         PIE3b
      +                          its.U1TXIE = 0;
 24321  008C54  9993               	bcf	147,4,b	;volatile
 24322                           
 24323                           ; BSR set to: 57
 24324                           ;mcc_generated_files/uart1.c: 214:         uart1TxBuffer[uart1TxHead++] = txData;
 24325  008C56  0E64               	movlw	low _uart1TxBuffer
 24326  008C58  0101               	movlb	1	; () banked
 24327  008C5A  25ED               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 24328  008C5C  6ED9               	movwf	fsr2l,c
 24329  008C5E  0E04               	movlw	high _uart1TxBuffer
 24330  008C60  21EE               	addwfc	(_uart1TxHead+1)& (0+255),w,b	;volatile
 24331  008C62  6EDA               	movwf	fsr2h,c
 24332  008C64  0060  F413  FFDF   	movff	UART1_Write@txData,indf2
 24333                           
 24334                           ; BSR set to: 1
 24335  008C6A  4BED               	infsnz	_uart1TxHead& (0+255),f,b	;volatile
 24336  008C6C  2BEE               	incf	(_uart1TxHead+1)& (0+255),f,b	;volatile
 24337                           
 24338                           ; BSR set to: 1
 24339                           ;mcc_generated_files/uart1.c: 215:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 24340  008C6E  0EB0               	movlw	176
 24341  008C70  5DED               	subwf	_uart1TxHead& (0+255),w,b	;volatile
 24342  008C72  0E04               	movlw	4
 24343  008C74  59EE               	subwfb	(_uart1TxHead+1)& (0+255),w,b	;volatile
 24344  008C76  A0D8               	btfss	status,0,c
 24345  008C78  D004               	goto	l16915
 24346                           
 24347                           ; BSR set to: 1
 24348                           ;mcc_generated_files/uart1.c: 216:         {;mcc_generated_files/uart1.c: 217:          
      +                             uart1TxHead = 0;
 24349  008C7A  0E00               	movlw	0
 24350  008C7C  6FEE               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
 24351  008C7E  0E00               	movlw	0
 24352  008C80  6FED               	movwf	_uart1TxHead& (0+255),b	;volatile
 24353  008C82                     l16915:
 24354                           
 24355                           ; BSR set to: 1
 24356                           ;mcc_generated_files/uart1.c: 219:         uart1TxBufferRemaining--;
 24357  008C82  0102               	movlb	2	; () banked
 24358  008C84  07EB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 24359  008C86  A0D8               	btfss	status,0,c
 24360  008C88  07EC               	decf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 24361  008C8A                     l16917:
 24362                           
 24363                           ;mcc_generated_files/uart1.c: 221:     PIE3bits.U1TXIE = 1;
 24364  008C8A  0139               	movlb	57	; () banked
 24365  008C8C  8993               	bsf	147,4,b	;volatile
 24366                           
 24367                           ; BSR set to: 57
 24368  008C8E  0012               	return		;funcret
 24369  008C90                     __end_of_UART1_Write:
 24370                           	opt callstack 0
 24371                           
 24372 ;; *************** function _atoi *****************
 24373 ;; Defined at:
 24374 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24375 ;; Parameters:    Size  Location     Type
 24376 ;;  s               2   11[BANK1 ] PTR const unsigned char 
 24377 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 24378 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 24379 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 24380 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 24381 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 24382 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 24383 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 24384 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 24385 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 24386 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 24387 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 24388 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;  n               2   24[BANK1 ] int 
 24391 ;;  neg             2   17[BANK1 ] int 
 24392 ;; Return value:  Size  Location     Type
 24393 ;;                  2   11[BANK1 ] int 
 24394 ;; Registers used:
 24395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24396 ;; Tracked objects:
 24397 ;;		On entry : 3F/1
 24398 ;;		On exit  : 3F/1
 24399 ;;		Unchanged: 0/0
 24400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24401 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24402 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24403 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24404 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24405 ;;Total ram usage:       15 bytes
 24406 ;; Hardware stack levels used:    1
 24407 ;; Hardware stack levels required when called:   17
 24408 ;; This function calls:
 24409 ;;		___wmul
 24410 ;;		_isdigit
 24411 ;;		_isspace
 24412 ;; This function is called by:
 24413 ;;		_vfpfcnvrt
 24414 ;; This function uses a non-reentrant model
 24415 ;;
 24416                           
 24417                           	psect	text182
 24418  005562                     __ptext182:
 24419                           	opt callstack 0
 24420  005562                     _atoi:
 24421                           	opt callstack 10
 24422                           
 24423                           ; BSR set to: 1
 24424                           
 24425                           ; BSR set to: 57
 24426                           ;incstack = 0
 24427  005562  0E00               	movlw	0
 24428  005564  6F19               	movwf	(atoi@n+1)& (0+255),b
 24429  005566  0E00               	movlw	0
 24430  005568  6F18               	movwf	atoi@n& (0+255),b
 24431  00556A  0E00               	movlw	0
 24432  00556C  6F12               	movwf	(atoi@neg+1)& (0+255),b
 24433  00556E  0E00               	movlw	0
 24434  005570  6F11               	movwf	atoi@neg& (0+255),b
 24435  005572  D002               	goto	l17831
 24436  005574                     l17829:
 24437                           
 24438                           ; BSR set to: 1
 24439  005574  4B0B               	infsnz	atoi@s& (0+255),f,b
 24440  005576  2B0C               	incf	(atoi@s+1)& (0+255),f,b
 24441  005578                     l17831:
 24442                           
 24443                           ; BSR set to: 1
 24444  005578  0E01               	movlw	1
 24445  00557A  6F17               	movwf	_atoi$5675& (0+255),b
 24446                           
 24447                           ; BSR set to: 1
 24448  00557C  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24449  005582  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24450  005588                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24451  005588  6AF8               	clrf	tblptru,c
 24452  00558A                     	endif
 24453  00558A                     	if	0	;tblptru may be non-zero
 24454  00558A                     	endif
 24455  00558A  0008               	tblrd		*
 24456  00558C  50F5               	movf	tablat,w,c
 24457  00558E  0A20               	xorlw	32
 24458  005590  B4D8               	btfsc	status,2,c
 24459  005592  D01B               	goto	l17839
 24460                           
 24461                           ; BSR set to: 1
 24462  005594  0EF7               	movlw	247
 24463  005596  6F0D               	movwf	??_atoi& (0+255),b
 24464  005598  0EFF               	movlw	255
 24465  00559A  6F0E               	movwf	(??_atoi+1)& (0+255),b
 24466  00559C  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24467  0055A2  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24468  0055A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24469  0055A8  6AF8               	clrf	tblptru,c
 24470  0055AA                     	endif
 24471  0055AA                     	if	0	;tblptru may be non-zero
 24472  0055AA                     	endif
 24473  0055AA  0008               	tblrd		*
 24474  0055AC  50F5               	movf	tablat,w,c
 24475  0055AE  6F0F               	movwf	(??_atoi+2)& (0+255),b
 24476  0055B0  6B10               	clrf	(??_atoi+3)& (0+255),b
 24477  0055B2  510D               	movf	??_atoi& (0+255),w,b
 24478  0055B4  270F               	addwf	(??_atoi+2)& (0+255),f,b
 24479  0055B6  510E               	movf	(??_atoi+1)& (0+255),w,b
 24480  0055B8  2310               	addwfc	(??_atoi+3)& (0+255),f,b
 24481  0055BA  5110               	movf	(??_atoi+3)& (0+255),w,b
 24482  0055BC  E104               	bnz	u17260
 24483  0055BE  0E05               	movlw	5
 24484  0055C0  5D0F               	subwf	(??_atoi+2)& (0+255),w,b
 24485  0055C2  A0D8               	btfss	status,0,c
 24486  0055C4  D002               	goto	l17839
 24487  0055C6                     u17260:
 24488                           
 24489                           ; BSR set to: 1
 24490  0055C6  0E00               	movlw	0
 24491  0055C8  6F17               	movwf	_atoi$5675& (0+255),b
 24492  0055CA                     l17839:
 24493                           
 24494                           ; BSR set to: 1
 24495  0055CA  0060  F45C  F113   	movff	_atoi$5675,_atoi$5674
 24496  0055D0  6B14               	clrf	(_atoi$5674+1)& (0+255),b
 24497                           
 24498                           ; BSR set to: 1
 24499  0055D2  5113               	movf	_atoi$5674& (0+255),w,b
 24500  0055D4  1114               	iorwf	(_atoi$5674+1)& (0+255),w,b
 24501  0055D6  B4D8               	btfsc	status,2,c
 24502  0055D8  D008               	goto	l17849
 24503  0055DA  D7CC               	goto	l17829
 24504  0055DC                     l17845:
 24505                           
 24506                           ; BSR set to: 1
 24507  0055DC  0E00               	movlw	0
 24508  0055DE  6F12               	movwf	(atoi@neg+1)& (0+255),b
 24509  0055E0  0E01               	movlw	1
 24510  0055E2  6F11               	movwf	atoi@neg& (0+255),b
 24511  0055E4                     l17847:
 24512                           
 24513                           ; BSR set to: 1
 24514  0055E4  4B0B               	infsnz	atoi@s& (0+255),f,b
 24515  0055E6  2B0C               	incf	(atoi@s+1)& (0+255),f,b
 24516  0055E8  D036               	goto	l17855
 24517  0055EA                     l17849:
 24518                           
 24519                           ; BSR set to: 1
 24520  0055EA  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24521  0055F0  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24522  0055F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24523  0055F6  6AF8               	clrf	tblptru,c
 24524  0055F8                     	endif
 24525  0055F8                     	if	0	;tblptru may be non-zero
 24526  0055F8                     	endif
 24527  0055F8  0008               	tblrd		*
 24528  0055FA  50F5               	movf	tablat,w,c
 24529  0055FC  6F0D               	movwf	??_atoi& (0+255),b
 24530  0055FE  6B0E               	clrf	(??_atoi+1)& (0+255),b
 24531                           
 24532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24533                           ; Switch size 1, requested type "simple"
 24534                           ; Number of cases is 1, Range of values is 0 to 0
 24535                           ; switch strategies available:
 24536                           ; Name         Instructions Cycles
 24537                           ; simple_byte            4     3 (average)
 24538                           ;	Chosen strategy is simple_byte
 24539  005600  510E               	movf	(??_atoi+1)& (0+255),w,b
 24540  005602  0A00               	xorlw	0	; case 0
 24541  005604  A4D8               	btfss	status,2,c
 24542  005606  D027               	goto	l17855
 24543                           
 24544                           ; BSR set to: 1
 24545                           ; Switch size 1, requested type "simple"
 24546                           ; Number of cases is 2, Range of values is 43 to 45
 24547                           ; switch strategies available:
 24548                           ; Name         Instructions Cycles
 24549                           ; simple_byte            7     4 (average)
 24550                           ;	Chosen strategy is simple_byte
 24551  005608  510D               	movf	??_atoi& (0+255),w,b
 24552  00560A  0A2B               	xorlw	43	; case 43
 24553  00560C  B4D8               	btfsc	status,2,c
 24554  00560E  D7EA               	goto	l17847
 24555  005610  0A06               	xorlw	6	; case 45
 24556  005612  B4D8               	btfsc	status,2,c
 24557  005614  D7E3               	goto	l17845
 24558  005616  D01F               	goto	l17855
 24559  005618                     l17851:
 24560                           
 24561                           ; BSR set to: 1
 24562  005618  0060  F460  F104   	movff	atoi@n,___wmul@multiplier
 24563  00561E  0060  F464  F105   	movff	atoi@n+1,___wmul@multiplier+1
 24564  005624  0E00               	movlw	0
 24565  005626  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24566  005628  0E0A               	movlw	10
 24567  00562A  6F06               	movwf	___wmul@multiplicand& (0+255),b
 24568  00562C  EC60  F04C         	call	___wmul	;wreg free
 24569  005630  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24570  005636  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24571  00563C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24572  00563C  6AF8               	clrf	tblptru,c
 24573  00563E                     	endif
 24574  00563E                     	if	0	;tblptru may be non-zero
 24575  00563E                     	endif
 24576  00563E  0008               	tblrd		*
 24577  005640  50F5               	movf	tablat,w,c
 24578  005642  5F04               	subwf	?___wmul& (0+255),f,b
 24579  005644  0E00               	movlw	0
 24580  005646  5B05               	subwfb	(?___wmul+1)& (0+255),f,b
 24581  005648  0E30               	movlw	48
 24582  00564A  2504               	addwf	?___wmul& (0+255),w,b
 24583  00564C  6F18               	movwf	atoi@n& (0+255),b
 24584  00564E  0E00               	movlw	0
 24585  005650  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 24586  005652  6F19               	movwf	(atoi@n+1)& (0+255),b
 24587  005654  D7C7               	goto	l17847
 24588  005656                     l17855:
 24589                           
 24590                           ; BSR set to: 1
 24591  005656  0ED0               	movlw	208
 24592  005658  6F0D               	movwf	??_atoi& (0+255),b
 24593  00565A  0EFF               	movlw	255
 24594  00565C  6F0E               	movwf	(??_atoi+1)& (0+255),b
 24595  00565E  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24596  005664  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24597  00566A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24598  00566A  6AF8               	clrf	tblptru,c
 24599  00566C                     	endif
 24600  00566C                     	if	0	;tblptru may be non-zero
 24601  00566C                     	endif
 24602  00566C  0008               	tblrd		*
 24603  00566E  50F5               	movf	tablat,w,c
 24604  005670  6F0F               	movwf	(??_atoi+2)& (0+255),b
 24605  005672  6B10               	clrf	(??_atoi+3)& (0+255),b
 24606  005674  510D               	movf	??_atoi& (0+255),w,b
 24607  005676  270F               	addwf	(??_atoi+2)& (0+255),f,b
 24608  005678  510E               	movf	(??_atoi+1)& (0+255),w,b
 24609  00567A  2310               	addwfc	(??_atoi+3)& (0+255),f,b
 24610  00567C  5110               	movf	(??_atoi+3)& (0+255),w,b
 24611  00567E  E106               	bnz	u17280
 24612  005680  0E0A               	movlw	10
 24613  005682  5D0F               	subwf	(??_atoi+2)& (0+255),w,b
 24614  005684  B0D8               	btfsc	status,0,c
 24615  005686  D002               	goto	u17280
 24616  005688  0E01               	movlw	1
 24617  00568A  D001               	goto	u17290
 24618  00568C                     u17280:
 24619  00568C  0E00               	movlw	0
 24620  00568E                     u17290:
 24621  00568E  6F15               	movwf	_atoi$5676& (0+255),b
 24622  005690  6B16               	clrf	(_atoi$5676+1)& (0+255),b
 24623                           
 24624                           ; BSR set to: 1
 24625  005692  5115               	movf	_atoi$5676& (0+255),w,b
 24626  005694  1116               	iorwf	(_atoi$5676+1)& (0+255),w,b
 24627  005696  A4D8               	btfss	status,2,c
 24628  005698  D7BF               	goto	l17851
 24629                           
 24630                           ; BSR set to: 1
 24631  00569A  5111               	movf	atoi@neg& (0+255),w,b
 24632  00569C  1112               	iorwf	(atoi@neg+1)& (0+255),w,b
 24633  00569E  A4D8               	btfss	status,2,c
 24634  0056A0  D011               	goto	l4314
 24635                           
 24636                           ; BSR set to: 1
 24637  0056A2  0060  F460  F10D   	movff	atoi@n,??_atoi
 24638  0056A8  0060  F464  F10E   	movff	atoi@n+1,??_atoi+1
 24639  0056AE  1F0D               	comf	??_atoi& (0+255),f,b
 24640  0056B0  1F0E               	comf	(??_atoi+1)& (0+255),f,b
 24641  0056B2  4B0D               	infsnz	??_atoi& (0+255),f,b
 24642  0056B4  2B0E               	incf	(??_atoi+1)& (0+255),f,b
 24643  0056B6  0060  F434  F10B   	movff	??_atoi,?_atoi
 24644  0056BC  0060  F438  F10C   	movff	??_atoi+1,?_atoi+1
 24645  0056C2  0012               	return	
 24646  0056C4                     l4314:
 24647                           
 24648                           ; BSR set to: 1
 24649  0056C4  0060  F460  F10B   	movff	atoi@n,?_atoi
 24650  0056CA  0060  F464  F10C   	movff	atoi@n+1,?_atoi+1
 24651                           
 24652                           ; BSR set to: 1
 24653  0056D0  0012               	return		;funcret
 24654  0056D2                     __end_of_atoi:
 24655                           	opt callstack 0
 24656                           
 24657 ;; *************** function _isspace *****************
 24658 ;; Defined at:
 24659 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24660 ;; Parameters:    Size  Location     Type
 24661 ;;  c               2    4[BANK1 ] int 
 24662 ;; Auto vars:     Size  Location     Type
 24663 ;;		None
 24664 ;; Return value:  Size  Location     Type
 24665 ;;                  2    4[BANK1 ] int 
 24666 ;; Registers used:
 24667 ;;		wreg, status,2, status,0
 24668 ;; Tracked objects:
 24669 ;;		On entry : 0/0
 24670 ;;		On exit  : 3F/1
 24671 ;;		Unchanged: 0/0
 24672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24673 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24674 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24675 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24676 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24677 ;;Total ram usage:        7 bytes
 24678 ;; Hardware stack levels used:    1
 24679 ;; Hardware stack levels required when called:   16
 24680 ;; This function calls:
 24681 ;;		Nothing
 24682 ;; This function is called by:
 24683 ;;		_atoi
 24684 ;; This function uses a non-reentrant model
 24685 ;;
 24686                           
 24687                           	psect	text183
 24688  0091E4                     __ptext183:
 24689                           	opt callstack 0
 24690  0091E4                     _isspace:
 24691                           	opt callstack 10
 24692                           
 24693                           ; BSR set to: 1
 24694                           ;incstack = 0
 24695  0091E4  0E01               	movlw	1
 24696  0091E6  0101               	movlb	1	; () banked
 24697  0091E8  6F0A               	movwf	_isspace$5701& (0+255),b
 24698                           
 24699                           ; BSR set to: 1
 24700  0091EA  0E20               	movlw	32
 24701  0091EC  1904               	xorwf	isspace@c& (0+255),w,b
 24702  0091EE  1105               	iorwf	(isspace@c+1)& (0+255),w,b
 24703  0091F0  B4D8               	btfsc	status,2,c
 24704  0091F2  D016               	goto	l17511
 24705                           
 24706                           ; BSR set to: 1
 24707  0091F4  0EF7               	movlw	247
 24708  0091F6  6F06               	movwf	??_isspace& (0+255),b
 24709  0091F8  0EFF               	movlw	255
 24710  0091FA  6F07               	movwf	(??_isspace+1)& (0+255),b
 24711  0091FC  0060  F410  F108   	movff	isspace@c,??_isspace+2
 24712  009202  0060  F414  F109   	movff	isspace@c+1,??_isspace+3
 24713  009208  5106               	movf	??_isspace& (0+255),w,b
 24714  00920A  2708               	addwf	(??_isspace+2)& (0+255),f,b
 24715  00920C  5107               	movf	(??_isspace+1)& (0+255),w,b
 24716  00920E  2309               	addwfc	(??_isspace+3)& (0+255),f,b
 24717  009210  5109               	movf	(??_isspace+3)& (0+255),w,b
 24718  009212  E104               	bnz	u16660
 24719  009214  0E05               	movlw	5
 24720  009216  5D08               	subwf	(??_isspace+2)& (0+255),w,b
 24721  009218  A0D8               	btfss	status,0,c
 24722  00921A  D002               	goto	l17511
 24723  00921C                     u16660:
 24724                           
 24725                           ; BSR set to: 1
 24726  00921C  0E00               	movlw	0
 24727  00921E  6F0A               	movwf	_isspace$5701& (0+255),b
 24728  009220                     l17511:
 24729                           
 24730                           ; BSR set to: 1
 24731  009220  0060  F428  F104   	movff	_isspace$5701,?_isspace
 24732  009226  6B05               	clrf	(?_isspace+1)& (0+255),b
 24733                           
 24734                           ; BSR set to: 1
 24735  009228  0012               	return		;funcret
 24736  00922A                     __end_of_isspace:
 24737                           	opt callstack 0
 24738                           
 24739 ;; *************** function _isdigit *****************
 24740 ;; Defined at:
 24741 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24742 ;; Parameters:    Size  Location     Type
 24743 ;;  c               2    4[BANK1 ] int 
 24744 ;; Auto vars:     Size  Location     Type
 24745 ;;		None
 24746 ;; Return value:  Size  Location     Type
 24747 ;;                  2    4[BANK1 ] int 
 24748 ;; Registers used:
 24749 ;;		wreg, status,2, status,0
 24750 ;; Tracked objects:
 24751 ;;		On entry : 0/0
 24752 ;;		On exit  : 3F/1
 24753 ;;		Unchanged: 0/0
 24754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24755 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24757 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24758 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24759 ;;Total ram usage:        6 bytes
 24760 ;; Hardware stack levels used:    1
 24761 ;; Hardware stack levels required when called:   16
 24762 ;; This function calls:
 24763 ;;		Nothing
 24764 ;; This function is called by:
 24765 ;;		_vfpfcnvrt
 24766 ;;		_atoi
 24767 ;; This function uses a non-reentrant model
 24768 ;;
 24769                           
 24770                           	psect	text184
 24771  0095F8                     __ptext184:
 24772                           	opt callstack 0
 24773  0095F8                     _isdigit:
 24774                           	opt callstack 11
 24775                           
 24776                           ; BSR set to: 1
 24777                           ;incstack = 0
 24778  0095F8  0ED0               	movlw	208
 24779  0095FA  0101               	movlb	1	; () banked
 24780  0095FC  6F06               	movwf	??_isdigit& (0+255),b
 24781  0095FE  0EFF               	movlw	255
 24782  009600  6F07               	movwf	(??_isdigit+1)& (0+255),b
 24783  009602  0060  F410  F108   	movff	isdigit@c,??_isdigit+2
 24784  009608  0060  F414  F109   	movff	isdigit@c+1,??_isdigit+3
 24785  00960E  5106               	movf	??_isdigit& (0+255),w,b
 24786  009610  2708               	addwf	(??_isdigit+2)& (0+255),f,b
 24787  009612  5107               	movf	(??_isdigit+1)& (0+255),w,b
 24788  009614  2309               	addwfc	(??_isdigit+3)& (0+255),f,b
 24789  009616  5109               	movf	(??_isdigit+3)& (0+255),w,b
 24790  009618  E106               	bnz	u16500
 24791  00961A  0E0A               	movlw	10
 24792  00961C  5D08               	subwf	(??_isdigit+2)& (0+255),w,b
 24793  00961E  B0D8               	btfsc	status,0,c
 24794  009620  D002               	goto	u16500
 24795  009622  0E01               	movlw	1
 24796  009624  D001               	goto	u16510
 24797  009626                     u16500:
 24798  009626  0E00               	movlw	0
 24799  009628                     u16510:
 24800  009628  6F04               	movwf	?_isdigit& (0+255),b
 24801  00962A  6B05               	clrf	(?_isdigit+1)& (0+255),b
 24802                           
 24803                           ; BSR set to: 1
 24804  00962C  0012               	return		;funcret
 24805  00962E                     __end_of_isdigit:
 24806                           	opt callstack 0
 24807                           
 24808 ;; *************** function ___wmul *****************
 24809 ;; Defined at:
 24810 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 24811 ;; Parameters:    Size  Location     Type
 24812 ;;  multiplier      2    4[BANK1 ] unsigned int 
 24813 ;;  multiplicand    2    6[BANK1 ] unsigned int 
 24814 ;; Auto vars:     Size  Location     Type
 24815 ;;  product         2    8[BANK1 ] unsigned int 
 24816 ;; Return value:  Size  Location     Type
 24817 ;;                  2    4[BANK1 ] unsigned int 
 24818 ;; Registers used:
 24819 ;;		wreg, status,2, status,0, prodl, prodh
 24820 ;; Tracked objects:
 24821 ;;		On entry : 3F/1
 24822 ;;		On exit  : 3F/1
 24823 ;;		Unchanged: 0/0
 24824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24825 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24826 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24828 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24829 ;;Total ram usage:        6 bytes
 24830 ;; Hardware stack levels used:    1
 24831 ;; Hardware stack levels required when called:   16
 24832 ;; This function calls:
 24833 ;;		Nothing
 24834 ;; This function is called by:
 24835 ;;		_ValueDisplay
 24836 ;;		_HigherAlarm
 24837 ;;		_MuteAlarm
 24838 ;;		_AlarmUpdateLCD
 24839 ;;		_AlarmCheckTask
 24840 ;;		_atoi
 24841 ;;		_AdcInit
 24842 ;;		_AdcSeeData
 24843 ;;		_AdcGetData
 24844 ;;		_AdcDataReady
 24845 ;; This function uses a non-reentrant model
 24846 ;;
 24847                           
 24848                           	psect	text185
 24849  0098C0                     __ptext185:
 24850                           	opt callstack 0
 24851  0098C0                     ___wmul:
 24852                           	opt callstack 10
 24853                           
 24854                           ; BSR set to: 1
 24855                           
 24856                           ; BSR set to: 1
 24857                           ;incstack = 0
 24858  0098C0  5104               	movf	___wmul@multiplier& (0+255),w,b
 24859  0098C2  0306               	mulwf	___wmul@multiplicand& (0+255),b
 24860  0098C4  006F FFCC  F108    	movff	prodl,___wmul@product
 24861  0098CA  006F FFD0  F109    	movff	prodh,___wmul@product+1
 24862  0098D0  5104               	movf	___wmul@multiplier& (0+255),w,b
 24863  0098D2  0307               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 24864  0098D4  50F3               	movf	243,w,c
 24865  0098D6  2709               	addwf	(___wmul@product+1)& (0+255),f,b
 24866  0098D8  5105               	movf	(___wmul@multiplier+1)& (0+255),w,b
 24867  0098DA  0306               	mulwf	___wmul@multiplicand& (0+255),b
 24868  0098DC  50F3               	movf	243,w,c
 24869  0098DE  2709               	addwf	(___wmul@product+1)& (0+255),f,b
 24870                           
 24871                           ; BSR set to: 1
 24872  0098E0  0060  F420  F104   	movff	___wmul@product,?___wmul
 24873  0098E6  0060  F424  F105   	movff	___wmul@product+1,?___wmul+1
 24874                           
 24875                           ; BSR set to: 1
 24876  0098EC  0012               	return		;funcret
 24877  0098EE                     __end_of___wmul:
 24878                           	opt callstack 0
 24879                           
 24880 ;; *************** function ___awmod *****************
 24881 ;; Defined at:
 24882 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 24883 ;; Parameters:    Size  Location     Type
 24884 ;;  dividend        2    4[BANK1 ] int 
 24885 ;;  divisor         2    6[BANK1 ] int 
 24886 ;; Auto vars:     Size  Location     Type
 24887 ;;  sign            1    9[BANK1 ] unsigned char 
 24888 ;;  counter         1    8[BANK1 ] unsigned char 
 24889 ;; Return value:  Size  Location     Type
 24890 ;;                  2    4[BANK1 ] int 
 24891 ;; Registers used:
 24892 ;;		wreg, status,2, status,0
 24893 ;; Tracked objects:
 24894 ;;		On entry : 3F/1
 24895 ;;		On exit  : 3F/1
 24896 ;;		Unchanged: 0/0
 24897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24898 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24899 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24901 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24902 ;;Total ram usage:        6 bytes
 24903 ;; Hardware stack levels used:    1
 24904 ;; Hardware stack levels required when called:   16
 24905 ;; This function calls:
 24906 ;;		Nothing
 24907 ;; This function is called by:
 24908 ;;		_ValueDisplay
 24909 ;;		_AlarmDisplay
 24910 ;; This function uses a non-reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text186
 24914  0082C6                     __ptext186:
 24915                           	opt callstack 0
 24916  0082C6                     ___awmod:
 24917                           	opt callstack 11
 24918                           
 24919                           ; BSR set to: 1
 24920                           
 24921                           ; BSR set to: 1
 24922                           ;incstack = 0
 24923  0082C6  0E00               	movlw	0
 24924  0082C8  6F09               	movwf	___awmod@sign& (0+255),b
 24925                           
 24926                           ; BSR set to: 1
 24927  0082CA  AF05               	btfss	(___awmod@dividend+1)& (0+255),7,b
 24928  0082CC  D006               	goto	l18805
 24929                           
 24930                           ; BSR set to: 1
 24931  0082CE  6D04               	negf	___awmod@dividend& (0+255),b
 24932  0082D0  1F05               	comf	(___awmod@dividend+1)& (0+255),f,b
 24933  0082D2  B0D8               	btfsc	status,0,c
 24934  0082D4  2B05               	incf	(___awmod@dividend+1)& (0+255),f,b
 24935                           
 24936                           ; BSR set to: 1
 24937  0082D6  0E01               	movlw	1
 24938  0082D8  6F09               	movwf	___awmod@sign& (0+255),b
 24939  0082DA                     l18805:
 24940                           
 24941                           ; BSR set to: 1
 24942  0082DA  AF07               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24943  0082DC  D004               	goto	l18809
 24944                           
 24945                           ; BSR set to: 1
 24946  0082DE  6D06               	negf	___awmod@divisor& (0+255),b
 24947  0082E0  1F07               	comf	(___awmod@divisor+1)& (0+255),f,b
 24948  0082E2  B0D8               	btfsc	status,0,c
 24949  0082E4  2B07               	incf	(___awmod@divisor+1)& (0+255),f,b
 24950  0082E6                     l18809:
 24951                           
 24952                           ; BSR set to: 1
 24953  0082E6  5106               	movf	___awmod@divisor& (0+255),w,b
 24954  0082E8  1107               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 24955  0082EA  B4D8               	btfsc	status,2,c
 24956  0082EC  D018               	goto	l18825
 24957                           
 24958                           ; BSR set to: 1
 24959  0082EE  0E01               	movlw	1
 24960  0082F0  6F08               	movwf	___awmod@counter& (0+255),b
 24961  0082F2  D004               	goto	l18815
 24962  0082F4                     l18813:
 24963                           
 24964                           ; BSR set to: 1
 24965  0082F4  90D8               	bcf	status,0,c
 24966  0082F6  3706               	rlcf	___awmod@divisor& (0+255),f,b
 24967  0082F8  3707               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 24968  0082FA  2B08               	incf	___awmod@counter& (0+255),f,b
 24969  0082FC                     l18815:
 24970                           
 24971                           ; BSR set to: 1
 24972  0082FC  AF07               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24973  0082FE  D7FA               	goto	l18813
 24974  008300                     u18360:
 24975                           
 24976                           ; BSR set to: 1
 24977  008300  5106               	movf	___awmod@divisor& (0+255),w,b
 24978  008302  5D04               	subwf	___awmod@dividend& (0+255),w,b
 24979  008304  5107               	movf	(___awmod@divisor+1)& (0+255),w,b
 24980  008306  5905               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 24981  008308  A0D8               	btfss	status,0,c
 24982  00830A  D004               	goto	l18821
 24983                           
 24984                           ; BSR set to: 1
 24985  00830C  5106               	movf	___awmod@divisor& (0+255),w,b
 24986  00830E  5F04               	subwf	___awmod@dividend& (0+255),f,b
 24987  008310  5107               	movf	(___awmod@divisor+1)& (0+255),w,b
 24988  008312  5B05               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 24989  008314                     l18821:
 24990                           
 24991                           ; BSR set to: 1
 24992  008314  90D8               	bcf	status,0,c
 24993  008316  3307               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 24994  008318  3306               	rrcf	___awmod@divisor& (0+255),f,b
 24995                           
 24996                           ; BSR set to: 1
 24997  00831A  2F08               	decfsz	___awmod@counter& (0+255),f,b
 24998  00831C  D7F1               	goto	u18360
 24999  00831E                     l18825:
 25000                           
 25001                           ; BSR set to: 1
 25002  00831E  5109               	movf	___awmod@sign& (0+255),w,b
 25003  008320  B4D8               	btfsc	status,2,c
 25004  008322  D004               	goto	l18829
 25005                           
 25006                           ; BSR set to: 1
 25007  008324  6D04               	negf	___awmod@dividend& (0+255),b
 25008  008326  1F05               	comf	(___awmod@dividend+1)& (0+255),f,b
 25009  008328  B0D8               	btfsc	status,0,c
 25010  00832A  2B05               	incf	(___awmod@dividend+1)& (0+255),f,b
 25011  00832C                     l18829:
 25012                           
 25013                           ; BSR set to: 1
 25014  00832C  0060  F410  F104   	movff	___awmod@dividend,?___awmod
 25015  008332  0060  F414  F105   	movff	___awmod@dividend+1,?___awmod+1
 25016                           
 25017                           ; BSR set to: 1
 25018  008338  0012               	return		;funcret
 25019  00833A                     __end_of___awmod:
 25020                           	opt callstack 0
 25021                           
 25022 ;; *************** function _GetVolume *****************
 25023 ;; Defined at:
 25024 ;;		line 169 in file "monitor.c"
 25025 ;; Parameters:    Size  Location     Type
 25026 ;;		None
 25027 ;; Auto vars:     Size  Location     Type
 25028 ;;		None
 25029 ;; Return value:  Size  Location     Type
 25030 ;;                  2    4[BANK1 ] short 
 25031 ;; Registers used:
 25032 ;;		None
 25033 ;; Tracked objects:
 25034 ;;		On entry : 3F/1
 25035 ;;		On exit  : 3F/1
 25036 ;;		Unchanged: 3F/0
 25037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25038 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25041 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25042 ;;Total ram usage:        2 bytes
 25043 ;; Hardware stack levels used:    1
 25044 ;; Hardware stack levels required when called:   16
 25045 ;; This function calls:
 25046 ;;		Nothing
 25047 ;; This function is called by:
 25048 ;;		_ValueDisplay
 25049 ;; This function uses a non-reentrant model
 25050 ;;
 25051                           
 25052                           	psect	text187
 25053  00A2D0                     __ptext187:
 25054                           	opt callstack 0
 25055  00A2D0                     _GetVolume:
 25056                           	opt callstack 11
 25057                           
 25058                           ; BSR set to: 1
 25059                           
 25060                           ; BSR set to: 1
 25061                           ;incstack = 0
 25062  00A2D0  0060  F774  F104   	movff	_volume,?_GetVolume
 25063  00A2D6  0060  F778  F105   	movff	_volume+1,?_GetVolume+1
 25064                           
 25065                           ; BSR set to: 1
 25066  00A2DC  0012               	return		;funcret
 25067  00A2DE                     __end_of_GetVolume:
 25068                           	opt callstack 0
 25069                           
 25070 ;; *************** function _GetTi *****************
 25071 ;; Defined at:
 25072 ;;		line 162 in file "monitor.c"
 25073 ;; Parameters:    Size  Location     Type
 25074 ;;		None
 25075 ;; Auto vars:     Size  Location     Type
 25076 ;;		None
 25077 ;; Return value:  Size  Location     Type
 25078 ;;                  2    4[BANK1 ] short 
 25079 ;; Registers used:
 25080 ;;		wreg, status,2, status,0
 25081 ;; Tracked objects:
 25082 ;;		On entry : 3F/1
 25083 ;;		On exit  : 3F/1
 25084 ;;		Unchanged: 0/0
 25085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25086 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25089 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25090 ;;Total ram usage:        2 bytes
 25091 ;; Hardware stack levels used:    1
 25092 ;; Hardware stack levels required when called:   16
 25093 ;; This function calls:
 25094 ;;		Nothing
 25095 ;; This function is called by:
 25096 ;;		_ValueDisplay
 25097 ;; This function uses a non-reentrant model
 25098 ;;
 25099                           
 25100                           	psect	text188
 25101  00A0BE                     __ptext188:
 25102                           	opt callstack 0
 25103  00A0BE                     _GetTi:
 25104                           	opt callstack 11
 25105                           
 25106                           ; BSR set to: 1
 25107                           
 25108                           ; BSR set to: 1
 25109                           ;incstack = 0
 25110  00A0BE  90D8               	bcf	status,0,c
 25111  00A0C0  0102               	movlb	2	; () banked
 25112  00A0C2  355A               	rlcf	_ti& (0+255),w,b
 25113  00A0C4  0101               	movlb	1	; () banked
 25114  00A0C6  6F04               	movwf	?_GetTi& (0+255),b
 25115  00A0C8  0102               	movlb	2	; () banked
 25116  00A0CA  355B               	rlcf	(_ti+1)& (0+255),w,b
 25117  00A0CC  0101               	movlb	1	; () banked
 25118  00A0CE  6F05               	movwf	(?_GetTi+1)& (0+255),b
 25119                           
 25120                           ; BSR set to: 1
 25121  00A0D0  0012               	return		;funcret
 25122  00A0D2                     __end_of_GetTi:
 25123                           	opt callstack 0
 25124                           
 25125 ;; *************** function _GetTe *****************
 25126 ;; Defined at:
 25127 ;;		line 163 in file "monitor.c"
 25128 ;; Parameters:    Size  Location     Type
 25129 ;;		None
 25130 ;; Auto vars:     Size  Location     Type
 25131 ;;		None
 25132 ;; Return value:  Size  Location     Type
 25133 ;;                  2    4[BANK1 ] short 
 25134 ;; Registers used:
 25135 ;;		wreg, status,2, status,0
 25136 ;; Tracked objects:
 25137 ;;		On entry : 3F/1
 25138 ;;		On exit  : 3F/1
 25139 ;;		Unchanged: 0/0
 25140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25141 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25144 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25145 ;;Total ram usage:        2 bytes
 25146 ;; Hardware stack levels used:    1
 25147 ;; Hardware stack levels required when called:   16
 25148 ;; This function calls:
 25149 ;;		Nothing
 25150 ;; This function is called by:
 25151 ;;		_ValueDisplay
 25152 ;; This function uses a non-reentrant model
 25153 ;;
 25154                           
 25155                           	psect	text189
 25156  00A0D2                     __ptext189:
 25157                           	opt callstack 0
 25158  00A0D2                     _GetTe:
 25159                           	opt callstack 11
 25160                           
 25161                           ; BSR set to: 1
 25162                           
 25163                           ; BSR set to: 1
 25164                           ;incstack = 0
 25165  00A0D2  90D8               	bcf	status,0,c
 25166  00A0D4  0102               	movlb	2	; () banked
 25167  00A0D6  3558               	rlcf	_te& (0+255),w,b
 25168  00A0D8  0101               	movlb	1	; () banked
 25169  00A0DA  6F04               	movwf	?_GetTe& (0+255),b
 25170  00A0DC  0102               	movlb	2	; () banked
 25171  00A0DE  3559               	rlcf	(_te+1)& (0+255),w,b
 25172  00A0E0  0101               	movlb	1	; () banked
 25173  00A0E2  6F05               	movwf	(?_GetTe+1)& (0+255),b
 25174                           
 25175                           ; BSR set to: 1
 25176  00A0E4  0012               	return		;funcret
 25177  00A0E6                     __end_of_GetTe:
 25178                           	opt callstack 0
 25179                           
 25180 ;; *************** function _GetTdi *****************
 25181 ;; Defined at:
 25182 ;;		line 161 in file "monitor.c"
 25183 ;; Parameters:    Size  Location     Type
 25184 ;;		None
 25185 ;; Auto vars:     Size  Location     Type
 25186 ;;		None
 25187 ;; Return value:  Size  Location     Type
 25188 ;;                  2    4[BANK1 ] short 
 25189 ;; Registers used:
 25190 ;;		wreg, status,2, status,0
 25191 ;; Tracked objects:
 25192 ;;		On entry : 3F/0
 25193 ;;		On exit  : 3F/1
 25194 ;;		Unchanged: 0/0
 25195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25196 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25199 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25200 ;;Total ram usage:        2 bytes
 25201 ;; Hardware stack levels used:    1
 25202 ;; Hardware stack levels required when called:   16
 25203 ;; This function calls:
 25204 ;;		Nothing
 25205 ;; This function is called by:
 25206 ;;		_ValueDisplay
 25207 ;; This function uses a non-reentrant model
 25208 ;;
 25209                           
 25210                           	psect	text190
 25211  00A2DE                     __ptext190:
 25212                           	opt callstack 0
 25213  00A2DE                     _GetTdi:
 25214                           	opt callstack 11
 25215                           
 25216                           ; BSR set to: 0
 25217                           
 25218                           ; BSR set to: 1
 25219                           ;incstack = 0
 25220  00A2DE  90D8               	bcf	status,0,c
 25221  00A2E0  0101               	movlb	1	; () banked
 25222  00A2E2  35D9               	rlcf	_tdi& (0+255),w,b
 25223  00A2E4  6F04               	movwf	?_GetTdi& (0+255),b
 25224  00A2E6  35DA               	rlcf	(_tdi+1)& (0+255),w,b
 25225  00A2E8  6F05               	movwf	(?_GetTdi+1)& (0+255),b
 25226                           
 25227                           ; BSR set to: 1
 25228  00A2EA  0012               	return		;funcret
 25229  00A2EC                     __end_of_GetTdi:
 25230                           	opt callstack 0
 25231                           
 25232 ;; *************** function _GetTde *****************
 25233 ;; Defined at:
 25234 ;;		line 160 in file "monitor.c"
 25235 ;; Parameters:    Size  Location     Type
 25236 ;;		None
 25237 ;; Auto vars:     Size  Location     Type
 25238 ;;		None
 25239 ;; Return value:  Size  Location     Type
 25240 ;;                  2    4[BANK1 ] short 
 25241 ;; Registers used:
 25242 ;;		wreg, status,2, status,0
 25243 ;; Tracked objects:
 25244 ;;		On entry : 3F/1
 25245 ;;		On exit  : 3F/1
 25246 ;;		Unchanged: 0/0
 25247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25248 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25251 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25252 ;;Total ram usage:        2 bytes
 25253 ;; Hardware stack levels used:    1
 25254 ;; Hardware stack levels required when called:   16
 25255 ;; This function calls:
 25256 ;;		Nothing
 25257 ;; This function is called by:
 25258 ;;		_ValueDisplay
 25259 ;; This function uses a non-reentrant model
 25260 ;;
 25261                           
 25262                           	psect	text191
 25263  00A3D2                     __ptext191:
 25264                           	opt callstack 0
 25265  00A3D2                     _GetTde:
 25266                           	opt callstack 11
 25267                           
 25268                           ; BSR set to: 1
 25269                           
 25270                           ; BSR set to: 1
 25271                           ;incstack = 0
 25272  00A3D2  90D8               	bcf	status,0,c
 25273  00A3D4  35D7               	rlcf	_tde& (0+255),w,b
 25274  00A3D6  6F04               	movwf	?_GetTde& (0+255),b
 25275  00A3D8  35D8               	rlcf	(_tde+1)& (0+255),w,b
 25276  00A3DA  6F05               	movwf	(?_GetTde+1)& (0+255),b
 25277                           
 25278                           ; BSR set to: 1
 25279  00A3DC  0012               	return		;funcret
 25280  00A3DE                     __end_of_GetTde:
 25281                           	opt callstack 0
 25282                           
 25283 ;; *************** function _GetTargetIp *****************
 25284 ;; Defined at:
 25285 ;;		line 189 in file "monitor.c"
 25286 ;; Parameters:    Size  Location     Type
 25287 ;;		None
 25288 ;; Auto vars:     Size  Location     Type
 25289 ;;		None
 25290 ;; Return value:  Size  Location     Type
 25291 ;;                  2   18[BANK1 ] short 
 25292 ;; Registers used:
 25293 ;;		wreg, status,2, status,0, cstack
 25294 ;; Tracked objects:
 25295 ;;		On entry : 3F/1
 25296 ;;		On exit  : 3F/1
 25297 ;;		Unchanged: 0/0
 25298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25299 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25302 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25303 ;;Total ram usage:        2 bytes
 25304 ;; Hardware stack levels used:    1
 25305 ;; Hardware stack levels required when called:   17
 25306 ;; This function calls:
 25307 ;;		___awdiv
 25308 ;; This function is called by:
 25309 ;;		_ValueDisplay
 25310 ;; This function uses a non-reentrant model
 25311 ;;
 25312                           
 25313                           	psect	text192
 25314  009AC6                     __ptext192:
 25315                           	opt callstack 0
 25316  009AC6                     _GetTargetIp:
 25317                           	opt callstack 10
 25318                           
 25319                           ; BSR set to: 1
 25320                           ;monitor.c: 190:     return targetHigh/5;
 25321                           
 25322                           ; BSR set to: 1
 25323                           ;incstack = 0
 25324  009AC6  0060  F78C  F10A   	movff	_targetHigh,___awdiv@dividend
 25325  009ACC  0060  F790  F10B   	movff	_targetHigh+1,___awdiv@dividend+1
 25326  009AD2  0E00               	movlw	0
 25327  009AD4  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25328  009AD6  0E05               	movlw	5
 25329  009AD8  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25330  009ADA  EC9D  F03F         	call	___awdiv	;wreg free
 25331  009ADE  0060  F428  F112   	movff	?___awdiv,?_GetTargetIp
 25332  009AE4  0060  F42C  F113   	movff	?___awdiv+1,?_GetTargetIp+1
 25333                           
 25334                           ; BSR set to: 1
 25335  009AEA  0012               	return		;funcret
 25336  009AEC                     __end_of_GetTargetIp:
 25337                           	opt callstack 0
 25338                           
 25339 ;; *************** function _GetTargetEp *****************
 25340 ;; Defined at:
 25341 ;;		line 193 in file "monitor.c"
 25342 ;; Parameters:    Size  Location     Type
 25343 ;;		None
 25344 ;; Auto vars:     Size  Location     Type
 25345 ;;		None
 25346 ;; Return value:  Size  Location     Type
 25347 ;;                  2   18[BANK1 ] short 
 25348 ;; Registers used:
 25349 ;;		wreg, status,2, status,0, cstack
 25350 ;; Tracked objects:
 25351 ;;		On entry : 3F/1
 25352 ;;		On exit  : 3F/1
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25355 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25358 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25359 ;;Total ram usage:        2 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:   17
 25362 ;; This function calls:
 25363 ;;		___awdiv
 25364 ;; This function is called by:
 25365 ;;		_ValueDisplay
 25366 ;; This function uses a non-reentrant model
 25367 ;;
 25368                           
 25369                           	psect	text193
 25370  009AEC                     __ptext193:
 25371                           	opt callstack 0
 25372  009AEC                     _GetTargetEp:
 25373                           	opt callstack 10
 25374                           
 25375                           ; BSR set to: 1
 25376                           ;monitor.c: 194:     return targetLow/5;
 25377                           
 25378                           ; BSR set to: 1
 25379                           ;incstack = 0
 25380  009AEC  0060  F784  F10A   	movff	_targetLow,___awdiv@dividend
 25381  009AF2  0060  F788  F10B   	movff	_targetLow+1,___awdiv@dividend+1
 25382  009AF8  0E00               	movlw	0
 25383  009AFA  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25384  009AFC  0E05               	movlw	5
 25385  009AFE  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25386  009B00  EC9D  F03F         	call	___awdiv	;wreg free
 25387  009B04  0060  F428  F112   	movff	?___awdiv,?_GetTargetEp
 25388  009B0A  0060  F42C  F113   	movff	?___awdiv+1,?_GetTargetEp+1
 25389                           
 25390                           ; BSR set to: 1
 25391  009B10  0012               	return		;funcret
 25392  009B12                     __end_of_GetTargetEp:
 25393                           	opt callstack 0
 25394                           
 25395 ;; *************** function _GetSpr *****************
 25396 ;; Defined at:
 25397 ;;		line 60 in file "controller.c"
 25398 ;; Parameters:    Size  Location     Type
 25399 ;;		None
 25400 ;; Auto vars:     Size  Location     Type
 25401 ;;		None
 25402 ;; Return value:  Size  Location     Type
 25403 ;;                  2    4[BANK1 ] short 
 25404 ;; Registers used:
 25405 ;;		None
 25406 ;; Tracked objects:
 25407 ;;		On entry : 3F/1
 25408 ;;		On exit  : 3F/1
 25409 ;;		Unchanged: 3F/0
 25410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25411 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25414 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25415 ;;Total ram usage:        2 bytes
 25416 ;; Hardware stack levels used:    1
 25417 ;; Hardware stack levels required when called:   16
 25418 ;; This function calls:
 25419 ;;		Nothing
 25420 ;; This function is called by:
 25421 ;;		_ValueDisplay
 25422 ;; This function uses a non-reentrant model
 25423 ;;
 25424                           
 25425                           	psect	text194
 25426  00A2EC                     __ptext194:
 25427                           	opt callstack 0
 25428  00A2EC                     _GetSpr:
 25429                           	opt callstack 11
 25430                           
 25431                           ; BSR set to: 1
 25432                           
 25433                           ; BSR set to: 1
 25434                           ;incstack = 0
 25435  00A2EC  0060  F8C8  F104   	movff	_spr,?_GetSpr
 25436  00A2F2  0060  F8CC  F105   	movff	_spr+1,?_GetSpr+1
 25437                           
 25438                           ; BSR set to: 1
 25439  00A2F8  0012               	return		;funcret
 25440  00A2FA                     __end_of_GetSpr:
 25441                           	opt callstack 0
 25442                           
 25443 ;; *************** function _GetPmax *****************
 25444 ;; Defined at:
 25445 ;;		line 170 in file "monitor.c"
 25446 ;; Parameters:    Size  Location     Type
 25447 ;;		None
 25448 ;; Auto vars:     Size  Location     Type
 25449 ;;		None
 25450 ;; Return value:  Size  Location     Type
 25451 ;;                  2   18[BANK1 ] short 
 25452 ;; Registers used:
 25453 ;;		wreg, status,2, status,0, cstack
 25454 ;; Tracked objects:
 25455 ;;		On entry : 3F/1
 25456 ;;		On exit  : 3F/1
 25457 ;;		Unchanged: 0/0
 25458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25459 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25462 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25463 ;;Total ram usage:        2 bytes
 25464 ;; Hardware stack levels used:    1
 25465 ;; Hardware stack levels required when called:   17
 25466 ;; This function calls:
 25467 ;;		___awdiv
 25468 ;; This function is called by:
 25469 ;;		_ValueDisplay
 25470 ;; This function uses a non-reentrant model
 25471 ;;
 25472                           
 25473                           	psect	text195
 25474  009B12                     __ptext195:
 25475                           	opt callstack 0
 25476  009B12                     _GetPmax:
 25477                           	opt callstack 10
 25478                           
 25479                           ; BSR set to: 1
 25480                           
 25481                           ; BSR set to: 1
 25482                           ;incstack = 0
 25483  009B12  0060  F360  F10A   	movff	_pmax,___awdiv@dividend
 25484  009B18  0060  F364  F10B   	movff	_pmax+1,___awdiv@dividend+1
 25485  009B1E  0E00               	movlw	0
 25486  009B20  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25487  009B22  0E05               	movlw	5
 25488  009B24  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25489  009B26  EC9D  F03F         	call	___awdiv	;wreg free
 25490  009B2A  0060  F428  F112   	movff	?___awdiv,?_GetPmax
 25491  009B30  0060  F42C  F113   	movff	?___awdiv+1,?_GetPmax+1
 25492                           
 25493                           ; BSR set to: 1
 25494  009B36  0012               	return		;funcret
 25495  009B38                     __end_of_GetPmax:
 25496                           	opt callstack 0
 25497                           
 25498 ;; *************** function _GetIp *****************
 25499 ;; Defined at:
 25500 ;;		line 168 in file "monitor.c"
 25501 ;; Parameters:    Size  Location     Type
 25502 ;;		None
 25503 ;; Auto vars:     Size  Location     Type
 25504 ;;		None
 25505 ;; Return value:  Size  Location     Type
 25506 ;;                  2   18[BANK1 ] short 
 25507 ;; Registers used:
 25508 ;;		wreg, status,2, status,0, cstack
 25509 ;; Tracked objects:
 25510 ;;		On entry : 3F/1
 25511 ;;		On exit  : 3F/1
 25512 ;;		Unchanged: 0/0
 25513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25514 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25515 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25516 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25517 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25518 ;;Total ram usage:        9 bytes
 25519 ;; Hardware stack levels used:    1
 25520 ;; Hardware stack levels required when called:   17
 25521 ;; This function calls:
 25522 ;;		___awdiv
 25523 ;; This function is called by:
 25524 ;;		_ValueDisplay
 25525 ;; This function uses a non-reentrant model
 25526 ;;
 25527                           
 25528                           	psect	text196
 25529  004F7A                     __ptext196:
 25530                           	opt callstack 0
 25531  004F7A                     _GetIp:
 25532                           	opt callstack 10
 25533                           
 25534                           ; BSR set to: 1
 25535                           
 25536                           ; BSR set to: 1
 25537                           ;incstack = 0
 25538  004F7A  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25539  004F80  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25540  004F86  0E00               	movlw	0
 25541  004F88  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25542  004F8A  0E05               	movlw	5
 25543  004F8C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25544  004F8E  EC9D  F03F         	call	___awdiv	;wreg free
 25545  004F92  0060  F428  F114   	movff	?___awdiv,??_GetIp
 25546  004F98  0060  F42C  F115   	movff	?___awdiv+1,??_GetIp+1
 25547  004F9E  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25548  004FA4  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25549  004FAA  0E00               	movlw	0
 25550  004FAC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25551  004FAE  0E05               	movlw	5
 25552  004FB0  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25553  004FB2  EC9D  F03F         	call	___awdiv	;wreg free
 25554  004FB6  510A               	movf	?___awdiv& (0+255),w,b
 25555  004FB8  5D14               	subwf	??_GetIp& (0+255),w,b
 25556  004FBA  5115               	movf	(??_GetIp+1)& (0+255),w,b
 25557  004FBC  0A80               	xorlw	128
 25558  004FBE  6F16               	movwf	(??_GetIp+2)& (0+255),b
 25559  004FC0  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25560  004FC2  0A80               	xorlw	128
 25561  004FC4  5916               	subwfb	(??_GetIp+2)& (0+255),w,b
 25562  004FC6  A0D8               	btfss	status,0,c
 25563  004FC8  D00D               	goto	l18691
 25564                           
 25565                           ; BSR set to: 1
 25566  004FCA  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25567  004FD0  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25568  004FD6  0E00               	movlw	0
 25569  004FD8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25570  004FDA  0E05               	movlw	5
 25571  004FDC  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25572  004FDE  EC9D  F03F         	call	___awdiv	;wreg free
 25573  004FE2  D00C               	goto	L7
 25574  004FE4                     l18691:
 25575                           
 25576                           ; BSR set to: 1
 25577  004FE4  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25578  004FEA  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25579  004FF0  0E00               	movlw	0
 25580  004FF2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25581  004FF4  0E05               	movlw	5
 25582  004FF6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25583  004FF8  EC9D  F03F         	call	___awdiv	;wreg free
 25584  004FFC                     L7:
 25585  004FFC  0060  F428  F117   	movff	?___awdiv,_GetIp$4809
 25586  005002  0060  F42C  F118   	movff	?___awdiv+1,_GetIp$4809+1
 25587                           
 25588                           ; BSR set to: 1
 25589  005008  0060  F754  F10A   	movff	_pi,___awdiv@dividend
 25590  00500E  0060  F758  F10B   	movff	_pi+1,___awdiv@dividend+1
 25591  005014  0E00               	movlw	0
 25592  005016  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25593  005018  0E05               	movlw	5
 25594  00501A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25595  00501C  EC9D  F03F         	call	___awdiv	;wreg free
 25596  005020  5117               	movf	_GetIp$4809& (0+255),w,b
 25597  005022  5D0A               	subwf	?___awdiv& (0+255),w,b
 25598  005024  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25599  005026  0A80               	xorlw	128
 25600  005028  6F14               	movwf	??_GetIp& (0+255),b
 25601  00502A  5118               	movf	(_GetIp$4809+1)& (0+255),w,b
 25602  00502C  0A80               	xorlw	128
 25603  00502E  5914               	subwfb	??_GetIp& (0+255),w,b
 25604  005030  A0D8               	btfss	status,0,c
 25605  005032  D013               	goto	l18695
 25606                           
 25607                           ; BSR set to: 1
 25608  005034  0060  F754  F10A   	movff	_pi,___awdiv@dividend
 25609  00503A  0060  F758  F10B   	movff	_pi+1,___awdiv@dividend+1
 25610  005040  0E00               	movlw	0
 25611  005042  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25612  005044  0E05               	movlw	5
 25613  005046  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25614  005048  EC9D  F03F         	call	___awdiv	;wreg free
 25615  00504C  0060  F428  F112   	movff	?___awdiv,?_GetIp
 25616  005052  0060  F42C  F113   	movff	?___awdiv+1,?_GetIp+1
 25617  005058  0012               	return	
 25618  00505A                     l18695:
 25619                           
 25620                           ; BSR set to: 1
 25621  00505A  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25622  005060  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25623  005066  0E00               	movlw	0
 25624  005068  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25625  00506A  0E05               	movlw	5
 25626  00506C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25627  00506E  EC9D  F03F         	call	___awdiv	;wreg free
 25628  005072  0060  F428  F114   	movff	?___awdiv,??_GetIp
 25629  005078  0060  F42C  F115   	movff	?___awdiv+1,??_GetIp+1
 25630  00507E  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25631  005084  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25632  00508A  0E00               	movlw	0
 25633  00508C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25634  00508E  0E05               	movlw	5
 25635  005090  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25636  005092  EC9D  F03F         	call	___awdiv	;wreg free
 25637  005096  510A               	movf	?___awdiv& (0+255),w,b
 25638  005098  5D14               	subwf	??_GetIp& (0+255),w,b
 25639  00509A  5115               	movf	(??_GetIp+1)& (0+255),w,b
 25640  00509C  0A80               	xorlw	128
 25641  00509E  6F16               	movwf	(??_GetIp+2)& (0+255),b
 25642  0050A0  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25643  0050A2  0A80               	xorlw	128
 25644  0050A4  5916               	subwfb	(??_GetIp+2)& (0+255),w,b
 25645  0050A6  A0D8               	btfss	status,0,c
 25646  0050A8  D00D               	goto	l18699
 25647                           
 25648                           ; BSR set to: 1
 25649  0050AA  0060  F74C  F10A   	movff	_pHigh,___awdiv@dividend
 25650  0050B0  0060  F750  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25651  0050B6  0E00               	movlw	0
 25652  0050B8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25653  0050BA  0E05               	movlw	5
 25654  0050BC  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25655  0050BE  EC9D  F03F         	call	___awdiv	;wreg free
 25656  0050C2  D00C               	goto	L8
 25657  0050C4                     l18699:
 25658                           
 25659                           ; BSR set to: 1
 25660  0050C4  0060  F744  F10A   	movff	_lrpi,___awdiv@dividend
 25661  0050CA  0060  F748  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25662  0050D0  0E00               	movlw	0
 25663  0050D2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25664  0050D4  0E05               	movlw	5
 25665  0050D6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25666  0050D8  EC9D  F03F         	call	___awdiv	;wreg free
 25667  0050DC                     L8:
 25668  0050DC  0060  F428  F119   	movff	?___awdiv,_GetIp$4810
 25669  0050E2  0060  F42C  F11A   	movff	?___awdiv+1,_GetIp$4810+1
 25670                           
 25671                           ; BSR set to: 1
 25672  0050E8  0060  F464  F112   	movff	_GetIp$4810,?_GetIp
 25673  0050EE  0060  F468  F113   	movff	_GetIp$4810+1,?_GetIp+1
 25674                           
 25675                           ; BSR set to: 1
 25676  0050F4  0012               	return		;funcret
 25677  0050F6                     __end_of_GetIp:
 25678                           	opt callstack 0
 25679                           
 25680 ;; *************** function _GetEp *****************
 25681 ;; Defined at:
 25682 ;;		line 167 in file "monitor.c"
 25683 ;; Parameters:    Size  Location     Type
 25684 ;;		None
 25685 ;; Auto vars:     Size  Location     Type
 25686 ;;		None
 25687 ;; Return value:  Size  Location     Type
 25688 ;;                  2   18[BANK1 ] short 
 25689 ;; Registers used:
 25690 ;;		wreg, status,2, status,0, cstack
 25691 ;; Tracked objects:
 25692 ;;		On entry : 3F/1
 25693 ;;		On exit  : 3F/1
 25694 ;;		Unchanged: 0/0
 25695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25696 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25699 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25700 ;;Total ram usage:        2 bytes
 25701 ;; Hardware stack levels used:    1
 25702 ;; Hardware stack levels required when called:   17
 25703 ;; This function calls:
 25704 ;;		___awdiv
 25705 ;; This function is called by:
 25706 ;;		_ValueDisplay
 25707 ;; This function uses a non-reentrant model
 25708 ;;
 25709                           
 25710                           	psect	text197
 25711  0098EE                     __ptext197:
 25712                           	opt callstack 0
 25713  0098EE                     _GetEp:
 25714                           	opt callstack 10
 25715                           
 25716                           ; BSR set to: 1
 25717                           
 25718                           ; BSR set to: 1
 25719                           ;incstack = 0
 25720  0098EE  0100               	movlb	0	; () banked
 25721  0098F0  51DA               	movf	_pe& (0+255),w,b
 25722  0098F2  25D4               	addwf	_lrpe& (0+255),w,b
 25723  0098F4  0101               	movlb	1	; () banked
 25724  0098F6  6F0A               	movwf	___awdiv@dividend& (0+255),b
 25725  0098F8  0100               	movlb	0	; () banked
 25726  0098FA  51DB               	movf	(_pe+1)& (0+255),w,b
 25727  0098FC  21D5               	addwfc	(_lrpe+1)& (0+255),w,b
 25728  0098FE  0101               	movlb	1	; () banked
 25729  009900  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 25730  009902  0E00               	movlw	0
 25731  009904  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25732  009906  0E0A               	movlw	10
 25733  009908  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25734  00990A  EC9D  F03F         	call	___awdiv	;wreg free
 25735  00990E  0060  F428  F112   	movff	?___awdiv,?_GetEp
 25736  009914  0060  F42C  F113   	movff	?___awdiv+1,?_GetEp+1
 25737                           
 25738                           ; BSR set to: 1
 25739  00991A  0012               	return		;funcret
 25740  00991C                     __end_of_GetEp:
 25741                           	opt callstack 0
 25742                           
 25743 ;; *************** function ___awdiv *****************
 25744 ;; Defined at:
 25745 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 25746 ;; Parameters:    Size  Location     Type
 25747 ;;  dividend        2   10[BANK1 ] int 
 25748 ;;  divisor         2   12[BANK1 ] int 
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;  quotient        2   16[BANK1 ] int 
 25751 ;;  sign            1   15[BANK1 ] unsigned char 
 25752 ;;  counter         1   14[BANK1 ] unsigned char 
 25753 ;; Return value:  Size  Location     Type
 25754 ;;                  2   10[BANK1 ] int 
 25755 ;; Registers used:
 25756 ;;		wreg, status,2, status,0
 25757 ;; Tracked objects:
 25758 ;;		On entry : 3F/1
 25759 ;;		On exit  : 3F/1
 25760 ;;		Unchanged: 0/0
 25761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25762 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25763 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25765 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25766 ;;Total ram usage:        8 bytes
 25767 ;; Hardware stack levels used:    1
 25768 ;; Hardware stack levels required when called:   16
 25769 ;; This function calls:
 25770 ;;		Nothing
 25771 ;; This function is called by:
 25772 ;;		_ValueDisplay
 25773 ;;		_GetEp
 25774 ;;		_GetIp
 25775 ;;		_GetPmax
 25776 ;;		_GetMaxPressure
 25777 ;;		_GetTargetIp
 25778 ;;		_GetTargetEp
 25779 ;;		_MonitorDump
 25780 ;;		_SetCalibrateState
 25781 ;;		_GetPressure_pa
 25782 ;;		_SeePressure_pa
 25783 ;;		_GetPressureV_pa
 25784 ;;		_SeePressureV_pa
 25785 ;; This function uses a non-reentrant model
 25786 ;;
 25787                           
 25788                           	psect	text198
 25789  007F3A                     __ptext198:
 25790                           	opt callstack 0
 25791  007F3A                     ___awdiv:
 25792                           	opt callstack 13
 25793                           
 25794                           ; BSR set to: 1
 25795                           
 25796                           ; BSR set to: 1
 25797                           ;incstack = 0
 25798  007F3A  0E00               	movlw	0
 25799  007F3C  6F0F               	movwf	___awdiv@sign& (0+255),b
 25800                           
 25801                           ; BSR set to: 1
 25802  007F3E  AF0D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25803  007F40  D006               	goto	l18367
 25804                           
 25805                           ; BSR set to: 1
 25806  007F42  6D0C               	negf	___awdiv@divisor& (0+255),b
 25807  007F44  1F0D               	comf	(___awdiv@divisor+1)& (0+255),f,b
 25808  007F46  B0D8               	btfsc	status,0,c
 25809  007F48  2B0D               	incf	(___awdiv@divisor+1)& (0+255),f,b
 25810                           
 25811                           ; BSR set to: 1
 25812  007F4A  0E01               	movlw	1
 25813  007F4C  6F0F               	movwf	___awdiv@sign& (0+255),b
 25814  007F4E                     l18367:
 25815                           
 25816                           ; BSR set to: 1
 25817  007F4E  AF0B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 25818  007F50  D006               	goto	l18373
 25819                           
 25820                           ; BSR set to: 1
 25821  007F52  6D0A               	negf	___awdiv@dividend& (0+255),b
 25822  007F54  1F0B               	comf	(___awdiv@dividend+1)& (0+255),f,b
 25823  007F56  B0D8               	btfsc	status,0,c
 25824  007F58  2B0B               	incf	(___awdiv@dividend+1)& (0+255),f,b
 25825                           
 25826                           ; BSR set to: 1
 25827  007F5A  0E01               	movlw	1
 25828  007F5C  1B0F               	xorwf	___awdiv@sign& (0+255),f,b
 25829  007F5E                     l18373:
 25830                           
 25831                           ; BSR set to: 1
 25832  007F5E  0E00               	movlw	0
 25833  007F60  6F11               	movwf	(___awdiv@quotient+1)& (0+255),b
 25834  007F62  0E00               	movlw	0
 25835  007F64  6F10               	movwf	___awdiv@quotient& (0+255),b
 25836                           
 25837                           ; BSR set to: 1
 25838  007F66  510C               	movf	___awdiv@divisor& (0+255),w,b
 25839  007F68  110D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 25840  007F6A  B4D8               	btfsc	status,2,c
 25841  007F6C  D01C               	goto	l18395
 25842                           
 25843                           ; BSR set to: 1
 25844  007F6E  0E01               	movlw	1
 25845  007F70  6F0E               	movwf	___awdiv@counter& (0+255),b
 25846  007F72  D004               	goto	l18381
 25847  007F74                     l18379:
 25848                           
 25849                           ; BSR set to: 1
 25850  007F74  90D8               	bcf	status,0,c
 25851  007F76  370C               	rlcf	___awdiv@divisor& (0+255),f,b
 25852  007F78  370D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 25853  007F7A  2B0E               	incf	___awdiv@counter& (0+255),f,b
 25854  007F7C                     l18381:
 25855                           
 25856                           ; BSR set to: 1
 25857  007F7C  AF0D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25858  007F7E  D7FA               	goto	l18379
 25859  007F80                     u17950:
 25860                           
 25861                           ; BSR set to: 1
 25862  007F80  90D8               	bcf	status,0,c
 25863  007F82  3710               	rlcf	___awdiv@quotient& (0+255),f,b
 25864  007F84  3711               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 25865                           
 25866                           ; BSR set to: 1
 25867  007F86  510C               	movf	___awdiv@divisor& (0+255),w,b
 25868  007F88  5D0A               	subwf	___awdiv@dividend& (0+255),w,b
 25869  007F8A  510D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25870  007F8C  590B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 25871  007F8E  A0D8               	btfss	status,0,c
 25872  007F90  D005               	goto	l18391
 25873                           
 25874                           ; BSR set to: 1
 25875  007F92  510C               	movf	___awdiv@divisor& (0+255),w,b
 25876  007F94  5F0A               	subwf	___awdiv@dividend& (0+255),f,b
 25877  007F96  510D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25878  007F98  5B0B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 25879                           
 25880                           ; BSR set to: 1
 25881  007F9A  8110               	bsf	___awdiv@quotient& (0+255),0,b
 25882  007F9C                     l18391:
 25883                           
 25884                           ; BSR set to: 1
 25885  007F9C  90D8               	bcf	status,0,c
 25886  007F9E  330D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 25887  007FA0  330C               	rrcf	___awdiv@divisor& (0+255),f,b
 25888                           
 25889                           ; BSR set to: 1
 25890  007FA2  2F0E               	decfsz	___awdiv@counter& (0+255),f,b
 25891  007FA4  D7ED               	goto	u17950
 25892  007FA6                     l18395:
 25893                           
 25894                           ; BSR set to: 1
 25895  007FA6  510F               	movf	___awdiv@sign& (0+255),w,b
 25896  007FA8  B4D8               	btfsc	status,2,c
 25897  007FAA  D004               	goto	l18399
 25898                           
 25899                           ; BSR set to: 1
 25900  007FAC  6D10               	negf	___awdiv@quotient& (0+255),b
 25901  007FAE  1F11               	comf	(___awdiv@quotient+1)& (0+255),f,b
 25902  007FB0  B0D8               	btfsc	status,0,c
 25903  007FB2  2B11               	incf	(___awdiv@quotient+1)& (0+255),f,b
 25904  007FB4                     l18399:
 25905                           
 25906                           ; BSR set to: 1
 25907  007FB4  0060  F440  F10A   	movff	___awdiv@quotient,?___awdiv
 25908  007FBA  0060  F444  F10B   	movff	___awdiv@quotient+1,?___awdiv+1
 25909                           
 25910                           ; BSR set to: 1
 25911  007FC0  0012               	return		;funcret
 25912  007FC2                     __end_of___awdiv:
 25913                           	opt callstack 0
 25914                           
 25915 ;; *************** function _GetDisableAlarmSV1 *****************
 25916 ;; Defined at:
 25917 ;;		line 881 in file "monitor.c"
 25918 ;; Parameters:    Size  Location     Type
 25919 ;;		None
 25920 ;; Auto vars:     Size  Location     Type
 25921 ;;		None
 25922 ;; Return value:  Size  Location     Type
 25923 ;;                  1    wreg      _Bool 
 25924 ;; Registers used:
 25925 ;;		wreg, status,2
 25926 ;; Tracked objects:
 25927 ;;		On entry : 3F/1
 25928 ;;		On exit  : 3F/0
 25929 ;;		Unchanged: 0/0
 25930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25935 ;;Total ram usage:        0 bytes
 25936 ;; Hardware stack levels used:    1
 25937 ;; Hardware stack levels required when called:   16
 25938 ;; This function calls:
 25939 ;;		Nothing
 25940 ;; This function is called by:
 25941 ;;		_ValueDisplay
 25942 ;; This function uses a non-reentrant model
 25943 ;;
 25944                           
 25945                           	psect	text199
 25946  00A5CE                     __ptext199:
 25947                           	opt callstack 0
 25948  00A5CE                     _GetDisableAlarmSV1:
 25949                           	opt callstack 11
 25950                           
 25951                           ; BSR set to: 1
 25952                           
 25953                           ; BSR set to: 1
 25954                           ;incstack = 0
 25955  00A5CE  0100               	movlb	0	; () banked
 25956  00A5D0  51F3               	movf	_disableAlarmSV1& (0+255),w,b
 25957                           
 25958                           ; BSR set to: 0
 25959  00A5D2  0012               	return		;funcret
 25960  00A5D4                     __end_of_GetDisableAlarmSV1:
 25961                           	opt callstack 0
 25962                           
 25963 ;; *************** function _GetBpm *****************
 25964 ;; Defined at:
 25965 ;;		line 165 in file "monitor.c"
 25966 ;; Parameters:    Size  Location     Type
 25967 ;;		None
 25968 ;; Auto vars:     Size  Location     Type
 25969 ;;		None
 25970 ;; Return value:  Size  Location     Type
 25971 ;;                  2    4[BANK1 ] short 
 25972 ;; Registers used:
 25973 ;;		None
 25974 ;; Tracked objects:
 25975 ;;		On entry : 3F/1
 25976 ;;		On exit  : 3F/1
 25977 ;;		Unchanged: 3F/0
 25978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25979 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25982 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25983 ;;Total ram usage:        2 bytes
 25984 ;; Hardware stack levels used:    1
 25985 ;; Hardware stack levels required when called:   16
 25986 ;; This function calls:
 25987 ;;		Nothing
 25988 ;; This function is called by:
 25989 ;;		_ValueDisplay
 25990 ;; This function uses a non-reentrant model
 25991 ;;
 25992                           
 25993                           	psect	text200
 25994  00A2FA                     __ptext200:
 25995                           	opt callstack 0
 25996  00A2FA                     _GetBpm:
 25997                           	opt callstack 11
 25998                           
 25999                           ; BSR set to: 1
 26000                           
 26001                           ; BSR set to: 0
 26002                           ;incstack = 0
 26003  00A2FA  0060  F958  F104   	movff	_bpm,?_GetBpm
 26004  00A300  0060  F95C  F105   	movff	_bpm+1,?_GetBpm+1
 26005                           
 26006                           ; BSR set to: 1
 26007  00A306  0012               	return		;funcret
 26008  00A308                     __end_of_GetBpm:
 26009                           	opt callstack 0
 26010                           
 26011 ;; *************** function _GetAlarmState *****************
 26012 ;; Defined at:
 26013 ;;		line 431 in file "alarm.c"
 26014 ;; Parameters:    Size  Location     Type
 26015 ;;		None
 26016 ;; Auto vars:     Size  Location     Type
 26017 ;;		None
 26018 ;; Return value:  Size  Location     Type
 26019 ;;                  2    8[BANK1 ] PTR unsigned char 
 26020 ;; Registers used:
 26021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26022 ;; Tracked objects:
 26023 ;;		On entry : 3F/0
 26024 ;;		On exit  : 3F/1
 26025 ;;		Unchanged: 0/0
 26026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26030 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26031 ;;Total ram usage:        2 bytes
 26032 ;; Hardware stack levels used:    1
 26033 ;; Hardware stack levels required when called:   17
 26034 ;; This function calls:
 26035 ;;		_AnyAlarm
 26036 ;; This function is called by:
 26037 ;;		_ValueDisplay
 26038 ;; This function uses a non-reentrant model
 26039 ;;
 26040                           
 26041                           	psect	text201
 26042  008F7E                     __ptext201:
 26043                           	opt callstack 0
 26044  008F7E                     _GetAlarmState:
 26045                           	opt callstack 10
 26046                           
 26047                           ; BSR set to: 0
 26048                           ;alarm.c: 432:     if (displayStatus==2) return "Hi";
 26049                           
 26050                           ; BSR set to: 1
 26051                           ;incstack = 0
 26052  008F7E  0E02               	movlw	2
 26053  008F80  19E0               	xorwf	_displayStatus& (0+255),w,b
 26054  008F82  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 26055  008F84  A4D8               	btfss	status,2,c
 26056  008F86  D006               	goto	l18737
 26057                           
 26058                           ; BSR set to: 0
 26059  008F88  0EF0               	movlw	low STR_26
 26060  008F8A  0101               	movlb	1	; () banked
 26061  008F8C  6F08               	movwf	?_GetAlarmState& (0+255),b
 26062  008F8E  0EFF               	movlw	high STR_26
 26063  008F90  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26064  008F92  0012               	return	
 26065  008F94                     l18737:
 26066                           
 26067                           ; BSR set to: 0
 26068                           ;alarm.c: 434:         if (AnyAlarm() && muteSec) return "Mu";
 26069  008F94  EC70  F04A         	call	_AnyAlarm	;wreg free
 26070  008F98  0900               	iorlw	0
 26071  008F9A  B4D8               	btfsc	status,2,c
 26072  008F9C  D009               	goto	l18747
 26073                           
 26074                           ; BSR set to: 1
 26075  008F9E  51EB               	movf	_muteSec& (0+255),w,b
 26076  008FA0  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 26077  008FA2  B4D8               	btfsc	status,2,c
 26078  008FA4  D005               	goto	l18747
 26079                           
 26080                           ; BSR set to: 1
 26081  008FA6  0EF6               	movlw	low STR_27
 26082  008FA8  6F08               	movwf	?_GetAlarmState& (0+255),b
 26083  008FAA  0EFF               	movlw	high STR_27
 26084  008FAC  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26085  008FAE  0012               	return	
 26086  008FB0                     l18747:
 26087                           
 26088                           ; BSR set to: 1
 26089  008FB0  EC70  F04A         	call	_AnyAlarm	;wreg free
 26090  008FB4  0900               	iorlw	0
 26091  008FB6  B4D8               	btfsc	status,2,c
 26092  008FB8  D005               	goto	l18753
 26093                           
 26094                           ; BSR set to: 1
 26095  008FBA  0EF3               	movlw	low STR_28
 26096  008FBC  6F08               	movwf	?_GetAlarmState& (0+255),b
 26097  008FBE  0EFF               	movlw	high STR_28
 26098  008FC0  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26099  008FC2  0012               	return	
 26100  008FC4                     l18753:
 26101                           
 26102                           ; BSR set to: 1
 26103                           ;alarm.c: 437:     return "  ";
 26104  008FC4  0EED               	movlw	low (STR_6+14)
 26105  008FC6  6F08               	movwf	?_GetAlarmState& (0+255),b
 26106  008FC8  0EFE               	movlw	high (STR_6+14)
 26107  008FCA  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26108                           
 26109                           ; BSR set to: 1
 26110  008FCC  0012               	return		;funcret
 26111  008FCE                     __end_of_GetAlarmState:
 26112                           	opt callstack 0
 26113                           
 26114 ;; *************** function _AnyAlarm *****************
 26115 ;; Defined at:
 26116 ;;		line 370 in file "alarm.c"
 26117 ;; Parameters:    Size  Location     Type
 26118 ;;		None
 26119 ;; Auto vars:     Size  Location     Type
 26120 ;;  i               2    6[BANK1 ] int 
 26121 ;; Return value:  Size  Location     Type
 26122 ;;                  1    wreg      _Bool 
 26123 ;; Registers used:
 26124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26125 ;; Tracked objects:
 26126 ;;		On entry : 3C/1
 26127 ;;		On exit  : 3F/1
 26128 ;;		Unchanged: 0/0
 26129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26131 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26132 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26133 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26134 ;;Total ram usage:        4 bytes
 26135 ;; Hardware stack levels used:    1
 26136 ;; Hardware stack levels required when called:   16
 26137 ;; This function calls:
 26138 ;;		Nothing
 26139 ;; This function is called by:
 26140 ;;		_MuteAlarm
 26141 ;;		_GetAlarmState
 26142 ;;		_AlarmUpdateLCD
 26143 ;;		_AlarmCheckTask
 26144 ;; This function uses a non-reentrant model
 26145 ;;
 26146                           
 26147                           	psect	text202
 26148  0094E0                     __ptext202:
 26149                           	opt callstack 0
 26150  0094E0                     _AnyAlarm:
 26151                           	opt callstack 13
 26152                           
 26153                           ;alarm.c: 371:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 26154                           
 26155                           ; BSR set to: 1
 26156                           ;incstack = 0
 26157  0094E0  0E00               	movlw	0
 26158  0094E2  0101               	movlb	1	; () banked
 26159  0094E4  6F07               	movwf	(AnyAlarm@i+1)& (0+255),b
 26160  0094E6  0E00               	movlw	0
 26161  0094E8  6F06               	movwf	AnyAlarm@i& (0+255),b
 26162  0094EA                     l18337:
 26163                           
 26164                           ; BSR set to: 1
 26165                           ;alarm.c: 372:         if (alarms[i]) return 1;
 26166  0094EA  90D8               	bcf	status,0,c
 26167  0094EC  3506               	rlcf	AnyAlarm@i& (0+255),w,b
 26168  0094EE  6ED9               	movwf	fsr2l,c
 26169  0094F0  3507               	rlcf	(AnyAlarm@i+1)& (0+255),w,b
 26170  0094F2  6EDA               	movwf	fsr2h,c
 26171  0094F4  0E00               	movlw	low _alarms
 26172  0094F6  26D9               	addwf	fsr2l,f,c
 26173  0094F8  0E03               	movlw	high _alarms
 26174  0094FA  22DA               	addwfc	fsr2h,f,c
 26175  0094FC  50DE               	movf	postinc2,w,c
 26176  0094FE  10DE               	iorwf	postinc2,w,c
 26177  009500  B4D8               	btfsc	status,2,c
 26178  009502  D002               	goto	l18343
 26179                           
 26180                           ; BSR set to: 1
 26181  009504  0E01               	movlw	1
 26182  009506  0012               	return	
 26183  009508                     l18343:
 26184                           
 26185                           ; BSR set to: 1
 26186                           ;alarm.c: 373:     }
 26187  009508  4B06               	infsnz	AnyAlarm@i& (0+255),f,b
 26188  00950A  2B07               	incf	(AnyAlarm@i+1)& (0+255),f,b
 26189                           
 26190                           ; BSR set to: 1
 26191  00950C  5107               	movf	(AnyAlarm@i+1)& (0+255),w,b
 26192  00950E  E104               	bnz	u17900
 26193  009510  0E13               	movlw	19
 26194  009512  5D06               	subwf	AnyAlarm@i& (0+255),w,b
 26195  009514  A0D8               	btfss	status,0,c
 26196  009516  D7E9               	goto	l18337
 26197  009518                     u17900:
 26198                           
 26199                           ; BSR set to: 1
 26200                           ;alarm.c: 374:     return 0;
 26201  009518  0E00               	movlw	0
 26202                           
 26203                           ; BSR set to: 1
 26204  00951A  0012               	return		;funcret
 26205  00951C                     __end_of_AnyAlarm:
 26206                           	opt callstack 0
 26207                           
 26208 ;; *************** function _AlarmSet *****************
 26209 ;; Defined at:
 26210 ;;		line 351 in file "alarm.c"
 26211 ;; Parameters:    Size  Location     Type
 26212 ;;  id              1    wreg     unsigned char 
 26213 ;; Auto vars:     Size  Location     Type
 26214 ;;  id              1    4[BANK1 ] unsigned char 
 26215 ;; Return value:  Size  Location     Type
 26216 ;;                  1    wreg      void 
 26217 ;; Registers used:
 26218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26219 ;; Tracked objects:
 26220 ;;		On entry : 3F/2
 26221 ;;		On exit  : 3F/1
 26222 ;;		Unchanged: 0/0
 26223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26225 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26227 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26228 ;;Total ram usage:        1 bytes
 26229 ;; Hardware stack levels used:    1
 26230 ;; Hardware stack levels required when called:   16
 26231 ;; This function calls:
 26232 ;;		Nothing
 26233 ;; This function is called by:
 26234 ;;		_AlarmCheckTask
 26235 ;; This function uses a non-reentrant model
 26236 ;;
 26237                           
 26238                           	psect	text203
 26239  009D96                     __ptext203:
 26240                           	opt callstack 0
 26241  009D96                     _AlarmSet:
 26242                           	opt callstack 13
 26243                           
 26244                           ; BSR set to: 1
 26245                           ;incstack = 0
 26246                           ;AlarmSet@id stored from wreg
 26247  009D96  0101               	movlb	1	; () banked
 26248  009D98  6F04               	movwf	AlarmSet@id& (0+255),b
 26249                           
 26250                           ;alarm.c: 352:     alarms[id] = 1;
 26251  009D9A  0101               	movlb	1	; () banked
 26252  009D9C  5104               	movf	AlarmSet@id& (0+255),w,b
 26253  009D9E  0D02               	mullw	2
 26254  009DA0  0E00               	movlw	low _alarms
 26255  009DA2  24F3               	addwf	243,w,c
 26256  009DA4  6ED9               	movwf	fsr2l,c
 26257  009DA6  0E03               	movlw	high _alarms
 26258  009DA8  20F4               	addwfc	prodh,w,c
 26259  009DAA  6EDA               	movwf	fsr2h,c
 26260  009DAC  0E01               	movlw	1
 26261  009DAE  6EDE               	movwf	postinc2,c
 26262  009DB0  0E00               	movlw	0
 26263  009DB2  6EDD               	movwf	postdec2,c
 26264                           
 26265                           ; BSR set to: 1
 26266  009DB4  0012               	return		;funcret
 26267  009DB6                     __end_of_AlarmSet:
 26268                           	opt callstack 0
 26269                           
 26270 ;; *************** function _AlarmClear *****************
 26271 ;; Defined at:
 26272 ;;		line 355 in file "alarm.c"
 26273 ;; Parameters:    Size  Location     Type
 26274 ;;  id              1    wreg     unsigned char 
 26275 ;; Auto vars:     Size  Location     Type
 26276 ;;  id              1    4[BANK1 ] unsigned char 
 26277 ;; Return value:  Size  Location     Type
 26278 ;;                  1    wreg      void 
 26279 ;; Registers used:
 26280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26281 ;; Tracked objects:
 26282 ;;		On entry : 3F/2
 26283 ;;		On exit  : 3F/1
 26284 ;;		Unchanged: 0/0
 26285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26287 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26289 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26290 ;;Total ram usage:        1 bytes
 26291 ;; Hardware stack levels used:    1
 26292 ;; Hardware stack levels required when called:   16
 26293 ;; This function calls:
 26294 ;;		Nothing
 26295 ;; This function is called by:
 26296 ;;		_AlarmCheckTask
 26297 ;; This function uses a non-reentrant model
 26298 ;;
 26299                           
 26300                           	psect	text204
 26301  009DB6                     __ptext204:
 26302                           	opt callstack 0
 26303  009DB6                     _AlarmClear:
 26304                           	opt callstack 13
 26305                           
 26306                           ; BSR set to: 1
 26307                           ;incstack = 0
 26308                           ;AlarmClear@id stored from wreg
 26309  009DB6  0101               	movlb	1	; () banked
 26310  009DB8  6F04               	movwf	AlarmClear@id& (0+255),b
 26311                           
 26312                           ;alarm.c: 356:     alarms[id] = 0;
 26313  009DBA  0101               	movlb	1	; () banked
 26314  009DBC  5104               	movf	AlarmClear@id& (0+255),w,b
 26315  009DBE  0D02               	mullw	2
 26316  009DC0  0E00               	movlw	low _alarms
 26317  009DC2  24F3               	addwf	243,w,c
 26318  009DC4  6ED9               	movwf	fsr2l,c
 26319  009DC6  0E03               	movlw	high _alarms
 26320  009DC8  20F4               	addwfc	prodh,w,c
 26321  009DCA  6EDA               	movwf	fsr2h,c
 26322  009DCC  0E00               	movlw	0
 26323  009DCE  6EDE               	movwf	postinc2,c
 26324  009DD0  0E00               	movlw	0
 26325  009DD2  6EDD               	movwf	postdec2,c
 26326                           
 26327                           ; BSR set to: 1
 26328  009DD4  0012               	return		;funcret
 26329  009DD6                     __end_of_AlarmClear:
 26330                           	opt callstack 0
 26331                           
 26332 ;; *************** function _INTERRUPT_InterruptManager *****************
 26333 ;; Defined at:
 26334 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 26335 ;; Parameters:    Size  Location     Type
 26336 ;;		None
 26337 ;; Auto vars:     Size  Location     Type
 26338 ;;		None
 26339 ;; Return value:  Size  Location     Type
 26340 ;;                  1    wreg      void 
 26341 ;; Registers used:
 26342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26343 ;; Tracked objects:
 26344 ;;		On entry : 0/0
 26345 ;;		On exit  : 0/0
 26346 ;;		Unchanged: 0/0
 26347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26350 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26351 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26352 ;;Total ram usage:        4 bytes
 26353 ;; Hardware stack levels used:    1
 26354 ;; Hardware stack levels required when called:   15
 26355 ;; This function calls:
 26356 ;;		Absolute function
 26357 ;;		_ADCC_ThresholdISR
 26358 ;;		_CMP1_ISR
 26359 ;;		_I2C2_Isr
 26360 ;;		_TMR0_ISR
 26361 ;;		_TMR1_ISR
 26362 ;;		_TMR4_ISR
 26363 ;;		_TMR5_ISR
 26364 ;;		_TMR6_ISR
 26365 ;;		_UART1_Receive_ISR
 26366 ;;		_UART1_Transmit_ISR
 26367 ;; This function is called by:
 26368 ;;		Interrupt level 2
 26369 ;; This function uses a non-reentrant model
 26370 ;;
 26371                           
 26372                           	psect	text205
 26373  0067D4                     __ptext205:
 26374                           	opt callstack 0
 26375  0067D4                     _INTERRUPT_InterruptManager:
 26376                           	opt callstack 2
 26377                           
 26378                           ; BSR set to: 1
 26379                           ;incstack = 0
 26380  0067D4  006F FFD8  F100    	movff	tblptrl,??_INTERRUPT_InterruptManager
 26381  0067DA  006F FFDC  F101    	movff	tblptrh,??_INTERRUPT_InterruptManager+1
 26382  0067E0  006F FFE0  F102    	movff	tblptru,??_INTERRUPT_InterruptManager+2
 26383  0067E6  006F FFD4  F103    	movff	tablat,??_INTERRUPT_InterruptManager+3
 26384                           
 26385                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE1bits.ADTIE == 1 && PIR1bits.ADT
      +                          IF == 1)
 26386  0067EC  0139               	movlb	57	; () banked
 26387  0067EE  B791               	btfsc	145,3,b	;volatile
 26388                           
 26389                           ; BSR set to: 57
 26390  0067F0  A7A1               	btfss	161,3,b	;volatile
 26391  0067F2  D003               	goto	i2l264
 26392  0067F4                     i2u2207_40:
 26393                           
 26394                           ; BSR set to: 57
 26395                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         ADCC_ThresholdISR();
 26396  0067F4  EC55  F04E         	call	_ADCC_ThresholdISR	;wreg free
 26397                           
 26398                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 26399  0067F8  D05A               	goto	i2l287
 26400  0067FA                     i2l264:
 26401                           
 26402                           ; BSR set to: 57
 26403  0067FA  B993               	btfsc	147,4,b	;volatile
 26404                           
 26405                           ; BSR set to: 57
 26406  0067FC  A9A3               	btfss	163,4,b	;volatile
 26407  0067FE  D009               	goto	i2l266
 26408                           
 26409                           ; BSR set to: 57
 26410                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         UART1_TxInterruptHandler();
 26411  006800  D801               	call	i2u2210_48
 26412  006802  D055               	goto	i2l287
 26413  006804                     i2u2210_48:
 26414  006804  0005               	push	
 26415  006806  6EFA               	movwf	pclath,c
 26416  006808  0102               	movlb	2	; () banked
 26417  00680A  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 26418  00680C  6EFD               	movwf	tosl,c
 26419  00680E  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 26420  006810  D023               	goto	L10
 26421  006812                     i2l266:
 26422                           
 26423                           ; BSR set to: 57
 26424  006812  B793               	btfsc	147,3,b	;volatile
 26425                           
 26426                           ; BSR set to: 57
 26427  006814  A7A3               	btfss	163,3,b	;volatile
 26428  006816  D009               	goto	i2l268
 26429                           
 26430                           ; BSR set to: 57
 26431                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         UART1_RxInterruptHandler();
 26432  006818  D801               	call	i2u2213_48
 26433  00681A  D049               	goto	i2l287
 26434  00681C                     i2u2213_48:
 26435  00681C  0005               	push	
 26436  00681E  6EFA               	movwf	pclath,c
 26437  006820  0102               	movlb	2	; () banked
 26438  006822  51F1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 26439  006824  6EFD               	movwf	tosl,c
 26440  006826  51F2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 26441  006828  D017               	goto	L10
 26442  00682A                     i2l268:
 26443                           
 26444                           ; BSR set to: 57
 26445  00682A  BF93               	btfsc	147,7,b	;volatile
 26446                           
 26447                           ; BSR set to: 57
 26448  00682C  AFA3               	btfss	163,7,b	;volatile
 26449  00682E  D003               	goto	i2l270
 26450                           
 26451                           ; BSR set to: 57
 26452                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         TMR0_ISR();
 26453  006830  EC89  F04E         	call	_TMR0_ISR	;wreg free
 26454                           
 26455                           ;mcc_generated_files/interrupt_manager.c: 76:     }
 26456  006834  D03C               	goto	i2l287
 26457  006836                     i2l270:
 26458                           
 26459                           ; BSR set to: 57
 26460  006836  B991               	btfsc	145,4,b	;volatile
 26461                           
 26462                           ; BSR set to: 57
 26463  006838  A9A1               	btfss	161,4,b	;volatile
 26464  00683A  D003               	goto	i2l272
 26465                           
 26466                           ; BSR set to: 57
 26467                           ;mcc_generated_files/interrupt_manager.c: 78:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 79:         CMP1_ISR();
 26468  00683C  EC9A  F04E         	call	_CMP1_ISR	;wreg free
 26469                           
 26470                           ;mcc_generated_files/interrupt_manager.c: 80:     }
 26471  006840  D036               	goto	i2l287
 26472  006842                     i2l272:
 26473                           
 26474                           ; BSR set to: 57
 26475  006842  B396               	btfsc	150,1,b	;volatile
 26476                           
 26477                           ; BSR set to: 57
 26478  006844  A3A6               	btfss	166,1,b	;volatile
 26479  006846  D00C               	goto	i2l274
 26480  006848                     i2u2219_40:
 26481                           
 26482                           ; BSR set to: 57
 26483                           ;mcc_generated_files/interrupt_manager.c: 82:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 83:         I2C2_InterruptHandler();
 26484  006848  D801               	call	i2u2220_48
 26485  00684A  D031               	goto	i2l287
 26486  00684C                     i2u2220_48:
 26487  00684C  0005               	push	
 26488  00684E  6EFA               	movwf	pclath,c
 26489  006850  0100               	movlb	0	; () banked
 26490  006852  51EE               	movf	_I2C2_InterruptHandler& (0+255),w,b
 26491  006854  6EFD               	movwf	tosl,c
 26492  006856  51EF               	movf	(_I2C2_InterruptHandler+1)& (0+255),w,b
 26493  006858                     L10:
 26494  006858  6EFE               	movwf	tosh,c
 26495  00685A  6AFF               	clrf	tosu,c
 26496  00685C  50FA               	movf	pclath,w,c
 26497  00685E  0012               	return		;indir
 26498  006860                     i2l274:
 26499                           
 26500                           ; BSR set to: 57
 26501  006860  AD95               	btfss	149,6,b	;volatile
 26502  006862  D002               	goto	i2l276
 26503                           
 26504                           ; BSR set to: 57
 26505  006864  BDA5               	btfsc	165,6,b	;volatile
 26506  006866  D7F0               	goto	i2u2219_40
 26507  006868                     i2l276:
 26508                           
 26509                           ; BSR set to: 57
 26510  006868  A196               	btfss	150,0,b	;volatile
 26511  00686A  D002               	goto	i2l278
 26512                           
 26513                           ; BSR set to: 57
 26514  00686C  B1A6               	btfsc	166,0,b	;volatile
 26515  00686E  D7EC               	goto	i2u2219_40
 26516  006870                     i2l278:
 26517                           
 26518                           ; BSR set to: 57
 26519  006870  AF95               	btfss	149,7,b	;volatile
 26520  006872  D002               	goto	i2l280
 26521                           
 26522                           ; BSR set to: 57
 26523  006874  BFA5               	btfsc	165,7,b	;volatile
 26524  006876  D7E8               	goto	i2u2219_40
 26525  006878                     i2l280:
 26526                           
 26527                           ; BSR set to: 57
 26528  006878  B199               	btfsc	153,0,b	;volatile
 26529                           
 26530                           ; BSR set to: 57
 26531  00687A  A1A9               	btfss	169,0,b	;volatile
 26532  00687C  D003               	goto	i2l282
 26533                           
 26534                           ; BSR set to: 57
 26535                           ;mcc_generated_files/interrupt_manager.c: 98:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 99:         TMR6_ISR();
 26536  00687E  EC67  F04E         	call	_TMR6_ISR	;wreg free
 26537                           
 26538                           ;mcc_generated_files/interrupt_manager.c: 100:     }
 26539  006882  D015               	goto	i2l287
 26540  006884                     i2l282:
 26541                           
 26542                           ; BSR set to: 57
 26543  006884  BD98               	btfsc	152,6,b	;volatile
 26544                           
 26545                           ; BSR set to: 57
 26546  006886  ADA8               	btfss	168,6,b	;volatile
 26547  006888  D003               	goto	i2l284
 26548                           
 26549                           ; BSR set to: 57
 26550                           ;mcc_generated_files/interrupt_manager.c: 102:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 103:         TMR5_ISR();
 26551  00688A  ECE8  F04B         	call	_TMR5_ISR	;wreg free
 26552                           
 26553                           ;mcc_generated_files/interrupt_manager.c: 104:     }
 26554  00688E  D00F               	goto	i2l287
 26555  006890                     i2l284:
 26556                           
 26557                           ; BSR set to: 57
 26558  006890  B197               	btfsc	151,0,b	;volatile
 26559                           
 26560                           ; BSR set to: 57
 26561  006892  A1A7               	btfss	167,0,b	;volatile
 26562  006894  D003               	goto	i2l286
 26563                           
 26564                           ; BSR set to: 57
 26565                           ;mcc_generated_files/interrupt_manager.c: 106:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 107:         TMR4_ISR();
 26566  006896  EC78  F04E         	call	_TMR4_ISR	;wreg free
 26567                           
 26568                           ;mcc_generated_files/interrupt_manager.c: 108:     }
 26569  00689A  D009               	goto	i2l287
 26570  00689C                     i2l286:
 26571                           
 26572                           ; BSR set to: 57
 26573  00689C  A791               	btfss	145,3,b	;volatile
 26574  00689E  D002               	goto	i2l288
 26575                           
 26576                           ; BSR set to: 57
 26577  0068A0  B7A1               	btfsc	161,3,b	;volatile
 26578  0068A2  D7A8               	goto	i2u2207_40
 26579  0068A4                     i2l288:
 26580                           
 26581                           ; BSR set to: 57
 26582  0068A4  B194               	btfsc	148,0,b	;volatile
 26583                           
 26584                           ; BSR set to: 57
 26585  0068A6  A1A4               	btfss	164,0,b	;volatile
 26586  0068A8  D002               	goto	i2l287
 26587                           
 26588                           ; BSR set to: 57
 26589                           ;mcc_generated_files/interrupt_manager.c: 114:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 115:         TMR1_ISR();
 26590  0068AA  EC01  F04C         	call	_TMR1_ISR	;wreg free
 26591  0068AE                     i2l287:
 26592                           
 26593                           ; BSR set to: 57
 26594  0068AE  0060  F40F  FFF5   	movff	??_INTERRUPT_InterruptManager+3,tablat
 26595  0068B4  0060  F40B  FFF8   	movff	??_INTERRUPT_InterruptManager+2,tblptru
 26596  0068BA  0060  F407  FFF7   	movff	??_INTERRUPT_InterruptManager+1,tblptrh
 26597  0068C0  0060  F403  FFF6   	movff	??_INTERRUPT_InterruptManager,tblptrl
 26598  0068C6  0011               	retfie		f
 26599  0068C8                     __end_of_INTERRUPT_InterruptManager:
 26600                           	opt callstack 0
 26601                           
 26602 ;; *************** function _UART1_Transmit_ISR *****************
 26603 ;; Defined at:
 26604 ;;		line 238 in file "mcc_generated_files/uart1.c"
 26605 ;; Parameters:    Size  Location     Type
 26606 ;;		None
 26607 ;; Auto vars:     Size  Location     Type
 26608 ;;		None
 26609 ;; Return value:  Size  Location     Type
 26610 ;;                  1    wreg      void 
 26611 ;; Registers used:
 26612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26613 ;; Tracked objects:
 26614 ;;		On entry : 3F/2
 26615 ;;		On exit  : 4/0
 26616 ;;		Unchanged: 0/0
 26617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26622 ;;Total ram usage:        0 bytes
 26623 ;; Hardware stack levels used:    1
 26624 ;; This function calls:
 26625 ;;		Nothing
 26626 ;; This function is called by:
 26627 ;;		_UART1_Initialize
 26628 ;;		_INTERRUPT_InterruptManager
 26629 ;; This function uses a non-reentrant model
 26630 ;;
 26631                           
 26632                           	psect	text206
 26633  00919C                     __ptext206:
 26634                           	opt callstack 0
 26635  00919C                     _UART1_Transmit_ISR:
 26636                           	opt callstack 16
 26637                           
 26638                           ; BSR set to: 2
 26639                           ;mcc_generated_files/uart1.c: 241:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 26640                           
 26641                           ;incstack = 0
 26642  00919C  0EB0               	movlw	176
 26643  00919E  5DEB               	subwf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 26644  0091A0  0E04               	movlw	4
 26645  0091A2  59EC               	subwfb	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 26646  0091A4  B0D8               	btfsc	status,0,c
 26647  0091A6  D01B               	goto	i2l669
 26648                           
 26649                           ; BSR set to: 2
 26650                           ;mcc_generated_files/uart1.c: 242:     {;mcc_generated_files/uart1.c: 243:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 26651  0091A8  0E64               	movlw	low _uart1TxBuffer
 26652  0091AA  0100               	movlb	0	; () banked
 26653  0091AC  25EC               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 26654  0091AE  6ED9               	movwf	fsr2l,c
 26655  0091B0  0E04               	movlw	high _uart1TxBuffer
 26656  0091B2  21ED               	addwfc	(_uart1TxTail+1)& (0+255),w,b	;volatile
 26657  0091B4  6EDA               	movwf	fsr2h,c
 26658  0091B6  50DF               	movf	indf2,w,c
 26659  0091B8  013D               	movlb	61	; () banked
 26660  0091BA  6FEA               	movwf	234,b	;volatile
 26661                           
 26662                           ; BSR set to: 61
 26663  0091BC  0100               	movlb	0	; () banked
 26664  0091BE  4BEC               	infsnz	_uart1TxTail& (0+255),f,b	;volatile
 26665  0091C0  2BED               	incf	(_uart1TxTail+1)& (0+255),f,b	;volatile
 26666                           
 26667                           ; BSR set to: 0
 26668                           ;mcc_generated_files/uart1.c: 244:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 26669  0091C2  0EB0               	movlw	176
 26670  0091C4  5DEC               	subwf	_uart1TxTail& (0+255),w,b	;volatile
 26671  0091C6  0E04               	movlw	4
 26672  0091C8  59ED               	subwfb	(_uart1TxTail+1)& (0+255),w,b	;volatile
 26673  0091CA  A0D8               	btfss	status,0,c
 26674  0091CC  D004               	goto	i2l15723
 26675                           
 26676                           ; BSR set to: 0
 26677                           ;mcc_generated_files/uart1.c: 245:         {;mcc_generated_files/uart1.c: 246:          
      +                             uart1TxTail = 0;
 26678  0091CE  0E00               	movlw	0
 26679  0091D0  6FED               	movwf	(_uart1TxTail+1)& (0+255),b	;volatile
 26680  0091D2  0E00               	movlw	0
 26681  0091D4  6FEC               	movwf	_uart1TxTail& (0+255),b	;volatile
 26682  0091D6                     i2l15723:
 26683                           
 26684                           ; BSR set to: 0
 26685                           ;mcc_generated_files/uart1.c: 248:         uart1TxBufferRemaining++;
 26686  0091D6  0102               	movlb	2	; () banked
 26687  0091D8  4BEB               	infsnz	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 26688  0091DA  2BEC               	incf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 26689                           
 26690                           ;mcc_generated_files/uart1.c: 249:     }
 26691  0091DC  0012               	return	
 26692  0091DE                     i2l669:
 26693                           
 26694                           ; BSR set to: 2
 26695                           ;mcc_generated_files/uart1.c: 251:     {;mcc_generated_files/uart1.c: 252:         PIE3b
      +                          its.U1TXIE = 0;
 26696  0091DE  0139               	movlb	57	; () banked
 26697  0091E0  9993               	bcf	147,4,b	;volatile
 26698  0091E2  0012               	return		;funcret
 26699  0091E4                     __end_of_UART1_Transmit_ISR:
 26700                           	opt callstack 0
 26701                           
 26702 ;; *************** function _UART1_Receive_ISR *****************
 26703 ;; Defined at:
 26704 ;;		line 258 in file "mcc_generated_files/uart1.c"
 26705 ;; Parameters:    Size  Location     Type
 26706 ;;		None
 26707 ;; Auto vars:     Size  Location     Type
 26708 ;;		None
 26709 ;; Return value:  Size  Location     Type
 26710 ;;                  1    wreg      void 
 26711 ;; Registers used:
 26712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 26713 ;; Tracked objects:
 26714 ;;		On entry : 3F/2
 26715 ;;		On exit  : 0/0
 26716 ;;		Unchanged: 0/0
 26717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26722 ;;Total ram usage:        0 bytes
 26723 ;; Hardware stack levels used:    1
 26724 ;; Hardware stack levels required when called:    2
 26725 ;; This function calls:
 26726 ;;		Absolute function
 26727 ;;		_UART1_DefaultErrorHandler
 26728 ;;		_UART1_DefaultFramingErrorHandler
 26729 ;;		_UART1_DefaultOverrunErrorHandler
 26730 ;;		_UART1_RxDataHandler
 26731 ;; This function is called by:
 26732 ;;		_UART1_Initialize
 26733 ;;		_INTERRUPT_InterruptManager
 26734 ;; This function uses a non-reentrant model
 26735 ;;
 26736                           
 26737                           	psect	text207
 26738  007832                     __ptext207:
 26739                           	opt callstack 0
 26740  007832                     _UART1_Receive_ISR:
 26741                           	opt callstack 14
 26742                           
 26743                           ; BSR set to: 2
 26744                           ;mcc_generated_files/uart1.c: 261:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 26745                           
 26746                           ;incstack = 0
 26747  007832  0E0A               	movlw	low _uart1RxStatusBuffer
 26748  007834  0101               	movlb	1	; () banked
 26749  007836  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26750  007838  6ED9               	movwf	fsr2l,c
 26751  00783A  6ADA               	clrf	fsr2h,c
 26752  00783C  0E02               	movlw	high _uart1RxStatusBuffer
 26753  00783E  22DA               	addwfc	fsr2h,f,c
 26754  007840  0E00               	movlw	0
 26755  007842  6EDF               	movwf	indf2,c
 26756                           
 26757                           ; BSR set to: 1
 26758                           ;mcc_generated_files/uart1.c: 263:     if(U1ERRIRbits.FERIF){
 26759  007844  013D               	movlb	61	; () banked
 26760  007846  A7F9               	btfss	249,3,b	;volatile
 26761  007848  D014               	goto	i2u1388_49
 26762                           
 26763                           ; BSR set to: 61
 26764                           ;mcc_generated_files/uart1.c: 264:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 26765  00784A  0E0A               	movlw	low _uart1RxStatusBuffer
 26766  00784C  0101               	movlb	1	; () banked
 26767  00784E  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26768  007850  6ED9               	movwf	fsr2l,c
 26769  007852  6ADA               	clrf	fsr2h,c
 26770  007854  0E02               	movlw	high _uart1RxStatusBuffer
 26771  007856  22DA               	addwfc	fsr2h,f,c
 26772  007858  0102               	movlb	2	; () banked
 26773  00785A  82DF               	bsf	indf2,1,c
 26774                           
 26775                           ; BSR set to: 2
 26776                           ;mcc_generated_files/uart1.c: 265:         UART1_FramingErrorHandler();
 26777  00785C  D801               	call	i2u1388_48
 26778  00785E  D009               	goto	i2u1388_49
 26779  007860                     i2u1388_48:
 26780  007860  0005               	push	
 26781  007862  6EFA               	movwf	pclath,c
 26782  007864  51E9               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 26783  007866  6EFD               	movwf	tosl,c
 26784  007868  51EA               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 26785  00786A  6EFE               	movwf	tosh,c
 26786  00786C  6AFF               	clrf	tosu,c
 26787  00786E  50FA               	movf	pclath,w,c
 26788  007870  0012               	return		;indir
 26789  007872                     i2u1388_49:
 26790                           
 26791                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.RXFOIF){
 26792  007872  013D               	movlb	61	; () banked
 26793  007874  A3F9               	btfss	249,1,b	;volatile
 26794  007876  D014               	goto	i2u1390_49
 26795                           
 26796                           ; BSR set to: 61
 26797                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 26798  007878  0E0A               	movlw	low _uart1RxStatusBuffer
 26799  00787A  0101               	movlb	1	; () banked
 26800  00787C  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26801  00787E  6ED9               	movwf	fsr2l,c
 26802  007880  6ADA               	clrf	fsr2h,c
 26803  007882  0E02               	movlw	high _uart1RxStatusBuffer
 26804  007884  22DA               	addwfc	fsr2h,f,c
 26805  007886  0102               	movlb	2	; () banked
 26806  007888  84DF               	bsf	indf2,2,c
 26807                           
 26808                           ; BSR set to: 2
 26809                           ;mcc_generated_files/uart1.c: 270:         UART1_OverrunErrorHandler();
 26810  00788A  D801               	call	i2u1390_48
 26811  00788C  D009               	goto	i2u1390_49
 26812  00788E                     i2u1390_48:
 26813  00788E  0005               	push	
 26814  007890  6EFA               	movwf	pclath,c
 26815  007892  51E7               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 26816  007894  6EFD               	movwf	tosl,c
 26817  007896  51E8               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 26818  007898  6EFE               	movwf	tosh,c
 26819  00789A  6AFF               	clrf	tosu,c
 26820  00789C  50FA               	movf	pclath,w,c
 26821  00789E  0012               	return		;indir
 26822  0078A0                     i2u1390_49:
 26823                           
 26824                           ;mcc_generated_files/uart1.c: 273:     if(uart1RxStatusBuffer[uart1RxHead].status){
 26825  0078A0  0E0A               	movlw	low _uart1RxStatusBuffer
 26826  0078A2  0101               	movlb	1	; () banked
 26827  0078A4  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 26828  0078A6  6ED9               	movwf	fsr2l,c
 26829  0078A8  6ADA               	clrf	fsr2h,c
 26830  0078AA  0E02               	movlw	high _uart1RxStatusBuffer
 26831  0078AC  22DA               	addwfc	fsr2h,f,c
 26832  0078AE  50DF               	movf	indf2,w,c
 26833  0078B0  B4D8               	btfsc	status,2,c
 26834  0078B2  D00C               	goto	i2l15743
 26835                           
 26836                           ; BSR set to: 1
 26837                           ;mcc_generated_files/uart1.c: 274:         UART1_ErrorHandler();
 26838  0078B4  D801               	call	i2u1392_48
 26839  0078B6  0012               	return	
 26840  0078B8                     i2u1392_48:
 26841  0078B8  0005               	push	
 26842  0078BA  6EFA               	movwf	pclath,c
 26843  0078BC  0102               	movlb	2	; () banked
 26844  0078BE  51E5               	movf	_UART1_ErrorHandler& (0+255),w,b
 26845  0078C0  6EFD               	movwf	tosl,c
 26846  0078C2  51E6               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 26847  0078C4  6EFE               	movwf	tosh,c
 26848  0078C6  6AFF               	clrf	tosu,c
 26849  0078C8  50FA               	movf	pclath,w,c
 26850  0078CA  0012               	return		;indir
 26851  0078CC                     i2l15743:
 26852                           
 26853                           ; BSR set to: 1
 26854                           ;mcc_generated_files/uart1.c: 276:         UART1_RxDataHandler();
 26855  0078CC  EC1F  F04E         	call	_UART1_RxDataHandler	;wreg free
 26856  0078D0  0012               	return		;funcret
 26857  0078D2                     __end_of_UART1_Receive_ISR:
 26858                           	opt callstack 0
 26859                           
 26860 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 26861 ;; Defined at:
 26862 ;;		line 294 in file "mcc_generated_files/uart1.c"
 26863 ;; Parameters:    Size  Location     Type
 26864 ;;		None
 26865 ;; Auto vars:     Size  Location     Type
 26866 ;;		None
 26867 ;; Return value:  Size  Location     Type
 26868 ;;                  1    wreg      void 
 26869 ;; Registers used:
 26870 ;;		None
 26871 ;; Tracked objects:
 26872 ;;		On entry : 3F/2
 26873 ;;		On exit  : 3F/2
 26874 ;;		Unchanged: 3F/0
 26875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26880 ;;Total ram usage:        0 bytes
 26881 ;; Hardware stack levels used:    1
 26882 ;; This function calls:
 26883 ;;		Nothing
 26884 ;; This function is called by:
 26885 ;;		_UART1_Initialize
 26886 ;;		_UART1_Receive_ISR
 26887 ;; This function uses a non-reentrant model
 26888 ;;
 26889                           
 26890                           	psect	text208
 26891  00A6AA                     __ptext208:
 26892                           	opt callstack 0
 26893  00A6AA                     _UART1_DefaultOverrunErrorHandler:
 26894                           	opt callstack 15
 26895                           
 26896                           ; BSR set to: 2
 26897                           
 26898                           ;incstack = 0
 26899  00A6AA  0012               	return		;funcret
 26900  00A6AC                     __end_of_UART1_DefaultOverrunErrorHandler:
 26901                           	opt callstack 0
 26902                           
 26903 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 26904 ;; Defined at:
 26905 ;;		line 292 in file "mcc_generated_files/uart1.c"
 26906 ;; Parameters:    Size  Location     Type
 26907 ;;		None
 26908 ;; Auto vars:     Size  Location     Type
 26909 ;;		None
 26910 ;; Return value:  Size  Location     Type
 26911 ;;                  1    wreg      void 
 26912 ;; Registers used:
 26913 ;;		None
 26914 ;; Tracked objects:
 26915 ;;		On entry : 3F/2
 26916 ;;		On exit  : 3F/2
 26917 ;;		Unchanged: 3F/0
 26918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26923 ;;Total ram usage:        0 bytes
 26924 ;; Hardware stack levels used:    1
 26925 ;; This function calls:
 26926 ;;		Nothing
 26927 ;; This function is called by:
 26928 ;;		_UART1_Initialize
 26929 ;;		_UART1_Receive_ISR
 26930 ;; This function uses a non-reentrant model
 26931 ;;
 26932                           
 26933                           	psect	text209
 26934  00A6AC                     __ptext209:
 26935                           	opt callstack 0
 26936  00A6AC                     _UART1_DefaultFramingErrorHandler:
 26937                           	opt callstack 15
 26938                           
 26939                           ; BSR set to: 2
 26940                           
 26941                           ; BSR set to: 2
 26942                           ;incstack = 0
 26943  00A6AC  0012               	return		;funcret
 26944  00A6AE                     __end_of_UART1_DefaultFramingErrorHandler:
 26945                           	opt callstack 0
 26946                           
 26947 ;; *************** function _UART1_DefaultErrorHandler *****************
 26948 ;; Defined at:
 26949 ;;		line 296 in file "mcc_generated_files/uart1.c"
 26950 ;; Parameters:    Size  Location     Type
 26951 ;;		None
 26952 ;; Auto vars:     Size  Location     Type
 26953 ;;		None
 26954 ;; Return value:  Size  Location     Type
 26955 ;;                  1    wreg      void 
 26956 ;; Registers used:
 26957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26958 ;; Tracked objects:
 26959 ;;		On entry : 3F/2
 26960 ;;		On exit  : 3F/1
 26961 ;;		Unchanged: 0/0
 26962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26967 ;;Total ram usage:        0 bytes
 26968 ;; Hardware stack levels used:    1
 26969 ;; Hardware stack levels required when called:    1
 26970 ;; This function calls:
 26971 ;;		_UART1_RxDataHandler
 26972 ;; This function is called by:
 26973 ;;		_UART1_Initialize
 26974 ;;		_UART1_Receive_ISR
 26975 ;; This function uses a non-reentrant model
 26976 ;;
 26977                           
 26978                           	psect	text210
 26979  00A5D4                     __ptext210:
 26980                           	opt callstack 0
 26981  00A5D4                     _UART1_DefaultErrorHandler:
 26982                           	opt callstack 14
 26983                           
 26984                           ; BSR set to: 2
 26985                           ;mcc_generated_files/uart1.c: 297:     UART1_RxDataHandler();
 26986                           
 26987                           ; BSR set to: 2
 26988                           ;incstack = 0
 26989  00A5D4  EC1F  F04E         	call	_UART1_RxDataHandler	;wreg free
 26990                           
 26991                           ; BSR set to: 1
 26992  00A5D8  0012               	return		;funcret
 26993  00A5DA                     __end_of_UART1_DefaultErrorHandler:
 26994                           	opt callstack 0
 26995                           
 26996 ;; *************** function _UART1_RxDataHandler *****************
 26997 ;; Defined at:
 26998 ;;		line 282 in file "mcc_generated_files/uart1.c"
 26999 ;; Parameters:    Size  Location     Type
 27000 ;;		None
 27001 ;; Auto vars:     Size  Location     Type
 27002 ;;		None
 27003 ;; Return value:  Size  Location     Type
 27004 ;;                  1    wreg      void 
 27005 ;; Registers used:
 27006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27007 ;; Tracked objects:
 27008 ;;		On entry : 3C/1
 27009 ;;		On exit  : 3F/1
 27010 ;;		Unchanged: 0/0
 27011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27016 ;;Total ram usage:        0 bytes
 27017 ;; Hardware stack levels used:    1
 27018 ;; This function calls:
 27019 ;;		Nothing
 27020 ;; This function is called by:
 27021 ;;		_UART1_Receive_ISR
 27022 ;;		_UART1_DefaultErrorHandler
 27023 ;; This function uses a non-reentrant model
 27024 ;;
 27025                           
 27026                           	psect	text211
 27027  009C3E                     __ptext211:
 27028                           	opt callstack 0
 27029  009C3E                     _UART1_RxDataHandler:
 27030                           	opt callstack 15
 27031                           
 27032                           ;mcc_generated_files/uart1.c: 284:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 27033                           
 27034                           ; BSR set to: 1
 27035                           ;incstack = 0
 27036  009C3E  0E12               	movlw	low _uart1RxBuffer
 27037  009C40  0101               	movlb	1	; () banked
 27038  009C42  25F3               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 27039  009C44  6ED9               	movwf	fsr2l,c
 27040  009C46  6ADA               	clrf	fsr2h,c
 27041  009C48  0E02               	movlw	high _uart1RxBuffer
 27042  009C4A  22DA               	addwfc	fsr2h,f,c
 27043  009C4C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27044                           
 27045                           ; BSR set to: 1
 27046  009C52  2BF3               	incf	_uart1RxHead& (0+255),f,b	;volatile
 27047                           
 27048                           ; BSR set to: 1
 27049                           ;mcc_generated_files/uart1.c: 285:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 27050  009C54  0E07               	movlw	7
 27051  009C56  65F3               	cpfsgt	_uart1RxHead& (0+255),b
 27052  009C58  D002               	goto	i2l13119
 27053                           
 27054                           ; BSR set to: 1
 27055                           ;mcc_generated_files/uart1.c: 286:     {;mcc_generated_files/uart1.c: 287:         uart1
      +                          RxHead = 0;
 27056  009C5A  0E00               	movlw	0
 27057  009C5C  6FF3               	movwf	_uart1RxHead& (0+255),b	;volatile
 27058  009C5E                     i2l13119:
 27059                           
 27060                           ; BSR set to: 1
 27061                           ;mcc_generated_files/uart1.c: 289:     uart1RxCount++;
 27062  009C5E  2BF1               	incf	_uart1RxCount& (0+255),f,b	;volatile
 27063                           
 27064                           ; BSR set to: 1
 27065  009C60  0012               	return		;funcret
 27066  009C62                     __end_of_UART1_RxDataHandler:
 27067                           	opt callstack 0
 27068                           
 27069 ;; *************** function _TMR6_ISR *****************
 27070 ;; Defined at:
 27071 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 27072 ;; Parameters:    Size  Location     Type
 27073 ;;		None
 27074 ;; Auto vars:     Size  Location     Type
 27075 ;;		None
 27076 ;; Return value:  Size  Location     Type
 27077 ;;                  1    wreg      void 
 27078 ;; Registers used:
 27079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27080 ;; Tracked objects:
 27081 ;;		On entry : 3F/39
 27082 ;;		On exit  : 0/0
 27083 ;;		Unchanged: 0/0
 27084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27089 ;;Total ram usage:        0 bytes
 27090 ;; Hardware stack levels used:    1
 27091 ;; Hardware stack levels required when called:   10
 27092 ;; This function calls:
 27093 ;;		Absolute function
 27094 ;;		_ControllerTimerHandler
 27095 ;;		_TMR6_DefaultInterruptHandler
 27096 ;; This function is called by:
 27097 ;;		_INTERRUPT_InterruptManager
 27098 ;; This function uses a non-reentrant model
 27099 ;;
 27100                           
 27101                           	psect	text212
 27102  009CCE                     __ptext212:
 27103                           	opt callstack 0
 27104  009CCE                     _TMR6_ISR:
 27105                           	opt callstack 6
 27106                           
 27107                           ; BSR set to: 57
 27108                           ;mcc_generated_files/tmr6.c: 169:     PIR9bits.TMR6IF = 0;
 27109                           
 27110                           ; BSR set to: 1
 27111                           ;incstack = 0
 27112  009CCE  91A9               	bcf	169,0,b	;volatile
 27113                           
 27114                           ; BSR set to: 57
 27115                           ;mcc_generated_files/tmr6.c: 171:     if(TMR6_InterruptHandler)
 27116  009CD0  0102               	movlb	2	; () banked
 27117  009CD2  51D9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27118  009CD4  11DA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27119  009CD6  B4D8               	btfsc	status,2,c
 27120  009CD8  0012               	return	
 27121                           
 27122                           ; BSR set to: 2
 27123                           ;mcc_generated_files/tmr6.c: 172:     {;mcc_generated_files/tmr6.c: 173:         TMR6_In
      +                          terruptHandler();
 27124  009CDA  D801               	call	i2u2124_48
 27125  009CDC  0012               	return	
 27126  009CDE                     i2u2124_48:
 27127  009CDE  0005               	push	
 27128  009CE0  6EFA               	movwf	pclath,c
 27129  009CE2  51D9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27130  009CE4  6EFD               	movwf	tosl,c
 27131  009CE6  51DA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27132  009CE8  6EFE               	movwf	tosh,c
 27133  009CEA  6AFF               	clrf	tosu,c
 27134  009CEC  50FA               	movf	pclath,w,c
 27135  009CEE  0012               	return		;indir
 27136  009CF0                     __end_of_TMR6_ISR:
 27137                           	opt callstack 0
 27138                           
 27139 ;; *************** function _ControllerTimerHandler *****************
 27140 ;; Defined at:
 27141 ;;		line 193 in file "controller.c"
 27142 ;; Parameters:    Size  Location     Type
 27143 ;;		None
 27144 ;; Auto vars:     Size  Location     Type
 27145 ;;		None
 27146 ;; Return value:  Size  Location     Type
 27147 ;;                  1    wreg      void 
 27148 ;; Registers used:
 27149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27150 ;; Tracked objects:
 27151 ;;		On entry : 3F/2
 27152 ;;		On exit  : 3F/2
 27153 ;;		Unchanged: 0/0
 27154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27159 ;;Total ram usage:        0 bytes
 27160 ;; Hardware stack levels used:    1
 27161 ;; Hardware stack levels required when called:    9
 27162 ;; This function calls:
 27163 ;;		_SetControlFailAlarm
 27164 ;;		i2_ClearControlFailAlarm
 27165 ;;		i2___awmod
 27166 ;;		i2_printf
 27167 ;; This function is called by:
 27168 ;;		_ControllerInit
 27169 ;;		_TMR6_ISR
 27170 ;; This function uses a non-reentrant model
 27171 ;;
 27172                           
 27173                           	psect	text213
 27174  00804A                     __ptext213:
 27175                           	opt callstack 0
 27176  00804A                     _ControllerTimerHandler:
 27177                           	opt callstack 6
 27178                           
 27179                           ; BSR set to: 2
 27180                           ;controller.c: 194:     static int errors=0;;controller.c: 195:     if (!commandReceived
      +                          ) {
 27181                           
 27182                           ;incstack = 0
 27183  00804A  519B               	movf	_commandReceived& (0+255),w,b
 27184  00804C  A4D8               	btfss	status,2,c
 27185  00804E  D01A               	goto	i2l21685
 27186                           
 27187                           ; BSR set to: 2
 27188                           ;controller.c: 197:         if (run) {
 27189  008050  0100               	movlb	0	; () banked
 27190  008052  51F0               	movf	_run& (0+255),w,b
 27191  008054  B4D8               	btfsc	status,2,c
 27192  008056  D013               	goto	i2l21683
 27193                           
 27194                           ; BSR set to: 0
 27195                           ;controller.c: 198:             printf("EC ");
 27196  008058  0ED4               	movlw	low STR_54
 27197  00805A  6F77               	movwf	i2printf@fmt& (0+255),b
 27198  00805C  0EFF               	movlw	high STR_54
 27199  00805E  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27200  008060  ECE8  F04D         	call	i2_printf	;wreg free
 27201                           
 27202                           ; BSR set to: 2
 27203                           ;controller.c: 199:             errors++;
 27204  008064  4B2E               	infsnz	ControllerTimerHandler@errors& (0+255),f,b
 27205  008066  2B2F               	incf	(ControllerTimerHandler@errors+1)& (0+255),f,b
 27206                           
 27207                           ; BSR set to: 2
 27208                           ;controller.c: 200:             if (errors>10) SetControlFailAlarm();
 27209  008068  BF2F               	btfsc	(ControllerTimerHandler@errors+1)& (0+255),7,b
 27210  00806A  D010               	goto	i2l21687
 27211  00806C  512F               	movf	(ControllerTimerHandler@errors+1)& (0+255),w,b
 27212  00806E  E104               	bnz	i2u2115_40
 27213  008070  0E0B               	movlw	11
 27214  008072  5D2E               	subwf	ControllerTimerHandler@errors& (0+255),w,b
 27215  008074  A0D8               	btfss	status,0,c
 27216  008076  D00A               	goto	i2l21687
 27217  008078                     i2u2115_40:
 27218                           
 27219                           ; BSR set to: 2
 27220  008078  EC98  F052         	call	_SetControlFailAlarm	;wreg free
 27221  00807C  D007               	goto	i2l21687
 27222  00807E                     i2l21683:
 27223                           
 27224                           ; BSR set to: 0
 27225                           ;controller.c: 202:             ClearControlFailAlarm();
 27226  00807E  ECB0  F052         	call	i2_ClearControlFailAlarm	;wreg free
 27227  008082  D004               	goto	i2l21687
 27228  008084                     i2l21685:
 27229                           
 27230                           ; BSR set to: 2
 27231                           ;controller.c: 206:         errors = 0;
 27232  008084  0E00               	movlw	0
 27233  008086  6F2F               	movwf	(ControllerTimerHandler@errors+1)& (0+255),b
 27234  008088  0E00               	movlw	0
 27235  00808A  6F2E               	movwf	ControllerTimerHandler@errors& (0+255),b
 27236  00808C                     i2l21687:
 27237                           
 27238                           ;controller.c: 208:     static int16_t cnt=0;;controller.c: 209:     cnt = (cnt+1)%100;
 27239  00808C  0E01               	movlw	1
 27240  00808E  0102               	movlb	2	; () banked
 27241  008090  252C               	addwf	ControllerTimerHandler@cnt& (0+255),w,b
 27242  008092  6E01               	movwf	i2___awmod@dividend^0,c
 27243  008094  0E00               	movlw	0
 27244  008096  212D               	addwfc	(ControllerTimerHandler@cnt+1)& (0+255),w,b
 27245  008098  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 27246  00809A  0E00               	movlw	0
 27247  00809C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 27248  00809E  0E64               	movlw	100
 27249  0080A0  6E03               	movwf	i2___awmod@divisor^0,c
 27250  0080A2  EC9D  F041         	call	i2___awmod	;wreg free
 27251  0080A6  0060  F004  F22C   	movff	?i2___awmod,ControllerTimerHandler@cnt
 27252  0080AC  0060  F008  F22D   	movff	?i2___awmod+1,ControllerTimerHandler@cnt+1
 27253                           
 27254                           ;controller.c: 210:     if (cnt==0) printf("&\r\n");
 27255  0080B2  0102               	movlb	2	; () banked
 27256  0080B4  512C               	movf	ControllerTimerHandler@cnt& (0+255),w,b
 27257  0080B6  112D               	iorwf	(ControllerTimerHandler@cnt+1)& (0+255),w,b
 27258  0080B8  A4D8               	btfss	status,2,c
 27259  0080BA  D007               	goto	i2l21693
 27260                           
 27261                           ; BSR set to: 2
 27262  0080BC  0ED0               	movlw	low STR_55
 27263  0080BE  0100               	movlb	0	; () banked
 27264  0080C0  6F77               	movwf	i2printf@fmt& (0+255),b
 27265  0080C2  0EFF               	movlw	high STR_55
 27266  0080C4  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27267  0080C6  ECE8  F04D         	call	i2_printf	;wreg free
 27268  0080CA                     i2l21693:
 27269                           
 27270                           ; BSR set to: 2
 27271                           ;controller.c: 211:     commandReceived = 0;
 27272  0080CA  0E00               	movlw	0
 27273  0080CC  6F9B               	movwf	_commandReceived& (0+255),b
 27274                           
 27275                           ; BSR set to: 2
 27276  0080CE  0012               	return		;funcret
 27277  0080D0                     __end_of_ControllerTimerHandler:
 27278                           	opt callstack 0
 27279                           
 27280 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27281 ;; Defined at:
 27282 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27283 ;; Parameters:    Size  Location     Type
 27284 ;;		None
 27285 ;; Auto vars:     Size  Location     Type
 27286 ;;		None
 27287 ;; Return value:  Size  Location     Type
 27288 ;;                  1    wreg      void 
 27289 ;; Registers used:
 27290 ;;		None
 27291 ;; Tracked objects:
 27292 ;;		On entry : 3F/2
 27293 ;;		On exit  : 3F/2
 27294 ;;		Unchanged: 3F/0
 27295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27300 ;;Total ram usage:        0 bytes
 27301 ;; Hardware stack levels used:    1
 27302 ;; This function calls:
 27303 ;;		Nothing
 27304 ;; This function is called by:
 27305 ;;		_TMR6_Initialize
 27306 ;;		_TMR6_ISR
 27307 ;; This function uses a non-reentrant model
 27308 ;;
 27309                           
 27310                           	psect	text214
 27311  00A6AE                     __ptext214:
 27312                           	opt callstack 0
 27313  00A6AE                     _TMR6_DefaultInterruptHandler:
 27314                           	opt callstack 15
 27315                           
 27316                           ; BSR set to: 2
 27317                           
 27318                           ; BSR set to: 2
 27319                           ;incstack = 0
 27320  00A6AE  0012               	return		;funcret
 27321  00A6B0                     __end_of_TMR6_DefaultInterruptHandler:
 27322                           	opt callstack 0
 27323                           
 27324 ;; *************** function _TMR5_ISR *****************
 27325 ;; Defined at:
 27326 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 27327 ;; Parameters:    Size  Location     Type
 27328 ;;		None
 27329 ;; Auto vars:     Size  Location     Type
 27330 ;;		None
 27331 ;; Return value:  Size  Location     Type
 27332 ;;                  1    wreg      void 
 27333 ;; Registers used:
 27334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27335 ;; Tracked objects:
 27336 ;;		On entry : 3F/39
 27337 ;;		On exit  : 0/0
 27338 ;;		Unchanged: 0/0
 27339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27344 ;;Total ram usage:        0 bytes
 27345 ;; Hardware stack levels used:    1
 27346 ;; Hardware stack levels required when called:   10
 27347 ;; This function calls:
 27348 ;;		Absolute function
 27349 ;;		_AlarmHandler
 27350 ;;		_TMR5_DefaultInterruptHandler
 27351 ;;		_TMR5_WriteTimer
 27352 ;; This function is called by:
 27353 ;;		_INTERRUPT_InterruptManager
 27354 ;; This function uses a non-reentrant model
 27355 ;;
 27356                           
 27357                           	psect	text215
 27358  0097D0                     __ptext215:
 27359                           	opt callstack 0
 27360  0097D0                     _TMR5_ISR:
 27361                           	opt callstack 6
 27362                           
 27363                           ; BSR set to: 57
 27364                           ;mcc_generated_files/tmr5.c: 168:     PIR8bits.TMR5IF = 0;
 27365                           
 27366                           ; BSR set to: 2
 27367                           ;incstack = 0
 27368  0097D0  9DA8               	bcf	168,6,b	;volatile
 27369                           
 27370                           ; BSR set to: 57
 27371                           ;mcc_generated_files/tmr5.c: 169:     TMR5_WriteTimer(timer5ReloadVal);
 27372  0097D2  0060  FB8C  F001   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 27373  0097D8  0060  FB90  F002   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 27374  0097DE  EC31  F04E         	call	_TMR5_WriteTimer	;wreg free
 27375                           
 27376                           ; BSR set to: 57
 27377                           ;mcc_generated_files/tmr5.c: 171:     if(TMR5_InterruptHandler)
 27378  0097E2  0102               	movlb	2	; () banked
 27379  0097E4  51E1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27380  0097E6  11E2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27381  0097E8  B4D8               	btfsc	status,2,c
 27382  0097EA  0012               	return	
 27383                           
 27384                           ; BSR set to: 2
 27385                           ;mcc_generated_files/tmr5.c: 172:     {;mcc_generated_files/tmr5.c: 173:         TMR5_In
      +                          terruptHandler();
 27386  0097EC  D801               	call	i2u2126_48
 27387  0097EE  0012               	return	
 27388  0097F0                     i2u2126_48:
 27389  0097F0  0005               	push	
 27390  0097F2  6EFA               	movwf	pclath,c
 27391  0097F4  51E1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27392  0097F6  6EFD               	movwf	tosl,c
 27393  0097F8  51E2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27394  0097FA  6EFE               	movwf	tosh,c
 27395  0097FC  6AFF               	clrf	tosu,c
 27396  0097FE  50FA               	movf	pclath,w,c
 27397  009800  0012               	return		;indir
 27398  009802                     __end_of_TMR5_ISR:
 27399                           	opt callstack 0
 27400                           
 27401 ;; *************** function _TMR5_WriteTimer *****************
 27402 ;; Defined at:
 27403 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 27404 ;; Parameters:    Size  Location     Type
 27405 ;;  timerVal        2    0[COMRAM] unsigned short 
 27406 ;; Auto vars:     Size  Location     Type
 27407 ;;		None
 27408 ;; Return value:  Size  Location     Type
 27409 ;;                  1    wreg      void 
 27410 ;; Registers used:
 27411 ;;		None
 27412 ;; Tracked objects:
 27413 ;;		On entry : 3F/39
 27414 ;;		On exit  : 3F/39
 27415 ;;		Unchanged: 3E/0
 27416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27421 ;;Total ram usage:        2 bytes
 27422 ;; Hardware stack levels used:    1
 27423 ;; This function calls:
 27424 ;;		Nothing
 27425 ;; This function is called by:
 27426 ;;		_TMR5_ISR
 27427 ;; This function uses a non-reentrant model
 27428 ;;
 27429                           
 27430                           	psect	text216
 27431  009C62                     __ptext216:
 27432                           	opt callstack 0
 27433  009C62                     _TMR5_WriteTimer:
 27434                           	opt callstack 15
 27435                           
 27436                           ; BSR set to: 57
 27437                           ;mcc_generated_files/tmr5.c: 127: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 128: {;mcc_generated_files/tmr5.c: 129:     if (T5CONbits.NOT_SYNC == 1)
 27438                           
 27439                           ;incstack = 0
 27440  009C62  A49A               	btfss	154,2,c	;volatile
 27441  009C64  D009               	goto	i2l750
 27442                           
 27443                           ; BSR set to: 57
 27444                           ;mcc_generated_files/tmr5.c: 130:     {;mcc_generated_files/tmr5.c: 132:         T5CONbi
      +                          ts.TMR5ON = 0;
 27445  009C66  909A               	bcf	154,0,c	;volatile
 27446                           
 27447                           ;mcc_generated_files/tmr5.c: 135:         TMR5H = (timerVal >> 8);
 27448  009C68  0060  F00B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 27449                           
 27450                           ;mcc_generated_files/tmr5.c: 136:         TMR5L = timerVal;
 27451  009C6E  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 27452                           
 27453                           ;mcc_generated_files/tmr5.c: 139:         T5CONbits.TMR5ON =1;
 27454  009C74  809A               	bsf	154,0,c	;volatile
 27455                           
 27456                           ;mcc_generated_files/tmr5.c: 140:     }
 27457  009C76  0012               	return	
 27458  009C78                     i2l750:
 27459                           
 27460                           ; BSR set to: 57
 27461                           ;mcc_generated_files/tmr5.c: 142:     {;mcc_generated_files/tmr5.c: 144:         TMR5H =
      +                           (timerVal >> 8);
 27462  009C78  0060  F00B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 27463                           
 27464                           ;mcc_generated_files/tmr5.c: 145:         TMR5L = timerVal;
 27465  009C7E  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 27466                           
 27467                           ; BSR set to: 57
 27468  009C84  0012               	return		;funcret
 27469  009C86                     __end_of_TMR5_WriteTimer:
 27470                           	opt callstack 0
 27471                           
 27472 ;; *************** function _AlarmHandler *****************
 27473 ;; Defined at:
 27474 ;;		line 557 in file "alarm.c"
 27475 ;; Parameters:    Size  Location     Type
 27476 ;;		None
 27477 ;; Auto vars:     Size  Location     Type
 27478 ;;		None
 27479 ;; Return value:  Size  Location     Type
 27480 ;;                  1    wreg      void 
 27481 ;; Registers used:
 27482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27483 ;; Tracked objects:
 27484 ;;		On entry : 3F/2
 27485 ;;		On exit  : 3F/2
 27486 ;;		Unchanged: 0/0
 27487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27492 ;;Total ram usage:        2 bytes
 27493 ;; Hardware stack levels used:    1
 27494 ;; Hardware stack levels required when called:    9
 27495 ;; This function calls:
 27496 ;;		i2_AnyAlarm
 27497 ;;		i2_printf
 27498 ;; This function is called by:
 27499 ;;		_AlarmInit
 27500 ;;		_TMR5_ISR
 27501 ;; This function uses a non-reentrant model
 27502 ;;
 27503                           
 27504                           	psect	text217
 27505  0087FC                     __ptext217:
 27506                           	opt callstack 0
 27507  0087FC                     _AlarmHandler:
 27508                           	opt callstack 6
 27509                           
 27510                           ; BSR set to: 2
 27511                           ;alarm.c: 560:     if (muteSec && AnyAlarm()) muteSec--;
 27512                           
 27513                           ; BSR set to: 57
 27514                           ;incstack = 0
 27515  0087FC  0101               	movlb	1	; () banked
 27516  0087FE  51EB               	movf	_muteSec& (0+255),w,b
 27517  008800  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 27518  008802  B4D8               	btfsc	status,2,c
 27519  008804  D00A               	goto	i2l21009
 27520                           
 27521                           ; BSR set to: 1
 27522  008806  EC8E  F04A         	call	i2_AnyAlarm	;wreg free
 27523  00880A  0900               	iorlw	0
 27524  00880C  B4D8               	btfsc	status,2,c
 27525  00880E  D005               	goto	i2l21009
 27526  008810  0101               	movlb	1	; () banked
 27527  008812  07EB               	decf	_muteSec& (0+255),f,b
 27528  008814  A0D8               	btfss	status,0,c
 27529  008816  07EC               	decf	(_muteSec+1)& (0+255),f,b
 27530  008818  D005               	goto	i2l21011
 27531  00881A                     i2l21009:
 27532  00881A  0E00               	movlw	0
 27533  00881C  0101               	movlb	1	; () banked
 27534  00881E  6FEC               	movwf	(_muteSec+1)& (0+255),b
 27535  008820  0E00               	movlw	0
 27536  008822  6FEB               	movwf	_muteSec& (0+255),b
 27537  008824                     i2l21011:
 27538                           
 27539                           ; BSR set to: 1
 27540                           ;alarm.c: 562:     if (histSec) histSec--;
 27541  008824  51E9               	movf	_histSec& (0+255),w,b
 27542  008826  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 27543  008828  B4D8               	btfsc	status,2,c
 27544  00882A  D003               	goto	i2l21015
 27545                           
 27546                           ; BSR set to: 1
 27547  00882C  07E9               	decf	_histSec& (0+255),f,b
 27548  00882E  A0D8               	btfss	status,0,c
 27549  008830  07EA               	decf	(_histSec+1)& (0+255),f,b
 27550  008832                     i2l21015:
 27551                           
 27552                           ; BSR set to: 1
 27553                           ;alarm.c: 564:     alarmCheck = 1;
 27554  008832  0E01               	movlw	1
 27555  008834  0102               	movlb	2	; () banked
 27556  008836  6FA3               	movwf	_alarmCheck& (0+255),b
 27557                           
 27558                           ; BSR set to: 2
 27559                           ;alarm.c: 566:     static int16_t cnt = 0;;alarm.c: 567:     if (cnt==0) printf("A\r\n")
      +                          ;
 27560  008838  5172               	movf	AlarmHandler@cnt& (0+255),w,b
 27561  00883A  1173               	iorwf	(AlarmHandler@cnt+1)& (0+255),w,b
 27562  00883C  A4D8               	btfss	status,2,c
 27563  00883E  D007               	goto	i2l21021
 27564                           
 27565                           ; BSR set to: 2
 27566  008840  0EE8               	movlw	low STR_30
 27567  008842  0100               	movlb	0	; () banked
 27568  008844  6F77               	movwf	i2printf@fmt& (0+255),b
 27569  008846  0EFF               	movlw	high STR_30
 27570  008848  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27571  00884A  ECE8  F04D         	call	i2_printf	;wreg free
 27572  00884E                     i2l21021:
 27573                           
 27574                           ; BSR set to: 2
 27575                           ;alarm.c: 568:     cnt = (cnt+1)%2;
 27576  00884E  0E01               	movlw	1
 27577  008850  2572               	addwf	AlarmHandler@cnt& (0+255),w,b
 27578  008852  6E5B               	movwf	??_AlarmHandler^0,c
 27579  008854  0E00               	movlw	0
 27580  008856  2173               	addwfc	(AlarmHandler@cnt+1)& (0+255),w,b
 27581  008858  6E5C               	movwf	(??_AlarmHandler+1)^0,c
 27582  00885A  0E01               	movlw	1
 27583  00885C  145B               	andwf	??_AlarmHandler^0,w,c
 27584  00885E  6F72               	movwf	AlarmHandler@cnt& (0+255),b
 27585  008860  6B73               	clrf	(AlarmHandler@cnt+1)& (0+255),b
 27586                           
 27587                           ; BSR set to: 2
 27588  008862  0012               	return		;funcret
 27589  008864                     __end_of_AlarmHandler:
 27590                           	opt callstack 0
 27591                           
 27592 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 27593 ;; Defined at:
 27594 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27595 ;; Parameters:    Size  Location     Type
 27596 ;;		None
 27597 ;; Auto vars:     Size  Location     Type
 27598 ;;		None
 27599 ;; Return value:  Size  Location     Type
 27600 ;;                  1    wreg      void 
 27601 ;; Registers used:
 27602 ;;		None
 27603 ;; Tracked objects:
 27604 ;;		On entry : 3F/2
 27605 ;;		On exit  : 3F/2
 27606 ;;		Unchanged: 3F/0
 27607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27612 ;;Total ram usage:        0 bytes
 27613 ;; Hardware stack levels used:    1
 27614 ;; This function calls:
 27615 ;;		Nothing
 27616 ;; This function is called by:
 27617 ;;		_TMR5_Initialize
 27618 ;;		_TMR5_ISR
 27619 ;; This function uses a non-reentrant model
 27620 ;;
 27621                           
 27622                           	psect	text218
 27623  00A6B0                     __ptext218:
 27624                           	opt callstack 0
 27625  00A6B0                     _TMR5_DefaultInterruptHandler:
 27626                           	opt callstack 15
 27627                           
 27628                           ; BSR set to: 2
 27629                           
 27630                           ; BSR set to: 2
 27631                           ;incstack = 0
 27632  00A6B0  0012               	return		;funcret
 27633  00A6B2                     __end_of_TMR5_DefaultInterruptHandler:
 27634                           	opt callstack 0
 27635                           
 27636 ;; *************** function _TMR4_ISR *****************
 27637 ;; Defined at:
 27638 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 27639 ;; Parameters:    Size  Location     Type
 27640 ;;		None
 27641 ;; Auto vars:     Size  Location     Type
 27642 ;;		None
 27643 ;; Return value:  Size  Location     Type
 27644 ;;                  1    wreg      void 
 27645 ;; Registers used:
 27646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27647 ;; Tracked objects:
 27648 ;;		On entry : 3F/39
 27649 ;;		On exit  : 0/0
 27650 ;;		Unchanged: 0/0
 27651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27656 ;;Total ram usage:        0 bytes
 27657 ;; Hardware stack levels used:    1
 27658 ;; Hardware stack levels required when called:   11
 27659 ;; This function calls:
 27660 ;;		Absolute function
 27661 ;;		_BuzzerHandler
 27662 ;;		_BuzzerTestHandler
 27663 ;;		_TMR4_DefaultInterruptHandler
 27664 ;; This function is called by:
 27665 ;;		_INTERRUPT_InterruptManager
 27666 ;; This function uses a non-reentrant model
 27667 ;;
 27668                           
 27669                           	psect	text219
 27670  009CF0                     __ptext219:
 27671                           	opt callstack 0
 27672  009CF0                     _TMR4_ISR:
 27673                           	opt callstack 5
 27674                           
 27675                           ; BSR set to: 57
 27676                           ;mcc_generated_files/tmr4.c: 169:     PIR7bits.TMR4IF = 0;
 27677                           
 27678                           ; BSR set to: 2
 27679                           ;incstack = 0
 27680  009CF0  91A7               	bcf	167,0,b	;volatile
 27681                           
 27682                           ; BSR set to: 57
 27683                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
 27684  009CF2  0102               	movlb	2	; () banked
 27685  009CF4  51ED               	movf	_TMR4_InterruptHandler& (0+255),w,b
 27686  009CF6  11EE               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 27687  009CF8  B4D8               	btfsc	status,2,c
 27688  009CFA  0012               	return	
 27689                           
 27690                           ; BSR set to: 2
 27691                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
 27692  009CFC  D801               	call	i2u2128_48
 27693  009CFE  0012               	return	
 27694  009D00                     i2u2128_48:
 27695  009D00  0005               	push	
 27696  009D02  6EFA               	movwf	pclath,c
 27697  009D04  51ED               	movf	_TMR4_InterruptHandler& (0+255),w,b
 27698  009D06  6EFD               	movwf	tosl,c
 27699  009D08  51EE               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 27700  009D0A  6EFE               	movwf	tosh,c
 27701  009D0C  6AFF               	clrf	tosu,c
 27702  009D0E  50FA               	movf	pclath,w,c
 27703  009D10  0012               	return		;indir
 27704  009D12                     __end_of_TMR4_ISR:
 27705                           	opt callstack 0
 27706                           
 27707 ;; *************** function _BuzzerTestHandler *****************
 27708 ;; Defined at:
 27709 ;;		line 82 in file "buzzer.c"
 27710 ;; Parameters:    Size  Location     Type
 27711 ;;		None
 27712 ;; Auto vars:     Size  Location     Type
 27713 ;;		None
 27714 ;; Return value:  Size  Location     Type
 27715 ;;                  1    wreg      void 
 27716 ;; Registers used:
 27717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27718 ;; Tracked objects:
 27719 ;;		On entry : 3F/2
 27720 ;;		On exit  : 3F/39
 27721 ;;		Unchanged: 0/0
 27722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27727 ;;Total ram usage:        0 bytes
 27728 ;; Hardware stack levels used:    1
 27729 ;; Hardware stack levels required when called:    9
 27730 ;; This function calls:
 27731 ;;		i2_BuzzerOff
 27732 ;;		i2_printf
 27733 ;; This function is called by:
 27734 ;;		_BuzzerTest
 27735 ;;		_TMR4_ISR
 27736 ;; This function uses a non-reentrant model
 27737 ;;
 27738                           
 27739                           	psect	text220
 27740  00991C                     __ptext220:
 27741                           	opt callstack 0
 27742  00991C                     _BuzzerTestHandler:
 27743                           	opt callstack 6
 27744                           
 27745                           ; BSR set to: 2
 27746                           ;buzzer.c: 84:     if (on) {
 27747                           
 27748                           ;incstack = 0
 27749  00991C  0100               	movlb	0	; () banked
 27750  00991E  51F9               	movf	_on& (0+255),w,b
 27751  009920  B4D8               	btfsc	status,2,c
 27752  009922  D010               	goto	i2l20733
 27753                           
 27754                           ; BSR set to: 0
 27755                           ;buzzer.c: 86:         if (detected) {
 27756  009924  51F8               	movf	_detected& (0+255),w,b
 27757  009926  B4D8               	btfsc	status,2,c
 27758  009928  D007               	goto	i2l20731
 27759                           
 27760                           ; BSR set to: 0
 27761                           ;buzzer.c: 88:             printf("_DB_");
 27762  00992A  0EC6               	movlw	low STR_15
 27763  00992C  6F77               	movwf	i2printf@fmt& (0+255),b
 27764  00992E  0EFF               	movlw	high STR_15
 27765  009930  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27766  009932  ECE8  F04D         	call	i2_printf	;wreg free
 27767                           
 27768                           ;buzzer.c: 89:         } else {
 27769  009936  D006               	goto	i2l20733
 27770  009938                     i2l20731:
 27771                           
 27772                           ; BSR set to: 0
 27773                           ;buzzer.c: 91:             printf("_EB_");
 27774  009938  0ECB               	movlw	low STR_16
 27775  00993A  6F77               	movwf	i2printf@fmt& (0+255),b
 27776  00993C  0EFF               	movlw	high STR_16
 27777  00993E  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27778  009940  ECE8  F04D         	call	i2_printf	;wreg free
 27779  009944                     i2l20733:
 27780                           
 27781                           ;buzzer.c: 94:     BuzzerOff();
 27782  009944  ECB6  F050         	call	i2_BuzzerOff	;wreg free
 27783                           
 27784                           ; BSR set to: 57
 27785  009948  0012               	return		;funcret
 27786  00994A                     __end_of_BuzzerTestHandler:
 27787                           	opt callstack 0
 27788                           
 27789 ;; *************** function _BuzzerHandler *****************
 27790 ;; Defined at:
 27791 ;;		line 77 in file "buzzer.c"
 27792 ;; Parameters:    Size  Location     Type
 27793 ;;		None
 27794 ;; Auto vars:     Size  Location     Type
 27795 ;;		None
 27796 ;; Return value:  Size  Location     Type
 27797 ;;                  1    wreg      void 
 27798 ;; Registers used:
 27799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27800 ;; Tracked objects:
 27801 ;;		On entry : 3F/2
 27802 ;;		On exit  : 4/0
 27803 ;;		Unchanged: 0/0
 27804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27809 ;;Total ram usage:        0 bytes
 27810 ;; Hardware stack levels used:    1
 27811 ;; Hardware stack levels required when called:   10
 27812 ;; This function calls:
 27813 ;;		i2_BuzzerTask
 27814 ;; This function is called by:
 27815 ;;		_BuzzerTask
 27816 ;;		_BuzzerInit
 27817 ;;		i2_BuzzerTask
 27818 ;;		_TMR4_ISR
 27819 ;; This function uses a non-reentrant model
 27820 ;;
 27821                           
 27822                           	psect	text221
 27823  00A5DA                     __ptext221:
 27824                           	opt callstack 0
 27825  00A5DA                     _BuzzerHandler:
 27826                           	opt callstack 5
 27827                           
 27828                           ; BSR set to: 2
 27829                           ;buzzer.c: 79:     BuzzerTask();
 27830                           
 27831                           ; BSR set to: 57
 27832                           ;incstack = 0
 27833  00A5DA  ECFB  F012         	call	i2_BuzzerTask	;wreg free
 27834  00A5DE  0012               	return		;funcret
 27835  00A5E0                     __end_of_BuzzerHandler:
 27836                           	opt callstack 0
 27837                           
 27838 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 27839 ;; Defined at:
 27840 ;;		line 182 in file "mcc_generated_files/tmr4.c"
 27841 ;; Parameters:    Size  Location     Type
 27842 ;;		None
 27843 ;; Auto vars:     Size  Location     Type
 27844 ;;		None
 27845 ;; Return value:  Size  Location     Type
 27846 ;;                  1    wreg      void 
 27847 ;; Registers used:
 27848 ;;		None
 27849 ;; Tracked objects:
 27850 ;;		On entry : 3F/2
 27851 ;;		On exit  : 3F/2
 27852 ;;		Unchanged: 3F/0
 27853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27858 ;;Total ram usage:        0 bytes
 27859 ;; Hardware stack levels used:    1
 27860 ;; This function calls:
 27861 ;;		Nothing
 27862 ;; This function is called by:
 27863 ;;		_TMR4_Initialize
 27864 ;;		_TMR4_ISR
 27865 ;; This function uses a non-reentrant model
 27866 ;;
 27867                           
 27868                           	psect	text222
 27869  00A6B2                     __ptext222:
 27870                           	opt callstack 0
 27871  00A6B2                     _TMR4_DefaultInterruptHandler:
 27872                           	opt callstack 15
 27873                           
 27874                           ; BSR set to: 2
 27875                           
 27876                           ;incstack = 0
 27877  00A6B2  0012               	return		;funcret
 27878  00A6B4                     __end_of_TMR4_DefaultInterruptHandler:
 27879                           	opt callstack 0
 27880                           
 27881 ;; *************** function i2_BuzzerTask *****************
 27882 ;; Defined at:
 27883 ;;		line 132 in file "buzzer.c"
 27884 ;; Parameters:    Size  Location     Type
 27885 ;;		None
 27886 ;; Auto vars:     Size  Location     Type
 27887 ;;		None
 27888 ;; Return value:  Size  Location     Type
 27889 ;;                  1    wreg      void 
 27890 ;; Registers used:
 27891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27892 ;; Tracked objects:
 27893 ;;		On entry : 3F/2
 27894 ;;		On exit  : 4/0
 27895 ;;		Unchanged: 0/0
 27896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27901 ;;Total ram usage:        2 bytes
 27902 ;; Hardware stack levels used:    1
 27903 ;; Hardware stack levels required when called:    9
 27904 ;; This function calls:
 27905 ;;		i2_BuzzerOff
 27906 ;;		i2_BuzzerOn
 27907 ;;		i2_ClearMonitorFailAlarm
 27908 ;;		i2_SetMonitorFailAlarm
 27909 ;;		i2_TMR4_Period8BitSet
 27910 ;;		i2_TMR4_SetInterruptHandler
 27911 ;;		i2_TMR4_Start
 27912 ;;		i2_TMR4_Stop
 27913 ;;		i2_printf
 27914 ;; This function is called by:
 27915 ;;		_BuzzerHandler
 27916 ;; This function uses a non-reentrant model
 27917 ;;
 27918                           
 27919                           	psect	text223
 27920  0025F6                     __ptext223:
 27921                           	opt callstack 0
 27922  0025F6                     i2_BuzzerTask:
 27923                           	opt callstack 5
 27924                           
 27925                           ; BSR set to: 2
 27926                           ;buzzer.c: 133:     static int noDetections = 0;;buzzer.c: 134:     if (on) {
 27927                           
 27928                           ; BSR set to: 2
 27929                           ;incstack = 0
 27930  0025F6  0100               	movlb	0	; () banked
 27931  0025F8  51F9               	movf	_on& (0+255),w,b
 27932  0025FA  B4D8               	btfsc	status,2,c
 27933  0025FC  D026               	goto	i2l19877
 27934                           
 27935                           ; BSR set to: 0
 27936                           ;buzzer.c: 136:         if (detected) {
 27937  0025FE  51F8               	movf	_detected& (0+255),w,b
 27938  002600  B4D8               	btfsc	status,2,c
 27939  002602  D00E               	goto	i2l19869
 27940                           
 27941                           ; BSR set to: 0
 27942                           ;buzzer.c: 138:             ClearMonitorFailAlarm();
 27943  002604  ECA4  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 27944                           
 27945                           ; BSR set to: 2
 27946                           ;buzzer.c: 139:             noDetections = 0;
 27947  002608  0E00               	movlw	0
 27948  00260A  6F83               	movwf	(BuzzerTask@noDetections+1)& (0+255),b
 27949  00260C  0E00               	movlw	0
 27950  00260E  6F82               	movwf	BuzzerTask@noDetections& (0+255),b
 27951                           
 27952                           ; BSR set to: 2
 27953                           ;buzzer.c: 140:             printf("_DB_");
 27954  002610  0EC6               	movlw	low STR_15
 27955  002612  0100               	movlb	0	; () banked
 27956  002614  6F77               	movwf	i2printf@fmt& (0+255),b
 27957  002616  0EFF               	movlw	high STR_15
 27958  002618  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27959  00261A  ECE8  F04D         	call	i2_printf	;wreg free
 27960                           
 27961                           ;buzzer.c: 141:         } else {
 27962  00261E  D015               	goto	i2l19877
 27963  002620                     i2l19869:
 27964                           
 27965                           ; BSR set to: 0
 27966                           ;buzzer.c: 144:             if (noDetections>=3) {
 27967  002620  0102               	movlb	2	; () banked
 27968  002622  BF83               	btfsc	(BuzzerTask@noDetections+1)& (0+255),7,b
 27969  002624  D009               	goto	i2l19873
 27970  002626  5183               	movf	(BuzzerTask@noDetections+1)& (0+255),w,b
 27971  002628  E104               	bnz	i2u1923_40
 27972  00262A  0E03               	movlw	3
 27973  00262C  5D82               	subwf	BuzzerTask@noDetections& (0+255),w,b
 27974  00262E  A0D8               	btfss	status,0,c
 27975  002630  D003               	goto	i2l19873
 27976  002632                     i2u1923_40:
 27977                           
 27978                           ; BSR set to: 2
 27979                           ;buzzer.c: 145:                 SetMonitorFailAlarm();
 27980  002632  ECF0  F052         	call	i2_SetMonitorFailAlarm	;wreg free
 27981                           
 27982                           ;buzzer.c: 146:             } else {
 27983  002636  D002               	goto	i2l19875
 27984  002638                     i2l19873:
 27985                           
 27986                           ; BSR set to: 2
 27987                           ;buzzer.c: 147:                 noDetections ++;
 27988  002638  4B82               	infsnz	BuzzerTask@noDetections& (0+255),f,b
 27989  00263A  2B83               	incf	(BuzzerTask@noDetections+1)& (0+255),f,b
 27990  00263C                     i2l19875:
 27991                           
 27992                           ; BSR set to: 2
 27993                           ;buzzer.c: 149:             printf("_EB_");
 27994  00263C  0ECB               	movlw	low STR_16
 27995  00263E  0100               	movlb	0	; () banked
 27996  002640  6F77               	movwf	i2printf@fmt& (0+255),b
 27997  002642  0EFF               	movlw	high STR_16
 27998  002644  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27999  002646  ECE8  F04D         	call	i2_printf	;wreg free
 28000  00264A                     i2l19877:
 28001                           
 28002                           ;buzzer.c: 152:     BuzzerOff();
 28003  00264A  ECB6  F050         	call	i2_BuzzerOff	;wreg free
 28004                           
 28005                           ; BSR set to: 57
 28006                           ;buzzer.c: 153:     TMR4_Stop();
 28007  00264E  EC46  F053         	call	i2_TMR4_Stop	;wreg free
 28008                           
 28009                           ; BSR set to: 57
 28010                           ;buzzer.c: 154:     TMR4_SetInterruptHandler(BuzzerHandler);
 28011  002652  0EDA               	movlw	low _BuzzerHandler
 28012  002654  6E01               	movwf	i2TMR4_SetInterruptHandler@InterruptHandler^0,c
 28013  002656  0EA5               	movlw	high _BuzzerHandler
 28014  002658  6E02               	movwf	(i2TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 28015  00265A  EC84  F051         	call	i2_TMR4_SetInterruptHandler	;wreg free
 28016                           
 28017                           ;buzzer.c: 155:     switch(alarmState) {
 28018  00265E  D18A               	goto	i2l20145
 28019  002660                     i2l19883:
 28020                           
 28021                           ; BSR set to: 1
 28022                           ;buzzer.c: 159:                     BuzzerOn(0xBD);
 28023  002660  0EBD               	movlw	189
 28024  002662  EC76  F04F         	call	i2_BuzzerOn
 28025                           
 28026                           ; BSR set to: 57
 28027                           ;buzzer.c: 160:                     TMR4_Period8BitSet(51);
 28028  002666  0E33               	movlw	51
 28029  002668  EC15  F052         	call	i2_TMR4_Period8BitSet
 28030  00266C                     i2l19887:
 28031                           
 28032                           ;buzzer.c: 161:                     alarmStep++;
 28033  00266C  0101               	movlb	1	; () banked
 28034  00266E  2BEF               	incf	_alarmStep& (0+255),f,b
 28035  002670                     i2l19889:
 28036                           
 28037                           ; BSR set to: 1
 28038                           ;buzzer.c: 162:                     TMR4_Start();
 28039  002670  EC44  F053         	call	i2_TMR4_Start	;wreg free
 28040                           
 28041                           ;buzzer.c: 163:                     break;
 28042  002674  0012               	return	
 28043  002676                     i2l19891:
 28044                           
 28045                           ; BSR set to: 1
 28046                           ;buzzer.c: 165:                     TMR4_Period8BitSet(51);
 28047  002676  0E33               	movlw	51
 28048  002678  EC15  F052         	call	i2_TMR4_Period8BitSet
 28049  00267C  D7F7               	goto	i2l19887
 28050  00267E                     i2l19897:
 28051                           
 28052                           ; BSR set to: 1
 28053                           ;buzzer.c: 170:                     BuzzerOn(0xEE);
 28054  00267E  0EEE               	movlw	238
 28055  002680  EC76  F04F         	call	i2_BuzzerOn
 28056                           
 28057                           ; BSR set to: 57
 28058                           ;buzzer.c: 171:                     TMR4_Period8BitSet(51);
 28059  002684  0E33               	movlw	51
 28060  002686  EC15  F052         	call	i2_TMR4_Period8BitSet
 28061  00268A  D7F0               	goto	i2l19887
 28062  00268C                     i2l2116:
 28063                           
 28064                           ; BSR set to: 1
 28065                           ;buzzer.c: 190:                     TMR4_Period8BitSet(255);
 28066                           
 28067                           ; BSR set to: 1
 28068  00268C  0EFF               	movlw	255
 28069  00268E  EC15  F052         	call	i2_TMR4_Period8BitSet
 28070  002692  D7EC               	goto	i2l19887
 28071  002694                     i2l19911:
 28072                           
 28073                           ; BSR set to: 1
 28074                           ;buzzer.c: 195:                     TMR4_Period8BitSet(255);
 28075  002694  0EFF               	movlw	255
 28076  002696  EC15  F052         	call	i2_TMR4_Period8BitSet
 28077  00269A                     i2l19913:
 28078                           
 28079                           ;buzzer.c: 196:                     alarmStep=0;
 28080  00269A  0E00               	movlw	0
 28081  00269C  0101               	movlb	1	; () banked
 28082  00269E  6FEF               	movwf	_alarmStep& (0+255),b
 28083  0026A0  D7E7               	goto	i2l19889
 28084  0026A2                     i2l19917:
 28085                           
 28086                           ; BSR set to: 1
 28087                           ;buzzer.c: 200:                     TMR4_Period8BitSet(51);
 28088  0026A2  0E33               	movlw	51
 28089  0026A4  EC15  F052         	call	i2_TMR4_Period8BitSet
 28090  0026A8  D7F8               	goto	i2l19913
 28091  0026AA                     i2l19925:
 28092                           
 28093                           ; BSR set to: 0
 28094  0026AA  0101               	movlb	1	; () banked
 28095  0026AC  51EF               	movf	_alarmStep& (0+255),w,b
 28096  0026AE  6E5B               	movwf	??i2_BuzzerTask^0,c
 28097  0026B0  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28098                           
 28099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28100                           ; Switch size 1, requested type "simple"
 28101                           ; Number of cases is 1, Range of values is 0 to 0
 28102                           ; switch strategies available:
 28103                           ; Name         Instructions Cycles
 28104                           ; simple_byte            4     3 (average)
 28105                           ;	Chosen strategy is simple_byte
 28106  0026B2  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28107  0026B4  0A00               	xorlw	0	; case 0
 28108  0026B6  A4D8               	btfss	status,2,c
 28109  0026B8  D7F4               	goto	i2l19917
 28110                           
 28111                           ; BSR set to: 1
 28112                           ; Switch size 1, requested type "simple"
 28113                           ; Number of cases is 19, Range of values is 0 to 18
 28114                           ; switch strategies available:
 28115                           ; Name         Instructions Cycles
 28116                           ; simple_byte           58    30 (average)
 28117                           ;	Chosen strategy is simple_byte
 28118  0026BA  505B               	movf	??i2_BuzzerTask^0,w,c
 28119  0026BC  0A00               	xorlw	0	; case 0
 28120  0026BE  B4D8               	btfsc	status,2,c
 28121  0026C0  D7CF               	goto	i2l19883
 28122  0026C2  0A01               	xorlw	1	; case 1
 28123  0026C4  B4D8               	btfsc	status,2,c
 28124  0026C6  D7D7               	goto	i2l19891
 28125  0026C8  0A03               	xorlw	3	; case 2
 28126  0026CA  B4D8               	btfsc	status,2,c
 28127  0026CC  D7D8               	goto	i2l19897
 28128  0026CE  0A01               	xorlw	1	; case 3
 28129  0026D0  B4D8               	btfsc	status,2,c
 28130  0026D2  D7DC               	goto	i2l2116
 28131  0026D4  0A07               	xorlw	7	; case 4
 28132  0026D6  B4D8               	btfsc	status,2,c
 28133  0026D8  D7D9               	goto	i2l2116
 28134  0026DA  0A01               	xorlw	1	; case 5
 28135  0026DC  B4D8               	btfsc	status,2,c
 28136  0026DE  D7D6               	goto	i2l2116
 28137  0026E0  0A03               	xorlw	3	; case 6
 28138  0026E2  B4D8               	btfsc	status,2,c
 28139  0026E4  D7D3               	goto	i2l2116
 28140  0026E6  0A01               	xorlw	1	; case 7
 28141  0026E8  B4D8               	btfsc	status,2,c
 28142  0026EA  D7D0               	goto	i2l2116
 28143  0026EC  0A0F               	xorlw	15	; case 8
 28144  0026EE  B4D8               	btfsc	status,2,c
 28145  0026F0  D7CD               	goto	i2l2116
 28146  0026F2  0A01               	xorlw	1	; case 9
 28147  0026F4  B4D8               	btfsc	status,2,c
 28148  0026F6  D7CA               	goto	i2l2116
 28149  0026F8  0A03               	xorlw	3	; case 10
 28150  0026FA  B4D8               	btfsc	status,2,c
 28151  0026FC  D7C7               	goto	i2l2116
 28152  0026FE  0A01               	xorlw	1	; case 11
 28153  002700  B4D8               	btfsc	status,2,c
 28154  002702  D7C4               	goto	i2l2116
 28155  002704  0A07               	xorlw	7	; case 12
 28156  002706  B4D8               	btfsc	status,2,c
 28157  002708  D7C1               	goto	i2l2116
 28158  00270A  0A01               	xorlw	1	; case 13
 28159  00270C  B4D8               	btfsc	status,2,c
 28160  00270E  D7BE               	goto	i2l2116
 28161  002710  0A03               	xorlw	3	; case 14
 28162  002712  B4D8               	btfsc	status,2,c
 28163  002714  D7BB               	goto	i2l2116
 28164  002716  0A01               	xorlw	1	; case 15
 28165  002718  B4D8               	btfsc	status,2,c
 28166  00271A  D7B8               	goto	i2l2116
 28167  00271C  0A1F               	xorlw	31	; case 16
 28168  00271E  B4D8               	btfsc	status,2,c
 28169  002720  D7B5               	goto	i2l2116
 28170  002722  0A01               	xorlw	1	; case 17
 28171  002724  B4D8               	btfsc	status,2,c
 28172  002726  D7B2               	goto	i2l2116
 28173  002728  0A03               	xorlw	3	; case 18
 28174  00272A  B4D8               	btfsc	status,2,c
 28175  00272C  D7B3               	goto	i2l19911
 28176  00272E  D7B9               	goto	i2l19917
 28177  002730                     i2l19927:
 28178                           
 28179                           ; BSR set to: 1
 28180                           ;buzzer.c: 209:                     BuzzerOn(0xEE);
 28181  002730  0EEE               	movlw	238
 28182  002732  EC76  F04F         	call	i2_BuzzerOn
 28183                           
 28184                           ; BSR set to: 57
 28185                           ;buzzer.c: 210:                     TMR4_Period8BitSet(51);
 28186  002736  0E33               	movlw	51
 28187  002738  EC15  F052         	call	i2_TMR4_Period8BitSet
 28188  00273C  D797               	goto	i2l19887
 28189  00273E                     i2l19935:
 28190                           
 28191                           ; BSR set to: 1
 28192                           ;buzzer.c: 215:                     TMR4_Period8BitSet(51);
 28193  00273E  0E33               	movlw	51
 28194  002740  EC15  F052         	call	i2_TMR4_Period8BitSet
 28195  002744  D793               	goto	i2l19887
 28196  002746                     i2l19941:
 28197                           
 28198                           ; BSR set to: 1
 28199                           ;buzzer.c: 220:                     BuzzerOn(0x8D);
 28200  002746  0E8D               	movlw	141
 28201  002748  EC76  F04F         	call	i2_BuzzerOn
 28202                           
 28203                           ; BSR set to: 57
 28204                           ;buzzer.c: 221:                     TMR4_Period8BitSet(51);
 28205  00274C  0E33               	movlw	51
 28206  00274E  EC15  F052         	call	i2_TMR4_Period8BitSet
 28207  002752  D78C               	goto	i2l19887
 28208  002754                     i2l19949:
 28209                           
 28210                           ; BSR set to: 1
 28211                           ;buzzer.c: 226:                     TMR4_Period8BitSet(51);
 28212  002754  0E33               	movlw	51
 28213  002756  EC15  F052         	call	i2_TMR4_Period8BitSet
 28214  00275A  D788               	goto	i2l19887
 28215  00275C                     i2l19955:
 28216                           
 28217                           ; BSR set to: 1
 28218                           ;buzzer.c: 231:                     BuzzerOn(0xB2);
 28219  00275C  0EB2               	movlw	178
 28220  00275E  EC76  F04F         	call	i2_BuzzerOn
 28221                           
 28222                           ; BSR set to: 57
 28223                           ;buzzer.c: 232:                     TMR4_Period8BitSet(51);
 28224  002762  0E33               	movlw	51
 28225  002764  EC15  F052         	call	i2_TMR4_Period8BitSet
 28226  002768  D781               	goto	i2l19887
 28227  00276A                     i2l2142:
 28228                           
 28229                           ; BSR set to: 1
 28230                           ;buzzer.c: 243:                     TMR4_Period8BitSet(255);
 28231                           
 28232                           ; BSR set to: 1
 28233  00276A  0EFF               	movlw	255
 28234  00276C  EC15  F052         	call	i2_TMR4_Period8BitSet
 28235  002770  D77D               	goto	i2l19887
 28236  002772                     i2l19969:
 28237                           
 28238                           ; BSR set to: 1
 28239                           ;buzzer.c: 248:                     TMR4_Period8BitSet(255);
 28240  002772  0EFF               	movlw	255
 28241  002774  EC15  F052         	call	i2_TMR4_Period8BitSet
 28242  002778  D790               	goto	i2l19913
 28243  00277A                     i2l19975:
 28244                           
 28245                           ; BSR set to: 1
 28246                           ;buzzer.c: 253:                     TMR4_Period8BitSet(51);
 28247  00277A  0E33               	movlw	51
 28248  00277C  EC15  F052         	call	i2_TMR4_Period8BitSet
 28249  002780  D78C               	goto	i2l19913
 28250  002782                     i2l19983:
 28251                           
 28252                           ; BSR set to: 0
 28253  002782  0101               	movlb	1	; () banked
 28254  002784  51EF               	movf	_alarmStep& (0+255),w,b
 28255  002786  6E5B               	movwf	??i2_BuzzerTask^0,c
 28256  002788  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28257                           
 28258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28259                           ; Switch size 1, requested type "simple"
 28260                           ; Number of cases is 1, Range of values is 0 to 0
 28261                           ; switch strategies available:
 28262                           ; Name         Instructions Cycles
 28263                           ; simple_byte            4     3 (average)
 28264                           ;	Chosen strategy is simple_byte
 28265  00278A  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28266  00278C  0A00               	xorlw	0	; case 0
 28267  00278E  A4D8               	btfss	status,2,c
 28268  002790  D7F4               	goto	i2l19975
 28269                           
 28270                           ; BSR set to: 1
 28271                           ; Switch size 1, requested type "simple"
 28272                           ; Number of cases is 13, Range of values is 0 to 12
 28273                           ; switch strategies available:
 28274                           ; Name         Instructions Cycles
 28275                           ; simple_byte           40    21 (average)
 28276                           ;	Chosen strategy is simple_byte
 28277  002792  505B               	movf	??i2_BuzzerTask^0,w,c
 28278  002794  0A00               	xorlw	0	; case 0
 28279  002796  B4D8               	btfsc	status,2,c
 28280  002798  D7CB               	goto	i2l19927
 28281  00279A  0A01               	xorlw	1	; case 1
 28282  00279C  B4D8               	btfsc	status,2,c
 28283  00279E  D7CF               	goto	i2l19935
 28284  0027A0  0A03               	xorlw	3	; case 2
 28285  0027A2  B4D8               	btfsc	status,2,c
 28286  0027A4  D7D0               	goto	i2l19941
 28287  0027A6  0A01               	xorlw	1	; case 3
 28288  0027A8  B4D8               	btfsc	status,2,c
 28289  0027AA  D7D4               	goto	i2l19949
 28290  0027AC  0A07               	xorlw	7	; case 4
 28291  0027AE  B4D8               	btfsc	status,2,c
 28292  0027B0  D7D5               	goto	i2l19955
 28293  0027B2  0A01               	xorlw	1	; case 5
 28294  0027B4  B4D8               	btfsc	status,2,c
 28295  0027B6  D7D9               	goto	i2l2142
 28296  0027B8  0A03               	xorlw	3	; case 6
 28297  0027BA  B4D8               	btfsc	status,2,c
 28298  0027BC  D7D6               	goto	i2l2142
 28299  0027BE  0A01               	xorlw	1	; case 7
 28300  0027C0  B4D8               	btfsc	status,2,c
 28301  0027C2  D7D3               	goto	i2l2142
 28302  0027C4  0A0F               	xorlw	15	; case 8
 28303  0027C6  B4D8               	btfsc	status,2,c
 28304  0027C8  D7D0               	goto	i2l2142
 28305  0027CA  0A01               	xorlw	1	; case 9
 28306  0027CC  B4D8               	btfsc	status,2,c
 28307  0027CE  D7CD               	goto	i2l2142
 28308  0027D0  0A03               	xorlw	3	; case 10
 28309  0027D2  B4D8               	btfsc	status,2,c
 28310  0027D4  D7CA               	goto	i2l2142
 28311  0027D6  0A01               	xorlw	1	; case 11
 28312  0027D8  B4D8               	btfsc	status,2,c
 28313  0027DA  D7C7               	goto	i2l2142
 28314  0027DC  0A07               	xorlw	7	; case 12
 28315  0027DE  B4D8               	btfsc	status,2,c
 28316  0027E0  D7C8               	goto	i2l19969
 28317  0027E2  D7CB               	goto	i2l19975
 28318  0027E4                     i2l19985:
 28319                           
 28320                           ; BSR set to: 1
 28321                           ;buzzer.c: 262:                     BuzzerOn(0xEE);
 28322  0027E4  0EEE               	movlw	238
 28323  0027E6  EC76  F04F         	call	i2_BuzzerOn
 28324                           
 28325                           ; BSR set to: 57
 28326                           ;buzzer.c: 263:                     TMR4_Period8BitSet(46);
 28327  0027EA  0E2E               	movlw	46
 28328  0027EC  EC15  F052         	call	i2_TMR4_Period8BitSet
 28329  0027F0  D73D               	goto	i2l19887
 28330  0027F2                     i2l19993:
 28331                           
 28332                           ; BSR set to: 1
 28333                           ;buzzer.c: 268:                     TMR4_Period8BitSet(26);
 28334  0027F2  0E1A               	movlw	26
 28335  0027F4  EC15  F052         	call	i2_TMR4_Period8BitSet
 28336  0027F8  D739               	goto	i2l19887
 28337  0027FA                     i2l19999:
 28338                           
 28339                           ; BSR set to: 1
 28340                           ;buzzer.c: 273:                     BuzzerOn(0x8D);
 28341  0027FA  0E8D               	movlw	141
 28342  0027FC  EC76  F04F         	call	i2_BuzzerOn
 28343                           
 28344                           ; BSR set to: 57
 28345                           ;buzzer.c: 274:                     TMR4_Period8BitSet(46);
 28346  002800  0E2E               	movlw	46
 28347  002802  EC15  F052         	call	i2_TMR4_Period8BitSet
 28348  002806  D732               	goto	i2l19887
 28349  002808                     i2l20007:
 28350                           
 28351                           ; BSR set to: 1
 28352                           ;buzzer.c: 279:                     TMR4_Period8BitSet(26);
 28353  002808  0E1A               	movlw	26
 28354  00280A  EC15  F052         	call	i2_TMR4_Period8BitSet
 28355  00280E  D72E               	goto	i2l19887
 28356  002810                     i2l20013:
 28357                           
 28358                           ; BSR set to: 1
 28359                           ;buzzer.c: 284:                     BuzzerOn(0xB2);
 28360  002810  0EB2               	movlw	178
 28361  002812  EC76  F04F         	call	i2_BuzzerOn
 28362                           
 28363                           ; BSR set to: 57
 28364                           ;buzzer.c: 285:                     TMR4_Period8BitSet(46);
 28365  002816  0E2E               	movlw	46
 28366  002818  EC15  F052         	call	i2_TMR4_Period8BitSet
 28367  00281C  D727               	goto	i2l19887
 28368  00281E                     i2l20021:
 28369                           
 28370                           ; BSR set to: 1
 28371                           ;buzzer.c: 290:                     TMR4_Period8BitSet(102);
 28372  00281E  0E66               	movlw	102
 28373  002820  EC15  F052         	call	i2_TMR4_Period8BitSet
 28374  002824  D723               	goto	i2l19887
 28375  002826                     i2l20027:
 28376                           
 28377                           ; BSR set to: 1
 28378                           ;buzzer.c: 295:                     BuzzerOn(0x8D);
 28379  002826  0E8D               	movlw	141
 28380  002828  EC76  F04F         	call	i2_BuzzerOn
 28381                           
 28382                           ; BSR set to: 57
 28383                           ;buzzer.c: 296:                     TMR4_Period8BitSet(46);
 28384  00282C  0E2E               	movlw	46
 28385  00282E  EC15  F052         	call	i2_TMR4_Period8BitSet
 28386  002832  D71C               	goto	i2l19887
 28387  002834                     i2l20035:
 28388                           
 28389                           ; BSR set to: 1
 28390                           ;buzzer.c: 301:                     TMR4_Period8BitSet(26);
 28391  002834  0E1A               	movlw	26
 28392  002836  EC15  F052         	call	i2_TMR4_Period8BitSet
 28393  00283A  D718               	goto	i2l19887
 28394  00283C                     i2l20041:
 28395                           
 28396                           ; BSR set to: 1
 28397                           ;buzzer.c: 306:                     BuzzerOn(0xB2);
 28398  00283C  0EB2               	movlw	178
 28399  00283E  EC76  F04F         	call	i2_BuzzerOn
 28400                           
 28401                           ; BSR set to: 57
 28402                           ;buzzer.c: 307:                     TMR4_Period8BitSet(46);
 28403  002842  0E2E               	movlw	46
 28404  002844  EC15  F052         	call	i2_TMR4_Period8BitSet
 28405  002848  D711               	goto	i2l19887
 28406  00284A                     i2l20049:
 28407                           
 28408                           ; BSR set to: 1
 28409                           ;buzzer.c: 312:                     TMR4_Period8BitSet(255);
 28410  00284A  0EFF               	movlw	255
 28411  00284C  EC15  F052         	call	i2_TMR4_Period8BitSet
 28412  002850  D70D               	goto	i2l19887
 28413  002852                     i2l20055:
 28414                           
 28415                           ; BSR set to: 1
 28416                           ;buzzer.c: 317:                     BuzzerOn(0xEE);
 28417  002852  0EEE               	movlw	238
 28418  002854  EC76  F04F         	call	i2_BuzzerOn
 28419                           
 28420                           ; BSR set to: 57
 28421                           ;buzzer.c: 318:                     TMR4_Period8BitSet(46);
 28422  002858  0E2E               	movlw	46
 28423  00285A  EC15  F052         	call	i2_TMR4_Period8BitSet
 28424  00285E  D706               	goto	i2l19887
 28425  002860                     i2l20063:
 28426                           
 28427                           ; BSR set to: 1
 28428                           ;buzzer.c: 323:                     TMR4_Period8BitSet(26);
 28429  002860  0E1A               	movlw	26
 28430  002862  EC15  F052         	call	i2_TMR4_Period8BitSet
 28431  002866  D702               	goto	i2l19887
 28432  002868                     i2l20069:
 28433                           
 28434                           ; BSR set to: 1
 28435                           ;buzzer.c: 328:                     BuzzerOn(0x8D);
 28436  002868  0E8D               	movlw	141
 28437  00286A  EC76  F04F         	call	i2_BuzzerOn
 28438                           
 28439                           ; BSR set to: 57
 28440                           ;buzzer.c: 329:                     TMR4_Period8BitSet(46);
 28441  00286E  0E2E               	movlw	46
 28442  002870  EC15  F052         	call	i2_TMR4_Period8BitSet
 28443  002874  D6FB               	goto	i2l19887
 28444  002876                     i2l20077:
 28445                           
 28446                           ; BSR set to: 1
 28447                           ;buzzer.c: 334:                     TMR4_Period8BitSet(26);
 28448  002876  0E1A               	movlw	26
 28449  002878  EC15  F052         	call	i2_TMR4_Period8BitSet
 28450  00287C  D6F7               	goto	i2l19887
 28451  00287E                     i2l20083:
 28452                           
 28453                           ; BSR set to: 1
 28454                           ;buzzer.c: 339:                     BuzzerOn(0xB2);
 28455  00287E  0EB2               	movlw	178
 28456  002880  EC76  F04F         	call	i2_BuzzerOn
 28457                           
 28458                           ; BSR set to: 57
 28459                           ;buzzer.c: 340:                     TMR4_Period8BitSet(46);
 28460  002884  0E2E               	movlw	46
 28461  002886  EC15  F052         	call	i2_TMR4_Period8BitSet
 28462  00288A  D6F0               	goto	i2l19887
 28463  00288C                     i2l20091:
 28464                           
 28465                           ; BSR set to: 1
 28466                           ;buzzer.c: 345:                     TMR4_Period8BitSet(102);
 28467  00288C  0E66               	movlw	102
 28468  00288E  EC15  F052         	call	i2_TMR4_Period8BitSet
 28469  002892  D6EC               	goto	i2l19887
 28470  002894                     i2l20097:
 28471                           
 28472                           ; BSR set to: 1
 28473                           ;buzzer.c: 350:                     BuzzerOn(0x8D);
 28474  002894  0E8D               	movlw	141
 28475  002896  EC76  F04F         	call	i2_BuzzerOn
 28476                           
 28477                           ; BSR set to: 57
 28478                           ;buzzer.c: 351:                     TMR4_Period8BitSet(46);
 28479  00289A  0E2E               	movlw	46
 28480  00289C  EC15  F052         	call	i2_TMR4_Period8BitSet
 28481  0028A0  D6E5               	goto	i2l19887
 28482  0028A2                     i2l20105:
 28483                           
 28484                           ; BSR set to: 1
 28485                           ;buzzer.c: 356:                     TMR4_Period8BitSet(26);
 28486  0028A2  0E1A               	movlw	26
 28487  0028A4  EC15  F052         	call	i2_TMR4_Period8BitSet
 28488  0028A8  D6E1               	goto	i2l19887
 28489  0028AA                     i2l20111:
 28490                           
 28491                           ; BSR set to: 1
 28492                           ;buzzer.c: 361:                     BuzzerOn(0xB2);
 28493  0028AA  0EB2               	movlw	178
 28494  0028AC  EC76  F04F         	call	i2_BuzzerOn
 28495                           
 28496                           ; BSR set to: 57
 28497                           ;buzzer.c: 362:                     TMR4_Period8BitSet(46);
 28498  0028B0  0E2E               	movlw	46
 28499  0028B2  EC15  F052         	call	i2_TMR4_Period8BitSet
 28500  0028B6  D6DA               	goto	i2l19887
 28501  0028B8                     i2l20119:
 28502                           
 28503                           ; BSR set to: 1
 28504                           ;buzzer.c: 369:                     TMR4_Period8BitSet(255);
 28505  0028B8  0EFF               	movlw	255
 28506  0028BA  EC15  F052         	call	i2_TMR4_Period8BitSet
 28507  0028BE  D6D6               	goto	i2l19887
 28508  0028C0                     i2l20125:
 28509                           
 28510                           ; BSR set to: 1
 28511                           ;buzzer.c: 374:                     TMR4_Period8BitSet(255);
 28512  0028C0  0EFF               	movlw	255
 28513  0028C2  EC15  F052         	call	i2_TMR4_Period8BitSet
 28514  0028C6  D6E9               	goto	i2l19913
 28515  0028C8                     i2l20131:
 28516                           
 28517                           ; BSR set to: 1
 28518                           ;buzzer.c: 379:                     TMR4_Period8BitSet(51);
 28519  0028C8  0E33               	movlw	51
 28520  0028CA  EC15  F052         	call	i2_TMR4_Period8BitSet
 28521  0028CE  D6E5               	goto	i2l19913
 28522  0028D0                     i2l20139:
 28523                           
 28524                           ; BSR set to: 0
 28525  0028D0  0101               	movlb	1	; () banked
 28526  0028D2  51EF               	movf	_alarmStep& (0+255),w,b
 28527  0028D4  6E5B               	movwf	??i2_BuzzerTask^0,c
 28528  0028D6  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28529                           
 28530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28531                           ; Switch size 1, requested type "simple"
 28532                           ; Number of cases is 1, Range of values is 0 to 0
 28533                           ; switch strategies available:
 28534                           ; Name         Instructions Cycles
 28535                           ; simple_byte            4     3 (average)
 28536                           ;	Chosen strategy is simple_byte
 28537  0028D8  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28538  0028DA  0A00               	xorlw	0	; case 0
 28539  0028DC  A4D8               	btfss	status,2,c
 28540  0028DE  D7F4               	goto	i2l20131
 28541                           
 28542                           ; BSR set to: 1
 28543                           ; Switch size 1, requested type "simple"
 28544                           ; Number of cases is 23, Range of values is 0 to 22
 28545                           ; switch strategies available:
 28546                           ; Name         Instructions Cycles
 28547                           ; simple_byte           70    36 (average)
 28548                           ;	Chosen strategy is simple_byte
 28549  0028E0  505B               	movf	??i2_BuzzerTask^0,w,c
 28550  0028E2  0A00               	xorlw	0	; case 0
 28551  0028E4  B4D8               	btfsc	status,2,c
 28552  0028E6  D77E               	goto	i2l19985
 28553  0028E8  0A01               	xorlw	1	; case 1
 28554  0028EA  B4D8               	btfsc	status,2,c
 28555  0028EC  D782               	goto	i2l19993
 28556  0028EE  0A03               	xorlw	3	; case 2
 28557  0028F0  B4D8               	btfsc	status,2,c
 28558  0028F2  D783               	goto	i2l19999
 28559  0028F4  0A01               	xorlw	1	; case 3
 28560  0028F6  B4D8               	btfsc	status,2,c
 28561  0028F8  D787               	goto	i2l20007
 28562  0028FA  0A07               	xorlw	7	; case 4
 28563  0028FC  B4D8               	btfsc	status,2,c
 28564  0028FE  D788               	goto	i2l20013
 28565  002900  0A01               	xorlw	1	; case 5
 28566  002902  B4D8               	btfsc	status,2,c
 28567  002904  D78C               	goto	i2l20021
 28568  002906  0A03               	xorlw	3	; case 6
 28569  002908  B4D8               	btfsc	status,2,c
 28570  00290A  D78D               	goto	i2l20027
 28571  00290C  0A01               	xorlw	1	; case 7
 28572  00290E  B4D8               	btfsc	status,2,c
 28573  002910  D791               	goto	i2l20035
 28574  002912  0A0F               	xorlw	15	; case 8
 28575  002914  B4D8               	btfsc	status,2,c
 28576  002916  D792               	goto	i2l20041
 28577  002918  0A01               	xorlw	1	; case 9
 28578  00291A  B4D8               	btfsc	status,2,c
 28579  00291C  D796               	goto	i2l20049
 28580  00291E  0A03               	xorlw	3	; case 10
 28581  002920  B4D8               	btfsc	status,2,c
 28582  002922  D797               	goto	i2l20055
 28583  002924  0A01               	xorlw	1	; case 11
 28584  002926  B4D8               	btfsc	status,2,c
 28585  002928  D79B               	goto	i2l20063
 28586  00292A  0A07               	xorlw	7	; case 12
 28587  00292C  B4D8               	btfsc	status,2,c
 28588  00292E  D79C               	goto	i2l20069
 28589  002930  0A01               	xorlw	1	; case 13
 28590  002932  B4D8               	btfsc	status,2,c
 28591  002934  D7A0               	goto	i2l20077
 28592  002936  0A03               	xorlw	3	; case 14
 28593  002938  B4D8               	btfsc	status,2,c
 28594  00293A  D7A1               	goto	i2l20083
 28595  00293C  0A01               	xorlw	1	; case 15
 28596  00293E  B4D8               	btfsc	status,2,c
 28597  002940  D7A5               	goto	i2l20091
 28598  002942  0A1F               	xorlw	31	; case 16
 28599  002944  B4D8               	btfsc	status,2,c
 28600  002946  D7A6               	goto	i2l20097
 28601  002948  0A01               	xorlw	1	; case 17
 28602  00294A  B4D8               	btfsc	status,2,c
 28603  00294C  D7AA               	goto	i2l20105
 28604  00294E  0A03               	xorlw	3	; case 18
 28605  002950  B4D8               	btfsc	status,2,c
 28606  002952  D7AB               	goto	i2l20111
 28607  002954  0A01               	xorlw	1	; case 19
 28608  002956  B4D8               	btfsc	status,2,c
 28609  002958  D7AF               	goto	i2l20119
 28610  00295A  0A07               	xorlw	7	; case 20
 28611  00295C  B4D8               	btfsc	status,2,c
 28612  00295E  D7AC               	goto	i2l20119
 28613  002960  0A01               	xorlw	1	; case 21
 28614  002962  B4D8               	btfsc	status,2,c
 28615  002964  D7A9               	goto	i2l20119
 28616  002966  0A03               	xorlw	3	; case 22
 28617  002968  B4D8               	btfsc	status,2,c
 28618  00296A  D7AA               	goto	i2l20125
 28619  00296C  D7AD               	goto	i2l20131
 28620  00296E                     i2l20141:
 28621                           
 28622                           ; BSR set to: 0
 28623                           ;buzzer.c: 387:             BuzzerOff();
 28624  00296E  ECB6  F050         	call	i2_BuzzerOff	;wreg free
 28625                           
 28626                           ;buzzer.c: 388:             break;
 28627  002972  0012               	return	
 28628  002974                     i2l20145:
 28629                           
 28630                           ; BSR set to: 57
 28631  002974  0100               	movlb	0	; () banked
 28632  002976  51FA               	movf	_alarmState& (0+255),w,b
 28633  002978  6E5B               	movwf	??i2_BuzzerTask^0,c
 28634  00297A  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28635                           
 28636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28637                           ; Switch size 1, requested type "simple"
 28638                           ; Number of cases is 1, Range of values is 0 to 0
 28639                           ; switch strategies available:
 28640                           ; Name         Instructions Cycles
 28641                           ; simple_byte            4     3 (average)
 28642                           ;	Chosen strategy is simple_byte
 28643  00297C  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28644  00297E  0A00               	xorlw	0	; case 0
 28645  002980  A4D8               	btfss	status,2,c
 28646  002982  D7F5               	goto	i2l20141
 28647                           
 28648                           ; BSR set to: 0
 28649                           ; Switch size 1, requested type "simple"
 28650                           ; Number of cases is 4, Range of values is 0 to 4
 28651                           ; switch strategies available:
 28652                           ; Name         Instructions Cycles
 28653                           ; simple_byte           13     7 (average)
 28654                           ;	Chosen strategy is simple_byte
 28655  002984  505B               	movf	??i2_BuzzerTask^0,w,c
 28656  002986  0A00               	xorlw	0	; case 0
 28657  002988  B4D8               	btfsc	status,2,c
 28658  00298A  D7F1               	goto	i2l20141
 28659  00298C  0A01               	xorlw	1	; case 1
 28660  00298E  B4D8               	btfsc	status,2,c
 28661  002990  D68C               	goto	i2l19925
 28662  002992  0A03               	xorlw	3	; case 2
 28663  002994  B4D8               	btfsc	status,2,c
 28664  002996  D6F5               	goto	i2l19983
 28665  002998  0A06               	xorlw	6	; case 4
 28666  00299A  B4D8               	btfsc	status,2,c
 28667  00299C  D799               	goto	i2l20139
 28668  00299E  D7E7               	goto	i2l20141
 28669  0029A0                     __end_ofi2_BuzzerTask:
 28670                           	opt callstack 0
 28671                           
 28672 ;; *************** function i2_TMR4_Start *****************
 28673 ;; Defined at:
 28674 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 28675 ;; Parameters:    Size  Location     Type
 28676 ;;		None
 28677 ;; Auto vars:     Size  Location     Type
 28678 ;;		None
 28679 ;; Return value:  Size  Location     Type
 28680 ;;                  1    wreg      void 
 28681 ;; Registers used:
 28682 ;;		None
 28683 ;; Tracked objects:
 28684 ;;		On entry : 3C/1
 28685 ;;		On exit  : 3C/0
 28686 ;;		Unchanged: 3C/0
 28687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28692 ;;Total ram usage:        0 bytes
 28693 ;; Hardware stack levels used:    1
 28694 ;; This function calls:
 28695 ;;		Nothing
 28696 ;; This function is called by:
 28697 ;;		i2_BuzzerTask
 28698 ;; This function uses a non-reentrant model
 28699 ;;
 28700                           
 28701                           	psect	text224
 28702  00A688                     __ptext224:
 28703                           	opt callstack 0
 28704  00A688                     i2_TMR4_Start:
 28705                           	opt callstack 13
 28706                           
 28707                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 28708                           
 28709                           ;incstack = 0
 28710  00A688  8EA0               	bsf	160,7,c	;volatile
 28711  00A68A  0012               	return		;funcret
 28712  00A68C                     __end_ofi2_TMR4_Start:
 28713                           	opt callstack 0
 28714                           
 28715 ;; *************** function i2_TMR4_SetInterruptHandler *****************
 28716 ;; Defined at:
 28717 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 28718 ;; Parameters:    Size  Location     Type
 28719 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 28720 ;;		 -> BuzzerTestHandler(1), BuzzerHandler(1), TMR4_DefaultInterruptHandler(1), 
 28721 ;; Auto vars:     Size  Location     Type
 28722 ;;		None
 28723 ;; Return value:  Size  Location     Type
 28724 ;;                  1    wreg      void 
 28725 ;; Registers used:
 28726 ;;		wreg, status,2, status,0
 28727 ;; Tracked objects:
 28728 ;;		On entry : 3F/39
 28729 ;;		On exit  : 3F/39
 28730 ;;		Unchanged: 3E/0
 28731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28736 ;;Total ram usage:        2 bytes
 28737 ;; Hardware stack levels used:    1
 28738 ;; This function calls:
 28739 ;;		Nothing
 28740 ;; This function is called by:
 28741 ;;		i2_BuzzerTask
 28742 ;; This function uses a non-reentrant model
 28743 ;;
 28744                           
 28745                           	psect	text225
 28746  00A308                     __ptext225:
 28747                           	opt callstack 0
 28748  00A308                     i2_TMR4_SetInterruptHandler:
 28749                           	opt callstack 13
 28750                           
 28751                           ; BSR set to: 57
 28752                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 28753                           
 28754                           ;incstack = 0
 28755  00A308  0060  F004  F2ED   	movff	i2TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 28756  00A30E  0060  F008  F2EE   	movff	i2TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 28757                           
 28758                           ; BSR set to: 57
 28759  00A314  0012               	return		;funcret
 28760  00A316                     __end_ofi2_TMR4_SetInterruptHandler:
 28761                           	opt callstack 0
 28762                           
 28763 ;; *************** function i2_TMR4_Period8BitSet *****************
 28764 ;; Defined at:
 28765 ;;		line 155 in file "mcc_generated_files/tmr4.c"
 28766 ;; Parameters:    Size  Location     Type
 28767 ;;  periodVal       1    wreg     unsigned char 
 28768 ;; Auto vars:     Size  Location     Type
 28769 ;;  periodVal       1    0[COMRAM] unsigned char 
 28770 ;; Return value:  Size  Location     Type
 28771 ;;                  1    wreg      void 
 28772 ;; Registers used:
 28773 ;;		wreg
 28774 ;; Tracked objects:
 28775 ;;		On entry : 4/39
 28776 ;;		On exit  : 0/0
 28777 ;;		Unchanged: 0/0
 28778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28783 ;;Total ram usage:        1 bytes
 28784 ;; Hardware stack levels used:    1
 28785 ;; This function calls:
 28786 ;;		Nothing
 28787 ;; This function is called by:
 28788 ;;		i2_BuzzerTask
 28789 ;; This function uses a non-reentrant model
 28790 ;;
 28791                           
 28792                           	psect	text226
 28793  00A42A                     __ptext226:
 28794                           	opt callstack 0
 28795  00A42A                     i2_TMR4_Period8BitSet:
 28796                           	opt callstack 13
 28797                           
 28798                           ; BSR set to: 57
 28799                           ;incstack = 0
 28800                           ;i2TMR4_Period8BitSet@periodVal stored from wreg
 28801  00A42A  6E01               	movwf	i2TMR4_Period8BitSet@periodVal^0,c
 28802                           
 28803                           ;mcc_generated_files/tmr4.c: 155: void TMR4_Period8BitSet(uint8_t periodVal);mcc_generat
      +                          ed_files/tmr4.c: 156: {;mcc_generated_files/tmr4.c: 157:    PR4 = periodVal;
 28804  00A42C  0060  F007  FF9F   	movff	i2TMR4_Period8BitSet@periodVal,16287	;volatile
 28805  00A432  0012               	return		;funcret
 28806  00A434                     __end_ofi2_TMR4_Period8BitSet:
 28807                           	opt callstack 0
 28808                           
 28809 ;; *************** function i2_SetMonitorFailAlarm *****************
 28810 ;; Defined at:
 28811 ;;		line 225 in file "alarm.c"
 28812 ;; Parameters:    Size  Location     Type
 28813 ;;		None
 28814 ;; Auto vars:     Size  Location     Type
 28815 ;;		None
 28816 ;; Return value:  Size  Location     Type
 28817 ;;                  1    wreg      void 
 28818 ;; Registers used:
 28819 ;;		wreg, status,2
 28820 ;; Tracked objects:
 28821 ;;		On entry : 3F/2
 28822 ;;		On exit  : 3F/2
 28823 ;;		Unchanged: 0/0
 28824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28829 ;;Total ram usage:        0 bytes
 28830 ;; Hardware stack levels used:    1
 28831 ;; This function calls:
 28832 ;;		Nothing
 28833 ;; This function is called by:
 28834 ;;		i2_BuzzerTask
 28835 ;; This function uses a non-reentrant model
 28836 ;;
 28837                           
 28838                           	psect	text227
 28839  00A5E0                     __ptext227:
 28840                           	opt callstack 0
 28841  00A5E0                     i2_SetMonitorFailAlarm:
 28842                           	opt callstack 13
 28843                           
 28844                           ; BSR set to: 2
 28845                           ;alarm.c: 226:     monitorFailAlarm = 1;
 28846                           
 28847                           ;incstack = 0
 28848  00A5E0  0E01               	movlw	1
 28849  00A5E2  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 28850                           
 28851                           ; BSR set to: 2
 28852  00A5E4  0012               	return		;funcret
 28853  00A5E6                     __end_ofi2_SetMonitorFailAlarm:
 28854                           	opt callstack 0
 28855                           
 28856 ;; *************** function i2_BuzzerOn *****************
 28857 ;; Defined at:
 28858 ;;		line 446 in file "buzzer.c"
 28859 ;; Parameters:    Size  Location     Type
 28860 ;;  period          1    wreg     unsigned char 
 28861 ;; Auto vars:     Size  Location     Type
 28862 ;;  period          1    0[COMRAM] unsigned char 
 28863 ;; Return value:  Size  Location     Type
 28864 ;;                  1    wreg      void 
 28865 ;; Registers used:
 28866 ;;		wreg, status,2, cstack
 28867 ;; Tracked objects:
 28868 ;;		On entry : 3C/1
 28869 ;;		On exit  : 3F/39
 28870 ;;		Unchanged: 0/0
 28871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28876 ;;Total ram usage:        1 bytes
 28877 ;; Hardware stack levels used:    1
 28878 ;; Hardware stack levels required when called:    1
 28879 ;; This function calls:
 28880 ;;		i2_CMP1_Enable
 28881 ;; This function is called by:
 28882 ;;		i2_BuzzerTask
 28883 ;; This function uses a non-reentrant model
 28884 ;;
 28885                           
 28886                           	psect	text228
 28887  009EEC                     __ptext228:
 28888                           	opt callstack 0
 28889  009EEC                     i2_BuzzerOn:
 28890                           	opt callstack 12
 28891                           
 28892                           ; BSR set to: 2
 28893                           ;incstack = 0
 28894                           ;i2BuzzerOn@period stored from wreg
 28895  009EEC  6E01               	movwf	i2BuzzerOn@period^0,c
 28896                           
 28897                           ;buzzer.c: 448:     T2PR = period;
 28898  009EEE  0060  F007  FFAB   	movff	i2BuzzerOn@period,16299	;volatile
 28899                           
 28900                           ;buzzer.c: 449:     PWM6CON = 0x80;
 28901  009EF4  0E80               	movlw	128
 28902  009EF6  6E6A               	movwf	106,c	;volatile
 28903                           
 28904                           ;buzzer.c: 451:     on = 1;
 28905  009EF8  0E01               	movlw	1
 28906  009EFA  0100               	movlb	0	; () banked
 28907  009EFC  6FF9               	movwf	_on& (0+255),b
 28908                           
 28909                           ; BSR set to: 0
 28910                           ;buzzer.c: 452:     detected = 0;
 28911  009EFE  0E00               	movlw	0
 28912  009F00  6FF8               	movwf	_detected& (0+255),b
 28913                           
 28914                           ; BSR set to: 0
 28915                           ;buzzer.c: 454:     CMP1_Enable();
 28916  009F02  EC9C  F052         	call	i2_CMP1_Enable	;wreg free
 28917                           
 28918                           ; BSR set to: 57
 28919  009F06  0012               	return		;funcret
 28920  009F08                     __end_ofi2_BuzzerOn:
 28921                           	opt callstack 0
 28922                           
 28923 ;; *************** function _TMR1_ISR *****************
 28924 ;; Defined at:
 28925 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 28926 ;; Parameters:    Size  Location     Type
 28927 ;;		None
 28928 ;; Auto vars:     Size  Location     Type
 28929 ;;		None
 28930 ;; Return value:  Size  Location     Type
 28931 ;;                  1    wreg      void 
 28932 ;; Registers used:
 28933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28934 ;; Tracked objects:
 28935 ;;		On entry : 3F/39
 28936 ;;		On exit  : 0/0
 28937 ;;		Unchanged: 0/0
 28938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28943 ;;Total ram usage:        0 bytes
 28944 ;; Hardware stack levels used:    1
 28945 ;; Hardware stack levels required when called:   14
 28946 ;; This function calls:
 28947 ;;		Absolute function
 28948 ;;		_ButtonTask
 28949 ;;		_TMR1_DefaultInterruptHandler
 28950 ;;		_TMR1_WriteTimer
 28951 ;; This function is called by:
 28952 ;;		_INTERRUPT_InterruptManager
 28953 ;; This function uses a non-reentrant model
 28954 ;;
 28955                           
 28956                           	psect	text229
 28957  009802                     __ptext229:
 28958                           	opt callstack 0
 28959  009802                     _TMR1_ISR:
 28960                           	opt callstack 2
 28961                           
 28962                           ; BSR set to: 57
 28963                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 28964                           
 28965                           ; BSR set to: 57
 28966                           ;incstack = 0
 28967  009802  91A4               	bcf	164,0,b	;volatile
 28968                           
 28969                           ; BSR set to: 57
 28970                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 28971  009804  0060  FB74  F001   	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 28972  00980A  0060  FB78  F002   	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 28973  009810  EC43  F04E         	call	_TMR1_WriteTimer	;wreg free
 28974                           
 28975                           ; BSR set to: 57
 28976                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 28977  009814  0102               	movlb	2	; () banked
 28978  009816  51DB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28979  009818  11DC               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28980  00981A  B4D8               	btfsc	status,2,c
 28981  00981C  0012               	return	
 28982                           
 28983                           ; BSR set to: 2
 28984                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 28985  00981E  D801               	call	i2u2130_48
 28986  009820  0012               	return	
 28987  009822                     i2u2130_48:
 28988  009822  0005               	push	
 28989  009824  6EFA               	movwf	pclath,c
 28990  009826  51DB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28991  009828  6EFD               	movwf	tosl,c
 28992  00982A  51DC               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28993  00982C  6EFE               	movwf	tosh,c
 28994  00982E  6AFF               	clrf	tosu,c
 28995  009830  50FA               	movf	pclath,w,c
 28996  009832  0012               	return		;indir
 28997  009834                     __end_of_TMR1_ISR:
 28998                           	opt callstack 0
 28999                           
 29000 ;; *************** function _TMR1_WriteTimer *****************
 29001 ;; Defined at:
 29002 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 29003 ;; Parameters:    Size  Location     Type
 29004 ;;  timerVal        2    0[COMRAM] unsigned short 
 29005 ;; Auto vars:     Size  Location     Type
 29006 ;;		None
 29007 ;; Return value:  Size  Location     Type
 29008 ;;                  1    wreg      void 
 29009 ;; Registers used:
 29010 ;;		None
 29011 ;; Tracked objects:
 29012 ;;		On entry : 3F/39
 29013 ;;		On exit  : 3F/39
 29014 ;;		Unchanged: 3E/0
 29015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29020 ;;Total ram usage:        2 bytes
 29021 ;; Hardware stack levels used:    1
 29022 ;; This function calls:
 29023 ;;		Nothing
 29024 ;; This function is called by:
 29025 ;;		_TMR1_ISR
 29026 ;; This function uses a non-reentrant model
 29027 ;;
 29028                           
 29029                           	psect	text230
 29030  009C86                     __ptext230:
 29031                           	opt callstack 0
 29032  009C86                     _TMR1_WriteTimer:
 29033                           	opt callstack 15
 29034                           
 29035                           ; BSR set to: 57
 29036                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
 29037                           
 29038                           ;incstack = 0
 29039  009C86  A4B2               	btfss	178,2,c	;volatile
 29040  009C88  D009               	goto	i2l862
 29041                           
 29042                           ; BSR set to: 57
 29043                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 29044  009C8A  90B2               	bcf	178,0,c	;volatile
 29045                           
 29046                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 29047  009C8C  0060  F00B  FFB1   	movff	TMR1_WriteTimer@timerVal+1,16305	;volatile
 29048                           
 29049                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 29050  009C92  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
 29051                           
 29052                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 29053  009C98  80B2               	bsf	178,0,c	;volatile
 29054                           
 29055                           ;mcc_generated_files/tmr1.c: 140:     }
 29056  009C9A  0012               	return	
 29057  009C9C                     i2l862:
 29058                           
 29059                           ; BSR set to: 57
 29060                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 29061  009C9C  0060  F00B  FFB1   	movff	TMR1_WriteTimer@timerVal+1,16305	;volatile
 29062                           
 29063                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 29064  009CA2  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
 29065                           
 29066                           ; BSR set to: 57
 29067  009CA8  0012               	return		;funcret
 29068  009CAA                     __end_of_TMR1_WriteTimer:
 29069                           	opt callstack 0
 29070                           
 29071 ;; *************** function _ButtonTask *****************
 29072 ;; Defined at:
 29073 ;;		line 43 in file "buttons.c"
 29074 ;; Parameters:    Size  Location     Type
 29075 ;;		None
 29076 ;; Auto vars:     Size  Location     Type
 29077 ;;		None
 29078 ;; Return value:  Size  Location     Type
 29079 ;;                  1    wreg      void 
 29080 ;; Registers used:
 29081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29082 ;; Tracked objects:
 29083 ;;		On entry : 3F/2
 29084 ;;		On exit  : 3F/0
 29085 ;;		Unchanged: 0/0
 29086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29090 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29091 ;;Total ram usage:        1 bytes
 29092 ;; Hardware stack levels used:    1
 29093 ;; Hardware stack levels required when called:   13
 29094 ;; This function calls:
 29095 ;;		i2_DisableAlarmSV1
 29096 ;;		i2_HistAlarm
 29097 ;;		i2_MuteAlarm
 29098 ;;		i2_printf
 29099 ;; This function is called by:
 29100 ;;		_ButtonInit
 29101 ;;		_TMR1_ISR
 29102 ;; This function uses a non-reentrant model
 29103 ;;
 29104                           
 29105                           	psect	text231
 29106  0065D0                     __ptext231:
 29107                           	opt callstack 0
 29108  0065D0                     _ButtonTask:
 29109                           	opt callstack 2
 29110                           
 29111                           ; BSR set to: 2
 29112                           ;buttons.c: 44:     static int cnt = 0;;buttons.c: 45:     cnt++;
 29113                           
 29114                           ; BSR set to: 57
 29115                           ;incstack = 0
 29116  0065D0  4B84               	infsnz	ButtonTask@cnt& (0+255),f,b
 29117  0065D2  2B85               	incf	(ButtonTask@cnt+1)& (0+255),f,b
 29118                           
 29119                           ; BSR set to: 2
 29120                           ;buttons.c: 47:     muteButton = !PORTDbits.RD2 | (muteButton << 1);
 29121  0065D4  0100               	movlb	0	; () banked
 29122  0065D6  90D8               	bcf	status,0,c
 29123  0065D8  35FD               	rlcf	_muteButton& (0+255),w,b
 29124  0065DA  6FC7               	movwf	??_ButtonTask& (0+255),b
 29125  0065DC  B4CD               	btfsc	205,2,c	;volatile
 29126  0065DE  D002               	goto	i2u1959_40
 29127  0065E0  0E01               	movlw	1
 29128  0065E2  D001               	goto	i2u1960_40
 29129  0065E4                     i2u1959_40:
 29130  0065E4  0E00               	movlw	0
 29131  0065E6                     i2u1960_40:
 29132  0065E6  11C7               	iorwf	??_ButtonTask& (0+255),w,b
 29133  0065E8  6FFD               	movwf	_muteButton& (0+255),b
 29134                           
 29135                           ; BSR set to: 0
 29136                           ;buttons.c: 48:     histButton = !PORTDbits.RD1 | (histButton << 1);
 29137  0065EA  90D8               	bcf	status,0,c
 29138  0065EC  35FC               	rlcf	_histButton& (0+255),w,b
 29139  0065EE  6FC7               	movwf	??_ButtonTask& (0+255),b
 29140  0065F0  B2CD               	btfsc	205,1,c	;volatile
 29141  0065F2  D002               	goto	i2u1961_40
 29142  0065F4  0E01               	movlw	1
 29143  0065F6  D001               	goto	i2u1962_40
 29144  0065F8                     i2u1961_40:
 29145  0065F8  0E00               	movlw	0
 29146  0065FA                     i2u1962_40:
 29147  0065FA  11C7               	iorwf	??_ButtonTask& (0+255),w,b
 29148  0065FC  6FFC               	movwf	_histButton& (0+255),b
 29149                           
 29150                           ; BSR set to: 0
 29151                           ;buttons.c: 49:     if ((muteButton) == 0xF0) {
 29152  0065FE  0EF0               	movlw	240
 29153  006600  19FD               	xorwf	_muteButton& (0+255),w,b
 29154  006602  A4D8               	btfss	status,2,c
 29155  006604  D005               	goto	i2l20651
 29156                           
 29157                           ; BSR set to: 0
 29158                           ;buttons.c: 50:         MuteAlarm();
 29159  006606  ECB7  F023         	call	i2_MuteAlarm	;wreg free
 29160                           
 29161                           ;buttons.c: 52:         muteButton = 0;
 29162  00660A  0E00               	movlw	0
 29163  00660C  0100               	movlb	0	; () banked
 29164  00660E  6FFD               	movwf	_muteButton& (0+255),b
 29165  006610                     i2l20651:
 29166                           
 29167                           ; BSR set to: 0
 29168                           ;buttons.c: 54:     if ((histButton) == 0xF0) {
 29169  006610  0EF0               	movlw	240
 29170  006612  19FC               	xorwf	_histButton& (0+255),w,b
 29171  006614  A4D8               	btfss	status,2,c
 29172  006616  D005               	goto	i2l20657
 29173                           
 29174                           ; BSR set to: 0
 29175                           ;buttons.c: 55:         HistAlarm();
 29176  006618  EC6A  F033         	call	i2_HistAlarm	;wreg free
 29177                           
 29178                           ;buttons.c: 57:         histButton = 0;
 29179  00661C  0E00               	movlw	0
 29180  00661E  0100               	movlb	0	; () banked
 29181  006620  6FFC               	movwf	_histButton& (0+255),b
 29182  006622                     i2l20657:
 29183                           
 29184                           ; BSR set to: 0
 29185                           ;buttons.c: 59:     if (muteButton == 0xFF && histButton == 0xFF) {
 29186  006622  29FD               	incf	_muteButton& (0+255),w,b
 29187  006624  A4D8               	btfss	status,2,c
 29188  006626  D00C               	goto	i2l20667
 29189                           
 29190                           ; BSR set to: 0
 29191  006628  29FC               	incf	_histButton& (0+255),w,b
 29192  00662A  A4D8               	btfss	status,2,c
 29193  00662C  D009               	goto	i2l20667
 29194                           
 29195                           ; BSR set to: 0
 29196                           ;buttons.c: 60:         DisableAlarmSV1();
 29197  00662E  ECF3  F052         	call	i2_DisableAlarmSV1	;wreg free
 29198                           
 29199                           ; BSR set to: 0
 29200  006632  82BA               	bsf	186,1,c	;volatile
 29201                           
 29202                           ; BSR set to: 0
 29203                           ;buttons.c: 62:         printf("\r\nDIS SV1 ALARM!\r\n");
 29204  006634  0E98               	movlw	low STR_14
 29205  006636  6F77               	movwf	i2printf@fmt& (0+255),b
 29206  006638  0EFE               	movlw	high STR_14
 29207  00663A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29208  00663C  ECE8  F04D         	call	i2_printf	;wreg free
 29209  006640                     i2l20667:
 29210                           
 29211                           ;buttons.c: 64:     if (ledType!=0) {
 29212  006640  0100               	movlb	0	; () banked
 29213  006642  51FB               	movf	_ledType& (0+255),w,b
 29214  006644  B4D8               	btfsc	status,2,c
 29215  006646  D040               	goto	i2l20699
 29216                           
 29217                           ; BSR set to: 0
 29218                           ;buttons.c: 65:         if (ledCnt == 0) do { LATDbits.LATD3 = 1; } while(0);
 29219  006648  51EA               	movf	_ledCnt& (0+255),w,b
 29220  00664A  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29221  00664C  B4D8               	btfsc	status,2,c
 29222                           
 29223                           ; BSR set to: 0
 29224  00664E  86BD               	bsf	189,3,c	;volatile
 29225                           
 29226                           ; BSR set to: 0
 29227                           ;buttons.c: 67:         if ((ledCnt == 2 && ledType==1) ||
 29228  006650  0E02               	movlw	2
 29229  006652  19EA               	xorwf	_ledCnt& (0+255),w,b
 29230  006654  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29231  006656  A4D8               	btfss	status,2,c
 29232  006658  D003               	goto	i2u1970_40
 29233                           
 29234                           ; BSR set to: 0
 29235  00665A  05FB               	decf	_ledType& (0+255),w,b
 29236  00665C  B4D8               	btfsc	status,2,c
 29237  00665E  D011               	goto	i2u1974_40
 29238  006660                     i2u1970_40:
 29239                           
 29240                           ; BSR set to: 0
 29241  006660  0E0F               	movlw	15
 29242  006662  19EA               	xorwf	_ledCnt& (0+255),w,b
 29243  006664  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29244  006666  A4D8               	btfss	status,2,c
 29245  006668  D004               	goto	i2u1972_40
 29246                           
 29247                           ; BSR set to: 0
 29248  00666A  0E02               	movlw	2
 29249  00666C  19FB               	xorwf	_ledType& (0+255),w,b
 29250  00666E  B4D8               	btfsc	status,2,c
 29251  006670  D008               	goto	i2u1974_40
 29252  006672                     i2u1972_40:
 29253                           
 29254                           ; BSR set to: 0
 29255  006672  0E0F               	movlw	15
 29256  006674  19EA               	xorwf	_ledCnt& (0+255),w,b
 29257  006676  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29258  006678  A4D8               	btfss	status,2,c
 29259  00667A  D004               	goto	i2l20683
 29260                           
 29261                           ; BSR set to: 0
 29262  00667C  0E04               	movlw	4
 29263  00667E  19FB               	xorwf	_ledType& (0+255),w,b
 29264  006680  B4D8               	btfsc	status,2,c
 29265  006682                     i2u1974_40:
 29266                           
 29267                           ; BSR set to: 0
 29268                           
 29269                           ;buttons.c: 70:         {;buttons.c: 71:             do { LATDbits.LATD3 = 0; } while(0)
      +                          ;
 29270  006682  96BD               	bcf	189,3,c	;volatile
 29271  006684                     i2l20683:
 29272                           
 29273                           ; BSR set to: 0
 29274                           ;buttons.c: 73:         if ((ledCnt == 75 && ledType==1) ||
 29275  006684  0E4B               	movlw	75
 29276  006686  19EA               	xorwf	_ledCnt& (0+255),w,b
 29277  006688  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29278  00668A  A4D8               	btfss	status,2,c
 29279  00668C  D003               	goto	i2u1976_40
 29280                           
 29281                           ; BSR set to: 0
 29282  00668E  05FB               	decf	_ledType& (0+255),w,b
 29283  006690  B4D8               	btfsc	status,2,c
 29284  006692  D012               	goto	i2u1980_40
 29285  006694                     i2u1976_40:
 29286                           
 29287                           ; BSR set to: 0
 29288  006694  0E4B               	movlw	75
 29289  006696  19EA               	xorwf	_ledCnt& (0+255),w,b
 29290  006698  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29291  00669A  A4D8               	btfss	status,2,c
 29292  00669C  D004               	goto	i2u1978_40
 29293                           
 29294                           ; BSR set to: 0
 29295  00669E  0E02               	movlw	2
 29296  0066A0  19FB               	xorwf	_ledType& (0+255),w,b
 29297  0066A2  B4D8               	btfsc	status,2,c
 29298  0066A4  D009               	goto	i2u1980_40
 29299  0066A6                     i2u1978_40:
 29300                           
 29301                           ; BSR set to: 0
 29302  0066A6  0E1E               	movlw	30
 29303  0066A8  19EA               	xorwf	_ledCnt& (0+255),w,b
 29304  0066AA  11EB               	iorwf	(_ledCnt+1)& (0+255),w,b
 29305  0066AC  A4D8               	btfss	status,2,c
 29306  0066AE  D009               	goto	i2l20697
 29307                           
 29308                           ; BSR set to: 0
 29309  0066B0  0E04               	movlw	4
 29310  0066B2  19FB               	xorwf	_ledType& (0+255),w,b
 29311  0066B4  A4D8               	btfss	status,2,c
 29312  0066B6  D005               	goto	i2l20697
 29313  0066B8                     i2u1980_40:
 29314                           
 29315                           ; BSR set to: 0
 29316                           ;buttons.c: 76:         {;buttons.c: 77:             ledCnt = 0;
 29317  0066B8  0E00               	movlw	0
 29318  0066BA  6FEB               	movwf	(_ledCnt+1)& (0+255),b
 29319  0066BC  0E00               	movlw	0
 29320  0066BE  6FEA               	movwf	_ledCnt& (0+255),b
 29321                           
 29322                           ;buttons.c: 78:         } else {
 29323  0066C0  0012               	return	
 29324  0066C2                     i2l20697:
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;buttons.c: 79:             ledCnt++;
 29328  0066C2  4BEA               	infsnz	_ledCnt& (0+255),f,b
 29329  0066C4  2BEB               	incf	(_ledCnt+1)& (0+255),f,b
 29330  0066C6  0012               	return	
 29331  0066C8                     i2l20699:
 29332                           
 29333                           ; BSR set to: 0
 29334                           ;buttons.c: 82:         ledCnt=0;
 29335  0066C8  0E00               	movlw	0
 29336  0066CA  6FEB               	movwf	(_ledCnt+1)& (0+255),b
 29337  0066CC  0E00               	movlw	0
 29338  0066CE  6FEA               	movwf	_ledCnt& (0+255),b
 29339                           
 29340                           ; BSR set to: 0
 29341  0066D0  96BD               	bcf	189,3,c	;volatile
 29342                           
 29343                           ; BSR set to: 0
 29344  0066D2  0012               	return		;funcret
 29345  0066D4                     __end_of_ButtonTask:
 29346                           	opt callstack 0
 29347                           
 29348 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 29349 ;; Defined at:
 29350 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 29351 ;; Parameters:    Size  Location     Type
 29352 ;;		None
 29353 ;; Auto vars:     Size  Location     Type
 29354 ;;		None
 29355 ;; Return value:  Size  Location     Type
 29356 ;;                  1    wreg      void 
 29357 ;; Registers used:
 29358 ;;		None
 29359 ;; Tracked objects:
 29360 ;;		On entry : 3F/2
 29361 ;;		On exit  : 3F/2
 29362 ;;		Unchanged: 3F/0
 29363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29368 ;;Total ram usage:        0 bytes
 29369 ;; Hardware stack levels used:    1
 29370 ;; This function calls:
 29371 ;;		Nothing
 29372 ;; This function is called by:
 29373 ;;		_TMR1_Initialize
 29374 ;;		_TMR1_ISR
 29375 ;; This function uses a non-reentrant model
 29376 ;;
 29377                           
 29378                           	psect	text232
 29379  00A6B4                     __ptext232:
 29380                           	opt callstack 0
 29381  00A6B4                     _TMR1_DefaultInterruptHandler:
 29382                           	opt callstack 15
 29383                           
 29384                           ; BSR set to: 2
 29385                           
 29386                           ; BSR set to: 0
 29387                           ;incstack = 0
 29388  00A6B4  0012               	return		;funcret
 29389  00A6B6                     __end_of_TMR1_DefaultInterruptHandler:
 29390                           	opt callstack 0
 29391                           
 29392 ;; *************** function i2_MuteAlarm *****************
 29393 ;; Defined at:
 29394 ;;		line 377 in file "alarm.c"
 29395 ;; Parameters:    Size  Location     Type
 29396 ;;		None
 29397 ;; Auto vars:     Size  Location     Type
 29398 ;;  MuteAlarm       2   34[BANK0 ] int 
 29399 ;; Return value:  Size  Location     Type
 29400 ;;                  1    wreg      void 
 29401 ;; Registers used:
 29402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29403 ;; Tracked objects:
 29404 ;;		On entry : 3F/0
 29405 ;;		On exit  : 3D/0
 29406 ;;		Unchanged: 0/0
 29407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29409 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29411 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29412 ;;Total ram usage:        5 bytes
 29413 ;; Hardware stack levels used:    1
 29414 ;; Hardware stack levels required when called:   10
 29415 ;; This function calls:
 29416 ;;		i2_AnyAlarm
 29417 ;;		i2_BuzzerClear
 29418 ;;		i2_ClearCircuitFailureAlarm
 29419 ;;		i2_ClearControlFailAlarm
 29420 ;;		i2_ClearGasFailureAlarm
 29421 ;;		i2_ClearHighPressureAlarmHigh
 29422 ;;		i2_ClearMonitorFailAlarm
 29423 ;;		i2_ClearVeryHighPressureAlarmHigh
 29424 ;;		i2_HigherAlarm
 29425 ;;		i2_SetAlarmSV1
 29426 ;;		i2___wmul
 29427 ;;		i2_printf
 29428 ;; This function is called by:
 29429 ;;		_ButtonTask
 29430 ;; This function uses a non-reentrant model
 29431 ;;
 29432                           
 29433                           	psect	text233
 29434  00476E                     __ptext233:
 29435                           	opt callstack 0
 29436  00476E                     i2_MuteAlarm:
 29437                           	opt callstack 4
 29438                           
 29439                           ; BSR set to: 0
 29440                           ;alarm.c: 378:     printf("MUTE");
 29441                           
 29442                           ; BSR set to: 2
 29443                           ;incstack = 0
 29444  00476E  0EC1               	movlw	low STR_25
 29445  004770  6F77               	movwf	i2printf@fmt& (0+255),b
 29446  004772  0EFF               	movlw	high STR_25
 29447  004774  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29448  004776  ECE8  F04D         	call	i2_printf	;wreg free
 29449                           
 29450                           ; BSR set to: 2
 29451                           ;alarm.c: 380:     if (muteSec && muteSec<115) {
 29452  00477A  0101               	movlb	1	; () banked
 29453  00477C  51EB               	movf	_muteSec& (0+255),w,b
 29454  00477E  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 29455  004780  B4D8               	btfsc	status,2,c
 29456  004782  D00C               	goto	i2l20179
 29457                           
 29458                           ; BSR set to: 1
 29459  004784  BFEC               	btfsc	(_muteSec+1)& (0+255),7,b
 29460  004786  D006               	goto	i2u1925_40
 29461  004788  51EC               	movf	(_muteSec+1)& (0+255),w,b
 29462  00478A  E108               	bnz	i2l20179
 29463  00478C  0E73               	movlw	115
 29464  00478E  5DEB               	subwf	_muteSec& (0+255),w,b
 29465  004790  B0D8               	btfsc	status,0,c
 29466  004792  D004               	goto	i2l20179
 29467  004794                     i2u1925_40:
 29468                           
 29469                           ; BSR set to: 1
 29470                           ;alarm.c: 381:         muteSec = 0;
 29471  004794  0E00               	movlw	0
 29472  004796  6FEC               	movwf	(_muteSec+1)& (0+255),b
 29473  004798  0E00               	movlw	0
 29474  00479A  6FEB               	movwf	_muteSec& (0+255),b
 29475  00479C                     i2l20179:
 29476                           
 29477                           ; BSR set to: 1
 29478                           ;alarm.c: 384:     if (AnyAlarm()) {
 29479  00479C  EC8E  F04A         	call	i2_AnyAlarm	;wreg free
 29480  0047A0  0900               	iorlw	0
 29481  0047A2  B4D8               	btfsc	status,2,c
 29482  0047A4  D0AB               	goto	i2l2632
 29483                           
 29484                           ;alarm.c: 386:         BuzzerClear();
 29485  0047A6  ECAE  F050         	call	i2_BuzzerClear	;wreg free
 29486                           
 29487                           ; BSR set to: 57
 29488                           ;alarm.c: 387:         muteSec = 120;
 29489  0047AA  0E00               	movlw	0
 29490  0047AC  0101               	movlb	1	; () banked
 29491  0047AE  6FEC               	movwf	(_muteSec+1)& (0+255),b
 29492  0047B0  0E78               	movlw	120
 29493  0047B2  6FEB               	movwf	_muteSec& (0+255),b
 29494                           
 29495                           ; BSR set to: 1
 29496                           ;alarm.c: 389:         int high = HigherAlarm();
 29497  0047B4  EC75  F039         	call	i2_HigherAlarm	;wreg free
 29498  0047B8  0060  F01C  F082   	movff	?i2_HigherAlarm,i2MuteAlarm@high
 29499  0047BE  0060  F020  F083   	movff	?i2_HigherAlarm+1,i2MuteAlarm@high+1
 29500                           
 29501                           ;alarm.c: 390:         if (alarmData[high].func==HighPressureAlarmHigh) {
 29502  0047C4  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29503  0047CA  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29504  0047D0  0E00               	movlw	0
 29505  0047D2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29506  0047D4  0E15               	movlw	21
 29507  0047D6  6E03               	movwf	i2___wmul@multiplicand^0,c
 29508  0047D8  ECD3  F04C         	call	i2___wmul	;wreg free
 29509  0047DC  0E27               	movlw	low (_alarmData+19)
 29510  0047DE  2401               	addwf	?i2___wmul^0,w,c
 29511  0047E0  6ED9               	movwf	fsr2l,c
 29512  0047E2  0E09               	movlw	high (_alarmData+19)
 29513  0047E4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29514  0047E6  6EDA               	movwf	fsr2h,c
 29515  0047E8  0E74               	movlw	low _HighPressureAlarmHigh
 29516  0047EA  18DE               	xorwf	postinc2,w,c
 29517  0047EC  E105               	bnz	i2l20191
 29518  0047EE  0EA6               	movlw	high _HighPressureAlarmHigh
 29519  0047F0  18DE               	xorwf	postinc2,w,c
 29520  0047F2  B4D8               	btfsc	status,2,c
 29521                           
 29522                           ;alarm.c: 392:             ClearHighPressureAlarmHigh();
 29523  0047F4  ECA8  F052         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 29524  0047F8                     i2l20191:
 29525                           
 29526                           ;alarm.c: 394:         if (alarmData[high].func==VeryHighPressureAlarmHigh) {
 29527  0047F8  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29528  0047FE  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29529  004804  0E00               	movlw	0
 29530  004806  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29531  004808  0E15               	movlw	21
 29532  00480A  6E03               	movwf	i2___wmul@multiplicand^0,c
 29533  00480C  ECD3  F04C         	call	i2___wmul	;wreg free
 29534  004810  0E27               	movlw	low (_alarmData+19)
 29535  004812  2401               	addwf	?i2___wmul^0,w,c
 29536  004814  6ED9               	movwf	fsr2l,c
 29537  004816  0E09               	movlw	high (_alarmData+19)
 29538  004818  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29539  00481A  6EDA               	movwf	fsr2h,c
 29540  00481C  0E7C               	movlw	low _VeryHighPressureAlarmHigh
 29541  00481E  18DE               	xorwf	postinc2,w,c
 29542  004820  E105               	bnz	i2l20195
 29543  004822  0EA6               	movlw	high _VeryHighPressureAlarmHigh
 29544  004824  18DE               	xorwf	postinc2,w,c
 29545  004826  B4D8               	btfsc	status,2,c
 29546                           
 29547                           ;alarm.c: 396:             ClearVeryHighPressureAlarmHigh();
 29548  004828  ECA0  F052         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 29549  00482C                     i2l20195:
 29550                           
 29551                           ;alarm.c: 398:         if (alarmData[high].func==MonitorFailAlarm) {
 29552  00482C  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29553  004832  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29554  004838  0E00               	movlw	0
 29555  00483A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29556  00483C  0E15               	movlw	21
 29557  00483E  6E03               	movwf	i2___wmul@multiplicand^0,c
 29558  004840  ECD3  F04C         	call	i2___wmul	;wreg free
 29559  004844  0E27               	movlw	low (_alarmData+19)
 29560  004846  2401               	addwf	?i2___wmul^0,w,c
 29561  004848  6ED9               	movwf	fsr2l,c
 29562  00484A  0E09               	movlw	high (_alarmData+19)
 29563  00484C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29564  00484E  6EDA               	movwf	fsr2h,c
 29565  004850  0E90               	movlw	low _MonitorFailAlarm
 29566  004852  18DE               	xorwf	postinc2,w,c
 29567  004854  E105               	bnz	i2l20199
 29568  004856  0E6A               	movlw	high _MonitorFailAlarm
 29569  004858  18DE               	xorwf	postinc2,w,c
 29570  00485A  B4D8               	btfsc	status,2,c
 29571                           
 29572                           ;alarm.c: 400:             ClearMonitorFailAlarm();
 29573  00485C  ECA4  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 29574  004860                     i2l20199:
 29575                           
 29576                           ;alarm.c: 402:         if (alarmData[high].func==ControlFailAlarm) {
 29577  004860  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29578  004866  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29579  00486C  0E00               	movlw	0
 29580  00486E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29581  004870  0E15               	movlw	21
 29582  004872  6E03               	movwf	i2___wmul@multiplicand^0,c
 29583  004874  ECD3  F04C         	call	i2___wmul	;wreg free
 29584  004878  0E27               	movlw	low (_alarmData+19)
 29585  00487A  2401               	addwf	?i2___wmul^0,w,c
 29586  00487C  6ED9               	movwf	fsr2l,c
 29587  00487E  0E09               	movlw	high (_alarmData+19)
 29588  004880  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29589  004882  6EDA               	movwf	fsr2h,c
 29590  004884  0EAA               	movlw	low _ControlFailAlarm
 29591  004886  18DE               	xorwf	postinc2,w,c
 29592  004888  E105               	bnz	i2l20203
 29593  00488A  0EA0               	movlw	high _ControlFailAlarm
 29594  00488C  18DE               	xorwf	postinc2,w,c
 29595  00488E  B4D8               	btfsc	status,2,c
 29596                           
 29597                           ;alarm.c: 404:             ClearControlFailAlarm();
 29598  004890  ECB0  F052         	call	i2_ClearControlFailAlarm	;wreg free
 29599  004894                     i2l20203:
 29600                           
 29601                           ;alarm.c: 406:         if (alarmData[high].func==GasFailureAlarm) {
 29602  004894  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29603  00489A  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29604  0048A0  0E00               	movlw	0
 29605  0048A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29606  0048A4  0E15               	movlw	21
 29607  0048A6  6E03               	movwf	i2___wmul@multiplicand^0,c
 29608  0048A8  ECD3  F04C         	call	i2___wmul	;wreg free
 29609  0048AC  0E27               	movlw	low (_alarmData+19)
 29610  0048AE  2401               	addwf	?i2___wmul^0,w,c
 29611  0048B0  6ED9               	movwf	fsr2l,c
 29612  0048B2  0E09               	movlw	high (_alarmData+19)
 29613  0048B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29614  0048B6  6EDA               	movwf	fsr2h,c
 29615  0048B8  0E78               	movlw	low _GasFailureAlarm
 29616  0048BA  18DE               	xorwf	postinc2,w,c
 29617  0048BC  E105               	bnz	i2l20207
 29618  0048BE  0EA6               	movlw	high _GasFailureAlarm
 29619  0048C0  18DE               	xorwf	postinc2,w,c
 29620  0048C2  B4D8               	btfsc	status,2,c
 29621                           
 29622                           ;alarm.c: 408:             ClearGasFailureAlarm();
 29623  0048C4  ECAC  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 29624  0048C8                     i2l20207:
 29625                           
 29626                           ;alarm.c: 410:         if (alarmData[high].func==CircuitFailureAlarm) {
 29627  0048C8  0060  F208  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29628  0048CE  0060  F20C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29629  0048D4  0E00               	movlw	0
 29630  0048D6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29631  0048D8  0E15               	movlw	21
 29632  0048DA  6E03               	movwf	i2___wmul@multiplicand^0,c
 29633  0048DC  ECD3  F04C         	call	i2___wmul	;wreg free
 29634  0048E0  0E27               	movlw	low (_alarmData+19)
 29635  0048E2  2401               	addwf	?i2___wmul^0,w,c
 29636  0048E4  6ED9               	movwf	fsr2l,c
 29637  0048E6  0E09               	movlw	high (_alarmData+19)
 29638  0048E8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29639  0048EA  6EDA               	movwf	fsr2h,c
 29640  0048EC  0E70               	movlw	low _CircuitFailureAlarm
 29641  0048EE  18DE               	xorwf	postinc2,w,c
 29642  0048F0  E105               	bnz	i2l2632
 29643  0048F2  0EA6               	movlw	high _CircuitFailureAlarm
 29644  0048F4  18DE               	xorwf	postinc2,w,c
 29645  0048F6  B4D8               	btfsc	status,2,c
 29646                           
 29647                           ;alarm.c: 412:             ClearCircuitFailureAlarm();
 29648  0048F8  ECB4  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 29649  0048FC                     i2l2632:
 29650                           
 29651                           ;alarm.c: 417:     ClearVeryHighPressureAlarmHigh();
 29652  0048FC  ECA0  F052         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 29653                           
 29654                           ;alarm.c: 418:     ClearHighPressureAlarmHigh();
 29655  004900  ECA8  F052         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 29656                           
 29657                           ;alarm.c: 419:     ClearCircuitFailureAlarm();
 29658  004904  ECB4  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 29659                           
 29660                           ;alarm.c: 420:     ClearGasFailureAlarm();
 29661  004908  ECAC  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 29662                           
 29663                           ;alarm.c: 421:     ClearControlFailAlarm();
 29664  00490C  ECB0  F052         	call	i2_ClearControlFailAlarm	;wreg free
 29665                           
 29666                           ;alarm.c: 422:     ClearMonitorFailAlarm();
 29667  004910  ECA4  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 29668                           
 29669                           ; BSR set to: 2
 29670                           ;alarm.c: 424:     controlSV1 = 1;
 29671  004914  0E01               	movlw	1
 29672  004916  0101               	movlb	1	; () banked
 29673  004918  6FF9               	movwf	_controlSV1& (0+255),b
 29674                           
 29675                           ; BSR set to: 1
 29676                           ;alarm.c: 425:     monitorSV1 = 1;
 29677  00491A  0E01               	movlw	1
 29678  00491C  6FF8               	movwf	_monitorSV1& (0+255),b
 29679                           
 29680                           ; BSR set to: 1
 29681                           ;alarm.c: 426:     veryHighSV1 = 1;
 29682  00491E  0E01               	movlw	1
 29683  004920  6FFB               	movwf	_veryHighSV1& (0+255),b
 29684                           
 29685                           ; BSR set to: 1
 29686                           ;alarm.c: 428:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
 29687  004922  0E00               	movlw	0
 29688  004924  0100               	movlb	0	; () banked
 29689  004926  6F81               	movwf	i2_MuteAlarm$4543& (0+255),b
 29690                           
 29691                           ; BSR set to: 0
 29692  004928  0101               	movlb	1	; () banked
 29693  00492A  51F9               	movf	_controlSV1& (0+255),w,b
 29694  00492C  B4D8               	btfsc	status,2,c
 29695  00492E  D00C               	goto	i2l20229
 29696                           
 29697                           ; BSR set to: 1
 29698  004930  51F8               	movf	_monitorSV1& (0+255),w,b
 29699  004932  B4D8               	btfsc	status,2,c
 29700  004934  D009               	goto	i2l20229
 29701                           
 29702                           ; BSR set to: 1
 29703  004936  51FB               	movf	_veryHighSV1& (0+255),w,b
 29704  004938  B4D8               	btfsc	status,2,c
 29705  00493A  D006               	goto	i2l20229
 29706                           
 29707                           ; BSR set to: 1
 29708  00493C  51FA               	movf	_batterySV1& (0+255),w,b
 29709  00493E  B4D8               	btfsc	status,2,c
 29710  004940  D003               	goto	i2l20229
 29711                           
 29712                           ; BSR set to: 1
 29713  004942  0E01               	movlw	1
 29714  004944  0100               	movlb	0	; () banked
 29715  004946  6F81               	movwf	i2_MuteAlarm$4543& (0+255),b
 29716  004948                     i2l20229:
 29717  004948  0100               	movlb	0	; () banked
 29718  00494A  5181               	movf	i2_MuteAlarm$4543& (0+255),w,b
 29719  00494C  B4D8               	btfsc	status,2,c
 29720  00494E  D002               	goto	i2u1937_40
 29721  004950  0E01               	movlw	1
 29722  004952  D001               	goto	i2u1938_40
 29723  004954                     i2u1937_40:
 29724  004954  0E00               	movlw	0
 29725  004956                     i2u1938_40:
 29726  004956  ECA5  F04C         	call	i2_SetAlarmSV1
 29727  00495A  0012               	return		;funcret
 29728  00495C                     __end_ofi2_MuteAlarm:
 29729                           	opt callstack 0
 29730                           
 29731 ;; *************** function i2_SetAlarmSV1 *****************
 29732 ;; Defined at:
 29733 ;;		line 883 in file "monitor.c"
 29734 ;; Parameters:    Size  Location     Type
 29735 ;;  value           1    wreg     _Bool 
 29736 ;; Auto vars:     Size  Location     Type
 29737 ;;  value           1   90[COMRAM] _Bool 
 29738 ;; Return value:  Size  Location     Type
 29739 ;;                  1    wreg      void 
 29740 ;; Registers used:
 29741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29742 ;; Tracked objects:
 29743 ;;		On entry : 3F/0
 29744 ;;		On exit  : 3D/0
 29745 ;;		Unchanged: 0/0
 29746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29751 ;;Total ram usage:        1 bytes
 29752 ;; Hardware stack levels used:    1
 29753 ;; Hardware stack levels required when called:    9
 29754 ;; This function calls:
 29755 ;;		i2_printf
 29756 ;; This function is called by:
 29757 ;;		i2_MuteAlarm
 29758 ;; This function uses a non-reentrant model
 29759 ;;
 29760                           
 29761                           	psect	text234
 29762  00994A                     __ptext234:
 29763                           	opt callstack 0
 29764  00994A                     i2_SetAlarmSV1:
 29765                           	opt callstack 4
 29766                           
 29767                           ;incstack = 0
 29768                           ;i2SetAlarmSV1@value stored from wreg
 29769  00994A  6E5B               	movwf	i2SetAlarmSV1@value^0,c
 29770                           
 29771                           ;monitor.c: 884:     static _Bool last= 0;;monitor.c: 885:     if (last!=value) printf("
      +                          \r\nAlSV1: %d\r\n", value);
 29772  00994C  505B               	movf	i2SetAlarmSV1@value^0,w,c
 29773  00994E  0100               	movlb	0	; () banked
 29774  009950  19F2               	xorwf	SetAlarmSV1@last& (0+255),w,b
 29775  009952  B4D8               	btfsc	status,2,c
 29776  009954  D00A               	goto	i2l19285
 29777                           
 29778                           ; BSR set to: 0
 29779  009956  0E5C               	movlw	low STR_47
 29780  009958  6F77               	movwf	i2printf@fmt& (0+255),b
 29781  00995A  0EFF               	movlw	high STR_47
 29782  00995C  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29783  00995E  0060  F16C  F079   	movff	i2SetAlarmSV1@value,?i2_printf+2
 29784  009964  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 29785  009966  ECE8  F04D         	call	i2_printf	;wreg free
 29786  00996A                     i2l19285:
 29787                           
 29788                           ;monitor.c: 886:     alarmSV1 = value;
 29789  00996A  0060  F16C  F2A0   	movff	i2SetAlarmSV1@value,_alarmSV1
 29790                           
 29791                           ;monitor.c: 887:     last = value;
 29792  009970  0060  F16C  F0F2   	movff	i2SetAlarmSV1@value,SetAlarmSV1@last
 29793  009976  0012               	return		;funcret
 29794  009978                     __end_ofi2_SetAlarmSV1:
 29795                           	opt callstack 0
 29796                           
 29797 ;; *************** function i2_BuzzerClear *****************
 29798 ;; Defined at:
 29799 ;;		line 71 in file "buzzer.c"
 29800 ;; Parameters:    Size  Location     Type
 29801 ;;		None
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;		None
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1    wreg      void 
 29806 ;; Registers used:
 29807 ;;		wreg, status,2, cstack
 29808 ;; Tracked objects:
 29809 ;;		On entry : 0/1
 29810 ;;		On exit  : 3F/39
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29817 ;;Total ram usage:        0 bytes
 29818 ;; Hardware stack levels used:    1
 29819 ;; Hardware stack levels required when called:    2
 29820 ;; This function calls:
 29821 ;;		i2_BuzzerOff
 29822 ;;		i2_TMR4_Stop
 29823 ;; This function is called by:
 29824 ;;		i2_MuteAlarm
 29825 ;; This function uses a non-reentrant model
 29826 ;;
 29827                           
 29828                           	psect	text235
 29829  00A15C                     __ptext235:
 29830                           	opt callstack 0
 29831  00A15C                     i2_BuzzerClear:
 29832                           	opt callstack 11
 29833                           
 29834                           ;buzzer.c: 72:     alarmState = 0;
 29835                           
 29836                           ;incstack = 0
 29837  00A15C  0E00               	movlw	0
 29838  00A15E  0100               	movlb	0	; () banked
 29839  00A160  6FFA               	movwf	_alarmState& (0+255),b
 29840                           
 29841                           ; BSR set to: 0
 29842                           ;buzzer.c: 73:     BuzzerOff();
 29843  00A162  ECB6  F050         	call	i2_BuzzerOff	;wreg free
 29844                           
 29845                           ;buzzer.c: 74:     TMR4_Stop();
 29846  00A166  EC46  F053         	call	i2_TMR4_Stop	;wreg free
 29847                           
 29848                           ; BSR set to: 57
 29849  00A16A  0012               	return		;funcret
 29850  00A16C                     __end_ofi2_BuzzerClear:
 29851                           	opt callstack 0
 29852                           
 29853 ;; *************** function i2_TMR4_Stop *****************
 29854 ;; Defined at:
 29855 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 29856 ;; Parameters:    Size  Location     Type
 29857 ;;		None
 29858 ;; Auto vars:     Size  Location     Type
 29859 ;;		None
 29860 ;; Return value:  Size  Location     Type
 29861 ;;                  1    wreg      void 
 29862 ;; Registers used:
 29863 ;;		None
 29864 ;; Tracked objects:
 29865 ;;		On entry : 3F/39
 29866 ;;		On exit  : 3F/39
 29867 ;;		Unchanged: 3E/0
 29868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29873 ;;Total ram usage:        0 bytes
 29874 ;; Hardware stack levels used:    1
 29875 ;; This function calls:
 29876 ;;		Nothing
 29877 ;; This function is called by:
 29878 ;;		i2_BuzzerClear
 29879 ;;		i2_BuzzerTask
 29880 ;; This function uses a non-reentrant model
 29881 ;;
 29882                           
 29883                           	psect	text236
 29884  00A68C                     __ptext236:
 29885                           	opt callstack 0
 29886  00A68C                     i2_TMR4_Stop:
 29887                           	opt callstack 13
 29888                           
 29889                           ; BSR set to: 57
 29890                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 29891                           
 29892                           ; BSR set to: 57
 29893                           ;incstack = 0
 29894  00A68C  9EA0               	bcf	160,7,c	;volatile
 29895                           
 29896                           ; BSR set to: 57
 29897  00A68E  0012               	return		;funcret
 29898  00A690                     __end_ofi2_TMR4_Stop:
 29899                           	opt callstack 0
 29900                           
 29901 ;; *************** function i2_BuzzerOff *****************
 29902 ;; Defined at:
 29903 ;;		line 458 in file "buzzer.c"
 29904 ;; Parameters:    Size  Location     Type
 29905 ;;		None
 29906 ;; Auto vars:     Size  Location     Type
 29907 ;;		None
 29908 ;; Return value:  Size  Location     Type
 29909 ;;                  1    wreg      void 
 29910 ;; Registers used:
 29911 ;;		wreg, status,2, cstack
 29912 ;; Tracked objects:
 29913 ;;		On entry : 3D/0
 29914 ;;		On exit  : 3F/39
 29915 ;;		Unchanged: 0/0
 29916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29921 ;;Total ram usage:        0 bytes
 29922 ;; Hardware stack levels used:    1
 29923 ;; Hardware stack levels required when called:    1
 29924 ;; This function calls:
 29925 ;;		i2_CMP1_Disable
 29926 ;; This function is called by:
 29927 ;;		_BuzzerTestHandler
 29928 ;;		i2_BuzzerClear
 29929 ;;		i2_BuzzerTask
 29930 ;; This function uses a non-reentrant model
 29931 ;;
 29932                           
 29933                           	psect	text237
 29934  00A16C                     __ptext237:
 29935                           	opt callstack 0
 29936  00A16C                     i2_BuzzerOff:
 29937                           	opt callstack 13
 29938                           
 29939                           ;buzzer.c: 459:     PWM6CON = 0x00;
 29940                           
 29941                           ; BSR set to: 57
 29942                           ;incstack = 0
 29943  00A16C  0E00               	movlw	0
 29944  00A16E  6E6A               	movwf	106,c	;volatile
 29945                           
 29946                           ;buzzer.c: 460:     on = 0;
 29947  00A170  0E00               	movlw	0
 29948  00A172  0100               	movlb	0	; () banked
 29949  00A174  6FF9               	movwf	_on& (0+255),b
 29950                           
 29951                           ; BSR set to: 0
 29952                           ;buzzer.c: 461:     CMP1_Disable();
 29953  00A176  ECC8  F052         	call	i2_CMP1_Disable	;wreg free
 29954                           
 29955                           ; BSR set to: 57
 29956  00A17A  0012               	return		;funcret
 29957  00A17C                     __end_ofi2_BuzzerOff:
 29958                           	opt callstack 0
 29959                           
 29960 ;; *************** function i2_HistAlarm *****************
 29961 ;; Defined at:
 29962 ;;		line 465 in file "alarm.c"
 29963 ;; Parameters:    Size  Location     Type
 29964 ;;		None
 29965 ;; Auto vars:     Size  Location     Type
 29966 ;;  HistAlarm       2   93[COMRAM] int 
 29967 ;; Return value:  Size  Location     Type
 29968 ;;                  1    wreg      void 
 29969 ;; Registers used:
 29970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29971 ;; Tracked objects:
 29972 ;;		On entry : 3F/0
 29973 ;;		On exit  : 0/0
 29974 ;;		Unchanged: 0/0
 29975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29980 ;;Total ram usage:        4 bytes
 29981 ;; Hardware stack levels used:    1
 29982 ;; Hardware stack levels required when called:   12
 29983 ;; This function calls:
 29984 ;;		i2_AlarmUpdateLCD
 29985 ;;		i2_TMR5_StartTimer
 29986 ;;		i2_TMR5_StopTimer
 29987 ;; This function is called by:
 29988 ;;		_ButtonTask
 29989 ;; This function uses a non-reentrant model
 29990 ;;
 29991                           
 29992                           	psect	text238
 29993  0066D4                     __ptext238:
 29994                           	opt callstack 0
 29995  0066D4                     i2_HistAlarm:
 29996                           	opt callstack 2
 29997                           
 29998                           ; BSR set to: 0
 29999                           ;alarm.c: 466:     TMR5_StopTimer();
 30000                           
 30001                           ; BSR set to: 57
 30002                           ;incstack = 0
 30003  0066D4  EC48  F053         	call	i2_TMR5_StopTimer	;wreg free
 30004                           
 30005                           ; BSR set to: 0
 30006                           ;alarm.c: 467:     int i;;alarm.c: 469:     if (histSec == 0 ) {
 30007  0066D8  0101               	movlb	1	; () banked
 30008  0066DA  51E9               	movf	_histSec& (0+255),w,b
 30009  0066DC  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 30010  0066DE  A4D8               	btfss	status,2,c
 30011  0066E0  D02D               	goto	i2l20259
 30012                           
 30013                           ; BSR set to: 1
 30014                           ;alarm.c: 471:         for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30015  0066E2  0E00               	movlw	0
 30016  0066E4  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30017  0066E6  0E00               	movlw	0
 30018  0066E8  6E5E               	movwf	i2HistAlarm@i^0,c
 30019  0066EA                     i2l20241:
 30020                           
 30021                           ;alarm.c: 472:             if (alarms[i]) break;
 30022  0066EA  90D8               	bcf	status,0,c
 30023  0066EC  345E               	rlcf	i2HistAlarm@i^0,w,c
 30024  0066EE  6ED9               	movwf	fsr2l,c
 30025  0066F0  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30026  0066F2  6EDA               	movwf	fsr2h,c
 30027  0066F4  0E00               	movlw	low _alarms
 30028  0066F6  26D9               	addwf	fsr2l,f,c
 30029  0066F8  0E03               	movlw	high _alarms
 30030  0066FA  22DA               	addwfc	fsr2h,f,c
 30031  0066FC  50DE               	movf	postinc2,w,c
 30032  0066FE  10DE               	iorwf	postinc2,w,c
 30033  006700  A4D8               	btfss	status,2,c
 30034  006702  D008               	goto	i2u1941_40
 30035                           
 30036                           ;alarm.c: 473:         }
 30037  006704  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30038  006706  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30039  006708  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30040  00670A  E104               	bnz	i2u1941_40
 30041  00670C  0E13               	movlw	19
 30042  00670E  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30043  006710  A0D8               	btfss	status,0,c
 30044  006712  D7EB               	goto	i2l20241
 30045  006714                     i2u1941_40:
 30046                           
 30047                           ;alarm.c: 475:         if (i == sizeof(alarmData)/sizeof(a)) {
 30048  006714  0E13               	movlw	19
 30049  006716  185E               	xorwf	i2HistAlarm@i^0,w,c
 30050  006718  105F               	iorwf	(i2HistAlarm@i+1)^0,w,c
 30051  00671A  A4D8               	btfss	status,2,c
 30052  00671C  D003               	goto	i2l20255
 30053  00671E                     i2u1942_40:
 30054                           
 30055                           ;alarm.c: 476:             TMR5_StartTimer();
 30056  00671E  EC4A  F053         	call	i2_TMR5_StartTimer	;wreg free
 30057  006722  0012               	return	
 30058  006724                     i2l20255:
 30059                           
 30060                           ;alarm.c: 479:         histSec = 5;
 30061  006724  0E00               	movlw	0
 30062  006726  0101               	movlb	1	; () banked
 30063  006728  6FEA               	movwf	(_histSec+1)& (0+255),b
 30064  00672A  0E05               	movlw	5
 30065  00672C  6FE9               	movwf	_histSec& (0+255),b
 30066                           
 30067                           ; BSR set to: 1
 30068                           ;alarm.c: 480:         hist=i;
 30069  00672E  0060  F178  F1E7   	movff	i2HistAlarm@i,_hist
 30070  006734  0060  F17C  F1E8   	movff	i2HistAlarm@i+1,_hist+1
 30071                           
 30072                           ;alarm.c: 481:     } else {
 30073  00673A  D049               	goto	i2l20299
 30074  00673C                     i2l20259:
 30075                           
 30076                           ; BSR set to: 1
 30077                           ;alarm.c: 484:         for (i=hist+1; i<sizeof(alarmData)/sizeof(a); i++) {
 30078  00673C  0E01               	movlw	1
 30079  00673E  25E7               	addwf	_hist& (0+255),w,b
 30080  006740  6E5E               	movwf	i2HistAlarm@i^0,c
 30081  006742  0E00               	movlw	0
 30082  006744  21E8               	addwfc	(_hist+1)& (0+255),w,b
 30083  006746  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30084  006748  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30085  00674A  E116               	bnz	i2l20271
 30086  00674C  D011               	goto	L11
 30087  00674E                     i2l20263:
 30088                           
 30089                           ;alarm.c: 485:             if (alarms[i]) break;
 30090  00674E  90D8               	bcf	status,0,c
 30091  006750  345E               	rlcf	i2HistAlarm@i^0,w,c
 30092  006752  6ED9               	movwf	fsr2l,c
 30093  006754  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30094  006756  6EDA               	movwf	fsr2h,c
 30095  006758  0E00               	movlw	low _alarms
 30096  00675A  26D9               	addwf	fsr2l,f,c
 30097  00675C  0E03               	movlw	high _alarms
 30098  00675E  22DA               	addwfc	fsr2h,f,c
 30099  006760  50DE               	movf	postinc2,w,c
 30100  006762  10DE               	iorwf	postinc2,w,c
 30101  006764  A4D8               	btfss	status,2,c
 30102  006766  D008               	goto	i2u1945_40
 30103                           
 30104                           ;alarm.c: 486:         }
 30105  006768  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30106  00676A  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30107  00676C  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30108  00676E  E104               	bnz	i2u1945_40
 30109  006770                     L11:
 30110  006770  0E13               	movlw	19
 30111  006772  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30112  006774  A0D8               	btfss	status,0,c
 30113  006776  D7EB               	goto	i2l20263
 30114  006778                     i2u1945_40:
 30115  006778                     i2l20271:
 30116                           
 30117                           ;alarm.c: 488:         if (i>=sizeof(alarmData)/sizeof(a)) {
 30118  006778  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30119  00677A  E104               	bnz	i2u1946_40
 30120  00677C  0E13               	movlw	19
 30121  00677E  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30122  006780  A0D8               	btfss	status,0,c
 30123  006782  D7D0               	goto	i2l20255
 30124  006784                     i2u1946_40:
 30125                           
 30126                           ;alarm.c: 490:             for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30127  006784  0E00               	movlw	0
 30128  006786  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30129  006788  0E00               	movlw	0
 30130  00678A  6E5E               	movwf	i2HistAlarm@i^0,c
 30131  00678C                     i2l20279:
 30132                           
 30133                           ;alarm.c: 491:                 if (alarms[i]) break;
 30134  00678C  90D8               	bcf	status,0,c
 30135  00678E  345E               	rlcf	i2HistAlarm@i^0,w,c
 30136  006790  6ED9               	movwf	fsr2l,c
 30137  006792  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30138  006794  6EDA               	movwf	fsr2h,c
 30139  006796  0E00               	movlw	low _alarms
 30140  006798  26D9               	addwf	fsr2l,f,c
 30141  00679A  0E03               	movlw	high _alarms
 30142  00679C  22DA               	addwfc	fsr2h,f,c
 30143  00679E  50DE               	movf	postinc2,w,c
 30144  0067A0  10DE               	iorwf	postinc2,w,c
 30145  0067A2  A4D8               	btfss	status,2,c
 30146  0067A4  D008               	goto	i2u1948_40
 30147                           
 30148                           ;alarm.c: 492:             }
 30149  0067A6  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30150  0067A8  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30151  0067AA  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30152  0067AC  E104               	bnz	i2u1948_40
 30153  0067AE  0E13               	movlw	19
 30154  0067B0  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30155  0067B2  A0D8               	btfss	status,0,c
 30156  0067B4  D7EB               	goto	i2l20279
 30157  0067B6                     i2u1948_40:
 30158                           
 30159                           ;alarm.c: 494:             if (i >= sizeof(alarmData)/sizeof(a)) {
 30160  0067B6  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30161  0067B8  E104               	bnz	i2u1949_40
 30162  0067BA  0E13               	movlw	19
 30163  0067BC  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30164  0067BE  A0D8               	btfss	status,0,c
 30165  0067C0  D7B1               	goto	i2l20255
 30166  0067C2                     i2u1949_40:
 30167                           
 30168                           ;alarm.c: 495:                 histSec = 0;
 30169  0067C2  0E00               	movlw	0
 30170  0067C4  0101               	movlb	1	; () banked
 30171  0067C6  6FEA               	movwf	(_histSec+1)& (0+255),b
 30172  0067C8  0E00               	movlw	0
 30173  0067CA  6FE9               	movwf	_histSec& (0+255),b
 30174  0067CC  D7A8               	goto	i2u1942_40
 30175  0067CE                     i2l20299:
 30176                           
 30177                           ; BSR set to: 1
 30178                           ;alarm.c: 505:     AlarmUpdateLCD();
 30179  0067CE  ECD1  F02E         	call	i2_AlarmUpdateLCD	;wreg free
 30180  0067D2  D7A5               	goto	i2u1942_40
 30181  0067D4                     __end_ofi2_HistAlarm:
 30182                           	opt callstack 0
 30183                           
 30184 ;; *************** function i2_TMR5_StopTimer *****************
 30185 ;; Defined at:
 30186 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 30187 ;; Parameters:    Size  Location     Type
 30188 ;;		None
 30189 ;; Auto vars:     Size  Location     Type
 30190 ;;		None
 30191 ;; Return value:  Size  Location     Type
 30192 ;;                  1    wreg      void 
 30193 ;; Registers used:
 30194 ;;		None
 30195 ;; Tracked objects:
 30196 ;;		On entry : 3F/0
 30197 ;;		On exit  : 3F/0
 30198 ;;		Unchanged: 3F/0
 30199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30204 ;;Total ram usage:        0 bytes
 30205 ;; Hardware stack levels used:    1
 30206 ;; This function calls:
 30207 ;;		Nothing
 30208 ;; This function is called by:
 30209 ;;		i2_HistAlarm
 30210 ;; This function uses a non-reentrant model
 30211 ;;
 30212                           
 30213                           	psect	text239
 30214  00A690                     __ptext239:
 30215                           	opt callstack 0
 30216  00A690                     i2_TMR5_StopTimer:
 30217                           	opt callstack 13
 30218                           
 30219                           ; BSR set to: 0
 30220                           ;mcc_generated_files/tmr5.c: 108:     T5CONbits.TMR5ON = 0;
 30221                           
 30222                           ;incstack = 0
 30223  00A690  909A               	bcf	154,0,c	;volatile
 30224                           
 30225                           ; BSR set to: 0
 30226  00A692  0012               	return		;funcret
 30227  00A694                     __end_ofi2_TMR5_StopTimer:
 30228                           	opt callstack 0
 30229                           
 30230 ;; *************** function i2_TMR5_StartTimer *****************
 30231 ;; Defined at:
 30232 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 30233 ;; Parameters:    Size  Location     Type
 30234 ;;		None
 30235 ;; Auto vars:     Size  Location     Type
 30236 ;;		None
 30237 ;; Return value:  Size  Location     Type
 30238 ;;                  1    wreg      void 
 30239 ;; Registers used:
 30240 ;;		None
 30241 ;; Tracked objects:
 30242 ;;		On entry : 0/1
 30243 ;;		On exit  : 0/0
 30244 ;;		Unchanged: 0/0
 30245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30250 ;;Total ram usage:        0 bytes
 30251 ;; Hardware stack levels used:    1
 30252 ;; This function calls:
 30253 ;;		Nothing
 30254 ;; This function is called by:
 30255 ;;		i2_HistAlarm
 30256 ;; This function uses a non-reentrant model
 30257 ;;
 30258                           
 30259                           	psect	text240
 30260  00A694                     __ptext240:
 30261                           	opt callstack 0
 30262  00A694                     i2_TMR5_StartTimer:
 30263                           	opt callstack 13
 30264                           
 30265                           ;mcc_generated_files/tmr5.c: 102:     T5CONbits.TMR5ON = 1;
 30266                           
 30267                           ; BSR set to: 0
 30268                           ;incstack = 0
 30269  00A694  809A               	bsf	154,0,c	;volatile
 30270  00A696  0012               	return		;funcret
 30271  00A698                     __end_ofi2_TMR5_StartTimer:
 30272                           	opt callstack 0
 30273                           
 30274 ;; *************** function i2_AlarmUpdateLCD *****************
 30275 ;; Defined at:
 30276 ;;		line 440 in file "alarm.c"
 30277 ;; Parameters:    Size  Location     Type
 30278 ;;		None
 30279 ;; Auto vars:     Size  Location     Type
 30280 ;;  AlarmUpdateL    2   97[BANK0 ] int 
 30281 ;; Return value:  Size  Location     Type
 30282 ;;                  1    wreg      void 
 30283 ;; Registers used:
 30284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30285 ;; Tracked objects:
 30286 ;;		On entry : 3F/1
 30287 ;;		On exit  : 0/0
 30288 ;;		Unchanged: 0/0
 30289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30291 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30293 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30294 ;;Total ram usage:        6 bytes
 30295 ;; Hardware stack levels used:    1
 30296 ;; Hardware stack levels required when called:   11
 30297 ;; This function calls:
 30298 ;;		i2_AlarmDisplay
 30299 ;;		i2_AnyAlarm
 30300 ;;		i2_HigherAlarm
 30301 ;;		i2_ValueDisplay
 30302 ;;		i2___wmul
 30303 ;; This function is called by:
 30304 ;;		i2_HistAlarm
 30305 ;; This function uses a non-reentrant model
 30306 ;;
 30307                           
 30308                           	psect	text241
 30309  005DA2                     __ptext241:
 30310                           	opt callstack 0
 30311  005DA2                     i2_AlarmUpdateLCD:
 30312                           	opt callstack 2
 30313                           
 30314                           ; BSR set to: 1
 30315                           ;alarm.c: 442:     if (histSec) {
 30316                           
 30317                           ;incstack = 0
 30318  005DA2  51E9               	movf	_histSec& (0+255),w,b
 30319  005DA4  11EA               	iorwf	(_histSec+1)& (0+255),w,b
 30320  005DA6  B4D8               	btfsc	status,2,c
 30321  005DA8  D03F               	goto	i2l19255
 30322                           
 30323                           ; BSR set to: 1
 30324                           ;alarm.c: 443:         displayStatus = 2;
 30325  005DAA  0E00               	movlw	0
 30326  005DAC  0100               	movlb	0	; () banked
 30327  005DAE  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 30328  005DB0  0E02               	movlw	2
 30329  005DB2  6FE0               	movwf	_displayStatus& (0+255),b
 30330                           
 30331                           ; BSR set to: 0
 30332                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30333  005DB4  0060  F79C  F001   	movff	_hist,i2___wmul@multiplier
 30334  005DBA  0060  F7A0  F002   	movff	_hist+1,i2___wmul@multiplier+1
 30335  005DC0  0E00               	movlw	0
 30336  005DC2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30337  005DC4  0E15               	movlw	21
 30338  005DC6  6E03               	movwf	i2___wmul@multiplicand^0,c
 30339  005DC8  ECD3  F04C         	call	i2___wmul	;wreg free
 30340  005DCC  0E25               	movlw	low (_alarmData+17)
 30341  005DCE  2401               	addwf	?i2___wmul^0,w,c
 30342  005DD0  6ED9               	movwf	fsr2l,c
 30343  005DD2  0E09               	movlw	high (_alarmData+17)
 30344  005DD4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30345  005DD6  6EDA               	movwf	fsr2h,c
 30346  005DD8  006F FF78  F0C3    	movff	postinc2,i2_AlarmUpdateLCD$7131
 30347  005DDE  006F FF74  F0C4    	movff	postdec2,i2_AlarmUpdateLCD$7131+1
 30348                           
 30349                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30350  005DE4  0060  F79C  F001   	movff	_hist,i2___wmul@multiplier
 30351  005DEA  0060  F7A0  F002   	movff	_hist+1,i2___wmul@multiplier+1
 30352  005DF0  0E00               	movlw	0
 30353  005DF2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30354  005DF4  0E15               	movlw	21
 30355  005DF6  6E03               	movwf	i2___wmul@multiplicand^0,c
 30356  005DF8  ECD3  F04C         	call	i2___wmul	;wreg free
 30357  005DFC  0E14               	movlw	low _alarmData
 30358  005DFE  2401               	addwf	?i2___wmul^0,w,c
 30359  005E00  0100               	movlb	0	; () banked
 30360  005E02  6FC5               	movwf	i2_AlarmUpdateLCD$7132& (0+255),b
 30361  005E04  0E09               	movlw	high _alarmData
 30362  005E06  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30363  005E08  6FC6               	movwf	(i2_AlarmUpdateLCD$7132+1)& (0+255),b
 30364                           
 30365                           ; BSR set to: 0
 30366                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30367  005E0A  0060  F30C  F0BD   	movff	i2_AlarmUpdateLCD$7131,i2AlarmDisplay@type
 30368  005E10  0060  F310  F0BE   	movff	i2_AlarmUpdateLCD$7131+1,i2AlarmDisplay@type+1
 30369  005E16  0060  F314  F0BF   	movff	i2_AlarmUpdateLCD$7132,i2AlarmDisplay@alarm
 30370  005E1C  0060  F318  F0C0   	movff	i2_AlarmUpdateLCD$7132+1,i2AlarmDisplay@alarm+1
 30371  005E22  EC9D  F03D         	call	i2_AlarmDisplay	;wreg free
 30372                           
 30373                           ;alarm.c: 446:     } else {
 30374  005E26  0012               	return	
 30375  005E28                     i2l19255:
 30376                           
 30377                           ; BSR set to: 1
 30378                           ;alarm.c: 447:         if (displayStatus==1 && AnyAlarm())
 30379  005E28  0100               	movlb	0	; () banked
 30380  005E2A  05E0               	decf	_displayStatus& (0+255),w,b
 30381  005E2C  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 30382  005E2E  A4D8               	btfss	status,2,c
 30383  005E30  D04C               	goto	i2l19269
 30384                           
 30385                           ; BSR set to: 0
 30386  005E32  EC8E  F04A         	call	i2_AnyAlarm	;wreg free
 30387  005E36  0900               	iorlw	0
 30388  005E38  B4D8               	btfsc	status,2,c
 30389  005E3A  D047               	goto	i2l19269
 30390                           
 30391                           ;alarm.c: 448:         {;alarm.c: 449:             int id;;alarm.c: 451:             id 
      +                          = HigherAlarm();
 30392  005E3C  EC75  F039         	call	i2_HigherAlarm	;wreg free
 30393  005E40  0060  F01C  F0C1   	movff	?i2_HigherAlarm,i2AlarmUpdateLCD@id
 30394  005E46  0060  F020  F0C2   	movff	?i2_HigherAlarm+1,i2AlarmUpdateLCD@id+1
 30395                           
 30396                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30397  005E4C  0060  F304  F001   	movff	i2AlarmUpdateLCD@id,i2___wmul@multiplier
 30398  005E52  0060  F308  F002   	movff	i2AlarmUpdateLCD@id+1,i2___wmul@multiplier+1
 30399  005E58  0E00               	movlw	0
 30400  005E5A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30401  005E5C  0E15               	movlw	21
 30402  005E5E  6E03               	movwf	i2___wmul@multiplicand^0,c
 30403  005E60  ECD3  F04C         	call	i2___wmul	;wreg free
 30404  005E64  0E25               	movlw	low (_alarmData+17)
 30405  005E66  2401               	addwf	?i2___wmul^0,w,c
 30406  005E68  6ED9               	movwf	fsr2l,c
 30407  005E6A  0E09               	movlw	high (_alarmData+17)
 30408  005E6C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30409  005E6E  6EDA               	movwf	fsr2h,c
 30410  005E70  006F FF78  F0C3    	movff	postinc2,i2_AlarmUpdateLCD$7131
 30411  005E76  006F FF74  F0C4    	movff	postdec2,i2_AlarmUpdateLCD$7131+1
 30412                           
 30413                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30414  005E7C  0060  F304  F001   	movff	i2AlarmUpdateLCD@id,i2___wmul@multiplier
 30415  005E82  0060  F308  F002   	movff	i2AlarmUpdateLCD@id+1,i2___wmul@multiplier+1
 30416  005E88  0E00               	movlw	0
 30417  005E8A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30418  005E8C  0E15               	movlw	21
 30419  005E8E  6E03               	movwf	i2___wmul@multiplicand^0,c
 30420  005E90  ECD3  F04C         	call	i2___wmul	;wreg free
 30421  005E94  0E14               	movlw	low _alarmData
 30422  005E96  2401               	addwf	?i2___wmul^0,w,c
 30423  005E98  0100               	movlb	0	; () banked
 30424  005E9A  6FC5               	movwf	i2_AlarmUpdateLCD$7132& (0+255),b
 30425  005E9C  0E09               	movlw	high _alarmData
 30426  005E9E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30427  005EA0  6FC6               	movwf	(i2_AlarmUpdateLCD$7132+1)& (0+255),b
 30428                           
 30429                           ; BSR set to: 0
 30430                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30431  005EA2  0060  F30C  F0BD   	movff	i2_AlarmUpdateLCD$7131,i2AlarmDisplay@type
 30432  005EA8  0060  F310  F0BE   	movff	i2_AlarmUpdateLCD$7131+1,i2AlarmDisplay@type+1
 30433  005EAE  0060  F314  F0BF   	movff	i2_AlarmUpdateLCD$7132,i2AlarmDisplay@alarm
 30434  005EB4  0060  F318  F0C0   	movff	i2_AlarmUpdateLCD$7132+1,i2AlarmDisplay@alarm+1
 30435  005EBA  EC9D  F03D         	call	i2_AlarmDisplay	;wreg free
 30436                           
 30437                           ;alarm.c: 454:             displayStatus = 0;
 30438  005EBE  0E00               	movlw	0
 30439  005EC0  0100               	movlb	0	; () banked
 30440  005EC2  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 30441  005EC4  0E00               	movlw	0
 30442  005EC6  6FE0               	movwf	_displayStatus& (0+255),b
 30443                           
 30444                           ;alarm.c: 455:         } else {
 30445  005EC8  0012               	return	
 30446  005ECA                     i2l19269:
 30447                           
 30448                           ;alarm.c: 458:             ValueDisplay();
 30449  005ECA  EC36  F00F         	call	i2_ValueDisplay	;wreg free
 30450                           
 30451                           ;alarm.c: 460:             if (AnyAlarm()) displayStatus = 1;
 30452  005ECE  EC8E  F04A         	call	i2_AnyAlarm	;wreg free
 30453  005ED2  0900               	iorlw	0
 30454  005ED4  B4D8               	btfsc	status,2,c
 30455  005ED6  0012               	return	
 30456  005ED8  0E00               	movlw	0
 30457  005EDA  0100               	movlb	0	; () banked
 30458  005EDC  6FE1               	movwf	(_displayStatus+1)& (0+255),b
 30459  005EDE  0E01               	movlw	1
 30460  005EE0  6FE0               	movwf	_displayStatus& (0+255),b
 30461  005EE2  0012               	return		;funcret
 30462  005EE4                     __end_ofi2_AlarmUpdateLCD:
 30463                           	opt callstack 0
 30464                           
 30465 ;; *************** function i2_HigherAlarm *****************
 30466 ;; Defined at:
 30467 ;;		line 359 in file "alarm.c"
 30468 ;; Parameters:    Size  Location     Type
 30469 ;;		None
 30470 ;; Auto vars:     Size  Location     Type
 30471 ;;  HigherAlarm     2   15[COMRAM] int 
 30472 ;;  HigherAlarm     2   13[COMRAM] int 
 30473 ;; Return value:  Size  Location     Type
 30474 ;;                  2    6[COMRAM] int 
 30475 ;; Registers used:
 30476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30477 ;; Tracked objects:
 30478 ;;		On entry : 0/1
 30479 ;;		On exit  : 0/0
 30480 ;;		Unchanged: 0/0
 30481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30484 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30485 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30486 ;;Total ram usage:       11 bytes
 30487 ;; Hardware stack levels used:    1
 30488 ;; Hardware stack levels required when called:    1
 30489 ;; This function calls:
 30490 ;;		i2___wmul
 30491 ;; This function is called by:
 30492 ;;		i2_MuteAlarm
 30493 ;;		i2_AlarmUpdateLCD
 30494 ;; This function uses a non-reentrant model
 30495 ;;
 30496                           
 30497                           	psect	text242
 30498  0072EA                     __ptext242:
 30499                           	opt callstack 0
 30500  0072EA                     i2_HigherAlarm:
 30501                           	opt callstack 12
 30502                           
 30503                           ;alarm.c: 360:     int max=-1;
 30504                           
 30505                           ;incstack = 0
 30506  0072EA  680E               	setf	i2HigherAlarm@max^0,c
 30507  0072EC  680F               	setf	(i2HigherAlarm@max+1)^0,c
 30508                           
 30509                           ;alarm.c: 361:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30510  0072EE  0E00               	movlw	0
 30511  0072F0  6E11               	movwf	(i2HigherAlarm@i+1)^0,c
 30512  0072F2  0E00               	movlw	0
 30513  0072F4  6E10               	movwf	i2HigherAlarm@i^0,c
 30514  0072F6                     i2l18877:
 30515                           
 30516                           ;alarm.c: 362:         if (alarms[i]) {
 30517  0072F6  90D8               	bcf	status,0,c
 30518  0072F8  3410               	rlcf	i2HigherAlarm@i^0,w,c
 30519  0072FA  6ED9               	movwf	fsr2l,c
 30520  0072FC  3411               	rlcf	(i2HigherAlarm@i+1)^0,w,c
 30521  0072FE  6EDA               	movwf	fsr2h,c
 30522  007300  0E00               	movlw	low _alarms
 30523  007302  26D9               	addwf	fsr2l,f,c
 30524  007304  0E03               	movlw	high _alarms
 30525  007306  22DA               	addwfc	fsr2h,f,c
 30526  007308  50DE               	movf	postinc2,w,c
 30527  00730A  10DE               	iorwf	postinc2,w,c
 30528  00730C  B4D8               	btfsc	status,2,c
 30529  00730E  D037               	goto	i2l18887
 30530                           
 30531                           ;alarm.c: 363:             if (max<0) max = i;
 30532  007310  AE0F               	btfss	(i2HigherAlarm@max+1)^0,7,c
 30533  007312  D007               	goto	i2l18883
 30534  007314                     i2u1842_40:
 30535  007314  0060  F040  F00E   	movff	i2HigherAlarm@i,i2HigherAlarm@max
 30536  00731A  0060  F044  F00F   	movff	i2HigherAlarm@i+1,i2HigherAlarm@max+1
 30537  007320  D02E               	goto	i2l18887
 30538  007322                     i2l18883:
 30539  007322  0060  F040  F001   	movff	i2HigherAlarm@i,i2___wmul@multiplier
 30540  007328  0060  F044  F002   	movff	i2HigherAlarm@i+1,i2___wmul@multiplier+1
 30541  00732E  0E00               	movlw	0
 30542  007330  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30543  007332  0E15               	movlw	21
 30544  007334  6E03               	movwf	i2___wmul@multiplicand^0,c
 30545  007336  ECD3  F04C         	call	i2___wmul	;wreg free
 30546  00733A  0E25               	movlw	low (_alarmData+17)
 30547  00733C  2401               	addwf	?i2___wmul^0,w,c
 30548  00733E  6ED9               	movwf	fsr2l,c
 30549  007340  0E09               	movlw	high (_alarmData+17)
 30550  007342  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30551  007344  6EDA               	movwf	fsr2h,c
 30552  007346  0060  F038  F001   	movff	i2HigherAlarm@max,i2___wmul@multiplier
 30553  00734C  0060  F03C  F002   	movff	i2HigherAlarm@max+1,i2___wmul@multiplier+1
 30554  007352  0E00               	movlw	0
 30555  007354  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30556  007356  0E15               	movlw	21
 30557  007358  6E03               	movwf	i2___wmul@multiplicand^0,c
 30558  00735A  ECD3  F04C         	call	i2___wmul	;wreg free
 30559  00735E  0E25               	movlw	low (_alarmData+17)
 30560  007360  2401               	addwf	?i2___wmul^0,w,c
 30561  007362  6EE1               	movwf	fsr1l,c
 30562  007364  0E09               	movlw	high (_alarmData+17)
 30563  007366  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30564  007368  6EE2               	movwf	fsr1h,c
 30565  00736A  50DE               	movf	postinc2,w,c
 30566  00736C  5CE6               	subwf	postinc1,w,c
 30567  00736E  50E6               	movf	postinc1,w,c
 30568  007370  0A80               	xorlw	128
 30569  007372  6E0D               	movwf	(??i2_HigherAlarm+4)^0,c
 30570  007374  50DE               	movf	postinc2,w,c
 30571  007376  0A80               	xorlw	128
 30572  007378  580D               	subwfb	(??i2_HigherAlarm+4)^0,w,c
 30573  00737A  A0D8               	btfss	status,0,c
 30574  00737C  D7CB               	goto	i2u1842_40
 30575  00737E                     i2l18887:
 30576                           
 30577                           ;alarm.c: 366:     }
 30578  00737E  4A10               	infsnz	i2HigherAlarm@i^0,f,c
 30579  007380  2A11               	incf	(i2HigherAlarm@i+1)^0,f,c
 30580  007382  5011               	movf	(i2HigherAlarm@i+1)^0,w,c
 30581  007384  E104               	bnz	i2u1844_40
 30582  007386  0E13               	movlw	19
 30583  007388  5C10               	subwf	i2HigherAlarm@i^0,w,c
 30584  00738A  A0D8               	btfss	status,0,c
 30585  00738C  D7B4               	goto	i2l18877
 30586  00738E                     i2u1844_40:
 30587                           
 30588                           ;alarm.c: 367:     return max;
 30589  00738E  0060  F038  F007   	movff	i2HigherAlarm@max,?i2_HigherAlarm
 30590  007394  0060  F03C  F008   	movff	i2HigherAlarm@max+1,?i2_HigherAlarm+1
 30591  00739A  0012               	return		;funcret
 30592  00739C                     __end_ofi2_HigherAlarm:
 30593                           	opt callstack 0
 30594                           
 30595 ;; *************** function i2_AlarmDisplay *****************
 30596 ;; Defined at:
 30597 ;;		line 110 in file "display.c"
 30598 ;; Parameters:    Size  Location     Type
 30599 ;;  type            2   93[BANK0 ] int 
 30600 ;;  alarm           2   95[BANK0 ] PTR unsigned char 
 30601 ;;		 -> alarmData(399), 
 30602 ;; Auto vars:     Size  Location     Type
 30603 ;;  AlarmDisplay    1   86[COMRAM] unsigned char 
 30604 ;; Return value:  Size  Location     Type
 30605 ;;                  1    wreg      void 
 30606 ;; Registers used:
 30607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30608 ;; Tracked objects:
 30609 ;;		On entry : 3F/0
 30610 ;;		On exit  : 3D/0
 30611 ;;		Unchanged: 0/0
 30612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30614 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30616 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30617 ;;Total ram usage:        9 bytes
 30618 ;; Hardware stack levels used:    1
 30619 ;; Hardware stack levels required when called:   10
 30620 ;; This function calls:
 30621 ;;		i2_ValueDisplay
 30622 ;;		i2___awmod
 30623 ;;		i2_sprintf
 30624 ;; This function is called by:
 30625 ;;		i2_AlarmUpdateLCD
 30626 ;; This function uses a non-reentrant model
 30627 ;;
 30628                           
 30629                           	psect	text243
 30630  007B3A                     __ptext243:
 30631                           	opt callstack 0
 30632  007B3A                     i2_AlarmDisplay:
 30633                           	opt callstack 2
 30634                           
 30635                           ; BSR set to: 0
 30636                           ;display.c: 111:     static int cnt = 0;;display.c: 112:     char t = (type==4) ? 'H' : 
      +                          ((type==2) ? 'M' : 'L');
 30637                           
 30638                           ;incstack = 0
 30639  007B3A  0E04               	movlw	4
 30640  007B3C  19BD               	xorwf	i2AlarmDisplay@type& (0+255),w,b
 30641  007B3E  11BE               	iorwf	(i2AlarmDisplay@type+1)& (0+255),w,b
 30642  007B40  B4D8               	btfsc	status,2,c
 30643  007B42  D014               	goto	i2l18853
 30644                           
 30645                           ; BSR set to: 0
 30646  007B44  0E02               	movlw	2
 30647  007B46  19BD               	xorwf	i2AlarmDisplay@type& (0+255),w,b
 30648  007B48  11BE               	iorwf	(i2AlarmDisplay@type+1)& (0+255),w,b
 30649  007B4A  B4D8               	btfsc	status,2,c
 30650  007B4C  D004               	goto	i2l18849
 30651                           
 30652                           ; BSR set to: 0
 30653  007B4E  0E00               	movlw	0
 30654  007B50  6E5B               	movwf	(i2_AlarmDisplay$4016+1)^0,c
 30655  007B52  0E4C               	movlw	76
 30656  007B54  D003               	goto	L12
 30657  007B56                     i2l18849:
 30658                           
 30659                           ; BSR set to: 0
 30660  007B56  0E00               	movlw	0
 30661  007B58  6E5B               	movwf	(i2_AlarmDisplay$4016+1)^0,c
 30662  007B5A  0E4D               	movlw	77
 30663  007B5C                     L12:
 30664  007B5C  6E5A               	movwf	i2_AlarmDisplay$4016^0,c
 30665                           
 30666                           ; BSR set to: 0
 30667  007B5E  0060  F168  F058   	movff	i2_AlarmDisplay$4016,i2_AlarmDisplay$4015
 30668  007B64  0060  F16C  F059   	movff	i2_AlarmDisplay$4016+1,i2_AlarmDisplay$4015+1
 30669  007B6A  D004               	goto	i2l18855
 30670  007B6C                     i2l18853:
 30671                           
 30672                           ; BSR set to: 0
 30673  007B6C  0E00               	movlw	0
 30674  007B6E  6E59               	movwf	(i2_AlarmDisplay$4015+1)^0,c
 30675  007B70  0E48               	movlw	72
 30676  007B72  6E58               	movwf	i2_AlarmDisplay$4015^0,c
 30677  007B74                     i2l18855:
 30678                           
 30679                           ; BSR set to: 0
 30680  007B74  0060  F160  F057   	movff	i2_AlarmDisplay$4015,i2AlarmDisplay@t
 30681                           
 30682                           ; BSR set to: 0
 30683                           ;display.c: 114:         sprintf(msg2, "%c %14s", t, alarm);
 30684  007B7A  0ED1               	movlw	low _msg2
 30685  007B7C  6F77               	movwf	i2sprintf@s& (0+255),b
 30686  007B7E  0E03               	movlw	high _msg2
 30687  007B80  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 30688  007B82  0EB2               	movlw	low STR_13
 30689  007B84  6F79               	movwf	i2sprintf@fmt& (0+255),b
 30690  007B86  0EFF               	movlw	high STR_13
 30691  007B88  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 30692  007B8A  0060  F15C  F07B   	movff	i2AlarmDisplay@t,?i2_sprintf+4
 30693  007B90  6B7C               	clrf	(?i2_sprintf+5)& (0+255),b
 30694  007B92  0060  F2FC  F07D   	movff	i2AlarmDisplay@alarm,?i2_sprintf+6
 30695  007B98  0060  F300  F07E   	movff	i2AlarmDisplay@alarm+1,?i2_sprintf+7
 30696  007B9E  EC45  F047         	call	i2_sprintf	;wreg free
 30697                           
 30698                           ; BSR set to: 0
 30699                           ;display.c: 117:     ValueDisplay();
 30700  007BA2  EC36  F00F         	call	i2_ValueDisplay	;wreg free
 30701                           
 30702                           ;display.c: 118:     cnt++;
 30703  007BA6  0102               	movlb	2	; () banked
 30704  007BA8  4B86               	infsnz	AlarmDisplay@cnt& (0+255),f,b
 30705  007BAA  2B87               	incf	(AlarmDisplay@cnt+1)& (0+255),f,b
 30706                           
 30707                           ; BSR set to: 2
 30708                           ;display.c: 119:     cnt = cnt%10;
 30709  007BAC  0060  FA18  F001   	movff	AlarmDisplay@cnt,i2___awmod@dividend
 30710  007BB2  0060  FA1C  F002   	movff	AlarmDisplay@cnt+1,i2___awmod@dividend+1
 30711  007BB8  0E00               	movlw	0
 30712  007BBA  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 30713  007BBC  0E0A               	movlw	10
 30714  007BBE  6E03               	movwf	i2___awmod@divisor^0,c
 30715  007BC0  EC9D  F041         	call	i2___awmod	;wreg free
 30716  007BC4  0060  F004  F286   	movff	?i2___awmod,AlarmDisplay@cnt
 30717  007BCA  0060  F008  F287   	movff	?i2___awmod+1,AlarmDisplay@cnt+1
 30718  007BD0  0012               	return		;funcret
 30719  007BD2                     __end_ofi2_AlarmDisplay:
 30720                           	opt callstack 0
 30721                           
 30722 ;; *************** function i2_DisableAlarmSV1 *****************
 30723 ;; Defined at:
 30724 ;;		line 873 in file "monitor.c"
 30725 ;; Parameters:    Size  Location     Type
 30726 ;;		None
 30727 ;; Auto vars:     Size  Location     Type
 30728 ;;		None
 30729 ;; Return value:  Size  Location     Type
 30730 ;;                  1    wreg      void 
 30731 ;; Registers used:
 30732 ;;		wreg, status,2
 30733 ;; Tracked objects:
 30734 ;;		On entry : 3F/0
 30735 ;;		On exit  : 3F/0
 30736 ;;		Unchanged: 0/0
 30737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30742 ;;Total ram usage:        0 bytes
 30743 ;; Hardware stack levels used:    1
 30744 ;; This function calls:
 30745 ;;		Nothing
 30746 ;; This function is called by:
 30747 ;;		_ButtonTask
 30748 ;; This function uses a non-reentrant model
 30749 ;;
 30750                           
 30751                           	psect	text244
 30752  00A5E6                     __ptext244:
 30753                           	opt callstack 0
 30754  00A5E6                     i2_DisableAlarmSV1:
 30755                           	opt callstack 14
 30756                           
 30757                           ; BSR set to: 0
 30758                           ;monitor.c: 874:     disableAlarmSV1=1;
 30759                           
 30760                           ;incstack = 0
 30761  00A5E6  0E01               	movlw	1
 30762  00A5E8  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 30763                           
 30764                           ; BSR set to: 0
 30765  00A5EA  0012               	return		;funcret
 30766  00A5EC                     __end_ofi2_DisableAlarmSV1:
 30767                           	opt callstack 0
 30768                           
 30769 ;; *************** function _TMR0_ISR *****************
 30770 ;; Defined at:
 30771 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 30772 ;; Parameters:    Size  Location     Type
 30773 ;;		None
 30774 ;; Auto vars:     Size  Location     Type
 30775 ;;		None
 30776 ;; Return value:  Size  Location     Type
 30777 ;;                  1    wreg      void 
 30778 ;; Registers used:
 30779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30780 ;; Tracked objects:
 30781 ;;		On entry : 3F/39
 30782 ;;		On exit  : 0/0
 30783 ;;		Unchanged: 0/0
 30784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30789 ;;Total ram usage:        0 bytes
 30790 ;; Hardware stack levels used:    1
 30791 ;; Hardware stack levels required when called:   11
 30792 ;; This function calls:
 30793 ;;		Absolute function
 30794 ;;		_MonitorPressureTask
 30795 ;;		_TMR0_DefaultInterruptHandler
 30796 ;; This function is called by:
 30797 ;;		_INTERRUPT_InterruptManager
 30798 ;; This function uses a non-reentrant model
 30799 ;;
 30800                           
 30801                           	psect	text245
 30802  009D12                     __ptext245:
 30803                           	opt callstack 0
 30804  009D12                     _TMR0_ISR:
 30805                           	opt callstack 5
 30806                           
 30807                           ; BSR set to: 57
 30808                           ;mcc_generated_files/tmr0.c: 124:     PIR3bits.TMR0IF = 0;
 30809                           
 30810                           ; BSR set to: 0
 30811                           ;incstack = 0
 30812  009D12  9FA3               	bcf	163,7,b	;volatile
 30813                           
 30814                           ; BSR set to: 57
 30815                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 30816  009D14  0102               	movlb	2	; () banked
 30817  009D16  51DF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 30818  009D18  11E0               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 30819  009D1A  B4D8               	btfsc	status,2,c
 30820  009D1C  0012               	return	
 30821                           
 30822                           ; BSR set to: 2
 30823                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 30824  009D1E  D801               	call	i2u2120_48
 30825  009D20  0012               	return	
 30826  009D22                     i2u2120_48:
 30827  009D22  0005               	push	
 30828  009D24  6EFA               	movwf	pclath,c
 30829  009D26  51DF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 30830  009D28  6EFD               	movwf	tosl,c
 30831  009D2A  51E0               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 30832  009D2C  6EFE               	movwf	tosh,c
 30833  009D2E  6AFF               	clrf	tosu,c
 30834  009D30  50FA               	movf	pclath,w,c
 30835  009D32  0012               	return		;indir
 30836  009D34                     __end_of_TMR0_ISR:
 30837                           	opt callstack 0
 30838                           
 30839 ;; *************** function _MonitorPressureTask *****************
 30840 ;; Defined at:
 30841 ;;		line 275 in file "monitor.c"
 30842 ;; Parameters:    Size  Location     Type
 30843 ;;		None
 30844 ;; Auto vars:     Size  Location     Type
 30845 ;;  i               2   89[BANK0 ] int 
 30846 ;;  i               2   87[BANK0 ] int 
 30847 ;;  i               2   95[BANK0 ] int 
 30848 ;;  i               2   93[BANK0 ] int 
 30849 ;;  tmp2            2   81[BANK0 ] unsigned short 
 30850 ;;  tmp             2   79[BANK0 ] unsigned short 
 30851 ;;  sqpr            4    0        unsigned long 
 30852 ;;  pr              2   97[BANK0 ] short 
 30853 ;;  temp            2   91[BANK0 ] unsigned short 
 30854 ;;  next            2   85[BANK0 ] int 
 30855 ;;  v2              2   83[BANK0 ] unsigned short 
 30856 ;;  adcv            2   77[BANK0 ] short 
 30857 ;;  v1              2   65[BANK0 ] unsigned short 
 30858 ;;  halfLimit       2   63[BANK0 ] short 
 30859 ;;  v5              2   61[BANK0 ] short 
 30860 ;;  v12             2   59[BANK0 ] short 
 30861 ;; Return value:  Size  Location     Type
 30862 ;;                  1    wreg      void 
 30863 ;; Registers used:
 30864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30865 ;; Tracked objects:
 30866 ;;		On entry : 3F/2
 30867 ;;		On exit  : 1/0
 30868 ;;		Unchanged: 0/0
 30869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30871 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30872 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30873 ;;      Totals:         5      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30874 ;;Total ram usage:       45 bytes
 30875 ;; Hardware stack levels used:    1
 30876 ;; Hardware stack levels required when called:   10
 30877 ;; This function calls:
 30878 ;;		_AdcReStartCycle
 30879 ;;		_AdcReady
 30880 ;;		_ClearTdeTooLongAlarm
 30881 ;;		_ClearTdiTooLongAlarm
 30882 ;;		_ClearVAboveMaxAlarm
 30883 ;;		_ClearVBelowMinAlarm
 30884 ;;		_DisplayCalibrate
 30885 ;;		_GetPressure_mbar02
 30886 ;;		_SetCircuitFailureAlarm
 30887 ;;		_SetEPAboveSetAlarm
 30888 ;;		_SetEPBelowSetAlarm
 30889 ;;		_SetGasFailureAlarm
 30890 ;;		_SetIPAboveSetAlarm
 30891 ;;		_SetIPBelowSetAlarm
 30892 ;;		_SetTdeTooLongAlarm
 30893 ;;		_SetTdiTooLongAlarm
 30894 ;;		_SetVAboveMaxAlarm
 30895 ;;		_SetVBelowMinAlarm
 30896 ;;		___lldiv
 30897 ;;		___lwdiv
 30898 ;;		_isqrt
 30899 ;;		i2_AdcDataReady
 30900 ;;		i2_ClearCircuitFailureAlarm
 30901 ;;		i2_ClearEPAboveSetAlarm
 30902 ;;		i2_ClearEPBelowSetAlarm
 30903 ;;		i2_ClearGasFailureAlarm
 30904 ;;		i2_ClearIPAboveSetAlarm
 30905 ;;		i2_ClearIPBelowSetAlarm
 30906 ;;		i2_ClearVars
 30907 ;;		i2_GetPressureV_pa
 30908 ;;		i2_GetPressure_pa
 30909 ;;		i2_See12V
 30910 ;;		i2_See5V
 30911 ;;		i2___aldiv
 30912 ;;		i2___awdiv
 30913 ;;		i2___awmod
 30914 ;;		i2___wmul
 30915 ;;		i2_printf
 30916 ;; This function is called by:
 30917 ;;		_MonitorInit
 30918 ;;		_TMR0_ISR
 30919 ;; This function uses a non-reentrant model
 30920 ;;
 30921                           
 30922                           	psect	text246
 30923  00001E                     __ptext246:
 30924                           	opt callstack 0
 30925  00001E                     _MonitorPressureTask:
 30926                           	opt callstack 5
 30927                           
 30928                           ; BSR set to: 2
 30929                           ;monitor.c: 276:     int16_t pr, v12, adcv, v5;;monitor.c: 277:     uint32_t sqpr;;monit
      +                          or.c: 279:     int next;;monitor.c: 280:     static _Bool measPi=0;;monitor.c: 281:     
      +                          static _Bool measPe=0;;monitor.c: 283:     next = state;
 30930                           
 30931                           ;incstack = 0
 30932  00001E  0060  F77C  F0B5   	movff	_state,MonitorPressureTask@next
 30933  000024  0060  F780  F0B6   	movff	_state+1,MonitorPressureTask@next+1
 30934                           
 30935                           ; BSR set to: 2
 30936                           ;monitor.c: 285:     uint16_t temp;;monitor.c: 288:     if (normalSV1 && (alarmSV1 || di
      +                          sableAlarmSV1)) do { LATAbits.LATA1 = 1; } while(0);
 30937  00002A  519F               	movf	_normalSV1& (0+255),w,b
 30938  00002C  B4D8               	btfsc	status,2,c
 30939  00002E  D009               	goto	i2l3062
 30940                           
 30941                           ; BSR set to: 2
 30942  000030  51A0               	movf	_alarmSV1& (0+255),w,b
 30943  000032  A4D8               	btfss	status,2,c
 30944  000034  D004               	goto	i2u2029_40
 30945                           
 30946                           ; BSR set to: 2
 30947  000036  0100               	movlb	0	; () banked
 30948  000038  51F3               	movf	_disableAlarmSV1& (0+255),w,b
 30949  00003A  B4D8               	btfsc	status,2,c
 30950  00003C  D002               	goto	i2l3062
 30951  00003E                     i2u2029_40:
 30952  00003E  82BA               	bsf	186,1,c	;volatile
 30953  000040  D001               	goto	i2l21163
 30954  000042                     i2l3062:
 30955  000042  92BA               	bcf	186,1,c	;volatile
 30956  000044                     i2l21163:
 30957                           
 30958                           ;monitor.c: 292:     static int16_t cnt=0;;monitor.c: 293:     if (cnt==0) printf("0\r\n
      +                          ");
 30959  000044  0102               	movlb	2	; () banked
 30960  000046  513A               	movf	MonitorPressureTask@cnt& (0+255),w,b
 30961  000048  113B               	iorwf	(MonitorPressureTask@cnt+1)& (0+255),w,b
 30962  00004A  A4D8               	btfss	status,2,c
 30963  00004C  D007               	goto	i2l21167
 30964                           
 30965                           ; BSR set to: 2
 30966  00004E  0ED8               	movlw	low STR_42
 30967  000050  0100               	movlb	0	; () banked
 30968  000052  6F77               	movwf	i2printf@fmt& (0+255),b
 30969  000054  0EFF               	movlw	high STR_42
 30970  000056  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 30971  000058  ECE8  F04D         	call	i2_printf	;wreg free
 30972  00005C                     i2l21167:
 30973                           
 30974                           ; BSR set to: 2
 30975                           ;monitor.c: 294:     cnt = (cnt+1)%1000;
 30976  00005C  0E01               	movlw	1
 30977  00005E  253A               	addwf	MonitorPressureTask@cnt& (0+255),w,b
 30978  000060  6E01               	movwf	i2___awmod@dividend^0,c
 30979  000062  0E00               	movlw	0
 30980  000064  213B               	addwfc	(MonitorPressureTask@cnt+1)& (0+255),w,b
 30981  000066  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 30982  000068  0E03               	movlw	3
 30983  00006A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 30984  00006C  0EE8               	movlw	232
 30985  00006E  6E03               	movwf	i2___awmod@divisor^0,c
 30986  000070  EC9D  F041         	call	i2___awmod	;wreg free
 30987  000074  0060  F004  F23A   	movff	?i2___awmod,MonitorPressureTask@cnt
 30988  00007A  0060  F008  F23B   	movff	?i2___awmod+1,MonitorPressureTask@cnt+1
 30989                           
 30990                           ;monitor.c: 296:     if (!AdcDataReady(0)) {
 30991  000080  0E00               	movlw	0
 30992  000082  6E08               	movwf	(i2AdcDataReady@id+1)^0,c
 30993  000084  0E00               	movlw	0
 30994  000086  6E07               	movwf	i2AdcDataReady@id^0,c
 30995  000088  EC28  F04D         	call	i2_AdcDataReady	;wreg free
 30996  00008C  0900               	iorlw	0
 30997  00008E  A4D8               	btfss	status,2,c
 30998  000090  D00A               	goto	i2l21177
 30999                           
 31000                           ;monitor.c: 297:         printf(" (ErrDR) ");
 31001  000092  0EA8               	movlw	low STR_43
 31002  000094  0100               	movlb	0	; () banked
 31003  000096  6F77               	movwf	i2printf@fmt& (0+255),b
 31004  000098  0EFF               	movlw	high STR_43
 31005  00009A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31006  00009C  ECE8  F04D         	call	i2_printf	;wreg free
 31007  0000A0                     i2l21173:
 31008                           
 31009                           ;monitor.c: 299:         AdcReStartCycle();
 31010  0000A0  ECFF  F044         	call	_AdcReStartCycle	;wreg free
 31011  0000A4  0012               	return	
 31012  0000A6                     i2l21177:
 31013                           
 31014                           ;monitor.c: 306:     if (!AdcReady()) {
 31015  0000A6  EC17  F053         	call	_AdcReady	;wreg free
 31016  0000AA  0900               	iorlw	0
 31017  0000AC  A4D8               	btfss	status,2,c
 31018  0000AE  D007               	goto	i2l21181
 31019                           
 31020                           ; BSR set to: 62
 31021                           ;monitor.c: 307:             printf("=");
 31022  0000B0  0EFC               	movlw	low STR_44
 31023  0000B2  0100               	movlb	0	; () banked
 31024  0000B4  6F77               	movwf	i2printf@fmt& (0+255),b
 31025  0000B6  0EFF               	movlw	high STR_44
 31026  0000B8  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31027  0000BA  ECE8  F04D         	call	i2_printf	;wreg free
 31028  0000BE                     i2l21181:
 31029                           
 31030                           ;monitor.c: 313:     if (state == 1) {
 31031  0000BE  0101               	movlb	1	; () banked
 31032  0000C0  05DF               	decf	_state& (0+255),w,b
 31033  0000C2  11E0               	iorwf	(_state+1)& (0+255),w,b
 31034  0000C4  A4D8               	btfss	status,2,c
 31035  0000C6  D0AB               	goto	i2l21203
 31036                           
 31037                           ; BSR set to: 1
 31038                           ;monitor.c: 314:         static int cnt=0;;monitor.c: 315:         adc_result_t tmp, tmp
      +                          2;;monitor.c: 316:         tmp = GetPressure_pa();
 31039  0000C8  EC76  F025         	call	i2_GetPressure_pa	;wreg free
 31040  0000CC  0060  F06C  F0AF   	movff	?i2_GetPressure_pa,MonitorPressureTask@tmp
 31041  0000D2  0060  F070  F0B0   	movff	?i2_GetPressure_pa+1,MonitorPressureTask@tmp+1
 31042                           
 31043                           ;monitor.c: 317:         adcOffset = (7*adcOffset + 8*tmp)/8;
 31044  0000D8  0060  F2BC  F05B   	movff	MonitorPressureTask@tmp,??_MonitorPressureTask
 31045  0000DE  0060  F2C0  F05C   	movff	MonitorPressureTask@tmp+1,??_MonitorPressureTask+1
 31046  0000E4  90D8               	bcf	status,0,c
 31047  0000E6  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31048  0000E8  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31049  0000EA  90D8               	bcf	status,0,c
 31050  0000EC  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31051  0000EE  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31052  0000F0  90D8               	bcf	status,0,c
 31053  0000F2  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31054  0000F4  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31055  0000F6  0060  F7D8  F001   	movff	_adcOffset,i2___wmul@multiplier
 31056  0000FC  0060  F7DC  F002   	movff	_adcOffset+1,i2___wmul@multiplier+1
 31057  000102  0E00               	movlw	0
 31058  000104  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 31059  000106  0E07               	movlw	7
 31060  000108  6E03               	movwf	i2___wmul@multiplicand^0,c
 31061  00010A  ECD3  F04C         	call	i2___wmul	;wreg free
 31062  00010E  505B               	movf	??_MonitorPressureTask^0,w,c
 31063  000110  2601               	addwf	?i2___wmul^0,f,c
 31064  000112  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31065  000114  2202               	addwfc	(?i2___wmul+1)^0,f,c
 31066  000116  90D8               	bcf	status,0,c
 31067  000118  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31068  00011A  3201               	rrcf	?i2___wmul^0,f,c
 31069  00011C  90D8               	bcf	status,0,c
 31070  00011E  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31071  000120  3201               	rrcf	?i2___wmul^0,f,c
 31072  000122  90D8               	bcf	status,0,c
 31073  000124  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31074  000126  3201               	rrcf	?i2___wmul^0,f,c
 31075  000128  0060  F004  F1F6   	movff	?i2___wmul,_adcOffset
 31076  00012E  0060  F008  F1F7   	movff	?i2___wmul+1,_adcOffset+1
 31077                           
 31078                           ;monitor.c: 318:         tmp2 = GetPressureV_pa();
 31079  000134  EC23  F03B         	call	i2_GetPressureV_pa	;wreg free
 31080  000138  0060  F03C  F0B1   	movff	?i2_GetPressureV_pa,MonitorPressureTask@tmp2
 31081  00013E  0060  F040  F0B2   	movff	?i2_GetPressureV_pa+1,MonitorPressureTask@tmp2+1
 31082                           
 31083                           ;monitor.c: 319:         adcVOffset = (7*adcVOffset + 8*tmp2)/8;
 31084  000144  0060  F2C4  F05B   	movff	MonitorPressureTask@tmp2,??_MonitorPressureTask
 31085  00014A  0060  F2C8  F05C   	movff	MonitorPressureTask@tmp2+1,??_MonitorPressureTask+1
 31086  000150  90D8               	bcf	status,0,c
 31087  000152  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31088  000154  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31089  000156  90D8               	bcf	status,0,c
 31090  000158  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31091  00015A  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31092  00015C  90D8               	bcf	status,0,c
 31093  00015E  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31094  000160  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31095  000162  0060  F7D0  F001   	movff	_adcVOffset,i2___wmul@multiplier
 31096  000168  0060  F7D4  F002   	movff	_adcVOffset+1,i2___wmul@multiplier+1
 31097  00016E  0E00               	movlw	0
 31098  000170  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 31099  000172  0E07               	movlw	7
 31100  000174  6E03               	movwf	i2___wmul@multiplicand^0,c
 31101  000176  ECD3  F04C         	call	i2___wmul	;wreg free
 31102  00017A  505B               	movf	??_MonitorPressureTask^0,w,c
 31103  00017C  2601               	addwf	?i2___wmul^0,f,c
 31104  00017E  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31105  000180  2202               	addwfc	(?i2___wmul+1)^0,f,c
 31106  000182  90D8               	bcf	status,0,c
 31107  000184  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31108  000186  3201               	rrcf	?i2___wmul^0,f,c
 31109  000188  90D8               	bcf	status,0,c
 31110  00018A  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31111  00018C  3201               	rrcf	?i2___wmul^0,f,c
 31112  00018E  90D8               	bcf	status,0,c
 31113  000190  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31114  000192  3201               	rrcf	?i2___wmul^0,f,c
 31115  000194  0060  F004  F1F4   	movff	?i2___wmul,_adcVOffset
 31116  00019A  0060  F008  F1F5   	movff	?i2___wmul+1,_adcVOffset+1
 31117                           
 31118                           ;monitor.c: 321:         cnt++;
 31119  0001A0  0102               	movlb	2	; () banked
 31120  0001A2  4B38               	infsnz	MonitorPressureTask@nt_4872& (0+255),f,b
 31121  0001A4  2B39               	incf	(MonitorPressureTask@nt_4872+1)& (0+255),f,b
 31122                           
 31123                           ; BSR set to: 2
 31124                           ;monitor.c: 322:         if (cnt==250) {
 31125  0001A6  0EFA               	movlw	250
 31126  0001A8  1938               	xorwf	MonitorPressureTask@nt_4872& (0+255),w,b
 31127  0001AA  1139               	iorwf	(MonitorPressureTask@nt_4872+1)& (0+255),w,b
 31128  0001AC  A4D8               	btfss	status,2,c
 31129  0001AE  D778               	goto	i2l21173
 31130                           
 31131                           ; BSR set to: 2
 31132                           ;monitor.c: 324:             cnt = 0;
 31133  0001B0  0E00               	movlw	0
 31134  0001B2  6F39               	movwf	(MonitorPressureTask@nt_4872+1)& (0+255),b
 31135  0001B4  0E00               	movlw	0
 31136  0001B6  6F38               	movwf	MonitorPressureTask@nt_4872& (0+255),b
 31137                           
 31138                           ; BSR set to: 2
 31139                           ;monitor.c: 327:             DisplayCalibrate(tmp, adcOffset/8, tmp2, adcVOffset/8);
 31140  0001B8  0060  F2BC  F093   	movff	MonitorPressureTask@tmp,DisplayCalibrate@pr
 31141  0001BE  0060  F2C0  F094   	movff	MonitorPressureTask@tmp+1,DisplayCalibrate@pr+1
 31142  0001C4  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 31143  0001CA  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 31144  0001D0  0E00               	movlw	0
 31145  0001D2  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31146  0001D4  0E08               	movlw	8
 31147  0001D6  6E09               	movwf	i2___awdiv@divisor^0,c
 31148  0001D8  ECE1  F03F         	call	i2___awdiv	;wreg free
 31149  0001DC  0060  F01C  F095   	movff	?i2___awdiv,DisplayCalibrate@off
 31150  0001E2  0060  F020  F096   	movff	?i2___awdiv+1,DisplayCalibrate@off+1
 31151  0001E8  0060  F2C4  F097   	movff	MonitorPressureTask@tmp2,DisplayCalibrate@prv
 31152  0001EE  0060  F2C8  F098   	movff	MonitorPressureTask@tmp2+1,DisplayCalibrate@prv+1
 31153  0001F4  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 31154  0001FA  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 31155  000200  0E00               	movlw	0
 31156  000202  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31157  000204  0E08               	movlw	8
 31158  000206  6E09               	movwf	i2___awdiv@divisor^0,c
 31159  000208  ECE1  F03F         	call	i2___awdiv	;wreg free
 31160  00020C  0060  F01C  F099   	movff	?i2___awdiv,DisplayCalibrate@offv
 31161  000212  0060  F020  F09A   	movff	?i2___awdiv+1,DisplayCalibrate@offv+1
 31162  000218  EC66  F04B         	call	_DisplayCalibrate	;wreg free
 31163  00021C  D741               	goto	i2l21173
 31164  00021E                     i2l21203:
 31165                           
 31166                           ; BSR set to: 1
 31167                           ;monitor.c: 336:         pr = GetPressure_mbar02();
 31168  00021E  EC17  F04B         	call	_GetPressure_mbar02	;wreg free
 31169  000222  0060  F0AC  F0C1   	movff	?_GetPressure_mbar02,MonitorPressureTask@pr
 31170  000228  0060  F0B0  F0C2   	movff	?_GetPressure_mbar02+1,MonitorPressureTask@pr+1
 31171                           
 31172                           ;monitor.c: 337:         if (pr<0) pr = 0;
 31173  00022E  0100               	movlb	0	; () banked
 31174  000230  AFC2               	btfss	(MonitorPressureTask@pr+1)& (0+255),7,b
 31175  000232  D004               	goto	i2l21209
 31176                           
 31177                           ; BSR set to: 0
 31178  000234  0E00               	movlw	0
 31179  000236  6FC2               	movwf	(MonitorPressureTask@pr+1)& (0+255),b
 31180  000238  0E00               	movlw	0
 31181  00023A  6FC1               	movwf	MonitorPressureTask@pr& (0+255),b
 31182  00023C                     i2l21209:
 31183                           
 31184                           ; BSR set to: 0
 31185                           ;monitor.c: 338:         if (pr>100*5) pr = 0;
 31186  00023C  BFC2               	btfsc	(MonitorPressureTask@pr+1)& (0+255),7,b
 31187  00023E  D00A               	goto	i2l21213
 31188  000240  0EF5               	movlw	245
 31189  000242  5DC1               	subwf	MonitorPressureTask@pr& (0+255),w,b
 31190  000244  0E01               	movlw	1
 31191  000246  59C2               	subwfb	(MonitorPressureTask@pr+1)& (0+255),w,b
 31192  000248  A0D8               	btfss	status,0,c
 31193  00024A  D004               	goto	i2l21213
 31194                           
 31195                           ; BSR set to: 0
 31196  00024C  0E00               	movlw	0
 31197  00024E  6FC2               	movwf	(MonitorPressureTask@pr+1)& (0+255),b
 31198  000250  0E00               	movlw	0
 31199  000252  6FC1               	movwf	MonitorPressureTask@pr& (0+255),b
 31200  000254                     i2l21213:
 31201                           
 31202                           ; BSR set to: 0
 31203                           ;monitor.c: 340:         v12 = See12V();
 31204  000254  EC50  F03D         	call	i2_See12V	;wreg free
 31205  000258  0060  F06C  F09B   	movff	?i2_See12V,MonitorPressureTask@v12
 31206  00025E  0060  F070  F09C   	movff	?i2_See12V+1,MonitorPressureTask@v12+1
 31207                           
 31208                           ;monitor.c: 341:         v5 = See5V();
 31209  000264  EC26  F043         	call	i2_See5V	;wreg free
 31210  000268  0060  F06C  F09D   	movff	?i2_See5V,MonitorPressureTask@v5
 31211  00026E  0060  F070  F09E   	movff	?i2_See5V+1,MonitorPressureTask@v5+1
 31212                           
 31213                           ;monitor.c: 343:         AdcReStartCycle();
 31214  000274  ECFF  F044         	call	_AdcReStartCycle	;wreg free
 31215                           
 31216                           ; BSR set to: 62
 31217                           ;monitor.c: 347:     if (!enable) {
 31218  000278  0102               	movlb	2	; () banked
 31219  00027A  51A2               	movf	monitor@enable& (0+255),w,b
 31220  00027C  A4D8               	btfss	status,2,c
 31221  00027E  D020               	goto	i2l21255
 31222                           
 31223                           ; BSR set to: 2
 31224                           ;monitor.c: 348:         ClearVars();
 31225  000280  EC98  F021         	call	i2_ClearVars	;wreg free
 31226                           
 31227                           ; BSR set to: 2
 31228                           ;monitor.c: 349:         ClearVAboveMaxAlarm();
 31229  000284  ECBC  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 31230                           
 31231                           ; BSR set to: 2
 31232                           ;monitor.c: 350:         ClearVBelowMinAlarm();
 31233  000288  EC08  F053         	call	_ClearVBelowMinAlarm	;wreg free
 31234                           
 31235                           ; BSR set to: 2
 31236                           ;monitor.c: 351:         ClearTdiTooLongAlarm();
 31237  00028C  ECC0  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 31238                           
 31239                           ; BSR set to: 2
 31240                           ;monitor.c: 352:         ClearTdeTooLongAlarm();
 31241  000290  ECC4  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 31242                           
 31243                           ; BSR set to: 2
 31244                           ;monitor.c: 353:         ClearEPBelowSetAlarm();
 31245  000294  EC16  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 31246                           
 31247                           ; BSR set to: 0
 31248                           ;monitor.c: 354:         ClearEPAboveSetAlarm();
 31249  000298  EC21  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 31250                           
 31251                           ; BSR set to: 0
 31252                           ;monitor.c: 355:         ClearIPBelowSetAlarm();
 31253  00029C  EC00  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 31254                           
 31255                           ; BSR set to: 0
 31256                           ;monitor.c: 356:         ClearIPAboveSetAlarm();
 31257  0002A0  EC0B  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 31258                           
 31259                           ; BSR set to: 0
 31260                           ;monitor.c: 357:         ClearVAboveMaxAlarm();
 31261  0002A4  ECBC  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 31262                           
 31263                           ; BSR set to: 2
 31264                           ;monitor.c: 358:         ClearVBelowMinAlarm();
 31265  0002A8  EC08  F053         	call	_ClearVBelowMinAlarm	;wreg free
 31266                           
 31267                           ; BSR set to: 2
 31268                           ;monitor.c: 359:         ClearCircuitFailureAlarm();
 31269  0002AC  ECB4  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 31270                           
 31271                           ; BSR set to: 2
 31272                           ;monitor.c: 360:         ClearGasFailureAlarm();
 31273  0002B0  ECAC  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 31274                           
 31275                           ; BSR set to: 2
 31276                           ;monitor.c: 361:         alarmSV1=1;
 31277  0002B4  0E01               	movlw	1
 31278  0002B6  6FA0               	movwf	_alarmSV1& (0+255),b
 31279                           
 31280                           ; BSR set to: 2
 31281                           ;monitor.c: 362:         enableAlarms=0;
 31282  0002B8  0E00               	movlw	0
 31283  0002BA  0100               	movlb	0	; () banked
 31284  0002BC  6FF4               	movwf	_enableAlarms& (0+255),b
 31285  0002BE  0012               	return	
 31286  0002C0                     i2l21255:
 31287                           
 31288                           ; BSR set to: 2
 31289                           ;monitor.c: 365:         static int ecnt = 0;;monitor.c: 366:         ecnt++;
 31290  0002C0  4B36               	infsnz	MonitorPressureTask@ecnt& (0+255),f,b
 31291  0002C2  2B37               	incf	(MonitorPressureTask@ecnt+1)& (0+255),f,b
 31292                           
 31293                           ; BSR set to: 2
 31294                           ;monitor.c: 367:         if (ecnt==0) printf("e\r\n");
 31295  0002C4  5136               	movf	MonitorPressureTask@ecnt& (0+255),w,b
 31296  0002C6  1137               	iorwf	(MonitorPressureTask@ecnt+1)& (0+255),w,b
 31297  0002C8  A4D8               	btfss	status,2,c
 31298  0002CA  D007               	goto	i2l21261
 31299                           
 31300                           ; BSR set to: 2
 31301  0002CC  0EE0               	movlw	low STR_45
 31302  0002CE  0100               	movlb	0	; () banked
 31303  0002D0  6F77               	movwf	i2printf@fmt& (0+255),b
 31304  0002D2  0EFF               	movlw	high STR_45
 31305  0002D4  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31306  0002D6  ECE8  F04D         	call	i2_printf	;wreg free
 31307  0002DA                     i2l21261:
 31308                           
 31309                           ; BSR set to: 2
 31310                           ;monitor.c: 368:         ecnt= (ecnt+1)%1000;
 31311  0002DA  0E01               	movlw	1
 31312  0002DC  2536               	addwf	MonitorPressureTask@ecnt& (0+255),w,b
 31313  0002DE  6E01               	movwf	i2___awmod@dividend^0,c
 31314  0002E0  0E00               	movlw	0
 31315  0002E2  2137               	addwfc	(MonitorPressureTask@ecnt+1)& (0+255),w,b
 31316  0002E4  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 31317  0002E6  0E03               	movlw	3
 31318  0002E8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31319  0002EA  0EE8               	movlw	232
 31320  0002EC  6E03               	movwf	i2___awmod@divisor^0,c
 31321  0002EE  EC9D  F041         	call	i2___awmod	;wreg free
 31322  0002F2  0060  F004  F236   	movff	?i2___awmod,MonitorPressureTask@ecnt
 31323  0002F8  0060  F008  F237   	movff	?i2___awmod+1,MonitorPressureTask@ecnt+1
 31324                           
 31325                           ;monitor.c: 372:     static int16_t cnt2=0;;monitor.c: 373:     if (cnt2==0) printf("P\r
      +                          \n");
 31326  0002FE  0102               	movlb	2	; () banked
 31327  000300  5134               	movf	MonitorPressureTask@cnt2& (0+255),w,b
 31328  000302  1135               	iorwf	(MonitorPressureTask@cnt2+1)& (0+255),w,b
 31329  000304  A4D8               	btfss	status,2,c
 31330  000306  D007               	goto	i2l21267
 31331                           
 31332                           ; BSR set to: 2
 31333  000308  0EDC               	movlw	low STR_46
 31334  00030A  0100               	movlb	0	; () banked
 31335  00030C  6F77               	movwf	i2printf@fmt& (0+255),b
 31336  00030E  0EFF               	movlw	high STR_46
 31337  000310  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31338  000312  ECE8  F04D         	call	i2_printf	;wreg free
 31339  000316                     i2l21267:
 31340                           
 31341                           ; BSR set to: 2
 31342                           ;monitor.c: 374:     cnt2 = (cnt2+1)%1000;
 31343  000316  0E01               	movlw	1
 31344  000318  2534               	addwf	MonitorPressureTask@cnt2& (0+255),w,b
 31345  00031A  6E01               	movwf	i2___awmod@dividend^0,c
 31346  00031C  0E00               	movlw	0
 31347  00031E  2135               	addwfc	(MonitorPressureTask@cnt2+1)& (0+255),w,b
 31348  000320  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 31349  000322  0E03               	movlw	3
 31350  000324  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31351  000326  0EE8               	movlw	232
 31352  000328  6E03               	movwf	i2___awmod@divisor^0,c
 31353  00032A  EC9D  F041         	call	i2___awmod	;wreg free
 31354  00032E  0060  F004  F234   	movff	?i2___awmod,MonitorPressureTask@cnt2
 31355  000334  0060  F008  F235   	movff	?i2___awmod+1,MonitorPressureTask@cnt2+1
 31356                           
 31357                           ;monitor.c: 377:     tt++;
 31358  00033A  0E01               	movlw	1
 31359  00033C  0100               	movlb	0	; () banked
 31360  00033E  27C8               	addwf	_tt& (0+255),f,b
 31361  000340  0E00               	movlw	0
 31362  000342  23C9               	addwfc	(_tt+1)& (0+255),f,b
 31363  000344  23CA               	addwfc	(_tt+2)& (0+255),f,b
 31364  000346  23CB               	addwfc	(_tt+3)& (0+255),f,b
 31365                           
 31366                           ; BSR set to: 0
 31367                           ;monitor.c: 378:     ttExt++;
 31368  000348  0102               	movlb	2	; () banked
 31369  00034A  4B64               	infsnz	_ttExt& (0+255),f,b
 31370  00034C  2B65               	incf	(_ttExt+1)& (0+255),f,b
 31371                           
 31372                           ; BSR set to: 2
 31373                           ;monitor.c: 379:     ttNoAlarm++;
 31374  00034E  4B5E               	infsnz	_ttNoAlarm& (0+255),f,b
 31375  000350  2B5F               	incf	(_ttNoAlarm+1)& (0+255),f,b
 31376                           
 31377                           ; BSR set to: 2
 31378                           ;monitor.c: 380:     ttAlarm++;
 31379  000352  4B5C               	infsnz	_ttAlarm& (0+255),f,b
 31380  000354  2B5D               	incf	(_ttAlarm+1)& (0+255),f,b
 31381                           
 31382                           ; BSR set to: 2
 31383                           ;monitor.c: 383:     prFastBuffer[count%25]=pr;
 31384  000356  0060  F910  F001   	movff	_count,i2___awmod@dividend
 31385  00035C  0060  F914  F002   	movff	_count+1,i2___awmod@dividend+1
 31386  000362  0E00               	movlw	0
 31387  000364  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31388  000366  0E19               	movlw	25
 31389  000368  6E03               	movwf	i2___awmod@divisor^0,c
 31390  00036A  EC9D  F041         	call	i2___awmod	;wreg free
 31391  00036E  90D8               	bcf	status,0,c
 31392  000370  3601               	rlcf	?i2___awmod^0,f,c
 31393  000372  3602               	rlcf	(?i2___awmod+1)^0,f,c
 31394  000374  0E00               	movlw	low _prFastBuffer
 31395  000376  2401               	addwf	?i2___awmod^0,w,c
 31396  000378  6ED9               	movwf	fsr2l,c
 31397  00037A  0E04               	movlw	high _prFastBuffer
 31398  00037C  2002               	addwfc	(?i2___awmod+1)^0,w,c
 31399  00037E  6EDA               	movwf	fsr2h,c
 31400  000380  0060  F307  FFDE   	movff	MonitorPressureTask@pr,postinc2
 31401  000386  0060  F30B  FFDD   	movff	MonitorPressureTask@pr+1,postdec2
 31402                           
 31403                           ;monitor.c: 384:     temp = 0;
 31404  00038C  0E00               	movlw	0
 31405  00038E  0100               	movlb	0	; () banked
 31406  000390  6FBC               	movwf	(MonitorPressureTask@temp+1)& (0+255),b
 31407  000392  0E00               	movlw	0
 31408  000394  6FBB               	movwf	MonitorPressureTask@temp& (0+255),b
 31409                           
 31410                           ; BSR set to: 0
 31411                           ;monitor.c: 385:     for (int i=0; i<25; i++) temp +=prFastBuffer[i];
 31412  000396  0E00               	movlw	0
 31413  000398  6FBE               	movwf	(MonitorPressureTask@i+1)& (0+255),b
 31414  00039A  0E00               	movlw	0
 31415  00039C  6FBD               	movwf	MonitorPressureTask@i& (0+255),b
 31416  00039E                     i2l21283:
 31417                           
 31418                           ; BSR set to: 0
 31419  00039E  BFBE               	btfsc	(MonitorPressureTask@i+1)& (0+255),7,b
 31420  0003A0  D006               	goto	i2l21287
 31421  0003A2  51BE               	movf	(MonitorPressureTask@i+1)& (0+255),w,b
 31422  0003A4  E114               	bnz	i2l21293
 31423  0003A6  0E19               	movlw	25
 31424  0003A8  5DBD               	subwf	MonitorPressureTask@i& (0+255),w,b
 31425  0003AA  B0D8               	btfsc	status,0,c
 31426  0003AC  D010               	goto	i2l21293
 31427  0003AE                     i2l21287:
 31428                           
 31429                           ; BSR set to: 0
 31430  0003AE  90D8               	bcf	status,0,c
 31431  0003B0  35BD               	rlcf	MonitorPressureTask@i& (0+255),w,b
 31432  0003B2  6ED9               	movwf	fsr2l,c
 31433  0003B4  35BE               	rlcf	(MonitorPressureTask@i+1)& (0+255),w,b
 31434  0003B6  6EDA               	movwf	fsr2h,c
 31435  0003B8  0E00               	movlw	low _prFastBuffer
 31436  0003BA  26D9               	addwf	fsr2l,f,c
 31437  0003BC  0E04               	movlw	high _prFastBuffer
 31438  0003BE  22DA               	addwfc	fsr2h,f,c
 31439  0003C0  50DE               	movf	postinc2,w,c
 31440  0003C2  27BB               	addwf	MonitorPressureTask@temp& (0+255),f,b
 31441  0003C4  50DD               	movf	postdec2,w,c
 31442  0003C6  23BC               	addwfc	(MonitorPressureTask@temp+1)& (0+255),f,b
 31443                           
 31444                           ; BSR set to: 0
 31445  0003C8  4BBD               	infsnz	MonitorPressureTask@i& (0+255),f,b
 31446  0003CA  2BBE               	incf	(MonitorPressureTask@i+1)& (0+255),f,b
 31447  0003CC  D7E8               	goto	i2l21283
 31448  0003CE                     i2l21293:
 31449                           
 31450                           ; BSR set to: 0
 31451                           ;monitor.c: 386:     prFast = temp/25;
 31452  0003CE  0060  F2EC  F001   	movff	MonitorPressureTask@temp,___lwdiv@dividend
 31453  0003D4  0060  F2F0  F002   	movff	MonitorPressureTask@temp+1,___lwdiv@dividend+1
 31454  0003DA  0E00               	movlw	0
 31455  0003DC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 31456  0003DE  0E19               	movlw	25
 31457  0003E0  6E03               	movwf	___lwdiv@divisor^0,c
 31458  0003E2  EC48  F046         	call	___lwdiv	;wreg free
 31459  0003E6  0060  F004  F23E   	movff	?___lwdiv,_prFast
 31460  0003EC  0060  F008  F23F   	movff	?___lwdiv+1,_prFast+1
 31461                           
 31462                           ;monitor.c: 387:     if (count%6==0) {
 31463  0003F2  0060  F910  F001   	movff	_count,i2___awmod@dividend
 31464  0003F8  0060  F914  F002   	movff	_count+1,i2___awmod@dividend+1
 31465  0003FE  0E00               	movlw	0
 31466  000400  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31467  000402  0E06               	movlw	6
 31468  000404  6E03               	movwf	i2___awmod@divisor^0,c
 31469  000406  EC9D  F041         	call	i2___awmod	;wreg free
 31470  00040A  5001               	movf	?i2___awmod^0,w,c
 31471  00040C  1002               	iorwf	(?i2___awmod+1)^0,w,c
 31472  00040E  A4D8               	btfss	status,2,c
 31473  000410  D04E               	goto	i2l21313
 31474                           
 31475                           ;monitor.c: 388:         prSlowBuffer[count/6]=pr;
 31476  000412  0060  F910  F007   	movff	_count,i2___awdiv@dividend
 31477  000418  0060  F914  F008   	movff	_count+1,i2___awdiv@dividend+1
 31478  00041E  0E00               	movlw	0
 31479  000420  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31480  000422  0E06               	movlw	6
 31481  000424  6E09               	movwf	i2___awdiv@divisor^0,c
 31482  000426  ECE1  F03F         	call	i2___awdiv	;wreg free
 31483  00042A  90D8               	bcf	status,0,c
 31484  00042C  3607               	rlcf	?i2___awdiv^0,f,c
 31485  00042E  3608               	rlcf	(?i2___awdiv+1)^0,f,c
 31486  000430  0E32               	movlw	low _prSlowBuffer
 31487  000432  2407               	addwf	?i2___awdiv^0,w,c
 31488  000434  6ED9               	movwf	fsr2l,c
 31489  000436  0E04               	movlw	high _prSlowBuffer
 31490  000438  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 31491  00043A  6EDA               	movwf	fsr2h,c
 31492  00043C  0060  F307  FFDE   	movff	MonitorPressureTask@pr,postinc2
 31493  000442  0060  F30B  FFDD   	movff	MonitorPressureTask@pr+1,postdec2
 31494                           
 31495                           ;monitor.c: 389:         temp = 0;
 31496  000448  0E00               	movlw	0
 31497  00044A  0100               	movlb	0	; () banked
 31498  00044C  6FBC               	movwf	(MonitorPressureTask@temp+1)& (0+255),b
 31499  00044E  0E00               	movlw	0
 31500  000450  6FBB               	movwf	MonitorPressureTask@temp& (0+255),b
 31501                           
 31502                           ; BSR set to: 0
 31503                           ;monitor.c: 390:         for (int i=0; i<25; i++) temp +=prSlowBuffer[i];
 31504  000452  0E00               	movlw	0
 31505  000454  6FC0               	movwf	(MonitorPressureTask@i_4881+1)& (0+255),b
 31506  000456  0E00               	movlw	0
 31507  000458  6FBF               	movwf	MonitorPressureTask@i_4881& (0+255),b
 31508  00045A                     i2l21301:
 31509                           
 31510                           ; BSR set to: 0
 31511  00045A  BFC0               	btfsc	(MonitorPressureTask@i_4881+1)& (0+255),7,b
 31512  00045C  D006               	goto	i2l21305
 31513  00045E  51C0               	movf	(MonitorPressureTask@i_4881+1)& (0+255),w,b
 31514  000460  E114               	bnz	i2l21311
 31515  000462  0E19               	movlw	25
 31516  000464  5DBF               	subwf	MonitorPressureTask@i_4881& (0+255),w,b
 31517  000466  B0D8               	btfsc	status,0,c
 31518  000468  D010               	goto	i2l21311
 31519  00046A                     i2l21305:
 31520                           
 31521                           ; BSR set to: 0
 31522  00046A  90D8               	bcf	status,0,c
 31523  00046C  35BF               	rlcf	MonitorPressureTask@i_4881& (0+255),w,b
 31524  00046E  6ED9               	movwf	fsr2l,c
 31525  000470  35C0               	rlcf	(MonitorPressureTask@i_4881+1)& (0+255),w,b
 31526  000472  6EDA               	movwf	fsr2h,c
 31527  000474  0E32               	movlw	low _prSlowBuffer
 31528  000476  26D9               	addwf	fsr2l,f,c
 31529  000478  0E04               	movlw	high _prSlowBuffer
 31530  00047A  22DA               	addwfc	fsr2h,f,c
 31531  00047C  50DE               	movf	postinc2,w,c
 31532  00047E  27BB               	addwf	MonitorPressureTask@temp& (0+255),f,b
 31533  000480  50DD               	movf	postdec2,w,c
 31534  000482  23BC               	addwfc	(MonitorPressureTask@temp+1)& (0+255),f,b
 31535                           
 31536                           ; BSR set to: 0
 31537  000484  4BBF               	infsnz	MonitorPressureTask@i_4881& (0+255),f,b
 31538  000486  2BC0               	incf	(MonitorPressureTask@i_4881+1)& (0+255),f,b
 31539  000488  D7E8               	goto	i2l21301
 31540  00048A                     i2l21311:
 31541                           
 31542                           ; BSR set to: 0
 31543                           ;monitor.c: 391:         prSlow = temp/25;
 31544  00048A  0060  F2EC  F001   	movff	MonitorPressureTask@temp,___lwdiv@dividend
 31545  000490  0060  F2F0  F002   	movff	MonitorPressureTask@temp+1,___lwdiv@dividend+1
 31546  000496  0E00               	movlw	0
 31547  000498  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 31548  00049A  0E19               	movlw	25
 31549  00049C  6E03               	movwf	___lwdiv@divisor^0,c
 31550  00049E  EC48  F046         	call	___lwdiv	;wreg free
 31551  0004A2  0060  F004  F0CE   	movff	?___lwdiv,_prSlow
 31552  0004A8  0060  F008  F0CF   	movff	?___lwdiv+1,_prSlow+1
 31553  0004AE                     i2l21313:
 31554                           
 31555                           ;monitor.c: 393:     count ++;
 31556  0004AE  0102               	movlb	2	; () banked
 31557  0004B0  4B44               	infsnz	_count& (0+255),f,b
 31558  0004B2  2B45               	incf	(_count+1)& (0+255),f,b
 31559                           
 31560                           ; BSR set to: 2
 31561                           ;monitor.c: 394:     if (count>=6*25) count =0;
 31562  0004B4  BF45               	btfsc	(_count+1)& (0+255),7,b
 31563  0004B6  D00A               	goto	i2l3090
 31564  0004B8  5145               	movf	(_count+1)& (0+255),w,b
 31565  0004BA  E104               	bnz	i2u2043_40
 31566  0004BC  0E96               	movlw	150
 31567  0004BE  5D44               	subwf	_count& (0+255),w,b
 31568  0004C0  A0D8               	btfss	status,0,c
 31569  0004C2  D004               	goto	i2l3090
 31570  0004C4                     i2u2043_40:
 31571                           
 31572                           ; BSR set to: 2
 31573  0004C4  0E00               	movlw	0
 31574  0004C6  6F45               	movwf	(_count+1)& (0+255),b
 31575  0004C8  0E00               	movlw	0
 31576  0004CA  6F44               	movwf	_count& (0+255),b
 31577  0004CC                     i2l3090:
 31578                           
 31579                           ; BSR set to: 2
 31580                           ;monitor.c: 397:     if (enableAlarms) {
 31581  0004CC  0100               	movlb	0	; () banked
 31582  0004CE  51F4               	movf	_enableAlarms& (0+255),w,b
 31583  0004D0  B4D8               	btfsc	status,2,c
 31584  0004D2  D00F               	goto	i2l21325
 31585                           
 31586                           ; BSR set to: 0
 31587                           ;monitor.c: 398:         if (ttAlarm>6*500) {
 31588  0004D4  0102               	movlb	2	; () banked
 31589  0004D6  BF5D               	btfsc	(_ttAlarm+1)& (0+255),7,b
 31590  0004D8  D009               	goto	i2l21323
 31591  0004DA  0EB9               	movlw	185
 31592  0004DC  5D5C               	subwf	_ttAlarm& (0+255),w,b
 31593  0004DE  0E0B               	movlw	11
 31594  0004E0  595D               	subwfb	(_ttAlarm+1)& (0+255),w,b
 31595  0004E2  A0D8               	btfss	status,0,c
 31596  0004E4  D003               	goto	i2l21323
 31597                           
 31598                           ; BSR set to: 2
 31599                           ;monitor.c: 399:             SetCircuitFailureAlarm();
 31600  0004E6  ECF9  F052         	call	_SetCircuitFailureAlarm	;wreg free
 31601                           
 31602                           ;monitor.c: 400:         } else {
 31603  0004EA  D008               	goto	i2l21327
 31604  0004EC                     i2l21323:
 31605                           
 31606                           ; BSR set to: 2
 31607                           ;monitor.c: 401:             ClearCircuitFailureAlarm();
 31608  0004EC  ECB4  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 31609  0004F0  D005               	goto	i2l21327
 31610  0004F2                     i2l21325:
 31611                           
 31612                           ; BSR set to: 0
 31613                           ;monitor.c: 404:         ttAlarm = 0;
 31614  0004F2  0E00               	movlw	0
 31615  0004F4  0102               	movlb	2	; () banked
 31616  0004F6  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
 31617  0004F8  0E00               	movlw	0
 31618  0004FA  6F5C               	movwf	_ttAlarm& (0+255),b
 31619  0004FC                     i2l21327:
 31620                           
 31621                           ; BSR set to: 2
 31622                           ;monitor.c: 407:     if (ttNoAlarm>15*500) {
 31623  0004FC  BF5F               	btfsc	(_ttNoAlarm+1)& (0+255),7,b
 31624  0004FE  D00E               	goto	i2l21331
 31625  000500  0E4D               	movlw	77
 31626  000502  5D5E               	subwf	_ttNoAlarm& (0+255),w,b
 31627  000504  0E1D               	movlw	29
 31628  000506  595F               	subwfb	(_ttNoAlarm+1)& (0+255),w,b
 31629  000508  A0D8               	btfss	status,0,c
 31630  00050A  D008               	goto	i2l21331
 31631                           
 31632                           ; BSR set to: 2
 31633                           ;monitor.c: 408:         enableAlarms = 1;
 31634  00050C  0E01               	movlw	1
 31635  00050E  0100               	movlb	0	; () banked
 31636  000510  6FF4               	movwf	_enableAlarms& (0+255),b
 31637                           
 31638                           ;monitor.c: 409:         ttNoAlarm=15*500+1;
 31639  000512  0E1D               	movlw	29
 31640  000514  0102               	movlb	2	; () banked
 31641  000516  6F5F               	movwf	(_ttNoAlarm+1)& (0+255),b
 31642  000518  0E4D               	movlw	77
 31643  00051A  6F5E               	movwf	_ttNoAlarm& (0+255),b
 31644  00051C                     i2l21331:
 31645                           
 31646                           ; BSR set to: 2
 31647                           ;monitor.c: 414:     adcv = GetPressureV_pa();
 31648  00051C  EC23  F03B         	call	i2_GetPressureV_pa	;wreg free
 31649  000520  0060  F03C  F0AD   	movff	?i2_GetPressureV_pa,MonitorPressureTask@adcv
 31650  000526  0060  F040  F0AE   	movff	?i2_GetPressureV_pa+1,MonitorPressureTask@adcv+1
 31651                           
 31652                           ;monitor.c: 417:     uint16_t v1 = adcv > 0 ? adcv<<4 : 0;
 31653  00052C  0100               	movlb	0	; () banked
 31654  00052E  BFAE               	btfsc	(MonitorPressureTask@adcv+1)& (0+255),7,b
 31655  000530  D005               	goto	i2u2047_40
 31656  000532  51AE               	movf	(MonitorPressureTask@adcv+1)& (0+255),w,b
 31657  000534  E108               	bnz	i2l21337
 31658  000536  05AD               	decf	MonitorPressureTask@adcv& (0+255),w,b
 31659  000538  B0D8               	btfsc	status,0,c
 31660  00053A  D005               	goto	i2l21337
 31661  00053C                     i2u2047_40:
 31662                           
 31663                           ; BSR set to: 0
 31664  00053C  0E00               	movlw	0
 31665  00053E  6FA2               	movwf	(MonitorPressureTask@v1+1)& (0+255),b
 31666  000540  0E00               	movlw	0
 31667  000542  6FA1               	movwf	MonitorPressureTask@v1& (0+255),b
 31668  000544  D015               	goto	i2l21339
 31669  000546                     i2l21337:
 31670                           
 31671                           ; BSR set to: 0
 31672  000546  0060  F2B4  F05B   	movff	MonitorPressureTask@adcv,??_MonitorPressureTask
 31673  00054C  0060  F2B8  F05C   	movff	MonitorPressureTask@adcv+1,??_MonitorPressureTask+1
 31674  000552  3A5B               	swapf	??_MonitorPressureTask^0,f,c
 31675  000554  3A5C               	swapf	(??_MonitorPressureTask+1)^0,f,c
 31676  000556  0EF0               	movlw	240
 31677  000558  165C               	andwf	(??_MonitorPressureTask+1)^0,f,c
 31678  00055A  505B               	movf	??_MonitorPressureTask^0,w,c
 31679  00055C  0B0F               	andlw	15
 31680  00055E  125C               	iorwf	(??_MonitorPressureTask+1)^0,f,c
 31681  000560  0EF0               	movlw	240
 31682  000562  165B               	andwf	??_MonitorPressureTask^0,f,c
 31683  000564  0060  F16C  F0A1   	movff	??_MonitorPressureTask,MonitorPressureTask@v1
 31684  00056A  0060  F170  F0A2   	movff	??_MonitorPressureTask+1,MonitorPressureTask@v1+1
 31685  000570                     i2l21339:
 31686                           
 31687                           ; BSR set to: 0
 31688                           ;monitor.c: 418:     uint16_t v2 = isqrt(v1);
 31689  000570  0060  F284  F001   	movff	MonitorPressureTask@v1,isqrt@x
 31690  000576  0060  F288  F002   	movff	MonitorPressureTask@v1+1,isqrt@x+1
 31691  00057C  ECD0  F03A         	call	_isqrt	;wreg free
 31692  000580  0060  F004  F0B3   	movff	?_isqrt,MonitorPressureTask@v2
 31693  000586  0060  F008  F0B4   	movff	?_isqrt+1,MonitorPressureTask@v2+1
 31694                           
 31695                           ; BSR set to: 0
 31696                           ;monitor.c: 419:     volumeAcc += v2 > 20 ? v2 : 0;
 31697  00058C  51B4               	movf	(MonitorPressureTask@v2+1)& (0+255),w,b
 31698  00058E  E109               	bnz	i2l3101
 31699  000590  0E15               	movlw	21
 31700  000592  5DB3               	subwf	MonitorPressureTask@v2& (0+255),w,b
 31701  000594  B0D8               	btfsc	status,0,c
 31702  000596  D005               	goto	i2l3101
 31703                           
 31704                           ; BSR set to: 0
 31705  000598  0E00               	movlw	0
 31706  00059A  6FA4               	movwf	(_MonitorPressureTask$4886+1)& (0+255),b
 31707  00059C  0E00               	movlw	0
 31708  00059E  6FA3               	movwf	_MonitorPressureTask$4886& (0+255),b
 31709  0005A0  D006               	goto	i2l21345
 31710  0005A2                     i2l3101:
 31711                           
 31712                           ; BSR set to: 0
 31713  0005A2  0060  F2CC  F0A3   	movff	MonitorPressureTask@v2,_MonitorPressureTask$4886
 31714  0005A8  0060  F2D0  F0A4   	movff	MonitorPressureTask@v2+1,_MonitorPressureTask$4886+1
 31715  0005AE                     i2l21345:
 31716                           
 31717                           ; BSR set to: 0
 31718  0005AE  51A3               	movf	_MonitorPressureTask$4886& (0+255),w,b
 31719  0005B0  0102               	movlb	2	; () banked
 31720  0005B2  2722               	addwf	_volumeAcc& (0+255),f,b
 31721  0005B4  0100               	movlb	0	; () banked
 31722  0005B6  51A4               	movf	(_MonitorPressureTask$4886+1)& (0+255),w,b
 31723  0005B8  0102               	movlb	2	; () banked
 31724  0005BA  2323               	addwfc	(_volumeAcc+1)& (0+255),f,b
 31725  0005BC  0E00               	movlw	0
 31726  0005BE  2324               	addwfc	(_volumeAcc+2)& (0+255),f,b
 31727  0005C0  0E00               	movlw	0
 31728  0005C2  2325               	addwfc	(_volumeAcc+3)& (0+255),f,b
 31729                           
 31730                           ; BSR set to: 2
 31731                           ;monitor.c: 428:     if (ttExt>6*500) {
 31732  0005C4  BF65               	btfsc	(_ttExt+1)& (0+255),7,b
 31733  0005C6  D093               	goto	i2l21369
 31734  0005C8  0EB9               	movlw	185
 31735  0005CA  5D64               	subwf	_ttExt& (0+255),w,b
 31736  0005CC  0E0B               	movlw	11
 31737  0005CE  5965               	subwfb	(_ttExt+1)& (0+255),w,b
 31738  0005D0  A0D8               	btfss	status,0,c
 31739  0005D2  D08D               	goto	i2l21369
 31740                           
 31741                           ; BSR set to: 2
 31742                           ;monitor.c: 432:         hiLimit = minPressure + 2*(maxPressure-minPressure)/5;
 31743  0005D4  0100               	movlb	0	; () banked
 31744  0005D6  51D6               	movf	_minPressure& (0+255),w,b
 31745  0005D8  0102               	movlb	2	; () banked
 31746  0005DA  5D52               	subwf	_maxPressure& (0+255),w,b
 31747  0005DC  6E5B               	movwf	??_MonitorPressureTask^0,c
 31748  0005DE  0100               	movlb	0	; () banked
 31749  0005E0  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31750  0005E2  0102               	movlb	2	; () banked
 31751  0005E4  5953               	subwfb	(_maxPressure+1)& (0+255),w,b
 31752  0005E6  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 31753  0005E8  90D8               	bcf	status,0,c
 31754  0005EA  345B               	rlcf	??_MonitorPressureTask^0,w,c
 31755  0005EC  6E07               	movwf	i2___awdiv@dividend^0,c
 31756  0005EE  345C               	rlcf	(??_MonitorPressureTask+1)^0,w,c
 31757  0005F0  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 31758  0005F2  0E00               	movlw	0
 31759  0005F4  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31760  0005F6  0E05               	movlw	5
 31761  0005F8  6E09               	movwf	i2___awdiv@divisor^0,c
 31762  0005FA  ECE1  F03F         	call	i2___awdiv	;wreg free
 31763  0005FE  0100               	movlb	0	; () banked
 31764  000600  51D6               	movf	_minPressure& (0+255),w,b
 31765  000602  2407               	addwf	?i2___awdiv^0,w,c
 31766  000604  0101               	movlb	1	; () banked
 31767  000606  6FCF               	movwf	_hiLimit& (0+255),b
 31768  000608  0100               	movlb	0	; () banked
 31769  00060A  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31770  00060C  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 31771  00060E  0101               	movlb	1	; () banked
 31772  000610  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 31773                           
 31774                           ;monitor.c: 433:         loLimit = minPressure + (maxPressure-minPressure)/3;
 31775  000612  0100               	movlb	0	; () banked
 31776  000614  51D6               	movf	_minPressure& (0+255),w,b
 31777  000616  0102               	movlb	2	; () banked
 31778  000618  5D52               	subwf	_maxPressure& (0+255),w,b
 31779  00061A  6E07               	movwf	i2___awdiv@dividend^0,c
 31780  00061C  0100               	movlb	0	; () banked
 31781  00061E  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31782  000620  0102               	movlb	2	; () banked
 31783  000622  5953               	subwfb	(_maxPressure+1)& (0+255),w,b
 31784  000624  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 31785  000626  0E00               	movlw	0
 31786  000628  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31787  00062A  0E03               	movlw	3
 31788  00062C  6E09               	movwf	i2___awdiv@divisor^0,c
 31789  00062E  ECE1  F03F         	call	i2___awdiv	;wreg free
 31790  000632  0100               	movlb	0	; () banked
 31791  000634  51D6               	movf	_minPressure& (0+255),w,b
 31792  000636  2407               	addwf	?i2___awdiv^0,w,c
 31793  000638  0101               	movlb	1	; () banked
 31794  00063A  6FCD               	movwf	_loLimit& (0+255),b
 31795  00063C  0100               	movlb	0	; () banked
 31796  00063E  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31797  000640  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 31798  000642  0101               	movlb	1	; () banked
 31799  000644  6FCE               	movwf	(_loLimit+1)& (0+255),b
 31800                           
 31801                           ; BSR set to: 1
 31802                           ;monitor.c: 436:         if (loLimit<(targetLow+5*5)) {
 31803  000646  0E19               	movlw	25
 31804  000648  25E1               	addwf	_targetLow& (0+255),w,b
 31805  00064A  6E5B               	movwf	??_MonitorPressureTask^0,c
 31806  00064C  0E00               	movlw	0
 31807  00064E  21E2               	addwfc	(_targetLow+1)& (0+255),w,b
 31808  000650  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 31809  000652  505B               	movf	??_MonitorPressureTask^0,w,c
 31810  000654  5DCD               	subwf	_loLimit& (0+255),w,b
 31811  000656  51CE               	movf	(_loLimit+1)& (0+255),w,b
 31812  000658  0A80               	xorlw	128
 31813  00065A  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 31814  00065C  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31815  00065E  0A80               	xorlw	128
 31816  000660  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 31817  000662  B0D8               	btfsc	status,0,c
 31818  000664  D006               	goto	i2l3105
 31819                           
 31820                           ; BSR set to: 1
 31821                           ;monitor.c: 438:             loLimit = targetLow+5*5;
 31822  000666  0E19               	movlw	25
 31823  000668  25E1               	addwf	_targetLow& (0+255),w,b
 31824  00066A  6FCD               	movwf	_loLimit& (0+255),b
 31825  00066C  0E00               	movlw	0
 31826  00066E  21E2               	addwfc	(_targetLow+1)& (0+255),w,b
 31827  000670  6FCE               	movwf	(_loLimit+1)& (0+255),b
 31828  000672                     i2l3105:
 31829                           
 31830                           ; BSR set to: 1
 31831                           ;monitor.c: 441:         if (hiLimit<loLimit) hiLimit = loLimit;
 31832  000672  51CD               	movf	_loLimit& (0+255),w,b
 31833  000674  5DCF               	subwf	_hiLimit& (0+255),w,b
 31834  000676  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 31835  000678  0A80               	xorlw	128
 31836  00067A  6E5B               	movwf	??_MonitorPressureTask^0,c
 31837  00067C  51CE               	movf	(_loLimit+1)& (0+255),w,b
 31838  00067E  0A80               	xorlw	128
 31839  000680  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31840  000682  B0D8               	btfsc	status,0,c
 31841  000684  D004               	goto	i2l3106
 31842                           
 31843                           ; BSR set to: 1
 31844  000686  C1CD  F1CF         	movff	_loLimit,_hiLimit
 31845  00068A  C1CE  F1D0         	movff	_loLimit+1,_hiLimit+1
 31846  00068E                     i2l3106:
 31847                           
 31848                           ; BSR set to: 1
 31849                           ;monitor.c: 444:         pe = pLow;
 31850  00068E  C24E  F0DA         	movff	_pLow,_pe
 31851  000692  C24F  F0DB         	movff	_pLow+1,_pe+1
 31852                           
 31853                           ;monitor.c: 445:         pi = pHigh;
 31854  000696  C1D3  F1D5         	movff	_pHigh,_pi
 31855  00069A  C1D4  F1D6         	movff	_pHigh+1,_pi+1
 31856                           
 31857                           ;monitor.c: 446:         pmax = maxPressure;
 31858  00069E  C252  F0D8         	movff	_maxPressure,_pmax
 31859  0006A2  C253  F0D9         	movff	_maxPressure+1,_pmax+1
 31860                           
 31861                           ;monitor.c: 447:         pmin = minPressure;
 31862  0006A6  C0D6  F254         	movff	_minPressure,_pmin
 31863  0006AA  C0D7  F255         	movff	_minPressure+1,_pmin+1
 31864                           
 31865                           ; BSR set to: 1
 31866                           ;monitor.c: 449:         if (pmax< targetLow && enableAlarms) SetGasFailureAlarm();
 31867  0006AE  51E1               	movf	_targetLow& (0+255),w,b
 31868  0006B0  0100               	movlb	0	; () banked
 31869  0006B2  5DD8               	subwf	_pmax& (0+255),w,b
 31870  0006B4  51D9               	movf	(_pmax+1)& (0+255),w,b
 31871  0006B6  0A80               	xorlw	128
 31872  0006B8  6E5B               	movwf	??_MonitorPressureTask^0,c
 31873  0006BA  0101               	movlb	1	; () banked
 31874  0006BC  51E2               	movf	(_targetLow+1)& (0+255),w,b
 31875  0006BE  0A80               	xorlw	128
 31876  0006C0  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31877  0006C2  B0D8               	btfsc	status,0,c
 31878  0006C4  D005               	goto	i2l21363
 31879                           
 31880                           ; BSR set to: 1
 31881  0006C6  0100               	movlb	0	; () banked
 31882  0006C8  51F4               	movf	_enableAlarms& (0+255),w,b
 31883  0006CA  A4D8               	btfss	status,2,c
 31884                           
 31885                           ; BSR set to: 0
 31886  0006CC  EC88  F052         	call	_SetGasFailureAlarm	;wreg free
 31887  0006D0                     i2l21363:
 31888                           
 31889                           ;monitor.c: 455:         maxPressure = 0;
 31890  0006D0  0E00               	movlw	0
 31891  0006D2  0102               	movlb	2	; () banked
 31892  0006D4  6F53               	movwf	(_maxPressure+1)& (0+255),b
 31893  0006D6  0E00               	movlw	0
 31894  0006D8  6F52               	movwf	_maxPressure& (0+255),b
 31895                           
 31896                           ; BSR set to: 2
 31897                           ;monitor.c: 456:         minPressure = 40*5;
 31898  0006DA  0E00               	movlw	0
 31899  0006DC  0100               	movlb	0	; () banked
 31900  0006DE  6FD7               	movwf	(_minPressure+1)& (0+255),b
 31901  0006E0  0EC8               	movlw	200
 31902  0006E2  6FD6               	movwf	_minPressure& (0+255),b
 31903                           
 31904                           ; BSR set to: 0
 31905                           ;monitor.c: 457:         ttExt=0;
 31906  0006E4  0E00               	movlw	0
 31907  0006E6  0102               	movlb	2	; () banked
 31908  0006E8  6F65               	movwf	(_ttExt+1)& (0+255),b
 31909  0006EA  0E00               	movlw	0
 31910  0006EC  6F64               	movwf	_ttExt& (0+255),b
 31911  0006EE                     i2l21369:
 31912                           
 31913                           ; BSR set to: 2
 31914                           ;monitor.c: 461:     if (tt>30000) {
 31915  0006EE  0100               	movlb	0	; () banked
 31916  0006F0  BFCB               	btfsc	(_tt+3)& (0+255),7,b
 31917  0006F2  D00F               	goto	i2l21377
 31918  0006F4  51CB               	movf	(_tt+3)& (0+255),w,b
 31919  0006F6  11CA               	iorwf	(_tt+2)& (0+255),w,b
 31920  0006F8  E106               	bnz	i2u2054_40
 31921  0006FA  0E31               	movlw	49
 31922  0006FC  5DC8               	subwf	_tt& (0+255),w,b
 31923  0006FE  0E75               	movlw	117
 31924  000700  59C9               	subwfb	(_tt+1)& (0+255),w,b
 31925  000702  A0D8               	btfss	status,0,c
 31926  000704  D006               	goto	i2l21377
 31927  000706                     i2u2054_40:
 31928                           
 31929                           ; BSR set to: 0
 31930                           ;monitor.c: 463:         ClearVars() ;
 31931  000706  EC98  F021         	call	i2_ClearVars	;wreg free
 31932                           
 31933                           ; BSR set to: 2
 31934                           ;monitor.c: 464:         measPe = 0;
 31935  00070A  0E00               	movlw	0
 31936  00070C  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 31937                           
 31938                           ; BSR set to: 2
 31939                           ;monitor.c: 465:         measPi = 0;
 31940  00070E  0E00               	movlw	0
 31941  000710  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 31942  000712                     i2l21377:
 31943                           
 31944                           ;monitor.c: 469:     if (prFast>alarmMaxPressure) {
 31945  000712  0102               	movlb	2	; () banked
 31946  000714  513E               	movf	_prFast& (0+255),w,b
 31947  000716  5D50               	subwf	_alarmMaxPressure& (0+255),w,b
 31948  000718  5151               	movf	(_alarmMaxPressure+1)& (0+255),w,b
 31949  00071A  0A80               	xorlw	128
 31950  00071C  6E5B               	movwf	??_MonitorPressureTask^0,c
 31951  00071E  513F               	movf	(_prFast+1)& (0+255),w,b
 31952  000720  0A80               	xorlw	128
 31953  000722  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31954  000724  B0D8               	btfsc	status,0,c
 31955  000726  D004               	goto	i2l21381
 31956                           
 31957                           ; BSR set to: 2
 31958                           ;monitor.c: 470:         alarmMaxPressure = prFast;
 31959  000728  C23E  F250         	movff	_prFast,_alarmMaxPressure
 31960  00072C  C23F  F251         	movff	_prFast+1,_alarmMaxPressure+1
 31961  000730                     i2l21381:
 31962                           
 31963                           ; BSR set to: 2
 31964                           ;monitor.c: 475:     if (pr>maxPressure) {
 31965  000730  0100               	movlb	0	; () banked
 31966  000732  51C1               	movf	MonitorPressureTask@pr& (0+255),w,b
 31967  000734  0102               	movlb	2	; () banked
 31968  000736  5D52               	subwf	_maxPressure& (0+255),w,b
 31969  000738  5153               	movf	(_maxPressure+1)& (0+255),w,b
 31970  00073A  0A80               	xorlw	128
 31971  00073C  6E5B               	movwf	??_MonitorPressureTask^0,c
 31972  00073E  0100               	movlb	0	; () banked
 31973  000740  51C2               	movf	(MonitorPressureTask@pr+1)& (0+255),w,b
 31974  000742  0A80               	xorlw	128
 31975  000744  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31976  000746  B0D8               	btfsc	status,0,c
 31977  000748  D006               	goto	i2l21385
 31978                           
 31979                           ; BSR set to: 0
 31980                           ;monitor.c: 476:         maxPressure = pr;
 31981  00074A  0060  F304  F252   	movff	MonitorPressureTask@pr,_maxPressure
 31982  000750  0060  F308  F253   	movff	MonitorPressureTask@pr+1,_maxPressure+1
 31983  000756                     i2l21385:
 31984                           
 31985                           ; BSR set to: 0
 31986                           ;monitor.c: 479:     if (pr<minPressure) {
 31987  000756  51D6               	movf	_minPressure& (0+255),w,b
 31988  000758  5DC1               	subwf	MonitorPressureTask@pr& (0+255),w,b
 31989  00075A  51C2               	movf	(MonitorPressureTask@pr+1)& (0+255),w,b
 31990  00075C  0A80               	xorlw	128
 31991  00075E  6E5B               	movwf	??_MonitorPressureTask^0,c
 31992  000760  51D7               	movf	(_minPressure+1)& (0+255),w,b
 31993  000762  0A80               	xorlw	128
 31994  000764  585B               	subwfb	??_MonitorPressureTask^0,w,c
 31995  000766  B0D8               	btfsc	status,0,c
 31996  000768  D006               	goto	i2l21389
 31997                           
 31998                           ; BSR set to: 0
 31999                           ;monitor.c: 480:         minPressure = pr;
 32000  00076A  0060  F304  F0D6   	movff	MonitorPressureTask@pr,_minPressure
 32001  000770  0060  F308  F0D7   	movff	MonitorPressureTask@pr+1,_minPressure+1
 32002  000776                     i2l21389:
 32003                           
 32004                           ; BSR set to: 0
 32005                           ;monitor.c: 485:     if (prSlow>hiLimit) {
 32006  000776  51CE               	movf	_prSlow& (0+255),w,b
 32007  000778  0101               	movlb	1	; () banked
 32008  00077A  5DCF               	subwf	_hiLimit& (0+255),w,b
 32009  00077C  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32010  00077E  0A80               	xorlw	128
 32011  000780  6E5B               	movwf	??_MonitorPressureTask^0,c
 32012  000782  0100               	movlb	0	; () banked
 32013  000784  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32014  000786  0A80               	xorlw	128
 32015  000788  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32016  00078A  B0D8               	btfsc	status,0,c
 32017  00078C  D016               	goto	i2l21395
 32018                           
 32019                           ; BSR set to: 0
 32020                           ;monitor.c: 488:         pHighAcc += prSlow;
 32021  00078E  0060  F338  F05B   	movff	_prSlow,??_MonitorPressureTask
 32022  000794  0060  F33C  F05C   	movff	_prSlow+1,??_MonitorPressureTask+1
 32023  00079A  0E00               	movlw	0
 32024  00079C  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32025  00079E  0EFF               	movlw	255
 32026  0007A0  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32027  0007A2  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32028  0007A4  505B               	movf	??_MonitorPressureTask^0,w,c
 32029  0007A6  0102               	movlb	2	; () banked
 32030  0007A8  271E               	addwf	_pHighAcc& (0+255),f,b
 32031  0007AA  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32032  0007AC  231F               	addwfc	(_pHighAcc+1)& (0+255),f,b
 32033  0007AE  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32034  0007B0  2320               	addwfc	(_pHighAcc+2)& (0+255),f,b
 32035  0007B2  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32036  0007B4  2321               	addwfc	(_pHighAcc+3)& (0+255),f,b
 32037                           
 32038                           ; BSR set to: 2
 32039                           ;monitor.c: 489:         numHigh++;
 32040  0007B6  4B4C               	infsnz	_numHigh& (0+255),f,b
 32041  0007B8  2B4D               	incf	(_numHigh+1)& (0+255),f,b
 32042  0007BA                     i2l21395:
 32043                           
 32044                           ;monitor.c: 491:     if (prSlow<loLimit) {
 32045  0007BA  0101               	movlb	1	; () banked
 32046  0007BC  51CD               	movf	_loLimit& (0+255),w,b
 32047  0007BE  0100               	movlb	0	; () banked
 32048  0007C0  5DCE               	subwf	_prSlow& (0+255),w,b
 32049  0007C2  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32050  0007C4  0A80               	xorlw	128
 32051  0007C6  6E5B               	movwf	??_MonitorPressureTask^0,c
 32052  0007C8  0101               	movlb	1	; () banked
 32053  0007CA  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32054  0007CC  0A80               	xorlw	128
 32055  0007CE  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32056  0007D0  B0D8               	btfsc	status,0,c
 32057  0007D2  D016               	goto	i2l21401
 32058                           
 32059                           ; BSR set to: 1
 32060                           ;monitor.c: 494:         pLowAcc += prSlow;
 32061  0007D4  0060  F338  F05B   	movff	_prSlow,??_MonitorPressureTask
 32062  0007DA  0060  F33C  F05C   	movff	_prSlow+1,??_MonitorPressureTask+1
 32063  0007E0  0E00               	movlw	0
 32064  0007E2  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32065  0007E4  0EFF               	movlw	255
 32066  0007E6  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32067  0007E8  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32068  0007EA  505B               	movf	??_MonitorPressureTask^0,w,c
 32069  0007EC  0102               	movlb	2	; () banked
 32070  0007EE  271A               	addwf	_pLowAcc& (0+255),f,b
 32071  0007F0  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32072  0007F2  231B               	addwfc	(_pLowAcc+1)& (0+255),f,b
 32073  0007F4  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32074  0007F6  231C               	addwfc	(_pLowAcc+2)& (0+255),f,b
 32075  0007F8  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32076  0007FA  231D               	addwfc	(_pLowAcc+3)& (0+255),f,b
 32077                           
 32078                           ; BSR set to: 2
 32079                           ;monitor.c: 495:         numLow++;
 32080  0007FC  4B4A               	infsnz	_numLow& (0+255),f,b
 32081  0007FE  2B4B               	incf	(_numLow+1)& (0+255),f,b
 32082  000800                     i2l21401:
 32083                           
 32084                           ;monitor.c: 499:     int16_t halfLimit;;monitor.c: 500:     halfLimit = (hiLimit+loLimit
      +                          )/2;
 32085  000800  0101               	movlb	1	; () banked
 32086  000802  51CD               	movf	_loLimit& (0+255),w,b
 32087  000804  25CF               	addwf	_hiLimit& (0+255),w,b
 32088  000806  6E07               	movwf	i2___awdiv@dividend^0,c
 32089  000808  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32090  00080A  21D0               	addwfc	(_hiLimit+1)& (0+255),w,b
 32091  00080C  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32092  00080E  0E00               	movlw	0
 32093  000810  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32094  000812  0E02               	movlw	2
 32095  000814  6E09               	movwf	i2___awdiv@divisor^0,c
 32096  000816  ECE1  F03F         	call	i2___awdiv	;wreg free
 32097  00081A  0060  F01C  F09F   	movff	?i2___awdiv,MonitorPressureTask@halfLimit
 32098  000820  0060  F020  F0A0   	movff	?i2___awdiv+1,MonitorPressureTask@halfLimit+1
 32099                           
 32100                           ;monitor.c: 503:     if ( state == 0) {
 32101  000826  0101               	movlb	1	; () banked
 32102  000828  51DF               	movf	_state& (0+255),w,b
 32103  00082A  11E0               	iorwf	(_state+1)& (0+255),w,b
 32104  00082C  A4D8               	btfss	status,2,c
 32105  00082E  D02D               	goto	i2l21413
 32106                           
 32107                           ; BSR set to: 1
 32108                           ;monitor.c: 504:         if (pi> (targetHigh+targetLow)/2) {
 32109  000830  51E1               	movf	_targetLow& (0+255),w,b
 32110  000832  25E3               	addwf	_targetHigh& (0+255),w,b
 32111  000834  6E07               	movwf	i2___awdiv@dividend^0,c
 32112  000836  51E2               	movf	(_targetLow+1)& (0+255),w,b
 32113  000838  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32114  00083A  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32115  00083C  0E00               	movlw	0
 32116  00083E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32117  000840  0E02               	movlw	2
 32118  000842  6E09               	movwf	i2___awdiv@divisor^0,c
 32119  000844  ECE1  F03F         	call	i2___awdiv	;wreg free
 32120  000848  0101               	movlb	1	; () banked
 32121  00084A  51D5               	movf	_pi& (0+255),w,b
 32122  00084C  5C07               	subwf	?i2___awdiv^0,w,c
 32123  00084E  5008               	movf	(?i2___awdiv+1)^0,w,c
 32124  000850  0A80               	xorlw	128
 32125  000852  6E5B               	movwf	??_MonitorPressureTask^0,c
 32126  000854  51D6               	movf	(_pi+1)& (0+255),w,b
 32127  000856  0A80               	xorlw	128
 32128  000858  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32129  00085A  B0D8               	btfsc	status,0,c
 32130  00085C  D016               	goto	i2l21413
 32131                           
 32132                           ; BSR set to: 1
 32133                           ;monitor.c: 505:             if (prSlow < targetLow) next = 2; else next = 4;
 32134  00085E  51E1               	movf	_targetLow& (0+255),w,b
 32135  000860  0100               	movlb	0	; () banked
 32136  000862  5DCE               	subwf	_prSlow& (0+255),w,b
 32137  000864  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32138  000866  0A80               	xorlw	128
 32139  000868  6E5B               	movwf	??_MonitorPressureTask^0,c
 32140  00086A  0101               	movlb	1	; () banked
 32141  00086C  51E2               	movf	(_targetLow+1)& (0+255),w,b
 32142  00086E  0A80               	xorlw	128
 32143  000870  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32144  000872  B0D8               	btfsc	status,0,c
 32145  000874  D005               	goto	i2l21411
 32146                           
 32147                           ; BSR set to: 1
 32148  000876  0E00               	movlw	0
 32149  000878  0100               	movlb	0	; () banked
 32150  00087A  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 32151  00087C  0E02               	movlw	2
 32152  00087E  D004               	goto	L13
 32153  000880                     i2l21411:
 32154                           
 32155                           ; BSR set to: 1
 32156  000880  0E00               	movlw	0
 32157  000882  0100               	movlb	0	; () banked
 32158  000884  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 32159  000886  0E04               	movlw	4
 32160  000888                     L13:
 32161  000888  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 32162  00088A                     i2l21413:
 32163                           
 32164                           ;monitor.c: 512:     if (prSlow<loLimit && prFast>= loLimit) {
 32165  00088A  0101               	movlb	1	; () banked
 32166  00088C  51CD               	movf	_loLimit& (0+255),w,b
 32167  00088E  0100               	movlb	0	; () banked
 32168  000890  5DCE               	subwf	_prSlow& (0+255),w,b
 32169  000892  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32170  000894  0A80               	xorlw	128
 32171  000896  6E5B               	movwf	??_MonitorPressureTask^0,c
 32172  000898  0101               	movlb	1	; () banked
 32173  00089A  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32174  00089C  0A80               	xorlw	128
 32175  00089E  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32176  0008A0  B0D8               	btfsc	status,0,c
 32177  0008A2  D14E               	goto	i2l21483
 32178                           
 32179                           ; BSR set to: 1
 32180  0008A4  51CD               	movf	_loLimit& (0+255),w,b
 32181  0008A6  0102               	movlb	2	; () banked
 32182  0008A8  5D3E               	subwf	_prFast& (0+255),w,b
 32183  0008AA  513F               	movf	(_prFast+1)& (0+255),w,b
 32184  0008AC  0A80               	xorlw	128
 32185  0008AE  6E5B               	movwf	??_MonitorPressureTask^0,c
 32186  0008B0  0101               	movlb	1	; () banked
 32187  0008B2  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32188  0008B4  0A80               	xorlw	128
 32189  0008B6  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32190  0008B8  A0D8               	btfss	status,0,c
 32191  0008BA  D142               	goto	i2l21483
 32192                           
 32193                           ; BSR set to: 1
 32194                           ;monitor.c: 515:         if (tt>400) {
 32195  0008BC  0100               	movlb	0	; () banked
 32196  0008BE  BFCB               	btfsc	(_tt+3)& (0+255),7,b
 32197  0008C0  D0F5               	goto	i2l21459
 32198  0008C2  51CB               	movf	(_tt+3)& (0+255),w,b
 32199  0008C4  11CA               	iorwf	(_tt+2)& (0+255),w,b
 32200  0008C6  E106               	bnz	i2u2065_40
 32201  0008C8  0E91               	movlw	145
 32202  0008CA  5DC8               	subwf	_tt& (0+255),w,b
 32203  0008CC  0E01               	movlw	1
 32204  0008CE  59C9               	subwfb	(_tt+1)& (0+255),w,b
 32205  0008D0  A0D8               	btfss	status,0,c
 32206  0008D2  D0EC               	goto	i2l21459
 32207  0008D4                     i2u2065_40:
 32208                           
 32209                           ; BSR set to: 0
 32210                           ;monitor.c: 516:             bp = tt;
 32211  0008D4  C0C8  F2BA         	movff	_tt,_bp
 32212  0008D8  C0C9  F2BB         	movff	_tt+1,_bp+1
 32213                           
 32214                           ; BSR set to: 0
 32215                           ;monitor.c: 517:             if (tt3>tt2) ti = tt3-tt2;
 32216  0008DC  0101               	movlb	1	; () banked
 32217  0008DE  51DB               	movf	_tt3& (0+255),w,b
 32218  0008E0  0100               	movlb	0	; () banked
 32219  0008E2  5DDE               	subwf	_tt2& (0+255),w,b
 32220  0008E4  51DF               	movf	(_tt2+1)& (0+255),w,b
 32221  0008E6  0A80               	xorlw	128
 32222  0008E8  6E5B               	movwf	??_MonitorPressureTask^0,c
 32223  0008EA  0101               	movlb	1	; () banked
 32224  0008EC  51DC               	movf	(_tt3+1)& (0+255),w,b
 32225  0008EE  0A80               	xorlw	128
 32226  0008F0  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32227  0008F2  B0D8               	btfsc	status,0,c
 32228  0008F4  D00C               	goto	i2l3120
 32229                           
 32230                           ; BSR set to: 1
 32231  0008F6  0100               	movlb	0	; () banked
 32232  0008F8  51DE               	movf	_tt2& (0+255),w,b
 32233  0008FA  0101               	movlb	1	; () banked
 32234  0008FC  5DDB               	subwf	_tt3& (0+255),w,b
 32235  0008FE  0102               	movlb	2	; () banked
 32236  000900  6F5A               	movwf	_ti& (0+255),b
 32237  000902  0100               	movlb	0	; () banked
 32238  000904  51DF               	movf	(_tt2+1)& (0+255),w,b
 32239  000906  0101               	movlb	1	; () banked
 32240  000908  59DC               	subwfb	(_tt3+1)& (0+255),w,b
 32241  00090A  0102               	movlb	2	; () banked
 32242  00090C  6F5B               	movwf	(_ti+1)& (0+255),b
 32243  00090E                     i2l3120:
 32244                           
 32245                           ;monitor.c: 519:             if (tt>tt4) te = tt-tt4;
 32246  00090E  0E00               	movlw	0
 32247  000910  0100               	movlb	0	; () banked
 32248  000912  BFDD               	btfsc	(_tt4+1)& (0+255),7,b
 32249  000914  0EFF               	movlw	255
 32250  000916  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32251  000918  0A80               	xorlw	128
 32252  00091A  6E5B               	movwf	??_MonitorPressureTask^0,c
 32253  00091C  51C8               	movf	_tt& (0+255),w,b
 32254  00091E  5DDC               	subwf	_tt4& (0+255),w,b
 32255  000920  51C9               	movf	(_tt+1)& (0+255),w,b
 32256  000922  59DD               	subwfb	(_tt4+1)& (0+255),w,b
 32257  000924  51CA               	movf	(_tt+2)& (0+255),w,b
 32258  000926  585C               	subwfb	(??_MonitorPressureTask+1)^0,w,c
 32259  000928  51CB               	movf	(_tt+3)& (0+255),w,b
 32260  00092A  0A80               	xorlw	128
 32261  00092C  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32262  00092E  B0D8               	btfsc	status,0,c
 32263  000930  D009               	goto	i2l3121
 32264                           
 32265                           ; BSR set to: 0
 32266  000932  51DC               	movf	_tt4& (0+255),w,b
 32267  000934  5DC8               	subwf	_tt& (0+255),w,b
 32268  000936  0102               	movlb	2	; () banked
 32269  000938  6F58               	movwf	_te& (0+255),b
 32270  00093A  0100               	movlb	0	; () banked
 32271  00093C  51DD               	movf	(_tt4+1)& (0+255),w,b
 32272  00093E  59C9               	subwfb	(_tt+1)& (0+255),w,b
 32273  000940  0102               	movlb	2	; () banked
 32274  000942  6F59               	movwf	(_te+1)& (0+255),b
 32275  000944                     i2l3121:
 32276                           
 32277                           ;monitor.c: 521:             if (bp!=0) bpm = 60000/(bp*2);
 32278  000944  0102               	movlb	2	; () banked
 32279  000946  51BA               	movf	_bp& (0+255),w,b
 32280  000948  11BB               	iorwf	(_bp+1)& (0+255),w,b
 32281  00094A  B4D8               	btfsc	status,2,c
 32282  00094C  D024               	goto	i2l21429
 32283                           
 32284                           ; BSR set to: 2
 32285  00094E  0E60               	movlw	96
 32286  000950  6E0D               	movwf	i2___aldiv@dividend^0,c
 32287  000952  0EEA               	movlw	234
 32288  000954  6E0E               	movwf	(i2___aldiv@dividend+1)^0,c
 32289  000956  0E00               	movlw	0
 32290  000958  6E0F               	movwf	(i2___aldiv@dividend+2)^0,c
 32291  00095A  0E00               	movlw	0
 32292  00095C  6E10               	movwf	(i2___aldiv@dividend+3)^0,c
 32293  00095E  0060  FAE8  F05B   	movff	_bp,??_MonitorPressureTask
 32294  000964  0060  FAEC  F05C   	movff	_bp+1,??_MonitorPressureTask+1
 32295  00096A  90D8               	bcf	status,0,c
 32296  00096C  365B               	rlcf	??_MonitorPressureTask^0,f,c
 32297  00096E  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 32298  000970  0060  F16C  F011   	movff	??_MonitorPressureTask,i2___aldiv@divisor
 32299  000976  0060  F170  F012   	movff	??_MonitorPressureTask+1,i2___aldiv@divisor+1
 32300  00097C  0E00               	movlw	0
 32301  00097E  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32302  000980  0EFF               	movlw	-1
 32303  000982  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32304  000984  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32305  000986  EC1E  F036         	call	i2___aldiv	;wreg free
 32306  00098A  0060  F034  F256   	movff	?i2___aldiv,_bpm
 32307  000990  0060  F038  F257   	movff	?i2___aldiv+1,_bpm+1
 32308  000996                     i2l21429:
 32309                           
 32310                           ;monitor.c: 522:             if (numHigh>0) {
 32311  000996  0102               	movlb	2	; () banked
 32312  000998  BF4D               	btfsc	(_numHigh+1)& (0+255),7,b
 32313  00099A  D031               	goto	i2l21437
 32314  00099C  514D               	movf	(_numHigh+1)& (0+255),w,b
 32315  00099E  E103               	bnz	i2u2069_40
 32316  0009A0  054C               	decf	_numHigh& (0+255),w,b
 32317  0009A2  A0D8               	btfss	status,0,c
 32318  0009A4  D02C               	goto	i2l21437
 32319  0009A6                     i2u2069_40:
 32320                           
 32321                           ; BSR set to: 2
 32322                           ;monitor.c: 523:                 pHigh = pHighAcc / numHigh;
 32323  0009A6  0060  F878  F00D   	movff	_pHighAcc,i2___aldiv@dividend
 32324  0009AC  0060  F87C  F00E   	movff	_pHighAcc+1,i2___aldiv@dividend+1
 32325  0009B2  0060  F880  F00F   	movff	_pHighAcc+2,i2___aldiv@dividend+2
 32326  0009B8  0060  F884  F010   	movff	_pHighAcc+3,i2___aldiv@dividend+3
 32327  0009BE  0060  F930  F011   	movff	_numHigh,i2___aldiv@divisor
 32328  0009C4  0060  F934  F012   	movff	_numHigh+1,i2___aldiv@divisor+1
 32329  0009CA  0E00               	movlw	0
 32330  0009CC  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32331  0009CE  0EFF               	movlw	-1
 32332  0009D0  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32333  0009D2  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32334  0009D4  EC1E  F036         	call	i2___aldiv	;wreg free
 32335  0009D8  0060  F034  F1D3   	movff	?i2___aldiv,_pHigh
 32336  0009DE  0060  F038  F1D4   	movff	?i2___aldiv+1,_pHigh+1
 32337                           
 32338                           ;monitor.c: 524:                 pHighAcc = 0;
 32339  0009E4  0E00               	movlw	0
 32340  0009E6  0102               	movlb	2	; () banked
 32341  0009E8  6F1E               	movwf	_pHighAcc& (0+255),b
 32342  0009EA  0E00               	movlw	0
 32343  0009EC  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 32344  0009EE  0E00               	movlw	0
 32345  0009F0  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 32346  0009F2  0E00               	movlw	0
 32347  0009F4  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 32348                           
 32349                           ; BSR set to: 2
 32350                           ;monitor.c: 525:                 numHigh = 0;
 32351  0009F6  0E00               	movlw	0
 32352  0009F8  6F4D               	movwf	(_numHigh+1)& (0+255),b
 32353  0009FA  0E00               	movlw	0
 32354  0009FC  6F4C               	movwf	_numHigh& (0+255),b
 32355  0009FE                     i2l21437:
 32356                           
 32357                           ; BSR set to: 2
 32358                           ;monitor.c: 527:             if (numLow>0) {
 32359  0009FE  BF4B               	btfsc	(_numLow+1)& (0+255),7,b
 32360  000A00  D031               	goto	i2l21445
 32361  000A02  514B               	movf	(_numLow+1)& (0+255),w,b
 32362  000A04  E103               	bnz	i2u2070_40
 32363  000A06  054A               	decf	_numLow& (0+255),w,b
 32364  000A08  A0D8               	btfss	status,0,c
 32365  000A0A  D02C               	goto	i2l21445
 32366  000A0C                     i2u2070_40:
 32367                           
 32368                           ; BSR set to: 2
 32369                           ;monitor.c: 528:                 pLow = pLowAcc / numLow;
 32370  000A0C  0060  F868  F00D   	movff	_pLowAcc,i2___aldiv@dividend
 32371  000A12  0060  F86C  F00E   	movff	_pLowAcc+1,i2___aldiv@dividend+1
 32372  000A18  0060  F870  F00F   	movff	_pLowAcc+2,i2___aldiv@dividend+2
 32373  000A1E  0060  F874  F010   	movff	_pLowAcc+3,i2___aldiv@dividend+3
 32374  000A24  0060  F928  F011   	movff	_numLow,i2___aldiv@divisor
 32375  000A2A  0060  F92C  F012   	movff	_numLow+1,i2___aldiv@divisor+1
 32376  000A30  0E00               	movlw	0
 32377  000A32  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32378  000A34  0EFF               	movlw	-1
 32379  000A36  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32380  000A38  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32381  000A3A  EC1E  F036         	call	i2___aldiv	;wreg free
 32382  000A3E  0060  F034  F24E   	movff	?i2___aldiv,_pLow
 32383  000A44  0060  F038  F24F   	movff	?i2___aldiv+1,_pLow+1
 32384                           
 32385                           ;monitor.c: 529:                 numLow = 0;
 32386  000A4A  0E00               	movlw	0
 32387  000A4C  0102               	movlb	2	; () banked
 32388  000A4E  6F4B               	movwf	(_numLow+1)& (0+255),b
 32389  000A50  0E00               	movlw	0
 32390  000A52  6F4A               	movwf	_numLow& (0+255),b
 32391                           
 32392                           ; BSR set to: 2
 32393                           ;monitor.c: 530:                 pLowAcc = 0;
 32394  000A54  0E00               	movlw	0
 32395  000A56  6F1A               	movwf	_pLowAcc& (0+255),b
 32396  000A58  0E00               	movlw	0
 32397  000A5A  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 32398  000A5C  0E00               	movlw	0
 32399  000A5E  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 32400  000A60  0E00               	movlw	0
 32401  000A62  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 32402  000A64                     i2l21445:
 32403                           
 32404                           ; BSR set to: 2
 32405                           ;monitor.c: 533:             tt1 = tt;
 32406  000A64  C0C8  F266         	movff	_tt,_tt1
 32407  000A68  C0C9  F267         	movff	_tt+1,_tt1+1
 32408                           
 32409                           ; BSR set to: 2
 32410                           ;monitor.c: 546:             tt=0;
 32411  000A6C  0E00               	movlw	0
 32412  000A6E  0100               	movlb	0	; () banked
 32413  000A70  6FC8               	movwf	_tt& (0+255),b
 32414  000A72  0E00               	movlw	0
 32415  000A74  6FC9               	movwf	(_tt+1)& (0+255),b
 32416  000A76  0E00               	movlw	0
 32417  000A78  6FCA               	movwf	(_tt+2)& (0+255),b
 32418  000A7A  0E00               	movlw	0
 32419  000A7C  6FCB               	movwf	(_tt+3)& (0+255),b
 32420                           
 32421                           ; BSR set to: 0
 32422                           ;monitor.c: 548:             tt2=0;
 32423  000A7E  0E00               	movlw	0
 32424  000A80  6FDF               	movwf	(_tt2+1)& (0+255),b
 32425  000A82  0E00               	movlw	0
 32426  000A84  6FDE               	movwf	_tt2& (0+255),b
 32427                           
 32428                           ; BSR set to: 0
 32429                           ;monitor.c: 549:             tt3=0;
 32430  000A86  0E00               	movlw	0
 32431  000A88  0101               	movlb	1	; () banked
 32432  000A8A  6FDC               	movwf	(_tt3+1)& (0+255),b
 32433  000A8C  0E00               	movlw	0
 32434  000A8E  6FDB               	movwf	_tt3& (0+255),b
 32435                           
 32436                           ; BSR set to: 1
 32437                           ;monitor.c: 550:             tt4=0;
 32438  000A90  0E00               	movlw	0
 32439  000A92  0100               	movlb	0	; () banked
 32440  000A94  6FDD               	movwf	(_tt4+1)& (0+255),b
 32441  000A96  0E00               	movlw	0
 32442  000A98  6FDC               	movwf	_tt4& (0+255),b
 32443                           
 32444                           ; BSR set to: 0
 32445                           ;monitor.c: 551:             tt34=0;
 32446  000A9A  0E00               	movlw	0
 32447  000A9C  0102               	movlb	2	; () banked
 32448  000A9E  6F61               	movwf	(_tt34+1)& (0+255),b
 32449  000AA0  0E00               	movlw	0
 32450  000AA2  6F60               	movwf	_tt34& (0+255),b
 32451                           
 32452                           ; BSR set to: 2
 32453                           ;monitor.c: 553:             ttAlarm = 0;
 32454  000AA4  0E00               	movlw	0
 32455  000AA6  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
 32456  000AA8  0E00               	movlw	0
 32457  000AAA  6F5C               	movwf	_ttAlarm& (0+255),b
 32458  000AAC                     i2l21459:
 32459                           
 32460                           ;monitor.c: 555:         tt12 = tt;
 32461  000AAC  C0C8  F262         	movff	_tt,_tt12
 32462  000AB0  C0C9  F263         	movff	_tt+1,_tt12+1
 32463                           
 32464                           ;monitor.c: 557:         measPe=0;
 32465  000AB4  0E00               	movlw	0
 32466  000AB6  0102               	movlb	2	; () banked
 32467  000AB8  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 32468                           
 32469                           ; BSR set to: 2
 32470                           ;monitor.c: 558:         measPi=0;
 32471  000ABA  0E00               	movlw	0
 32472  000ABC  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 32473                           
 32474                           ; BSR set to: 2
 32475                           ;monitor.c: 559:         lrpe = rpe;
 32476  000ABE  C246  F0D4         	movff	_rpe,_lrpe
 32477  000AC2  C247  F0D5         	movff	_rpe+1,_lrpe+1
 32478                           
 32479                           ; BSR set to: 2
 32480                           ;monitor.c: 561:         if (enableAlarms) {
 32481  000AC6  0100               	movlb	0	; () banked
 32482  000AC8  51F4               	movf	_enableAlarms& (0+255),w,b
 32483  000ACA  B4D8               	btfsc	status,2,c
 32484  000ACC  D035               	goto	i2l21481
 32485                           
 32486                           ; BSR set to: 0
 32487                           ;monitor.c: 562:             if (lrpe>(targetLow+15)) SetEPAboveSetAlarm(); else ClearEP
      +                          AboveSetAlarm();
 32488  000ACE  0E0F               	movlw	15
 32489  000AD0  0101               	movlb	1	; () banked
 32490  000AD2  25E1               	addwf	_targetLow& (0+255),w,b
 32491  000AD4  6E5B               	movwf	??_MonitorPressureTask^0,c
 32492  000AD6  0E00               	movlw	0
 32493  000AD8  21E2               	addwfc	(_targetLow+1)& (0+255),w,b
 32494  000ADA  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32495  000ADC  0100               	movlb	0	; () banked
 32496  000ADE  51D4               	movf	_lrpe& (0+255),w,b
 32497  000AE0  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32498  000AE2  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32499  000AE4  0A80               	xorlw	128
 32500  000AE6  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32501  000AE8  51D5               	movf	(_lrpe+1)& (0+255),w,b
 32502  000AEA  0A80               	xorlw	128
 32503  000AEC  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32504  000AEE  B0D8               	btfsc	status,0,c
 32505  000AF0  D003               	goto	i2l21473
 32506                           
 32507                           ; BSR set to: 0
 32508  000AF2  EC58  F04F         	call	_SetEPAboveSetAlarm	;wreg free
 32509  000AF6  D002               	goto	i2l21475
 32510  000AF8                     i2l21473:
 32511                           
 32512                           ; BSR set to: 0
 32513  000AF8  EC21  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 32514  000AFC                     i2l21475:
 32515                           
 32516                           ; BSR set to: 0
 32517                           ;monitor.c: 563:             if (lrpe<(targetLow-15)) SetEPBelowSetAlarm(); else ClearEP
      +                          BelowSetAlarm();
 32518  000AFC  0EF1               	movlw	241
 32519  000AFE  6E5B               	movwf	??_MonitorPressureTask^0,c
 32520  000B00  0EFF               	movlw	255
 32521  000B02  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32522  000B04  0060  F784  F05D   	movff	_targetLow,??_MonitorPressureTask+2
 32523  000B0A  0060  F788  F05E   	movff	_targetLow+1,??_MonitorPressureTask+3
 32524  000B10  505B               	movf	??_MonitorPressureTask^0,w,c
 32525  000B12  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32526  000B14  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32527  000B16  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32528  000B18  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32529  000B1A  5DD4               	subwf	_lrpe& (0+255),w,b
 32530  000B1C  51D5               	movf	(_lrpe+1)& (0+255),w,b
 32531  000B1E  0A80               	xorlw	128
 32532  000B20  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32533  000B22  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32534  000B24  0A80               	xorlw	128
 32535  000B26  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32536  000B28  B0D8               	btfsc	status,0,c
 32537  000B2A  D003               	goto	i2l21479
 32538                           
 32539                           ; BSR set to: 0
 32540  000B2C  EC49  F04F         	call	_SetEPBelowSetAlarm	;wreg free
 32541  000B30  D007               	goto	i2l21483
 32542  000B32                     i2l21479:
 32543                           
 32544                           ; BSR set to: 0
 32545  000B32  EC16  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 32546  000B36  D004               	goto	i2l21483
 32547  000B38                     i2l21481:
 32548                           
 32549                           ; BSR set to: 0
 32550                           ;monitor.c: 565:             ClearEPAboveSetAlarm();
 32551  000B38  EC21  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 32552                           
 32553                           ;monitor.c: 566:             ClearEPBelowSetAlarm();
 32554  000B3C  EC16  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 32555  000B40                     i2l21483:
 32556                           
 32557                           ;monitor.c: 572:     if (tt1>500 && tt==(tt1*9)/10) volumeAcc=0;
 32558  000B40  0102               	movlb	2	; () banked
 32559  000B42  BF67               	btfsc	(_tt1+1)& (0+255),7,b
 32560  000B44  D040               	goto	i2l21489
 32561  000B46  0EF5               	movlw	245
 32562  000B48  5D66               	subwf	_tt1& (0+255),w,b
 32563  000B4A  0E01               	movlw	1
 32564  000B4C  5967               	subwfb	(_tt1+1)& (0+255),w,b
 32565  000B4E  A0D8               	btfss	status,0,c
 32566  000B50  D03A               	goto	i2l21489
 32567                           
 32568                           ; BSR set to: 2
 32569  000B52  0060  F998  F001   	movff	_tt1,i2___wmul@multiplier
 32570  000B58  0060  F99C  F002   	movff	_tt1+1,i2___wmul@multiplier+1
 32571  000B5E  0E00               	movlw	0
 32572  000B60  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 32573  000B62  0E09               	movlw	9
 32574  000B64  6E03               	movwf	i2___wmul@multiplicand^0,c
 32575  000B66  ECD3  F04C         	call	i2___wmul	;wreg free
 32576  000B6A  0060  F004  F007   	movff	?i2___wmul,i2___awdiv@dividend
 32577  000B70  0060  F008  F008   	movff	?i2___wmul+1,i2___awdiv@dividend+1
 32578  000B76  0E00               	movlw	0
 32579  000B78  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32580  000B7A  0E0A               	movlw	10
 32581  000B7C  6E09               	movwf	i2___awdiv@divisor^0,c
 32582  000B7E  ECE1  F03F         	call	i2___awdiv	;wreg free
 32583  000B82  0060  F01C  F05B   	movff	?i2___awdiv,??_MonitorPressureTask
 32584  000B88  0060  F020  F05C   	movff	?i2___awdiv+1,??_MonitorPressureTask+1
 32585  000B8E  0E00               	movlw	0
 32586  000B90  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32587  000B92  0EFF               	movlw	255
 32588  000B94  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32589  000B96  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32590  000B98  0100               	movlb	0	; () banked
 32591  000B9A  51C8               	movf	_tt& (0+255),w,b
 32592  000B9C  185B               	xorwf	??_MonitorPressureTask^0,w,c
 32593  000B9E  E113               	bnz	i2l21489
 32594  000BA0  51C9               	movf	(_tt+1)& (0+255),w,b
 32595  000BA2  185C               	xorwf	(??_MonitorPressureTask+1)^0,w,c
 32596  000BA4  E110               	bnz	i2l21489
 32597  000BA6  51CA               	movf	(_tt+2)& (0+255),w,b
 32598  000BA8  185D               	xorwf	(??_MonitorPressureTask+2)^0,w,c
 32599  000BAA  E10D               	bnz	i2l21489
 32600  000BAC  51CB               	movf	(_tt+3)& (0+255),w,b
 32601  000BAE  185E               	xorwf	(??_MonitorPressureTask+3)^0,w,c
 32602  000BB0  A4D8               	btfss	status,2,c
 32603  000BB2  D009               	goto	i2l21489
 32604                           
 32605                           ; BSR set to: 0
 32606  000BB4  0E00               	movlw	0
 32607  000BB6  0102               	movlb	2	; () banked
 32608  000BB8  6F22               	movwf	_volumeAcc& (0+255),b
 32609  000BBA  0E00               	movlw	0
 32610  000BBC  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 32611  000BBE  0E00               	movlw	0
 32612  000BC0  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 32613  000BC2  0E00               	movlw	0
 32614  000BC4  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 32615  000BC6                     i2l21489:
 32616                           
 32617                           ;monitor.c: 575:     static _Bool down = 0;;monitor.c: 578:     if (prSlow>hiLimit && pr
      +                          Fast<= hiLimit) {
 32618  000BC6  0100               	movlb	0	; () banked
 32619  000BC8  51CE               	movf	_prSlow& (0+255),w,b
 32620  000BCA  0101               	movlb	1	; () banked
 32621  000BCC  5DCF               	subwf	_hiLimit& (0+255),w,b
 32622  000BCE  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32623  000BD0  0A80               	xorlw	128
 32624  000BD2  6E5B               	movwf	??_MonitorPressureTask^0,c
 32625  000BD4  0100               	movlb	0	; () banked
 32626  000BD6  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32627  000BD8  0A80               	xorlw	128
 32628  000BDA  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32629  000BDC  B0D8               	btfsc	status,0,c
 32630  000BDE  D0FD               	goto	i2l21541
 32631                           
 32632                           ; BSR set to: 0
 32633  000BE0  0102               	movlb	2	; () banked
 32634  000BE2  513E               	movf	_prFast& (0+255),w,b
 32635  000BE4  0101               	movlb	1	; () banked
 32636  000BE6  5DCF               	subwf	_hiLimit& (0+255),w,b
 32637  000BE8  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32638  000BEA  0A80               	xorlw	128
 32639  000BEC  6E5B               	movwf	??_MonitorPressureTask^0,c
 32640  000BEE  0102               	movlb	2	; () banked
 32641  000BF0  513F               	movf	(_prFast+1)& (0+255),w,b
 32642  000BF2  0A80               	xorlw	128
 32643  000BF4  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32644  000BF6  A0D8               	btfss	status,0,c
 32645  000BF8  D0F0               	goto	i2l21541
 32646                           
 32647                           ; BSR set to: 2
 32648                           ;monitor.c: 580:         if (!down) {
 32649  000BFA  519C               	movf	MonitorPressureTask@down& (0+255),w,b
 32650  000BFC  A4D8               	btfss	status,2,c
 32651  000BFE  D02A               	goto	i2l21503
 32652                           
 32653                           ; BSR set to: 2
 32654                           ;monitor.c: 582:             tt3 = tt;
 32655  000C00  C0C8  F1DB         	movff	_tt,_tt3
 32656  000C04  C0C9  F1DC         	movff	_tt+1,_tt3+1
 32657                           
 32658                           ; BSR set to: 2
 32659                           ;monitor.c: 583:             down = 1;
 32660  000C08  0E01               	movlw	1
 32661  000C0A  6F9C               	movwf	MonitorPressureTask@down& (0+255),b
 32662                           
 32663                           ; BSR set to: 2
 32664                           ;monitor.c: 586:             volume = (volumeAcc)/55;
 32665  000C0C  0060  F888  F001   	movff	_volumeAcc,___lldiv@dividend
 32666  000C12  0060  F88C  F002   	movff	_volumeAcc+1,___lldiv@dividend+1
 32667  000C18  0060  F890  F003   	movff	_volumeAcc+2,___lldiv@dividend+2
 32668  000C1E  0060  F894  F004   	movff	_volumeAcc+3,___lldiv@dividend+3
 32669  000C24  0E37               	movlw	55
 32670  000C26  6E05               	movwf	___lldiv@divisor^0,c
 32671  000C28  0E00               	movlw	0
 32672  000C2A  6E06               	movwf	(___lldiv@divisor+1)^0,c
 32673  000C2C  0E00               	movlw	0
 32674  000C2E  6E07               	movwf	(___lldiv@divisor+2)^0,c
 32675  000C30  0E00               	movlw	0
 32676  000C32  6E08               	movwf	(___lldiv@divisor+3)^0,c
 32677  000C34  EC58  F03F         	call	___lldiv	;wreg free
 32678  000C38  0060  F004  F1DD   	movff	?___lldiv,_volume
 32679  000C3E  0060  F008  F1DE   	movff	?___lldiv+1,_volume+1
 32680                           
 32681                           ; BSR set to: 2
 32682                           ;monitor.c: 587:             volumeAcc = 0;
 32683  000C44  0E00               	movlw	0
 32684  000C46  6F22               	movwf	_volumeAcc& (0+255),b
 32685  000C48  0E00               	movlw	0
 32686  000C4A  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 32687  000C4C  0E00               	movlw	0
 32688  000C4E  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 32689  000C50  0E00               	movlw	0
 32690  000C52  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 32691  000C54                     i2l21503:
 32692                           
 32693                           ; BSR set to: 2
 32694                           ;monitor.c: 590:         tt34 = tt;
 32695  000C54  C0C8  F260         	movff	_tt,_tt34
 32696  000C58  C0C9  F261         	movff	_tt+1,_tt34+1
 32697                           
 32698                           ; BSR set to: 2
 32699                           ;monitor.c: 592:         measPe=0;
 32700  000C5C  0E00               	movlw	0
 32701  000C5E  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 32702                           
 32703                           ; BSR set to: 2
 32704                           ;monitor.c: 593:         measPi=0;
 32705  000C60  0E00               	movlw	0
 32706  000C62  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 32707                           
 32708                           ; BSR set to: 2
 32709                           ;monitor.c: 594:         lrpi = rpi;
 32710  000C64  C248  F1D1         	movff	_rpi,_lrpi
 32711  000C68  C249  F1D2         	movff	_rpi+1,_lrpi+1
 32712                           
 32713                           ; BSR set to: 2
 32714                           ;monitor.c: 596:         if (enableAlarms && !volumeControl) {
 32715  000C6C  0100               	movlb	0	; () banked
 32716  000C6E  51F4               	movf	_enableAlarms& (0+255),w,b
 32717  000C70  B4D8               	btfsc	status,2,c
 32718  000C72  D0AE               	goto	i2l21539
 32719                           
 32720                           ; BSR set to: 0
 32721  000C74  0102               	movlb	2	; () banked
 32722  000C76  51A1               	movf	_volumeControl& (0+255),w,b
 32723  000C78  A4D8               	btfss	status,2,c
 32724  000C7A  D0AA               	goto	i2l21539
 32725                           
 32726                           ; BSR set to: 2
 32727                           ;monitor.c: 599:             if (pHigh>(targetHigh+20) && lrpi>(targetHigh+20) ) SetIPAb
      +                          oveSetAlarm();
 32728  000C7C  0E14               	movlw	20
 32729  000C7E  0101               	movlb	1	; () banked
 32730  000C80  25E3               	addwf	_targetHigh& (0+255),w,b
 32731  000C82  6E5B               	movwf	??_MonitorPressureTask^0,c
 32732  000C84  0E00               	movlw	0
 32733  000C86  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32734  000C88  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32735  000C8A  51D3               	movf	_pHigh& (0+255),w,b
 32736  000C8C  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32737  000C8E  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32738  000C90  0A80               	xorlw	128
 32739  000C92  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32740  000C94  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32741  000C96  0A80               	xorlw	128
 32742  000C98  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32743  000C9A  B0D8               	btfsc	status,0,c
 32744  000C9C  D011               	goto	i2l21521
 32745                           
 32746                           ; BSR set to: 1
 32747  000C9E  0E14               	movlw	20
 32748  000CA0  25E3               	addwf	_targetHigh& (0+255),w,b
 32749  000CA2  6E5B               	movwf	??_MonitorPressureTask^0,c
 32750  000CA4  0E00               	movlw	0
 32751  000CA6  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32752  000CA8  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32753  000CAA  51D1               	movf	_lrpi& (0+255),w,b
 32754  000CAC  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32755  000CAE  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32756  000CB0  0A80               	xorlw	128
 32757  000CB2  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32758  000CB4  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32759  000CB6  0A80               	xorlw	128
 32760  000CB8  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32761  000CBA  A0D8               	btfss	status,0,c
 32762                           
 32763                           ; BSR set to: 1
 32764  000CBC  ECFB  F04E         	call	_SetIPAboveSetAlarm	;wreg free
 32765  000CC0                     i2l21521:
 32766                           
 32767                           ;monitor.c: 600:             if (pHigh<(targetHigh+20) || lrpi<(targetHigh+20) ) ClearIP
      +                          AboveSetAlarm();
 32768  000CC0  0E14               	movlw	20
 32769  000CC2  0101               	movlb	1	; () banked
 32770  000CC4  25E3               	addwf	_targetHigh& (0+255),w,b
 32771  000CC6  6E5B               	movwf	??_MonitorPressureTask^0,c
 32772  000CC8  0E00               	movlw	0
 32773  000CCA  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32774  000CCC  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32775  000CCE  505B               	movf	??_MonitorPressureTask^0,w,c
 32776  000CD0  5DD3               	subwf	_pHigh& (0+255),w,b
 32777  000CD2  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32778  000CD4  0A80               	xorlw	128
 32779  000CD6  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32780  000CD8  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32781  000CDA  0A80               	xorlw	128
 32782  000CDC  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32783  000CDE  A0D8               	btfss	status,0,c
 32784  000CE0  D00F               	goto	i2u2084_40
 32785                           
 32786                           ; BSR set to: 1
 32787  000CE2  0E14               	movlw	20
 32788  000CE4  25E3               	addwf	_targetHigh& (0+255),w,b
 32789  000CE6  6E5B               	movwf	??_MonitorPressureTask^0,c
 32790  000CE8  0E00               	movlw	0
 32791  000CEA  21E4               	addwfc	(_targetHigh+1)& (0+255),w,b
 32792  000CEC  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32793  000CEE  505B               	movf	??_MonitorPressureTask^0,w,c
 32794  000CF0  5DD1               	subwf	_lrpi& (0+255),w,b
 32795  000CF2  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32796  000CF4  0A80               	xorlw	128
 32797  000CF6  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32798  000CF8  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32799  000CFA  0A80               	xorlw	128
 32800  000CFC  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32801  000CFE  A0D8               	btfss	status,0,c
 32802  000D00                     i2u2084_40:
 32803                           
 32804                           ; BSR set to: 1
 32805  000D00  EC0B  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 32806                           
 32807                           ;monitor.c: 601:             if (pHigh<(targetHigh-20) && lrpi<(targetHigh-20) ) SetIPBe
      +                          lowSetAlarm();
 32808  000D04  0EEC               	movlw	236
 32809  000D06  6E5B               	movwf	??_MonitorPressureTask^0,c
 32810  000D08  0EFF               	movlw	255
 32811  000D0A  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32812  000D0C  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32813  000D12  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32814  000D18  505B               	movf	??_MonitorPressureTask^0,w,c
 32815  000D1A  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32816  000D1C  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32817  000D1E  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32818  000D20  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32819  000D22  0101               	movlb	1	; () banked
 32820  000D24  5DD3               	subwf	_pHigh& (0+255),w,b
 32821  000D26  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32822  000D28  0A80               	xorlw	128
 32823  000D2A  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32824  000D2C  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32825  000D2E  0A80               	xorlw	128
 32826  000D30  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32827  000D32  B0D8               	btfsc	status,0,c
 32828  000D34  D019               	goto	i2l21533
 32829                           
 32830                           ; BSR set to: 1
 32831  000D36  0EEC               	movlw	236
 32832  000D38  6E5B               	movwf	??_MonitorPressureTask^0,c
 32833  000D3A  0EFF               	movlw	255
 32834  000D3C  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32835  000D3E  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32836  000D44  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32837  000D4A  505B               	movf	??_MonitorPressureTask^0,w,c
 32838  000D4C  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32839  000D4E  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32840  000D50  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32841  000D52  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32842  000D54  5DD1               	subwf	_lrpi& (0+255),w,b
 32843  000D56  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32844  000D58  0A80               	xorlw	128
 32845  000D5A  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32846  000D5C  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32847  000D5E  0A80               	xorlw	128
 32848  000D60  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32849  000D62  A0D8               	btfss	status,0,c
 32850                           
 32851                           ; BSR set to: 1
 32852  000D64  ECEB  F04E         	call	_SetIPBelowSetAlarm	;wreg free
 32853  000D68                     i2l21533:
 32854                           
 32855                           ;monitor.c: 602:             if (pHigh>(targetHigh-20) || lrpi>(targetHigh-20) ) ClearIP
      +                          BelowSetAlarm();
 32856  000D68  0EEC               	movlw	236
 32857  000D6A  6E5B               	movwf	??_MonitorPressureTask^0,c
 32858  000D6C  0EFF               	movlw	255
 32859  000D6E  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32860  000D70  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32861  000D76  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32862  000D7C  505B               	movf	??_MonitorPressureTask^0,w,c
 32863  000D7E  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32864  000D80  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32865  000D82  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32866  000D84  0101               	movlb	1	; () banked
 32867  000D86  51D3               	movf	_pHigh& (0+255),w,b
 32868  000D88  5C5D               	subwf	(??_MonitorPressureTask+2)^0,w,c
 32869  000D8A  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32870  000D8C  0A80               	xorlw	128
 32871  000D8E  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32872  000D90  51D4               	movf	(_pHigh+1)& (0+255),w,b
 32873  000D92  0A80               	xorlw	128
 32874  000D94  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32875  000D96  A0D8               	btfss	status,0,c
 32876  000D98  D018               	goto	i2u2088_40
 32877                           
 32878                           ; BSR set to: 1
 32879  000D9A  0EEC               	movlw	236
 32880  000D9C  6E5B               	movwf	??_MonitorPressureTask^0,c
 32881  000D9E  0EFF               	movlw	255
 32882  000DA0  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32883  000DA2  0060  F78C  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 32884  000DA8  0060  F790  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 32885  000DAE  505B               	movf	??_MonitorPressureTask^0,w,c
 32886  000DB0  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32887  000DB2  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32888  000DB4  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32889  000DB6  51D1               	movf	_lrpi& (0+255),w,b
 32890  000DB8  5C5D               	subwf	(??_MonitorPressureTask+2)^0,w,c
 32891  000DBA  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32892  000DBC  0A80               	xorlw	128
 32893  000DBE  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32894  000DC0  51D2               	movf	(_lrpi+1)& (0+255),w,b
 32895  000DC2  0A80               	xorlw	128
 32896  000DC4  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32897  000DC6  B0D8               	btfsc	status,0,c
 32898  000DC8  D024               	goto	i2l21545
 32899  000DCA                     i2u2088_40:
 32900                           
 32901                           ; BSR set to: 1
 32902  000DCA  EC00  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 32903  000DCE  D021               	goto	i2l21545
 32904  000DD0                     i2l21539:
 32905                           
 32906                           ;monitor.c: 605:             ClearIPAboveSetAlarm();
 32907  000DD0  EC0B  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 32908                           
 32909                           ;monitor.c: 606:             ClearIPBelowSetAlarm();
 32910  000DD4  EC00  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 32911  000DD8  D01C               	goto	i2l21545
 32912  000DDA                     i2l21541:
 32913  000DDA  0EC8               	movlw	200
 32914  000DDC  0101               	movlb	1	; () banked
 32915  000DDE  25DB               	addwf	_tt3& (0+255),w,b
 32916  000DE0  6E5B               	movwf	??_MonitorPressureTask^0,c
 32917  000DE2  0E00               	movlw	0
 32918  000DE4  21DC               	addwfc	(_tt3+1)& (0+255),w,b
 32919  000DE6  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32920  000DE8  0E00               	movlw	0
 32921  000DEA  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32922  000DEC  0EFF               	movlw	255
 32923  000DEE  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32924  000DF0  0A80               	xorlw	128
 32925  000DF2  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32926  000DF4  0100               	movlb	0	; () banked
 32927  000DF6  51C8               	movf	_tt& (0+255),w,b
 32928  000DF8  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32929  000DFA  51C9               	movf	(_tt+1)& (0+255),w,b
 32930  000DFC  585C               	subwfb	(??_MonitorPressureTask+1)^0,w,c
 32931  000DFE  51CA               	movf	(_tt+2)& (0+255),w,b
 32932  000E00  585E               	subwfb	(??_MonitorPressureTask+3)^0,w,c
 32933  000E02  51CB               	movf	(_tt+3)& (0+255),w,b
 32934  000E04  0A80               	xorlw	128
 32935  000E06  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32936  000E08  B0D8               	btfsc	status,0,c
 32937  000E0A  D003               	goto	i2l21545
 32938                           
 32939                           ; BSR set to: 0
 32940  000E0C  0E00               	movlw	0
 32941  000E0E  0102               	movlb	2	; () banked
 32942  000E10  6F9C               	movwf	MonitorPressureTask@down& (0+255),b
 32943  000E12                     i2l21545:
 32944                           
 32945                           ;monitor.c: 611:     if (prSlow>=(pi-3*5) && state == 2) {
 32946  000E12  0EF1               	movlw	241
 32947  000E14  6E5B               	movwf	??_MonitorPressureTask^0,c
 32948  000E16  0EFF               	movlw	255
 32949  000E18  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32950  000E1A  0060  F754  F05D   	movff	_pi,??_MonitorPressureTask+2
 32951  000E20  0060  F758  F05E   	movff	_pi+1,??_MonitorPressureTask+3
 32952  000E26  505B               	movf	??_MonitorPressureTask^0,w,c
 32953  000E28  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32954  000E2A  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32955  000E2C  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32956  000E2E  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32957  000E30  0100               	movlb	0	; () banked
 32958  000E32  5DCE               	subwf	_prSlow& (0+255),w,b
 32959  000E34  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32960  000E36  0A80               	xorlw	128
 32961  000E38  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32962  000E3A  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32963  000E3C  0A80               	xorlw	128
 32964  000E3E  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32965  000E40  A0D8               	btfss	status,0,c
 32966  000E42  D0BE               	goto	i2l21589
 32967                           
 32968                           ; BSR set to: 0
 32969  000E44  0E02               	movlw	2
 32970  000E46  0101               	movlb	1	; () banked
 32971  000E48  19DF               	xorwf	_state& (0+255),w,b
 32972  000E4A  11E0               	iorwf	(_state+1)& (0+255),w,b
 32973  000E4C  A4D8               	btfss	status,2,c
 32974  000E4E  D0B8               	goto	i2l21589
 32975                           
 32976                           ; BSR set to: 1
 32977                           ;monitor.c: 613:         next = 4;
 32978  000E50  0E00               	movlw	0
 32979  000E52  0100               	movlb	0	; () banked
 32980  000E54  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 32981  000E56  0E04               	movlw	4
 32982  000E58  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 32983                           
 32984                           ; BSR set to: 0
 32985                           ;monitor.c: 614:         tt2 = tt;
 32986  000E5A  C0C8  F0DE         	movff	_tt,_tt2
 32987  000E5E  C0C9  F0DF         	movff	_tt+1,_tt2+1
 32988                           
 32989                           ; BSR set to: 0
 32990                           ;monitor.c: 616:         if (tt2>0) {
 32991  000E62  BFDF               	btfsc	(_tt2+1)& (0+255),7,b
 32992  000E64  D0AD               	goto	i2l21589
 32993  000E66  51DF               	movf	(_tt2+1)& (0+255),w,b
 32994  000E68  E103               	bnz	i2u2092_40
 32995  000E6A  05DE               	decf	_tt2& (0+255),w,b
 32996  000E6C  A0D8               	btfss	status,0,c
 32997  000E6E  D0A8               	goto	i2l21589
 32998  000E70                     i2u2092_40:
 32999                           
 33000                           ; BSR set to: 0
 33001                           ;monitor.c: 617:             tdiBuffer[numtdi%10] = ((tt2-0));
 33002  000E70  0060  F348  F001   	movff	_numtdi,i2___awmod@dividend
 33003  000E76  0060  F34C  F002   	movff	_numtdi+1,i2___awmod@dividend+1
 33004  000E7C  0E00               	movlw	0
 33005  000E7E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 33006  000E80  0E0A               	movlw	10
 33007  000E82  6E03               	movwf	i2___awmod@divisor^0,c
 33008  000E84  EC9D  F041         	call	i2___awmod	;wreg free
 33009  000E88  90D8               	bcf	status,0,c
 33010  000E8A  3601               	rlcf	?i2___awmod^0,f,c
 33011  000E8C  3602               	rlcf	(?i2___awmod+1)^0,f,c
 33012  000E8E  0E61               	movlw	low _tdiBuffer
 33013  000E90  2401               	addwf	?i2___awmod^0,w,c
 33014  000E92  6ED9               	movwf	fsr2l,c
 33015  000E94  0E03               	movlw	high _tdiBuffer
 33016  000E96  2002               	addwfc	(?i2___awmod+1)^0,w,c
 33017  000E98  6EDA               	movwf	fsr2h,c
 33018  000E9A  0060  F37B  FFDE   	movff	_tt2,postinc2
 33019  000EA0  0060  F37F  FFDD   	movff	_tt2+1,postdec2
 33020                           
 33021                           ;monitor.c: 618:             tdi = 0;
 33022  000EA6  0E00               	movlw	0
 33023  000EA8  0101               	movlb	1	; () banked
 33024  000EAA  6FDA               	movwf	(_tdi+1)& (0+255),b
 33025  000EAC  0E00               	movlw	0
 33026  000EAE  6FD9               	movwf	_tdi& (0+255),b
 33027                           
 33028                           ; BSR set to: 1
 33029                           ;monitor.c: 619:             for (int i=0; i<((10)>(numtdi+1)?(numtdi+1):(10)); i++) tdi
      +                           = tdi + tdiBuffer[i];
 33030  000EB0  0E00               	movlw	0
 33031  000EB2  0100               	movlb	0	; () banked
 33032  000EB4  6FB8               	movwf	(MonitorPressureTask@i_4894+1)& (0+255),b
 33033  000EB6  0E00               	movlw	0
 33034  000EB8  6FB7               	movwf	MonitorPressureTask@i_4894& (0+255),b
 33035  000EBA  D019               	goto	i2l21565
 33036  000EBC                     i2l21561:
 33037                           
 33038                           ; BSR set to: 0
 33039  000EBC  90D8               	bcf	status,0,c
 33040  000EBE  35B7               	rlcf	MonitorPressureTask@i_4894& (0+255),w,b
 33041  000EC0  6ED9               	movwf	fsr2l,c
 33042  000EC2  35B8               	rlcf	(MonitorPressureTask@i_4894+1)& (0+255),w,b
 33043  000EC4  6EDA               	movwf	fsr2h,c
 33044  000EC6  0E61               	movlw	low _tdiBuffer
 33045  000EC8  26D9               	addwf	fsr2l,f,c
 33046  000ECA  0E03               	movlw	high _tdiBuffer
 33047  000ECC  22DA               	addwfc	fsr2h,f,c
 33048  000ECE  006F FF78  F05B    	movff	postinc2,??_MonitorPressureTask
 33049  000ED4  006F FF74  F05C    	movff	postdec2,??_MonitorPressureTask+1
 33050  000EDA  0101               	movlb	1	; () banked
 33051  000EDC  51D9               	movf	_tdi& (0+255),w,b
 33052  000EDE  245B               	addwf	??_MonitorPressureTask^0,w,c
 33053  000EE0  6FD9               	movwf	_tdi& (0+255),b
 33054  000EE2  51DA               	movf	(_tdi+1)& (0+255),w,b
 33055  000EE4  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33056  000EE6  6FDA               	movwf	(_tdi+1)& (0+255),b
 33057                           
 33058                           ; BSR set to: 1
 33059  000EE8  0100               	movlb	0	; () banked
 33060  000EEA  4BB7               	infsnz	MonitorPressureTask@i_4894& (0+255),f,b
 33061  000EEC  2BB8               	incf	(MonitorPressureTask@i_4894+1)& (0+255),f,b
 33062  000EEE                     i2l21565:
 33063                           
 33064                           ; BSR set to: 0
 33065  000EEE  0E01               	movlw	1
 33066  000EF0  25D2               	addwf	_numtdi& (0+255),w,b
 33067  000EF2  6E5B               	movwf	??_MonitorPressureTask^0,c
 33068  000EF4  0E00               	movlw	0
 33069  000EF6  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33070  000EF8  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33071  000EFA  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33072  000EFC  D00B               	goto	i2l21569
 33073  000EFE  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33074  000F00  E104               	bnz	i2u2093_40
 33075  000F02  0E0A               	movlw	10
 33076  000F04  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33077  000F06  A0D8               	btfss	status,0,c
 33078  000F08  D005               	goto	i2l21569
 33079  000F0A                     i2u2093_40:
 33080                           
 33081                           ; BSR set to: 0
 33082  000F0A  0E00               	movlw	0
 33083  000F0C  6FA6               	movwf	(_MonitorPressureTask$4895+1)& (0+255),b
 33084  000F0E  0E0A               	movlw	10
 33085  000F10  6FA5               	movwf	_MonitorPressureTask$4895& (0+255),b
 33086  000F12  D006               	goto	i2l3155
 33087  000F14                     i2l21569:
 33088                           
 33089                           ; BSR set to: 0
 33090  000F14  0E01               	movlw	1
 33091  000F16  25D2               	addwf	_numtdi& (0+255),w,b
 33092  000F18  6FA5               	movwf	_MonitorPressureTask$4895& (0+255),b
 33093  000F1A  0E00               	movlw	0
 33094  000F1C  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33095  000F1E  6FA6               	movwf	(_MonitorPressureTask$4895+1)& (0+255),b
 33096  000F20                     i2l3155:
 33097                           
 33098                           ; BSR set to: 0
 33099  000F20  51A5               	movf	_MonitorPressureTask$4895& (0+255),w,b
 33100  000F22  5DB7               	subwf	MonitorPressureTask@i_4894& (0+255),w,b
 33101  000F24  51B8               	movf	(MonitorPressureTask@i_4894+1)& (0+255),w,b
 33102  000F26  0A80               	xorlw	128
 33103  000F28  6E5B               	movwf	??_MonitorPressureTask^0,c
 33104  000F2A  51A6               	movf	(_MonitorPressureTask$4895+1)& (0+255),w,b
 33105  000F2C  0A80               	xorlw	128
 33106  000F2E  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33107  000F30  A0D8               	btfss	status,0,c
 33108  000F32  D7C4               	goto	i2l21561
 33109                           
 33110                           ; BSR set to: 0
 33111                           ;monitor.c: 620:             tdi = tdi/((10)>(numtdi+1)?(numtdi+1):(10));
 33112  000F34  0E01               	movlw	1
 33113  000F36  25D2               	addwf	_numtdi& (0+255),w,b
 33114  000F38  6E5B               	movwf	??_MonitorPressureTask^0,c
 33115  000F3A  0E00               	movlw	0
 33116  000F3C  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33117  000F3E  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33118  000F40  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33119  000F42  D00B               	goto	i2l21575
 33120  000F44  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33121  000F46  E104               	bnz	i2u2095_40
 33122  000F48  0E0A               	movlw	10
 33123  000F4A  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33124  000F4C  A0D8               	btfss	status,0,c
 33125  000F4E  D005               	goto	i2l21575
 33126  000F50                     i2u2095_40:
 33127                           
 33128                           ; BSR set to: 0
 33129  000F50  0E00               	movlw	0
 33130  000F52  6FA8               	movwf	(_MonitorPressureTask$4896+1)& (0+255),b
 33131  000F54  0E0A               	movlw	10
 33132  000F56  6FA7               	movwf	_MonitorPressureTask$4896& (0+255),b
 33133  000F58  D006               	goto	i2l21577
 33134  000F5A                     i2l21575:
 33135                           
 33136                           ; BSR set to: 0
 33137  000F5A  0E01               	movlw	1
 33138  000F5C  25D2               	addwf	_numtdi& (0+255),w,b
 33139  000F5E  6FA7               	movwf	_MonitorPressureTask$4896& (0+255),b
 33140  000F60  0E00               	movlw	0
 33141  000F62  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33142  000F64  6FA8               	movwf	(_MonitorPressureTask$4896+1)& (0+255),b
 33143  000F66                     i2l21577:
 33144                           
 33145                           ; BSR set to: 0
 33146  000F66  0060  F764  F007   	movff	_tdi,i2___awdiv@dividend
 33147  000F6C  0060  F768  F008   	movff	_tdi+1,i2___awdiv@dividend+1
 33148  000F72  0060  F29C  F009   	movff	_MonitorPressureTask$4896,i2___awdiv@divisor
 33149  000F78  0060  F2A0  F00A   	movff	_MonitorPressureTask$4896+1,i2___awdiv@divisor+1
 33150  000F7E  ECE1  F03F         	call	i2___awdiv	;wreg free
 33151  000F82  0060  F01C  F1D9   	movff	?i2___awdiv,_tdi
 33152  000F88  0060  F020  F1DA   	movff	?i2___awdiv+1,_tdi+1
 33153                           
 33154                           ;monitor.c: 623:             if (enableAlarms) numtdi++;
 33155  000F8E  0100               	movlb	0	; () banked
 33156  000F90  51F4               	movf	_enableAlarms& (0+255),w,b
 33157  000F92  B4D8               	btfsc	status,2,c
 33158  000F94  D002               	goto	i2l21583
 33159                           
 33160                           ; BSR set to: 0
 33161  000F96  4BD2               	infsnz	_numtdi& (0+255),f,b
 33162  000F98  2BD3               	incf	(_numtdi+1)& (0+255),f,b
 33163  000F9A                     i2l21583:
 33164                           
 33165                           ; BSR set to: 0
 33166                           ;monitor.c: 624:             if (numtdi>=100) numtdi=10;
 33167  000F9A  BFD3               	btfsc	(_numtdi+1)& (0+255),7,b
 33168  000F9C  D00A               	goto	i2l3162
 33169  000F9E  51D3               	movf	(_numtdi+1)& (0+255),w,b
 33170  000FA0  E104               	bnz	i2u2097_40
 33171  000FA2  0E64               	movlw	100
 33172  000FA4  5DD2               	subwf	_numtdi& (0+255),w,b
 33173  000FA6  A0D8               	btfss	status,0,c
 33174  000FA8  D004               	goto	i2l3162
 33175  000FAA                     i2u2097_40:
 33176                           
 33177                           ; BSR set to: 0
 33178  000FAA  0E00               	movlw	0
 33179  000FAC  6FD3               	movwf	(_numtdi+1)& (0+255),b
 33180  000FAE  0E0A               	movlw	10
 33181  000FB0  6FD2               	movwf	_numtdi& (0+255),b
 33182  000FB2                     i2l3162:
 33183                           
 33184                           ; BSR set to: 0
 33185                           ;monitor.c: 626:             measPi=1;
 33186  000FB2  0E01               	movlw	1
 33187  000FB4  0102               	movlb	2	; () banked
 33188  000FB6  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 33189                           
 33190                           ; BSR set to: 2
 33191                           ;monitor.c: 627:             rpi=pi;
 33192  000FB8  C1D5  F248         	movff	_pi,_rpi
 33193  000FBC  C1D6  F249         	movff	_pi+1,_rpi+1
 33194  000FC0                     i2l21589:
 33195                           
 33196                           ;monitor.c: 634:     if (prSlow<=(pe+2*5) && state == 4) {
 33197  000FC0  0E0A               	movlw	10
 33198  000FC2  0100               	movlb	0	; () banked
 33199  000FC4  25DA               	addwf	_pe& (0+255),w,b
 33200  000FC6  6E5B               	movwf	??_MonitorPressureTask^0,c
 33201  000FC8  0E00               	movlw	0
 33202  000FCA  21DB               	addwfc	(_pe+1)& (0+255),w,b
 33203  000FCC  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33204  000FCE  51CE               	movf	_prSlow& (0+255),w,b
 33205  000FD0  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33206  000FD2  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33207  000FD4  0A80               	xorlw	128
 33208  000FD6  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33209  000FD8  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33210  000FDA  0A80               	xorlw	128
 33211  000FDC  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33212  000FDE  A0D8               	btfss	status,0,c
 33213  000FE0  D0CD               	goto	i2l3163
 33214                           
 33215                           ; BSR set to: 0
 33216  000FE2  0E04               	movlw	4
 33217  000FE4  0101               	movlb	1	; () banked
 33218  000FE6  19DF               	xorwf	_state& (0+255),w,b
 33219  000FE8  11E0               	iorwf	(_state+1)& (0+255),w,b
 33220  000FEA  A4D8               	btfss	status,2,c
 33221  000FEC  D0C7               	goto	i2l3163
 33222                           
 33223                           ; BSR set to: 1
 33224                           ;monitor.c: 636:         next = 2;
 33225  000FEE  0E00               	movlw	0
 33226  000FF0  0100               	movlb	0	; () banked
 33227  000FF2  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 33228  000FF4  0E02               	movlw	2
 33229  000FF6  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 33230                           
 33231                           ; BSR set to: 0
 33232                           ;monitor.c: 637:         tt4 = tt;
 33233  000FF8  C0C8  F0DC         	movff	_tt,_tt4
 33234  000FFC  C0C9  F0DD         	movff	_tt+1,_tt4+1
 33235                           
 33236                           ; BSR set to: 0
 33237                           ;monitor.c: 640:         if (tt4>tt3) {
 33238  001000  51DC               	movf	_tt4& (0+255),w,b
 33239  001002  0101               	movlb	1	; () banked
 33240  001004  5DDB               	subwf	_tt3& (0+255),w,b
 33241  001006  51DC               	movf	(_tt3+1)& (0+255),w,b
 33242  001008  0A80               	xorlw	128
 33243  00100A  6E5B               	movwf	??_MonitorPressureTask^0,c
 33244  00100C  0100               	movlb	0	; () banked
 33245  00100E  51DD               	movf	(_tt4+1)& (0+255),w,b
 33246  001010  0A80               	xorlw	128
 33247  001012  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33248  001014  B0D8               	btfsc	status,0,c
 33249  001016  D0B2               	goto	i2l3163
 33250                           
 33251                           ; BSR set to: 0
 33252                           ;monitor.c: 641:             tdeBuffer[numtde%10] = ((tt4-tt3));
 33253  001018  0101               	movlb	1	; () banked
 33254  00101A  51DB               	movf	_tt3& (0+255),w,b
 33255  00101C  0100               	movlb	0	; () banked
 33256  00101E  5DDC               	subwf	_tt4& (0+255),w,b
 33257  001020  6E5B               	movwf	??_MonitorPressureTask^0,c
 33258  001022  0101               	movlb	1	; () banked
 33259  001024  51DC               	movf	(_tt3+1)& (0+255),w,b
 33260  001026  0100               	movlb	0	; () banked
 33261  001028  59DD               	subwfb	(_tt4+1)& (0+255),w,b
 33262  00102A  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33263  00102C  0060  F340  F001   	movff	_numtde,i2___awmod@dividend
 33264  001032  0060  F344  F002   	movff	_numtde+1,i2___awmod@dividend+1
 33265  001038  0E00               	movlw	0
 33266  00103A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 33267  00103C  0E0A               	movlw	10
 33268  00103E  6E03               	movwf	i2___awmod@divisor^0,c
 33269  001040  EC9D  F041         	call	i2___awmod	;wreg free
 33270  001044  90D8               	bcf	status,0,c
 33271  001046  3601               	rlcf	?i2___awmod^0,f,c
 33272  001048  3602               	rlcf	(?i2___awmod+1)^0,f,c
 33273  00104A  0E75               	movlw	low _tdeBuffer
 33274  00104C  2401               	addwf	?i2___awmod^0,w,c
 33275  00104E  6ED9               	movwf	fsr2l,c
 33276  001050  0E03               	movlw	high _tdeBuffer
 33277  001052  2002               	addwfc	(?i2___awmod+1)^0,w,c
 33278  001054  6EDA               	movwf	fsr2h,c
 33279  001056  0060  F16F  FFDE   	movff	??_MonitorPressureTask,postinc2
 33280  00105C  0060  F173  FFDD   	movff	??_MonitorPressureTask+1,postdec2
 33281                           
 33282                           ;monitor.c: 642:             tde = 0;
 33283  001062  0E00               	movlw	0
 33284  001064  0101               	movlb	1	; () banked
 33285  001066  6FD8               	movwf	(_tde+1)& (0+255),b
 33286  001068  0E00               	movlw	0
 33287  00106A  6FD7               	movwf	_tde& (0+255),b
 33288                           
 33289                           ; BSR set to: 1
 33290                           ;monitor.c: 643:             for (int i=0; i<((numtde+1)>(10)?(10):(numtde+1)); i++) tde
      +                           = tde + tdeBuffer[i];
 33291  00106C  0E00               	movlw	0
 33292  00106E  0100               	movlb	0	; () banked
 33293  001070  6FBA               	movwf	(MonitorPressureTask@i_4897+1)& (0+255),b
 33294  001072  0E00               	movlw	0
 33295  001074  6FB9               	movwf	MonitorPressureTask@i_4897& (0+255),b
 33296  001076  D019               	goto	i2l21609
 33297  001078                     i2l21605:
 33298                           
 33299                           ; BSR set to: 0
 33300  001078  90D8               	bcf	status,0,c
 33301  00107A  35B9               	rlcf	MonitorPressureTask@i_4897& (0+255),w,b
 33302  00107C  6ED9               	movwf	fsr2l,c
 33303  00107E  35BA               	rlcf	(MonitorPressureTask@i_4897+1)& (0+255),w,b
 33304  001080  6EDA               	movwf	fsr2h,c
 33305  001082  0E75               	movlw	low _tdeBuffer
 33306  001084  26D9               	addwf	fsr2l,f,c
 33307  001086  0E03               	movlw	high _tdeBuffer
 33308  001088  22DA               	addwfc	fsr2h,f,c
 33309  00108A  006F FF78  F05B    	movff	postinc2,??_MonitorPressureTask
 33310  001090  006F FF74  F05C    	movff	postdec2,??_MonitorPressureTask+1
 33311  001096  0101               	movlb	1	; () banked
 33312  001098  51D7               	movf	_tde& (0+255),w,b
 33313  00109A  245B               	addwf	??_MonitorPressureTask^0,w,c
 33314  00109C  6FD7               	movwf	_tde& (0+255),b
 33315  00109E  51D8               	movf	(_tde+1)& (0+255),w,b
 33316  0010A0  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33317  0010A2  6FD8               	movwf	(_tde+1)& (0+255),b
 33318                           
 33319                           ; BSR set to: 1
 33320  0010A4  0100               	movlb	0	; () banked
 33321  0010A6  4BB9               	infsnz	MonitorPressureTask@i_4897& (0+255),f,b
 33322  0010A8  2BBA               	incf	(MonitorPressureTask@i_4897+1)& (0+255),f,b
 33323  0010AA                     i2l21609:
 33324                           
 33325                           ; BSR set to: 0
 33326  0010AA  0E01               	movlw	1
 33327  0010AC  25D0               	addwf	_numtde& (0+255),w,b
 33328  0010AE  6E5B               	movwf	??_MonitorPressureTask^0,c
 33329  0010B0  0E00               	movlw	0
 33330  0010B2  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33331  0010B4  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33332  0010B6  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33333  0010B8  D006               	goto	i2u2101_40
 33334  0010BA  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33335  0010BC  E10B               	bnz	i2l21613
 33336  0010BE  0E0B               	movlw	11
 33337  0010C0  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33338  0010C2  B0D8               	btfsc	status,0,c
 33339  0010C4  D007               	goto	i2l21613
 33340  0010C6                     i2u2101_40:
 33341                           
 33342                           ; BSR set to: 0
 33343  0010C6  0E01               	movlw	1
 33344  0010C8  25D0               	addwf	_numtde& (0+255),w,b
 33345  0010CA  6FA9               	movwf	_MonitorPressureTask$4898& (0+255),b
 33346  0010CC  0E00               	movlw	0
 33347  0010CE  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33348  0010D0  6FAA               	movwf	(_MonitorPressureTask$4898+1)& (0+255),b
 33349  0010D2  D004               	goto	i2l21615
 33350  0010D4                     i2l21613:
 33351                           
 33352                           ; BSR set to: 0
 33353  0010D4  0E00               	movlw	0
 33354  0010D6  6FAA               	movwf	(_MonitorPressureTask$4898+1)& (0+255),b
 33355  0010D8  0E0A               	movlw	10
 33356  0010DA  6FA9               	movwf	_MonitorPressureTask$4898& (0+255),b
 33357  0010DC                     i2l21615:
 33358                           
 33359                           ; BSR set to: 0
 33360  0010DC  51A9               	movf	_MonitorPressureTask$4898& (0+255),w,b
 33361  0010DE  5DB9               	subwf	MonitorPressureTask@i_4897& (0+255),w,b
 33362  0010E0  51BA               	movf	(MonitorPressureTask@i_4897+1)& (0+255),w,b
 33363  0010E2  0A80               	xorlw	128
 33364  0010E4  6E5B               	movwf	??_MonitorPressureTask^0,c
 33365  0010E6  51AA               	movf	(_MonitorPressureTask$4898+1)& (0+255),w,b
 33366  0010E8  0A80               	xorlw	128
 33367  0010EA  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33368  0010EC  A0D8               	btfss	status,0,c
 33369  0010EE  D7C4               	goto	i2l21605
 33370                           
 33371                           ; BSR set to: 0
 33372                           ;monitor.c: 644:             tde = tde/((numtde+1)>(10)?(10):(numtde+1));
 33373  0010F0  0E01               	movlw	1
 33374  0010F2  25D0               	addwf	_numtde& (0+255),w,b
 33375  0010F4  6E5B               	movwf	??_MonitorPressureTask^0,c
 33376  0010F6  0E00               	movlw	0
 33377  0010F8  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33378  0010FA  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33379  0010FC  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33380  0010FE  D006               	goto	i2u2103_40
 33381  001100  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33382  001102  E10B               	bnz	i2l21621
 33383  001104  0E0B               	movlw	11
 33384  001106  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33385  001108  B0D8               	btfsc	status,0,c
 33386  00110A  D007               	goto	i2l21621
 33387  00110C                     i2u2103_40:
 33388                           
 33389                           ; BSR set to: 0
 33390  00110C  0E01               	movlw	1
 33391  00110E  25D0               	addwf	_numtde& (0+255),w,b
 33392  001110  6FAB               	movwf	_MonitorPressureTask$4899& (0+255),b
 33393  001112  0E00               	movlw	0
 33394  001114  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33395  001116  6FAC               	movwf	(_MonitorPressureTask$4899+1)& (0+255),b
 33396  001118  D004               	goto	i2l21623
 33397  00111A                     i2l21621:
 33398                           
 33399                           ; BSR set to: 0
 33400  00111A  0E00               	movlw	0
 33401  00111C  6FAC               	movwf	(_MonitorPressureTask$4899+1)& (0+255),b
 33402  00111E  0E0A               	movlw	10
 33403  001120  6FAB               	movwf	_MonitorPressureTask$4899& (0+255),b
 33404  001122                     i2l21623:
 33405                           
 33406                           ; BSR set to: 0
 33407  001122  0060  F75C  F007   	movff	_tde,i2___awdiv@dividend
 33408  001128  0060  F760  F008   	movff	_tde+1,i2___awdiv@dividend+1
 33409  00112E  0060  F2AC  F009   	movff	_MonitorPressureTask$4899,i2___awdiv@divisor
 33410  001134  0060  F2B0  F00A   	movff	_MonitorPressureTask$4899+1,i2___awdiv@divisor+1
 33411  00113A  ECE1  F03F         	call	i2___awdiv	;wreg free
 33412  00113E  0060  F01C  F1D7   	movff	?i2___awdiv,_tde
 33413  001144  0060  F020  F1D8   	movff	?i2___awdiv+1,_tde+1
 33414                           
 33415                           ;monitor.c: 647:             if (enableAlarms) numtde++;
 33416  00114A  0100               	movlb	0	; () banked
 33417  00114C  51F4               	movf	_enableAlarms& (0+255),w,b
 33418  00114E  B4D8               	btfsc	status,2,c
 33419  001150  D002               	goto	i2l21629
 33420                           
 33421                           ; BSR set to: 0
 33422  001152  4BD0               	infsnz	_numtde& (0+255),f,b
 33423  001154  2BD1               	incf	(_numtde+1)& (0+255),f,b
 33424  001156                     i2l21629:
 33425                           
 33426                           ; BSR set to: 0
 33427                           ;monitor.c: 648:             if (numtde>=100) numtde=10;
 33428  001156  BFD1               	btfsc	(_numtde+1)& (0+255),7,b
 33429  001158  D00A               	goto	i2l3177
 33430  00115A  51D1               	movf	(_numtde+1)& (0+255),w,b
 33431  00115C  E104               	bnz	i2u2105_40
 33432  00115E  0E64               	movlw	100
 33433  001160  5DD0               	subwf	_numtde& (0+255),w,b
 33434  001162  A0D8               	btfss	status,0,c
 33435  001164  D004               	goto	i2l3177
 33436  001166                     i2u2105_40:
 33437                           
 33438                           ; BSR set to: 0
 33439  001166  0E00               	movlw	0
 33440  001168  6FD1               	movwf	(_numtde+1)& (0+255),b
 33441  00116A  0E0A               	movlw	10
 33442  00116C  6FD0               	movwf	_numtde& (0+255),b
 33443  00116E                     i2l3177:
 33444                           
 33445                           ; BSR set to: 0
 33446                           ;monitor.c: 650:             measPe = 1;
 33447  00116E  0E01               	movlw	1
 33448  001170  0102               	movlb	2	; () banked
 33449  001172  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 33450                           
 33451                           ; BSR set to: 2
 33452                           ;monitor.c: 651:             rpe = pe;
 33453  001174  C0DA  F246         	movff	_pe,_rpe
 33454  001178  C0DB  F247         	movff	_pe+1,_rpe+1
 33455  00117C                     i2l3163:
 33456                           
 33457                           ;monitor.c: 660:     if (measPi) rpi = (rpi*4+prSlow)/5;
 33458  00117C  0102               	movlb	2	; () banked
 33459  00117E  519E               	movf	MonitorPressureTask@measPi& (0+255),w,b
 33460  001180  B4D8               	btfsc	status,2,c
 33461  001182  D01F               	goto	i2l21637
 33462                           
 33463                           ; BSR set to: 2
 33464  001184  0060  F920  F05B   	movff	_rpi,??_MonitorPressureTask
 33465  00118A  0060  F924  F05C   	movff	_rpi+1,??_MonitorPressureTask+1
 33466  001190  90D8               	bcf	status,0,c
 33467  001192  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33468  001194  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33469  001196  90D8               	bcf	status,0,c
 33470  001198  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33471  00119A  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33472  00119C  0100               	movlb	0	; () banked
 33473  00119E  51CE               	movf	_prSlow& (0+255),w,b
 33474  0011A0  245B               	addwf	??_MonitorPressureTask^0,w,c
 33475  0011A2  6E07               	movwf	i2___awdiv@dividend^0,c
 33476  0011A4  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33477  0011A6  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33478  0011A8  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 33479  0011AA  0E00               	movlw	0
 33480  0011AC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 33481  0011AE  0E05               	movlw	5
 33482  0011B0  6E09               	movwf	i2___awdiv@divisor^0,c
 33483  0011B2  ECE1  F03F         	call	i2___awdiv	;wreg free
 33484  0011B6  0060  F01C  F248   	movff	?i2___awdiv,_rpi
 33485  0011BC  0060  F020  F249   	movff	?i2___awdiv+1,_rpi+1
 33486  0011C2                     i2l21637:
 33487                           
 33488                           ;monitor.c: 661:     if (measPe) rpe = (rpe*4+prSlow)/5;
 33489  0011C2  0102               	movlb	2	; () banked
 33490  0011C4  519D               	movf	MonitorPressureTask@measPe& (0+255),w,b
 33491  0011C6  B4D8               	btfsc	status,2,c
 33492  0011C8  D01F               	goto	i2l21641
 33493                           
 33494                           ; BSR set to: 2
 33495  0011CA  0060  F918  F05B   	movff	_rpe,??_MonitorPressureTask
 33496  0011D0  0060  F91C  F05C   	movff	_rpe+1,??_MonitorPressureTask+1
 33497  0011D6  90D8               	bcf	status,0,c
 33498  0011D8  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33499  0011DA  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33500  0011DC  90D8               	bcf	status,0,c
 33501  0011DE  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33502  0011E0  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33503  0011E2  0100               	movlb	0	; () banked
 33504  0011E4  51CE               	movf	_prSlow& (0+255),w,b
 33505  0011E6  245B               	addwf	??_MonitorPressureTask^0,w,c
 33506  0011E8  6E07               	movwf	i2___awdiv@dividend^0,c
 33507  0011EA  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33508  0011EC  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33509  0011EE  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 33510  0011F0  0E00               	movlw	0
 33511  0011F2  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 33512  0011F4  0E05               	movlw	5
 33513  0011F6  6E09               	movwf	i2___awdiv@divisor^0,c
 33514  0011F8  ECE1  F03F         	call	i2___awdiv	;wreg free
 33515  0011FC  0060  F01C  F246   	movff	?i2___awdiv,_rpe
 33516  001202  0060  F020  F247   	movff	?i2___awdiv+1,_rpe+1
 33517  001208                     i2l21641:
 33518                           
 33519                           ;monitor.c: 664:     if (enableAlarms) {
 33520  001208  0100               	movlb	0	; () banked
 33521  00120A  51F4               	movf	_enableAlarms& (0+255),w,b
 33522  00120C  B4D8               	btfsc	status,2,c
 33523  00120E  D040               	goto	i2l21667
 33524                           
 33525                           ; BSR set to: 0
 33526                           ;monitor.c: 675:         if (tde>350) SetTdeTooLongAlarm(); else ClearTdeTooLongAlarm();
 33527  001210  0101               	movlb	1	; () banked
 33528  001212  BFD8               	btfsc	(_tde+1)& (0+255),7,b
 33529  001214  D009               	goto	i2l21647
 33530  001216  0E5F               	movlw	95
 33531  001218  5DD7               	subwf	_tde& (0+255),w,b
 33532  00121A  0E01               	movlw	1
 33533  00121C  59D8               	subwfb	(_tde+1)& (0+255),w,b
 33534  00121E  A0D8               	btfss	status,0,c
 33535  001220  D003               	goto	i2l21647
 33536                           
 33537                           ; BSR set to: 1
 33538  001222  EC84  F052         	call	_SetTdeTooLongAlarm	;wreg free
 33539  001226  D002               	goto	i2l21649
 33540  001228                     i2l21647:
 33541                           
 33542                           ; BSR set to: 1
 33543  001228  ECC4  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 33544  00122C                     i2l21649:
 33545                           
 33546                           ; BSR set to: 2
 33547                           ;monitor.c: 676:         if (tdi>350) SetTdiTooLongAlarm(); else ClearTdiTooLongAlarm();
 33548  00122C  0101               	movlb	1	; () banked
 33549  00122E  BFDA               	btfsc	(_tdi+1)& (0+255),7,b
 33550  001230  D009               	goto	i2l21653
 33551  001232  0E5F               	movlw	95
 33552  001234  5DD9               	subwf	_tdi& (0+255),w,b
 33553  001236  0E01               	movlw	1
 33554  001238  59DA               	subwfb	(_tdi+1)& (0+255),w,b
 33555  00123A  A0D8               	btfss	status,0,c
 33556  00123C  D003               	goto	i2l21653
 33557                           
 33558                           ; BSR set to: 1
 33559  00123E  EC80  F052         	call	_SetTdiTooLongAlarm	;wreg free
 33560  001242  D002               	goto	i2l21655
 33561  001244                     i2l21653:
 33562                           
 33563                           ; BSR set to: 1
 33564  001244  ECC0  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 33565  001248                     i2l21655:
 33566                           
 33567                           ; BSR set to: 2
 33568                           ;monitor.c: 677:         if (volume>volumeMax) SetVAboveMaxAlarm(); else ClearVAboveMaxA
      +                          larm();
 33569  001248  0101               	movlb	1	; () banked
 33570  00124A  51DD               	movf	_volume& (0+255),w,b
 33571  00124C  0102               	movlb	2	; () banked
 33572  00124E  5D6A               	subwf	_volumeMax& (0+255),w,b
 33573  001250  516B               	movf	(_volumeMax+1)& (0+255),w,b
 33574  001252  0A80               	xorlw	128
 33575  001254  6E5B               	movwf	??_MonitorPressureTask^0,c
 33576  001256  0101               	movlb	1	; () banked
 33577  001258  51DE               	movf	(_volume+1)& (0+255),w,b
 33578  00125A  0A80               	xorlw	128
 33579  00125C  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33580  00125E  B0D8               	btfsc	status,0,c
 33581  001260  D003               	goto	i2l21659
 33582                           
 33583                           ; BSR set to: 1
 33584  001262  EC7C  F052         	call	_SetVAboveMaxAlarm	;wreg free
 33585  001266  D002               	goto	i2l21661
 33586  001268                     i2l21659:
 33587                           
 33588                           ; BSR set to: 1
 33589  001268  ECBC  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 33590  00126C                     i2l21661:
 33591                           
 33592                           ; BSR set to: 2
 33593                           ;monitor.c: 678:         if (volume<volumeMin) SetVBelowMinAlarm(); else ClearVBelowMinA
      +                          larm();
 33594  00126C  5168               	movf	_volumeMin& (0+255),w,b
 33595  00126E  0101               	movlb	1	; () banked
 33596  001270  5DDD               	subwf	_volume& (0+255),w,b
 33597  001272  51DE               	movf	(_volume+1)& (0+255),w,b
 33598  001274  0A80               	xorlw	128
 33599  001276  6E5B               	movwf	??_MonitorPressureTask^0,c
 33600  001278  0102               	movlb	2	; () banked
 33601  00127A  5169               	movf	(_volumeMin+1)& (0+255),w,b
 33602  00127C  0A80               	xorlw	128
 33603  00127E  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33604  001280  B0D8               	btfsc	status,0,c
 33605  001282  D003               	goto	i2l21665
 33606                           
 33607                           ; BSR set to: 2
 33608  001284  ECF6  F052         	call	_SetVBelowMinAlarm	;wreg free
 33609  001288  D00B               	goto	i2l21669
 33610  00128A                     i2l21665:
 33611                           
 33612                           ; BSR set to: 2
 33613  00128A  EC08  F053         	call	_ClearVBelowMinAlarm	;wreg free
 33614  00128E  D008               	goto	i2l21669
 33615  001290                     i2l21667:
 33616                           
 33617                           ; BSR set to: 0
 33618                           ;monitor.c: 681:         ClearTdeTooLongAlarm();
 33619  001290  ECC4  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 33620                           
 33621                           ;monitor.c: 682:         ClearTdiTooLongAlarm();
 33622  001294  ECC0  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 33623                           
 33624                           ;monitor.c: 683:         ClearVAboveMaxAlarm();
 33625  001298  ECBC  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 33626                           
 33627                           ;monitor.c: 684:         ClearVBelowMinAlarm();
 33628  00129C  EC08  F053         	call	_ClearVBelowMinAlarm	;wreg free
 33629  0012A0                     i2l21669:
 33630                           
 33631                           ; BSR set to: 2
 33632                           ;monitor.c: 687:     state = next;
 33633  0012A0  0060  F2D4  F1DF   	movff	MonitorPressureTask@next,_state
 33634  0012A6  0060  F2D8  F1E0   	movff	MonitorPressureTask@next+1,_state+1
 33635  0012AC  0012               	return		;funcret
 33636  0012AE                     __end_of_MonitorPressureTask:
 33637                           	opt callstack 0
 33638                           
 33639 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 33640 ;; Defined at:
 33641 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 33642 ;; Parameters:    Size  Location     Type
 33643 ;;		None
 33644 ;; Auto vars:     Size  Location     Type
 33645 ;;		None
 33646 ;; Return value:  Size  Location     Type
 33647 ;;                  1    wreg      void 
 33648 ;; Registers used:
 33649 ;;		None
 33650 ;; Tracked objects:
 33651 ;;		On entry : 3F/2
 33652 ;;		On exit  : 3F/2
 33653 ;;		Unchanged: 3F/0
 33654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33659 ;;Total ram usage:        0 bytes
 33660 ;; Hardware stack levels used:    1
 33661 ;; This function calls:
 33662 ;;		Nothing
 33663 ;; This function is called by:
 33664 ;;		_TMR0_Initialize
 33665 ;;		_TMR0_ISR
 33666 ;; This function uses a non-reentrant model
 33667 ;;
 33668                           
 33669                           	psect	text247
 33670  00A6B6                     __ptext247:
 33671                           	opt callstack 0
 33672  00A6B6                     _TMR0_DefaultInterruptHandler:
 33673                           	opt callstack 15
 33674                           
 33675                           ; BSR set to: 2
 33676                           
 33677                           ;incstack = 0
 33678  00A6B6  0012               	return		;funcret
 33679  00A6B8                     __end_of_TMR0_DefaultInterruptHandler:
 33680                           	opt callstack 0
 33681                           
 33682 ;; *************** function i2_See5V *****************
 33683 ;; Defined at:
 33684 ;;		line 840 in file "monitor.c"
 33685 ;; Parameters:    Size  Location     Type
 33686 ;;		None
 33687 ;; Auto vars:     Size  Location     Type
 33688 ;;  See5V           4   28[COMRAM] long 
 33689 ;;  See5V           2   34[COMRAM] short 
 33690 ;;  See5V           2   32[COMRAM] unsigned short 
 33691 ;; Return value:  Size  Location     Type
 33692 ;;                  2   26[COMRAM] short 
 33693 ;; Registers used:
 33694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33695 ;; Tracked objects:
 33696 ;;		On entry : 0/0
 33697 ;;		On exit  : 0/0
 33698 ;;		Unchanged: 0/0
 33699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33701 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33703 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33704 ;;Total ram usage:       10 bytes
 33705 ;; Hardware stack levels used:    1
 33706 ;; Hardware stack levels required when called:    2
 33707 ;; This function calls:
 33708 ;;		i2_AdcSeeData
 33709 ;;		i2___aldiv
 33710 ;; This function is called by:
 33711 ;;		_MonitorPressureTask
 33712 ;; This function uses a non-reentrant model
 33713 ;;
 33714                           
 33715                           	psect	text248
 33716  00864C                     __ptext248:
 33717                           	opt callstack 0
 33718  00864C                     i2_See5V:
 33719                           	opt callstack 12
 33720                           
 33721                           ;monitor.c: 841:     adc_result_t adc = AdcSeeData(1);
 33722                           
 33723                           ; BSR set to: 2
 33724                           ;incstack = 0
 33725  00864C  0E00               	movlw	0
 33726  00864E  6E08               	movwf	(i2AdcSeeData@id+1)^0,c
 33727  008650  0E01               	movlw	1
 33728  008652  6E07               	movwf	i2AdcSeeData@id^0,c
 33729  008654  EC13  F04A         	call	i2_AdcSeeData	;wreg free
 33730  008658  0060  F01C  F021   	movff	?i2_AdcSeeData,i2See5V@adc
 33731  00865E  0060  F020  F022   	movff	?i2_AdcSeeData+1,i2See5V@adc+1
 33732                           
 33733                           ;monitor.c: 842:     int32_t mv = adc;
 33734  008664  0060  F084  F01D   	movff	i2See5V@adc,i2See5V@mv
 33735  00866A  0060  F088  F01E   	movff	i2See5V@adc+1,i2See5V@mv+1
 33736  008670  6A1F               	clrf	(i2See5V@mv+2)^0,c
 33737  008672  6A20               	clrf	(i2See5V@mv+3)^0,c
 33738                           
 33739                           ;monitor.c: 845:     int16_t v12 = mv/2;
 33740  008674  0060  F074  F00D   	movff	i2See5V@mv,i2___aldiv@dividend
 33741  00867A  0060  F078  F00E   	movff	i2See5V@mv+1,i2___aldiv@dividend+1
 33742  008680  0060  F07C  F00F   	movff	i2See5V@mv+2,i2___aldiv@dividend+2
 33743  008686  0060  F080  F010   	movff	i2See5V@mv+3,i2___aldiv@dividend+3
 33744  00868C  0E02               	movlw	2
 33745  00868E  6E11               	movwf	i2___aldiv@divisor^0,c
 33746  008690  0E00               	movlw	0
 33747  008692  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 33748  008694  0E00               	movlw	0
 33749  008696  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 33750  008698  0E00               	movlw	0
 33751  00869A  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 33752  00869C  EC1E  F036         	call	i2___aldiv	;wreg free
 33753  0086A0  0060  F034  F023   	movff	?i2___aldiv,i2See5V@v12
 33754  0086A6  0060  F038  F024   	movff	?i2___aldiv+1,i2See5V@v12+1
 33755                           
 33756                           ;monitor.c: 846:     return v12;
 33757  0086AC  0060  F08C  F01B   	movff	i2See5V@v12,?i2_See5V
 33758  0086B2  0060  F090  F01C   	movff	i2See5V@v12+1,?i2_See5V+1
 33759  0086B8  0012               	return		;funcret
 33760  0086BA                     __end_ofi2_See5V:
 33761                           	opt callstack 0
 33762                           
 33763 ;; *************** function i2_See12V *****************
 33764 ;; Defined at:
 33765 ;;		line 857 in file "monitor.c"
 33766 ;; Parameters:    Size  Location     Type
 33767 ;;		None
 33768 ;; Auto vars:     Size  Location     Type
 33769 ;;  See12V          4   28[COMRAM] long 
 33770 ;;  See12V          2   34[COMRAM] short 
 33771 ;;  See12V          2   32[COMRAM] unsigned short 
 33772 ;; Return value:  Size  Location     Type
 33773 ;;                  2   26[COMRAM] short 
 33774 ;; Registers used:
 33775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33776 ;; Tracked objects:
 33777 ;;		On entry : 3F/0
 33778 ;;		On exit  : 0/0
 33779 ;;		Unchanged: 0/0
 33780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33782 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33784 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33785 ;;Total ram usage:       10 bytes
 33786 ;; Hardware stack levels used:    1
 33787 ;; Hardware stack levels required when called:    2
 33788 ;; This function calls:
 33789 ;;		i2_AdcSeeData
 33790 ;;		i2___aldiv
 33791 ;;		i2___lmul
 33792 ;; This function is called by:
 33793 ;;		_MonitorPressureTask
 33794 ;; This function uses a non-reentrant model
 33795 ;;
 33796                           
 33797                           	psect	text249
 33798  007AA0                     __ptext249:
 33799                           	opt callstack 0
 33800  007AA0                     i2_See12V:
 33801                           	opt callstack 12
 33802                           
 33803                           ; BSR set to: 0
 33804                           ;monitor.c: 858:     adc_result_t adc = AdcSeeData(3);
 33805                           
 33806                           ;incstack = 0
 33807  007AA0  0E00               	movlw	0
 33808  007AA2  6E08               	movwf	(i2AdcSeeData@id+1)^0,c
 33809  007AA4  0E03               	movlw	3
 33810  007AA6  6E07               	movwf	i2AdcSeeData@id^0,c
 33811  007AA8  EC13  F04A         	call	i2_AdcSeeData	;wreg free
 33812  007AAC  0060  F01C  F021   	movff	?i2_AdcSeeData,i2See12V@adc
 33813  007AB2  0060  F020  F022   	movff	?i2_AdcSeeData+1,i2See12V@adc+1
 33814                           
 33815                           ;monitor.c: 859:     int32_t mv = adc;
 33816  007AB8  0060  F084  F01D   	movff	i2See12V@adc,i2See12V@mv
 33817  007ABE  0060  F088  F01E   	movff	i2See12V@adc+1,i2See12V@mv+1
 33818  007AC4  6A1F               	clrf	(i2See12V@mv+2)^0,c
 33819  007AC6  6A20               	clrf	(i2See12V@mv+3)^0,c
 33820                           
 33821                           ;monitor.c: 861:     int16_t v12 = (mv*33)/10;
 33822  007AC8  0060  F074  F001   	movff	i2See12V@mv,i2___lmul@multiplier
 33823  007ACE  0060  F078  F002   	movff	i2See12V@mv+1,i2___lmul@multiplier+1
 33824  007AD4  0060  F07C  F003   	movff	i2See12V@mv+2,i2___lmul@multiplier+2
 33825  007ADA  0060  F080  F004   	movff	i2See12V@mv+3,i2___lmul@multiplier+3
 33826  007AE0  0E21               	movlw	33
 33827  007AE2  6E05               	movwf	i2___lmul@multiplicand^0,c
 33828  007AE4  0E00               	movlw	0
 33829  007AE6  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 33830  007AE8  0E00               	movlw	0
 33831  007AEA  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 33832  007AEC  0E00               	movlw	0
 33833  007AEE  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 33834  007AF0  ECC2  F045         	call	i2___lmul	;wreg free
 33835  007AF4  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 33836  007AFA  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 33837  007B00  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 33838  007B06  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 33839  007B0C  0E0A               	movlw	10
 33840  007B0E  6E11               	movwf	i2___aldiv@divisor^0,c
 33841  007B10  0E00               	movlw	0
 33842  007B12  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 33843  007B14  0E00               	movlw	0
 33844  007B16  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 33845  007B18  0E00               	movlw	0
 33846  007B1A  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 33847  007B1C  EC1E  F036         	call	i2___aldiv	;wreg free
 33848  007B20  0060  F034  F023   	movff	?i2___aldiv,i2See12V@v12
 33849  007B26  0060  F038  F024   	movff	?i2___aldiv+1,i2See12V@v12+1
 33850                           
 33851                           ;monitor.c: 862:     return v12;
 33852  007B2C  0060  F08C  F01B   	movff	i2See12V@v12,?i2_See12V
 33853  007B32  0060  F090  F01C   	movff	i2See12V@v12+1,?i2_See12V+1
 33854  007B38  0012               	return		;funcret
 33855  007B3A                     __end_ofi2_See12V:
 33856                           	opt callstack 0
 33857                           
 33858 ;; *************** function i2_AdcSeeData *****************
 33859 ;; Defined at:
 33860 ;;		line 82 in file "monitor.c"
 33861 ;; Parameters:    Size  Location     Type
 33862 ;;  id              2    6[COMRAM] int 
 33863 ;; Auto vars:     Size  Location     Type
 33864 ;;  AdcSeeData      2    8[COMRAM] unsigned short 
 33865 ;; Return value:  Size  Location     Type
 33866 ;;                  2    6[COMRAM] unsigned short 
 33867 ;; Registers used:
 33868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33869 ;; Tracked objects:
 33870 ;;		On entry : 0/0
 33871 ;;		On exit  : 0/0
 33872 ;;		Unchanged: 0/0
 33873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33878 ;;Total ram usage:        4 bytes
 33879 ;; Hardware stack levels used:    1
 33880 ;; Hardware stack levels required when called:    1
 33881 ;; This function calls:
 33882 ;;		i2___wmul
 33883 ;; This function is called by:
 33884 ;;		i2_See5V
 33885 ;;		i2_See12V
 33886 ;; This function uses a non-reentrant model
 33887 ;;
 33888                           
 33889                           	psect	text250
 33890  009426                     __ptext250:
 33891                           	opt callstack 0
 33892  009426                     i2_AdcSeeData:
 33893                           	opt callstack 12
 33894                           
 33895                           ;monitor.c: 83:     adc_result_t data;;monitor.c: 84:     data = adcChannels[id].data;
 33896                           
 33897                           ;incstack = 0
 33898  009426  0060  F01C  F001   	movff	i2AdcSeeData@id,i2___wmul@multiplier
 33899  00942C  0060  F020  F002   	movff	i2AdcSeeData@id+1,i2___wmul@multiplier+1
 33900  009432  0E00               	movlw	0
 33901  009434  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 33902  009436  0E05               	movlw	5
 33903  009438  6E03               	movwf	i2___wmul@multiplicand^0,c
 33904  00943A  ECD3  F04C         	call	i2___wmul	;wreg free
 33905  00943E  0EBE               	movlw	low (_adcChannels+2)
 33906  009440  2401               	addwf	?i2___wmul^0,w,c
 33907  009442  6ED9               	movwf	fsr2l,c
 33908  009444  0E02               	movlw	high (_adcChannels+2)
 33909  009446  2002               	addwfc	(?i2___wmul+1)^0,w,c
 33910  009448  6EDA               	movwf	fsr2h,c
 33911  00944A  006F FF78  F009    	movff	postinc2,i2AdcSeeData@data
 33912  009450  006F FF74  F00A    	movff	postdec2,i2AdcSeeData@data+1
 33913                           
 33914                           ;monitor.c: 86:     return data;
 33915  009456  0060  F024  F007   	movff	i2AdcSeeData@data,?i2_AdcSeeData
 33916  00945C  0060  F028  F008   	movff	i2AdcSeeData@data+1,?i2_AdcSeeData+1
 33917  009462  0012               	return		;funcret
 33918  009464                     __end_ofi2_AdcSeeData:
 33919                           	opt callstack 0
 33920                           
 33921 ;; *************** function i2_AdcDataReady *****************
 33922 ;; Defined at:
 33923 ;;		line 78 in file "monitor.c"
 33924 ;; Parameters:    Size  Location     Type
 33925 ;;  id              2    6[COMRAM] int 
 33926 ;; Auto vars:     Size  Location     Type
 33927 ;;		None
 33928 ;; Return value:  Size  Location     Type
 33929 ;;                  1    wreg      _Bool 
 33930 ;; Registers used:
 33931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33932 ;; Tracked objects:
 33933 ;;		On entry : 3D/2
 33934 ;;		On exit  : 0/0
 33935 ;;		Unchanged: 0/0
 33936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33941 ;;Total ram usage:        2 bytes
 33942 ;; Hardware stack levels used:    1
 33943 ;; Hardware stack levels required when called:    1
 33944 ;; This function calls:
 33945 ;;		i2___wmul
 33946 ;; This function is called by:
 33947 ;;		_MonitorPressureTask
 33948 ;; This function uses a non-reentrant model
 33949 ;;
 33950                           
 33951                           	psect	text251
 33952  009A50                     __ptext251:
 33953                           	opt callstack 0
 33954  009A50                     i2_AdcDataReady:
 33955                           	opt callstack 13
 33956                           
 33957                           ;monitor.c: 79:     return adcChannels[id].dataValid;
 33958                           
 33959                           ;incstack = 0
 33960  009A50  0060  F01C  F001   	movff	i2AdcDataReady@id,i2___wmul@multiplier
 33961  009A56  0060  F020  F002   	movff	i2AdcDataReady@id+1,i2___wmul@multiplier+1
 33962  009A5C  0E00               	movlw	0
 33963  009A5E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 33964  009A60  0E05               	movlw	5
 33965  009A62  6E03               	movwf	i2___wmul@multiplicand^0,c
 33966  009A64  ECD3  F04C         	call	i2___wmul	;wreg free
 33967  009A68  0EBD               	movlw	low (_adcChannels+1)
 33968  009A6A  2401               	addwf	?i2___wmul^0,w,c
 33969  009A6C  6ED9               	movwf	fsr2l,c
 33970  009A6E  0E02               	movlw	high (_adcChannels+1)
 33971  009A70  2002               	addwfc	(?i2___wmul+1)^0,w,c
 33972  009A72  6EDA               	movwf	fsr2h,c
 33973  009A74  50DF               	movf	indf2,w,c
 33974  009A76  0012               	return		;funcret
 33975  009A78                     __end_ofi2_AdcDataReady:
 33976                           	opt callstack 0
 33977                           
 33978 ;; *************** function _isqrt *****************
 33979 ;; Defined at:
 33980 ;;		line 3 in file "../Controller.X/cmath.c"
 33981 ;; Parameters:    Size  Location     Type
 33982 ;;  x               2    0[COMRAM] unsigned short 
 33983 ;; Auto vars:     Size  Location     Type
 33984 ;;  one             2    8[COMRAM] unsigned short 
 33985 ;;  res             2    6[COMRAM] unsigned short 
 33986 ;;  op              2    4[COMRAM] unsigned short 
 33987 ;; Return value:  Size  Location     Type
 33988 ;;                  2    0[COMRAM] unsigned short 
 33989 ;; Registers used:
 33990 ;;		wreg, status,2, status,0
 33991 ;; Tracked objects:
 33992 ;;		On entry : 3F/0
 33993 ;;		On exit  : 3F/0
 33994 ;;		Unchanged: 3F/0
 33995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33997 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33999 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34000 ;;Total ram usage:       10 bytes
 34001 ;; Hardware stack levels used:    1
 34002 ;; This function calls:
 34003 ;;		Nothing
 34004 ;; This function is called by:
 34005 ;;		_MonitorPressureTask
 34006 ;; This function uses a non-reentrant model
 34007 ;;
 34008                           
 34009                           	psect	text252
 34010  0075A0                     __ptext252:
 34011                           	opt callstack 0
 34012  0075A0                     _isqrt:
 34013                           	opt callstack 14
 34014                           
 34015                           ; BSR set to: 0
 34016                           ;../Controller.X/cmath.c: 3: uint16_t isqrt(uint16_t x);../Controller.X/cmath.c: 4: {;..
      +                          /Controller.X/cmath.c: 5:     uint16_t op, res, one;;../Controller.X/cmath.c: 7:     op 
      +                          = x;
 34017                           
 34018                           ;incstack = 0
 34019  0075A0  0060  F004  F005   	movff	isqrt@x,isqrt@op
 34020  0075A6  0060  F008  F006   	movff	isqrt@x+1,isqrt@op+1
 34021                           
 34022                           ; BSR set to: 0
 34023                           ;../Controller.X/cmath.c: 8:     res = 0;
 34024  0075AC  0E00               	movlw	0
 34025  0075AE  6E08               	movwf	(isqrt@res+1)^0,c
 34026  0075B0  0E00               	movlw	0
 34027  0075B2  6E07               	movwf	isqrt@res^0,c
 34028                           
 34029                           ;../Controller.X/cmath.c: 11:     one = 1 << 14;
 34030  0075B4  0E40               	movlw	64
 34031  0075B6  6E0A               	movwf	(isqrt@one+1)^0,c
 34032  0075B8  0E00               	movlw	0
 34033  0075BA  6E09               	movwf	isqrt@one^0,c
 34034                           
 34035                           ;../Controller.X/cmath.c: 12:     while (one > op) one >>= 2;
 34036  0075BC  D006               	goto	i2l13079
 34037  0075BE                     i2l13077:
 34038                           
 34039                           ; BSR set to: 0
 34040  0075BE  90D8               	bcf	status,0,c
 34041  0075C0  320A               	rrcf	(isqrt@one+1)^0,f,c
 34042  0075C2  3209               	rrcf	isqrt@one^0,f,c
 34043  0075C4  90D8               	bcf	status,0,c
 34044  0075C6  320A               	rrcf	(isqrt@one+1)^0,f,c
 34045  0075C8  3209               	rrcf	isqrt@one^0,f,c
 34046  0075CA                     i2l13079:
 34047                           
 34048                           ; BSR set to: 0
 34049  0075CA  5009               	movf	isqrt@one^0,w,c
 34050  0075CC  5C05               	subwf	isqrt@op^0,w,c
 34051  0075CE  500A               	movf	(isqrt@one+1)^0,w,c
 34052  0075D0  5806               	subwfb	(isqrt@op+1)^0,w,c
 34053  0075D2  B0D8               	btfsc	status,0,c
 34054  0075D4  D02D               	goto	i2l6
 34055  0075D6  D7F3               	goto	i2l13077
 34056  0075D8                     i2l13081:
 34057                           
 34058                           ; BSR set to: 0
 34059                           ;../Controller.X/cmath.c: 15:         if (op >= res + one) {
 34060  0075D8  5009               	movf	isqrt@one^0,w,c
 34061  0075DA  2407               	addwf	isqrt@res^0,w,c
 34062  0075DC  6E03               	movwf	??_isqrt^0,c
 34063  0075DE  500A               	movf	(isqrt@one+1)^0,w,c
 34064  0075E0  2008               	addwfc	(isqrt@res+1)^0,w,c
 34065  0075E2  6E04               	movwf	(??_isqrt+1)^0,c
 34066  0075E4  5003               	movf	??_isqrt^0,w,c
 34067  0075E6  5C05               	subwf	isqrt@op^0,w,c
 34068  0075E8  5004               	movf	(??_isqrt+1)^0,w,c
 34069  0075EA  5806               	subwfb	(isqrt@op+1)^0,w,c
 34070  0075EC  A0D8               	btfss	status,0,c
 34071  0075EE  D017               	goto	i2l13085
 34072                           
 34073                           ; BSR set to: 0
 34074                           ;../Controller.X/cmath.c: 16:             op -= res + one;
 34075  0075F0  5009               	movf	isqrt@one^0,w,c
 34076  0075F2  2407               	addwf	isqrt@res^0,w,c
 34077  0075F4  6E03               	movwf	??_isqrt^0,c
 34078  0075F6  500A               	movf	(isqrt@one+1)^0,w,c
 34079  0075F8  2008               	addwfc	(isqrt@res+1)^0,w,c
 34080  0075FA  6E04               	movwf	(??_isqrt+1)^0,c
 34081  0075FC  5003               	movf	??_isqrt^0,w,c
 34082  0075FE  5E05               	subwf	isqrt@op^0,f,c
 34083  007600  5004               	movf	(??_isqrt+1)^0,w,c
 34084  007602  5A06               	subwfb	(isqrt@op+1)^0,f,c
 34085                           
 34086                           ;../Controller.X/cmath.c: 17:             res += one << 1;
 34087  007604  0060  F024  F003   	movff	isqrt@one,??_isqrt
 34088  00760A  0060  F028  F004   	movff	isqrt@one+1,??_isqrt+1
 34089  007610  90D8               	bcf	status,0,c
 34090  007612  3603               	rlcf	??_isqrt^0,f,c
 34091  007614  3604               	rlcf	(??_isqrt+1)^0,f,c
 34092  007616  5003               	movf	??_isqrt^0,w,c
 34093  007618  2607               	addwf	isqrt@res^0,f,c
 34094  00761A  5004               	movf	(??_isqrt+1)^0,w,c
 34095  00761C  2208               	addwfc	(isqrt@res+1)^0,f,c
 34096  00761E                     i2l13085:
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;../Controller.X/cmath.c: 19:         res >>= 1;
 34100  00761E  90D8               	bcf	status,0,c
 34101  007620  3208               	rrcf	(isqrt@res+1)^0,f,c
 34102  007622  3207               	rrcf	isqrt@res^0,f,c
 34103                           
 34104                           ; BSR set to: 0
 34105                           ;../Controller.X/cmath.c: 20:         one >>= 2;
 34106  007624  90D8               	bcf	status,0,c
 34107  007626  320A               	rrcf	(isqrt@one+1)^0,f,c
 34108  007628  3209               	rrcf	isqrt@one^0,f,c
 34109  00762A  90D8               	bcf	status,0,c
 34110  00762C  320A               	rrcf	(isqrt@one+1)^0,f,c
 34111  00762E  3209               	rrcf	isqrt@one^0,f,c
 34112  007630                     i2l6:
 34113                           
 34114                           ; BSR set to: 0
 34115                           ;../Controller.X/cmath.c: 14:     while (one != 0) {
 34116  007630  5009               	movf	isqrt@one^0,w,c
 34117  007632  100A               	iorwf	(isqrt@one+1)^0,w,c
 34118  007634  A4D8               	btfss	status,2,c
 34119  007636  D7D0               	goto	i2l13081
 34120                           
 34121                           ; BSR set to: 0
 34122                           ;../Controller.X/cmath.c: 22:     return res;
 34123  007638  0060  F01C  F001   	movff	isqrt@res,?_isqrt
 34124  00763E  0060  F020  F002   	movff	isqrt@res+1,?_isqrt+1
 34125                           
 34126                           ; BSR set to: 0
 34127  007644  0012               	return		;funcret
 34128  007646                     __end_of_isqrt:
 34129                           	opt callstack 0
 34130                           
 34131 ;; *************** function ___lwdiv *****************
 34132 ;; Defined at:
 34133 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
 34134 ;; Parameters:    Size  Location     Type
 34135 ;;  dividend        2    0[COMRAM] unsigned int 
 34136 ;;  divisor         2    2[COMRAM] unsigned int 
 34137 ;; Auto vars:     Size  Location     Type
 34138 ;;  quotient        2    4[COMRAM] unsigned int 
 34139 ;;  counter         1    6[COMRAM] unsigned char 
 34140 ;; Return value:  Size  Location     Type
 34141 ;;                  2    0[COMRAM] unsigned int 
 34142 ;; Registers used:
 34143 ;;		wreg, status,2, status,0
 34144 ;; Tracked objects:
 34145 ;;		On entry : 3F/0
 34146 ;;		On exit  : 3F/0
 34147 ;;		Unchanged: 3F/0
 34148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34150 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34153 ;;Total ram usage:        7 bytes
 34154 ;; Hardware stack levels used:    1
 34155 ;; This function calls:
 34156 ;;		Nothing
 34157 ;; This function is called by:
 34158 ;;		_MonitorPressureTask
 34159 ;; This function uses a non-reentrant model
 34160 ;;
 34161                           
 34162                           	psect	text253
 34163  008C90                     __ptext253:
 34164                           	opt callstack 0
 34165  008C90                     ___lwdiv:
 34166                           	opt callstack 14
 34167                           
 34168                           ; BSR set to: 0
 34169                           
 34170                           ; BSR set to: 0
 34171                           ;incstack = 0
 34172  008C90  0E00               	movlw	0
 34173  008C92  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 34174  008C94  0E00               	movlw	0
 34175  008C96  6E05               	movwf	___lwdiv@quotient^0,c
 34176                           
 34177                           ; BSR set to: 0
 34178  008C98  5003               	movf	___lwdiv@divisor^0,w,c
 34179  008C9A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 34180  008C9C  B4D8               	btfsc	status,2,c
 34181  008C9E  D01C               	goto	i2l4099
 34182                           
 34183                           ; BSR set to: 0
 34184  008CA0  0E01               	movlw	1
 34185  008CA2  6E07               	movwf	___lwdiv@counter^0,c
 34186  008CA4  D004               	goto	i2l13743
 34187  008CA6                     i2l13741:
 34188                           
 34189                           ; BSR set to: 0
 34190  008CA6  90D8               	bcf	status,0,c
 34191  008CA8  3603               	rlcf	___lwdiv@divisor^0,f,c
 34192  008CAA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 34193  008CAC  2A07               	incf	___lwdiv@counter^0,f,c
 34194  008CAE                     i2l13743:
 34195                           
 34196                           ; BSR set to: 0
 34197  008CAE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 34198  008CB0  D7FA               	goto	i2l13741
 34199  008CB2                     i2u1168_40:
 34200                           
 34201                           ; BSR set to: 0
 34202  008CB2  90D8               	bcf	status,0,c
 34203  008CB4  3605               	rlcf	___lwdiv@quotient^0,f,c
 34204  008CB6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 34205                           
 34206                           ; BSR set to: 0
 34207  008CB8  5003               	movf	___lwdiv@divisor^0,w,c
 34208  008CBA  5C01               	subwf	___lwdiv@dividend^0,w,c
 34209  008CBC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 34210  008CBE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 34211  008CC0  A0D8               	btfss	status,0,c
 34212  008CC2  D005               	goto	i2l13753
 34213                           
 34214                           ; BSR set to: 0
 34215  008CC4  5003               	movf	___lwdiv@divisor^0,w,c
 34216  008CC6  5E01               	subwf	___lwdiv@dividend^0,f,c
 34217  008CC8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 34218  008CCA  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 34219                           
 34220                           ; BSR set to: 0
 34221  008CCC  8005               	bsf	___lwdiv@quotient^0,0,c
 34222  008CCE                     i2l13753:
 34223                           
 34224                           ; BSR set to: 0
 34225  008CCE  90D8               	bcf	status,0,c
 34226  008CD0  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 34227  008CD2  3203               	rrcf	___lwdiv@divisor^0,f,c
 34228                           
 34229                           ; BSR set to: 0
 34230  008CD4  2E07               	decfsz	___lwdiv@counter^0,f,c
 34231  008CD6  D7ED               	goto	i2u1168_40
 34232  008CD8                     i2l4099:
 34233                           
 34234                           ; BSR set to: 0
 34235  008CD8  0060  F014  F001   	movff	___lwdiv@quotient,?___lwdiv
 34236  008CDE  0060  F018  F002   	movff	___lwdiv@quotient+1,?___lwdiv+1
 34237                           
 34238                           ; BSR set to: 0
 34239  008CE4  0012               	return		;funcret
 34240  008CE6                     __end_of___lwdiv:
 34241                           	opt callstack 0
 34242                           
 34243 ;; *************** function ___lldiv *****************
 34244 ;; Defined at:
 34245 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/__lldiv.c"
 34246 ;; Parameters:    Size  Location     Type
 34247 ;;  dividend        4    0[COMRAM] unsigned long 
 34248 ;;  divisor         4    4[COMRAM] unsigned long 
 34249 ;; Auto vars:     Size  Location     Type
 34250 ;;  quotient        4    8[COMRAM] unsigned long 
 34251 ;;  counter         1   12[COMRAM] unsigned char 
 34252 ;; Return value:  Size  Location     Type
 34253 ;;                  4    0[COMRAM] unsigned long 
 34254 ;; Registers used:
 34255 ;;		wreg, status,2, status,0
 34256 ;; Tracked objects:
 34257 ;;		On entry : 3F/2
 34258 ;;		On exit  : 3F/2
 34259 ;;		Unchanged: 3F/0
 34260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34261 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34262 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34264 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34265 ;;Total ram usage:       13 bytes
 34266 ;; Hardware stack levels used:    1
 34267 ;; This function calls:
 34268 ;;		Nothing
 34269 ;; This function is called by:
 34270 ;;		_MonitorPressureTask
 34271 ;; This function uses a non-reentrant model
 34272 ;;
 34273                           
 34274                           	psect	text254
 34275  007EB0                     __ptext254:
 34276                           	opt callstack 0
 34277  007EB0                     ___lldiv:
 34278                           	opt callstack 14
 34279                           
 34280                           ; BSR set to: 2
 34281                           
 34282                           ; BSR set to: 0
 34283                           ;incstack = 0
 34284  007EB0  0E00               	movlw	0
 34285  007EB2  6E09               	movwf	___lldiv@quotient^0,c
 34286  007EB4  0E00               	movlw	0
 34287  007EB6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 34288  007EB8  0E00               	movlw	0
 34289  007EBA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 34290  007EBC  0E00               	movlw	0
 34291  007EBE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 34292                           
 34293                           ; BSR set to: 2
 34294  007EC0  5005               	movf	___lldiv@divisor^0,w,c
 34295  007EC2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 34296  007EC4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 34297  007EC6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 34298  007EC8  B4D8               	btfsc	status,2,c
 34299  007ECA  D02A               	goto	i2l3635
 34300                           
 34301                           ; BSR set to: 2
 34302  007ECC  0E01               	movlw	1
 34303  007ECE  6E0D               	movwf	___lldiv@counter^0,c
 34304  007ED0  D006               	goto	i2l13721
 34305  007ED2                     i2l13719:
 34306                           
 34307                           ; BSR set to: 2
 34308  007ED2  90D8               	bcf	status,0,c
 34309  007ED4  3605               	rlcf	___lldiv@divisor^0,f,c
 34310  007ED6  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 34311  007ED8  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 34312  007EDA  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 34313  007EDC  2A0D               	incf	___lldiv@counter^0,f,c
 34314  007EDE                     i2l13721:
 34315                           
 34316                           ; BSR set to: 2
 34317  007EDE  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 34318  007EE0  D7F8               	goto	i2l13719
 34319  007EE2                     i2u1165_40:
 34320                           
 34321                           ; BSR set to: 2
 34322  007EE2  90D8               	bcf	status,0,c
 34323  007EE4  3609               	rlcf	___lldiv@quotient^0,f,c
 34324  007EE6  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 34325  007EE8  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 34326  007EEA  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 34327                           
 34328                           ; BSR set to: 2
 34329  007EEC  5005               	movf	___lldiv@divisor^0,w,c
 34330  007EEE  5C01               	subwf	___lldiv@dividend^0,w,c
 34331  007EF0  5006               	movf	(___lldiv@divisor+1)^0,w,c
 34332  007EF2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 34333  007EF4  5007               	movf	(___lldiv@divisor+2)^0,w,c
 34334  007EF6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 34335  007EF8  5008               	movf	(___lldiv@divisor+3)^0,w,c
 34336  007EFA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 34337  007EFC  A0D8               	btfss	status,0,c
 34338  007EFE  D009               	goto	i2l13731
 34339                           
 34340                           ; BSR set to: 2
 34341  007F00  5005               	movf	___lldiv@divisor^0,w,c
 34342  007F02  5E01               	subwf	___lldiv@dividend^0,f,c
 34343  007F04  5006               	movf	(___lldiv@divisor+1)^0,w,c
 34344  007F06  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 34345  007F08  5007               	movf	(___lldiv@divisor+2)^0,w,c
 34346  007F0A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 34347  007F0C  5008               	movf	(___lldiv@divisor+3)^0,w,c
 34348  007F0E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 34349                           
 34350                           ; BSR set to: 2
 34351  007F10  8009               	bsf	___lldiv@quotient^0,0,c
 34352  007F12                     i2l13731:
 34353                           
 34354                           ; BSR set to: 2
 34355  007F12  90D8               	bcf	status,0,c
 34356  007F14  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 34357  007F16  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 34358  007F18  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 34359  007F1A  3205               	rrcf	___lldiv@divisor^0,f,c
 34360                           
 34361                           ; BSR set to: 2
 34362  007F1C  2E0D               	decfsz	___lldiv@counter^0,f,c
 34363  007F1E  D7E1               	goto	i2u1165_40
 34364  007F20                     i2l3635:
 34365                           
 34366                           ; BSR set to: 2
 34367  007F20  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
 34368  007F26  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
 34369  007F2C  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
 34370  007F32  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
 34371                           
 34372                           ; BSR set to: 2
 34373  007F38  0012               	return		;funcret
 34374  007F3A                     __end_of___lldiv:
 34375                           	opt callstack 0
 34376                           
 34377 ;; *************** function _SetVBelowMinAlarm *****************
 34378 ;; Defined at:
 34379 ;;		line 244 in file "alarm.c"
 34380 ;; Parameters:    Size  Location     Type
 34381 ;;		None
 34382 ;; Auto vars:     Size  Location     Type
 34383 ;;		None
 34384 ;; Return value:  Size  Location     Type
 34385 ;;                  1    wreg      void 
 34386 ;; Registers used:
 34387 ;;		wreg, status,2
 34388 ;; Tracked objects:
 34389 ;;		On entry : 3F/2
 34390 ;;		On exit  : 3F/2
 34391 ;;		Unchanged: 0/0
 34392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34397 ;;Total ram usage:        0 bytes
 34398 ;; Hardware stack levels used:    1
 34399 ;; This function calls:
 34400 ;;		Nothing
 34401 ;; This function is called by:
 34402 ;;		_MonitorPressureTask
 34403 ;; This function uses a non-reentrant model
 34404 ;;
 34405                           
 34406                           	psect	text255
 34407  00A5EC                     __ptext255:
 34408                           	opt callstack 0
 34409  00A5EC                     _SetVBelowMinAlarm:
 34410                           	opt callstack 14
 34411                           
 34412                           ; BSR set to: 2
 34413                           
 34414                           ; BSR set to: 2
 34415                           ;incstack = 0
 34416  00A5EC  0E01               	movlw	1
 34417  00A5EE  6FA6               	movwf	_vBelowMinAlarm& (0+255),b
 34418                           
 34419                           ; BSR set to: 2
 34420  00A5F0  0012               	return		;funcret
 34421  00A5F2                     __end_of_SetVBelowMinAlarm:
 34422                           	opt callstack 0
 34423                           
 34424 ;; *************** function _SetVAboveMaxAlarm *****************
 34425 ;; Defined at:
 34426 ;;		line 243 in file "alarm.c"
 34427 ;; Parameters:    Size  Location     Type
 34428 ;;		None
 34429 ;; Auto vars:     Size  Location     Type
 34430 ;;		None
 34431 ;; Return value:  Size  Location     Type
 34432 ;;                  1    wreg      void 
 34433 ;; Registers used:
 34434 ;;		wreg, status,2
 34435 ;; Tracked objects:
 34436 ;;		On entry : 3F/1
 34437 ;;		On exit  : 3F/2
 34438 ;;		Unchanged: 0/0
 34439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34444 ;;Total ram usage:        0 bytes
 34445 ;; Hardware stack levels used:    1
 34446 ;; This function calls:
 34447 ;;		Nothing
 34448 ;; This function is called by:
 34449 ;;		_MonitorPressureTask
 34450 ;; This function uses a non-reentrant model
 34451 ;;
 34452                           
 34453                           	psect	text256
 34454  00A4F8                     __ptext256:
 34455                           	opt callstack 0
 34456  00A4F8                     _SetVAboveMaxAlarm:
 34457                           	opt callstack 14
 34458                           
 34459                           ; BSR set to: 1
 34460                           
 34461                           ; BSR set to: 2
 34462                           ;incstack = 0
 34463  00A4F8  0E01               	movlw	1
 34464  00A4FA  0102               	movlb	2	; () banked
 34465  00A4FC  6FA5               	movwf	_vAboveMaxAlarm& (0+255),b
 34466                           
 34467                           ; BSR set to: 2
 34468  00A4FE  0012               	return		;funcret
 34469  00A500                     __end_of_SetVAboveMaxAlarm:
 34470                           	opt callstack 0
 34471                           
 34472 ;; *************** function _SetTdiTooLongAlarm *****************
 34473 ;; Defined at:
 34474 ;;		line 241 in file "alarm.c"
 34475 ;; Parameters:    Size  Location     Type
 34476 ;;		None
 34477 ;; Auto vars:     Size  Location     Type
 34478 ;;		None
 34479 ;; Return value:  Size  Location     Type
 34480 ;;                  1    wreg      void 
 34481 ;; Registers used:
 34482 ;;		wreg, status,2
 34483 ;; Tracked objects:
 34484 ;;		On entry : 3F/1
 34485 ;;		On exit  : 3F/2
 34486 ;;		Unchanged: 0/0
 34487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34492 ;;Total ram usage:        0 bytes
 34493 ;; Hardware stack levels used:    1
 34494 ;; This function calls:
 34495 ;;		Nothing
 34496 ;; This function is called by:
 34497 ;;		_MonitorPressureTask
 34498 ;; This function uses a non-reentrant model
 34499 ;;
 34500                           
 34501                           	psect	text257
 34502  00A500                     __ptext257:
 34503                           	opt callstack 0
 34504  00A500                     _SetTdiTooLongAlarm:
 34505                           	opt callstack 14
 34506                           
 34507                           ; BSR set to: 1
 34508                           
 34509                           ; BSR set to: 2
 34510                           ;incstack = 0
 34511  00A500  0E01               	movlw	1
 34512  00A502  0102               	movlb	2	; () banked
 34513  00A504  6FA8               	movwf	_tdiTooLongAlarm& (0+255),b
 34514                           
 34515                           ; BSR set to: 2
 34516  00A506  0012               	return		;funcret
 34517  00A508                     __end_of_SetTdiTooLongAlarm:
 34518                           	opt callstack 0
 34519                           
 34520 ;; *************** function _SetTdeTooLongAlarm *****************
 34521 ;; Defined at:
 34522 ;;		line 242 in file "alarm.c"
 34523 ;; Parameters:    Size  Location     Type
 34524 ;;		None
 34525 ;; Auto vars:     Size  Location     Type
 34526 ;;		None
 34527 ;; Return value:  Size  Location     Type
 34528 ;;                  1    wreg      void 
 34529 ;; Registers used:
 34530 ;;		wreg, status,2
 34531 ;; Tracked objects:
 34532 ;;		On entry : 3F/1
 34533 ;;		On exit  : 3F/2
 34534 ;;		Unchanged: 0/0
 34535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34540 ;;Total ram usage:        0 bytes
 34541 ;; Hardware stack levels used:    1
 34542 ;; This function calls:
 34543 ;;		Nothing
 34544 ;; This function is called by:
 34545 ;;		_MonitorPressureTask
 34546 ;; This function uses a non-reentrant model
 34547 ;;
 34548                           
 34549                           	psect	text258
 34550  00A508                     __ptext258:
 34551                           	opt callstack 0
 34552  00A508                     _SetTdeTooLongAlarm:
 34553                           	opt callstack 14
 34554                           
 34555                           ; BSR set to: 1
 34556                           
 34557                           ; BSR set to: 2
 34558                           ;incstack = 0
 34559  00A508  0E01               	movlw	1
 34560  00A50A  0102               	movlb	2	; () banked
 34561  00A50C  6FA7               	movwf	_tdeTooLongAlarm& (0+255),b
 34562                           
 34563                           ; BSR set to: 2
 34564  00A50E  0012               	return		;funcret
 34565  00A510                     __end_of_SetTdeTooLongAlarm:
 34566                           	opt callstack 0
 34567                           
 34568 ;; *************** function _SetIPBelowSetAlarm *****************
 34569 ;; Defined at:
 34570 ;;		line 239 in file "alarm.c"
 34571 ;; Parameters:    Size  Location     Type
 34572 ;;		None
 34573 ;; Auto vars:     Size  Location     Type
 34574 ;;		None
 34575 ;; Return value:  Size  Location     Type
 34576 ;;                  1    wreg      void 
 34577 ;; Registers used:
 34578 ;;		wreg, status,2, status,0
 34579 ;; Tracked objects:
 34580 ;;		On entry : 3F/1
 34581 ;;		On exit  : 3F/0
 34582 ;;		Unchanged: 0/0
 34583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34588 ;;Total ram usage:        0 bytes
 34589 ;; Hardware stack levels used:    1
 34590 ;; This function calls:
 34591 ;;		Nothing
 34592 ;; This function is called by:
 34593 ;;		_MonitorPressureTask
 34594 ;; This function uses a non-reentrant model
 34595 ;;
 34596                           
 34597                           	psect	text259
 34598  009DD6                     __ptext259:
 34599                           	opt callstack 0
 34600  009DD6                     _SetIPBelowSetAlarm:
 34601                           	opt callstack 14
 34602                           
 34603                           ; BSR set to: 1
 34604                           
 34605                           ; BSR set to: 2
 34606                           ;incstack = 0
 34607  009DD6  0100               	movlb	0	; () banked
 34608  009DD8  4BE4               	infsnz	_ipBelowSetAlarm& (0+255),f,b
 34609  009DDA  2BE5               	incf	(_ipBelowSetAlarm+1)& (0+255),f,b
 34610                           
 34611                           ; BSR set to: 0
 34612  009DDC  BFE5               	btfsc	(_ipBelowSetAlarm+1)& (0+255),7,b
 34613  009DDE  0012               	return	
 34614  009DE0  51E5               	movf	(_ipBelowSetAlarm+1)& (0+255),w,b
 34615  009DE2  E104               	bnz	i2u1151_40
 34616  009DE4  0E07               	movlw	7
 34617  009DE6  5DE4               	subwf	_ipBelowSetAlarm& (0+255),w,b
 34618  009DE8  A0D8               	btfss	status,0,c
 34619  009DEA  0012               	return	
 34620  009DEC                     i2u1151_40:
 34621                           
 34622                           ; BSR set to: 0
 34623  009DEC  0E00               	movlw	0
 34624  009DEE  6FE5               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 34625  009DF0  0E06               	movlw	6
 34626  009DF2  6FE4               	movwf	_ipBelowSetAlarm& (0+255),b
 34627                           
 34628                           ; BSR set to: 0
 34629  009DF4  0012               	return		;funcret
 34630  009DF6                     __end_of_SetIPBelowSetAlarm:
 34631                           	opt callstack 0
 34632                           
 34633 ;; *************** function _SetIPAboveSetAlarm *****************
 34634 ;; Defined at:
 34635 ;;		line 240 in file "alarm.c"
 34636 ;; Parameters:    Size  Location     Type
 34637 ;;		None
 34638 ;; Auto vars:     Size  Location     Type
 34639 ;;		None
 34640 ;; Return value:  Size  Location     Type
 34641 ;;                  1    wreg      void 
 34642 ;; Registers used:
 34643 ;;		wreg, status,2, status,0
 34644 ;; Tracked objects:
 34645 ;;		On entry : 3F/1
 34646 ;;		On exit  : 3F/0
 34647 ;;		Unchanged: 0/0
 34648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34653 ;;Total ram usage:        0 bytes
 34654 ;; Hardware stack levels used:    1
 34655 ;; This function calls:
 34656 ;;		Nothing
 34657 ;; This function is called by:
 34658 ;;		_MonitorPressureTask
 34659 ;; This function uses a non-reentrant model
 34660 ;;
 34661                           
 34662                           	psect	text260
 34663  009DF6                     __ptext260:
 34664                           	opt callstack 0
 34665  009DF6                     _SetIPAboveSetAlarm:
 34666                           	opt callstack 14
 34667                           
 34668                           ; BSR set to: 1
 34669                           
 34670                           ; BSR set to: 0
 34671                           ;incstack = 0
 34672  009DF6  0100               	movlb	0	; () banked
 34673  009DF8  4BE2               	infsnz	_ipAboveSetAlarm& (0+255),f,b
 34674  009DFA  2BE3               	incf	(_ipAboveSetAlarm+1)& (0+255),f,b
 34675                           
 34676                           ; BSR set to: 0
 34677  009DFC  BFE3               	btfsc	(_ipAboveSetAlarm+1)& (0+255),7,b
 34678  009DFE  0012               	return	
 34679  009E00  51E3               	movf	(_ipAboveSetAlarm+1)& (0+255),w,b
 34680  009E02  E104               	bnz	i2u1152_40
 34681  009E04  0E07               	movlw	7
 34682  009E06  5DE2               	subwf	_ipAboveSetAlarm& (0+255),w,b
 34683  009E08  A0D8               	btfss	status,0,c
 34684  009E0A  0012               	return	
 34685  009E0C                     i2u1152_40:
 34686                           
 34687                           ; BSR set to: 0
 34688  009E0C  0E00               	movlw	0
 34689  009E0E  6FE3               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 34690  009E10  0E06               	movlw	6
 34691  009E12  6FE2               	movwf	_ipAboveSetAlarm& (0+255),b
 34692                           
 34693                           ; BSR set to: 0
 34694  009E14  0012               	return		;funcret
 34695  009E16                     __end_of_SetIPAboveSetAlarm:
 34696                           	opt callstack 0
 34697                           
 34698 ;; *************** function _SetGasFailureAlarm *****************
 34699 ;; Defined at:
 34700 ;;		line 230 in file "alarm.c"
 34701 ;; Parameters:    Size  Location     Type
 34702 ;;		None
 34703 ;; Auto vars:     Size  Location     Type
 34704 ;;		None
 34705 ;; Return value:  Size  Location     Type
 34706 ;;                  1    wreg      void 
 34707 ;; Registers used:
 34708 ;;		wreg, status,2
 34709 ;; Tracked objects:
 34710 ;;		On entry : 3F/0
 34711 ;;		On exit  : 3F/2
 34712 ;;		Unchanged: 0/0
 34713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34718 ;;Total ram usage:        0 bytes
 34719 ;; Hardware stack levels used:    1
 34720 ;; This function calls:
 34721 ;;		Nothing
 34722 ;; This function is called by:
 34723 ;;		_MonitorPressureTask
 34724 ;; This function uses a non-reentrant model
 34725 ;;
 34726                           
 34727                           	psect	text261
 34728  00A510                     __ptext261:
 34729                           	opt callstack 0
 34730  00A510                     _SetGasFailureAlarm:
 34731                           	opt callstack 14
 34732                           
 34733                           ; BSR set to: 0
 34734                           
 34735                           ; BSR set to: 0
 34736                           ;incstack = 0
 34737  00A510  0E01               	movlw	1
 34738  00A512  0102               	movlb	2	; () banked
 34739  00A514  6FAF               	movwf	_gasFailureAlarm& (0+255),b
 34740                           
 34741                           ; BSR set to: 2
 34742  00A516  0012               	return		;funcret
 34743  00A518                     __end_of_SetGasFailureAlarm:
 34744                           	opt callstack 0
 34745                           
 34746 ;; *************** function _SetEPBelowSetAlarm *****************
 34747 ;; Defined at:
 34748 ;;		line 237 in file "alarm.c"
 34749 ;; Parameters:    Size  Location     Type
 34750 ;;		None
 34751 ;; Auto vars:     Size  Location     Type
 34752 ;;		None
 34753 ;; Return value:  Size  Location     Type
 34754 ;;                  1    wreg      void 
 34755 ;; Registers used:
 34756 ;;		wreg, status,2, status,0
 34757 ;; Tracked objects:
 34758 ;;		On entry : 3F/0
 34759 ;;		On exit  : 3F/0
 34760 ;;		Unchanged: 0/0
 34761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34766 ;;Total ram usage:        0 bytes
 34767 ;; Hardware stack levels used:    1
 34768 ;; This function calls:
 34769 ;;		Nothing
 34770 ;; This function is called by:
 34771 ;;		_MonitorPressureTask
 34772 ;; This function uses a non-reentrant model
 34773 ;;
 34774                           
 34775                           	psect	text262
 34776  009E92                     __ptext262:
 34777                           	opt callstack 0
 34778  009E92                     _SetEPBelowSetAlarm:
 34779                           	opt callstack 14
 34780                           
 34781                           ; BSR set to: 0
 34782                           
 34783                           ; BSR set to: 2
 34784                           ;incstack = 0
 34785  009E92  4BE8               	infsnz	_epBelowSetAlarm& (0+255),f,b
 34786  009E94  2BE9               	incf	(_epBelowSetAlarm+1)& (0+255),f,b
 34787                           
 34788                           ; BSR set to: 0
 34789  009E96  BFE9               	btfsc	(_epBelowSetAlarm+1)& (0+255),7,b
 34790  009E98  0012               	return	
 34791  009E9A  51E9               	movf	(_epBelowSetAlarm+1)& (0+255),w,b
 34792  009E9C  E104               	bnz	i2u1149_40
 34793  009E9E  0E07               	movlw	7
 34794  009EA0  5DE8               	subwf	_epBelowSetAlarm& (0+255),w,b
 34795  009EA2  A0D8               	btfss	status,0,c
 34796  009EA4  0012               	return	
 34797  009EA6                     i2u1149_40:
 34798                           
 34799                           ; BSR set to: 0
 34800  009EA6  0E00               	movlw	0
 34801  009EA8  6FE9               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 34802  009EAA  0E06               	movlw	6
 34803  009EAC  6FE8               	movwf	_epBelowSetAlarm& (0+255),b
 34804                           
 34805                           ; BSR set to: 0
 34806  009EAE  0012               	return		;funcret
 34807  009EB0                     __end_of_SetEPBelowSetAlarm:
 34808                           	opt callstack 0
 34809                           
 34810 ;; *************** function _SetEPAboveSetAlarm *****************
 34811 ;; Defined at:
 34812 ;;		line 238 in file "alarm.c"
 34813 ;; Parameters:    Size  Location     Type
 34814 ;;		None
 34815 ;; Auto vars:     Size  Location     Type
 34816 ;;		None
 34817 ;; Return value:  Size  Location     Type
 34818 ;;                  1    wreg      void 
 34819 ;; Registers used:
 34820 ;;		wreg, status,2, status,0
 34821 ;; Tracked objects:
 34822 ;;		On entry : 3F/0
 34823 ;;		On exit  : 3F/0
 34824 ;;		Unchanged: 0/0
 34825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34830 ;;Total ram usage:        0 bytes
 34831 ;; Hardware stack levels used:    1
 34832 ;; This function calls:
 34833 ;;		Nothing
 34834 ;; This function is called by:
 34835 ;;		_MonitorPressureTask
 34836 ;; This function uses a non-reentrant model
 34837 ;;
 34838                           
 34839                           	psect	text263
 34840  009EB0                     __ptext263:
 34841                           	opt callstack 0
 34842  009EB0                     _SetEPAboveSetAlarm:
 34843                           	opt callstack 14
 34844                           
 34845                           ; BSR set to: 0
 34846                           
 34847                           ; BSR set to: 0
 34848                           ;incstack = 0
 34849  009EB0  4BE6               	infsnz	_epAboveSetAlarm& (0+255),f,b
 34850  009EB2  2BE7               	incf	(_epAboveSetAlarm+1)& (0+255),f,b
 34851                           
 34852                           ; BSR set to: 0
 34853  009EB4  BFE7               	btfsc	(_epAboveSetAlarm+1)& (0+255),7,b
 34854  009EB6  0012               	return	
 34855  009EB8  51E7               	movf	(_epAboveSetAlarm+1)& (0+255),w,b
 34856  009EBA  E104               	bnz	i2u1150_40
 34857  009EBC  0E07               	movlw	7
 34858  009EBE  5DE6               	subwf	_epAboveSetAlarm& (0+255),w,b
 34859  009EC0  A0D8               	btfss	status,0,c
 34860  009EC2  0012               	return	
 34861  009EC4                     i2u1150_40:
 34862                           
 34863                           ; BSR set to: 0
 34864  009EC4  0E00               	movlw	0
 34865  009EC6  6FE7               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 34866  009EC8  0E06               	movlw	6
 34867  009ECA  6FE6               	movwf	_epAboveSetAlarm& (0+255),b
 34868                           
 34869                           ; BSR set to: 0
 34870  009ECC  0012               	return		;funcret
 34871  009ECE                     __end_of_SetEPAboveSetAlarm:
 34872                           	opt callstack 0
 34873                           
 34874 ;; *************** function _SetCircuitFailureAlarm *****************
 34875 ;; Defined at:
 34876 ;;		line 234 in file "alarm.c"
 34877 ;; Parameters:    Size  Location     Type
 34878 ;;		None
 34879 ;; Auto vars:     Size  Location     Type
 34880 ;;		None
 34881 ;; Return value:  Size  Location     Type
 34882 ;;                  1    wreg      void 
 34883 ;; Registers used:
 34884 ;;		wreg, status,2
 34885 ;; Tracked objects:
 34886 ;;		On entry : 3F/2
 34887 ;;		On exit  : 3F/2
 34888 ;;		Unchanged: 0/0
 34889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34894 ;;Total ram usage:        0 bytes
 34895 ;; Hardware stack levels used:    1
 34896 ;; This function calls:
 34897 ;;		Nothing
 34898 ;; This function is called by:
 34899 ;;		_MonitorPressureTask
 34900 ;; This function uses a non-reentrant model
 34901 ;;
 34902                           
 34903                           	psect	text264
 34904  00A5F2                     __ptext264:
 34905                           	opt callstack 0
 34906  00A5F2                     _SetCircuitFailureAlarm:
 34907                           	opt callstack 14
 34908                           
 34909                           ; BSR set to: 2
 34910                           
 34911                           ; BSR set to: 0
 34912                           ;incstack = 0
 34913  00A5F2  0E01               	movlw	1
 34914  00A5F4  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 34915                           
 34916                           ; BSR set to: 2
 34917  00A5F6  0012               	return		;funcret
 34918  00A5F8                     __end_of_SetCircuitFailureAlarm:
 34919                           	opt callstack 0
 34920                           
 34921 ;; *************** function _GetPressure_mbar02 *****************
 34922 ;; Defined at:
 34923 ;;		line 772 in file "monitor.c"
 34924 ;; Parameters:    Size  Location     Type
 34925 ;;		None
 34926 ;; Auto vars:     Size  Location     Type
 34927 ;;		None
 34928 ;; Return value:  Size  Location     Type
 34929 ;;                  2   42[COMRAM] short 
 34930 ;; Registers used:
 34931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34932 ;; Tracked objects:
 34933 ;;		On entry : 3F/1
 34934 ;;		On exit  : 0/0
 34935 ;;		Unchanged: 0/0
 34936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34940 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34941 ;;Total ram usage:        4 bytes
 34942 ;; Hardware stack levels used:    1
 34943 ;; Hardware stack levels required when called:    3
 34944 ;; This function calls:
 34945 ;;		i2_GetPressure_pa
 34946 ;;		i2___awdiv
 34947 ;; This function is called by:
 34948 ;;		_MonitorPressureTask
 34949 ;; This function uses a non-reentrant model
 34950 ;;
 34951                           
 34952                           	psect	text265
 34953  00962E                     __ptext265:
 34954                           	opt callstack 0
 34955  00962E                     _GetPressure_mbar02:
 34956                           	opt callstack 11
 34957                           
 34958                           ; BSR set to: 1
 34959                           ;monitor.c: 774:     return GetPressure_pa()/20;
 34960                           
 34961                           ; BSR set to: 2
 34962                           ;incstack = 0
 34963  00962E  EC76  F025         	call	i2_GetPressure_pa	;wreg free
 34964  009632  0060  F06C  F02D   	movff	?i2_GetPressure_pa,_GetPressure_mbar02$7129
 34965  009638  0060  F070  F02E   	movff	?i2_GetPressure_pa+1,_GetPressure_mbar02$7129+1
 34966                           
 34967                           ;monitor.c: 774:     return GetPressure_pa()/20;
 34968  00963E  0060  F0B4  F007   	movff	_GetPressure_mbar02$7129,i2___awdiv@dividend
 34969  009644  0060  F0B8  F008   	movff	_GetPressure_mbar02$7129+1,i2___awdiv@dividend+1
 34970  00964A  0E00               	movlw	0
 34971  00964C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34972  00964E  0E14               	movlw	20
 34973  009650  6E09               	movwf	i2___awdiv@divisor^0,c
 34974  009652  ECE1  F03F         	call	i2___awdiv	;wreg free
 34975  009656  0060  F01C  F02B   	movff	?i2___awdiv,?_GetPressure_mbar02
 34976  00965C  0060  F020  F02C   	movff	?i2___awdiv+1,?_GetPressure_mbar02+1
 34977  009662  0012               	return		;funcret
 34978  009664                     __end_of_GetPressure_mbar02:
 34979                           	opt callstack 0
 34980                           
 34981 ;; *************** function _DisplayCalibrate *****************
 34982 ;; Defined at:
 34983 ;;		line 56 in file "display.c"
 34984 ;; Parameters:    Size  Location     Type
 34985 ;;  pr              2   51[BANK0 ] short 
 34986 ;;  off             2   53[BANK0 ] short 
 34987 ;;  prv             2   55[BANK0 ] short 
 34988 ;;  offv            2   57[BANK0 ] short 
 34989 ;; Auto vars:     Size  Location     Type
 34990 ;;		None
 34991 ;; Return value:  Size  Location     Type
 34992 ;;                  1    wreg      void 
 34993 ;; Registers used:
 34994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34995 ;; Tracked objects:
 34996 ;;		On entry : 0/2
 34997 ;;		On exit  : 3F/0
 34998 ;;		Unchanged: 0/0
 34999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35000 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35003 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35004 ;;Total ram usage:        8 bytes
 35005 ;; Hardware stack levels used:    1
 35006 ;; Hardware stack levels required when called:    9
 35007 ;; This function calls:
 35008 ;;		i2_sprintf
 35009 ;; This function is called by:
 35010 ;;		_MonitorPressureTask
 35011 ;; This function uses a non-reentrant model
 35012 ;;
 35013                           
 35014                           	psect	text266
 35015  0096CC                     __ptext266:
 35016                           	opt callstack 0
 35017  0096CC                     _DisplayCalibrate:
 35018                           	opt callstack 5
 35019                           
 35020                           ;display.c: 57:     calibrate=1;
 35021                           
 35022                           ;incstack = 0
 35023  0096CC  0E01               	movlw	1
 35024  0096CE  0100               	movlb	0	; () banked
 35025  0096D0  6FFF               	movwf	_calibrate& (0+255),b
 35026                           
 35027                           ; BSR set to: 0
 35028                           ;display.c: 58:     sprintf(msg4, "Cal: %4d - %4d", off, offv);
 35029  0096D2  0EA9               	movlw	low _msg4
 35030  0096D4  6F77               	movwf	i2sprintf@s& (0+255),b
 35031  0096D6  0E03               	movlw	high _msg4
 35032  0096D8  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 35033  0096DA  0E3E               	movlw	low STR_7
 35034  0096DC  6F79               	movwf	i2sprintf@fmt& (0+255),b
 35035  0096DE  0EFF               	movlw	high STR_7
 35036  0096E0  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 35037  0096E2  0060  F254  F07B   	movff	DisplayCalibrate@off,?i2_sprintf+4
 35038  0096E8  0060  F258  F07C   	movff	DisplayCalibrate@off+1,?i2_sprintf+5
 35039  0096EE  0060  F264  F07D   	movff	DisplayCalibrate@offv,?i2_sprintf+6
 35040  0096F4  0060  F268  F07E   	movff	DisplayCalibrate@offv+1,?i2_sprintf+7
 35041  0096FA  EC45  F047         	call	i2_sprintf	;wreg free
 35042                           
 35043                           ; BSR set to: 0
 35044  0096FE  0012               	return		;funcret
 35045  009700                     __end_of_DisplayCalibrate:
 35046                           	opt callstack 0
 35047                           
 35048 ;; *************** function _AdcReStartCycle *****************
 35049 ;; Defined at:
 35050 ;;		line 71 in file "monitor.c"
 35051 ;; Parameters:    Size  Location     Type
 35052 ;;		None
 35053 ;; Auto vars:     Size  Location     Type
 35054 ;;		None
 35055 ;; Return value:  Size  Location     Type
 35056 ;;                  1    wreg      void 
 35057 ;; Registers used:
 35058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35059 ;; Tracked objects:
 35060 ;;		On entry : 0/2
 35061 ;;		On exit  : 3F/3E
 35062 ;;		Unchanged: 0/0
 35063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35068 ;;Total ram usage:        0 bytes
 35069 ;; Hardware stack levels used:    1
 35070 ;; Hardware stack levels required when called:    1
 35071 ;; This function calls:
 35072 ;;		i2_ADCC_StartConversion
 35073 ;;		i2___wmul
 35074 ;; This function is called by:
 35075 ;;		_MonitorPressureTask
 35076 ;; This function uses a non-reentrant model
 35077 ;;
 35078                           
 35079                           	psect	text267
 35080  0089FE                     __ptext267:
 35081                           	opt callstack 0
 35082  0089FE                     _AdcReStartCycle:
 35083                           	opt callstack 13
 35084                           
 35085                           ;monitor.c: 72:     currentChannel = 0;
 35086                           
 35087                           ; BSR set to: 0
 35088                           ;incstack = 0
 35089  0089FE  0E00               	movlw	0
 35090  008A00  0101               	movlb	1	; () banked
 35091  008A02  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 35092  008A04  0E00               	movlw	0
 35093  008A06  6FE5               	movwf	_currentChannel& (0+255),b
 35094                           
 35095                           ; BSR set to: 1
 35096                           ;monitor.c: 73:     ADCON0bits.ADON = 0;
 35097  008A08  013E               	movlb	62	; () banked
 35098  008A0A  9FF8               	bcf	248,7,b	;volatile
 35099                           
 35100                           ; BSR set to: 62
 35101                           ;monitor.c: 74:     ADREF = adcChannels[currentChannel].ref;
 35102  008A0C  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 35103  008A12  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 35104  008A18  0E00               	movlw	0
 35105  008A1A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 35106  008A1C  0E05               	movlw	5
 35107  008A1E  6E03               	movwf	i2___wmul@multiplicand^0,c
 35108  008A20  ECD3  F04C         	call	i2___wmul	;wreg free
 35109  008A24  0EC0               	movlw	low (_adcChannels+4)
 35110  008A26  2401               	addwf	?i2___wmul^0,w,c
 35111  008A28  6ED9               	movwf	fsr2l,c
 35112  008A2A  0E02               	movlw	high (_adcChannels+4)
 35113  008A2C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 35114  008A2E  6EDA               	movwf	fsr2h,c
 35115  008A30  50DF               	movf	indf2,w,c
 35116  008A32  013E               	movlb	62	; () banked
 35117  008A34  6FFD               	movwf	253,b	;volatile
 35118                           
 35119                           ; BSR set to: 62
 35120                           ;monitor.c: 75:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 35121  008A36  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 35122  008A3C  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 35123  008A42  0E00               	movlw	0
 35124  008A44  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 35125  008A46  0E05               	movlw	5
 35126  008A48  6E03               	movwf	i2___wmul@multiplicand^0,c
 35127  008A4A  ECD3  F04C         	call	i2___wmul	;wreg free
 35128  008A4E  0EBC               	movlw	low _adcChannels
 35129  008A50  2401               	addwf	?i2___wmul^0,w,c
 35130  008A52  6ED9               	movwf	fsr2l,c
 35131  008A54  0E02               	movlw	high _adcChannels
 35132  008A56  2002               	addwfc	(?i2___wmul+1)^0,w,c
 35133  008A58  6EDA               	movwf	fsr2h,c
 35134  008A5A  50DF               	movf	indf2,w,c
 35135  008A5C  ECC6  F050         	call	i2_ADCC_StartConversion
 35136                           
 35137                           ; BSR set to: 62
 35138  008A60  0012               	return		;funcret
 35139  008A62                     __end_of_AdcReStartCycle:
 35140                           	opt callstack 0
 35141                           
 35142 ;; *************** function _I2C2_Isr *****************
 35143 ;; Defined at:
 35144 ;;		line 179 in file "mcc_generated_files/i2c2_slave.c"
 35145 ;; Parameters:    Size  Location     Type
 35146 ;;		None
 35147 ;; Auto vars:     Size  Location     Type
 35148 ;;		None
 35149 ;; Return value:  Size  Location     Type
 35150 ;;                  1    wreg      void 
 35151 ;; Registers used:
 35152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35153 ;; Tracked objects:
 35154 ;;		On entry : 3F/0
 35155 ;;		On exit  : 0/0
 35156 ;;		Unchanged: 0/0
 35157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35162 ;;Total ram usage:        0 bytes
 35163 ;; Hardware stack levels used:    1
 35164 ;; Hardware stack levels required when called:   14
 35165 ;; This function calls:
 35166 ;;		_I2C2_SlaveClearBuff
 35167 ;;		_I2C2_SlaveClearStopFlag
 35168 ;;		_I2C2_SlaveIsRxBufFull
 35169 ;;		_I2C2_SlaveRdCallBack
 35170 ;;		_I2C2_SlaveReleaseClock
 35171 ;;		_I2C2_SlaveSetCounter
 35172 ;;		_I2C2_SlaveStopCallBack
 35173 ;; This function is called by:
 35174 ;;		_I2C2_Open
 35175 ;;		_INTERRUPT_InterruptManager
 35176 ;; This function uses a non-reentrant model
 35177 ;;
 35178                           
 35179                           	psect	text268
 35180  008864                     __ptext268:
 35181                           	opt callstack 0
 35182  008864                     _I2C2_Isr:
 35183                           	opt callstack 2
 35184                           
 35185                           ; BSR set to: 0
 35186                           ;mcc_generated_files/i2c2_slave.c: 181:     if (!I2C2_on) {
 35187                           
 35188                           ; BSR set to: 62
 35189                           ;incstack = 0
 35190  008864  0102               	movlb	2	; () banked
 35191  008866  51B4               	movf	_I2C2_on& (0+255),w,b
 35192  008868  A4D8               	btfss	status,2,c
 35193  00886A  D005               	goto	i2l21787
 35194                           
 35195                           ; BSR set to: 2
 35196                           ;mcc_generated_files/i2c2_slave.c: 182:         I2C2_SlaveReleaseClock();
 35197  00886C  EC0E  F053         	call	_I2C2_SlaveReleaseClock	;wreg free
 35198                           
 35199                           ;mcc_generated_files/i2c2_slave.c: 183:         I2C2_SlaveClearStopFlag();
 35200  008870  EC50  F053         	call	_I2C2_SlaveClearStopFlag	;wreg free
 35201  008874  0012               	return	
 35202  008876                     i2l21787:
 35203                           
 35204                           ; BSR set to: 2
 35205                           ;mcc_generated_files/i2c2_slave.c: 187:     if(I2C2_SlaveIsRxBufFull())
 35206  008876  ECBC  F051         	call	_I2C2_SlaveIsRxBufFull	;wreg free
 35207  00887A  0900               	iorlw	0
 35208  00887C  B4D8               	btfsc	status,2,c
 35209  00887E  D005               	goto	i2l1222
 35210                           
 35211                           ; BSR set to: 61
 35212                           ;mcc_generated_files/i2c2_slave.c: 188:     {;mcc_generated_files/i2c2_slave.c: 189:    
      +                               I2C2_SlaveRdCallBack();
 35213  008880  EC1B  F04F         	call	_I2C2_SlaveRdCallBack	;wreg free
 35214  008884                     i2l21791:
 35215                           
 35216                           ;mcc_generated_files/i2c2_slave.c: 190:         I2C2_SlaveReleaseClock();
 35217  008884  EC0E  F053         	call	_I2C2_SlaveReleaseClock	;wreg free
 35218  008888  0012               	return	
 35219  00888A                     i2l1222:
 35220                           
 35221                           ; BSR set to: 61
 35222                           ;mcc_generated_files/i2c2_slave.c: 195:     if(PIE6bits.I2C2EIE == 1 && PIR6bits.I2C2EIF
      +                           == 1)
 35223  00888A  0139               	movlb	57	; () banked
 35224  00888C  B396               	btfsc	150,1,b	;volatile
 35225                           
 35226                           ; BSR set to: 57
 35227  00888E  51A6               	movf	166,w,b	;volatile
 35228                           
 35229                           ; BSR set to: 57
 35230                           ;mcc_generated_files/i2c2_slave.c: 199:     if(PIE5bits.I2C2RXIE == 1 && PIR5bits.I2C2RX
      +                          IF == 1)
 35231                           
 35232                           ;mcc_generated_files/i2c2_slave.c: 196:     {;mcc_generated_files/i2c2_slave.c: 198:    
      +                           }
 35233  008890  BD95               	btfsc	149,6,b	;volatile
 35234                           
 35235                           ; BSR set to: 57
 35236  008892  ADA5               	btfss	165,6,b	;volatile
 35237  008894  D006               	goto	i2l21803
 35238                           
 35239                           ; BSR set to: 57
 35240                           ;mcc_generated_files/i2c2_slave.c: 200:     {;mcc_generated_files/i2c2_slave.c: 202:    
      +                               if(I2C2_SlaveIsRxBufFull())
 35241  008896  ECBC  F051         	call	_I2C2_SlaveIsRxBufFull	;wreg free
 35242  00889A  0900               	iorlw	0
 35243  00889C  A4D8               	btfss	status,2,c
 35244                           
 35245                           ; BSR set to: 61
 35246                           ;mcc_generated_files/i2c2_slave.c: 203:         {;mcc_generated_files/i2c2_slave.c: 204:
      +                                       I2C2_SlaveRdCallBack();
 35247  00889E  EC1B  F04F         	call	_I2C2_SlaveRdCallBack	;wreg free
 35248  0088A2                     i2l21803:
 35249                           
 35250                           ;mcc_generated_files/i2c2_slave.c: 207:     if(PIE5bits.I2C2TXIE == 1 && PIR5bits.I2C2TX
      +                          IF == 1)
 35251  0088A2  0139               	movlb	57	; () banked
 35252  0088A4  BF95               	btfsc	149,7,b	;volatile
 35253                           
 35254                           ; BSR set to: 57
 35255  0088A6  51A5               	movf	165,w,b	;volatile
 35256                           
 35257                           ; BSR set to: 57
 35258                           ;mcc_generated_files/i2c2_slave.c: 211:     if(PIE6bits.I2C2IE == 1 && PIR6bits.I2C2IF =
      +                          = 1)
 35259                           
 35260                           ;mcc_generated_files/i2c2_slave.c: 208:     {;mcc_generated_files/i2c2_slave.c: 210:    
      +                           }
 35261  0088A8  B196               	btfsc	150,0,b	;volatile
 35262                           
 35263                           ; BSR set to: 57
 35264  0088AA  A1A6               	btfss	166,0,b	;volatile
 35265  0088AC  D7EB               	goto	i2l21791
 35266                           
 35267                           ; BSR set to: 57
 35268                           ;mcc_generated_files/i2c2_slave.c: 212:     {;mcc_generated_files/i2c2_slave.c: 214:    
      +                               if (I2C2PIR&0x4) {
 35269  0088AE  013D               	movlb	61	; () banked
 35270  0088B0  A563               	btfss	99,2,b	;volatile
 35271  0088B2  D7E8               	goto	i2l21791
 35272                           
 35273                           ; BSR set to: 61
 35274                           ;mcc_generated_files/i2c2_slave.c: 216:             I2C2_SlaveClearStopFlag();
 35275  0088B4  EC50  F053         	call	_I2C2_SlaveClearStopFlag	;wreg free
 35276                           
 35277                           ;mcc_generated_files/i2c2_slave.c: 217:             I2C2_SlaveClearBuff();
 35278  0088B8  EC52  F053         	call	_I2C2_SlaveClearBuff	;wreg free
 35279                           
 35280                           ;mcc_generated_files/i2c2_slave.c: 218:             I2C2_SlaveReleaseClock();
 35281  0088BC  EC0E  F053         	call	_I2C2_SlaveReleaseClock	;wreg free
 35282                           
 35283                           ; BSR set to: 61
 35284                           ;mcc_generated_files/i2c2_slave.c: 219:             I2C2_SlaveSetCounter(0xFF);
 35285  0088C0  0EFF               	movlw	255
 35286  0088C2  EC29  F052         	call	_I2C2_SlaveSetCounter
 35287                           
 35288                           ;mcc_generated_files/i2c2_slave.c: 220:             I2C2_SlaveStopCallBack();
 35289  0088C6  EC0B  F04F         	call	_I2C2_SlaveStopCallBack	;wreg free
 35290  0088CA  0012               	return		;funcret
 35291  0088CC                     __end_of_I2C2_Isr:
 35292                           	opt callstack 0
 35293                           
 35294 ;; *************** function _I2C2_SlaveStopCallBack *****************
 35295 ;; Defined at:
 35296 ;;		line 273 in file "mcc_generated_files/i2c2_slave.c"
 35297 ;; Parameters:    Size  Location     Type
 35298 ;;		None
 35299 ;; Auto vars:     Size  Location     Type
 35300 ;;		None
 35301 ;; Return value:  Size  Location     Type
 35302 ;;                  1    wreg      void 
 35303 ;; Registers used:
 35304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35305 ;; Tracked objects:
 35306 ;;		On entry : 0/3D
 35307 ;;		On exit  : 0/0
 35308 ;;		Unchanged: 0/0
 35309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35314 ;;Total ram usage:        0 bytes
 35315 ;; Hardware stack levels used:    1
 35316 ;; Hardware stack levels required when called:   13
 35317 ;; This function calls:
 35318 ;;		Absolute function
 35319 ;;		_StopHandler
 35320 ;; This function is called by:
 35321 ;;		_I2C2_Isr
 35322 ;; This function uses a non-reentrant model
 35323 ;;
 35324                           
 35325                           	psect	text269
 35326  009E16                     __ptext269:
 35327                           	opt callstack 0
 35328  009E16                     _I2C2_SlaveStopCallBack:
 35329                           	opt callstack 2
 35330                           
 35331                           ;mcc_generated_files/i2c2_slave.c: 275:     if (I2C2_SlaveStopInterruptHandler)
 35332                           
 35333                           ;incstack = 0
 35334  009E16  0102               	movlb	2	; () banked
 35335  009E18  5192               	movf	_I2C2_SlaveStopInterruptHandler& (0+255),w,b
 35336  009E1A  1193               	iorwf	(_I2C2_SlaveStopInterruptHandler+1)& (0+255),w,b
 35337  009E1C  B4D8               	btfsc	status,2,c
 35338  009E1E  0012               	return	
 35339                           
 35340                           ; BSR set to: 2
 35341                           ;mcc_generated_files/i2c2_slave.c: 276:     {;mcc_generated_files/i2c2_slave.c: 277:    
      +                               I2C2_SlaveStopInterruptHandler();
 35342  009E20  D801               	call	i2u1955_48
 35343  009E22  0012               	return	
 35344  009E24                     i2u1955_48:
 35345  009E24  0005               	push	
 35346  009E26  6EFA               	movwf	pclath,c
 35347  009E28  5192               	movf	_I2C2_SlaveStopInterruptHandler& (0+255),w,b
 35348  009E2A  6EFD               	movwf	tosl,c
 35349  009E2C  5193               	movf	(_I2C2_SlaveStopInterruptHandler+1)& (0+255),w,b
 35350  009E2E  6EFE               	movwf	tosh,c
 35351  009E30  6AFF               	clrf	tosu,c
 35352  009E32  50FA               	movf	pclath,w,c
 35353  009E34  0012               	return		;indir
 35354  009E36                     __end_of_I2C2_SlaveStopCallBack:
 35355                           	opt callstack 0
 35356                           
 35357 ;; *************** function _StopHandler *****************
 35358 ;; Defined at:
 35359 ;;		line 161 in file "controller.c"
 35360 ;; Parameters:    Size  Location     Type
 35361 ;;		None
 35362 ;; Auto vars:     Size  Location     Type
 35363 ;;  stat1           1    0        unsigned char 
 35364 ;;  stat0           1    0        unsigned char 
 35365 ;; Return value:  Size  Location     Type
 35366 ;;                  1    wreg      void 
 35367 ;; Registers used:
 35368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35369 ;; Tracked objects:
 35370 ;;		On entry : 3F/2
 35371 ;;		On exit  : 3F/0
 35372 ;;		Unchanged: 0/0
 35373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35378 ;;Total ram usage:        2 bytes
 35379 ;; Hardware stack levels used:    1
 35380 ;; Hardware stack levels required when called:   12
 35381 ;; This function calls:
 35382 ;;		_ReceiveHandler
 35383 ;;		_UpdateState
 35384 ;;		i2_printf
 35385 ;; This function is called by:
 35386 ;;		_ControllerInit
 35387 ;;		_I2C2_SlaveStopCallBack
 35388 ;; This function uses a non-reentrant model
 35389 ;;
 35390                           
 35391                           	psect	text270
 35392  008CE6                     __ptext270:
 35393                           	opt callstack 0
 35394  008CE6                     _StopHandler:
 35395                           	opt callstack 2
 35396                           
 35397                           ; BSR set to: 2
 35398                           
 35399                           ;incstack = 0
 35400  008CE6  013D               	movlb	61	; () banked
 35401  008CE8  5161               	movf	97,w,b	;volatile
 35402  008CEA  5162               	movf	98,w,b	;volatile
 35403                           
 35404                           ; BSR set to: 61
 35405                           ;controller.c: 166:     if (cntByte!=10 && cntByte>0) {
 35406  008CEC  0E0A               	movlw	10
 35407  008CEE  0100               	movlb	0	; () banked
 35408  008CF0  19CC               	xorwf	_cntByte& (0+255),w,b
 35409  008CF2  11CD               	iorwf	(_cntByte+1)& (0+255),w,b
 35410  008CF4  A4D8               	btfss	status,2,c
 35411                           
 35412                           ; BSR set to: 0
 35413  008CF6  BFCD               	btfsc	(_cntByte+1)& (0+255),7,b
 35414  008CF8  D014               	goto	i2l19853
 35415  008CFA  51CD               	movf	(_cntByte+1)& (0+255),w,b
 35416  008CFC  E103               	bnz	i2u1919_40
 35417  008CFE  05CC               	decf	_cntByte& (0+255),w,b
 35418  008D00  A0D8               	btfss	status,0,c
 35419  008D02  D00F               	goto	i2l19853
 35420  008D04                     i2u1919_40:
 35421                           
 35422                           ; BSR set to: 0
 35423                           ;controller.c: 167:         ReceiveHandler();
 35424  008D04  EC85  F048         	call	_ReceiveHandler	;wreg free
 35425                           
 35426                           ;controller.c: 168:         printf("I2C: miss %d\r\n", cntByte);
 35427  008D08  0E11               	movlw	low STR_53
 35428  008D0A  0100               	movlb	0	; () banked
 35429  008D0C  6F77               	movwf	i2printf@fmt& (0+255),b
 35430  008D0E  0EFF               	movlw	high STR_53
 35431  008D10  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35432  008D12  0060  F330  F079   	movff	_cntByte,?i2_printf+2
 35433  008D18  0060  F334  F07A   	movff	_cntByte+1,?i2_printf+3
 35434  008D1E  ECE8  F04D         	call	i2_printf	;wreg free
 35435  008D22                     i2l19853:
 35436                           
 35437                           ;controller.c: 177:     if (cntByte==10) {
 35438  008D22  0E0A               	movlw	10
 35439  008D24  0100               	movlb	0	; () banked
 35440  008D26  19CC               	xorwf	_cntByte& (0+255),w,b
 35441  008D28  11CD               	iorwf	(_cntByte+1)& (0+255),w,b
 35442  008D2A  B4D8               	btfsc	status,2,c
 35443                           
 35444                           ; BSR set to: 0
 35445                           ;controller.c: 181:         UpdateState();
 35446  008D2C  EC44  F01F         	call	_UpdateState	;wreg free
 35447                           
 35448                           ;controller.c: 183:     cntByte = 0;
 35449  008D30  0E00               	movlw	0
 35450  008D32  0100               	movlb	0	; () banked
 35451  008D34  6FCD               	movwf	(_cntByte+1)& (0+255),b
 35452  008D36  0E00               	movlw	0
 35453  008D38  6FCC               	movwf	_cntByte& (0+255),b
 35454                           
 35455                           ; BSR set to: 0
 35456  008D3A  0012               	return		;funcret
 35457  008D3C                     __end_of_StopHandler:
 35458                           	opt callstack 0
 35459                           
 35460 ;; *************** function _UpdateState *****************
 35461 ;; Defined at:
 35462 ;;		line 65 in file "controller.c"
 35463 ;; Parameters:    Size  Location     Type
 35464 ;;		None
 35465 ;; Auto vars:     Size  Location     Type
 35466 ;;  initPhase       2   91[COMRAM] int 
 35467 ;; Return value:  Size  Location     Type
 35468 ;;                  1    wreg      void 
 35469 ;; Registers used:
 35470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35471 ;; Tracked objects:
 35472 ;;		On entry : 3F/0
 35473 ;;		On exit  : 3D/0
 35474 ;;		Unchanged: 0/0
 35475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35478 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35479 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35480 ;;Total ram usage:        8 bytes
 35481 ;; Hardware stack levels used:    1
 35482 ;; Hardware stack levels required when called:   11
 35483 ;; This function calls:
 35484 ;;		_ClearAllAlarm
 35485 ;;		_ControllerBuzzerCheck
 35486 ;;		_DisplayDisable
 35487 ;;		_DisplayEnable
 35488 ;;		_GetControllerBuzzerCheck
 35489 ;;		_SetControlFailAlarm
 35490 ;;		_SetMaxPressure
 35491 ;;		_SetTarget
 35492 ;;		_SetVolumeControl
 35493 ;;		i2_ClearControlFailAlarm
 35494 ;;		i2_EnableAlarmSV1
 35495 ;;		i2_LCDOff
 35496 ;;		i2_LCDOn
 35497 ;;		i2_MonitorDisable
 35498 ;;		i2_MonitorEnable
 35499 ;;		i2_SetCalibrateState
 35500 ;;		i2_SetSV1
 35501 ;;		i2_printf
 35502 ;; This function is called by:
 35503 ;;		_StopHandler
 35504 ;; This function uses a non-reentrant model
 35505 ;;
 35506                           
 35507                           	psect	text271
 35508  003E88                     __ptext271:
 35509                           	opt callstack 0
 35510  003E88                     _UpdateState:
 35511                           	opt callstack 2
 35512                           
 35513                           ; BSR set to: 0
 35514                           ;controller.c: 66:     static uint8_t old;;controller.c: 68:     old= msg.cntMsg.state;
 35515                           
 35516                           ; BSR set to: 0
 35517                           ;incstack = 0
 35518  003E88  C200  F298         	movff	_msg,UpdateState@old
 35519                           
 35520                           ; BSR set to: 0
 35521                           ;controller.c: 69:     init = (msg.cntMsg.state & 0xE0);
 35522  003E8C  0060  F800  F0BD   	movff	_msg,??_UpdateState
 35523  003E92  0EE0               	movlw	224
 35524  003E94  17BD               	andwf	??_UpdateState& (0+255),f,b
 35525  003E96  B4D8               	btfsc	status,2,c
 35526  003E98  D002               	goto	i2u1856_40
 35527  003E9A  0E01               	movlw	1
 35528  003E9C  D001               	goto	i2u1857_40
 35529  003E9E                     i2u1856_40:
 35530  003E9E  0E00               	movlw	0
 35531  003EA0                     i2u1857_40:
 35532  003EA0  0102               	movlb	2	; () banked
 35533  003EA2  6F9A               	movwf	_init& (0+255),b
 35534                           
 35535                           ; BSR set to: 2
 35536                           ;controller.c: 70:     if (init) {
 35537  003EA4  519A               	movf	_init& (0+255),w,b
 35538  003EA6  B4D8               	btfsc	status,2,c
 35539  003EA8  D078               	goto	i2l19103
 35540                           
 35541                           ; BSR set to: 2
 35542                           ;controller.c: 71:         int initPhase = (msg.cntMsg.state & 0xE0)>>5;
 35543  003EAA  0060  F800  F0BD   	movff	_msg,??_UpdateState
 35544  003EB0  0E05               	movlw	5
 35545  003EB2  0100               	movlb	0	; () banked
 35546  003EB4  6FBE               	movwf	(??_UpdateState+1)& (0+255),b
 35547  003EB6                     i2u1859_45:
 35548  003EB6  90D8               	bcf	status,0,c
 35549  003EB8  33BD               	rrcf	??_UpdateState& (0+255),f,b
 35550  003EBA  2FBE               	decfsz	(??_UpdateState+1)& (0+255),f,b
 35551  003EBC  D7FC               	goto	i2u1859_45
 35552  003EBE  0E07               	movlw	7
 35553  003EC0  17BD               	andwf	??_UpdateState& (0+255),f,b
 35554  003EC2  51BD               	movf	??_UpdateState& (0+255),w,b
 35555  003EC4  6E5C               	movwf	UpdateState@initPhase^0,c
 35556  003EC6  6A5D               	clrf	(UpdateState@initPhase+1)^0,c
 35557                           
 35558                           ; BSR set to: 0
 35559                           ;controller.c: 72:         printf("\r\nINIT: %d\r\n", initPhase);
 35560  003EC8  0E6A               	movlw	low STR_49
 35561  003ECA  6F77               	movwf	i2printf@fmt& (0+255),b
 35562  003ECC  0EFF               	movlw	high STR_49
 35563  003ECE  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35564  003ED0  0060  F170  F079   	movff	UpdateState@initPhase,?i2_printf+2
 35565  003ED6  0060  F174  F07A   	movff	UpdateState@initPhase+1,?i2_printf+3
 35566  003EDC  ECE8  F04D         	call	i2_printf	;wreg free
 35567                           
 35568                           ; BSR set to: 2
 35569                           ;controller.c: 73:         if (initPhase == 5 || initPhase==3) SetSV1(1);
 35570  003EE0  0E05               	movlw	5
 35571  003EE2  185C               	xorwf	UpdateState@initPhase^0,w,c
 35572  003EE4  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35573  003EE6  B4D8               	btfsc	status,2,c
 35574  003EE8  D005               	goto	i2u1861_40
 35575                           
 35576                           ; BSR set to: 2
 35577  003EEA  0E03               	movlw	3
 35578  003EEC  185C               	xorwf	UpdateState@initPhase^0,w,c
 35579  003EEE  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35580  003EF0  A4D8               	btfss	status,2,c
 35581  003EF2  D003               	goto	i2l19063
 35582  003EF4                     i2u1861_40:
 35583                           
 35584                           ; BSR set to: 2
 35585  003EF4  0E01               	movlw	1
 35586  003EF6  ECBC  F04C         	call	i2_SetSV1
 35587  003EFA                     i2l19063:
 35588                           
 35589                           ;controller.c: 74:         if (initPhase == 1 || initPhase==2 || initPhase==4 || initPha
      +                          se==6 || initPhase==7) SetSV1(0);
 35590  003EFA  045C               	decf	UpdateState@initPhase^0,w,c
 35591  003EFC  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35592  003EFE  B4D8               	btfsc	status,2,c
 35593  003F00  D014               	goto	i2u1866_40
 35594  003F02  0E02               	movlw	2
 35595  003F04  185C               	xorwf	UpdateState@initPhase^0,w,c
 35596  003F06  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35597  003F08  B4D8               	btfsc	status,2,c
 35598  003F0A  D00F               	goto	i2u1866_40
 35599  003F0C  0E04               	movlw	4
 35600  003F0E  185C               	xorwf	UpdateState@initPhase^0,w,c
 35601  003F10  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35602  003F12  B4D8               	btfsc	status,2,c
 35603  003F14  D00A               	goto	i2u1866_40
 35604  003F16  0E06               	movlw	6
 35605  003F18  185C               	xorwf	UpdateState@initPhase^0,w,c
 35606  003F1A  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35607  003F1C  B4D8               	btfsc	status,2,c
 35608  003F1E  D005               	goto	i2u1866_40
 35609  003F20  0E07               	movlw	7
 35610  003F22  185C               	xorwf	UpdateState@initPhase^0,w,c
 35611  003F24  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35612  003F26  A4D8               	btfss	status,2,c
 35613  003F28  D003               	goto	i2l19075
 35614  003F2A                     i2u1866_40:
 35615  003F2A  0E00               	movlw	0
 35616  003F2C  ECBC  F04C         	call	i2_SetSV1
 35617  003F30                     i2l19075:
 35618                           
 35619                           ;controller.c: 75:         if (initPhase == 2) SetCalibrateState(1); else SetCalibrateSt
      +                          ate(0);
 35620  003F30  0E02               	movlw	2
 35621  003F32  185C               	xorwf	UpdateState@initPhase^0,w,c
 35622  003F34  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35623  003F36  A4D8               	btfss	status,2,c
 35624  003F38  D004               	goto	i2l19079
 35625  003F3A  0E01               	movlw	1
 35626  003F3C  EC40  F031         	call	i2_SetCalibrateState
 35627  003F40  D003               	goto	i2l19083
 35628  003F42                     i2l19079:
 35629  003F42  0E00               	movlw	0
 35630  003F44  EC40  F031         	call	i2_SetCalibrateState
 35631  003F48                     i2l19083:
 35632                           
 35633                           ; BSR set to: 2
 35634                           ;controller.c: 82:         if (initPhase == 2) {
 35635  003F48  0E02               	movlw	2
 35636  003F4A  185C               	xorwf	UpdateState@initPhase^0,w,c
 35637  003F4C  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35638  003F4E  B4D8               	btfsc	status,2,c
 35639                           
 35640                           ; BSR set to: 2
 35641                           ;controller.c: 83:             GetControllerBuzzerCheck();
 35642  003F50  EC7C  F050         	call	_GetControllerBuzzerCheck	;wreg free
 35643                           
 35644                           ; BSR set to: 2
 35645                           ;controller.c: 85:          if (initPhase == 3) {
 35646  003F54  0E03               	movlw	3
 35647  003F56  185C               	xorwf	UpdateState@initPhase^0,w,c
 35648  003F58  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35649  003F5A  B4D8               	btfsc	status,2,c
 35650                           
 35651                           ; BSR set to: 2
 35652                           ;controller.c: 86:             ControllerBuzzerCheck();
 35653  003F5C  ECFB  F051         	call	_ControllerBuzzerCheck	;wreg free
 35654                           
 35655                           ; BSR set to: 2
 35656                           ;controller.c: 88:          if (initPhase == 4) {
 35657  003F60  0E04               	movlw	4
 35658  003F62  185C               	xorwf	UpdateState@initPhase^0,w,c
 35659  003F64  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 35660  003F66  A4D8               	btfss	status,2,c
 35661  003F68  D016               	goto	i2l19101
 35662                           
 35663                           ; BSR set to: 2
 35664                           ;controller.c: 89:             if (!GetControllerBuzzerCheck()) {
 35665  003F6A  EC7C  F050         	call	_GetControllerBuzzerCheck	;wreg free
 35666  003F6E  0900               	iorlw	0
 35667  003F70  A4D8               	btfss	status,2,c
 35668  003F72  D00A               	goto	i2l19099
 35669                           
 35670                           ; BSR set to: 2
 35671                           ;controller.c: 90:                 printf("\r\n Error in Controller buzzer\r\n");
 35672  003F74  0E27               	movlw	low STR_50
 35673  003F76  0100               	movlb	0	; () banked
 35674  003F78  6F77               	movwf	i2printf@fmt& (0+255),b
 35675  003F7A  0EFE               	movlw	high STR_50
 35676  003F7C  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35677  003F7E  ECE8  F04D         	call	i2_printf	;wreg free
 35678                           
 35679                           ; BSR set to: 2
 35680                           ;controller.c: 91:                 SetControlFailAlarm();
 35681  003F82  EC98  F052         	call	_SetControlFailAlarm	;wreg free
 35682                           
 35683                           ;controller.c: 92:             } else {
 35684  003F86  D007               	goto	i2l19101
 35685  003F88                     i2l19099:
 35686                           
 35687                           ; BSR set to: 2
 35688                           ;controller.c: 93:                 printf("\r\n Controller buzzer detected\r\n");
 35689  003F88  0E07               	movlw	low STR_51
 35690  003F8A  0100               	movlb	0	; () banked
 35691  003F8C  6F77               	movwf	i2printf@fmt& (0+255),b
 35692  003F8E  0EFE               	movlw	high STR_51
 35693  003F90  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35694  003F92  ECE8  F04D         	call	i2_printf	;wreg free
 35695  003F96                     i2l19101:
 35696                           
 35697                           ;controller.c: 97:         EnableAlarmSV1();
 35698  003F96  EC94  F052         	call	i2_EnableAlarmSV1	;wreg free
 35699  003F9A                     i2l19103:
 35700                           
 35701                           ;controller.c: 99:     if (msg.cntMsg.state & 0x8) {
 35702  003F9A  0102               	movlb	2	; () banked
 35703  003F9C  A700               	btfss	_msg& (0+255),3,b
 35704  003F9E  D00F               	goto	i2l19115
 35705                           
 35706                           ; BSR set to: 2
 35707                           ;controller.c: 100:         LCDOff();
 35708  003FA0  EC1F  F052         	call	i2_LCDOff	;wreg free
 35709                           
 35710                           ; BSR set to: 1
 35711                           ;controller.c: 101:         ClearAllAlarm();
 35712  003FA4  EC5E  F048         	call	_ClearAllAlarm	;wreg free
 35713                           
 35714                           ; BSR set to: 2
 35715                           ;controller.c: 102:         MonitorDisable();
 35716  003FA8  EC90  F052         	call	i2_MonitorDisable	;wreg free
 35717                           
 35718                           ; BSR set to: 2
 35719                           ;controller.c: 103:         DisplayDisable();
 35720  003FAC  EC85  F050         	call	_DisplayDisable	;wreg free
 35721                           
 35722                           ; BSR set to: 0
 35723                           ;controller.c: 104:         printf("\r\n SLEEP MODE\r\n");
 35724  003FB0  0E01               	movlw	low STR_52
 35725  003FB2  6F77               	movwf	i2printf@fmt& (0+255),b
 35726  003FB4  0EFF               	movlw	high STR_52
 35727  003FB6  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35728  003FB8  ECE8  F04D         	call	i2_printf	;wreg free
 35729                           
 35730                           ;controller.c: 105:     } else {
 35731  003FBC  D002               	goto	i2l19117
 35732  003FBE                     i2l19115:
 35733                           
 35734                           ; BSR set to: 2
 35735                           ;controller.c: 106:         LCDOn();
 35736  003FBE  EC1A  F052         	call	i2_LCDOn	;wreg free
 35737  003FC2                     i2l19117:
 35738                           
 35739                           ;controller.c: 109:     run = (msg.cntMsg.state & 0x10) == 0x10;
 35740  003FC2  0102               	movlb	2	; () banked
 35741  003FC4  A900               	btfss	_msg& (0+255),4,b
 35742  003FC6  D002               	goto	i2u1873_40
 35743  003FC8  0E01               	movlw	1
 35744  003FCA  D001               	goto	i2u1874_40
 35745  003FCC                     i2u1873_40:
 35746  003FCC  0E00               	movlw	0
 35747  003FCE                     i2u1874_40:
 35748  003FCE  0100               	movlb	0	; () banked
 35749  003FD0  6FF0               	movwf	_run& (0+255),b
 35750                           
 35751                           ; BSR set to: 0
 35752                           ;controller.c: 112:     if (run) SetSV1(1);
 35753  003FD2  51F0               	movf	_run& (0+255),w,b
 35754  003FD4  B4D8               	btfsc	status,2,c
 35755  003FD6  D003               	goto	i2l19123
 35756                           
 35757                           ; BSR set to: 0
 35758  003FD8  0E01               	movlw	1
 35759  003FDA  ECBC  F04C         	call	i2_SetSV1
 35760  003FDE                     i2l19123:
 35761                           
 35762                           ;controller.c: 113:     if (run) MonitorEnable(); else MonitorDisable();
 35763  003FDE  0100               	movlb	0	; () banked
 35764  003FE0  51F0               	movf	_run& (0+255),w,b
 35765  003FE2  B4D8               	btfsc	status,2,c
 35766  003FE4  D003               	goto	i2l19127
 35767                           
 35768                           ; BSR set to: 0
 35769  003FE6  EC8C  F052         	call	i2_MonitorEnable	;wreg free
 35770  003FEA  D002               	goto	i2l19129
 35771  003FEC                     i2l19127:
 35772                           
 35773                           ; BSR set to: 0
 35774  003FEC  EC90  F052         	call	i2_MonitorDisable	;wreg free
 35775  003FF0                     i2l19129:
 35776                           
 35777                           ; BSR set to: 2
 35778                           ;controller.c: 114:     if (run) DisplayEnable(); else DisplayDisable();
 35779  003FF0  0100               	movlb	0	; () banked
 35780  003FF2  51F0               	movf	_run& (0+255),w,b
 35781  003FF4  B4D8               	btfsc	status,2,c
 35782  003FF6  D003               	goto	i2l19133
 35783                           
 35784                           ; BSR set to: 0
 35785  003FF8  ECBE  F050         	call	_DisplayEnable	;wreg free
 35786  003FFC  D002               	goto	i2l19135
 35787  003FFE                     i2l19133:
 35788                           
 35789                           ; BSR set to: 0
 35790  003FFE  EC85  F050         	call	_DisplayDisable	;wreg free
 35791  004002                     i2l19135:
 35792                           
 35793                           ; BSR set to: 0
 35794                           ;controller.c: 115:     volumeControl = (msg.cntMsg.state & 0x14) == 0x14;
 35795  004002  0102               	movlb	2	; () banked
 35796  004004  5100               	movf	_msg& (0+255),w,b
 35797  004006  0B14               	andlw	20
 35798  004008  0A14               	xorlw	20
 35799  00400A  A4D8               	btfss	status,2,c
 35800  00400C  D002               	goto	i2u1878_40
 35801  00400E  0E01               	movlw	1
 35802  004010  D001               	goto	i2u1879_40
 35803  004012                     i2u1878_40:
 35804  004012  0E00               	movlw	0
 35805  004014                     i2u1879_40:
 35806  004014  6F99               	movwf	controller@volumeControl& (0+255),b
 35807                           
 35808                           ; BSR set to: 2
 35809                           ;controller.c: 116:     SetVolumeControl(volumeControl);
 35810  004016  5199               	movf	controller@volumeControl& (0+255),w,b
 35811  004018  EC24  F052         	call	_SetVolumeControl
 35812                           
 35813                           ;controller.c: 118:     SetTarget(msg.cntMsg.pmax & 0x7F, msg.cntMsg.ip & 0x3F, msg.cntM
      +                          sg.ep & 0x3F, msg.cntMsg.bpm & 0x3F, (msg.cntMsg.vhigh&0x7F)*20, (msg.cntMsg.vlow&0x7F)*
      +                          20);
 35814  00401C  0060  F810  F0BD   	movff	_msg+4,??_UpdateState
 35815  004022  0E7F               	movlw	127
 35816  004024  0100               	movlb	0	; () banked
 35817  004026  17BD               	andwf	??_UpdateState& (0+255),f,b
 35818  004028  51BD               	movf	??_UpdateState& (0+255),w,b
 35819  00402A  6E1B               	movwf	SetTarget@pmax^0,c
 35820  00402C  6A1C               	clrf	(SetTarget@pmax+1)^0,c
 35821  00402E  0060  F804  F0BE   	movff	_msg+1,??_UpdateState+1
 35822  004034  0E3F               	movlw	63
 35823  004036  17BE               	andwf	(??_UpdateState+1)& (0+255),f,b
 35824  004038  51BE               	movf	(??_UpdateState+1)& (0+255),w,b
 35825  00403A  6E1D               	movwf	SetTarget@ip^0,c
 35826  00403C  6A1E               	clrf	(SetTarget@ip+1)^0,c
 35827  00403E  0060  F808  F0BF   	movff	_msg+2,??_UpdateState+2
 35828  004044  0E3F               	movlw	63
 35829  004046  17BF               	andwf	(??_UpdateState+2)& (0+255),f,b
 35830  004048  51BF               	movf	(??_UpdateState+2)& (0+255),w,b
 35831  00404A  6E1F               	movwf	SetTarget@ep^0,c
 35832  00404C  6A20               	clrf	(SetTarget@ep+1)^0,c
 35833  00404E  0060  F80C  F0C0   	movff	_msg+3,??_UpdateState+3
 35834  004054  0E3F               	movlw	63
 35835  004056  17C0               	andwf	(??_UpdateState+3)& (0+255),f,b
 35836  004058  51C0               	movf	(??_UpdateState+3)& (0+255),w,b
 35837  00405A  6E21               	movwf	SetTarget@br^0,c
 35838  00405C  6A22               	clrf	(SetTarget@br+1)^0,c
 35839  00405E  0060  F81C  F0C1   	movff	_msg+7,??_UpdateState+4
 35840  004064  0E7F               	movlw	127
 35841  004066  17C1               	andwf	(??_UpdateState+4)& (0+255),f,b
 35842  004068  51C1               	movf	(??_UpdateState+4)& (0+255),w,b
 35843  00406A  0D14               	mullw	20
 35844  00406C  006F FFCC  F023    	movff	prodl,SetTarget@vmax
 35845  004072  006F FFD0  F024    	movff	prodh,SetTarget@vmax+1
 35846  004078  0060  F818  F0C2   	movff	_msg+6,??_UpdateState+5
 35847  00407E  0E7F               	movlw	127
 35848  004080  17C2               	andwf	(??_UpdateState+5)& (0+255),f,b
 35849  004082  51C2               	movf	(??_UpdateState+5)& (0+255),w,b
 35850  004084  0D14               	mullw	20
 35851  004086  006F FFCC  F025    	movff	prodl,SetTarget@vmin
 35852  00408C  006F FFD0  F026    	movff	prodh,SetTarget@vmin+1
 35853  004092  ECEE  F036         	call	_SetTarget	;wreg free
 35854                           
 35855                           ;controller.c: 119:     SetMaxPressure(msg.cntMsg.pmax & 0x7F);
 35856  004096  0060  F810  F0BD   	movff	_msg+4,??_UpdateState
 35857  00409C  0E7F               	movlw	127
 35858  00409E  0100               	movlb	0	; () banked
 35859  0040A0  17BD               	andwf	??_UpdateState& (0+255),f,b
 35860  0040A2  51BD               	movf	??_UpdateState& (0+255),w,b
 35861  0040A4  6E01               	movwf	SetMaxPressure@pr^0,c
 35862  0040A6  6A02               	clrf	(SetMaxPressure@pr+1)^0,c
 35863  0040A8  EC92  F051         	call	_SetMaxPressure	;wreg free
 35864                           
 35865                           ; BSR set to: 0
 35866                           ;controller.c: 122:     spr = msg.cntMsg.spr;
 35867  0040AC  C208  F232         	movff	_msg+8,_spr
 35868  0040B0  0102               	movlb	2	; () banked
 35869  0040B2  6B33               	clrf	(_spr+1)& (0+255),b
 35870                           
 35871                           ; BSR set to: 2
 35872                           ;controller.c: 124:     static int cnt=0;;controller.c: 125:     if (msg.cntMsg.alarm & 
      +                          0x80) {
 35873  0040B4  AF09               	btfss	(_msg+9)& (0+255),7,b
 35874  0040B6  D00D               	goto	i2l19153
 35875                           
 35876                           ; BSR set to: 2
 35877                           ;controller.c: 128:         cnt++;
 35878  0040B8  4B30               	infsnz	UpdateState@cnt& (0+255),f,b
 35879  0040BA  2B31               	incf	(UpdateState@cnt+1)& (0+255),f,b
 35880                           
 35881                           ; BSR set to: 2
 35882                           ;controller.c: 129:         if (cnt>10) SetControlFailAlarm();
 35883  0040BC  BF31               	btfsc	(UpdateState@cnt+1)& (0+255),7,b
 35884  0040BE  0012               	return	
 35885  0040C0  5131               	movf	(UpdateState@cnt+1)& (0+255),w,b
 35886  0040C2  E104               	bnz	i2u1881_40
 35887  0040C4  0E0B               	movlw	11
 35888  0040C6  5D30               	subwf	UpdateState@cnt& (0+255),w,b
 35889  0040C8  A0D8               	btfss	status,0,c
 35890  0040CA  0012               	return	
 35891  0040CC                     i2u1881_40:
 35892                           
 35893                           ; BSR set to: 2
 35894  0040CC  EC98  F052         	call	_SetControlFailAlarm	;wreg free
 35895  0040D0  0012               	return	
 35896  0040D2                     i2l19153:
 35897                           
 35898                           ; BSR set to: 2
 35899                           ;controller.c: 131:         ClearControlFailAlarm();
 35900  0040D2  ECB0  F052         	call	i2_ClearControlFailAlarm	;wreg free
 35901                           
 35902                           ; BSR set to: 0
 35903                           ;controller.c: 132:         cnt = 0;
 35904  0040D6  0E00               	movlw	0
 35905  0040D8  0102               	movlb	2	; () banked
 35906  0040DA  6F31               	movwf	(UpdateState@cnt+1)& (0+255),b
 35907  0040DC  0E00               	movlw	0
 35908  0040DE  6F30               	movwf	UpdateState@cnt& (0+255),b
 35909  0040E0  0012               	return		;funcret
 35910  0040E2                     __end_of_UpdateState:
 35911                           	opt callstack 0
 35912                           
 35913 ;; *************** function i2_SetSV1 *****************
 35914 ;; Defined at:
 35915 ;;		line 890 in file "monitor.c"
 35916 ;; Parameters:    Size  Location     Type
 35917 ;;  value           1    wreg     _Bool 
 35918 ;; Auto vars:     Size  Location     Type
 35919 ;;  value           1   90[COMRAM] _Bool 
 35920 ;; Return value:  Size  Location     Type
 35921 ;;                  1    wreg      void 
 35922 ;; Registers used:
 35923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35924 ;; Tracked objects:
 35925 ;;		On entry : 3D/2
 35926 ;;		On exit  : 3D/0
 35927 ;;		Unchanged: 0/0
 35928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35933 ;;Total ram usage:        1 bytes
 35934 ;; Hardware stack levels used:    1
 35935 ;; Hardware stack levels required when called:    9
 35936 ;; This function calls:
 35937 ;;		i2_printf
 35938 ;; This function is called by:
 35939 ;;		_UpdateState
 35940 ;; This function uses a non-reentrant model
 35941 ;;
 35942                           
 35943                           	psect	text272
 35944  009978                     __ptext272:
 35945                           	opt callstack 0
 35946  009978                     i2_SetSV1:
 35947                           	opt callstack 3
 35948                           
 35949                           ;incstack = 0
 35950                           ;i2SetSV1@value stored from wreg
 35951  009978  6E5B               	movwf	i2SetSV1@value^0,c
 35952                           
 35953                           ;monitor.c: 891:     static _Bool last= 0;;monitor.c: 892:     if (last!=value) printf("
      +                          \r\nSV1: %d\r\n", value);
 35954  00997A  505B               	movf	i2SetSV1@value^0,w,c
 35955  00997C  0100               	movlb	0	; () banked
 35956  00997E  19F1               	xorwf	SetSV1@last& (0+255),w,b
 35957  009980  B4D8               	btfsc	status,2,c
 35958  009982  D00A               	goto	i2l18921
 35959                           
 35960                           ; BSR set to: 0
 35961  009984  0E90               	movlw	low STR_48
 35962  009986  6F77               	movwf	i2printf@fmt& (0+255),b
 35963  009988  0EFF               	movlw	high STR_48
 35964  00998A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 35965  00998C  0060  F16C  F079   	movff	i2SetSV1@value,?i2_printf+2
 35966  009992  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 35967  009994  ECE8  F04D         	call	i2_printf	;wreg free
 35968  009998                     i2l18921:
 35969                           
 35970                           ;monitor.c: 893:     last = value;
 35971  009998  0060  F16C  F0F1   	movff	i2SetSV1@value,SetSV1@last
 35972                           
 35973                           ;monitor.c: 894:     normalSV1 = value;
 35974  00999E  0060  F16C  F29F   	movff	i2SetSV1@value,_normalSV1
 35975  0099A4  0012               	return		;funcret
 35976  0099A6                     __end_ofi2_SetSV1:
 35977                           	opt callstack 0
 35978                           
 35979 ;; *************** function i2_SetCalibrateState *****************
 35980 ;; Defined at:
 35981 ;;		line 245 in file "monitor.c"
 35982 ;; Parameters:    Size  Location     Type
 35983 ;;  calib           1    wreg     _Bool 
 35984 ;; Auto vars:     Size  Location     Type
 35985 ;;  calib           1   90[COMRAM] _Bool 
 35986 ;; Return value:  Size  Location     Type
 35987 ;;                  1    wreg      void 
 35988 ;; Registers used:
 35989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35990 ;; Tracked objects:
 35991 ;;		On entry : 3D/2
 35992 ;;		On exit  : 3F/2
 35993 ;;		Unchanged: 0/0
 35994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35999 ;;Total ram usage:        1 bytes
 36000 ;; Hardware stack levels used:    1
 36001 ;; Hardware stack levels required when called:    9
 36002 ;; This function calls:
 36003 ;;		i2_ClearVars
 36004 ;;		i2_GetPressureV_pa
 36005 ;;		i2_GetPressure_pa
 36006 ;;		i2_TMR0_StartTimer
 36007 ;;		i2_TMR0_StopTimer
 36008 ;;		i2_UnDisplayCalibrate
 36009 ;;		i2___awdiv
 36010 ;;		i2_printf
 36011 ;; This function is called by:
 36012 ;;		_UpdateState
 36013 ;; This function uses a non-reentrant model
 36014 ;;
 36015                           
 36016                           	psect	text273
 36017  006280                     __ptext273:
 36018                           	opt callstack 0
 36019  006280                     i2_SetCalibrateState:
 36020                           	opt callstack 3
 36021                           
 36022                           ;incstack = 0
 36023                           ;i2SetCalibrateState@calib stored from wreg
 36024  006280  6E5B               	movwf	i2SetCalibrateState@calib^0,c
 36025                           
 36026                           ;monitor.c: 246:     TMR0_StopTimer();
 36027  006282  EC4C  F053         	call	i2_TMR0_StopTimer	;wreg free
 36028                           
 36029                           ;monitor.c: 247:     if (calib) {
 36030  006286  505B               	movf	i2SetCalibrateState@calib^0,w,c
 36031  006288  B4D8               	btfsc	status,2,c
 36032  00628A  D006               	goto	i2l18897
 36033                           
 36034                           ;monitor.c: 249:         state = 1;
 36035  00628C  0E00               	movlw	0
 36036  00628E  0101               	movlb	1	; () banked
 36037  006290  6FE0               	movwf	(_state+1)& (0+255),b
 36038  006292  0E01               	movlw	1
 36039  006294  6FDF               	movwf	_state& (0+255),b
 36040                           
 36041                           ;monitor.c: 250:     } else {
 36042  006296  D082               	goto	i2l18907
 36043  006298                     i2l18897:
 36044                           
 36045                           ;monitor.c: 261:         if (state == 1) {
 36046  006298  0101               	movlb	1	; () banked
 36047  00629A  05DF               	decf	_state& (0+255),w,b
 36048  00629C  11E0               	iorwf	(_state+1)& (0+255),w,b
 36049  00629E  A4D8               	btfss	status,2,c
 36050  0062A0  D07B               	goto	i2l18905
 36051                           
 36052                           ; BSR set to: 1
 36053                           ;monitor.c: 262:             printf("\r\nPreCalib: Pres:%d Off:%d //Volume pres:%d Off:%
      +                          d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
 36054  0062A2  0E05               	movlw	low STR_40
 36055  0062A4  0100               	movlb	0	; () banked
 36056  0062A6  6F77               	movwf	i2printf@fmt& (0+255),b
 36057  0062A8  0EFD               	movlw	high STR_40
 36058  0062AA  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36059  0062AC  EC76  F025         	call	i2_GetPressure_pa	;wreg free
 36060  0062B0  0060  F06C  F079   	movff	?i2_GetPressure_pa,?i2_printf+2
 36061  0062B6  0060  F070  F07A   	movff	?i2_GetPressure_pa+1,?i2_printf+3
 36062  0062BC  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36063  0062C2  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36064  0062C8  0E00               	movlw	0
 36065  0062CA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36066  0062CC  0E08               	movlw	8
 36067  0062CE  6E09               	movwf	i2___awdiv@divisor^0,c
 36068  0062D0  ECE1  F03F         	call	i2___awdiv	;wreg free
 36069  0062D4  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 36070  0062DA  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 36071  0062E0  EC23  F03B         	call	i2_GetPressureV_pa	;wreg free
 36072  0062E4  0060  F03C  F07D   	movff	?i2_GetPressureV_pa,?i2_printf+6
 36073  0062EA  0060  F040  F07E   	movff	?i2_GetPressureV_pa+1,?i2_printf+7
 36074  0062F0  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36075  0062F6  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36076  0062FC  0E00               	movlw	0
 36077  0062FE  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36078  006300  0E08               	movlw	8
 36079  006302  6E09               	movwf	i2___awdiv@divisor^0,c
 36080  006304  ECE1  F03F         	call	i2___awdiv	;wreg free
 36081  006308  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 36082  00630E  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 36083  006314  ECE8  F04D         	call	i2_printf	;wreg free
 36084                           
 36085                           ; BSR set to: 2
 36086                           ;monitor.c: 263:             state = 0;
 36087  006318  0E00               	movlw	0
 36088  00631A  0101               	movlb	1	; () banked
 36089  00631C  6FE0               	movwf	(_state+1)& (0+255),b
 36090  00631E  0E00               	movlw	0
 36091  006320  6FDF               	movwf	_state& (0+255),b
 36092                           
 36093                           ; BSR set to: 1
 36094                           ;monitor.c: 264:             printf("\r\nCalibrated: Pres:%d Off:%d //Volume pres:%d Off
      +                          :%d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
 36095  006322  0E98               	movlw	low STR_41
 36096  006324  0100               	movlb	0	; () banked
 36097  006326  6F77               	movwf	i2printf@fmt& (0+255),b
 36098  006328  0EFC               	movlw	high STR_41
 36099  00632A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36100  00632C  EC76  F025         	call	i2_GetPressure_pa	;wreg free
 36101  006330  0060  F06C  F079   	movff	?i2_GetPressure_pa,?i2_printf+2
 36102  006336  0060  F070  F07A   	movff	?i2_GetPressure_pa+1,?i2_printf+3
 36103  00633C  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36104  006342  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36105  006348  0E00               	movlw	0
 36106  00634A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36107  00634C  0E08               	movlw	8
 36108  00634E  6E09               	movwf	i2___awdiv@divisor^0,c
 36109  006350  ECE1  F03F         	call	i2___awdiv	;wreg free
 36110  006354  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 36111  00635A  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 36112  006360  EC23  F03B         	call	i2_GetPressureV_pa	;wreg free
 36113  006364  0060  F03C  F07D   	movff	?i2_GetPressureV_pa,?i2_printf+6
 36114  00636A  0060  F040  F07E   	movff	?i2_GetPressureV_pa+1,?i2_printf+7
 36115  006370  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36116  006376  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36117  00637C  0E00               	movlw	0
 36118  00637E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36119  006380  0E08               	movlw	8
 36120  006382  6E09               	movwf	i2___awdiv@divisor^0,c
 36121  006384  ECE1  F03F         	call	i2___awdiv	;wreg free
 36122  006388  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 36123  00638E  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 36124  006394  ECE8  F04D         	call	i2_printf	;wreg free
 36125  006398                     i2l18905:
 36126                           
 36127                           ;monitor.c: 266:         UnDisplayCalibrate();
 36128  006398  EC8B  F051         	call	i2_UnDisplayCalibrate	;wreg free
 36129  00639C                     i2l18907:
 36130                           
 36131                           ;monitor.c: 268:     ClearVars();
 36132  00639C  EC98  F021         	call	i2_ClearVars	;wreg free
 36133                           
 36134                           ; BSR set to: 2
 36135                           ;monitor.c: 269:     TMR0_StartTimer();
 36136  0063A0  EC4E  F053         	call	i2_TMR0_StartTimer	;wreg free
 36137                           
 36138                           ; BSR set to: 2
 36139  0063A4  0012               	return		;funcret
 36140  0063A6                     __end_ofi2_SetCalibrateState:
 36141                           	opt callstack 0
 36142                           
 36143 ;; *************** function i2_UnDisplayCalibrate *****************
 36144 ;; Defined at:
 36145 ;;		line 61 in file "display.c"
 36146 ;; Parameters:    Size  Location     Type
 36147 ;;		None
 36148 ;; Auto vars:     Size  Location     Type
 36149 ;;		None
 36150 ;; Return value:  Size  Location     Type
 36151 ;;                  1    wreg      void 
 36152 ;; Registers used:
 36153 ;;		wreg, status,2
 36154 ;; Tracked objects:
 36155 ;;		On entry : 3C/1
 36156 ;;		On exit  : 3F/3
 36157 ;;		Unchanged: 0/0
 36158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36163 ;;Total ram usage:        0 bytes
 36164 ;; Hardware stack levels used:    1
 36165 ;; This function calls:
 36166 ;;		Nothing
 36167 ;; This function is called by:
 36168 ;;		i2_SetCalibrateState
 36169 ;; This function uses a non-reentrant model
 36170 ;;
 36171                           
 36172                           	psect	text274
 36173  00A316                     __ptext274:
 36174                           	opt callstack 0
 36175  00A316                     i2_UnDisplayCalibrate:
 36176                           	opt callstack 11
 36177                           
 36178                           ;display.c: 62:     calibrate=0;
 36179                           
 36180                           ; BSR set to: 2
 36181                           ;incstack = 0
 36182  00A316  0E00               	movlw	0
 36183  00A318  0100               	movlb	0	; () banked
 36184  00A31A  6FFF               	movwf	_calibrate& (0+255),b
 36185                           
 36186                           ;display.c: 63:     msg4[0]=0;
 36187  00A31C  0E00               	movlw	0
 36188  00A31E  0103               	movlb	3	; () banked
 36189  00A320  6FA9               	movwf	_msg4& (0+255),b
 36190                           
 36191                           ; BSR set to: 3
 36192  00A322  0012               	return		;funcret
 36193  00A324                     __end_ofi2_UnDisplayCalibrate:
 36194                           	opt callstack 0
 36195                           
 36196 ;; *************** function i2_TMR0_StopTimer *****************
 36197 ;; Defined at:
 36198 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 36199 ;; Parameters:    Size  Location     Type
 36200 ;;		None
 36201 ;; Auto vars:     Size  Location     Type
 36202 ;;		None
 36203 ;; Return value:  Size  Location     Type
 36204 ;;                  1    wreg      void 
 36205 ;; Registers used:
 36206 ;;		None
 36207 ;; Tracked objects:
 36208 ;;		On entry : 0/2
 36209 ;;		On exit  : 0/0
 36210 ;;		Unchanged: 0/0
 36211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36216 ;;Total ram usage:        0 bytes
 36217 ;; Hardware stack levels used:    1
 36218 ;; This function calls:
 36219 ;;		Nothing
 36220 ;; This function is called by:
 36221 ;;		i2_SetCalibrateState
 36222 ;; This function uses a non-reentrant model
 36223 ;;
 36224                           
 36225                           	psect	text275
 36226  00A698                     __ptext275:
 36227                           	opt callstack 0
 36228  00A698                     i2_TMR0_StopTimer:
 36229                           	opt callstack 11
 36230                           
 36231                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 36232                           
 36233                           ; BSR set to: 3
 36234                           ;incstack = 0
 36235  00A698  9EB8               	bcf	184,7,c	;volatile
 36236  00A69A  0012               	return		;funcret
 36237  00A69C                     __end_ofi2_TMR0_StopTimer:
 36238                           	opt callstack 0
 36239                           
 36240 ;; *************** function i2_TMR0_StartTimer *****************
 36241 ;; Defined at:
 36242 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 36243 ;; Parameters:    Size  Location     Type
 36244 ;;		None
 36245 ;; Auto vars:     Size  Location     Type
 36246 ;;		None
 36247 ;; Return value:  Size  Location     Type
 36248 ;;                  1    wreg      void 
 36249 ;; Registers used:
 36250 ;;		None
 36251 ;; Tracked objects:
 36252 ;;		On entry : 3F/2
 36253 ;;		On exit  : 3F/2
 36254 ;;		Unchanged: 3F/0
 36255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36260 ;;Total ram usage:        0 bytes
 36261 ;; Hardware stack levels used:    1
 36262 ;; This function calls:
 36263 ;;		Nothing
 36264 ;; This function is called by:
 36265 ;;		i2_SetCalibrateState
 36266 ;; This function uses a non-reentrant model
 36267 ;;
 36268                           
 36269                           	psect	text276
 36270  00A69C                     __ptext276:
 36271                           	opt callstack 0
 36272  00A69C                     i2_TMR0_StartTimer:
 36273                           	opt callstack 11
 36274                           
 36275                           ; BSR set to: 2
 36276                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 36277                           
 36278                           ;incstack = 0
 36279  00A69C  8EB8               	bsf	184,7,c	;volatile
 36280                           
 36281                           ; BSR set to: 2
 36282  00A69E  0012               	return		;funcret
 36283  00A6A0                     __end_ofi2_TMR0_StartTimer:
 36284                           	opt callstack 0
 36285                           
 36286 ;; *************** function i2_GetPressure_pa *****************
 36287 ;; Defined at:
 36288 ;;		line 787 in file "monitor.c"
 36289 ;; Parameters:    Size  Location     Type
 36290 ;;		None
 36291 ;; Auto vars:     Size  Location     Type
 36292 ;;  GetPressure_    4   38[COMRAM] long 
 36293 ;;  GetPressure_    4   30[COMRAM] long 
 36294 ;;  GetPressure_    2   36[COMRAM] short 
 36295 ;;  GetPressure_    2   34[COMRAM] unsigned short 
 36296 ;; Return value:  Size  Location     Type
 36297 ;;                  2   26[COMRAM] short 
 36298 ;; Registers used:
 36299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36300 ;; Tracked objects:
 36301 ;;		On entry : 3E/1
 36302 ;;		On exit  : 0/0
 36303 ;;		Unchanged: 0/0
 36304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36306 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36308 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36309 ;;Total ram usage:       16 bytes
 36310 ;; Hardware stack levels used:    1
 36311 ;; Hardware stack levels required when called:    2
 36312 ;; This function calls:
 36313 ;;		i2_AdcGetData
 36314 ;;		i2___aldiv
 36315 ;;		i2___awdiv
 36316 ;;		i2___lmul
 36317 ;; This function is called by:
 36318 ;;		_MonitorPressureTask
 36319 ;;		_GetPressure_mbar02
 36320 ;;		i2_SetCalibrateState
 36321 ;; This function uses a non-reentrant model
 36322 ;;
 36323                           
 36324                           	psect	text277
 36325  004AEC                     __ptext277:
 36326                           	opt callstack 0
 36327  004AEC                     i2_GetPressure_pa:
 36328                           	opt callstack 12
 36329                           
 36330                           ;monitor.c: 788:     adc_result_t adc = AdcGetData(0);
 36331                           
 36332                           ; BSR set to: 2
 36333                           ;incstack = 0
 36334  004AEC  0E00               	movlw	0
 36335  004AEE  6E08               	movwf	(i2AdcGetData@id+1)^0,c
 36336  004AF0  0E00               	movlw	0
 36337  004AF2  6E07               	movwf	i2AdcGetData@id^0,c
 36338  004AF4  ECCC  F044         	call	i2_AdcGetData	;wreg free
 36339  004AF8  0060  F01C  F023   	movff	?i2_AdcGetData,i2GetPressure_pa@adc
 36340  004AFE  0060  F020  F024   	movff	?i2_AdcGetData+1,i2GetPressure_pa@adc+1
 36341                           
 36342                           ;monitor.c: 789:     if (state == 1) {
 36343  004B04  0101               	movlb	1	; () banked
 36344  004B06  05DF               	decf	_state& (0+255),w,b
 36345  004B08  11E0               	iorwf	(_state+1)& (0+255),w,b
 36346  004B0A  A4D8               	btfss	status,2,c
 36347  004B0C  D007               	goto	i2l18545
 36348                           
 36349                           ; BSR set to: 1
 36350                           ;monitor.c: 790:         return adc;
 36351  004B0E  0060  F08C  F01B   	movff	i2GetPressure_pa@adc,?i2_GetPressure_pa
 36352  004B14  0060  F090  F01C   	movff	i2GetPressure_pa@adc+1,?i2_GetPressure_pa+1
 36353  004B1A  0012               	return	
 36354  004B1C                     i2l18545:
 36355                           
 36356                           ; BSR set to: 1
 36357                           ;monitor.c: 793:     int32_t mv = adc - adcOffset/8;
 36358  004B1C  0060  F7D8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36359  004B22  0060  F7DC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36360  004B28  0E00               	movlw	0
 36361  004B2A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36362  004B2C  0E08               	movlw	8
 36363  004B2E  6E09               	movwf	i2___awdiv@divisor^0,c
 36364  004B30  ECE1  F03F         	call	i2___awdiv	;wreg free
 36365  004B34  0060  F08C  F01D   	movff	i2GetPressure_pa@adc,??i2_GetPressure_pa
 36366  004B3A  0060  F090  F01E   	movff	i2GetPressure_pa@adc+1,??i2_GetPressure_pa+1
 36367  004B40  5007               	movf	?i2___awdiv^0,w,c
 36368  004B42  5E1D               	subwf	??i2_GetPressure_pa^0,f,c
 36369  004B44  5008               	movf	(?i2___awdiv+1)^0,w,c
 36370  004B46  5A1E               	subwfb	(??i2_GetPressure_pa+1)^0,f,c
 36371  004B48  0060  F074  F027   	movff	??i2_GetPressure_pa,i2GetPressure_pa@mv
 36372  004B4E  0060  F078  F028   	movff	??i2_GetPressure_pa+1,i2GetPressure_pa@mv+1
 36373  004B54  6A29               	clrf	(i2GetPressure_pa@mv+2)^0,c
 36374  004B56  6A2A               	clrf	(i2GetPressure_pa@mv+3)^0,c
 36375                           
 36376                           ;monitor.c: 794:     mv = (mv < 0) ? 0 : mv;
 36377  004B58  AE2A               	btfss	(i2GetPressure_pa@mv+3)^0,7,c
 36378  004B5A  D008               	goto	i2l18553
 36379  004B5C  0E00               	movlw	0
 36380  004B5E  6E27               	movwf	i2GetPressure_pa@mv^0,c
 36381  004B60  0E00               	movlw	0
 36382  004B62  6E28               	movwf	(i2GetPressure_pa@mv+1)^0,c
 36383  004B64  0E00               	movlw	0
 36384  004B66  6E29               	movwf	(i2GetPressure_pa@mv+2)^0,c
 36385  004B68  0E00               	movlw	0
 36386  004B6A  6E2A               	movwf	(i2GetPressure_pa@mv+3)^0,c
 36387  004B6C                     i2l18553:
 36388                           
 36389                           ;monitor.c: 795:     mv = ( mv * 625 )/ 512;
 36390  004B6C  0060  F09C  F001   	movff	i2GetPressure_pa@mv,i2___lmul@multiplier
 36391  004B72  0060  F0A0  F002   	movff	i2GetPressure_pa@mv+1,i2___lmul@multiplier+1
 36392  004B78  0060  F0A4  F003   	movff	i2GetPressure_pa@mv+2,i2___lmul@multiplier+2
 36393  004B7E  0060  F0A8  F004   	movff	i2GetPressure_pa@mv+3,i2___lmul@multiplier+3
 36394  004B84  0E71               	movlw	113
 36395  004B86  6E05               	movwf	i2___lmul@multiplicand^0,c
 36396  004B88  0E02               	movlw	2
 36397  004B8A  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36398  004B8C  0E00               	movlw	0
 36399  004B8E  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36400  004B90  0E00               	movlw	0
 36401  004B92  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36402  004B94  ECC2  F045         	call	i2___lmul	;wreg free
 36403  004B98  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 36404  004B9E  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 36405  004BA4  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 36406  004BAA  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 36407  004BB0  0E00               	movlw	0
 36408  004BB2  6E11               	movwf	i2___aldiv@divisor^0,c
 36409  004BB4  0E02               	movlw	2
 36410  004BB6  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 36411  004BB8  0E00               	movlw	0
 36412  004BBA  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 36413  004BBC  0E00               	movlw	0
 36414  004BBE  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 36415  004BC0  EC1E  F036         	call	i2___aldiv	;wreg free
 36416  004BC4  0060  F034  F027   	movff	?i2___aldiv,i2GetPressure_pa@mv
 36417  004BCA  0060  F038  F028   	movff	?i2___aldiv+1,i2GetPressure_pa@mv+1
 36418  004BD0  0060  F03C  F029   	movff	?i2___aldiv+2,i2GetPressure_pa@mv+2
 36419  004BD6  0060  F040  F02A   	movff	?i2___aldiv+3,i2GetPressure_pa@mv+3
 36420                           
 36421                           ;monitor.c: 797:     int32_t p32 = (mv*20)/9;
 36422  004BDC  0060  F09C  F001   	movff	i2GetPressure_pa@mv,i2___lmul@multiplier
 36423  004BE2  0060  F0A0  F002   	movff	i2GetPressure_pa@mv+1,i2___lmul@multiplier+1
 36424  004BE8  0060  F0A4  F003   	movff	i2GetPressure_pa@mv+2,i2___lmul@multiplier+2
 36425  004BEE  0060  F0A8  F004   	movff	i2GetPressure_pa@mv+3,i2___lmul@multiplier+3
 36426  004BF4  0E14               	movlw	20
 36427  004BF6  6E05               	movwf	i2___lmul@multiplicand^0,c
 36428  004BF8  0E00               	movlw	0
 36429  004BFA  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36430  004BFC  0E00               	movlw	0
 36431  004BFE  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36432  004C00  0E00               	movlw	0
 36433  004C02  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36434  004C04  ECC2  F045         	call	i2___lmul	;wreg free
 36435  004C08  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 36436  004C0E  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 36437  004C14  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 36438  004C1A  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 36439  004C20  0E09               	movlw	9
 36440  004C22  6E11               	movwf	i2___aldiv@divisor^0,c
 36441  004C24  0E00               	movlw	0
 36442  004C26  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 36443  004C28  0E00               	movlw	0
 36444  004C2A  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 36445  004C2C  0E00               	movlw	0
 36446  004C2E  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 36447  004C30  EC1E  F036         	call	i2___aldiv	;wreg free
 36448  004C34  0060  F034  F01F   	movff	?i2___aldiv,i2GetPressure_pa@p32
 36449  004C3A  0060  F038  F020   	movff	?i2___aldiv+1,i2GetPressure_pa@p32+1
 36450  004C40  0060  F03C  F021   	movff	?i2___aldiv+2,i2GetPressure_pa@p32+2
 36451  004C46  0060  F040  F022   	movff	?i2___aldiv+3,i2GetPressure_pa@p32+3
 36452                           
 36453                           ;monitor.c: 798:     int16_t p = ((int16_t) p32);
 36454  004C4C  0060  F07C  F025   	movff	i2GetPressure_pa@p32,i2GetPressure_pa@p
 36455  004C52  0060  F080  F026   	movff	i2GetPressure_pa@p32+1,i2GetPressure_pa@p+1
 36456                           
 36457                           ;monitor.c: 799:     if (p<0) p=0;
 36458  004C58  AE26               	btfss	(i2GetPressure_pa@p+1)^0,7,c
 36459  004C5A  D004               	goto	i2l18563
 36460  004C5C  0E00               	movlw	0
 36461  004C5E  6E26               	movwf	(i2GetPressure_pa@p+1)^0,c
 36462  004C60  0E00               	movlw	0
 36463  004C62  6E25               	movwf	i2GetPressure_pa@p^0,c
 36464  004C64                     i2l18563:
 36465                           
 36466                           ;monitor.c: 800:     return p;
 36467  004C64  0060  F094  F01B   	movff	i2GetPressure_pa@p,?i2_GetPressure_pa
 36468  004C6A  0060  F098  F01C   	movff	i2GetPressure_pa@p+1,?i2_GetPressure_pa+1
 36469  004C70  0012               	return		;funcret
 36470  004C72                     __end_ofi2_GetPressure_pa:
 36471                           	opt callstack 0
 36472                           
 36473 ;; *************** function i2___lmul *****************
 36474 ;; Defined at:
 36475 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 36476 ;; Parameters:    Size  Location     Type
 36477 ;;  multiplier      4    0[COMRAM] unsigned long 
 36478 ;;  multiplicand    4    4[COMRAM] unsigned long 
 36479 ;; Auto vars:     Size  Location     Type
 36480 ;;  __lmul          4    8[COMRAM] unsigned long 
 36481 ;; Return value:  Size  Location     Type
 36482 ;;                  4    0[COMRAM] unsigned long 
 36483 ;; Registers used:
 36484 ;;		wreg, status,2, status,0
 36485 ;; Tracked objects:
 36486 ;;		On entry : 0/0
 36487 ;;		On exit  : 0/0
 36488 ;;		Unchanged: 0/0
 36489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36490 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36491 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36493 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36494 ;;Total ram usage:       12 bytes
 36495 ;; Hardware stack levels used:    1
 36496 ;; This function calls:
 36497 ;;		Nothing
 36498 ;; This function is called by:
 36499 ;;		i2_GetPressure_pa
 36500 ;;		i2_See12V
 36501 ;; This function uses a non-reentrant model
 36502 ;;
 36503                           
 36504                           	psect	text278
 36505  008B84                     __ptext278:
 36506                           	opt callstack 0
 36507  008B84                     i2___lmul:
 36508                           	opt callstack 13
 36509                           
 36510                           ;incstack = 0
 36511  008B84  0E00               	movlw	0
 36512  008B86  6E09               	movwf	i2___lmul@product^0,c
 36513  008B88  0E00               	movlw	0
 36514  008B8A  6E0A               	movwf	(i2___lmul@product+1)^0,c
 36515  008B8C  0E00               	movlw	0
 36516  008B8E  6E0B               	movwf	(i2___lmul@product+2)^0,c
 36517  008B90  0E00               	movlw	0
 36518  008B92  6E0C               	movwf	(i2___lmul@product+3)^0,c
 36519  008B94                     i2l18189:
 36520  008B94  A001               	btfss	i2___lmul@multiplier^0,0,c
 36521  008B96  D008               	goto	i2l18193
 36522  008B98  5005               	movf	i2___lmul@multiplicand^0,w,c
 36523  008B9A  2609               	addwf	i2___lmul@product^0,f,c
 36524  008B9C  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 36525  008B9E  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 36526  008BA0  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 36527  008BA2  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 36528  008BA4  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 36529  008BA6  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 36530  008BA8                     i2l18193:
 36531  008BA8  90D8               	bcf	status,0,c
 36532  008BAA  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 36533  008BAC  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 36534  008BAE  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 36535  008BB0  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 36536  008BB2  90D8               	bcf	status,0,c
 36537  008BB4  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 36538  008BB6  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 36539  008BB8  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 36540  008BBA  3201               	rrcf	i2___lmul@multiplier^0,f,c
 36541  008BBC  5001               	movf	i2___lmul@multiplier^0,w,c
 36542  008BBE  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 36543  008BC0  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 36544  008BC2  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 36545  008BC4  A4D8               	btfss	status,2,c
 36546  008BC6  D7E6               	goto	i2l18189
 36547  008BC8  0060  F024  F001   	movff	i2___lmul@product,?i2___lmul
 36548  008BCE  0060  F028  F002   	movff	i2___lmul@product+1,?i2___lmul+1
 36549  008BD4  0060  F02C  F003   	movff	i2___lmul@product+2,?i2___lmul+2
 36550  008BDA  0060  F030  F004   	movff	i2___lmul@product+3,?i2___lmul+3
 36551  008BE0  0012               	return		;funcret
 36552  008BE2                     __end_ofi2___lmul:
 36553                           	opt callstack 0
 36554                           
 36555 ;; *************** function i2_GetPressureV_pa *****************
 36556 ;; Defined at:
 36557 ;;		line 814 in file "monitor.c"
 36558 ;; Parameters:    Size  Location     Type
 36559 ;;		None
 36560 ;; Auto vars:     Size  Location     Type
 36561 ;;  GetPressureV    4   20[COMRAM] long 
 36562 ;;  GetPressureV    2   24[COMRAM] short 
 36563 ;;  GetPressureV    2   18[COMRAM] unsigned short 
 36564 ;; Return value:  Size  Location     Type
 36565 ;;                  2   14[COMRAM] short 
 36566 ;; Registers used:
 36567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36568 ;; Tracked objects:
 36569 ;;		On entry : 0/1
 36570 ;;		On exit  : 0/0
 36571 ;;		Unchanged: 0/0
 36572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36574 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36576 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36577 ;;Total ram usage:       12 bytes
 36578 ;; Hardware stack levels used:    1
 36579 ;; Hardware stack levels required when called:    2
 36580 ;; This function calls:
 36581 ;;		i2_AdcGetData
 36582 ;;		i2___awdiv
 36583 ;; This function is called by:
 36584 ;;		_MonitorPressureTask
 36585 ;;		i2_SetCalibrateState
 36586 ;; This function uses a non-reentrant model
 36587 ;;
 36588                           
 36589                           	psect	text279
 36590  007646                     __ptext279:
 36591                           	opt callstack 0
 36592  007646                     i2_GetPressureV_pa:
 36593                           	opt callstack 12
 36594                           
 36595                           ;monitor.c: 816:     adc_result_t adcv = AdcGetData(2);
 36596                           
 36597                           ;incstack = 0
 36598  007646  0E00               	movlw	0
 36599  007648  6E08               	movwf	(i2AdcGetData@id+1)^0,c
 36600  00764A  0E02               	movlw	2
 36601  00764C  6E07               	movwf	i2AdcGetData@id^0,c
 36602  00764E  ECCC  F044         	call	i2_AdcGetData	;wreg free
 36603  007652  0060  F01C  F013   	movff	?i2_AdcGetData,i2GetPressureV_pa@adcv
 36604  007658  0060  F020  F014   	movff	?i2_AdcGetData+1,i2GetPressureV_pa@adcv+1
 36605                           
 36606                           ;monitor.c: 817:     if (state == 1) {
 36607  00765E  0101               	movlb	1	; () banked
 36608  007660  05DF               	decf	_state& (0+255),w,b
 36609  007662  11E0               	iorwf	(_state+1)& (0+255),w,b
 36610  007664  A4D8               	btfss	status,2,c
 36611  007666  D007               	goto	i2l18573
 36612                           
 36613                           ; BSR set to: 1
 36614                           ;monitor.c: 818:         return adcv;
 36615  007668  0060  F04C  F00F   	movff	i2GetPressureV_pa@adcv,?i2_GetPressureV_pa
 36616  00766E  0060  F050  F010   	movff	i2GetPressureV_pa@adcv+1,?i2_GetPressureV_pa+1
 36617  007674  0012               	return	
 36618  007676                     i2l18573:
 36619                           
 36620                           ; BSR set to: 1
 36621                           ;monitor.c: 821:     int32_t mv = adcv - adcVOffset/8;
 36622  007676  0060  F7D0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36623  00767C  0060  F7D4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36624  007682  0E00               	movlw	0
 36625  007684  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36626  007686  0E08               	movlw	8
 36627  007688  6E09               	movwf	i2___awdiv@divisor^0,c
 36628  00768A  ECE1  F03F         	call	i2___awdiv	;wreg free
 36629  00768E  0060  F04C  F011   	movff	i2GetPressureV_pa@adcv,??i2_GetPressureV_pa
 36630  007694  0060  F050  F012   	movff	i2GetPressureV_pa@adcv+1,??i2_GetPressureV_pa+1
 36631  00769A  5007               	movf	?i2___awdiv^0,w,c
 36632  00769C  5E11               	subwf	??i2_GetPressureV_pa^0,f,c
 36633  00769E  5008               	movf	(?i2___awdiv+1)^0,w,c
 36634  0076A0  5A12               	subwfb	(??i2_GetPressureV_pa+1)^0,f,c
 36635  0076A2  0060  F044  F015   	movff	??i2_GetPressureV_pa,i2GetPressureV_pa@mv
 36636  0076A8  0060  F048  F016   	movff	??i2_GetPressureV_pa+1,i2GetPressureV_pa@mv+1
 36637  0076AE  6A17               	clrf	(i2GetPressureV_pa@mv+2)^0,c
 36638  0076B0  6A18               	clrf	(i2GetPressureV_pa@mv+3)^0,c
 36639                           
 36640                           ;monitor.c: 822:     mv = (mv < 0) ? 0 : mv;
 36641  0076B2  AE18               	btfss	(i2GetPressureV_pa@mv+3)^0,7,c
 36642  0076B4  D008               	goto	i2l18581
 36643  0076B6  0E00               	movlw	0
 36644  0076B8  6E15               	movwf	i2GetPressureV_pa@mv^0,c
 36645  0076BA  0E00               	movlw	0
 36646  0076BC  6E16               	movwf	(i2GetPressureV_pa@mv+1)^0,c
 36647  0076BE  0E00               	movlw	0
 36648  0076C0  6E17               	movwf	(i2GetPressureV_pa@mv+2)^0,c
 36649  0076C2  0E00               	movlw	0
 36650  0076C4  6E18               	movwf	(i2GetPressureV_pa@mv+3)^0,c
 36651  0076C6                     i2l18581:
 36652                           
 36653                           ;monitor.c: 825:     int16_t p = mv;
 36654  0076C6  0060  F054  F019   	movff	i2GetPressureV_pa@mv,i2GetPressureV_pa@p
 36655  0076CC  0060  F058  F01A   	movff	i2GetPressureV_pa@mv+1,i2GetPressureV_pa@p+1
 36656                           
 36657                           ;monitor.c: 827:     if (p<0) p=0;
 36658  0076D2  AE1A               	btfss	(i2GetPressureV_pa@p+1)^0,7,c
 36659  0076D4  D004               	goto	i2l18587
 36660  0076D6  0E00               	movlw	0
 36661  0076D8  6E1A               	movwf	(i2GetPressureV_pa@p+1)^0,c
 36662  0076DA  0E00               	movlw	0
 36663  0076DC  6E19               	movwf	i2GetPressureV_pa@p^0,c
 36664  0076DE                     i2l18587:
 36665                           
 36666                           ;monitor.c: 828:     return p;
 36667  0076DE  0060  F064  F00F   	movff	i2GetPressureV_pa@p,?i2_GetPressureV_pa
 36668  0076E4  0060  F068  F010   	movff	i2GetPressureV_pa@p+1,?i2_GetPressureV_pa+1
 36669  0076EA  0012               	return		;funcret
 36670  0076EC                     __end_ofi2_GetPressureV_pa:
 36671                           	opt callstack 0
 36672                           
 36673 ;; *************** function i2_AdcGetData *****************
 36674 ;; Defined at:
 36675 ;;		line 89 in file "monitor.c"
 36676 ;; Parameters:    Size  Location     Type
 36677 ;;  id              2    6[COMRAM] int 
 36678 ;; Auto vars:     Size  Location     Type
 36679 ;;  AdcGetData      2    8[COMRAM] unsigned short 
 36680 ;; Return value:  Size  Location     Type
 36681 ;;                  2    6[COMRAM] unsigned short 
 36682 ;; Registers used:
 36683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36684 ;; Tracked objects:
 36685 ;;		On entry : 0/1
 36686 ;;		On exit  : 0/0
 36687 ;;		Unchanged: 0/0
 36688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36693 ;;Total ram usage:        4 bytes
 36694 ;; Hardware stack levels used:    1
 36695 ;; Hardware stack levels required when called:    1
 36696 ;; This function calls:
 36697 ;;		i2___wmul
 36698 ;; This function is called by:
 36699 ;;		i2_GetPressure_pa
 36700 ;;		i2_GetPressureV_pa
 36701 ;; This function uses a non-reentrant model
 36702 ;;
 36703                           
 36704                           	psect	text280
 36705  008998                     __ptext280:
 36706                           	opt callstack 0
 36707  008998                     i2_AdcGetData:
 36708                           	opt callstack 12
 36709                           
 36710                           ;monitor.c: 90:     adc_result_t data;;monitor.c: 91:     data = adcChannels[id].data;
 36711                           
 36712                           ;incstack = 0
 36713  008998  0060  F01C  F001   	movff	i2AdcGetData@id,i2___wmul@multiplier
 36714  00899E  0060  F020  F002   	movff	i2AdcGetData@id+1,i2___wmul@multiplier+1
 36715  0089A4  0E00               	movlw	0
 36716  0089A6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 36717  0089A8  0E05               	movlw	5
 36718  0089AA  6E03               	movwf	i2___wmul@multiplicand^0,c
 36719  0089AC  ECD3  F04C         	call	i2___wmul	;wreg free
 36720  0089B0  0EBE               	movlw	low (_adcChannels+2)
 36721  0089B2  2401               	addwf	?i2___wmul^0,w,c
 36722  0089B4  6ED9               	movwf	fsr2l,c
 36723  0089B6  0E02               	movlw	high (_adcChannels+2)
 36724  0089B8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 36725  0089BA  6EDA               	movwf	fsr2h,c
 36726  0089BC  006F FF78  F009    	movff	postinc2,i2AdcGetData@data
 36727  0089C2  006F FF74  F00A    	movff	postdec2,i2AdcGetData@data+1
 36728                           
 36729                           ;monitor.c: 92:     adcChannels[id].dataValid=0;
 36730  0089C8  0060  F01C  F001   	movff	i2AdcGetData@id,i2___wmul@multiplier
 36731  0089CE  0060  F020  F002   	movff	i2AdcGetData@id+1,i2___wmul@multiplier+1
 36732  0089D4  0E00               	movlw	0
 36733  0089D6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 36734  0089D8  0E05               	movlw	5
 36735  0089DA  6E03               	movwf	i2___wmul@multiplicand^0,c
 36736  0089DC  ECD3  F04C         	call	i2___wmul	;wreg free
 36737  0089E0  0EBD               	movlw	low (_adcChannels+1)
 36738  0089E2  2401               	addwf	?i2___wmul^0,w,c
 36739  0089E4  6ED9               	movwf	fsr2l,c
 36740  0089E6  0E02               	movlw	high (_adcChannels+1)
 36741  0089E8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 36742  0089EA  6EDA               	movwf	fsr2h,c
 36743  0089EC  0E00               	movlw	0
 36744  0089EE  6EDF               	movwf	indf2,c
 36745                           
 36746                           ;monitor.c: 93:     return data;
 36747  0089F0  0060  F024  F007   	movff	i2AdcGetData@data,?i2_AdcGetData
 36748  0089F6  0060  F028  F008   	movff	i2AdcGetData@data+1,?i2_AdcGetData+1
 36749  0089FC  0012               	return		;funcret
 36750  0089FE                     __end_ofi2_AdcGetData:
 36751                           	opt callstack 0
 36752                           
 36753 ;; *************** function i2_ClearVars *****************
 36754 ;; Defined at:
 36755 ;;		line 692 in file "monitor.c"
 36756 ;; Parameters:    Size  Location     Type
 36757 ;;		None
 36758 ;; Auto vars:     Size  Location     Type
 36759 ;;  ClearVars       2    2[COMRAM] int 
 36760 ;;  ClearVars       2    0[COMRAM] int 
 36761 ;; Return value:  Size  Location     Type
 36762 ;;                  1    wreg      void 
 36763 ;; Registers used:
 36764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36765 ;; Tracked objects:
 36766 ;;		On entry : 3C/2
 36767 ;;		On exit  : 3F/2
 36768 ;;		Unchanged: 0/0
 36769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36771 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36774 ;;Total ram usage:        4 bytes
 36775 ;; Hardware stack levels used:    1
 36776 ;; Hardware stack levels required when called:    1
 36777 ;; This function calls:
 36778 ;;		i2_ClearCircuitFailureAlarm
 36779 ;;		i2_ClearEPAboveSetAlarm
 36780 ;;		i2_ClearEPBelowSetAlarm
 36781 ;;		i2_ClearIPAboveSetAlarm
 36782 ;;		i2_ClearIPBelowSetAlarm
 36783 ;; This function is called by:
 36784 ;;		_MonitorPressureTask
 36785 ;;		i2_SetCalibrateState
 36786 ;; This function uses a non-reentrant model
 36787 ;;
 36788                           
 36789                           	psect	text281
 36790  004330                     __ptext281:
 36791                           	opt callstack 0
 36792  004330                     i2_ClearVars:
 36793                           	opt callstack 13
 36794                           
 36795                           ;monitor.c: 693:     count = 0;
 36796                           
 36797                           ;incstack = 0
 36798  004330  0E00               	movlw	0
 36799  004332  0102               	movlb	2	; () banked
 36800  004334  6F45               	movwf	(_count+1)& (0+255),b
 36801  004336  0E00               	movlw	0
 36802  004338  6F44               	movwf	_count& (0+255),b
 36803                           
 36804                           ;monitor.c: 694:     tt = 0;
 36805  00433A  0E00               	movlw	0
 36806  00433C  0100               	movlb	0	; () banked
 36807  00433E  6FC8               	movwf	_tt& (0+255),b
 36808  004340  0E00               	movlw	0
 36809  004342  6FC9               	movwf	(_tt+1)& (0+255),b
 36810  004344  0E00               	movlw	0
 36811  004346  6FCA               	movwf	(_tt+2)& (0+255),b
 36812  004348  0E00               	movlw	0
 36813  00434A  6FCB               	movwf	(_tt+3)& (0+255),b
 36814                           
 36815                           ;monitor.c: 695:     for (int i=0; i<25; i++) {
 36816  00434C  0E00               	movlw	0
 36817  00434E  6E02               	movwf	(i2ClearVars@i+1)^0,c
 36818  004350  0E00               	movlw	0
 36819  004352  6E01               	movwf	i2ClearVars@i^0,c
 36820  004354                     i2l18509:
 36821                           
 36822                           ;monitor.c: 696:         prFastBuffer[i] = 0;
 36823  004354  90D8               	bcf	status,0,c
 36824  004356  3401               	rlcf	i2ClearVars@i^0,w,c
 36825  004358  6ED9               	movwf	fsr2l,c
 36826  00435A  3402               	rlcf	(i2ClearVars@i+1)^0,w,c
 36827  00435C  6EDA               	movwf	fsr2h,c
 36828  00435E  0E00               	movlw	low _prFastBuffer
 36829  004360  26D9               	addwf	fsr2l,f,c
 36830  004362  0E04               	movlw	high _prFastBuffer
 36831  004364  22DA               	addwfc	fsr2h,f,c
 36832  004366  0E00               	movlw	0
 36833  004368  6EDE               	movwf	postinc2,c
 36834  00436A  0E00               	movlw	0
 36835  00436C  6EDD               	movwf	postdec2,c
 36836                           
 36837                           ;monitor.c: 697:         prSlowBuffer[i] = 0;
 36838  00436E  90D8               	bcf	status,0,c
 36839  004370  3401               	rlcf	i2ClearVars@i^0,w,c
 36840  004372  6ED9               	movwf	fsr2l,c
 36841  004374  3402               	rlcf	(i2ClearVars@i+1)^0,w,c
 36842  004376  6EDA               	movwf	fsr2h,c
 36843  004378  0E32               	movlw	low _prSlowBuffer
 36844  00437A  26D9               	addwf	fsr2l,f,c
 36845  00437C  0E04               	movlw	high _prSlowBuffer
 36846  00437E  22DA               	addwfc	fsr2h,f,c
 36847  004380  0E00               	movlw	0
 36848  004382  6EDE               	movwf	postinc2,c
 36849  004384  0E00               	movlw	0
 36850  004386  6EDD               	movwf	postdec2,c
 36851                           
 36852                           ;monitor.c: 698:     }
 36853  004388  4A01               	infsnz	i2ClearVars@i^0,f,c
 36854  00438A  2A02               	incf	(i2ClearVars@i+1)^0,f,c
 36855  00438C  BE02               	btfsc	(i2ClearVars@i+1)^0,7,c
 36856  00438E  D7E2               	goto	i2l18509
 36857  004390  5002               	movf	(i2ClearVars@i+1)^0,w,c
 36858  004392  E104               	bnz	i2u1804_40
 36859  004394  0E19               	movlw	25
 36860  004396  5C01               	subwf	i2ClearVars@i^0,w,c
 36861  004398  A0D8               	btfss	status,0,c
 36862  00439A  D7DC               	goto	i2l18509
 36863  00439C                     i2u1804_40:
 36864                           
 36865                           ;monitor.c: 699:     for (int i=0; i<10; i++) {
 36866  00439C  0E00               	movlw	0
 36867  00439E  6E04               	movwf	(i2ClearVars@i_4906+1)^0,c
 36868  0043A0  0E00               	movlw	0
 36869  0043A2  6E03               	movwf	i2ClearVars@i_4906^0,c
 36870  0043A4                     i2l18521:
 36871                           
 36872                           ;monitor.c: 700:         tdiBuffer[i] = 0;
 36873  0043A4  90D8               	bcf	status,0,c
 36874  0043A6  3403               	rlcf	i2ClearVars@i_4906^0,w,c
 36875  0043A8  6ED9               	movwf	fsr2l,c
 36876  0043AA  3404               	rlcf	(i2ClearVars@i_4906+1)^0,w,c
 36877  0043AC  6EDA               	movwf	fsr2h,c
 36878  0043AE  0E61               	movlw	low _tdiBuffer
 36879  0043B0  26D9               	addwf	fsr2l,f,c
 36880  0043B2  0E03               	movlw	high _tdiBuffer
 36881  0043B4  22DA               	addwfc	fsr2h,f,c
 36882  0043B6  0E00               	movlw	0
 36883  0043B8  6EDE               	movwf	postinc2,c
 36884  0043BA  0E00               	movlw	0
 36885  0043BC  6EDD               	movwf	postdec2,c
 36886                           
 36887                           ;monitor.c: 701:         tdeBuffer[i] = 0;
 36888  0043BE  90D8               	bcf	status,0,c
 36889  0043C0  3403               	rlcf	i2ClearVars@i_4906^0,w,c
 36890  0043C2  6ED9               	movwf	fsr2l,c
 36891  0043C4  3404               	rlcf	(i2ClearVars@i_4906+1)^0,w,c
 36892  0043C6  6EDA               	movwf	fsr2h,c
 36893  0043C8  0E75               	movlw	low _tdeBuffer
 36894  0043CA  26D9               	addwf	fsr2l,f,c
 36895  0043CC  0E03               	movlw	high _tdeBuffer
 36896  0043CE  22DA               	addwfc	fsr2h,f,c
 36897  0043D0  0E00               	movlw	0
 36898  0043D2  6EDE               	movwf	postinc2,c
 36899  0043D4  0E00               	movlw	0
 36900  0043D6  6EDD               	movwf	postdec2,c
 36901                           
 36902                           ;monitor.c: 702:     }
 36903  0043D8  4A03               	infsnz	i2ClearVars@i_4906^0,f,c
 36904  0043DA  2A04               	incf	(i2ClearVars@i_4906+1)^0,f,c
 36905  0043DC  BE04               	btfsc	(i2ClearVars@i_4906+1)^0,7,c
 36906  0043DE  D7E2               	goto	i2l18521
 36907  0043E0  5004               	movf	(i2ClearVars@i_4906+1)^0,w,c
 36908  0043E2  E104               	bnz	i2u1805_40
 36909  0043E4  0E0A               	movlw	10
 36910  0043E6  5C03               	subwf	i2ClearVars@i_4906^0,w,c
 36911  0043E8  A0D8               	btfss	status,0,c
 36912  0043EA  D7DC               	goto	i2l18521
 36913  0043EC                     i2u1805_40:
 36914                           
 36915                           ;monitor.c: 703:     numtdi = 0;
 36916  0043EC  0E00               	movlw	0
 36917  0043EE  0100               	movlb	0	; () banked
 36918  0043F0  6FD3               	movwf	(_numtdi+1)& (0+255),b
 36919  0043F2  0E00               	movlw	0
 36920  0043F4  6FD2               	movwf	_numtdi& (0+255),b
 36921                           
 36922                           ;monitor.c: 704:     numtde = 0;
 36923  0043F6  0E00               	movlw	0
 36924  0043F8  6FD1               	movwf	(_numtde+1)& (0+255),b
 36925  0043FA  0E00               	movlw	0
 36926  0043FC  6FD0               	movwf	_numtde& (0+255),b
 36927                           
 36928                           ;monitor.c: 705:     ti = 0;
 36929  0043FE  0E00               	movlw	0
 36930  004400  0102               	movlb	2	; () banked
 36931  004402  6F5B               	movwf	(_ti+1)& (0+255),b
 36932  004404  0E00               	movlw	0
 36933  004406  6F5A               	movwf	_ti& (0+255),b
 36934                           
 36935                           ;monitor.c: 706:     te = 0;
 36936  004408  0E00               	movlw	0
 36937  00440A  6F59               	movwf	(_te+1)& (0+255),b
 36938  00440C  0E00               	movlw	0
 36939  00440E  6F58               	movwf	_te& (0+255),b
 36940                           
 36941                           ;monitor.c: 707:     tdi = 0;
 36942  004410  0E00               	movlw	0
 36943  004412  0101               	movlb	1	; () banked
 36944  004414  6FDA               	movwf	(_tdi+1)& (0+255),b
 36945  004416  0E00               	movlw	0
 36946  004418  6FD9               	movwf	_tdi& (0+255),b
 36947                           
 36948                           ;monitor.c: 708:     tde = 0;
 36949  00441A  0E00               	movlw	0
 36950  00441C  6FD8               	movwf	(_tde+1)& (0+255),b
 36951  00441E  0E00               	movlw	0
 36952  004420  6FD7               	movwf	_tde& (0+255),b
 36953                           
 36954                           ;monitor.c: 709:     tt = 0;
 36955  004422  0E00               	movlw	0
 36956  004424  0100               	movlb	0	; () banked
 36957  004426  6FC8               	movwf	_tt& (0+255),b
 36958  004428  0E00               	movlw	0
 36959  00442A  6FC9               	movwf	(_tt+1)& (0+255),b
 36960  00442C  0E00               	movlw	0
 36961  00442E  6FCA               	movwf	(_tt+2)& (0+255),b
 36962  004430  0E00               	movlw	0
 36963  004432  6FCB               	movwf	(_tt+3)& (0+255),b
 36964                           
 36965                           ;monitor.c: 710:     ttExt = 0;
 36966  004434  0E00               	movlw	0
 36967  004436  0102               	movlb	2	; () banked
 36968  004438  6F65               	movwf	(_ttExt+1)& (0+255),b
 36969  00443A  0E00               	movlw	0
 36970  00443C  6F64               	movwf	_ttExt& (0+255),b
 36971                           
 36972                           ;monitor.c: 711:     ttNoAlarm = 0;
 36973  00443E  0E00               	movlw	0
 36974  004440  6F5F               	movwf	(_ttNoAlarm+1)& (0+255),b
 36975  004442  0E00               	movlw	0
 36976  004444  6F5E               	movwf	_ttNoAlarm& (0+255),b
 36977                           
 36978                           ;monitor.c: 712:     ttAlarm = 0;
 36979  004446  0E00               	movlw	0
 36980  004448  6F5D               	movwf	(_ttAlarm+1)& (0+255),b
 36981  00444A  0E00               	movlw	0
 36982  00444C  6F5C               	movwf	_ttAlarm& (0+255),b
 36983                           
 36984                           ;monitor.c: 713:     enableAlarms = 0;
 36985  00444E  0E00               	movlw	0
 36986  004450  0100               	movlb	0	; () banked
 36987  004452  6FF4               	movwf	_enableAlarms& (0+255),b
 36988                           
 36989                           ;monitor.c: 714:     tt1 = 0;
 36990  004454  0E00               	movlw	0
 36991  004456  0102               	movlb	2	; () banked
 36992  004458  6F67               	movwf	(_tt1+1)& (0+255),b
 36993  00445A  0E00               	movlw	0
 36994  00445C  6F66               	movwf	_tt1& (0+255),b
 36995                           
 36996                           ;monitor.c: 715:     tt2 = 0;
 36997  00445E  0E00               	movlw	0
 36998  004460  0100               	movlb	0	; () banked
 36999  004462  6FDF               	movwf	(_tt2+1)& (0+255),b
 37000  004464  0E00               	movlw	0
 37001  004466  6FDE               	movwf	_tt2& (0+255),b
 37002                           
 37003                           ;monitor.c: 716:     tt3 = 0;
 37004  004468  0E00               	movlw	0
 37005  00446A  0101               	movlb	1	; () banked
 37006  00446C  6FDC               	movwf	(_tt3+1)& (0+255),b
 37007  00446E  0E00               	movlw	0
 37008  004470  6FDB               	movwf	_tt3& (0+255),b
 37009                           
 37010                           ;monitor.c: 717:     tt4 = 0;
 37011  004472  0E00               	movlw	0
 37012  004474  0100               	movlb	0	; () banked
 37013  004476  6FDD               	movwf	(_tt4+1)& (0+255),b
 37014  004478  0E00               	movlw	0
 37015  00447A  6FDC               	movwf	_tt4& (0+255),b
 37016                           
 37017                           ;monitor.c: 718:     tt12 = 0;
 37018  00447C  0E00               	movlw	0
 37019  00447E  0102               	movlb	2	; () banked
 37020  004480  6F63               	movwf	(_tt12+1)& (0+255),b
 37021  004482  0E00               	movlw	0
 37022  004484  6F62               	movwf	_tt12& (0+255),b
 37023                           
 37024                           ;monitor.c: 719:     tt34 = 0;
 37025  004486  0E00               	movlw	0
 37026  004488  6F61               	movwf	(_tt34+1)& (0+255),b
 37027  00448A  0E00               	movlw	0
 37028  00448C  6F60               	movwf	_tt34& (0+255),b
 37029                           
 37030                           ;monitor.c: 720:     bpm = 0;
 37031  00448E  0E00               	movlw	0
 37032  004490  6F57               	movwf	(_bpm+1)& (0+255),b
 37033  004492  0E00               	movlw	0
 37034  004494  6F56               	movwf	_bpm& (0+255),b
 37035                           
 37036                           ;monitor.c: 721:     bp = 0;
 37037  004496  0E00               	movlw	0
 37038  004498  6FBB               	movwf	(_bp+1)& (0+255),b
 37039  00449A  0E00               	movlw	0
 37040  00449C  6FBA               	movwf	_bp& (0+255),b
 37041                           
 37042                           ;monitor.c: 723:     pi = 0;
 37043  00449E  0E00               	movlw	0
 37044  0044A0  0101               	movlb	1	; () banked
 37045  0044A2  6FD6               	movwf	(_pi+1)& (0+255),b
 37046  0044A4  0E00               	movlw	0
 37047  0044A6  6FD5               	movwf	_pi& (0+255),b
 37048                           
 37049                           ;monitor.c: 724:     pe = 0;
 37050  0044A8  0E00               	movlw	0
 37051  0044AA  0100               	movlb	0	; () banked
 37052  0044AC  6FDB               	movwf	(_pe+1)& (0+255),b
 37053  0044AE  0E00               	movlw	0
 37054  0044B0  6FDA               	movwf	_pe& (0+255),b
 37055                           
 37056                           ;monitor.c: 725:     rpi = 0;
 37057  0044B2  0E00               	movlw	0
 37058  0044B4  0102               	movlb	2	; () banked
 37059  0044B6  6F49               	movwf	(_rpi+1)& (0+255),b
 37060  0044B8  0E00               	movlw	0
 37061  0044BA  6F48               	movwf	_rpi& (0+255),b
 37062                           
 37063                           ;monitor.c: 726:     rpe = 0;
 37064  0044BC  0E00               	movlw	0
 37065  0044BE  6F47               	movwf	(_rpe+1)& (0+255),b
 37066  0044C0  0E00               	movlw	0
 37067  0044C2  6F46               	movwf	_rpe& (0+255),b
 37068                           
 37069                           ;monitor.c: 727:     lrpi = 0;
 37070  0044C4  0E00               	movlw	0
 37071  0044C6  0101               	movlb	1	; () banked
 37072  0044C8  6FD2               	movwf	(_lrpi+1)& (0+255),b
 37073  0044CA  0E00               	movlw	0
 37074  0044CC  6FD1               	movwf	_lrpi& (0+255),b
 37075                           
 37076                           ;monitor.c: 728:     lrpe = 0;
 37077  0044CE  0E00               	movlw	0
 37078  0044D0  0100               	movlb	0	; () banked
 37079  0044D2  6FD5               	movwf	(_lrpe+1)& (0+255),b
 37080  0044D4  0E00               	movlw	0
 37081  0044D6  6FD4               	movwf	_lrpe& (0+255),b
 37082                           
 37083                           ;monitor.c: 729:     maxPressure = 0;
 37084  0044D8  0E00               	movlw	0
 37085  0044DA  0102               	movlb	2	; () banked
 37086  0044DC  6F53               	movwf	(_maxPressure+1)& (0+255),b
 37087  0044DE  0E00               	movlw	0
 37088  0044E0  6F52               	movwf	_maxPressure& (0+255),b
 37089                           
 37090                           ;monitor.c: 730:     minPressure = 40*5;
 37091  0044E2  0E00               	movlw	0
 37092  0044E4  0100               	movlb	0	; () banked
 37093  0044E6  6FD7               	movwf	(_minPressure+1)& (0+255),b
 37094  0044E8  0EC8               	movlw	200
 37095  0044EA  6FD6               	movwf	_minPressure& (0+255),b
 37096                           
 37097                           ;monitor.c: 731:     pHighAcc = 0;
 37098  0044EC  0E00               	movlw	0
 37099  0044EE  0102               	movlb	2	; () banked
 37100  0044F0  6F1E               	movwf	_pHighAcc& (0+255),b
 37101  0044F2  0E00               	movlw	0
 37102  0044F4  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 37103  0044F6  0E00               	movlw	0
 37104  0044F8  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 37105  0044FA  0E00               	movlw	0
 37106  0044FC  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 37107                           
 37108                           ;monitor.c: 732:     pLowAcc = 0;
 37109  0044FE  0E00               	movlw	0
 37110  004500  6F1A               	movwf	_pLowAcc& (0+255),b
 37111  004502  0E00               	movlw	0
 37112  004504  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 37113  004506  0E00               	movlw	0
 37114  004508  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 37115  00450A  0E00               	movlw	0
 37116  00450C  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 37117                           
 37118                           ;monitor.c: 734:     alarmMaxPressure = 0;
 37119  00450E  0E00               	movlw	0
 37120  004510  6F51               	movwf	(_alarmMaxPressure+1)& (0+255),b
 37121  004512  0E00               	movlw	0
 37122  004514  6F50               	movwf	_alarmMaxPressure& (0+255),b
 37123                           
 37124                           ;monitor.c: 735:     prSlow = 0;
 37125  004516  0E00               	movlw	0
 37126  004518  0100               	movlb	0	; () banked
 37127  00451A  6FCF               	movwf	(_prSlow+1)& (0+255),b
 37128  00451C  0E00               	movlw	0
 37129  00451E  6FCE               	movwf	_prSlow& (0+255),b
 37130                           
 37131                           ;monitor.c: 736:     prSlowDev = 0;
 37132  004520  0E00               	movlw	0
 37133  004522  0102               	movlb	2	; () banked
 37134  004524  6F43               	movwf	(_prSlowDev+1)& (0+255),b
 37135  004526  0E00               	movlw	0
 37136  004528  6F42               	movwf	_prSlowDev& (0+255),b
 37137                           
 37138                           ;monitor.c: 737:     prSlowNumStable = 0;
 37139  00452A  0E00               	movlw	0
 37140  00452C  6F41               	movwf	(_prSlowNumStable+1)& (0+255),b
 37141  00452E  0E00               	movlw	0
 37142  004530  6F40               	movwf	_prSlowNumStable& (0+255),b
 37143                           
 37144                           ;monitor.c: 738:     hiLimit = 40*5;
 37145  004532  0E00               	movlw	0
 37146  004534  0101               	movlb	1	; () banked
 37147  004536  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 37148  004538  0EC8               	movlw	200
 37149  00453A  6FCF               	movwf	_hiLimit& (0+255),b
 37150                           
 37151                           ;monitor.c: 739:     loLimit = 0;
 37152  00453C  0E00               	movlw	0
 37153  00453E  6FCE               	movwf	(_loLimit+1)& (0+255),b
 37154  004540  0E00               	movlw	0
 37155  004542  6FCD               	movwf	_loLimit& (0+255),b
 37156                           
 37157                           ;monitor.c: 740:     volumeAcc = 0;
 37158  004544  0E00               	movlw	0
 37159  004546  0102               	movlb	2	; () banked
 37160  004548  6F22               	movwf	_volumeAcc& (0+255),b
 37161  00454A  0E00               	movlw	0
 37162  00454C  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 37163  00454E  0E00               	movlw	0
 37164  004550  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 37165  004552  0E00               	movlw	0
 37166  004554  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 37167                           
 37168                           ;monitor.c: 741:     volume = 0;
 37169  004556  0E00               	movlw	0
 37170  004558  0101               	movlb	1	; () banked
 37171  00455A  6FDE               	movwf	(_volume+1)& (0+255),b
 37172  00455C  0E00               	movlw	0
 37173  00455E  6FDD               	movwf	_volume& (0+255),b
 37174                           
 37175                           ;monitor.c: 743:     alarmSV1=1;
 37176  004560  0E01               	movlw	1
 37177  004562  0102               	movlb	2	; () banked
 37178  004564  6FA0               	movwf	_alarmSV1& (0+255),b
 37179                           
 37180                           ; BSR set to: 2
 37181                           ;monitor.c: 745:     ClearEPAboveSetAlarm();
 37182  004566  EC21  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 37183                           
 37184                           ; BSR set to: 0
 37185                           ;monitor.c: 746:     ClearEPBelowSetAlarm();
 37186  00456A  EC16  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 37187                           
 37188                           ; BSR set to: 0
 37189                           ;monitor.c: 747:     ClearIPAboveSetAlarm();
 37190  00456E  EC0B  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 37191                           
 37192                           ; BSR set to: 0
 37193                           ;monitor.c: 748:     ClearIPBelowSetAlarm();
 37194  004572  EC00  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 37195                           
 37196                           ; BSR set to: 0
 37197                           ;monitor.c: 749:     ClearCircuitFailureAlarm();
 37198  004576  ECB4  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 37199                           
 37200                           ; BSR set to: 2
 37201  00457A  0012               	return		;funcret
 37202  00457C                     __end_ofi2_ClearVars:
 37203                           	opt callstack 0
 37204                           
 37205 ;; *************** function i2_MonitorEnable *****************
 37206 ;; Defined at:
 37207 ;;		line 272 in file "monitor.c"
 37208 ;; Parameters:    Size  Location     Type
 37209 ;;		None
 37210 ;; Auto vars:     Size  Location     Type
 37211 ;;		None
 37212 ;; Return value:  Size  Location     Type
 37213 ;;                  1    wreg      void 
 37214 ;; Registers used:
 37215 ;;		wreg, status,2
 37216 ;; Tracked objects:
 37217 ;;		On entry : 3F/0
 37218 ;;		On exit  : 3F/2
 37219 ;;		Unchanged: 0/0
 37220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37225 ;;Total ram usage:        0 bytes
 37226 ;; Hardware stack levels used:    1
 37227 ;; This function calls:
 37228 ;;		Nothing
 37229 ;; This function is called by:
 37230 ;;		_UpdateState
 37231 ;; This function uses a non-reentrant model
 37232 ;;
 37233                           
 37234                           	psect	text282
 37235  00A518                     __ptext282:
 37236                           	opt callstack 0
 37237  00A518                     i2_MonitorEnable:
 37238                           	opt callstack 12
 37239                           
 37240                           ; BSR set to: 0
 37241                           
 37242                           ; BSR set to: 2
 37243                           ;incstack = 0
 37244  00A518  0E01               	movlw	1
 37245  00A51A  0102               	movlb	2	; () banked
 37246  00A51C  6FA2               	movwf	monitor@enable& (0+255),b
 37247                           
 37248                           ; BSR set to: 2
 37249  00A51E  0012               	return		;funcret
 37250  00A520                     __end_ofi2_MonitorEnable:
 37251                           	opt callstack 0
 37252                           
 37253 ;; *************** function i2_MonitorDisable *****************
 37254 ;; Defined at:
 37255 ;;		line 273 in file "monitor.c"
 37256 ;; Parameters:    Size  Location     Type
 37257 ;;		None
 37258 ;; Auto vars:     Size  Location     Type
 37259 ;;		None
 37260 ;; Return value:  Size  Location     Type
 37261 ;;                  1    wreg      void 
 37262 ;; Registers used:
 37263 ;;		wreg, status,2
 37264 ;; Tracked objects:
 37265 ;;		On entry : 3D/2
 37266 ;;		On exit  : 3F/2
 37267 ;;		Unchanged: 0/0
 37268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37273 ;;Total ram usage:        0 bytes
 37274 ;; Hardware stack levels used:    1
 37275 ;; This function calls:
 37276 ;;		Nothing
 37277 ;; This function is called by:
 37278 ;;		_UpdateState
 37279 ;; This function uses a non-reentrant model
 37280 ;;
 37281                           
 37282                           	psect	text283
 37283  00A520                     __ptext283:
 37284                           	opt callstack 0
 37285  00A520                     i2_MonitorDisable:
 37286                           	opt callstack 12
 37287                           
 37288                           ; BSR set to: 2
 37289                           ;incstack = 0
 37290  00A520  0E00               	movlw	0
 37291  00A522  0102               	movlb	2	; () banked
 37292  00A524  6FA2               	movwf	monitor@enable& (0+255),b
 37293                           
 37294                           ; BSR set to: 2
 37295  00A526  0012               	return		;funcret
 37296  00A528                     __end_ofi2_MonitorDisable:
 37297                           	opt callstack 0
 37298                           
 37299 ;; *************** function i2_LCDOn *****************
 37300 ;; Defined at:
 37301 ;;		line 119 in file "lcd.c"
 37302 ;; Parameters:    Size  Location     Type
 37303 ;;		None
 37304 ;; Auto vars:     Size  Location     Type
 37305 ;;		None
 37306 ;; Return value:  Size  Location     Type
 37307 ;;                  1    wreg      void 
 37308 ;; Registers used:
 37309 ;;		wreg, status,2
 37310 ;; Tracked objects:
 37311 ;;		On entry : 3F/2
 37312 ;;		On exit  : 3F/1
 37313 ;;		Unchanged: 0/0
 37314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37319 ;;Total ram usage:        0 bytes
 37320 ;; Hardware stack levels used:    1
 37321 ;; This function calls:
 37322 ;;		Nothing
 37323 ;; This function is called by:
 37324 ;;		_UpdateState
 37325 ;; This function uses a non-reentrant model
 37326 ;;
 37327                           
 37328                           	psect	text284
 37329  00A434                     __ptext284:
 37330                           	opt callstack 0
 37331  00A434                     i2_LCDOn:
 37332                           	opt callstack 12
 37333                           
 37334                           ; BSR set to: 2
 37335                           ;lcd.c: 120:     LED = 1;
 37336                           
 37337                           ; BSR set to: 2
 37338                           ;incstack = 0
 37339  00A434  0E01               	movlw	1
 37340  00A436  0101               	movlb	1	; () banked
 37341  00A438  6FF0               	movwf	_LED& (0+255),b
 37342                           
 37343                           ; BSR set to: 1
 37344  00A43A  8ABC               	bsf	188,5,c	;volatile
 37345                           
 37346                           ; BSR set to: 1
 37347  00A43C  0012               	return		;funcret
 37348  00A43E                     __end_ofi2_LCDOn:
 37349                           	opt callstack 0
 37350                           
 37351 ;; *************** function i2_LCDOff *****************
 37352 ;; Defined at:
 37353 ;;		line 112 in file "lcd.c"
 37354 ;; Parameters:    Size  Location     Type
 37355 ;;		None
 37356 ;; Auto vars:     Size  Location     Type
 37357 ;;		None
 37358 ;; Return value:  Size  Location     Type
 37359 ;;                  1    wreg      void 
 37360 ;; Registers used:
 37361 ;;		wreg, status,2
 37362 ;; Tracked objects:
 37363 ;;		On entry : 3F/2
 37364 ;;		On exit  : 3F/1
 37365 ;;		Unchanged: 0/0
 37366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37371 ;;Total ram usage:        0 bytes
 37372 ;; Hardware stack levels used:    1
 37373 ;; This function calls:
 37374 ;;		Nothing
 37375 ;; This function is called by:
 37376 ;;		_UpdateState
 37377 ;; This function uses a non-reentrant model
 37378 ;;
 37379                           
 37380                           	psect	text285
 37381  00A43E                     __ptext285:
 37382                           	opt callstack 0
 37383  00A43E                     i2_LCDOff:
 37384                           	opt callstack 12
 37385                           
 37386                           ; BSR set to: 2
 37387                           ;lcd.c: 113:     LED = 0;
 37388                           
 37389                           ; BSR set to: 1
 37390                           ;incstack = 0
 37391  00A43E  0E00               	movlw	0
 37392  00A440  0101               	movlb	1	; () banked
 37393  00A442  6FF0               	movwf	_LED& (0+255),b
 37394                           
 37395                           ; BSR set to: 1
 37396  00A444  9ABC               	bcf	188,5,c	;volatile
 37397                           
 37398                           ; BSR set to: 1
 37399  00A446  0012               	return		;funcret
 37400  00A448                     __end_ofi2_LCDOff:
 37401                           	opt callstack 0
 37402                           
 37403 ;; *************** function i2_EnableAlarmSV1 *****************
 37404 ;; Defined at:
 37405 ;;		line 877 in file "monitor.c"
 37406 ;; Parameters:    Size  Location     Type
 37407 ;;		None
 37408 ;; Auto vars:     Size  Location     Type
 37409 ;;		None
 37410 ;; Return value:  Size  Location     Type
 37411 ;;                  1    wreg      void 
 37412 ;; Registers used:
 37413 ;;		wreg, status,2
 37414 ;; Tracked objects:
 37415 ;;		On entry : 3D/2
 37416 ;;		On exit  : 3F/0
 37417 ;;		Unchanged: 0/0
 37418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37423 ;;Total ram usage:        0 bytes
 37424 ;; Hardware stack levels used:    1
 37425 ;; This function calls:
 37426 ;;		Nothing
 37427 ;; This function is called by:
 37428 ;;		_UpdateState
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text286
 37433  00A528                     __ptext286:
 37434                           	opt callstack 0
 37435  00A528                     i2_EnableAlarmSV1:
 37436                           	opt callstack 12
 37437                           
 37438                           ;monitor.c: 878:     disableAlarmSV1=0;
 37439                           
 37440                           ; BSR set to: 1
 37441                           ;incstack = 0
 37442  00A528  0E00               	movlw	0
 37443  00A52A  0100               	movlb	0	; () banked
 37444  00A52C  6FF3               	movwf	_disableAlarmSV1& (0+255),b
 37445                           
 37446                           ; BSR set to: 0
 37447  00A52E  0012               	return		;funcret
 37448  00A530                     __end_ofi2_EnableAlarmSV1:
 37449                           	opt callstack 0
 37450                           
 37451 ;; *************** function _SetVolumeControl *****************
 37452 ;; Defined at:
 37453 ;;		line 197 in file "monitor.c"
 37454 ;; Parameters:    Size  Location     Type
 37455 ;;  vc              1    wreg     _Bool 
 37456 ;; Auto vars:     Size  Location     Type
 37457 ;;  vc              1    0[COMRAM] _Bool 
 37458 ;; Return value:  Size  Location     Type
 37459 ;;                  1    wreg      void 
 37460 ;; Registers used:
 37461 ;;		wreg
 37462 ;; Tracked objects:
 37463 ;;		On entry : 3F/2
 37464 ;;		On exit  : 0/0
 37465 ;;		Unchanged: 0/0
 37466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37471 ;;Total ram usage:        1 bytes
 37472 ;; Hardware stack levels used:    1
 37473 ;; This function calls:
 37474 ;;		Nothing
 37475 ;; This function is called by:
 37476 ;;		_UpdateState
 37477 ;; This function uses a non-reentrant model
 37478 ;;
 37479                           
 37480                           	psect	text287
 37481  00A448                     __ptext287:
 37482                           	opt callstack 0
 37483  00A448                     _SetVolumeControl:
 37484                           	opt callstack 12
 37485                           
 37486                           ; BSR set to: 0
 37487                           ;incstack = 0
 37488                           ;SetVolumeControl@vc stored from wreg
 37489  00A448  6E01               	movwf	SetVolumeControl@vc^0,c
 37490  00A44A  0060  F004  F2A1   	movff	SetVolumeControl@vc,_volumeControl
 37491  00A450  0012               	return		;funcret
 37492  00A452                     __end_of_SetVolumeControl:
 37493                           	opt callstack 0
 37494                           
 37495 ;; *************** function _SetTarget *****************
 37496 ;; Defined at:
 37497 ;;		line 199 in file "monitor.c"
 37498 ;; Parameters:    Size  Location     Type
 37499 ;;  pmax            2   26[COMRAM] short 
 37500 ;;  ip              2   28[COMRAM] short 
 37501 ;;  ep              2   30[COMRAM] short 
 37502 ;;  br              2   32[COMRAM] unsigned short 
 37503 ;;  vmax            2   34[COMRAM] short 
 37504 ;;  vmin            2   36[COMRAM] short 
 37505 ;; Auto vars:     Size  Location     Type
 37506 ;;		None
 37507 ;; Return value:  Size  Location     Type
 37508 ;;                  1    wreg      void 
 37509 ;; Registers used:
 37510 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 37511 ;; Tracked objects:
 37512 ;;		On entry : 3F/0
 37513 ;;		On exit  : 0/0
 37514 ;;		Unchanged: 0/0
 37515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37516 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37519 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37520 ;;Total ram usage:       12 bytes
 37521 ;; Hardware stack levels used:    1
 37522 ;; Hardware stack levels required when called:    1
 37523 ;; This function calls:
 37524 ;;		i2___aldiv
 37525 ;;		i2___wmul
 37526 ;; This function is called by:
 37527 ;;		_UpdateState
 37528 ;; This function uses a non-reentrant model
 37529 ;;
 37530                           
 37531                           	psect	text288
 37532  006DDC                     __ptext288:
 37533                           	opt callstack 0
 37534  006DDC                     _SetTarget:
 37535                           	opt callstack 11
 37536                           
 37537                           ; BSR set to: 0
 37538                           ;monitor.c: 206:     targetHigh = ip*5;
 37539                           
 37540                           ;incstack = 0
 37541  006DDC  0060  F074  F001   	movff	SetTarget@ip,i2___wmul@multiplier
 37542  006DE2  0060  F078  F002   	movff	SetTarget@ip+1,i2___wmul@multiplier+1
 37543  006DE8  0E00               	movlw	0
 37544  006DEA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37545  006DEC  0E05               	movlw	5
 37546  006DEE  6E03               	movwf	i2___wmul@multiplicand^0,c
 37547  006DF0  ECD3  F04C         	call	i2___wmul	;wreg free
 37548  006DF4  0060  F004  F1E3   	movff	?i2___wmul,_targetHigh
 37549  006DFA  0060  F008  F1E4   	movff	?i2___wmul+1,_targetHigh+1
 37550                           
 37551                           ;monitor.c: 207:     targetLow = ep*5;
 37552  006E00  0060  F07C  F001   	movff	SetTarget@ep,i2___wmul@multiplier
 37553  006E06  0060  F080  F002   	movff	SetTarget@ep+1,i2___wmul@multiplier+1
 37554  006E0C  0E00               	movlw	0
 37555  006E0E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37556  006E10  0E05               	movlw	5
 37557  006E12  6E03               	movwf	i2___wmul@multiplicand^0,c
 37558  006E14  ECD3  F04C         	call	i2___wmul	;wreg free
 37559  006E18  0060  F004  F1E1   	movff	?i2___wmul,_targetLow
 37560  006E1E  0060  F008  F1E2   	movff	?i2___wmul+1,_targetLow+1
 37561                           
 37562                           ;monitor.c: 208:     if (br!=0) targetBp = 60000/br; else targetBp = 3000;
 37563  006E24  5021               	movf	SetTarget@br^0,w,c
 37564  006E26  1022               	iorwf	(SetTarget@br+1)^0,w,c
 37565  006E28  B4D8               	btfsc	status,2,c
 37566  006E2A  D019               	goto	i2l18789
 37567  006E2C  0E60               	movlw	96
 37568  006E2E  6E0D               	movwf	i2___aldiv@dividend^0,c
 37569  006E30  0EEA               	movlw	234
 37570  006E32  6E0E               	movwf	(i2___aldiv@dividend+1)^0,c
 37571  006E34  0E00               	movlw	0
 37572  006E36  6E0F               	movwf	(i2___aldiv@dividend+2)^0,c
 37573  006E38  0E00               	movlw	0
 37574  006E3A  6E10               	movwf	(i2___aldiv@dividend+3)^0,c
 37575  006E3C  0060  F084  F011   	movff	SetTarget@br,i2___aldiv@divisor
 37576  006E42  0060  F088  F012   	movff	SetTarget@br+1,i2___aldiv@divisor+1
 37577  006E48  6A13               	clrf	(i2___aldiv@divisor+2)^0,c
 37578  006E4A  6A14               	clrf	(i2___aldiv@divisor+3)^0,c
 37579  006E4C  EC1E  F036         	call	i2___aldiv	;wreg free
 37580  006E50  0060  F034  F26C   	movff	?i2___aldiv,_targetBp
 37581  006E56  0060  F038  F26D   	movff	?i2___aldiv+1,_targetBp+1
 37582  006E5C  D005               	goto	i2l18791
 37583  006E5E                     i2l18789:
 37584  006E5E  0E0B               	movlw	11
 37585  006E60  0102               	movlb	2	; () banked
 37586  006E62  6F6D               	movwf	(_targetBp+1)& (0+255),b
 37587  006E64  0EB8               	movlw	184
 37588  006E66  6F6C               	movwf	_targetBp& (0+255),b
 37589  006E68                     i2l18791:
 37590                           
 37591                           ;monitor.c: 209:     targetPmax = pmax*5;
 37592  006E68  0060  F06C  F001   	movff	SetTarget@pmax,i2___wmul@multiplier
 37593  006E6E  0060  F070  F002   	movff	SetTarget@pmax+1,i2___wmul@multiplier+1
 37594  006E74  0E00               	movlw	0
 37595  006E76  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37596  006E78  0E05               	movlw	5
 37597  006E7A  6E03               	movwf	i2___wmul@multiplicand^0,c
 37598  006E7C  ECD3  F04C         	call	i2___wmul	;wreg free
 37599  006E80  0060  F004  F26E   	movff	?i2___wmul,_targetPmax
 37600  006E86  0060  F008  F26F   	movff	?i2___wmul+1,_targetPmax+1
 37601                           
 37602                           ;monitor.c: 210:     volumeMax = vmax;
 37603  006E8C  0060  F08C  F26A   	movff	SetTarget@vmax,_volumeMax
 37604  006E92  0060  F090  F26B   	movff	SetTarget@vmax+1,_volumeMax+1
 37605                           
 37606                           ;monitor.c: 211:     volumeMin = vmin;
 37607  006E98  0060  F094  F268   	movff	SetTarget@vmin,_volumeMin
 37608  006E9E  0060  F098  F269   	movff	SetTarget@vmin+1,_volumeMin+1
 37609  006EA4  0012               	return		;funcret
 37610  006EA6                     __end_of_SetTarget:
 37611                           	opt callstack 0
 37612                           
 37613 ;; *************** function i2___aldiv *****************
 37614 ;; Defined at:
 37615 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 37616 ;; Parameters:    Size  Location     Type
 37617 ;;  dividend        4   12[COMRAM] long 
 37618 ;;  divisor         4   16[COMRAM] long 
 37619 ;; Auto vars:     Size  Location     Type
 37620 ;;  __aldiv         4   22[COMRAM] long 
 37621 ;;  __aldiv         1   21[COMRAM] unsigned char 
 37622 ;;  __aldiv         1   20[COMRAM] unsigned char 
 37623 ;; Return value:  Size  Location     Type
 37624 ;;                  4   12[COMRAM] long 
 37625 ;; Registers used:
 37626 ;;		wreg, status,2, status,0
 37627 ;; Tracked objects:
 37628 ;;		On entry : 0/2
 37629 ;;		On exit  : 0/0
 37630 ;;		Unchanged: 0/0
 37631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37632 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37633 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37635 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37636 ;;Total ram usage:       14 bytes
 37637 ;; Hardware stack levels used:    1
 37638 ;; This function calls:
 37639 ;;		Nothing
 37640 ;; This function is called by:
 37641 ;;		_SetTarget
 37642 ;;		_MonitorPressureTask
 37643 ;;		i2_GetPressure_pa
 37644 ;;		i2_See5V
 37645 ;;		i2_See12V
 37646 ;; This function uses a non-reentrant model
 37647 ;;
 37648                           
 37649                           	psect	text289
 37650  006C3C                     __ptext289:
 37651                           	opt callstack 0
 37652  006C3C                     i2___aldiv:
 37653                           	opt callstack 14
 37654                           
 37655                           ;incstack = 0
 37656  006C3C  0E00               	movlw	0
 37657  006C3E  6E16               	movwf	i2___aldiv@sign^0,c
 37658  006C40  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
 37659  006C42  D00A               	goto	i2l18205
 37660  006C44  1E14               	comf	(i2___aldiv@divisor+3)^0,f,c
 37661  006C46  1E13               	comf	(i2___aldiv@divisor+2)^0,f,c
 37662  006C48  1E12               	comf	(i2___aldiv@divisor+1)^0,f,c
 37663  006C4A  6C11               	negf	i2___aldiv@divisor^0,c
 37664  006C4C  0E00               	movlw	0
 37665  006C4E  2212               	addwfc	(i2___aldiv@divisor+1)^0,f,c
 37666  006C50  2213               	addwfc	(i2___aldiv@divisor+2)^0,f,c
 37667  006C52  2214               	addwfc	(i2___aldiv@divisor+3)^0,f,c
 37668  006C54  0E01               	movlw	1
 37669  006C56  6E16               	movwf	i2___aldiv@sign^0,c
 37670  006C58                     i2l18205:
 37671  006C58  AE10               	btfss	(i2___aldiv@dividend+3)^0,7,c
 37672  006C5A  D00A               	goto	i2l18211
 37673  006C5C  1E10               	comf	(i2___aldiv@dividend+3)^0,f,c
 37674  006C5E  1E0F               	comf	(i2___aldiv@dividend+2)^0,f,c
 37675  006C60  1E0E               	comf	(i2___aldiv@dividend+1)^0,f,c
 37676  006C62  6C0D               	negf	i2___aldiv@dividend^0,c
 37677  006C64  0E00               	movlw	0
 37678  006C66  220E               	addwfc	(i2___aldiv@dividend+1)^0,f,c
 37679  006C68  220F               	addwfc	(i2___aldiv@dividend+2)^0,f,c
 37680  006C6A  2210               	addwfc	(i2___aldiv@dividend+3)^0,f,c
 37681  006C6C  0E01               	movlw	1
 37682  006C6E  1A16               	xorwf	i2___aldiv@sign^0,f,c
 37683  006C70                     i2l18211:
 37684  006C70  0E00               	movlw	0
 37685  006C72  6E17               	movwf	i2___aldiv@quotient^0,c
 37686  006C74  0E00               	movlw	0
 37687  006C76  6E18               	movwf	(i2___aldiv@quotient+1)^0,c
 37688  006C78  0E00               	movlw	0
 37689  006C7A  6E19               	movwf	(i2___aldiv@quotient+2)^0,c
 37690  006C7C  0E00               	movlw	0
 37691  006C7E  6E1A               	movwf	(i2___aldiv@quotient+3)^0,c
 37692  006C80  5011               	movf	i2___aldiv@divisor^0,w,c
 37693  006C82  1012               	iorwf	(i2___aldiv@divisor+1)^0,w,c
 37694  006C84  1013               	iorwf	(i2___aldiv@divisor+2)^0,w,c
 37695  006C86  1014               	iorwf	(i2___aldiv@divisor+3)^0,w,c
 37696  006C88  B4D8               	btfsc	status,2,c
 37697  006C8A  D02A               	goto	i2l18233
 37698  006C8C  0E01               	movlw	1
 37699  006C8E  6E15               	movwf	i2___aldiv@counter^0,c
 37700  006C90  D006               	goto	i2l18219
 37701  006C92                     i2l18217:
 37702  006C92  90D8               	bcf	status,0,c
 37703  006C94  3611               	rlcf	i2___aldiv@divisor^0,f,c
 37704  006C96  3612               	rlcf	(i2___aldiv@divisor+1)^0,f,c
 37705  006C98  3613               	rlcf	(i2___aldiv@divisor+2)^0,f,c
 37706  006C9A  3614               	rlcf	(i2___aldiv@divisor+3)^0,f,c
 37707  006C9C  2A15               	incf	i2___aldiv@counter^0,f,c
 37708  006C9E                     i2l18219:
 37709  006C9E  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
 37710  006CA0  D7F8               	goto	i2l18217
 37711  006CA2                     i2u1772_40:
 37712  006CA2  90D8               	bcf	status,0,c
 37713  006CA4  3617               	rlcf	i2___aldiv@quotient^0,f,c
 37714  006CA6  3618               	rlcf	(i2___aldiv@quotient+1)^0,f,c
 37715  006CA8  3619               	rlcf	(i2___aldiv@quotient+2)^0,f,c
 37716  006CAA  361A               	rlcf	(i2___aldiv@quotient+3)^0,f,c
 37717  006CAC  5011               	movf	i2___aldiv@divisor^0,w,c
 37718  006CAE  5C0D               	subwf	i2___aldiv@dividend^0,w,c
 37719  006CB0  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
 37720  006CB2  580E               	subwfb	(i2___aldiv@dividend+1)^0,w,c
 37721  006CB4  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
 37722  006CB6  580F               	subwfb	(i2___aldiv@dividend+2)^0,w,c
 37723  006CB8  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
 37724  006CBA  5810               	subwfb	(i2___aldiv@dividend+3)^0,w,c
 37725  006CBC  A0D8               	btfss	status,0,c
 37726  006CBE  D009               	goto	i2l18229
 37727  006CC0  5011               	movf	i2___aldiv@divisor^0,w,c
 37728  006CC2  5E0D               	subwf	i2___aldiv@dividend^0,f,c
 37729  006CC4  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
 37730  006CC6  5A0E               	subwfb	(i2___aldiv@dividend+1)^0,f,c
 37731  006CC8  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
 37732  006CCA  5A0F               	subwfb	(i2___aldiv@dividend+2)^0,f,c
 37733  006CCC  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
 37734  006CCE  5A10               	subwfb	(i2___aldiv@dividend+3)^0,f,c
 37735  006CD0  8017               	bsf	i2___aldiv@quotient^0,0,c
 37736  006CD2                     i2l18229:
 37737  006CD2  90D8               	bcf	status,0,c
 37738  006CD4  3214               	rrcf	(i2___aldiv@divisor+3)^0,f,c
 37739  006CD6  3213               	rrcf	(i2___aldiv@divisor+2)^0,f,c
 37740  006CD8  3212               	rrcf	(i2___aldiv@divisor+1)^0,f,c
 37741  006CDA  3211               	rrcf	i2___aldiv@divisor^0,f,c
 37742  006CDC  2E15               	decfsz	i2___aldiv@counter^0,f,c
 37743  006CDE  D7E1               	goto	i2u1772_40
 37744  006CE0                     i2l18233:
 37745  006CE0  5016               	movf	i2___aldiv@sign^0,w,c
 37746  006CE2  B4D8               	btfsc	status,2,c
 37747  006CE4  D008               	goto	i2l18237
 37748  006CE6  1E1A               	comf	(i2___aldiv@quotient+3)^0,f,c
 37749  006CE8  1E19               	comf	(i2___aldiv@quotient+2)^0,f,c
 37750  006CEA  1E18               	comf	(i2___aldiv@quotient+1)^0,f,c
 37751  006CEC  6C17               	negf	i2___aldiv@quotient^0,c
 37752  006CEE  0E00               	movlw	0
 37753  006CF0  2218               	addwfc	(i2___aldiv@quotient+1)^0,f,c
 37754  006CF2  2219               	addwfc	(i2___aldiv@quotient+2)^0,f,c
 37755  006CF4  221A               	addwfc	(i2___aldiv@quotient+3)^0,f,c
 37756  006CF6                     i2l18237:
 37757  006CF6  0060  F05C  F00D   	movff	i2___aldiv@quotient,?i2___aldiv
 37758  006CFC  0060  F060  F00E   	movff	i2___aldiv@quotient+1,?i2___aldiv+1
 37759  006D02  0060  F064  F00F   	movff	i2___aldiv@quotient+2,?i2___aldiv+2
 37760  006D08  0060  F068  F010   	movff	i2___aldiv@quotient+3,?i2___aldiv+3
 37761  006D0E  0012               	return		;funcret
 37762  006D10                     __end_ofi2___aldiv:
 37763                           	opt callstack 0
 37764                           
 37765 ;; *************** function _SetMaxPressure *****************
 37766 ;; Defined at:
 37767 ;;		line 144 in file "alarm.c"
 37768 ;; Parameters:    Size  Location     Type
 37769 ;;  pr              2    0[COMRAM] short 
 37770 ;; Auto vars:     Size  Location     Type
 37771 ;;		None
 37772 ;; Return value:  Size  Location     Type
 37773 ;;                  1    wreg      void 
 37774 ;; Registers used:
 37775 ;;		None
 37776 ;; Tracked objects:
 37777 ;;		On entry : 3F/0
 37778 ;;		On exit  : 3F/0
 37779 ;;		Unchanged: 3F/0
 37780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37785 ;;Total ram usage:        2 bytes
 37786 ;; Hardware stack levels used:    1
 37787 ;; This function calls:
 37788 ;;		Nothing
 37789 ;; This function is called by:
 37790 ;;		_UpdateState
 37791 ;; This function uses a non-reentrant model
 37792 ;;
 37793                           
 37794                           	psect	text290
 37795  00A324                     __ptext290:
 37796                           	opt callstack 0
 37797  00A324                     _SetMaxPressure:
 37798                           	opt callstack 12
 37799                           
 37800                           ; BSR set to: 0
 37801                           
 37802                           ;incstack = 0
 37803  00A324  0060  F004  F2D7   	movff	SetMaxPressure@pr,_alarmPmax
 37804  00A32A  0060  F008  F2D8   	movff	SetMaxPressure@pr+1,_alarmPmax+1
 37805                           
 37806                           ; BSR set to: 0
 37807  00A330  0012               	return		;funcret
 37808  00A332                     __end_of_SetMaxPressure:
 37809                           	opt callstack 0
 37810                           
 37811 ;; *************** function _SetControlFailAlarm *****************
 37812 ;; Defined at:
 37813 ;;		line 229 in file "alarm.c"
 37814 ;; Parameters:    Size  Location     Type
 37815 ;;		None
 37816 ;; Auto vars:     Size  Location     Type
 37817 ;;		None
 37818 ;; Return value:  Size  Location     Type
 37819 ;;                  1    wreg      void 
 37820 ;; Registers used:
 37821 ;;		wreg, status,2
 37822 ;; Tracked objects:
 37823 ;;		On entry : 3F/2
 37824 ;;		On exit  : 3F/0
 37825 ;;		Unchanged: 0/0
 37826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37831 ;;Total ram usage:        0 bytes
 37832 ;; Hardware stack levels used:    1
 37833 ;; This function calls:
 37834 ;;		Nothing
 37835 ;; This function is called by:
 37836 ;;		_UpdateState
 37837 ;;		_ControllerTimerHandler
 37838 ;; This function uses a non-reentrant model
 37839 ;;
 37840                           
 37841                           	psect	text291
 37842  00A530                     __ptext291:
 37843                           	opt callstack 0
 37844  00A530                     _SetControlFailAlarm:
 37845                           	opt callstack 14
 37846                           
 37847                           ; BSR set to: 2
 37848                           
 37849                           ; BSR set to: 0
 37850                           ;incstack = 0
 37851  00A530  0E01               	movlw	1
 37852  00A532  0100               	movlb	0	; () banked
 37853  00A534  6FF6               	movwf	_controlFailAlarm& (0+255),b
 37854                           
 37855                           ; BSR set to: 0
 37856  00A536  0012               	return		;funcret
 37857  00A538                     __end_of_SetControlFailAlarm:
 37858                           	opt callstack 0
 37859                           
 37860 ;; *************** function _GetControllerBuzzerCheck *****************
 37861 ;; Defined at:
 37862 ;;		line 415 in file "buzzer.c"
 37863 ;; Parameters:    Size  Location     Type
 37864 ;;		None
 37865 ;; Auto vars:     Size  Location     Type
 37866 ;;  tmp             1    0[COMRAM] _Bool 
 37867 ;; Return value:  Size  Location     Type
 37868 ;;                  1    wreg      _Bool 
 37869 ;; Registers used:
 37870 ;;		wreg, status,2
 37871 ;; Tracked objects:
 37872 ;;		On entry : 3F/2
 37873 ;;		On exit  : 3F/2
 37874 ;;		Unchanged: 0/0
 37875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37880 ;;Total ram usage:        1 bytes
 37881 ;; Hardware stack levels used:    1
 37882 ;; This function calls:
 37883 ;;		Nothing
 37884 ;; This function is called by:
 37885 ;;		_UpdateState
 37886 ;; This function uses a non-reentrant model
 37887 ;;
 37888                           
 37889                           	psect	text292
 37890  00A0F8                     __ptext292:
 37891                           	opt callstack 0
 37892  00A0F8                     _GetControllerBuzzerCheck:
 37893                           	opt callstack 12
 37894                           
 37895                           ; BSR set to: 2
 37896                           ;buzzer.c: 416:     _Bool tmp = controllerDetected;
 37897                           
 37898                           ; BSR set to: 0
 37899                           ;incstack = 0
 37900  00A0F8  0060  FAC4  F001   	movff	_controllerDetected,GetControllerBuzzerCheck@tmp
 37901                           
 37902                           ; BSR set to: 2
 37903                           ;buzzer.c: 417:     controllerDetected = 0;
 37904  00A0FE  0E00               	movlw	0
 37905  00A100  6FB1               	movwf	_controllerDetected& (0+255),b
 37906                           
 37907                           ;buzzer.c: 418:     checkController = 0;
 37908  00A102  0E00               	movlw	0
 37909  00A104  6FB2               	movwf	_checkController& (0+255),b
 37910                           
 37911                           ;buzzer.c: 419:     return tmp;
 37912  00A106  5001               	movf	GetControllerBuzzerCheck@tmp^0,w,c
 37913                           
 37914                           ; BSR set to: 2
 37915  00A108  0012               	return		;funcret
 37916  00A10A                     __end_of_GetControllerBuzzerCheck:
 37917                           	opt callstack 0
 37918                           
 37919 ;; *************** function _DisplayEnable *****************
 37920 ;; Defined at:
 37921 ;;		line 46 in file "display.c"
 37922 ;; Parameters:    Size  Location     Type
 37923 ;;		None
 37924 ;; Auto vars:     Size  Location     Type
 37925 ;;		None
 37926 ;; Return value:  Size  Location     Type
 37927 ;;                  1    wreg      void 
 37928 ;; Registers used:
 37929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37930 ;; Tracked objects:
 37931 ;;		On entry : 3F/0
 37932 ;;		On exit  : 3F/0
 37933 ;;		Unchanged: 0/0
 37934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37939 ;;Total ram usage:        0 bytes
 37940 ;; Hardware stack levels used:    1
 37941 ;; Hardware stack levels required when called:   10
 37942 ;; This function calls:
 37943 ;;		i2_ValueDisplay
 37944 ;; This function is called by:
 37945 ;;		_UpdateState
 37946 ;; This function uses a non-reentrant model
 37947 ;;
 37948                           
 37949                           	psect	text293
 37950  00A17C                     __ptext293:
 37951                           	opt callstack 0
 37952  00A17C                     _DisplayEnable:
 37953                           	opt callstack 2
 37954                           
 37955                           ; BSR set to: 0
 37956                           ;display.c: 47:     if (enable == 0) ValueDisplay();
 37957                           
 37958                           ; BSR set to: 2
 37959                           ;incstack = 0
 37960  00A17C  51FE               	movf	_enable& (0+255),w,b
 37961  00A17E  B4D8               	btfsc	status,2,c
 37962                           
 37963                           ; BSR set to: 0
 37964  00A180  EC36  F00F         	call	i2_ValueDisplay	;wreg free
 37965                           
 37966                           ;display.c: 48:     enable = 1;
 37967  00A184  0E01               	movlw	1
 37968  00A186  0100               	movlb	0	; () banked
 37969  00A188  6FFE               	movwf	_enable& (0+255),b
 37970                           
 37971                           ; BSR set to: 0
 37972  00A18A  0012               	return		;funcret
 37973  00A18C                     __end_of_DisplayEnable:
 37974                           	opt callstack 0
 37975                           
 37976 ;; *************** function _DisplayDisable *****************
 37977 ;; Defined at:
 37978 ;;		line 51 in file "display.c"
 37979 ;; Parameters:    Size  Location     Type
 37980 ;;		None
 37981 ;; Auto vars:     Size  Location     Type
 37982 ;;		None
 37983 ;; Return value:  Size  Location     Type
 37984 ;;                  1    wreg      void 
 37985 ;; Registers used:
 37986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37987 ;; Tracked objects:
 37988 ;;		On entry : 3D/2
 37989 ;;		On exit  : 3F/0
 37990 ;;		Unchanged: 0/0
 37991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37996 ;;Total ram usage:        0 bytes
 37997 ;; Hardware stack levels used:    1
 37998 ;; Hardware stack levels required when called:   10
 37999 ;; This function calls:
 38000 ;;		i2_ValueDisplay
 38001 ;; This function is called by:
 38002 ;;		_UpdateState
 38003 ;; This function uses a non-reentrant model
 38004 ;;
 38005                           
 38006                           	psect	text294
 38007  00A10A                     __ptext294:
 38008                           	opt callstack 0
 38009  00A10A                     _DisplayDisable:
 38010                           	opt callstack 2
 38011                           
 38012                           ;display.c: 52:     if (enable == 1) ValueDisplay();
 38013                           
 38014                           ; BSR set to: 0
 38015                           ;incstack = 0
 38016  00A10A  0100               	movlb	0	; () banked
 38017  00A10C  05FE               	decf	_enable& (0+255),w,b
 38018  00A10E  B4D8               	btfsc	status,2,c
 38019                           
 38020                           ; BSR set to: 0
 38021  00A110  EC36  F00F         	call	i2_ValueDisplay	;wreg free
 38022                           
 38023                           ;display.c: 53:     enable = 0;
 38024  00A114  0E00               	movlw	0
 38025  00A116  0100               	movlb	0	; () banked
 38026  00A118  6FFE               	movwf	_enable& (0+255),b
 38027                           
 38028                           ; BSR set to: 0
 38029  00A11A  0012               	return		;funcret
 38030  00A11C                     __end_of_DisplayDisable:
 38031                           	opt callstack 0
 38032                           
 38033 ;; *************** function i2_ValueDisplay *****************
 38034 ;; Defined at:
 38035 ;;		line 66 in file "display.c"
 38036 ;; Parameters:    Size  Location     Type
 38037 ;;		None
 38038 ;; Auto vars:     Size  Location     Type
 38039 ;;  ValueDisplay    2   91[BANK0 ] short 
 38040 ;;  ValueDisplay    2   89[BANK0 ] short 
 38041 ;;  ValueDisplay    2   87[BANK0 ] short 
 38042 ;;  ValueDisplay    2   82[BANK0 ] short 
 38043 ;;  ValueDisplay    2   80[BANK0 ] short 
 38044 ;;  ValueDisplay    2   67[BANK0 ] short 
 38045 ;;  ValueDisplay    2   65[BANK0 ] short 
 38046 ;;  ValueDisplay    2   63[BANK0 ] short 
 38047 ;;  ValueDisplay    2   61[BANK0 ] short 
 38048 ;;  ValueDisplay    2   59[BANK0 ] short 
 38049 ;;  ValueDisplay    2    0        short 
 38050 ;;  ValueDisplay    2    0        short 
 38051 ;;  ValueDisplay    2    0        short 
 38052 ;;  ValueDisplay    1   86[BANK0 ] char 
 38053 ;;  ValueDisplay    1   85[BANK0 ] char 
 38054 ;;  ValueDisplay    1   84[BANK0 ] char 
 38055 ;;  ValueDisplay    1   75[BANK0 ] char 
 38056 ;;  ValueDisplay    1   74[BANK0 ] char 
 38057 ;;  ValueDisplay    1   73[BANK0 ] char 
 38058 ;;  ValueDisplay    1   72[BANK0 ] char 
 38059 ;;  ValueDisplay    1   71[BANK0 ] char 
 38060 ;;  ValueDisplay    1    0        char 
 38061 ;;  ValueDisplay    1    0        char 
 38062 ;; Return value:  Size  Location     Type
 38063 ;;                  1    wreg      void 
 38064 ;; Registers used:
 38065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38066 ;; Tracked objects:
 38067 ;;		On entry : 0/0
 38068 ;;		On exit  : 3C/0
 38069 ;;		Unchanged: 0/0
 38070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38072 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38074 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38075 ;;Total ram usage:       42 bytes
 38076 ;; Hardware stack levels used:    1
 38077 ;; Hardware stack levels required when called:    9
 38078 ;; This function calls:
 38079 ;;		i2_GetAlarmState
 38080 ;;		i2_GetBpm
 38081 ;;		i2_GetDisableAlarmSV1
 38082 ;;		i2_GetEp
 38083 ;;		i2_GetIp
 38084 ;;		i2_GetPmax
 38085 ;;		i2_GetSpr
 38086 ;;		i2_GetTargetEp
 38087 ;;		i2_GetTargetIp
 38088 ;;		i2_GetTde
 38089 ;;		i2_GetTdi
 38090 ;;		i2_GetTe
 38091 ;;		i2_GetTi
 38092 ;;		i2_GetVolume
 38093 ;;		i2___awdiv
 38094 ;;		i2___awmod
 38095 ;;		i2___wmul
 38096 ;;		i2_sprintf
 38097 ;; This function is called by:
 38098 ;;		_DisplayEnable
 38099 ;;		_DisplayDisable
 38100 ;;		i2_AlarmDisplay
 38101 ;;		i2_AlarmUpdateLCD
 38102 ;; This function uses a non-reentrant model
 38103 ;;
 38104                           
 38105                           	psect	text295
 38106  001E6C                     __ptext295:
 38107                           	opt callstack 0
 38108  001E6C                     i2_ValueDisplay:
 38109                           	opt callstack 3
 38110                           
 38111                           ;display.c: 67:     if (!enable) {
 38112                           
 38113                           ; BSR set to: 0
 38114                           ;incstack = 0
 38115  001E6C  0100               	movlb	0	; () banked
 38116  001E6E  51FE               	movf	_enable& (0+255),w,b
 38117  001E70  A4D8               	btfss	status,2,c
 38118  001E72  D01F               	goto	i2l18425
 38119                           
 38120                           ; BSR set to: 0
 38121                           ;display.c: 68:         if (msg1[0]==0) sprintf(msg1, "OxyVitaEmergency");
 38122  001E74  0103               	movlb	3	; () banked
 38123  001E76  51E5               	movf	_msg1& (0+255),w,b
 38124  001E78  A4D8               	btfss	status,2,c
 38125  001E7A  D00B               	goto	i2l18419
 38126                           
 38127                           ; BSR set to: 3
 38128  001E7C  0EE5               	movlw	low _msg1
 38129  001E7E  0100               	movlb	0	; () banked
 38130  001E80  6F77               	movwf	i2sprintf@s& (0+255),b
 38131  001E82  0E03               	movlw	high _msg1
 38132  001E84  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38133  001E86  0ECE               	movlw	low STR_8
 38134  001E88  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38135  001E8A  0EFE               	movlw	high STR_8
 38136  001E8C  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38137  001E8E  EC45  F047         	call	i2_sprintf	;wreg free
 38138  001E92                     i2l18419:
 38139                           
 38140                           ;display.c: 69:         if (msg2[0]==0) sprintf(msg2, "Ventilator v1.0 ");
 38141  001E92  0103               	movlb	3	; () banked
 38142  001E94  51D1               	movf	_msg2& (0+255),w,b
 38143  001E96  A4D8               	btfss	status,2,c
 38144  001E98  0012               	return	
 38145                           
 38146                           ; BSR set to: 3
 38147  001E9A  0ED1               	movlw	low _msg2
 38148  001E9C  0100               	movlb	0	; () banked
 38149  001E9E  6F77               	movwf	i2sprintf@s& (0+255),b
 38150  001EA0  0E03               	movlw	high _msg2
 38151  001EA2  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38152  001EA4  0EBD               	movlw	low STR_9
 38153  001EA6  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38154  001EA8  0EFE               	movlw	high STR_9
 38155  001EAA  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38156  001EAC  EC45  F047         	call	i2_sprintf	;wreg free
 38157  001EB0  0012               	return	
 38158  001EB2                     i2l18425:
 38159                           
 38160                           ; BSR set to: 0
 38161                           ;display.c: 72:     static int cnt=0;;display.c: 74:     int16_t tdi = GetTdi();
 38162  001EB2  ECA7  F051         	call	i2_GetTdi	;wreg free
 38163  001EB6  0060  F004  F0B0   	movff	?i2_GetTdi,i2ValueDisplay@tdi
 38164  001EBC  0060  F008  F0B1   	movff	?i2_GetTdi+1,i2ValueDisplay@tdi+1
 38165                           
 38166                           ;display.c: 75:     int16_t tde = GetTde();
 38167  001EC2  ECF5  F051         	call	i2_GetTde	;wreg free
 38168  001EC6  0060  F004  F0B2   	movff	?i2_GetTde,i2ValueDisplay@tde
 38169  001ECC  0060  F008  F0B3   	movff	?i2_GetTde+1,i2ValueDisplay@tde+1
 38170                           
 38171                           ;display.c: 76:     int16_t ti = GetTi();
 38172  001ED2  ECA0  F051         	call	i2_GetTi	;wreg free
 38173  001ED6  0060  F004  F0BB   	movff	?i2_GetTi,i2ValueDisplay@ti
 38174  001EDC  0060  F008  F0BC   	movff	?i2_GetTi+1,i2ValueDisplay@ti+1
 38175                           
 38176                           ;display.c: 77:     int16_t te = GetTe();
 38177  001EE2  ECEF  F051         	call	i2_GetTe	;wreg free
 38178  001EE6  0060  F004  F0B9   	movff	?i2_GetTe,i2ValueDisplay@te
 38179  001EEC  0060  F008  F0BA   	movff	?i2_GetTe+1,i2ValueDisplay@te+1
 38180                           
 38181                           ;display.c: 78:     int8_t eti = ti/1000;
 38182  001EF2  0060  F2EC  F007   	movff	i2ValueDisplay@ti,i2___awdiv@dividend
 38183  001EF8  0060  F2F0  F008   	movff	i2ValueDisplay@ti+1,i2___awdiv@dividend+1
 38184  001EFE  0E03               	movlw	3
 38185  001F00  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38186  001F02  0EE8               	movlw	232
 38187  001F04  6E09               	movwf	i2___awdiv@divisor^0,c
 38188  001F06  ECE1  F03F         	call	i2___awdiv	;wreg free
 38189  001F0A  5007               	movf	?i2___awdiv^0,w,c
 38190  001F0C  0100               	movlb	0	; () banked
 38191  001F0E  6FA7               	movwf	i2ValueDisplay@eti& (0+255),b
 38192                           
 38193                           ; BSR set to: 0
 38194  001F10  51A7               	movf	i2ValueDisplay@eti& (0+255),w,b
 38195  001F12  6E01               	movwf	i2___wmul@multiplier^0,c
 38196  001F14  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38197  001F16  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38198  001F18  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38199  001F1A  0EFC               	movlw	252
 38200  001F1C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38201  001F1E  0E18               	movlw	24
 38202  001F20  6E03               	movwf	i2___wmul@multiplicand^0,c
 38203  001F22  ECD3  F04C         	call	i2___wmul	;wreg free
 38204  001F26  0100               	movlb	0	; () banked
 38205  001F28  51BB               	movf	i2ValueDisplay@ti& (0+255),w,b
 38206  001F2A  2401               	addwf	?i2___wmul^0,w,c
 38207  001F2C  6E07               	movwf	i2___awdiv@dividend^0,c
 38208  001F2E  51BC               	movf	(i2ValueDisplay@ti+1)& (0+255),w,b
 38209  001F30  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38210  001F32  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38211  001F34  0E00               	movlw	0
 38212  001F36  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38213  001F38  0E0A               	movlw	10
 38214  001F3A  6E09               	movwf	i2___awdiv@divisor^0,c
 38215  001F3C  ECE1  F03F         	call	i2___awdiv	;wreg free
 38216                           
 38217                           ;display.c: 80:     int8_t ete = te/1000;
 38218  001F40  0060  F2E4  F007   	movff	i2ValueDisplay@te,i2___awdiv@dividend
 38219  001F46  0060  F2E8  F008   	movff	i2ValueDisplay@te+1,i2___awdiv@dividend+1
 38220  001F4C  0E03               	movlw	3
 38221  001F4E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38222  001F50  0EE8               	movlw	232
 38223  001F52  6E09               	movwf	i2___awdiv@divisor^0,c
 38224  001F54  ECE1  F03F         	call	i2___awdiv	;wreg free
 38225  001F58  5007               	movf	?i2___awdiv^0,w,c
 38226  001F5A  0100               	movlb	0	; () banked
 38227  001F5C  6FA8               	movwf	i2ValueDisplay@ete& (0+255),b
 38228  001F5E  51A8               	movf	i2ValueDisplay@ete& (0+255),w,b
 38229  001F60  6E01               	movwf	i2___wmul@multiplier^0,c
 38230  001F62  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38231  001F64  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38232  001F66  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38233  001F68  0EFC               	movlw	252
 38234  001F6A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38235  001F6C  0E18               	movlw	24
 38236  001F6E  6E03               	movwf	i2___wmul@multiplicand^0,c
 38237  001F70  ECD3  F04C         	call	i2___wmul	;wreg free
 38238  001F74  0100               	movlb	0	; () banked
 38239  001F76  51B9               	movf	i2ValueDisplay@te& (0+255),w,b
 38240  001F78  2401               	addwf	?i2___wmul^0,w,c
 38241  001F7A  6E07               	movwf	i2___awdiv@dividend^0,c
 38242  001F7C  51BA               	movf	(i2ValueDisplay@te+1)& (0+255),w,b
 38243  001F7E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38244  001F80  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38245  001F82  0E00               	movlw	0
 38246  001F84  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38247  001F86  0E0A               	movlw	10
 38248  001F88  6E09               	movwf	i2___awdiv@divisor^0,c
 38249  001F8A  ECE1  F03F         	call	i2___awdiv	;wreg free
 38250  001F8E  ECB5  F051         	call	i2_GetBpm	;wreg free
 38251                           
 38252                           ;display.c: 83:     int16_t pi = GetIp();
 38253  001F92  EC7B  F028         	call	i2_GetIp	;wreg free
 38254  001F96  0060  F03C  F09B   	movff	?i2_GetIp,i2ValueDisplay@pi
 38255  001F9C  0060  F040  F09C   	movff	?i2_GetIp+1,i2ValueDisplay@pi+1
 38256                           
 38257                           ;display.c: 84:     int16_t pe = GetEp();
 38258  001FA2  EC3C  F04D         	call	i2_GetEp	;wreg free
 38259  001FA6  0060  F03C  F09D   	movff	?i2_GetEp,i2ValueDisplay@pe
 38260  001FAC  0060  F040  F09E   	movff	?i2_GetEp+1,i2ValueDisplay@pe+1
 38261                           
 38262                           ;display.c: 85:     int8_t etdi = tdi/1000;
 38263  001FB2  0060  F2C0  F007   	movff	i2ValueDisplay@tdi,i2___awdiv@dividend
 38264  001FB8  0060  F2C4  F008   	movff	i2ValueDisplay@tdi+1,i2___awdiv@dividend+1
 38265  001FBE  0E03               	movlw	3
 38266  001FC0  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38267  001FC2  0EE8               	movlw	232
 38268  001FC4  6E09               	movwf	i2___awdiv@divisor^0,c
 38269  001FC6  ECE1  F03F         	call	i2___awdiv	;wreg free
 38270  001FCA  5007               	movf	?i2___awdiv^0,w,c
 38271  001FCC  0100               	movlb	0	; () banked
 38272  001FCE  6FB4               	movwf	i2ValueDisplay@etdi& (0+255),b
 38273                           
 38274                           ; BSR set to: 0
 38275                           ;display.c: 86:     int8_t dtdi = (tdi-((int16_t) etdi)*1000)/10;
 38276  001FD0  51B4               	movf	i2ValueDisplay@etdi& (0+255),w,b
 38277  001FD2  6E01               	movwf	i2___wmul@multiplier^0,c
 38278  001FD4  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38279  001FD6  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38280  001FD8  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38281  001FDA  0EFC               	movlw	252
 38282  001FDC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38283  001FDE  0E18               	movlw	24
 38284  001FE0  6E03               	movwf	i2___wmul@multiplicand^0,c
 38285  001FE2  ECD3  F04C         	call	i2___wmul	;wreg free
 38286  001FE6  0100               	movlb	0	; () banked
 38287  001FE8  51B0               	movf	i2ValueDisplay@tdi& (0+255),w,b
 38288  001FEA  2401               	addwf	?i2___wmul^0,w,c
 38289  001FEC  6E07               	movwf	i2___awdiv@dividend^0,c
 38290  001FEE  51B1               	movf	(i2ValueDisplay@tdi+1)& (0+255),w,b
 38291  001FF0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38292  001FF2  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38293  001FF4  0E00               	movlw	0
 38294  001FF6  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38295  001FF8  0E0A               	movlw	10
 38296  001FFA  6E09               	movwf	i2___awdiv@divisor^0,c
 38297  001FFC  ECE1  F03F         	call	i2___awdiv	;wreg free
 38298  002000  5007               	movf	?i2___awdiv^0,w,c
 38299  002002  0100               	movlb	0	; () banked
 38300  002004  6FA9               	movwf	i2ValueDisplay@dtdi& (0+255),b
 38301                           
 38302                           ; BSR set to: 0
 38303                           ;display.c: 87:     int8_t etde = tde/1000;
 38304  002006  0060  F2C8  F007   	movff	i2ValueDisplay@tde,i2___awdiv@dividend
 38305  00200C  0060  F2CC  F008   	movff	i2ValueDisplay@tde+1,i2___awdiv@dividend+1
 38306  002012  0E03               	movlw	3
 38307  002014  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38308  002016  0EE8               	movlw	232
 38309  002018  6E09               	movwf	i2___awdiv@divisor^0,c
 38310  00201A  ECE1  F03F         	call	i2___awdiv	;wreg free
 38311  00201E  5007               	movf	?i2___awdiv^0,w,c
 38312  002020  0100               	movlb	0	; () banked
 38313  002022  6FB5               	movwf	i2ValueDisplay@etde& (0+255),b
 38314                           
 38315                           ; BSR set to: 0
 38316                           ;display.c: 88:     int8_t dtde = (tde-((int16_t) etde)*1000)/10;
 38317  002024  51B5               	movf	i2ValueDisplay@etde& (0+255),w,b
 38318  002026  6E01               	movwf	i2___wmul@multiplier^0,c
 38319  002028  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38320  00202A  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38321  00202C  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38322  00202E  0EFC               	movlw	252
 38323  002030  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38324  002032  0E18               	movlw	24
 38325  002034  6E03               	movwf	i2___wmul@multiplicand^0,c
 38326  002036  ECD3  F04C         	call	i2___wmul	;wreg free
 38327  00203A  0100               	movlb	0	; () banked
 38328  00203C  51B2               	movf	i2ValueDisplay@tde& (0+255),w,b
 38329  00203E  2401               	addwf	?i2___wmul^0,w,c
 38330  002040  6E07               	movwf	i2___awdiv@dividend^0,c
 38331  002042  51B3               	movf	(i2ValueDisplay@tde+1)& (0+255),w,b
 38332  002044  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38333  002046  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38334  002048  0E00               	movlw	0
 38335  00204A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38336  00204C  0E0A               	movlw	10
 38337  00204E  6E09               	movwf	i2___awdiv@divisor^0,c
 38338  002050  ECE1  F03F         	call	i2___awdiv	;wreg free
 38339  002054  5007               	movf	?i2___awdiv^0,w,c
 38340  002056  0100               	movlb	0	; () banked
 38341  002058  6FAA               	movwf	i2ValueDisplay@dtde& (0+255),b
 38342                           
 38343                           ; BSR set to: 0
 38344                           ;display.c: 89:     int16_t r;;display.c: 90:     if (ti!=0) r = (te)/(ti/10);
 38345  00205A  51BB               	movf	i2ValueDisplay@ti& (0+255),w,b
 38346  00205C  11BC               	iorwf	(i2ValueDisplay@ti+1)& (0+255),w,b
 38347  00205E  B4D8               	btfsc	status,2,c
 38348  002060  D027               	goto	i2l18449
 38349                           
 38350                           ; BSR set to: 0
 38351  002062  0E00               	movlw	0
 38352  002064  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38353  002066  0E0A               	movlw	10
 38354  002068  6E09               	movwf	i2___awdiv@divisor^0,c
 38355  00206A  0060  F2EC  F007   	movff	i2ValueDisplay@ti,i2___awdiv@dividend
 38356  002070  0060  F2F0  F008   	movff	i2ValueDisplay@ti+1,i2___awdiv@dividend+1
 38357  002076  ECE1  F03F         	call	i2___awdiv	;wreg free
 38358  00207A  0060  F01C  F0A5   	movff	?i2___awdiv,i2_ValueDisplay$7130
 38359  002080  0060  F020  F0A6   	movff	?i2___awdiv+1,i2_ValueDisplay$7130+1
 38360  002086  0060  F2E4  F007   	movff	i2ValueDisplay@te,i2___awdiv@dividend
 38361  00208C  0060  F2E8  F008   	movff	i2ValueDisplay@te+1,i2___awdiv@dividend+1
 38362  002092  0060  F294  F009   	movff	i2_ValueDisplay$7130,i2___awdiv@divisor
 38363  002098  0060  F298  F00A   	movff	i2_ValueDisplay$7130+1,i2___awdiv@divisor+1
 38364  00209E  ECE1  F03F         	call	i2___awdiv	;wreg free
 38365  0020A2  0060  F01C  F0B7   	movff	?i2___awdiv,i2ValueDisplay@r
 38366  0020A8  0060  F020  F0B8   	movff	?i2___awdiv+1,i2ValueDisplay@r+1
 38367  0020AE  D004               	goto	i2l18451
 38368  0020B0                     i2l18449:
 38369                           
 38370                           ; BSR set to: 0
 38371  0020B0  0E00               	movlw	0
 38372  0020B2  6FB8               	movwf	(i2ValueDisplay@r+1)& (0+255),b
 38373  0020B4  0E00               	movlw	0
 38374  0020B6  6FB7               	movwf	i2ValueDisplay@r& (0+255),b
 38375  0020B8                     i2l18451:
 38376                           
 38377                           ;display.c: 92:     int8_t er = r/10;
 38378  0020B8  0060  F2DC  F007   	movff	i2ValueDisplay@r,i2___awdiv@dividend
 38379  0020BE  0060  F2E0  F008   	movff	i2ValueDisplay@r+1,i2___awdiv@dividend+1
 38380  0020C4  0E00               	movlw	0
 38381  0020C6  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38382  0020C8  0E0A               	movlw	10
 38383  0020CA  6E09               	movwf	i2___awdiv@divisor^0,c
 38384  0020CC  ECE1  F03F         	call	i2___awdiv	;wreg free
 38385  0020D0  5007               	movf	?i2___awdiv^0,w,c
 38386  0020D2  0100               	movlb	0	; () banked
 38387  0020D4  6FB6               	movwf	i2ValueDisplay@er& (0+255),b
 38388                           
 38389                           ; BSR set to: 0
 38390                           ;display.c: 93:     int8_t dr = (r-((int16_t) er)*10);
 38391  0020D6  51B6               	movf	i2ValueDisplay@er& (0+255),w,b
 38392  0020D8  0DF6               	mullw	-10
 38393  0020DA  50F3               	movf	243,w,c
 38394  0020DC  25B7               	addwf	i2ValueDisplay@r& (0+255),w,b
 38395  0020DE  6FAB               	movwf	i2ValueDisplay@dr& (0+255),b
 38396                           
 38397                           ; BSR set to: 0
 38398  0020E0  EC9C  F04D         	call	i2_GetTargetIp	;wreg free
 38399  0020E4  ECAF  F04D         	call	i2_GetTargetEp	;wreg free
 38400                           
 38401                           ;display.c: 96:     int16_t vol = GetVolume();
 38402  0020E8  EC99  F051         	call	i2_GetVolume	;wreg free
 38403  0020EC  0060  F004  F09F   	movff	?i2_GetVolume,i2ValueDisplay@vol
 38404  0020F2  0060  F008  F0A0   	movff	?i2_GetVolume+1,i2ValueDisplay@vol+1
 38405                           
 38406                           ;display.c: 97:     int16_t pmax = GetPmax();
 38407  0020F8  ECC2  F04D         	call	i2_GetPmax	;wreg free
 38408  0020FC  0060  F03C  F0A1   	movff	?i2_GetPmax,i2ValueDisplay@pmax
 38409  002102  0060  F040  F0A2   	movff	?i2_GetPmax+1,i2ValueDisplay@pmax+1
 38410                           
 38411                           ;display.c: 98:     int16_t spr = GetSpr();
 38412  002108  ECAE  F051         	call	i2_GetSpr	;wreg free
 38413  00210C  0060  F004  F0A3   	movff	?i2_GetSpr,i2ValueDisplay@spr
 38414  002112  0060  F008  F0A4   	movff	?i2_GetSpr+1,i2ValueDisplay@spr+1
 38415                           
 38416                           ;display.c: 102:     sprintf(msg1, "%2d%% %d.%02d %d.%02d%c%s", spr, etde,dtde, etdi, dt
      +                          di, GetDisableAlarmSV1() ? 'd':' ', calibrate? "Ca" : GetAlarmState() );
 38417  002118  0100               	movlb	0	; () banked
 38418  00211A  51FF               	movf	_calibrate& (0+255),w,b
 38419  00211C  A4D8               	btfss	status,2,c
 38420  00211E  D009               	goto	i2l18469
 38421                           
 38422                           ; BSR set to: 0
 38423  002120  ECE7  F047         	call	i2_GetAlarmState	;wreg free
 38424  002124  0060  F014  F0AC   	movff	?i2_GetAlarmState,i2_ValueDisplay$4007
 38425  00212A  0060  F018  F0AD   	movff	?i2_GetAlarmState+1,i2_ValueDisplay$4007+1
 38426  002130  D004               	goto	i2l18471
 38427  002132                     i2l18469:
 38428                           
 38429                           ; BSR set to: 0
 38430  002132  0EF9               	movlw	low STR_11
 38431  002134  6FAC               	movwf	i2_ValueDisplay$4007& (0+255),b
 38432  002136  0EFF               	movlw	high STR_11
 38433  002138  6FAD               	movwf	(i2_ValueDisplay$4007+1)& (0+255),b
 38434  00213A                     i2l18471:
 38435  00213A  ECFC  F052         	call	i2_GetDisableAlarmSV1	;wreg free
 38436  00213E  0900               	iorlw	0
 38437  002140  A4D8               	btfss	status,2,c
 38438  002142  D004               	goto	i2l18475
 38439                           
 38440                           ; BSR set to: 0
 38441  002144  0E00               	movlw	0
 38442  002146  6FAF               	movwf	(i2_ValueDisplay$4008+1)& (0+255),b
 38443  002148  0E20               	movlw	32
 38444  00214A  D003               	goto	L14
 38445  00214C                     i2l18475:
 38446                           
 38447                           ; BSR set to: 0
 38448  00214C  0E00               	movlw	0
 38449  00214E  6FAF               	movwf	(i2_ValueDisplay$4008+1)& (0+255),b
 38450  002150  0E64               	movlw	100
 38451  002152                     L14:
 38452  002152  6FAE               	movwf	i2_ValueDisplay$4008& (0+255),b
 38453                           
 38454                           ; BSR set to: 0
 38455  002154  0EE5               	movlw	low _msg1
 38456  002156  6F77               	movwf	i2sprintf@s& (0+255),b
 38457  002158  0E03               	movlw	high _msg1
 38458  00215A  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38459  00215C  0E67               	movlw	low STR_10
 38460  00215E  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38461  002160  0EFE               	movlw	high STR_10
 38462  002162  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38463  002164  0060  F28C  F07B   	movff	i2ValueDisplay@spr,?i2_sprintf+4
 38464  00216A  0060  F290  F07C   	movff	i2ValueDisplay@spr+1,?i2_sprintf+5
 38465  002170  51B5               	movf	i2ValueDisplay@etde& (0+255),w,b
 38466  002172  6F7D               	movwf	(?i2_sprintf+6)& (0+255),b
 38467  002174  6B7E               	clrf	(?i2_sprintf+7)& (0+255),b
 38468  002176  BF7D               	btfsc	(?i2_sprintf+6)& (0+255),7,b
 38469  002178  077E               	decf	(?i2_sprintf+7)& (0+255),f,b
 38470  00217A  51AA               	movf	i2ValueDisplay@dtde& (0+255),w,b
 38471  00217C  6F7F               	movwf	(?i2_sprintf+8)& (0+255),b
 38472  00217E  6B80               	clrf	(?i2_sprintf+9)& (0+255),b
 38473  002180  BF7F               	btfsc	(?i2_sprintf+8)& (0+255),7,b
 38474  002182  0780               	decf	(?i2_sprintf+9)& (0+255),f,b
 38475  002184  51B4               	movf	i2ValueDisplay@etdi& (0+255),w,b
 38476  002186  6F81               	movwf	(?i2_sprintf+10)& (0+255),b
 38477  002188  6B82               	clrf	(?i2_sprintf+11)& (0+255),b
 38478  00218A  BF81               	btfsc	(?i2_sprintf+10)& (0+255),7,b
 38479  00218C  0782               	decf	(?i2_sprintf+11)& (0+255),f,b
 38480  00218E  51A9               	movf	i2ValueDisplay@dtdi& (0+255),w,b
 38481  002190  6F83               	movwf	(?i2_sprintf+12)& (0+255),b
 38482  002192  6B84               	clrf	(?i2_sprintf+13)& (0+255),b
 38483  002194  BF83               	btfsc	(?i2_sprintf+12)& (0+255),7,b
 38484  002196  0784               	decf	(?i2_sprintf+13)& (0+255),f,b
 38485  002198  0060  F2B8  F085   	movff	i2_ValueDisplay$4008,?i2_sprintf+14
 38486  00219E  0060  F2BC  F086   	movff	i2_ValueDisplay$4008+1,?i2_sprintf+15
 38487  0021A4  0060  F2B0  F087   	movff	i2_ValueDisplay$4007,?i2_sprintf+16
 38488  0021AA  0060  F2B4  F088   	movff	i2_ValueDisplay$4007+1,?i2_sprintf+17
 38489  0021B0  EC45  F047         	call	i2_sprintf	;wreg free
 38490                           
 38491                           ; BSR set to: 0
 38492                           ;display.c: 104:     sprintf(msg3, "%1d%1d %2d %2d %2d %4d", er, dr, pe, pi, pmax, vol);
 38493  0021B4  0EBD               	movlw	low _msg3
 38494  0021B6  6F77               	movwf	i2sprintf@s& (0+255),b
 38495  0021B8  0E03               	movlw	high _msg3
 38496  0021BA  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38497  0021BC  0E81               	movlw	low STR_12
 38498  0021BE  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38499  0021C0  0EFE               	movlw	high STR_12
 38500  0021C2  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38501  0021C4  51B6               	movf	i2ValueDisplay@er& (0+255),w,b
 38502  0021C6  6F7B               	movwf	(?i2_sprintf+4)& (0+255),b
 38503  0021C8  6B7C               	clrf	(?i2_sprintf+5)& (0+255),b
 38504  0021CA  BF7B               	btfsc	(?i2_sprintf+4)& (0+255),7,b
 38505  0021CC  077C               	decf	(?i2_sprintf+5)& (0+255),f,b
 38506  0021CE  51AB               	movf	i2ValueDisplay@dr& (0+255),w,b
 38507  0021D0  6F7D               	movwf	(?i2_sprintf+6)& (0+255),b
 38508  0021D2  6B7E               	clrf	(?i2_sprintf+7)& (0+255),b
 38509  0021D4  BF7D               	btfsc	(?i2_sprintf+6)& (0+255),7,b
 38510  0021D6  077E               	decf	(?i2_sprintf+7)& (0+255),f,b
 38511  0021D8  0060  F274  F07F   	movff	i2ValueDisplay@pe,?i2_sprintf+8
 38512  0021DE  0060  F278  F080   	movff	i2ValueDisplay@pe+1,?i2_sprintf+9
 38513  0021E4  0060  F26C  F081   	movff	i2ValueDisplay@pi,?i2_sprintf+10
 38514  0021EA  0060  F270  F082   	movff	i2ValueDisplay@pi+1,?i2_sprintf+11
 38515  0021F0  0060  F284  F083   	movff	i2ValueDisplay@pmax,?i2_sprintf+12
 38516  0021F6  0060  F288  F084   	movff	i2ValueDisplay@pmax+1,?i2_sprintf+13
 38517  0021FC  0060  F27C  F085   	movff	i2ValueDisplay@vol,?i2_sprintf+14
 38518  002202  0060  F280  F086   	movff	i2ValueDisplay@vol+1,?i2_sprintf+15
 38519  002208  EC45  F047         	call	i2_sprintf	;wreg free
 38520                           
 38521                           ; BSR set to: 0
 38522                           ;display.c: 106:     cnt++;
 38523  00220C  0102               	movlb	2	; () banked
 38524  00220E  4B88               	infsnz	ValueDisplay@cnt& (0+255),f,b
 38525  002210  2B89               	incf	(ValueDisplay@cnt+1)& (0+255),f,b
 38526                           
 38527                           ; BSR set to: 2
 38528                           ;display.c: 107:     cnt=cnt%10;
 38529  002212  0060  FA20  F001   	movff	ValueDisplay@cnt,i2___awmod@dividend
 38530  002218  0060  FA24  F002   	movff	ValueDisplay@cnt+1,i2___awmod@dividend+1
 38531  00221E  0E00               	movlw	0
 38532  002220  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 38533  002222  0E0A               	movlw	10
 38534  002224  6E03               	movwf	i2___awmod@divisor^0,c
 38535  002226  EC9D  F041         	call	i2___awmod	;wreg free
 38536  00222A  0060  F004  F288   	movff	?i2___awmod,ValueDisplay@cnt
 38537  002230  0060  F008  F289   	movff	?i2___awmod+1,ValueDisplay@cnt+1
 38538  002236  0012               	return		;funcret
 38539  002238                     __end_ofi2_ValueDisplay:
 38540                           	opt callstack 0
 38541                           
 38542 ;; *************** function i2_sprintf *****************
 38543 ;; Defined at:
 38544 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 38545 ;; Parameters:    Size  Location     Type
 38546 ;;  s               2   23[BANK0 ] PTR unsigned char 
 38547 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 38548 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 38549 ;;		 -> STR_13(8), STR_12(23), STR_10(26), STR_9(17), 
 38550 ;;		 -> STR_8(17), STR_7(15), 
 38551 ;; Auto vars:     Size  Location     Type
 38552 ;;  sprintf         6   45[BANK0 ] struct _IO_FILE
 38553 ;;  sprintf         2   43[BANK0 ] PTR void [1]
 38554 ;;		 -> ?i2_sprintf(2), ?_printf(2), ?_sprintf(2), 
 38555 ;;  sprintf         2    0        int 
 38556 ;; Return value:  Size  Location     Type
 38557 ;;                  2   23[BANK0 ] int 
 38558 ;; Registers used:
 38559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38560 ;; Tracked objects:
 38561 ;;		On entry : 3F/0
 38562 ;;		On exit  : 3F/0
 38563 ;;		Unchanged: 0/0
 38564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38565 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38566 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38568 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38569 ;;Total ram usage:       28 bytes
 38570 ;; Hardware stack levels used:    1
 38571 ;; Hardware stack levels required when called:    8
 38572 ;; This function calls:
 38573 ;;		i2_vfprintf
 38574 ;; This function is called by:
 38575 ;;		_DisplayCalibrate
 38576 ;;		i2_ValueDisplay
 38577 ;;		i2_AlarmDisplay
 38578 ;; This function uses a non-reentrant model
 38579 ;;
 38580                           
 38581                           	psect	text296
 38582  008E8A                     __ptext296:
 38583                           	opt callstack 0
 38584  008E8A                     i2_sprintf:
 38585                           	opt callstack 3
 38586                           
 38587                           ; BSR set to: 0
 38588                           
 38589                           ;incstack = 0
 38590  008E8A  0E7B               	movlw	low (?i2_sprintf+4)
 38591  008E8C  6F8B               	movwf	i2sprintf@ap& (0+255),b
 38592  008E8E  6B8C               	clrf	(i2sprintf@ap+1)& (0+255),b
 38593  008E90  0060  F1DC  F08D   	movff	i2sprintf@s,i2sprintf@f
 38594  008E96  0060  F1E0  F08E   	movff	i2sprintf@s+1,i2sprintf@f+1
 38595                           
 38596                           ; BSR set to: 0
 38597  008E9C  0E00               	movlw	0
 38598  008E9E  6F90               	movwf	(i2sprintf@f+3)& (0+255),b
 38599  008EA0  0E00               	movlw	0
 38600  008EA2  6F8F               	movwf	(i2sprintf@f+2)& (0+255),b
 38601                           
 38602                           ; BSR set to: 0
 38603  008EA4  0E00               	movlw	0
 38604  008EA6  6F92               	movwf	(i2sprintf@f+5)& (0+255),b
 38605  008EA8  0E00               	movlw	0
 38606  008EAA  6F91               	movwf	(i2sprintf@f+4)& (0+255),b
 38607                           
 38608                           ; BSR set to: 0
 38609  008EAC  0E8D               	movlw	low i2sprintf@f
 38610  008EAE  6E4F               	movwf	i2vfprintf@fp^0,c
 38611  008EB0  6A50               	clrf	(i2vfprintf@fp+1)^0,c
 38612  008EB2  0060  F1E4  F051   	movff	i2sprintf@fmt,i2vfprintf@fmt
 38613  008EB8  0060  F1E8  F052   	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
 38614  008EBE  0E8B               	movlw	low i2sprintf@ap
 38615  008EC0  6E53               	movwf	i2vfprintf@ap^0,c
 38616  008EC2  6A54               	clrf	(i2vfprintf@ap+1)^0,c
 38617  008EC4  ECC9  F043         	call	i2_vfprintf	;wreg free
 38618                           
 38619                           ; BSR set to: 2
 38620  008EC8  0100               	movlb	0	; () banked
 38621  008ECA  518F               	movf	(i2sprintf@f+2)& (0+255),w,b
 38622  008ECC  2577               	addwf	i2sprintf@s& (0+255),w,b
 38623  008ECE  6ED9               	movwf	fsr2l,c
 38624  008ED0  5190               	movf	(i2sprintf@f+3)& (0+255),w,b
 38625  008ED2  2178               	addwfc	(i2sprintf@s+1)& (0+255),w,b
 38626  008ED4  6EDA               	movwf	fsr2h,c
 38627  008ED6  0E00               	movlw	0
 38628  008ED8  6EDF               	movwf	indf2,c
 38629                           
 38630                           ; BSR set to: 0
 38631  008EDA  0012               	return		;funcret
 38632  008EDC                     __end_ofi2_sprintf:
 38633                           	opt callstack 0
 38634                           
 38635 ;; *************** function i2___awmod *****************
 38636 ;; Defined at:
 38637 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 38638 ;; Parameters:    Size  Location     Type
 38639 ;;  dividend        2    0[COMRAM] int 
 38640 ;;  divisor         2    2[COMRAM] int 
 38641 ;; Auto vars:     Size  Location     Type
 38642 ;;  __awmod         1    5[COMRAM] unsigned char 
 38643 ;;  __awmod         1    4[COMRAM] unsigned char 
 38644 ;; Return value:  Size  Location     Type
 38645 ;;                  2    0[COMRAM] int 
 38646 ;; Registers used:
 38647 ;;		wreg, status,2, status,0
 38648 ;; Tracked objects:
 38649 ;;		On entry : 3D/2
 38650 ;;		On exit  : 3D/0
 38651 ;;		Unchanged: 3D/0
 38652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38657 ;;Total ram usage:        6 bytes
 38658 ;; Hardware stack levels used:    1
 38659 ;; This function calls:
 38660 ;;		Nothing
 38661 ;; This function is called by:
 38662 ;;		_MonitorPressureTask
 38663 ;;		_ControllerTimerHandler
 38664 ;;		i2_ValueDisplay
 38665 ;;		i2_AlarmDisplay
 38666 ;; This function uses a non-reentrant model
 38667 ;;
 38668                           
 38669                           	psect	text297
 38670  00833A                     __ptext297:
 38671                           	opt callstack 0
 38672  00833A                     i2___awmod:
 38673                           	opt callstack 14
 38674                           
 38675                           ; BSR set to: 0
 38676                           ;incstack = 0
 38677  00833A  0E00               	movlw	0
 38678  00833C  6E06               	movwf	i2___awmod@sign^0,c
 38679  00833E  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
 38680  008340  D006               	goto	i2l18249
 38681  008342  6C01               	negf	i2___awmod@dividend^0,c
 38682  008344  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 38683  008346  B0D8               	btfsc	status,0,c
 38684  008348  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 38685  00834A  0E01               	movlw	1
 38686  00834C  6E06               	movwf	i2___awmod@sign^0,c
 38687  00834E                     i2l18249:
 38688  00834E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 38689  008350  D004               	goto	i2l18253
 38690  008352  6C03               	negf	i2___awmod@divisor^0,c
 38691  008354  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 38692  008356  B0D8               	btfsc	status,0,c
 38693  008358  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 38694  00835A                     i2l18253:
 38695  00835A  5003               	movf	i2___awmod@divisor^0,w,c
 38696  00835C  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 38697  00835E  B4D8               	btfsc	status,2,c
 38698  008360  D018               	goto	i2l18269
 38699  008362  0E01               	movlw	1
 38700  008364  6E05               	movwf	i2___awmod@counter^0,c
 38701  008366  D004               	goto	i2l18259
 38702  008368                     i2l18257:
 38703  008368  90D8               	bcf	status,0,c
 38704  00836A  3603               	rlcf	i2___awmod@divisor^0,f,c
 38705  00836C  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 38706  00836E  2A05               	incf	i2___awmod@counter^0,f,c
 38707  008370                     i2l18259:
 38708  008370  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 38709  008372  D7FA               	goto	i2l18257
 38710  008374                     i2u1778_40:
 38711  008374  5003               	movf	i2___awmod@divisor^0,w,c
 38712  008376  5C01               	subwf	i2___awmod@dividend^0,w,c
 38713  008378  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 38714  00837A  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 38715  00837C  A0D8               	btfss	status,0,c
 38716  00837E  D004               	goto	i2l18265
 38717  008380  5003               	movf	i2___awmod@divisor^0,w,c
 38718  008382  5E01               	subwf	i2___awmod@dividend^0,f,c
 38719  008384  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 38720  008386  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 38721  008388                     i2l18265:
 38722  008388  90D8               	bcf	status,0,c
 38723  00838A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 38724  00838C  3203               	rrcf	i2___awmod@divisor^0,f,c
 38725  00838E  2E05               	decfsz	i2___awmod@counter^0,f,c
 38726  008390  D7F1               	goto	i2u1778_40
 38727  008392                     i2l18269:
 38728  008392  5006               	movf	i2___awmod@sign^0,w,c
 38729  008394  B4D8               	btfsc	status,2,c
 38730  008396  D004               	goto	i2l18273
 38731  008398  6C01               	negf	i2___awmod@dividend^0,c
 38732  00839A  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 38733  00839C  B0D8               	btfsc	status,0,c
 38734  00839E  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 38735  0083A0                     i2l18273:
 38736  0083A0  0060  F004  F001   	movff	i2___awmod@dividend,?i2___awmod
 38737  0083A6  0060  F008  F002   	movff	i2___awmod@dividend+1,?i2___awmod+1
 38738  0083AC  0012               	return		;funcret
 38739  0083AE                     __end_ofi2___awmod:
 38740                           	opt callstack 0
 38741                           
 38742 ;; *************** function i2_GetVolume *****************
 38743 ;; Defined at:
 38744 ;;		line 169 in file "monitor.c"
 38745 ;; Parameters:    Size  Location     Type
 38746 ;;		None
 38747 ;; Auto vars:     Size  Location     Type
 38748 ;;		None
 38749 ;; Return value:  Size  Location     Type
 38750 ;;                  2    0[COMRAM] short 
 38751 ;; Registers used:
 38752 ;;		None
 38753 ;; Tracked objects:
 38754 ;;		On entry : 0/0
 38755 ;;		On exit  : 0/0
 38756 ;;		Unchanged: 0/0
 38757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38762 ;;Total ram usage:        2 bytes
 38763 ;; Hardware stack levels used:    1
 38764 ;; This function calls:
 38765 ;;		Nothing
 38766 ;; This function is called by:
 38767 ;;		i2_ValueDisplay
 38768 ;; This function uses a non-reentrant model
 38769 ;;
 38770                           
 38771                           	psect	text298
 38772  00A332                     __ptext298:
 38773                           	opt callstack 0
 38774  00A332                     i2_GetVolume:
 38775                           	opt callstack 11
 38776                           
 38777                           ;incstack = 0
 38778  00A332  0060  F774  F001   	movff	_volume,?i2_GetVolume
 38779  00A338  0060  F778  F002   	movff	_volume+1,?i2_GetVolume+1
 38780  00A33E  0012               	return		;funcret
 38781  00A340                     __end_ofi2_GetVolume:
 38782                           	opt callstack 0
 38783                           
 38784 ;; *************** function i2_GetTi *****************
 38785 ;; Defined at:
 38786 ;;		line 162 in file "monitor.c"
 38787 ;; Parameters:    Size  Location     Type
 38788 ;;		None
 38789 ;; Auto vars:     Size  Location     Type
 38790 ;;		None
 38791 ;; Return value:  Size  Location     Type
 38792 ;;                  2    0[COMRAM] short 
 38793 ;; Registers used:
 38794 ;;		wreg, status,2, status,0
 38795 ;; Tracked objects:
 38796 ;;		On entry : 3F/1
 38797 ;;		On exit  : 3F/2
 38798 ;;		Unchanged: 0/0
 38799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38804 ;;Total ram usage:        2 bytes
 38805 ;; Hardware stack levels used:    1
 38806 ;; This function calls:
 38807 ;;		Nothing
 38808 ;; This function is called by:
 38809 ;;		i2_ValueDisplay
 38810 ;; This function uses a non-reentrant model
 38811 ;;
 38812                           
 38813                           	psect	text299
 38814  00A340                     __ptext299:
 38815                           	opt callstack 0
 38816  00A340                     i2_GetTi:
 38817                           	opt callstack 11
 38818                           
 38819                           ; BSR set to: 1
 38820                           
 38821                           ;incstack = 0
 38822  00A340  90D8               	bcf	status,0,c
 38823  00A342  0102               	movlb	2	; () banked
 38824  00A344  355A               	rlcf	_ti& (0+255),w,b
 38825  00A346  6E01               	movwf	?i2_GetTi^0,c
 38826  00A348  355B               	rlcf	(_ti+1)& (0+255),w,b
 38827  00A34A  6E02               	movwf	(?i2_GetTi+1)^0,c
 38828                           
 38829                           ; BSR set to: 2
 38830  00A34C  0012               	return		;funcret
 38831  00A34E                     __end_ofi2_GetTi:
 38832                           	opt callstack 0
 38833                           
 38834 ;; *************** function i2_GetTe *****************
 38835 ;; Defined at:
 38836 ;;		line 163 in file "monitor.c"
 38837 ;; Parameters:    Size  Location     Type
 38838 ;;		None
 38839 ;; Auto vars:     Size  Location     Type
 38840 ;;		None
 38841 ;; Return value:  Size  Location     Type
 38842 ;;                  2    0[COMRAM] short 
 38843 ;; Registers used:
 38844 ;;		wreg, status,2, status,0
 38845 ;; Tracked objects:
 38846 ;;		On entry : 3F/2
 38847 ;;		On exit  : 3F/2
 38848 ;;		Unchanged: 0/0
 38849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38854 ;;Total ram usage:        2 bytes
 38855 ;; Hardware stack levels used:    1
 38856 ;; This function calls:
 38857 ;;		Nothing
 38858 ;; This function is called by:
 38859 ;;		i2_ValueDisplay
 38860 ;; This function uses a non-reentrant model
 38861 ;;
 38862                           
 38863                           	psect	text300
 38864  00A3DE                     __ptext300:
 38865                           	opt callstack 0
 38866  00A3DE                     i2_GetTe:
 38867                           	opt callstack 11
 38868                           
 38869                           ; BSR set to: 2
 38870                           
 38871                           ; BSR set to: 2
 38872                           ;incstack = 0
 38873  00A3DE  90D8               	bcf	status,0,c
 38874  00A3E0  3558               	rlcf	_te& (0+255),w,b
 38875  00A3E2  6E01               	movwf	?i2_GetTe^0,c
 38876  00A3E4  3559               	rlcf	(_te+1)& (0+255),w,b
 38877  00A3E6  6E02               	movwf	(?i2_GetTe+1)^0,c
 38878                           
 38879                           ; BSR set to: 2
 38880  00A3E8  0012               	return		;funcret
 38881  00A3EA                     __end_ofi2_GetTe:
 38882                           	opt callstack 0
 38883                           
 38884 ;; *************** function i2_GetTdi *****************
 38885 ;; Defined at:
 38886 ;;		line 161 in file "monitor.c"
 38887 ;; Parameters:    Size  Location     Type
 38888 ;;		None
 38889 ;; Auto vars:     Size  Location     Type
 38890 ;;		None
 38891 ;; Return value:  Size  Location     Type
 38892 ;;                  2    0[COMRAM] short 
 38893 ;; Registers used:
 38894 ;;		wreg, status,2, status,0
 38895 ;; Tracked objects:
 38896 ;;		On entry : 3F/0
 38897 ;;		On exit  : 3F/1
 38898 ;;		Unchanged: 0/0
 38899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38904 ;;Total ram usage:        2 bytes
 38905 ;; Hardware stack levels used:    1
 38906 ;; This function calls:
 38907 ;;		Nothing
 38908 ;; This function is called by:
 38909 ;;		i2_ValueDisplay
 38910 ;; This function uses a non-reentrant model
 38911 ;;
 38912                           
 38913                           	psect	text301
 38914  00A34E                     __ptext301:
 38915                           	opt callstack 0
 38916  00A34E                     i2_GetTdi:
 38917                           	opt callstack 11
 38918                           
 38919                           ; BSR set to: 0
 38920                           
 38921                           ; BSR set to: 2
 38922                           ;incstack = 0
 38923  00A34E  90D8               	bcf	status,0,c
 38924  00A350  0101               	movlb	1	; () banked
 38925  00A352  35D9               	rlcf	_tdi& (0+255),w,b
 38926  00A354  6E01               	movwf	?i2_GetTdi^0,c
 38927  00A356  35DA               	rlcf	(_tdi+1)& (0+255),w,b
 38928  00A358  6E02               	movwf	(?i2_GetTdi+1)^0,c
 38929                           
 38930                           ; BSR set to: 1
 38931  00A35A  0012               	return		;funcret
 38932  00A35C                     __end_ofi2_GetTdi:
 38933                           	opt callstack 0
 38934                           
 38935 ;; *************** function i2_GetTde *****************
 38936 ;; Defined at:
 38937 ;;		line 160 in file "monitor.c"
 38938 ;; Parameters:    Size  Location     Type
 38939 ;;		None
 38940 ;; Auto vars:     Size  Location     Type
 38941 ;;		None
 38942 ;; Return value:  Size  Location     Type
 38943 ;;                  2    0[COMRAM] short 
 38944 ;; Registers used:
 38945 ;;		wreg, status,2, status,0
 38946 ;; Tracked objects:
 38947 ;;		On entry : 3F/1
 38948 ;;		On exit  : 3F/1
 38949 ;;		Unchanged: 0/0
 38950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38955 ;;Total ram usage:        2 bytes
 38956 ;; Hardware stack levels used:    1
 38957 ;; This function calls:
 38958 ;;		Nothing
 38959 ;; This function is called by:
 38960 ;;		i2_ValueDisplay
 38961 ;; This function uses a non-reentrant model
 38962 ;;
 38963                           
 38964                           	psect	text302
 38965  00A3EA                     __ptext302:
 38966                           	opt callstack 0
 38967  00A3EA                     i2_GetTde:
 38968                           	opt callstack 11
 38969                           
 38970                           ; BSR set to: 1
 38971                           
 38972                           ; BSR set to: 1
 38973                           ;incstack = 0
 38974  00A3EA  90D8               	bcf	status,0,c
 38975  00A3EC  35D7               	rlcf	_tde& (0+255),w,b
 38976  00A3EE  6E01               	movwf	?i2_GetTde^0,c
 38977  00A3F0  35D8               	rlcf	(_tde+1)& (0+255),w,b
 38978  00A3F2  6E02               	movwf	(?i2_GetTde+1)^0,c
 38979                           
 38980                           ; BSR set to: 1
 38981  00A3F4  0012               	return		;funcret
 38982  00A3F6                     __end_ofi2_GetTde:
 38983                           	opt callstack 0
 38984                           
 38985 ;; *************** function i2_GetTargetIp *****************
 38986 ;; Defined at:
 38987 ;;		line 189 in file "monitor.c"
 38988 ;; Parameters:    Size  Location     Type
 38989 ;;		None
 38990 ;; Auto vars:     Size  Location     Type
 38991 ;;		None
 38992 ;; Return value:  Size  Location     Type
 38993 ;;                  2   14[COMRAM] short 
 38994 ;; Registers used:
 38995 ;;		wreg, status,2, status,0, cstack
 38996 ;; Tracked objects:
 38997 ;;		On entry : 3F/0
 38998 ;;		On exit  : 0/0
 38999 ;;		Unchanged: 0/0
 39000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39005 ;;Total ram usage:        2 bytes
 39006 ;; Hardware stack levels used:    1
 39007 ;; Hardware stack levels required when called:    1
 39008 ;; This function calls:
 39009 ;;		i2___awdiv
 39010 ;; This function is called by:
 39011 ;;		i2_ValueDisplay
 39012 ;; This function uses a non-reentrant model
 39013 ;;
 39014                           
 39015                           	psect	text303
 39016  009B38                     __ptext303:
 39017                           	opt callstack 0
 39018  009B38                     i2_GetTargetIp:
 39019                           	opt callstack 10
 39020                           
 39021                           ; BSR set to: 0
 39022                           ;monitor.c: 190:     return targetHigh/5;
 39023                           
 39024                           ; BSR set to: 1
 39025                           ;incstack = 0
 39026  009B38  0060  F78C  F007   	movff	_targetHigh,i2___awdiv@dividend
 39027  009B3E  0060  F790  F008   	movff	_targetHigh+1,i2___awdiv@dividend+1
 39028  009B44  0E00               	movlw	0
 39029  009B46  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39030  009B48  0E05               	movlw	5
 39031  009B4A  6E09               	movwf	i2___awdiv@divisor^0,c
 39032  009B4C  ECE1  F03F         	call	i2___awdiv	;wreg free
 39033  009B50  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetTargetIp
 39034  009B56  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetTargetIp+1
 39035  009B5C  0012               	return		;funcret
 39036  009B5E                     __end_ofi2_GetTargetIp:
 39037                           	opt callstack 0
 39038                           
 39039 ;; *************** function i2_GetTargetEp *****************
 39040 ;; Defined at:
 39041 ;;		line 193 in file "monitor.c"
 39042 ;; Parameters:    Size  Location     Type
 39043 ;;		None
 39044 ;; Auto vars:     Size  Location     Type
 39045 ;;		None
 39046 ;; Return value:  Size  Location     Type
 39047 ;;                  2   14[COMRAM] short 
 39048 ;; Registers used:
 39049 ;;		wreg, status,2, status,0, cstack
 39050 ;; Tracked objects:
 39051 ;;		On entry : 0/0
 39052 ;;		On exit  : 0/0
 39053 ;;		Unchanged: 0/0
 39054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39059 ;;Total ram usage:        2 bytes
 39060 ;; Hardware stack levels used:    1
 39061 ;; Hardware stack levels required when called:    1
 39062 ;; This function calls:
 39063 ;;		i2___awdiv
 39064 ;; This function is called by:
 39065 ;;		i2_ValueDisplay
 39066 ;; This function uses a non-reentrant model
 39067 ;;
 39068                           
 39069                           	psect	text304
 39070  009B5E                     __ptext304:
 39071                           	opt callstack 0
 39072  009B5E                     i2_GetTargetEp:
 39073                           	opt callstack 10
 39074                           
 39075                           ;monitor.c: 194:     return targetLow/5;
 39076                           
 39077                           ;incstack = 0
 39078  009B5E  0060  F784  F007   	movff	_targetLow,i2___awdiv@dividend
 39079  009B64  0060  F788  F008   	movff	_targetLow+1,i2___awdiv@dividend+1
 39080  009B6A  0E00               	movlw	0
 39081  009B6C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39082  009B6E  0E05               	movlw	5
 39083  009B70  6E09               	movwf	i2___awdiv@divisor^0,c
 39084  009B72  ECE1  F03F         	call	i2___awdiv	;wreg free
 39085  009B76  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetTargetEp
 39086  009B7C  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetTargetEp+1
 39087  009B82  0012               	return		;funcret
 39088  009B84                     __end_ofi2_GetTargetEp:
 39089                           	opt callstack 0
 39090                           
 39091 ;; *************** function i2_GetSpr *****************
 39092 ;; Defined at:
 39093 ;;		line 60 in file "controller.c"
 39094 ;; Parameters:    Size  Location     Type
 39095 ;;		None
 39096 ;; Auto vars:     Size  Location     Type
 39097 ;;		None
 39098 ;; Return value:  Size  Location     Type
 39099 ;;                  2    0[COMRAM] short 
 39100 ;; Registers used:
 39101 ;;		None
 39102 ;; Tracked objects:
 39103 ;;		On entry : 0/0
 39104 ;;		On exit  : 0/0
 39105 ;;		Unchanged: 0/0
 39106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39111 ;;Total ram usage:        2 bytes
 39112 ;; Hardware stack levels used:    1
 39113 ;; This function calls:
 39114 ;;		Nothing
 39115 ;; This function is called by:
 39116 ;;		i2_ValueDisplay
 39117 ;; This function uses a non-reentrant model
 39118 ;;
 39119                           
 39120                           	psect	text305
 39121  00A35C                     __ptext305:
 39122                           	opt callstack 0
 39123  00A35C                     i2_GetSpr:
 39124                           	opt callstack 11
 39125                           
 39126                           ;incstack = 0
 39127  00A35C  0060  F8C8  F001   	movff	_spr,?i2_GetSpr
 39128  00A362  0060  F8CC  F002   	movff	_spr+1,?i2_GetSpr+1
 39129  00A368  0012               	return		;funcret
 39130  00A36A                     __end_ofi2_GetSpr:
 39131                           	opt callstack 0
 39132                           
 39133 ;; *************** function i2_GetPmax *****************
 39134 ;; Defined at:
 39135 ;;		line 170 in file "monitor.c"
 39136 ;; Parameters:    Size  Location     Type
 39137 ;;		None
 39138 ;; Auto vars:     Size  Location     Type
 39139 ;;		None
 39140 ;; Return value:  Size  Location     Type
 39141 ;;                  2   14[COMRAM] short 
 39142 ;; Registers used:
 39143 ;;		wreg, status,2, status,0, cstack
 39144 ;; Tracked objects:
 39145 ;;		On entry : 0/0
 39146 ;;		On exit  : 0/0
 39147 ;;		Unchanged: 0/0
 39148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39153 ;;Total ram usage:        2 bytes
 39154 ;; Hardware stack levels used:    1
 39155 ;; Hardware stack levels required when called:    1
 39156 ;; This function calls:
 39157 ;;		i2___awdiv
 39158 ;; This function is called by:
 39159 ;;		i2_ValueDisplay
 39160 ;; This function uses a non-reentrant model
 39161 ;;
 39162                           
 39163                           	psect	text306
 39164  009B84                     __ptext306:
 39165                           	opt callstack 0
 39166  009B84                     i2_GetPmax:
 39167                           	opt callstack 10
 39168                           
 39169                           ;incstack = 0
 39170  009B84  0060  F360  F007   	movff	_pmax,i2___awdiv@dividend
 39171  009B8A  0060  F364  F008   	movff	_pmax+1,i2___awdiv@dividend+1
 39172  009B90  0E00               	movlw	0
 39173  009B92  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39174  009B94  0E05               	movlw	5
 39175  009B96  6E09               	movwf	i2___awdiv@divisor^0,c
 39176  009B98  ECE1  F03F         	call	i2___awdiv	;wreg free
 39177  009B9C  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetPmax
 39178  009BA2  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetPmax+1
 39179  009BA8  0012               	return		;funcret
 39180  009BAA                     __end_ofi2_GetPmax:
 39181                           	opt callstack 0
 39182                           
 39183 ;; *************** function i2_GetIp *****************
 39184 ;; Defined at:
 39185 ;;		line 168 in file "monitor.c"
 39186 ;; Parameters:    Size  Location     Type
 39187 ;;		None
 39188 ;; Auto vars:     Size  Location     Type
 39189 ;;		None
 39190 ;; Return value:  Size  Location     Type
 39191 ;;                  2   14[COMRAM] short 
 39192 ;; Registers used:
 39193 ;;		wreg, status,2, status,0, cstack
 39194 ;; Tracked objects:
 39195 ;;		On entry : 0/0
 39196 ;;		On exit  : 0/0
 39197 ;;		Unchanged: 0/0
 39198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39201 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39202 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39203 ;;Total ram usage:        9 bytes
 39204 ;; Hardware stack levels used:    1
 39205 ;; Hardware stack levels required when called:    1
 39206 ;; This function calls:
 39207 ;;		i2___awdiv
 39208 ;; This function is called by:
 39209 ;;		i2_ValueDisplay
 39210 ;; This function uses a non-reentrant model
 39211 ;;
 39212                           
 39213                           	psect	text307
 39214  0050F6                     __ptext307:
 39215                           	opt callstack 0
 39216  0050F6                     i2_GetIp:
 39217                           	opt callstack 10
 39218                           
 39219                           ;incstack = 0
 39220  0050F6  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39221  0050FC  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39222  005102  0E00               	movlw	0
 39223  005104  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39224  005106  0E05               	movlw	5
 39225  005108  6E09               	movwf	i2___awdiv@divisor^0,c
 39226  00510A  ECE1  F03F         	call	i2___awdiv	;wreg free
 39227  00510E  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetIp
 39228  005114  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetIp+1
 39229  00511A  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39230  005120  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39231  005126  0E00               	movlw	0
 39232  005128  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39233  00512A  0E05               	movlw	5
 39234  00512C  6E09               	movwf	i2___awdiv@divisor^0,c
 39235  00512E  ECE1  F03F         	call	i2___awdiv	;wreg free
 39236  005132  5007               	movf	?i2___awdiv^0,w,c
 39237  005134  5C11               	subwf	??i2_GetIp^0,w,c
 39238  005136  5012               	movf	(??i2_GetIp+1)^0,w,c
 39239  005138  0A80               	xorlw	128
 39240  00513A  6E13               	movwf	(??i2_GetIp+2)^0,c
 39241  00513C  5008               	movf	(?i2___awdiv+1)^0,w,c
 39242  00513E  0A80               	xorlw	128
 39243  005140  5813               	subwfb	(??i2_GetIp+2)^0,w,c
 39244  005142  A0D8               	btfss	status,0,c
 39245  005144  D00D               	goto	i2l18153
 39246  005146  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39247  00514C  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39248  005152  0E00               	movlw	0
 39249  005154  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39250  005156  0E05               	movlw	5
 39251  005158  6E09               	movwf	i2___awdiv@divisor^0,c
 39252  00515A  ECE1  F03F         	call	i2___awdiv	;wreg free
 39253  00515E  D00C               	goto	L15
 39254  005160                     i2l18153:
 39255  005160  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39256  005166  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39257  00516C  0E00               	movlw	0
 39258  00516E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39259  005170  0E05               	movlw	5
 39260  005172  6E09               	movwf	i2___awdiv@divisor^0,c
 39261  005174  ECE1  F03F         	call	i2___awdiv	;wreg free
 39262  005178                     L15:
 39263  005178  0060  F01C  F014   	movff	?i2___awdiv,i2_GetIp$4809
 39264  00517E  0060  F020  F015   	movff	?i2___awdiv+1,i2_GetIp$4809+1
 39265  005184  0060  F754  F007   	movff	_pi,i2___awdiv@dividend
 39266  00518A  0060  F758  F008   	movff	_pi+1,i2___awdiv@dividend+1
 39267  005190  0E00               	movlw	0
 39268  005192  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39269  005194  0E05               	movlw	5
 39270  005196  6E09               	movwf	i2___awdiv@divisor^0,c
 39271  005198  ECE1  F03F         	call	i2___awdiv	;wreg free
 39272  00519C  5014               	movf	i2_GetIp$4809^0,w,c
 39273  00519E  5C07               	subwf	?i2___awdiv^0,w,c
 39274  0051A0  5008               	movf	(?i2___awdiv+1)^0,w,c
 39275  0051A2  0A80               	xorlw	128
 39276  0051A4  6E11               	movwf	??i2_GetIp^0,c
 39277  0051A6  5015               	movf	(i2_GetIp$4809+1)^0,w,c
 39278  0051A8  0A80               	xorlw	128
 39279  0051AA  5811               	subwfb	??i2_GetIp^0,w,c
 39280  0051AC  A0D8               	btfss	status,0,c
 39281  0051AE  D013               	goto	i2l18157
 39282  0051B0  0060  F754  F007   	movff	_pi,i2___awdiv@dividend
 39283  0051B6  0060  F758  F008   	movff	_pi+1,i2___awdiv@dividend+1
 39284  0051BC  0E00               	movlw	0
 39285  0051BE  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39286  0051C0  0E05               	movlw	5
 39287  0051C2  6E09               	movwf	i2___awdiv@divisor^0,c
 39288  0051C4  ECE1  F03F         	call	i2___awdiv	;wreg free
 39289  0051C8  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetIp
 39290  0051CE  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetIp+1
 39291  0051D4  0012               	return	
 39292  0051D6                     i2l18157:
 39293  0051D6  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39294  0051DC  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39295  0051E2  0E00               	movlw	0
 39296  0051E4  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39297  0051E6  0E05               	movlw	5
 39298  0051E8  6E09               	movwf	i2___awdiv@divisor^0,c
 39299  0051EA  ECE1  F03F         	call	i2___awdiv	;wreg free
 39300  0051EE  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetIp
 39301  0051F4  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetIp+1
 39302  0051FA  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39303  005200  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39304  005206  0E00               	movlw	0
 39305  005208  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39306  00520A  0E05               	movlw	5
 39307  00520C  6E09               	movwf	i2___awdiv@divisor^0,c
 39308  00520E  ECE1  F03F         	call	i2___awdiv	;wreg free
 39309  005212  5007               	movf	?i2___awdiv^0,w,c
 39310  005214  5C11               	subwf	??i2_GetIp^0,w,c
 39311  005216  5012               	movf	(??i2_GetIp+1)^0,w,c
 39312  005218  0A80               	xorlw	128
 39313  00521A  6E13               	movwf	(??i2_GetIp+2)^0,c
 39314  00521C  5008               	movf	(?i2___awdiv+1)^0,w,c
 39315  00521E  0A80               	xorlw	128
 39316  005220  5813               	subwfb	(??i2_GetIp+2)^0,w,c
 39317  005222  A0D8               	btfss	status,0,c
 39318  005224  D00D               	goto	i2l18161
 39319  005226  0060  F74C  F007   	movff	_pHigh,i2___awdiv@dividend
 39320  00522C  0060  F750  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39321  005232  0E00               	movlw	0
 39322  005234  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39323  005236  0E05               	movlw	5
 39324  005238  6E09               	movwf	i2___awdiv@divisor^0,c
 39325  00523A  ECE1  F03F         	call	i2___awdiv	;wreg free
 39326  00523E  D00C               	goto	L16
 39327  005240                     i2l18161:
 39328  005240  0060  F744  F007   	movff	_lrpi,i2___awdiv@dividend
 39329  005246  0060  F748  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39330  00524C  0E00               	movlw	0
 39331  00524E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39332  005250  0E05               	movlw	5
 39333  005252  6E09               	movwf	i2___awdiv@divisor^0,c
 39334  005254  ECE1  F03F         	call	i2___awdiv	;wreg free
 39335  005258                     L16:
 39336  005258  0060  F01C  F016   	movff	?i2___awdiv,i2_GetIp$4810
 39337  00525E  0060  F020  F017   	movff	?i2___awdiv+1,i2_GetIp$4810+1
 39338  005264  0060  F058  F00F   	movff	i2_GetIp$4810,?i2_GetIp
 39339  00526A  0060  F05C  F010   	movff	i2_GetIp$4810+1,?i2_GetIp+1
 39340  005270  0012               	return		;funcret
 39341  005272                     __end_ofi2_GetIp:
 39342                           	opt callstack 0
 39343                           
 39344 ;; *************** function i2_GetEp *****************
 39345 ;; Defined at:
 39346 ;;		line 167 in file "monitor.c"
 39347 ;; Parameters:    Size  Location     Type
 39348 ;;		None
 39349 ;; Auto vars:     Size  Location     Type
 39350 ;;		None
 39351 ;; Return value:  Size  Location     Type
 39352 ;;                  2   14[COMRAM] short 
 39353 ;; Registers used:
 39354 ;;		wreg, status,2, status,0, cstack
 39355 ;; Tracked objects:
 39356 ;;		On entry : 0/0
 39357 ;;		On exit  : 0/0
 39358 ;;		Unchanged: 0/0
 39359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39364 ;;Total ram usage:        2 bytes
 39365 ;; Hardware stack levels used:    1
 39366 ;; Hardware stack levels required when called:    1
 39367 ;; This function calls:
 39368 ;;		i2___awdiv
 39369 ;; This function is called by:
 39370 ;;		i2_ValueDisplay
 39371 ;; This function uses a non-reentrant model
 39372 ;;
 39373                           
 39374                           	psect	text308
 39375  009A78                     __ptext308:
 39376                           	opt callstack 0
 39377  009A78                     i2_GetEp:
 39378                           	opt callstack 10
 39379                           
 39380                           ;incstack = 0
 39381  009A78  0100               	movlb	0	; () banked
 39382  009A7A  51DA               	movf	_pe& (0+255),w,b
 39383  009A7C  25D4               	addwf	_lrpe& (0+255),w,b
 39384  009A7E  6E07               	movwf	i2___awdiv@dividend^0,c
 39385  009A80  51DB               	movf	(_pe+1)& (0+255),w,b
 39386  009A82  21D5               	addwfc	(_lrpe+1)& (0+255),w,b
 39387  009A84  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 39388  009A86  0E00               	movlw	0
 39389  009A88  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39390  009A8A  0E0A               	movlw	10
 39391  009A8C  6E09               	movwf	i2___awdiv@divisor^0,c
 39392  009A8E  ECE1  F03F         	call	i2___awdiv	;wreg free
 39393  009A92  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetEp
 39394  009A98  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetEp+1
 39395  009A9E  0012               	return		;funcret
 39396  009AA0                     __end_ofi2_GetEp:
 39397                           	opt callstack 0
 39398                           
 39399 ;; *************** function i2___awdiv *****************
 39400 ;; Defined at:
 39401 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 39402 ;; Parameters:    Size  Location     Type
 39403 ;;  dividend        2    6[COMRAM] int 
 39404 ;;  divisor         2    8[COMRAM] int 
 39405 ;; Auto vars:     Size  Location     Type
 39406 ;;  __awdiv         2   12[COMRAM] int 
 39407 ;;  __awdiv         1   11[COMRAM] unsigned char 
 39408 ;;  __awdiv         1   10[COMRAM] unsigned char 
 39409 ;; Return value:  Size  Location     Type
 39410 ;;                  2    6[COMRAM] int 
 39411 ;; Registers used:
 39412 ;;		wreg, status,2, status,0
 39413 ;; Tracked objects:
 39414 ;;		On entry : 0/2
 39415 ;;		On exit  : 0/0
 39416 ;;		Unchanged: 0/0
 39417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39419 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39421 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39422 ;;Total ram usage:        8 bytes
 39423 ;; Hardware stack levels used:    1
 39424 ;; This function calls:
 39425 ;;		Nothing
 39426 ;; This function is called by:
 39427 ;;		_MonitorPressureTask
 39428 ;;		_GetPressure_mbar02
 39429 ;;		i2_ValueDisplay
 39430 ;;		i2_GetEp
 39431 ;;		i2_GetIp
 39432 ;;		i2_GetPmax
 39433 ;;		i2_GetTargetIp
 39434 ;;		i2_GetTargetEp
 39435 ;;		i2_SetCalibrateState
 39436 ;;		i2_GetPressure_pa
 39437 ;;		i2_GetPressureV_pa
 39438 ;; This function uses a non-reentrant model
 39439 ;;
 39440                           
 39441                           	psect	text309
 39442  007FC2                     __ptext309:
 39443                           	opt callstack 0
 39444  007FC2                     i2___awdiv:
 39445                           	opt callstack 11
 39446                           
 39447                           ;incstack = 0
 39448  007FC2  0E00               	movlw	0
 39449  007FC4  6E0C               	movwf	i2___awdiv@sign^0,c
 39450  007FC6  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 39451  007FC8  D006               	goto	i2l17905
 39452  007FCA  6C09               	negf	i2___awdiv@divisor^0,c
 39453  007FCC  1E0A               	comf	(i2___awdiv@divisor+1)^0,f,c
 39454  007FCE  B0D8               	btfsc	status,0,c
 39455  007FD0  2A0A               	incf	(i2___awdiv@divisor+1)^0,f,c
 39456  007FD2  0E01               	movlw	1
 39457  007FD4  6E0C               	movwf	i2___awdiv@sign^0,c
 39458  007FD6                     i2l17905:
 39459  007FD6  AE08               	btfss	(i2___awdiv@dividend+1)^0,7,c
 39460  007FD8  D006               	goto	i2l17911
 39461  007FDA  6C07               	negf	i2___awdiv@dividend^0,c
 39462  007FDC  1E08               	comf	(i2___awdiv@dividend+1)^0,f,c
 39463  007FDE  B0D8               	btfsc	status,0,c
 39464  007FE0  2A08               	incf	(i2___awdiv@dividend+1)^0,f,c
 39465  007FE2  0E01               	movlw	1
 39466  007FE4  1A0C               	xorwf	i2___awdiv@sign^0,f,c
 39467  007FE6                     i2l17911:
 39468  007FE6  0E00               	movlw	0
 39469  007FE8  6E0E               	movwf	(i2___awdiv@quotient+1)^0,c
 39470  007FEA  0E00               	movlw	0
 39471  007FEC  6E0D               	movwf	i2___awdiv@quotient^0,c
 39472  007FEE  5009               	movf	i2___awdiv@divisor^0,w,c
 39473  007FF0  100A               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 39474  007FF2  B4D8               	btfsc	status,2,c
 39475  007FF4  D01C               	goto	i2l17933
 39476  007FF6  0E01               	movlw	1
 39477  007FF8  6E0B               	movwf	i2___awdiv@counter^0,c
 39478  007FFA  D004               	goto	i2l17919
 39479  007FFC                     i2l17917:
 39480  007FFC  90D8               	bcf	status,0,c
 39481  007FFE  3609               	rlcf	i2___awdiv@divisor^0,f,c
 39482  008000  360A               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 39483  008002  2A0B               	incf	i2___awdiv@counter^0,f,c
 39484  008004                     i2l17919:
 39485  008004  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 39486  008006  D7FA               	goto	i2l17917
 39487  008008                     i2u1738_40:
 39488  008008  90D8               	bcf	status,0,c
 39489  00800A  360D               	rlcf	i2___awdiv@quotient^0,f,c
 39490  00800C  360E               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 39491  00800E  5009               	movf	i2___awdiv@divisor^0,w,c
 39492  008010  5C07               	subwf	i2___awdiv@dividend^0,w,c
 39493  008012  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 39494  008014  5808               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 39495  008016  A0D8               	btfss	status,0,c
 39496  008018  D005               	goto	i2l17929
 39497  00801A  5009               	movf	i2___awdiv@divisor^0,w,c
 39498  00801C  5E07               	subwf	i2___awdiv@dividend^0,f,c
 39499  00801E  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 39500  008020  5A08               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 39501  008022  800D               	bsf	i2___awdiv@quotient^0,0,c
 39502  008024                     i2l17929:
 39503  008024  90D8               	bcf	status,0,c
 39504  008026  320A               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 39505  008028  3209               	rrcf	i2___awdiv@divisor^0,f,c
 39506  00802A  2E0B               	decfsz	i2___awdiv@counter^0,f,c
 39507  00802C  D7ED               	goto	i2u1738_40
 39508  00802E                     i2l17933:
 39509  00802E  500C               	movf	i2___awdiv@sign^0,w,c
 39510  008030  B4D8               	btfsc	status,2,c
 39511  008032  D004               	goto	i2l17937
 39512  008034  6C0D               	negf	i2___awdiv@quotient^0,c
 39513  008036  1E0E               	comf	(i2___awdiv@quotient+1)^0,f,c
 39514  008038  B0D8               	btfsc	status,0,c
 39515  00803A  2A0E               	incf	(i2___awdiv@quotient+1)^0,f,c
 39516  00803C                     i2l17937:
 39517  00803C  0060  F034  F007   	movff	i2___awdiv@quotient,?i2___awdiv
 39518  008042  0060  F038  F008   	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 39519  008048  0012               	return		;funcret
 39520  00804A                     __end_ofi2___awdiv:
 39521                           	opt callstack 0
 39522                           
 39523 ;; *************** function i2_GetDisableAlarmSV1 *****************
 39524 ;; Defined at:
 39525 ;;		line 881 in file "monitor.c"
 39526 ;; Parameters:    Size  Location     Type
 39527 ;;		None
 39528 ;; Auto vars:     Size  Location     Type
 39529 ;;		None
 39530 ;; Return value:  Size  Location     Type
 39531 ;;                  1    wreg      _Bool 
 39532 ;; Registers used:
 39533 ;;		wreg, status,2
 39534 ;; Tracked objects:
 39535 ;;		On entry : 0/0
 39536 ;;		On exit  : 3F/0
 39537 ;;		Unchanged: 0/0
 39538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39543 ;;Total ram usage:        0 bytes
 39544 ;; Hardware stack levels used:    1
 39545 ;; This function calls:
 39546 ;;		Nothing
 39547 ;; This function is called by:
 39548 ;;		i2_ValueDisplay
 39549 ;; This function uses a non-reentrant model
 39550 ;;
 39551                           
 39552                           	psect	text310
 39553  00A5F8                     __ptext310:
 39554                           	opt callstack 0
 39555  00A5F8                     i2_GetDisableAlarmSV1:
 39556                           	opt callstack 11
 39557                           
 39558                           ;incstack = 0
 39559  00A5F8  0100               	movlb	0	; () banked
 39560  00A5FA  51F3               	movf	_disableAlarmSV1& (0+255),w,b
 39561                           
 39562                           ; BSR set to: 0
 39563  00A5FC  0012               	return		;funcret
 39564  00A5FE                     __end_ofi2_GetDisableAlarmSV1:
 39565                           	opt callstack 0
 39566                           
 39567 ;; *************** function i2_GetBpm *****************
 39568 ;; Defined at:
 39569 ;;		line 165 in file "monitor.c"
 39570 ;; Parameters:    Size  Location     Type
 39571 ;;		None
 39572 ;; Auto vars:     Size  Location     Type
 39573 ;;		None
 39574 ;; Return value:  Size  Location     Type
 39575 ;;                  2    0[COMRAM] short 
 39576 ;; Registers used:
 39577 ;;		None
 39578 ;; Tracked objects:
 39579 ;;		On entry : 0/0
 39580 ;;		On exit  : 0/0
 39581 ;;		Unchanged: 0/0
 39582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39587 ;;Total ram usage:        2 bytes
 39588 ;; Hardware stack levels used:    1
 39589 ;; This function calls:
 39590 ;;		Nothing
 39591 ;; This function is called by:
 39592 ;;		i2_ValueDisplay
 39593 ;; This function uses a non-reentrant model
 39594 ;;
 39595                           
 39596                           	psect	text311
 39597  00A36A                     __ptext311:
 39598                           	opt callstack 0
 39599  00A36A                     i2_GetBpm:
 39600                           	opt callstack 11
 39601                           
 39602                           ; BSR set to: 0
 39603                           ;incstack = 0
 39604  00A36A  0060  F958  F001   	movff	_bpm,?i2_GetBpm
 39605  00A370  0060  F95C  F002   	movff	_bpm+1,?i2_GetBpm+1
 39606  00A376  0012               	return		;funcret
 39607  00A378                     __end_ofi2_GetBpm:
 39608                           	opt callstack 0
 39609                           
 39610 ;; *************** function i2_GetAlarmState *****************
 39611 ;; Defined at:
 39612 ;;		line 431 in file "alarm.c"
 39613 ;; Parameters:    Size  Location     Type
 39614 ;;		None
 39615 ;; Auto vars:     Size  Location     Type
 39616 ;;		None
 39617 ;; Return value:  Size  Location     Type
 39618 ;;                  2    4[COMRAM] PTR unsigned char 
 39619 ;; Registers used:
 39620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39621 ;; Tracked objects:
 39622 ;;		On entry : 3F/0
 39623 ;;		On exit  : 0/0
 39624 ;;		Unchanged: 0/0
 39625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39630 ;;Total ram usage:        2 bytes
 39631 ;; Hardware stack levels used:    1
 39632 ;; Hardware stack levels required when called:    1
 39633 ;; This function calls:
 39634 ;;		i2_AnyAlarm
 39635 ;; This function is called by:
 39636 ;;		i2_ValueDisplay
 39637 ;; This function uses a non-reentrant model
 39638 ;;
 39639                           
 39640                           	psect	text312
 39641  008FCE                     __ptext312:
 39642                           	opt callstack 0
 39643  008FCE                     i2_GetAlarmState:
 39644                           	opt callstack 10
 39645                           
 39646                           ; BSR set to: 0
 39647                           ;alarm.c: 432:     if (displayStatus==2) return "Hi";
 39648                           
 39649                           ;incstack = 0
 39650  008FCE  0E02               	movlw	2
 39651  008FD0  19E0               	xorwf	_displayStatus& (0+255),w,b
 39652  008FD2  11E1               	iorwf	(_displayStatus+1)& (0+255),w,b
 39653  008FD4  A4D8               	btfss	status,2,c
 39654  008FD6  D005               	goto	i2l18101
 39655                           
 39656                           ; BSR set to: 0
 39657  008FD8  0EF0               	movlw	low STR_26
 39658  008FDA  6E05               	movwf	?i2_GetAlarmState^0,c
 39659  008FDC  0EFF               	movlw	high STR_26
 39660  008FDE  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39661  008FE0  0012               	return	
 39662  008FE2                     i2l18101:
 39663                           
 39664                           ; BSR set to: 0
 39665                           ;alarm.c: 434:         if (AnyAlarm() && muteSec) return "Mu";
 39666  008FE2  EC8E  F04A         	call	i2_AnyAlarm	;wreg free
 39667  008FE6  0900               	iorlw	0
 39668  008FE8  B4D8               	btfsc	status,2,c
 39669  008FEA  D00A               	goto	i2l18111
 39670  008FEC  0101               	movlb	1	; () banked
 39671  008FEE  51EB               	movf	_muteSec& (0+255),w,b
 39672  008FF0  11EC               	iorwf	(_muteSec+1)& (0+255),w,b
 39673  008FF2  B4D8               	btfsc	status,2,c
 39674  008FF4  D005               	goto	i2l18111
 39675                           
 39676                           ; BSR set to: 1
 39677  008FF6  0EF6               	movlw	low STR_27
 39678  008FF8  6E05               	movwf	?i2_GetAlarmState^0,c
 39679  008FFA  0EFF               	movlw	high STR_27
 39680  008FFC  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39681  008FFE  0012               	return	
 39682  009000                     i2l18111:
 39683  009000  EC8E  F04A         	call	i2_AnyAlarm	;wreg free
 39684  009004  0900               	iorlw	0
 39685  009006  B4D8               	btfsc	status,2,c
 39686  009008  D005               	goto	i2l18117
 39687  00900A  0EF3               	movlw	low STR_28
 39688  00900C  6E05               	movwf	?i2_GetAlarmState^0,c
 39689  00900E  0EFF               	movlw	high STR_28
 39690  009010  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39691  009012  0012               	return	
 39692  009014                     i2l18117:
 39693                           
 39694                           ;alarm.c: 437:     return "  ";
 39695  009014  0EED               	movlw	low (STR_6+14)
 39696  009016  6E05               	movwf	?i2_GetAlarmState^0,c
 39697  009018  0EFE               	movlw	high (STR_6+14)
 39698  00901A  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 39699  00901C  0012               	return		;funcret
 39700  00901E                     __end_ofi2_GetAlarmState:
 39701                           	opt callstack 0
 39702                           
 39703 ;; *************** function i2_AnyAlarm *****************
 39704 ;; Defined at:
 39705 ;;		line 370 in file "alarm.c"
 39706 ;; Parameters:    Size  Location     Type
 39707 ;;		None
 39708 ;; Auto vars:     Size  Location     Type
 39709 ;;  AnyAlarm        2    2[COMRAM] int 
 39710 ;; Return value:  Size  Location     Type
 39711 ;;                  1    wreg      _Bool 
 39712 ;; Registers used:
 39713 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39714 ;; Tracked objects:
 39715 ;;		On entry : 0/1
 39716 ;;		On exit  : 0/0
 39717 ;;		Unchanged: 0/0
 39718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39723 ;;Total ram usage:        4 bytes
 39724 ;; Hardware stack levels used:    1
 39725 ;; This function calls:
 39726 ;;		Nothing
 39727 ;; This function is called by:
 39728 ;;		_AlarmHandler
 39729 ;;		i2_MuteAlarm
 39730 ;;		i2_GetAlarmState
 39731 ;;		i2_AlarmUpdateLCD
 39732 ;; This function uses a non-reentrant model
 39733 ;;
 39734                           
 39735                           	psect	text313
 39736  00951C                     __ptext313:
 39737                           	opt callstack 0
 39738  00951C                     i2_AnyAlarm:
 39739                           	opt callstack 14
 39740                           
 39741                           ;alarm.c: 371:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 39742                           
 39743                           ;incstack = 0
 39744  00951C  0E00               	movlw	0
 39745  00951E  6E04               	movwf	(i2AnyAlarm@i+1)^0,c
 39746  009520  0E00               	movlw	0
 39747  009522  6E03               	movwf	i2AnyAlarm@i^0,c
 39748  009524                     i2l17875:
 39749                           
 39750                           ;alarm.c: 372:         if (alarms[i]) return 1;
 39751  009524  90D8               	bcf	status,0,c
 39752  009526  3403               	rlcf	i2AnyAlarm@i^0,w,c
 39753  009528  6ED9               	movwf	fsr2l,c
 39754  00952A  3404               	rlcf	(i2AnyAlarm@i+1)^0,w,c
 39755  00952C  6EDA               	movwf	fsr2h,c
 39756  00952E  0E00               	movlw	low _alarms
 39757  009530  26D9               	addwf	fsr2l,f,c
 39758  009532  0E03               	movlw	high _alarms
 39759  009534  22DA               	addwfc	fsr2h,f,c
 39760  009536  50DE               	movf	postinc2,w,c
 39761  009538  10DE               	iorwf	postinc2,w,c
 39762  00953A  B4D8               	btfsc	status,2,c
 39763  00953C  D002               	goto	i2l17881
 39764  00953E  0E01               	movlw	1
 39765  009540  0012               	return	
 39766  009542                     i2l17881:
 39767                           
 39768                           ;alarm.c: 373:     }
 39769  009542  4A03               	infsnz	i2AnyAlarm@i^0,f,c
 39770  009544  2A04               	incf	(i2AnyAlarm@i+1)^0,f,c
 39771  009546  5004               	movf	(i2AnyAlarm@i+1)^0,w,c
 39772  009548  E104               	bnz	i2u1733_40
 39773  00954A  0E13               	movlw	19
 39774  00954C  5C03               	subwf	i2AnyAlarm@i^0,w,c
 39775  00954E  A0D8               	btfss	status,0,c
 39776  009550  D7E9               	goto	i2l17875
 39777  009552                     i2u1733_40:
 39778                           
 39779                           ;alarm.c: 374:     return 0;
 39780  009552  0E00               	movlw	0
 39781  009554  0012               	return		;funcret
 39782  009556                     __end_ofi2_AnyAlarm:
 39783                           	opt callstack 0
 39784                           
 39785 ;; *************** function _ControllerBuzzerCheck *****************
 39786 ;; Defined at:
 39787 ;;		line 422 in file "buzzer.c"
 39788 ;; Parameters:    Size  Location     Type
 39789 ;;		None
 39790 ;; Auto vars:     Size  Location     Type
 39791 ;;		None
 39792 ;; Return value:  Size  Location     Type
 39793 ;;                  1    wreg      void 
 39794 ;; Registers used:
 39795 ;;		wreg, status,2, cstack
 39796 ;; Tracked objects:
 39797 ;;		On entry : 3F/2
 39798 ;;		On exit  : 3F/2
 39799 ;;		Unchanged: 0/0
 39800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39805 ;;Total ram usage:        0 bytes
 39806 ;; Hardware stack levels used:    1
 39807 ;; Hardware stack levels required when called:    1
 39808 ;; This function calls:
 39809 ;;		i2_CMP1_Enable
 39810 ;; This function is called by:
 39811 ;;		_UpdateState
 39812 ;; This function uses a non-reentrant model
 39813 ;;
 39814                           
 39815                           	psect	text314
 39816  00A3F6                     __ptext314:
 39817                           	opt callstack 0
 39818  00A3F6                     _ControllerBuzzerCheck:
 39819                           	opt callstack 11
 39820                           
 39821                           ; BSR set to: 2
 39822                           ;buzzer.c: 423:     CMP1_Enable();
 39823                           
 39824                           ;incstack = 0
 39825  00A3F6  EC9C  F052         	call	i2_CMP1_Enable	;wreg free
 39826                           
 39827                           ; BSR set to: 57
 39828                           ;buzzer.c: 424:     checkController = 1;
 39829  00A3FA  0E01               	movlw	1
 39830  00A3FC  0102               	movlb	2	; () banked
 39831  00A3FE  6FB2               	movwf	_checkController& (0+255),b
 39832                           
 39833                           ; BSR set to: 2
 39834  00A400  0012               	return		;funcret
 39835  00A402                     __end_of_ControllerBuzzerCheck:
 39836                           	opt callstack 0
 39837                           
 39838 ;; *************** function i2_CMP1_Enable *****************
 39839 ;; Defined at:
 39840 ;;		line 104 in file "mcc_generated_files/cmp1.c"
 39841 ;; Parameters:    Size  Location     Type
 39842 ;;		None
 39843 ;; Auto vars:     Size  Location     Type
 39844 ;;		None
 39845 ;; Return value:  Size  Location     Type
 39846 ;;                  1    wreg      void 
 39847 ;; Registers used:
 39848 ;;		None
 39849 ;; Tracked objects:
 39850 ;;		On entry : 3D/0
 39851 ;;		On exit  : 3F/39
 39852 ;;		Unchanged: 0/0
 39853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39858 ;;Total ram usage:        0 bytes
 39859 ;; Hardware stack levels used:    1
 39860 ;; This function calls:
 39861 ;;		Nothing
 39862 ;; This function is called by:
 39863 ;;		_ControllerBuzzerCheck
 39864 ;;		i2_BuzzerOn
 39865 ;; This function uses a non-reentrant model
 39866 ;;
 39867                           
 39868                           	psect	text315
 39869  00A538                     __ptext315:
 39870                           	opt callstack 0
 39871  00A538                     i2_CMP1_Enable:
 39872                           	opt callstack 12
 39873                           
 39874                           ;mcc_generated_files/cmp1.c: 106:     PIR1bits.C1IF = 0;
 39875                           
 39876                           ; BSR set to: 2
 39877                           ;incstack = 0
 39878  00A538  0139               	movlb	57	; () banked
 39879  00A53A  99A1               	bcf	161,4,b	;volatile
 39880                           
 39881                           ;mcc_generated_files/cmp1.c: 107:     PIE1bits.C1IE = 1;
 39882  00A53C  8991               	bsf	145,4,b	;volatile
 39883                           
 39884                           ; BSR set to: 57
 39885  00A53E  0012               	return		;funcret
 39886  00A540                     __end_ofi2_CMP1_Enable:
 39887                           	opt callstack 0
 39888                           
 39889 ;; *************** function _ClearAllAlarm *****************
 39890 ;; Defined at:
 39891 ;;		line 247 in file "alarm.c"
 39892 ;; Parameters:    Size  Location     Type
 39893 ;;		None
 39894 ;; Auto vars:     Size  Location     Type
 39895 ;;		None
 39896 ;; Return value:  Size  Location     Type
 39897 ;;                  1    wreg      void 
 39898 ;; Registers used:
 39899 ;;		wreg, status,2, status,0, cstack
 39900 ;; Tracked objects:
 39901 ;;		On entry : 3F/1
 39902 ;;		On exit  : 3F/2
 39903 ;;		Unchanged: 0/0
 39904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39909 ;;Total ram usage:        0 bytes
 39910 ;; Hardware stack levels used:    1
 39911 ;; Hardware stack levels required when called:    1
 39912 ;; This function calls:
 39913 ;;		_ClearHighPressureAlarmLow
 39914 ;;		_ClearTdeTooLongAlarm
 39915 ;;		_ClearTdiTooLongAlarm
 39916 ;;		_ClearVAboveMaxAlarm
 39917 ;;		_ClearVBelowMinAlarm
 39918 ;;		i2_ClearBaterryLowAlarmHigh
 39919 ;;		i2_ClearBaterryLowAlarmMed
 39920 ;;		i2_ClearBatteryFailAlarm
 39921 ;;		i2_ClearCircuitFailureAlarm
 39922 ;;		i2_ClearControlFailAlarm
 39923 ;;		i2_ClearEPAboveSetAlarm
 39924 ;;		i2_ClearEPBelowSetAlarm
 39925 ;;		i2_ClearGasFailureAlarm
 39926 ;;		i2_ClearHighPressureAlarmHigh
 39927 ;;		i2_ClearIPAboveSetAlarm
 39928 ;;		i2_ClearIPBelowSetAlarm
 39929 ;;		i2_ClearMonitorFailAlarm
 39930 ;;		i2_ClearNoPowerSupplyAlarm
 39931 ;;		i2_ClearVeryHighPressureAlarmHigh
 39932 ;; This function is called by:
 39933 ;;		_UpdateState
 39934 ;; This function uses a non-reentrant model
 39935 ;;
 39936                           
 39937                           	psect	text316
 39938  0090BC                     __ptext316:
 39939                           	opt callstack 0
 39940  0090BC                     _ClearAllAlarm:
 39941                           	opt callstack 11
 39942                           
 39943                           ; BSR set to: 1
 39944                           ;alarm.c: 248:     ClearBatteryFailAlarm();
 39945                           
 39946                           ; BSR set to: 57
 39947                           ;incstack = 0
 39948  0090BC  ECB8  F052         	call	i2_ClearBatteryFailAlarm	;wreg free
 39949                           
 39950                           ;alarm.c: 249:     ClearMonitorFailAlarm();
 39951  0090C0  ECA4  F052         	call	i2_ClearMonitorFailAlarm	;wreg free
 39952                           
 39953                           ;alarm.c: 250:     ClearControlFailAlarm();
 39954  0090C4  ECB0  F052         	call	i2_ClearControlFailAlarm	;wreg free
 39955                           
 39956                           ;alarm.c: 251:     ClearGasFailureAlarm();
 39957  0090C8  ECAC  F052         	call	i2_ClearGasFailureAlarm	;wreg free
 39958                           
 39959                           ;alarm.c: 252:     ClearHighPressureAlarmLow();
 39960  0090CC  EC0B  F053         	call	_ClearHighPressureAlarmLow	;wreg free
 39961                           
 39962                           ;alarm.c: 253:     ClearHighPressureAlarmHigh();
 39963  0090D0  ECA8  F052         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 39964                           
 39965                           ;alarm.c: 254:     ClearVeryHighPressureAlarmHigh();
 39966  0090D4  ECA0  F052         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 39967                           
 39968                           ;alarm.c: 255:     ClearCircuitFailureAlarm();
 39969  0090D8  ECB4  F052         	call	i2_ClearCircuitFailureAlarm	;wreg free
 39970                           
 39971                           ;alarm.c: 256:     ClearBaterryLowAlarmMed();
 39972  0090DC  EC02  F053         	call	i2_ClearBaterryLowAlarmMed	;wreg free
 39973                           
 39974                           ;alarm.c: 257:     ClearBaterryLowAlarmHigh();
 39975  0090E0  EC05  F053         	call	i2_ClearBaterryLowAlarmHigh	;wreg free
 39976                           
 39977                           ; BSR set to: 2
 39978                           ;alarm.c: 258:     ClearEPBelowSetAlarm();
 39979  0090E4  EC16  F050         	call	i2_ClearEPBelowSetAlarm	;wreg free
 39980                           
 39981                           ; BSR set to: 0
 39982                           ;alarm.c: 259:     ClearEPAboveSetAlarm();
 39983  0090E8  EC21  F050         	call	i2_ClearEPAboveSetAlarm	;wreg free
 39984                           
 39985                           ; BSR set to: 0
 39986                           ;alarm.c: 260:     ClearIPBelowSetAlarm();
 39987  0090EC  EC00  F050         	call	i2_ClearIPBelowSetAlarm	;wreg free
 39988                           
 39989                           ; BSR set to: 0
 39990                           ;alarm.c: 261:     ClearIPAboveSetAlarm();
 39991  0090F0  EC0B  F050         	call	i2_ClearIPAboveSetAlarm	;wreg free
 39992                           
 39993                           ;alarm.c: 262:     ClearTdiTooLongAlarm();
 39994  0090F4  ECC0  F052         	call	_ClearTdiTooLongAlarm	;wreg free
 39995                           
 39996                           ;alarm.c: 263:     ClearTdeTooLongAlarm();
 39997  0090F8  ECC4  F052         	call	_ClearTdeTooLongAlarm	;wreg free
 39998                           
 39999                           ;alarm.c: 264:     ClearVAboveMaxAlarm();
 40000  0090FC  ECBC  F052         	call	_ClearVAboveMaxAlarm	;wreg free
 40001                           
 40002                           ;alarm.c: 265:     ClearVBelowMinAlarm();
 40003  009100  EC08  F053         	call	_ClearVBelowMinAlarm	;wreg free
 40004                           
 40005                           ;alarm.c: 266:     ClearNoPowerSupplyAlarm();
 40006  009104  ECFF  F052         	call	i2_ClearNoPowerSupplyAlarm	;wreg free
 40007                           
 40008                           ; BSR set to: 2
 40009  009108  0012               	return		;funcret
 40010  00910A                     __end_of_ClearAllAlarm:
 40011                           	opt callstack 0
 40012                           
 40013 ;; *************** function i2_ClearVeryHighPressureAlarmHigh *****************
 40014 ;; Defined at:
 40015 ;;		line 278 in file "alarm.c"
 40016 ;; Parameters:    Size  Location     Type
 40017 ;;		None
 40018 ;; Auto vars:     Size  Location     Type
 40019 ;;		None
 40020 ;; Return value:  Size  Location     Type
 40021 ;;                  1    wreg      void 
 40022 ;; Registers used:
 40023 ;;		wreg, status,2
 40024 ;; Tracked objects:
 40025 ;;		On entry : 0/1
 40026 ;;		On exit  : 3F/2
 40027 ;;		Unchanged: 0/0
 40028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40033 ;;Total ram usage:        0 bytes
 40034 ;; Hardware stack levels used:    1
 40035 ;; This function calls:
 40036 ;;		Nothing
 40037 ;; This function is called by:
 40038 ;;		_ClearAllAlarm
 40039 ;;		i2_MuteAlarm
 40040 ;; This function uses a non-reentrant model
 40041 ;;
 40042                           
 40043                           	psect	text317
 40044  00A540                     __ptext317:
 40045                           	opt callstack 0
 40046  00A540                     i2_ClearVeryHighPressureAlarmHigh:
 40047                           	opt callstack 13
 40048                           
 40049                           ; BSR set to: 2
 40050                           ;incstack = 0
 40051  00A540  0E00               	movlw	0
 40052  00A542  0102               	movlb	2	; () banked
 40053  00A544  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
 40054                           
 40055                           ; BSR set to: 2
 40056  00A546  0012               	return		;funcret
 40057  00A548                     __end_ofi2_ClearVeryHighPressureAlarmHigh:
 40058                           	opt callstack 0
 40059                           
 40060 ;; *************** function i2_ClearNoPowerSupplyAlarm *****************
 40061 ;; Defined at:
 40062 ;;		line 290 in file "alarm.c"
 40063 ;; Parameters:    Size  Location     Type
 40064 ;;		None
 40065 ;; Auto vars:     Size  Location     Type
 40066 ;;		None
 40067 ;; Return value:  Size  Location     Type
 40068 ;;                  1    wreg      void 
 40069 ;; Registers used:
 40070 ;;		wreg, status,2
 40071 ;; Tracked objects:
 40072 ;;		On entry : 3F/2
 40073 ;;		On exit  : 3F/2
 40074 ;;		Unchanged: 0/0
 40075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40080 ;;Total ram usage:        0 bytes
 40081 ;; Hardware stack levels used:    1
 40082 ;; This function calls:
 40083 ;;		Nothing
 40084 ;; This function is called by:
 40085 ;;		_ClearAllAlarm
 40086 ;; This function uses a non-reentrant model
 40087 ;;
 40088                           
 40089                           	psect	text318
 40090  00A5FE                     __ptext318:
 40091                           	opt callstack 0
 40092  00A5FE                     i2_ClearNoPowerSupplyAlarm:
 40093                           	opt callstack 11
 40094                           
 40095                           ; BSR set to: 2
 40096                           
 40097                           ; BSR set to: 2
 40098                           ;incstack = 0
 40099  00A5FE  0E00               	movlw	0
 40100  00A600  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 40101                           
 40102                           ; BSR set to: 2
 40103  00A602  0012               	return		;funcret
 40104  00A604                     __end_ofi2_ClearNoPowerSupplyAlarm:
 40105                           	opt callstack 0
 40106                           
 40107 ;; *************** function i2_ClearMonitorFailAlarm *****************
 40108 ;; Defined at:
 40109 ;;		line 270 in file "alarm.c"
 40110 ;; Parameters:    Size  Location     Type
 40111 ;;		None
 40112 ;; Auto vars:     Size  Location     Type
 40113 ;;		None
 40114 ;; Return value:  Size  Location     Type
 40115 ;;                  1    wreg      void 
 40116 ;; Registers used:
 40117 ;;		wreg, status,2
 40118 ;; Tracked objects:
 40119 ;;		On entry : 0/0
 40120 ;;		On exit  : 3F/2
 40121 ;;		Unchanged: 0/0
 40122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40127 ;;Total ram usage:        0 bytes
 40128 ;; Hardware stack levels used:    1
 40129 ;; This function calls:
 40130 ;;		Nothing
 40131 ;; This function is called by:
 40132 ;;		_ClearAllAlarm
 40133 ;;		i2_BuzzerTask
 40134 ;;		i2_MuteAlarm
 40135 ;; This function uses a non-reentrant model
 40136 ;;
 40137                           
 40138                           	psect	text319
 40139  00A548                     __ptext319:
 40140                           	opt callstack 0
 40141  00A548                     i2_ClearMonitorFailAlarm:
 40142                           	opt callstack 13
 40143                           
 40144                           ;alarm.c: 272:     monitorFailAlarm = 0;
 40145                           
 40146                           ; BSR set to: 2
 40147                           ;incstack = 0
 40148  00A548  0E00               	movlw	0
 40149  00A54A  0102               	movlb	2	; () banked
 40150  00A54C  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 40151                           
 40152                           ; BSR set to: 2
 40153  00A54E  0012               	return		;funcret
 40154  00A550                     __end_ofi2_ClearMonitorFailAlarm:
 40155                           	opt callstack 0
 40156                           
 40157 ;; *************** function i2_ClearIPBelowSetAlarm *****************
 40158 ;; Defined at:
 40159 ;;		line 284 in file "alarm.c"
 40160 ;; Parameters:    Size  Location     Type
 40161 ;;		None
 40162 ;; Auto vars:     Size  Location     Type
 40163 ;;		None
 40164 ;; Return value:  Size  Location     Type
 40165 ;;                  1    wreg      void 
 40166 ;; Registers used:
 40167 ;;		wreg, status,2, status,0
 40168 ;; Tracked objects:
 40169 ;;		On entry : 3E/0
 40170 ;;		On exit  : 3F/0
 40171 ;;		Unchanged: 0/0
 40172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40177 ;;Total ram usage:        0 bytes
 40178 ;; Hardware stack levels used:    1
 40179 ;; This function calls:
 40180 ;;		Nothing
 40181 ;; This function is called by:
 40182 ;;		_ClearAllAlarm
 40183 ;;		_MonitorPressureTask
 40184 ;;		i2_ClearVars
 40185 ;; This function uses a non-reentrant model
 40186 ;;
 40187                           
 40188                           	psect	text320
 40189  00A000                     __ptext320:
 40190                           	opt callstack 0
 40191  00A000                     i2_ClearIPBelowSetAlarm:
 40192                           	opt callstack 13
 40193                           
 40194                           ; BSR set to: 2
 40195                           ;incstack = 0
 40196  00A000  0100               	movlb	0	; () banked
 40197  00A002  07E4               	decf	_ipBelowSetAlarm& (0+255),f,b
 40198  00A004  A0D8               	btfss	status,0,c
 40199  00A006  07E5               	decf	(_ipBelowSetAlarm+1)& (0+255),f,b
 40200                           
 40201                           ; BSR set to: 0
 40202  00A008  AFE5               	btfss	(_ipBelowSetAlarm+1)& (0+255),7,b
 40203  00A00A  0012               	return	
 40204                           
 40205                           ; BSR set to: 0
 40206  00A00C  0E00               	movlw	0
 40207  00A00E  6FE5               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 40208  00A010  0E00               	movlw	0
 40209  00A012  6FE4               	movwf	_ipBelowSetAlarm& (0+255),b
 40210                           
 40211                           ; BSR set to: 0
 40212  00A014  0012               	return		;funcret
 40213  00A016                     __end_ofi2_ClearIPBelowSetAlarm:
 40214                           	opt callstack 0
 40215                           
 40216 ;; *************** function i2_ClearIPAboveSetAlarm *****************
 40217 ;; Defined at:
 40218 ;;		line 285 in file "alarm.c"
 40219 ;; Parameters:    Size  Location     Type
 40220 ;;		None
 40221 ;; Auto vars:     Size  Location     Type
 40222 ;;		None
 40223 ;; Return value:  Size  Location     Type
 40224 ;;                  1    wreg      void 
 40225 ;; Registers used:
 40226 ;;		wreg, status,2, status,0
 40227 ;; Tracked objects:
 40228 ;;		On entry : 3C/0
 40229 ;;		On exit  : 3F/0
 40230 ;;		Unchanged: 0/0
 40231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40236 ;;Total ram usage:        0 bytes
 40237 ;; Hardware stack levels used:    1
 40238 ;; This function calls:
 40239 ;;		Nothing
 40240 ;; This function is called by:
 40241 ;;		_ClearAllAlarm
 40242 ;;		_MonitorPressureTask
 40243 ;;		i2_ClearVars
 40244 ;; This function uses a non-reentrant model
 40245 ;;
 40246                           
 40247                           	psect	text321
 40248  00A016                     __ptext321:
 40249                           	opt callstack 0
 40250  00A016                     i2_ClearIPAboveSetAlarm:
 40251                           	opt callstack 13
 40252                           
 40253                           ; BSR set to: 0
 40254                           ;incstack = 0
 40255  00A016  0100               	movlb	0	; () banked
 40256  00A018  07E2               	decf	_ipAboveSetAlarm& (0+255),f,b
 40257  00A01A  A0D8               	btfss	status,0,c
 40258  00A01C  07E3               	decf	(_ipAboveSetAlarm+1)& (0+255),f,b
 40259                           
 40260                           ; BSR set to: 0
 40261  00A01E  AFE3               	btfss	(_ipAboveSetAlarm+1)& (0+255),7,b
 40262  00A020  0012               	return	
 40263                           
 40264                           ; BSR set to: 0
 40265  00A022  0E00               	movlw	0
 40266  00A024  6FE3               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 40267  00A026  0E00               	movlw	0
 40268  00A028  6FE2               	movwf	_ipAboveSetAlarm& (0+255),b
 40269                           
 40270                           ; BSR set to: 0
 40271  00A02A  0012               	return		;funcret
 40272  00A02C                     __end_ofi2_ClearIPAboveSetAlarm:
 40273                           	opt callstack 0
 40274                           
 40275 ;; *************** function i2_ClearHighPressureAlarmHigh *****************
 40276 ;; Defined at:
 40277 ;;		line 277 in file "alarm.c"
 40278 ;; Parameters:    Size  Location     Type
 40279 ;;		None
 40280 ;; Auto vars:     Size  Location     Type
 40281 ;;		None
 40282 ;; Return value:  Size  Location     Type
 40283 ;;                  1    wreg      void 
 40284 ;; Registers used:
 40285 ;;		wreg, status,2
 40286 ;; Tracked objects:
 40287 ;;		On entry : 0/1
 40288 ;;		On exit  : 3F/2
 40289 ;;		Unchanged: 0/0
 40290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40295 ;;Total ram usage:        0 bytes
 40296 ;; Hardware stack levels used:    1
 40297 ;; This function calls:
 40298 ;;		Nothing
 40299 ;; This function is called by:
 40300 ;;		_ClearAllAlarm
 40301 ;;		i2_MuteAlarm
 40302 ;; This function uses a non-reentrant model
 40303 ;;
 40304                           
 40305                           	psect	text322
 40306  00A550                     __ptext322:
 40307                           	opt callstack 0
 40308  00A550                     i2_ClearHighPressureAlarmHigh:
 40309                           	opt callstack 13
 40310                           
 40311                           ; BSR set to: 0
 40312                           ;incstack = 0
 40313  00A550  0E00               	movlw	0
 40314  00A552  0102               	movlb	2	; () banked
 40315  00A554  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
 40316                           
 40317                           ; BSR set to: 2
 40318  00A556  0012               	return		;funcret
 40319  00A558                     __end_ofi2_ClearHighPressureAlarmHigh:
 40320                           	opt callstack 0
 40321                           
 40322 ;; *************** function i2_ClearGasFailureAlarm *****************
 40323 ;; Defined at:
 40324 ;;		line 275 in file "alarm.c"
 40325 ;; Parameters:    Size  Location     Type
 40326 ;;		None
 40327 ;; Auto vars:     Size  Location     Type
 40328 ;;		None
 40329 ;; Return value:  Size  Location     Type
 40330 ;;                  1    wreg      void 
 40331 ;; Registers used:
 40332 ;;		wreg, status,2
 40333 ;; Tracked objects:
 40334 ;;		On entry : 0/1
 40335 ;;		On exit  : 3F/2
 40336 ;;		Unchanged: 0/0
 40337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40342 ;;Total ram usage:        0 bytes
 40343 ;; Hardware stack levels used:    1
 40344 ;; This function calls:
 40345 ;;		Nothing
 40346 ;; This function is called by:
 40347 ;;		_ClearAllAlarm
 40348 ;;		_MonitorPressureTask
 40349 ;;		i2_MuteAlarm
 40350 ;; This function uses a non-reentrant model
 40351 ;;
 40352                           
 40353                           	psect	text323
 40354  00A558                     __ptext323:
 40355                           	opt callstack 0
 40356  00A558                     i2_ClearGasFailureAlarm:
 40357                           	opt callstack 13
 40358                           
 40359                           ; BSR set to: 2
 40360                           ;incstack = 0
 40361  00A558  0E00               	movlw	0
 40362  00A55A  0102               	movlb	2	; () banked
 40363  00A55C  6FAF               	movwf	_gasFailureAlarm& (0+255),b
 40364                           
 40365                           ; BSR set to: 2
 40366  00A55E  0012               	return		;funcret
 40367  00A560                     __end_ofi2_ClearGasFailureAlarm:
 40368                           	opt callstack 0
 40369                           
 40370 ;; *************** function i2_ClearEPBelowSetAlarm *****************
 40371 ;; Defined at:
 40372 ;;		line 282 in file "alarm.c"
 40373 ;; Parameters:    Size  Location     Type
 40374 ;;		None
 40375 ;; Auto vars:     Size  Location     Type
 40376 ;;		None
 40377 ;; Return value:  Size  Location     Type
 40378 ;;                  1    wreg      void 
 40379 ;; Registers used:
 40380 ;;		wreg, status,2, status,0
 40381 ;; Tracked objects:
 40382 ;;		On entry : 3D/2
 40383 ;;		On exit  : 3F/0
 40384 ;;		Unchanged: 0/0
 40385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40390 ;;Total ram usage:        0 bytes
 40391 ;; Hardware stack levels used:    1
 40392 ;; This function calls:
 40393 ;;		Nothing
 40394 ;; This function is called by:
 40395 ;;		_ClearAllAlarm
 40396 ;;		_MonitorPressureTask
 40397 ;;		i2_ClearVars
 40398 ;; This function uses a non-reentrant model
 40399 ;;
 40400                           
 40401                           	psect	text324
 40402  00A02C                     __ptext324:
 40403                           	opt callstack 0
 40404  00A02C                     i2_ClearEPBelowSetAlarm:
 40405                           	opt callstack 13
 40406                           
 40407                           ; BSR set to: 2
 40408                           ;incstack = 0
 40409  00A02C  0100               	movlb	0	; () banked
 40410  00A02E  07E8               	decf	_epBelowSetAlarm& (0+255),f,b
 40411  00A030  A0D8               	btfss	status,0,c
 40412  00A032  07E9               	decf	(_epBelowSetAlarm+1)& (0+255),f,b
 40413                           
 40414                           ; BSR set to: 0
 40415  00A034  AFE9               	btfss	(_epBelowSetAlarm+1)& (0+255),7,b
 40416  00A036  0012               	return	
 40417                           
 40418                           ; BSR set to: 0
 40419  00A038  0E00               	movlw	0
 40420  00A03A  6FE9               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 40421  00A03C  0E00               	movlw	0
 40422  00A03E  6FE8               	movwf	_epBelowSetAlarm& (0+255),b
 40423                           
 40424                           ; BSR set to: 0
 40425  00A040  0012               	return		;funcret
 40426  00A042                     __end_ofi2_ClearEPBelowSetAlarm:
 40427                           	opt callstack 0
 40428                           
 40429 ;; *************** function i2_ClearEPAboveSetAlarm *****************
 40430 ;; Defined at:
 40431 ;;		line 283 in file "alarm.c"
 40432 ;; Parameters:    Size  Location     Type
 40433 ;;		None
 40434 ;; Auto vars:     Size  Location     Type
 40435 ;;		None
 40436 ;; Return value:  Size  Location     Type
 40437 ;;                  1    wreg      void 
 40438 ;; Registers used:
 40439 ;;		wreg, status,2, status,0
 40440 ;; Tracked objects:
 40441 ;;		On entry : 3D/0
 40442 ;;		On exit  : 3F/0
 40443 ;;		Unchanged: 0/0
 40444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40449 ;;Total ram usage:        0 bytes
 40450 ;; Hardware stack levels used:    1
 40451 ;; This function calls:
 40452 ;;		Nothing
 40453 ;; This function is called by:
 40454 ;;		_ClearAllAlarm
 40455 ;;		_MonitorPressureTask
 40456 ;;		i2_ClearVars
 40457 ;; This function uses a non-reentrant model
 40458 ;;
 40459                           
 40460                           	psect	text325
 40461  00A042                     __ptext325:
 40462                           	opt callstack 0
 40463  00A042                     i2_ClearEPAboveSetAlarm:
 40464                           	opt callstack 13
 40465                           
 40466                           ; BSR set to: 0
 40467                           ;incstack = 0
 40468  00A042  0100               	movlb	0	; () banked
 40469  00A044  07E6               	decf	_epAboveSetAlarm& (0+255),f,b
 40470  00A046  A0D8               	btfss	status,0,c
 40471  00A048  07E7               	decf	(_epAboveSetAlarm+1)& (0+255),f,b
 40472                           
 40473                           ; BSR set to: 0
 40474  00A04A  AFE7               	btfss	(_epAboveSetAlarm+1)& (0+255),7,b
 40475  00A04C  0012               	return	
 40476                           
 40477                           ; BSR set to: 0
 40478  00A04E  0E00               	movlw	0
 40479  00A050  6FE7               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 40480  00A052  0E00               	movlw	0
 40481  00A054  6FE6               	movwf	_epAboveSetAlarm& (0+255),b
 40482                           
 40483                           ; BSR set to: 0
 40484  00A056  0012               	return		;funcret
 40485  00A058                     __end_ofi2_ClearEPAboveSetAlarm:
 40486                           	opt callstack 0
 40487                           
 40488 ;; *************** function i2_ClearControlFailAlarm *****************
 40489 ;; Defined at:
 40490 ;;		line 274 in file "alarm.c"
 40491 ;; Parameters:    Size  Location     Type
 40492 ;;		None
 40493 ;; Auto vars:     Size  Location     Type
 40494 ;;		None
 40495 ;; Return value:  Size  Location     Type
 40496 ;;                  1    wreg      void 
 40497 ;; Registers used:
 40498 ;;		wreg, status,2
 40499 ;; Tracked objects:
 40500 ;;		On entry : 0/0
 40501 ;;		On exit  : 3F/0
 40502 ;;		Unchanged: 0/0
 40503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40508 ;;Total ram usage:        0 bytes
 40509 ;; Hardware stack levels used:    1
 40510 ;; This function calls:
 40511 ;;		Nothing
 40512 ;; This function is called by:
 40513 ;;		_ClearAllAlarm
 40514 ;;		_UpdateState
 40515 ;;		_ControllerTimerHandler
 40516 ;;		i2_MuteAlarm
 40517 ;; This function uses a non-reentrant model
 40518 ;;
 40519                           
 40520                           	psect	text326
 40521  00A560                     __ptext326:
 40522                           	opt callstack 0
 40523  00A560                     i2_ClearControlFailAlarm:
 40524                           	opt callstack 14
 40525                           
 40526                           ; BSR set to: 0
 40527                           ;incstack = 0
 40528  00A560  0E00               	movlw	0
 40529  00A562  0100               	movlb	0	; () banked
 40530  00A564  6FF6               	movwf	_controlFailAlarm& (0+255),b
 40531                           
 40532                           ; BSR set to: 0
 40533  00A566  0012               	return		;funcret
 40534  00A568                     __end_ofi2_ClearControlFailAlarm:
 40535                           	opt callstack 0
 40536                           
 40537 ;; *************** function i2_ClearCircuitFailureAlarm *****************
 40538 ;; Defined at:
 40539 ;;		line 279 in file "alarm.c"
 40540 ;; Parameters:    Size  Location     Type
 40541 ;;		None
 40542 ;; Auto vars:     Size  Location     Type
 40543 ;;		None
 40544 ;; Return value:  Size  Location     Type
 40545 ;;                  1    wreg      void 
 40546 ;; Registers used:
 40547 ;;		wreg, status,2
 40548 ;; Tracked objects:
 40549 ;;		On entry : 0/1
 40550 ;;		On exit  : 3F/2
 40551 ;;		Unchanged: 0/0
 40552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40557 ;;Total ram usage:        0 bytes
 40558 ;; Hardware stack levels used:    1
 40559 ;; This function calls:
 40560 ;;		Nothing
 40561 ;; This function is called by:
 40562 ;;		_ClearAllAlarm
 40563 ;;		_MonitorPressureTask
 40564 ;;		i2_MuteAlarm
 40565 ;;		i2_ClearVars
 40566 ;; This function uses a non-reentrant model
 40567 ;;
 40568                           
 40569                           	psect	text327
 40570  00A568                     __ptext327:
 40571                           	opt callstack 0
 40572  00A568                     i2_ClearCircuitFailureAlarm:
 40573                           	opt callstack 13
 40574                           
 40575                           ; BSR set to: 0
 40576                           ;incstack = 0
 40577  00A568  0E00               	movlw	0
 40578  00A56A  0102               	movlb	2	; () banked
 40579  00A56C  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 40580                           
 40581                           ; BSR set to: 2
 40582  00A56E  0012               	return		;funcret
 40583  00A570                     __end_ofi2_ClearCircuitFailureAlarm:
 40584                           	opt callstack 0
 40585                           
 40586 ;; *************** function i2_ClearBatteryFailAlarm *****************
 40587 ;; Defined at:
 40588 ;;		line 269 in file "alarm.c"
 40589 ;; Parameters:    Size  Location     Type
 40590 ;;		None
 40591 ;; Auto vars:     Size  Location     Type
 40592 ;;		None
 40593 ;; Return value:  Size  Location     Type
 40594 ;;                  1    wreg      void 
 40595 ;; Registers used:
 40596 ;;		wreg, status,2
 40597 ;; Tracked objects:
 40598 ;;		On entry : 3F/1
 40599 ;;		On exit  : 3F/0
 40600 ;;		Unchanged: 0/0
 40601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40606 ;;Total ram usage:        0 bytes
 40607 ;; Hardware stack levels used:    1
 40608 ;; This function calls:
 40609 ;;		Nothing
 40610 ;; This function is called by:
 40611 ;;		_ClearAllAlarm
 40612 ;; This function uses a non-reentrant model
 40613 ;;
 40614                           
 40615                           	psect	text328
 40616  00A570                     __ptext328:
 40617                           	opt callstack 0
 40618  00A570                     i2_ClearBatteryFailAlarm:
 40619                           	opt callstack 11
 40620                           
 40621                           ; BSR set to: 1
 40622                           
 40623                           ; BSR set to: 2
 40624                           ;incstack = 0
 40625  00A570  0E00               	movlw	0
 40626  00A572  0100               	movlb	0	; () banked
 40627  00A574  6FF7               	movwf	_batteryFailAlarm& (0+255),b
 40628                           
 40629                           ; BSR set to: 0
 40630  00A576  0012               	return		;funcret
 40631  00A578                     __end_ofi2_ClearBatteryFailAlarm:
 40632                           	opt callstack 0
 40633                           
 40634 ;; *************** function i2_ClearBaterryLowAlarmMed *****************
 40635 ;; Defined at:
 40636 ;;		line 280 in file "alarm.c"
 40637 ;; Parameters:    Size  Location     Type
 40638 ;;		None
 40639 ;; Auto vars:     Size  Location     Type
 40640 ;;		None
 40641 ;; Return value:  Size  Location     Type
 40642 ;;                  1    wreg      void 
 40643 ;; Registers used:
 40644 ;;		wreg, status,2
 40645 ;; Tracked objects:
 40646 ;;		On entry : 3F/2
 40647 ;;		On exit  : 3F/2
 40648 ;;		Unchanged: 0/0
 40649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40654 ;;Total ram usage:        0 bytes
 40655 ;; Hardware stack levels used:    1
 40656 ;; This function calls:
 40657 ;;		Nothing
 40658 ;; This function is called by:
 40659 ;;		_ClearAllAlarm
 40660 ;; This function uses a non-reentrant model
 40661 ;;
 40662                           
 40663                           	psect	text329
 40664  00A604                     __ptext329:
 40665                           	opt callstack 0
 40666  00A604                     i2_ClearBaterryLowAlarmMed:
 40667                           	opt callstack 11
 40668                           
 40669                           ; BSR set to: 2
 40670                           
 40671                           ; BSR set to: 0
 40672                           ;incstack = 0
 40673  00A604  0E00               	movlw	0
 40674  00A606  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 40675                           
 40676                           ; BSR set to: 2
 40677  00A608  0012               	return		;funcret
 40678  00A60A                     __end_ofi2_ClearBaterryLowAlarmMed:
 40679                           	opt callstack 0
 40680                           
 40681 ;; *************** function i2_ClearBaterryLowAlarmHigh *****************
 40682 ;; Defined at:
 40683 ;;		line 281 in file "alarm.c"
 40684 ;; Parameters:    Size  Location     Type
 40685 ;;		None
 40686 ;; Auto vars:     Size  Location     Type
 40687 ;;		None
 40688 ;; Return value:  Size  Location     Type
 40689 ;;                  1    wreg      void 
 40690 ;; Registers used:
 40691 ;;		wreg, status,2
 40692 ;; Tracked objects:
 40693 ;;		On entry : 3F/2
 40694 ;;		On exit  : 3F/2
 40695 ;;		Unchanged: 0/0
 40696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40701 ;;Total ram usage:        0 bytes
 40702 ;; Hardware stack levels used:    1
 40703 ;; This function calls:
 40704 ;;		Nothing
 40705 ;; This function is called by:
 40706 ;;		_ClearAllAlarm
 40707 ;; This function uses a non-reentrant model
 40708 ;;
 40709                           
 40710                           	psect	text330
 40711  00A60A                     __ptext330:
 40712                           	opt callstack 0
 40713  00A60A                     i2_ClearBaterryLowAlarmHigh:
 40714                           	opt callstack 11
 40715                           
 40716                           ; BSR set to: 2
 40717                           
 40718                           ; BSR set to: 2
 40719                           ;incstack = 0
 40720  00A60A  0E00               	movlw	0
 40721  00A60C  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 40722                           
 40723                           ; BSR set to: 2
 40724  00A60E  0012               	return		;funcret
 40725  00A610                     __end_ofi2_ClearBaterryLowAlarmHigh:
 40726                           	opt callstack 0
 40727                           
 40728 ;; *************** function _ClearVBelowMinAlarm *****************
 40729 ;; Defined at:
 40730 ;;		line 289 in file "alarm.c"
 40731 ;; Parameters:    Size  Location     Type
 40732 ;;		None
 40733 ;; Auto vars:     Size  Location     Type
 40734 ;;		None
 40735 ;; Return value:  Size  Location     Type
 40736 ;;                  1    wreg      void 
 40737 ;; Registers used:
 40738 ;;		wreg, status,2
 40739 ;; Tracked objects:
 40740 ;;		On entry : 3F/2
 40741 ;;		On exit  : 3F/2
 40742 ;;		Unchanged: 0/0
 40743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40748 ;;Total ram usage:        0 bytes
 40749 ;; Hardware stack levels used:    1
 40750 ;; This function calls:
 40751 ;;		Nothing
 40752 ;; This function is called by:
 40753 ;;		_ClearAllAlarm
 40754 ;;		_MonitorPressureTask
 40755 ;; This function uses a non-reentrant model
 40756 ;;
 40757                           
 40758                           	psect	text331
 40759  00A610                     __ptext331:
 40760                           	opt callstack 0
 40761  00A610                     _ClearVBelowMinAlarm:
 40762                           	opt callstack 14
 40763                           
 40764                           ; BSR set to: 2
 40765                           
 40766                           ; BSR set to: 2
 40767                           ;incstack = 0
 40768  00A610  0E00               	movlw	0
 40769  00A612  6FA6               	movwf	_vBelowMinAlarm& (0+255),b
 40770                           
 40771                           ; BSR set to: 2
 40772  00A614  0012               	return		;funcret
 40773  00A616                     __end_of_ClearVBelowMinAlarm:
 40774                           	opt callstack 0
 40775                           
 40776 ;; *************** function _ClearVAboveMaxAlarm *****************
 40777 ;; Defined at:
 40778 ;;		line 288 in file "alarm.c"
 40779 ;; Parameters:    Size  Location     Type
 40780 ;;		None
 40781 ;; Auto vars:     Size  Location     Type
 40782 ;;		None
 40783 ;; Return value:  Size  Location     Type
 40784 ;;                  1    wreg      void 
 40785 ;; Registers used:
 40786 ;;		wreg, status,2
 40787 ;; Tracked objects:
 40788 ;;		On entry : 3C/2
 40789 ;;		On exit  : 3F/2
 40790 ;;		Unchanged: 0/0
 40791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40796 ;;Total ram usage:        0 bytes
 40797 ;; Hardware stack levels used:    1
 40798 ;; This function calls:
 40799 ;;		Nothing
 40800 ;; This function is called by:
 40801 ;;		_ClearAllAlarm
 40802 ;;		_MonitorPressureTask
 40803 ;; This function uses a non-reentrant model
 40804 ;;
 40805                           
 40806                           	psect	text332
 40807  00A578                     __ptext332:
 40808                           	opt callstack 0
 40809  00A578                     _ClearVAboveMaxAlarm:
 40810                           	opt callstack 14
 40811                           
 40812                           ; BSR set to: 2
 40813                           ;incstack = 0
 40814  00A578  0E00               	movlw	0
 40815  00A57A  0102               	movlb	2	; () banked
 40816  00A57C  6FA5               	movwf	_vAboveMaxAlarm& (0+255),b
 40817                           
 40818                           ; BSR set to: 2
 40819  00A57E  0012               	return		;funcret
 40820  00A580                     __end_of_ClearVAboveMaxAlarm:
 40821                           	opt callstack 0
 40822                           
 40823 ;; *************** function _ClearTdiTooLongAlarm *****************
 40824 ;; Defined at:
 40825 ;;		line 286 in file "alarm.c"
 40826 ;; Parameters:    Size  Location     Type
 40827 ;;		None
 40828 ;; Auto vars:     Size  Location     Type
 40829 ;;		None
 40830 ;; Return value:  Size  Location     Type
 40831 ;;                  1    wreg      void 
 40832 ;; Registers used:
 40833 ;;		wreg, status,2
 40834 ;; Tracked objects:
 40835 ;;		On entry : 3C/2
 40836 ;;		On exit  : 3F/2
 40837 ;;		Unchanged: 0/0
 40838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40843 ;;Total ram usage:        0 bytes
 40844 ;; Hardware stack levels used:    1
 40845 ;; This function calls:
 40846 ;;		Nothing
 40847 ;; This function is called by:
 40848 ;;		_ClearAllAlarm
 40849 ;;		_MonitorPressureTask
 40850 ;; This function uses a non-reentrant model
 40851 ;;
 40852                           
 40853                           	psect	text333
 40854  00A580                     __ptext333:
 40855                           	opt callstack 0
 40856  00A580                     _ClearTdiTooLongAlarm:
 40857                           	opt callstack 14
 40858                           
 40859                           ; BSR set to: 2
 40860                           ;incstack = 0
 40861  00A580  0E00               	movlw	0
 40862  00A582  0102               	movlb	2	; () banked
 40863  00A584  6FA8               	movwf	_tdiTooLongAlarm& (0+255),b
 40864                           
 40865                           ; BSR set to: 2
 40866  00A586  0012               	return		;funcret
 40867  00A588                     __end_of_ClearTdiTooLongAlarm:
 40868                           	opt callstack 0
 40869                           
 40870 ;; *************** function _ClearTdeTooLongAlarm *****************
 40871 ;; Defined at:
 40872 ;;		line 287 in file "alarm.c"
 40873 ;; Parameters:    Size  Location     Type
 40874 ;;		None
 40875 ;; Auto vars:     Size  Location     Type
 40876 ;;		None
 40877 ;; Return value:  Size  Location     Type
 40878 ;;                  1    wreg      void 
 40879 ;; Registers used:
 40880 ;;		wreg, status,2
 40881 ;; Tracked objects:
 40882 ;;		On entry : 3C/2
 40883 ;;		On exit  : 3F/2
 40884 ;;		Unchanged: 0/0
 40885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40890 ;;Total ram usage:        0 bytes
 40891 ;; Hardware stack levels used:    1
 40892 ;; This function calls:
 40893 ;;		Nothing
 40894 ;; This function is called by:
 40895 ;;		_ClearAllAlarm
 40896 ;;		_MonitorPressureTask
 40897 ;; This function uses a non-reentrant model
 40898 ;;
 40899                           
 40900                           	psect	text334
 40901  00A588                     __ptext334:
 40902                           	opt callstack 0
 40903  00A588                     _ClearTdeTooLongAlarm:
 40904                           	opt callstack 14
 40905                           
 40906                           ; BSR set to: 2
 40907                           ;incstack = 0
 40908  00A588  0E00               	movlw	0
 40909  00A58A  0102               	movlb	2	; () banked
 40910  00A58C  6FA7               	movwf	_tdeTooLongAlarm& (0+255),b
 40911                           
 40912                           ; BSR set to: 2
 40913  00A58E  0012               	return		;funcret
 40914  00A590                     __end_of_ClearTdeTooLongAlarm:
 40915                           	opt callstack 0
 40916                           
 40917 ;; *************** function _ClearHighPressureAlarmLow *****************
 40918 ;; Defined at:
 40919 ;;		line 276 in file "alarm.c"
 40920 ;; Parameters:    Size  Location     Type
 40921 ;;		None
 40922 ;; Auto vars:     Size  Location     Type
 40923 ;;		None
 40924 ;; Return value:  Size  Location     Type
 40925 ;;                  1    wreg      void 
 40926 ;; Registers used:
 40927 ;;		wreg, status,2
 40928 ;; Tracked objects:
 40929 ;;		On entry : 3F/2
 40930 ;;		On exit  : 3F/2
 40931 ;;		Unchanged: 0/0
 40932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40937 ;;Total ram usage:        0 bytes
 40938 ;; Hardware stack levels used:    1
 40939 ;; This function calls:
 40940 ;;		Nothing
 40941 ;; This function is called by:
 40942 ;;		_ClearAllAlarm
 40943 ;; This function uses a non-reentrant model
 40944 ;;
 40945                           
 40946                           	psect	text335
 40947  00A616                     __ptext335:
 40948                           	opt callstack 0
 40949  00A616                     _ClearHighPressureAlarmLow:
 40950                           	opt callstack 11
 40951                           
 40952                           ; BSR set to: 2
 40953                           
 40954                           ; BSR set to: 2
 40955                           ;incstack = 0
 40956  00A616  0E00               	movlw	0
 40957  00A618  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 40958                           
 40959                           ; BSR set to: 2
 40960  00A61A  0012               	return		;funcret
 40961  00A61C                     __end_of_ClearHighPressureAlarmLow:
 40962                           	opt callstack 0
 40963                           
 40964 ;; *************** function _I2C2_SlaveSetCounter *****************
 40965 ;; Defined at:
 40966 ;;		line 418 in file "mcc_generated_files/i2c2_slave.c"
 40967 ;; Parameters:    Size  Location     Type
 40968 ;;  counter         1    wreg     unsigned char 
 40969 ;; Auto vars:     Size  Location     Type
 40970 ;;  counter         1    0[COMRAM] unsigned char 
 40971 ;; Return value:  Size  Location     Type
 40972 ;;                  1    wreg      void 
 40973 ;; Registers used:
 40974 ;;		wreg
 40975 ;; Tracked objects:
 40976 ;;		On entry : 3F/3D
 40977 ;;		On exit  : 0/0
 40978 ;;		Unchanged: 0/0
 40979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40984 ;;Total ram usage:        1 bytes
 40985 ;; Hardware stack levels used:    1
 40986 ;; This function calls:
 40987 ;;		Nothing
 40988 ;; This function is called by:
 40989 ;;		_I2C2_Isr
 40990 ;; This function uses a non-reentrant model
 40991 ;;
 40992                           
 40993                           	psect	text336
 40994  00A452                     __ptext336:
 40995                           	opt callstack 0
 40996  00A452                     _I2C2_SlaveSetCounter:
 40997                           	opt callstack 15
 40998                           
 40999                           ; BSR set to: 2
 41000                           ;incstack = 0
 41001                           ;I2C2_SlaveSetCounter@counter stored from wreg
 41002  00A452  6E01               	movwf	I2C2_SlaveSetCounter@counter^0,c
 41003                           
 41004                           ;mcc_generated_files/i2c2_slave.c: 418: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tCounter(uint8_t counter);mcc_generated_files/i2c2_slave.c: 419: {;mcc_generated_files/i
      +                          2c2_slave.c: 420:     I2C2CNT = counter;
 41005  00A454  0060  F007  FD56   	movff	I2C2_SlaveSetCounter@counter,15702	;volatile
 41006  00A45A  0012               	return		;funcret
 41007  00A45C                     __end_of_I2C2_SlaveSetCounter:
 41008                           	opt callstack 0
 41009                           
 41010 ;; *************** function _I2C2_SlaveReleaseClock *****************
 41011 ;; Defined at:
 41012 ;;		line 423 in file "mcc_generated_files/i2c2_slave.c"
 41013 ;; Parameters:    Size  Location     Type
 41014 ;;		None
 41015 ;; Auto vars:     Size  Location     Type
 41016 ;;		None
 41017 ;; Return value:  Size  Location     Type
 41018 ;;                  1    wreg      void 
 41019 ;; Registers used:
 41020 ;;		None
 41021 ;; Tracked objects:
 41022 ;;		On entry : 0/2
 41023 ;;		On exit  : 3F/3D
 41024 ;;		Unchanged: 0/0
 41025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41030 ;;Total ram usage:        0 bytes
 41031 ;; Hardware stack levels used:    1
 41032 ;; This function calls:
 41033 ;;		Nothing
 41034 ;; This function is called by:
 41035 ;;		_I2C2_Isr
 41036 ;; This function uses a non-reentrant model
 41037 ;;
 41038                           
 41039                           	psect	text337
 41040  00A61C                     __ptext337:
 41041                           	opt callstack 0
 41042  00A61C                     _I2C2_SlaveReleaseClock:
 41043                           	opt callstack 15
 41044                           
 41045                           ;mcc_generated_files/i2c2_slave.c: 425:     I2C2CON0bits.CSTR = 0;
 41046                           
 41047                           ;incstack = 0
 41048  00A61C  013D               	movlb	61	; () banked
 41049  00A61E  995D               	bcf	93,4,b	;volatile
 41050                           
 41051                           ; BSR set to: 61
 41052  00A620  0012               	return		;funcret
 41053  00A622                     __end_of_I2C2_SlaveReleaseClock:
 41054                           	opt callstack 0
 41055                           
 41056 ;; *************** function _I2C2_SlaveRdCallBack *****************
 41057 ;; Defined at:
 41058 ;;		line 239 in file "mcc_generated_files/i2c2_slave.c"
 41059 ;; Parameters:    Size  Location     Type
 41060 ;;		None
 41061 ;; Auto vars:     Size  Location     Type
 41062 ;;		None
 41063 ;; Return value:  Size  Location     Type
 41064 ;;                  1    wreg      void 
 41065 ;; Registers used:
 41066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 41067 ;; Tracked objects:
 41068 ;;		On entry : 3F/3D
 41069 ;;		On exit  : 0/0
 41070 ;;		Unchanged: 0/0
 41071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41076 ;;Total ram usage:        0 bytes
 41077 ;; Hardware stack levels used:    1
 41078 ;; Hardware stack levels required when called:    3
 41079 ;; This function calls:
 41080 ;;		Absolute function
 41081 ;;		_I2C2_SlaveDefRdInterruptHandler
 41082 ;;		_ReceiveHandler
 41083 ;; This function is called by:
 41084 ;;		_I2C2_Isr
 41085 ;; This function uses a non-reentrant model
 41086 ;;
 41087                           
 41088                           	psect	text338
 41089  009E36                     __ptext338:
 41090                           	opt callstack 0
 41091  009E36                     _I2C2_SlaveRdCallBack:
 41092                           	opt callstack 12
 41093                           
 41094                           ; BSR set to: 61
 41095                           ;mcc_generated_files/i2c2_slave.c: 241:     if (I2C2_SlaveRdInterruptHandler)
 41096                           
 41097                           ; BSR set to: 61
 41098                           ;incstack = 0
 41099  009E36  0102               	movlb	2	; () banked
 41100  009E38  5196               	movf	_I2C2_SlaveRdInterruptHandler& (0+255),w,b
 41101  009E3A  1197               	iorwf	(_I2C2_SlaveRdInterruptHandler+1)& (0+255),w,b
 41102  009E3C  B4D8               	btfsc	status,2,c
 41103  009E3E  0012               	return	
 41104                           
 41105                           ; BSR set to: 2
 41106                           ;mcc_generated_files/i2c2_slave.c: 242:     {;mcc_generated_files/i2c2_slave.c: 243:    
      +                               I2C2_SlaveRdInterruptHandler();
 41107  009E40  D801               	call	i2u1953_48
 41108  009E42  0012               	return	
 41109  009E44                     i2u1953_48:
 41110  009E44  0005               	push	
 41111  009E46  6EFA               	movwf	pclath,c
 41112  009E48  5196               	movf	_I2C2_SlaveRdInterruptHandler& (0+255),w,b
 41113  009E4A  6EFD               	movwf	tosl,c
 41114  009E4C  5197               	movf	(_I2C2_SlaveRdInterruptHandler+1)& (0+255),w,b
 41115  009E4E  6EFE               	movwf	tosh,c
 41116  009E50  6AFF               	clrf	tosu,c
 41117  009E52  50FA               	movf	pclath,w,c
 41118  009E54  0012               	return		;indir
 41119  009E56                     __end_of_I2C2_SlaveRdCallBack:
 41120                           	opt callstack 0
 41121                           
 41122 ;; *************** function _I2C2_SlaveDefRdInterruptHandler *****************
 41123 ;; Defined at:
 41124 ;;		line 247 in file "mcc_generated_files/i2c2_slave.c"
 41125 ;; Parameters:    Size  Location     Type
 41126 ;;		None
 41127 ;; Auto vars:     Size  Location     Type
 41128 ;;		None
 41129 ;; Return value:  Size  Location     Type
 41130 ;;                  1    wreg      void 
 41131 ;; Registers used:
 41132 ;;		wreg, status,2, cstack
 41133 ;; Tracked objects:
 41134 ;;		On entry : 3F/2
 41135 ;;		On exit  : 3F/2
 41136 ;;		Unchanged: 0/0
 41137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41142 ;;Total ram usage:        0 bytes
 41143 ;; Hardware stack levels used:    1
 41144 ;; Hardware stack levels required when called:    1
 41145 ;; This function calls:
 41146 ;;		_I2C2_SlaveGetRxData
 41147 ;; This function is called by:
 41148 ;;		_I2C2_Open
 41149 ;;		_I2C2_SlaveRdCallBack
 41150 ;; This function uses a non-reentrant model
 41151 ;;
 41152                           
 41153                           	psect	text339
 41154  00A45C                     __ptext339:
 41155                           	opt callstack 0
 41156  00A45C                     _I2C2_SlaveDefRdInterruptHandler:
 41157                           	opt callstack 13
 41158                           
 41159                           ; BSR set to: 2
 41160                           ;mcc_generated_files/i2c2_slave.c: 248:     i2c2RdData = I2C2_SlaveGetRxData();
 41161                           
 41162                           ;incstack = 0
 41163  00A45C  EC14  F053         	call	_I2C2_SlaveGetRxData	;wreg free
 41164  00A460  0102               	movlb	2	; () banked
 41165  00A462  6FB6               	movwf	_i2c2RdData& (0+255),b	;volatile
 41166                           
 41167                           ; BSR set to: 2
 41168  00A464  0012               	return		;funcret
 41169  00A466                     __end_of_I2C2_SlaveDefRdInterruptHandler:
 41170                           	opt callstack 0
 41171                           
 41172 ;; *************** function _ReceiveHandler *****************
 41173 ;; Defined at:
 41174 ;;		line 136 in file "controller.c"
 41175 ;; Parameters:    Size  Location     Type
 41176 ;;		None
 41177 ;; Auto vars:     Size  Location     Type
 41178 ;;  data            1    3[COMRAM] unsigned char 
 41179 ;;  stat1           1    0        unsigned char 
 41180 ;;  stat0           1    0        unsigned char 
 41181 ;;  addr            1    0        unsigned char 
 41182 ;; Return value:  Size  Location     Type
 41183 ;;                  1    wreg      void 
 41184 ;; Registers used:
 41185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41186 ;; Tracked objects:
 41187 ;;		On entry : 3D/0
 41188 ;;		On exit  : 0/0
 41189 ;;		Unchanged: 0/0
 41190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41192 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41195 ;;Total ram usage:        4 bytes
 41196 ;; Hardware stack levels used:    1
 41197 ;; Hardware stack levels required when called:    2
 41198 ;; This function calls:
 41199 ;;		_I2C2_Read
 41200 ;; This function is called by:
 41201 ;;		_StopHandler
 41202 ;;		_ControllerInit
 41203 ;;		_I2C2_SlaveRdCallBack
 41204 ;; This function uses a non-reentrant model
 41205 ;;
 41206                           
 41207                           	psect	text340
 41208  00910A                     __ptext340:
 41209                           	opt callstack 0
 41210  00910A                     _ReceiveHandler:
 41211                           	opt callstack 11
 41212                           
 41213                           ; BSR set to: 2
 41214                           ;incstack = 0
 41215  00910A  013D               	movlb	61	; () banked
 41216  00910C  5161               	movf	97,w,b	;volatile
 41217  00910E  5162               	movf	98,w,b	;volatile
 41218  009110  5157               	movf	87,w,b	;volatile
 41219                           
 41220                           ;controller.c: 147:     if (!I2C2STAT1bits.RXBF) return;
 41221  009112  A162               	btfss	98,0,b	;volatile
 41222  009114  0012               	return	
 41223  009116  D017               	goto	i2l19169
 41224  009118                     i2l19161:
 41225                           
 41226                           ; BSR set to: 61
 41227                           ;controller.c: 152:         data = I2C2_Read();
 41228  009118  EC11  F053         	call	_I2C2_Read	;wreg free
 41229  00911C  6E04               	movwf	ReceiveHandler@data^0,c
 41230                           
 41231                           ; BSR set to: 61
 41232                           ;controller.c: 153:         if (cntByte<10) msg.controllerMsg[cntByte] = data;
 41233  00911E  0100               	movlb	0	; () banked
 41234  009120  BFCD               	btfsc	(_cntByte+1)& (0+255),7,b
 41235  009122  D006               	goto	i2u1883_40
 41236  009124  51CD               	movf	(_cntByte+1)& (0+255),w,b
 41237  009126  E10D               	bnz	i2l19167
 41238  009128  0E0A               	movlw	10
 41239  00912A  5DCC               	subwf	_cntByte& (0+255),w,b
 41240  00912C  B0D8               	btfsc	status,0,c
 41241  00912E  D009               	goto	i2l19167
 41242  009130                     i2u1883_40:
 41243                           
 41244                           ; BSR set to: 0
 41245  009130  0E00               	movlw	low _msg
 41246  009132  25CC               	addwf	_cntByte& (0+255),w,b
 41247  009134  6ED9               	movwf	fsr2l,c
 41248  009136  0E02               	movlw	high _msg
 41249  009138  21CD               	addwfc	(_cntByte+1)& (0+255),w,b
 41250  00913A  6EDA               	movwf	fsr2h,c
 41251  00913C  0060  F013  FFDF   	movff	ReceiveHandler@data,indf2
 41252  009142                     i2l19167:
 41253                           
 41254                           ; BSR set to: 0
 41255                           ;controller.c: 154:         cntByte++;
 41256  009142  4BCC               	infsnz	_cntByte& (0+255),f,b
 41257  009144  2BCD               	incf	(_cntByte+1)& (0+255),f,b
 41258  009146                     i2l19169:
 41259                           
 41260                           ;controller.c: 148:     while (I2C2STAT1bits.RXBF) {
 41261  009146  013D               	movlb	61	; () banked
 41262  009148  B162               	btfsc	98,0,b	;volatile
 41263  00914A  D7E6               	goto	i2l19161
 41264                           
 41265                           ; BSR set to: 61
 41266                           ;controller.c: 157:     commandReceived = 1;
 41267  00914C  0E01               	movlw	1
 41268  00914E  0102               	movlb	2	; () banked
 41269  009150  6F9B               	movwf	_commandReceived& (0+255),b
 41270  009152  0012               	return		;funcret
 41271  009154                     __end_of_ReceiveHandler:
 41272                           	opt callstack 0
 41273                           
 41274 ;; *************** function _I2C2_Read *****************
 41275 ;; Defined at:
 41276 ;;		line 149 in file "mcc_generated_files/i2c2_slave.c"
 41277 ;; Parameters:    Size  Location     Type
 41278 ;;		None
 41279 ;; Auto vars:     Size  Location     Type
 41280 ;;		None
 41281 ;; Return value:  Size  Location     Type
 41282 ;;                  1    wreg      unsigned char 
 41283 ;; Registers used:
 41284 ;;		wreg, status,2, cstack
 41285 ;; Tracked objects:
 41286 ;;		On entry : 0/3D
 41287 ;;		On exit  : 3F/3D
 41288 ;;		Unchanged: 0/0
 41289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41294 ;;Total ram usage:        0 bytes
 41295 ;; Hardware stack levels used:    1
 41296 ;; Hardware stack levels required when called:    1
 41297 ;; This function calls:
 41298 ;;		_I2C2_SlaveGetRxData
 41299 ;; This function is called by:
 41300 ;;		_ReceiveHandler
 41301 ;; This function uses a non-reentrant model
 41302 ;;
 41303                           
 41304                           	psect	text341
 41305  00A622                     __ptext341:
 41306                           	opt callstack 0
 41307  00A622                     _I2C2_Read:
 41308                           	opt callstack 11
 41309                           
 41310                           ;mcc_generated_files/i2c2_slave.c: 151:    return I2C2_SlaveGetRxData();
 41311                           
 41312                           ;incstack = 0
 41313  00A622  EC14  F053         	call	_I2C2_SlaveGetRxData	;wreg free
 41314                           
 41315                           ; BSR set to: 61
 41316  00A626  0012               	return		;funcret
 41317  00A628                     __end_of_I2C2_Read:
 41318                           	opt callstack 0
 41319                           
 41320 ;; *************** function _I2C2_SlaveGetRxData *****************
 41321 ;; Defined at:
 41322 ;;		line 453 in file "mcc_generated_files/i2c2_slave.c"
 41323 ;; Parameters:    Size  Location     Type
 41324 ;;		None
 41325 ;; Auto vars:     Size  Location     Type
 41326 ;;		None
 41327 ;; Return value:  Size  Location     Type
 41328 ;;                  1    wreg      unsigned char 
 41329 ;; Registers used:
 41330 ;;		wreg, status,2
 41331 ;; Tracked objects:
 41332 ;;		On entry : 0/3D
 41333 ;;		On exit  : 3F/3D
 41334 ;;		Unchanged: 0/0
 41335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41340 ;;Total ram usage:        0 bytes
 41341 ;; Hardware stack levels used:    1
 41342 ;; This function calls:
 41343 ;;		Nothing
 41344 ;; This function is called by:
 41345 ;;		_I2C2_Read
 41346 ;;		_I2C2_SlaveDefRdInterruptHandler
 41347 ;; This function uses a non-reentrant model
 41348 ;;
 41349                           
 41350                           	psect	text342
 41351  00A628                     __ptext342:
 41352                           	opt callstack 0
 41353  00A628                     _I2C2_SlaveGetRxData:
 41354                           	opt callstack 11
 41355                           
 41356                           ;mcc_generated_files/i2c2_slave.c: 455:     return I2C2RXB;
 41357                           
 41358                           ; BSR set to: 61
 41359                           ;incstack = 0
 41360  00A628  013D               	movlb	61	; () banked
 41361  00A62A  5154               	movf	84,w,b	;volatile
 41362                           
 41363                           ; BSR set to: 61
 41364  00A62C  0012               	return		;funcret
 41365  00A62E                     __end_of_I2C2_SlaveGetRxData:
 41366                           	opt callstack 0
 41367                           
 41368 ;; *************** function _I2C2_SlaveIsRxBufFull *****************
 41369 ;; Defined at:
 41370 ;;		line 443 in file "mcc_generated_files/i2c2_slave.c"
 41371 ;; Parameters:    Size  Location     Type
 41372 ;;		None
 41373 ;; Auto vars:     Size  Location     Type
 41374 ;;		None
 41375 ;; Return value:  Size  Location     Type
 41376 ;;                  1    wreg      _Bool 
 41377 ;; Registers used:
 41378 ;;		wreg
 41379 ;; Tracked objects:
 41380 ;;		On entry : 4/2
 41381 ;;		On exit  : 3F/3D
 41382 ;;		Unchanged: 0/0
 41383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41388 ;;Total ram usage:        0 bytes
 41389 ;; Hardware stack levels used:    1
 41390 ;; This function calls:
 41391 ;;		Nothing
 41392 ;; This function is called by:
 41393 ;;		_I2C2_Isr
 41394 ;; This function uses a non-reentrant model
 41395 ;;
 41396                           
 41397                           	psect	text343
 41398  00A378                     __ptext343:
 41399                           	opt callstack 0
 41400  00A378                     _I2C2_SlaveIsRxBufFull:
 41401                           	opt callstack 15
 41402                           
 41403                           ;mcc_generated_files/i2c2_slave.c: 445:     return I2C2STAT1bits.RXBF;
 41404                           
 41405                           ; BSR set to: 61
 41406                           ;incstack = 0
 41407  00A378  013D               	movlb	61	; () banked
 41408  00A37A  A162               	btfss	98,0,b	;volatile
 41409  00A37C  D002               	goto	i2u1203_40
 41410  00A37E  0E01               	movlw	1
 41411  00A380  0012               	return	
 41412  00A382                     i2u1203_40:
 41413  00A382  0E00               	movlw	0
 41414                           
 41415                           ; BSR set to: 61
 41416  00A384  0012               	return		;funcret
 41417  00A386                     __end_of_I2C2_SlaveIsRxBufFull:
 41418                           	opt callstack 0
 41419                           
 41420 ;; *************** function _I2C2_SlaveClearStopFlag *****************
 41421 ;; Defined at:
 41422 ;;		line 398 in file "mcc_generated_files/i2c2_slave.c"
 41423 ;; Parameters:    Size  Location     Type
 41424 ;;		None
 41425 ;; Auto vars:     Size  Location     Type
 41426 ;;		None
 41427 ;; Return value:  Size  Location     Type
 41428 ;;                  1    wreg      void 
 41429 ;; Registers used:
 41430 ;;		None
 41431 ;; Tracked objects:
 41432 ;;		On entry : 3F/3D
 41433 ;;		On exit  : 3F/3D
 41434 ;;		Unchanged: 0/0
 41435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41440 ;;Total ram usage:        0 bytes
 41441 ;; Hardware stack levels used:    1
 41442 ;; This function calls:
 41443 ;;		Nothing
 41444 ;; This function is called by:
 41445 ;;		_I2C2_Isr
 41446 ;; This function uses a non-reentrant model
 41447 ;;
 41448                           
 41449                           	psect	text344
 41450  00A6A0                     __ptext344:
 41451                           	opt callstack 0
 41452  00A6A0                     _I2C2_SlaveClearStopFlag:
 41453                           	opt callstack 15
 41454                           
 41455                           ; BSR set to: 61
 41456                           ;mcc_generated_files/i2c2_slave.c: 400:     I2C2PIRbits.PCIF = 0;
 41457                           
 41458                           ; BSR set to: 61
 41459                           ;incstack = 0
 41460  00A6A0  9563               	bcf	99,2,b	;volatile
 41461                           
 41462                           ; BSR set to: 61
 41463  00A6A2  0012               	return		;funcret
 41464  00A6A4                     __end_of_I2C2_SlaveClearStopFlag:
 41465                           	opt callstack 0
 41466                           
 41467 ;; *************** function _I2C2_SlaveClearBuff *****************
 41468 ;; Defined at:
 41469 ;;		line 408 in file "mcc_generated_files/i2c2_slave.c"
 41470 ;; Parameters:    Size  Location     Type
 41471 ;;		None
 41472 ;; Auto vars:     Size  Location     Type
 41473 ;;		None
 41474 ;; Return value:  Size  Location     Type
 41475 ;;                  1    wreg      void 
 41476 ;; Registers used:
 41477 ;;		None
 41478 ;; Tracked objects:
 41479 ;;		On entry : 3F/3D
 41480 ;;		On exit  : 3F/3D
 41481 ;;		Unchanged: 0/0
 41482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41487 ;;Total ram usage:        0 bytes
 41488 ;; Hardware stack levels used:    1
 41489 ;; This function calls:
 41490 ;;		Nothing
 41491 ;; This function is called by:
 41492 ;;		_I2C2_Isr
 41493 ;; This function uses a non-reentrant model
 41494 ;;
 41495                           
 41496                           	psect	text345
 41497  00A6A4                     __ptext345:
 41498                           	opt callstack 0
 41499  00A6A4                     _I2C2_SlaveClearBuff:
 41500                           	opt callstack 15
 41501                           
 41502                           ; BSR set to: 61
 41503                           ;mcc_generated_files/i2c2_slave.c: 410:     I2C2STAT1bits.CLRBF = 1;
 41504                           
 41505                           ; BSR set to: 61
 41506                           ;incstack = 0
 41507  00A6A4  8562               	bsf	98,2,b	;volatile
 41508                           
 41509                           ; BSR set to: 61
 41510  00A6A6  0012               	return		;funcret
 41511  00A6A8                     __end_of_I2C2_SlaveClearBuff:
 41512                           	opt callstack 0
 41513                           
 41514 ;; *************** function _CMP1_ISR *****************
 41515 ;; Defined at:
 41516 ;;		line 110 in file "mcc_generated_files/cmp1.c"
 41517 ;; Parameters:    Size  Location     Type
 41518 ;;		None
 41519 ;; Auto vars:     Size  Location     Type
 41520 ;;		None
 41521 ;; Return value:  Size  Location     Type
 41522 ;;                  1    wreg      void 
 41523 ;; Registers used:
 41524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41525 ;; Tracked objects:
 41526 ;;		On entry : 3F/39
 41527 ;;		On exit  : 0/0
 41528 ;;		Unchanged: 0/0
 41529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41534 ;;Total ram usage:        0 bytes
 41535 ;; Hardware stack levels used:    1
 41536 ;; Hardware stack levels required when called:   10
 41537 ;; This function calls:
 41538 ;;		Absolute function
 41539 ;;		_BuzzerCMPHandler
 41540 ;; This function is called by:
 41541 ;;		_INTERRUPT_InterruptManager
 41542 ;; This function uses a non-reentrant model
 41543 ;;
 41544                           
 41545                           	psect	text346
 41546  009D34                     __ptext346:
 41547                           	opt callstack 0
 41548  009D34                     _CMP1_ISR:
 41549                           	opt callstack 6
 41550                           
 41551                           ; BSR set to: 57
 41552                           ;mcc_generated_files/cmp1.c: 113:     PIR1bits.C1IF = 0;
 41553                           
 41554                           ; BSR set to: 61
 41555                           ;incstack = 0
 41556  009D34  99A1               	bcf	161,4,b	;volatile
 41557                           
 41558                           ; BSR set to: 57
 41559                           ;mcc_generated_files/cmp1.c: 115:     if (CMP1_InterruptHandler) CMP1_InterruptHandler()
      +                          ;
 41560  009D36  0102               	movlb	2	; () banked
 41561  009D38  518A               	movf	_CMP1_InterruptHandler& (0+255),w,b
 41562  009D3A  118B               	iorwf	(_CMP1_InterruptHandler+1)& (0+255),w,b
 41563  009D3C  B4D8               	btfsc	status,2,c
 41564  009D3E  0012               	return	
 41565                           
 41566                           ; BSR set to: 2
 41567  009D40  D801               	call	i2u2122_48
 41568  009D42  0012               	return	
 41569  009D44                     i2u2122_48:
 41570  009D44  0005               	push	
 41571  009D46  6EFA               	movwf	pclath,c
 41572  009D48  518A               	movf	_CMP1_InterruptHandler& (0+255),w,b
 41573  009D4A  6EFD               	movwf	tosl,c
 41574  009D4C  518B               	movf	(_CMP1_InterruptHandler+1)& (0+255),w,b
 41575  009D4E  6EFE               	movwf	tosh,c
 41576  009D50  6AFF               	clrf	tosu,c
 41577  009D52  50FA               	movf	pclath,w,c
 41578  009D54  0012               	return		;indir
 41579  009D56                     __end_of_CMP1_ISR:
 41580                           	opt callstack 0
 41581                           
 41582 ;; *************** function _BuzzerCMPHandler *****************
 41583 ;; Defined at:
 41584 ;;		line 393 in file "buzzer.c"
 41585 ;; Parameters:    Size  Location     Type
 41586 ;;		None
 41587 ;; Auto vars:     Size  Location     Type
 41588 ;;		None
 41589 ;; Return value:  Size  Location     Type
 41590 ;;                  1    wreg      void 
 41591 ;; Registers used:
 41592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41593 ;; Tracked objects:
 41594 ;;		On entry : 3F/2
 41595 ;;		On exit  : 3F/39
 41596 ;;		Unchanged: 0/0
 41597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41602 ;;Total ram usage:        0 bytes
 41603 ;; Hardware stack levels used:    1
 41604 ;; Hardware stack levels required when called:    9
 41605 ;; This function calls:
 41606 ;;		i2_CMP1_Disable
 41607 ;;		i2_printf
 41608 ;; This function is called by:
 41609 ;;		_BuzzerInit
 41610 ;;		_CMP1_ISR
 41611 ;; This function uses a non-reentrant model
 41612 ;;
 41613                           
 41614                           	psect	text347
 41615  009BAA                     __ptext347:
 41616                           	opt callstack 0
 41617  009BAA                     _BuzzerCMPHandler:
 41618                           	opt callstack 6
 41619                           
 41620                           ; BSR set to: 2
 41621                           ;buzzer.c: 395:     if (checkController) {
 41622                           
 41623                           ;incstack = 0
 41624  009BAA  51B2               	movf	_checkController& (0+255),w,b
 41625  009BAC  B4D8               	btfsc	status,2,c
 41626  009BAE  D00A               	goto	i2l20741
 41627                           
 41628                           ; BSR set to: 2
 41629                           ;buzzer.c: 396:         printf("BCMPH_Cnt\r\n");
 41630  009BB0  0E9C               	movlw	low STR_19
 41631  009BB2  0100               	movlb	0	; () banked
 41632  009BB4  6F77               	movwf	i2printf@fmt& (0+255),b
 41633  009BB6  0EFF               	movlw	high STR_19
 41634  009BB8  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 41635  009BBA  ECE8  F04D         	call	i2_printf	;wreg free
 41636                           
 41637                           ; BSR set to: 2
 41638                           ;buzzer.c: 397:         controllerDetected = 1;
 41639  009BBE  0E01               	movlw	1
 41640  009BC0  6FB1               	movwf	_controllerDetected& (0+255),b
 41641                           
 41642                           ;buzzer.c: 398:     } else {
 41643  009BC2  D003               	goto	i2l20743
 41644  009BC4                     i2l20741:
 41645                           
 41646                           ; BSR set to: 2
 41647                           ;buzzer.c: 399:         detected = 1;
 41648  009BC4  0E01               	movlw	1
 41649  009BC6  0100               	movlb	0	; () banked
 41650  009BC8  6FF8               	movwf	_detected& (0+255),b
 41651  009BCA                     i2l20743:
 41652                           
 41653                           ;buzzer.c: 401:     CMP1_Disable();
 41654  009BCA  ECC8  F052         	call	i2_CMP1_Disable	;wreg free
 41655                           
 41656                           ; BSR set to: 57
 41657  009BCE  0012               	return		;funcret
 41658  009BD0                     __end_of_BuzzerCMPHandler:
 41659                           	opt callstack 0
 41660                           
 41661 ;; *************** function i2_CMP1_Disable *****************
 41662 ;; Defined at:
 41663 ;;		line 98 in file "mcc_generated_files/cmp1.c"
 41664 ;; Parameters:    Size  Location     Type
 41665 ;;		None
 41666 ;; Auto vars:     Size  Location     Type
 41667 ;;		None
 41668 ;; Return value:  Size  Location     Type
 41669 ;;                  1    wreg      void 
 41670 ;; Registers used:
 41671 ;;		None
 41672 ;; Tracked objects:
 41673 ;;		On entry : 3D/0
 41674 ;;		On exit  : 3F/39
 41675 ;;		Unchanged: 0/0
 41676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41681 ;;Total ram usage:        0 bytes
 41682 ;; Hardware stack levels used:    1
 41683 ;; This function calls:
 41684 ;;		Nothing
 41685 ;; This function is called by:
 41686 ;;		_BuzzerCMPHandler
 41687 ;;		i2_BuzzerOff
 41688 ;; This function uses a non-reentrant model
 41689 ;;
 41690                           
 41691                           	psect	text348
 41692  00A590                     __ptext348:
 41693                           	opt callstack 0
 41694  00A590                     i2_CMP1_Disable:
 41695                           	opt callstack 13
 41696                           
 41697                           ;mcc_generated_files/cmp1.c: 100:     PIE1bits.C1IE = 0;
 41698                           
 41699                           ; BSR set to: 57
 41700                           ;incstack = 0
 41701  00A590  0139               	movlb	57	; () banked
 41702  00A592  9991               	bcf	145,4,b	;volatile
 41703                           
 41704                           ;mcc_generated_files/cmp1.c: 101:     PIR1bits.C1IF = 0;
 41705  00A594  99A1               	bcf	161,4,b	;volatile
 41706                           
 41707                           ; BSR set to: 57
 41708  00A596  0012               	return		;funcret
 41709  00A598                     __end_ofi2_CMP1_Disable:
 41710                           	opt callstack 0
 41711                           
 41712 ;; *************** function _ADCC_ThresholdISR *****************
 41713 ;; Defined at:
 41714 ;;		line 307 in file "mcc_generated_files/adcc.c"
 41715 ;; Parameters:    Size  Location     Type
 41716 ;;		None
 41717 ;; Auto vars:     Size  Location     Type
 41718 ;;		None
 41719 ;; Return value:  Size  Location     Type
 41720 ;;                  1    wreg      void 
 41721 ;; Registers used:
 41722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41723 ;; Tracked objects:
 41724 ;;		On entry : 0/39
 41725 ;;		On exit  : 0/0
 41726 ;;		Unchanged: 0/0
 41727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41732 ;;Total ram usage:        0 bytes
 41733 ;; Hardware stack levels used:    1
 41734 ;; Hardware stack levels required when called:   10
 41735 ;; This function calls:
 41736 ;;		Absolute function
 41737 ;;		_ADCC_DefaultInterruptHandler
 41738 ;;		_AdcHandler
 41739 ;; This function is called by:
 41740 ;;		_INTERRUPT_InterruptManager
 41741 ;; This function uses a non-reentrant model
 41742 ;;
 41743                           
 41744                           	psect	text349
 41745  009CAA                     __ptext349:
 41746                           	opt callstack 0
 41747  009CAA                     _ADCC_ThresholdISR:
 41748                           	opt callstack 6
 41749                           
 41750                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADTIF = 0;
 41751                           
 41752                           ; BSR set to: 57
 41753                           ;incstack = 0
 41754  009CAA  0139               	movlb	57	; () banked
 41755  009CAC  97A1               	bcf	161,3,b	;volatile
 41756                           
 41757                           ; BSR set to: 57
 41758                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADTI_InterruptHandler)
 41759  009CAE  0102               	movlb	2	; () banked
 41760  009CB0  51F3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 41761  009CB2  11F4               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 41762  009CB4  B4D8               	btfsc	status,2,c
 41763  009CB6  0012               	return	
 41764                           
 41765                           ; BSR set to: 2
 41766                           ;mcc_generated_files/adcc.c: 313:         ADCC_ADTI_InterruptHandler();
 41767  009CB8  D801               	call	i2u2118_48
 41768  009CBA  0012               	return	
 41769  009CBC                     i2u2118_48:
 41770  009CBC  0005               	push	
 41771  009CBE  6EFA               	movwf	pclath,c
 41772  009CC0  51F3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 41773  009CC2  6EFD               	movwf	tosl,c
 41774  009CC4  51F4               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 41775  009CC6  6EFE               	movwf	tosh,c
 41776  009CC8  6AFF               	clrf	tosu,c
 41777  009CCA  50FA               	movf	pclath,w,c
 41778  009CCC  0012               	return		;indir
 41779  009CCE                     __end_of_ADCC_ThresholdISR:
 41780                           	opt callstack 0
 41781                           
 41782 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 41783 ;; Defined at:
 41784 ;;		line 319 in file "mcc_generated_files/adcc.c"
 41785 ;; Parameters:    Size  Location     Type
 41786 ;;		None
 41787 ;; Auto vars:     Size  Location     Type
 41788 ;;		None
 41789 ;; Return value:  Size  Location     Type
 41790 ;;                  1    wreg      void 
 41791 ;; Registers used:
 41792 ;;		None
 41793 ;; Tracked objects:
 41794 ;;		On entry : 3F/2
 41795 ;;		On exit  : 3F/2
 41796 ;;		Unchanged: 3F/0
 41797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41802 ;;Total ram usage:        0 bytes
 41803 ;; Hardware stack levels used:    1
 41804 ;; This function calls:
 41805 ;;		Nothing
 41806 ;; This function is called by:
 41807 ;;		_ADCC_Initialize
 41808 ;;		i2_ADCC_Initialize
 41809 ;;		_ADCC_ThresholdISR
 41810 ;; This function uses a non-reentrant model
 41811 ;;
 41812                           
 41813                           	psect	text350
 41814  00A6B8                     __ptext350:
 41815                           	opt callstack 0
 41816  00A6B8                     _ADCC_DefaultInterruptHandler:
 41817                           	opt callstack 15
 41818                           
 41819                           ; BSR set to: 2
 41820                           
 41821                           ;incstack = 0
 41822  00A6B8  0012               	return		;funcret
 41823  00A6BA                     __end_of_ADCC_DefaultInterruptHandler:
 41824                           	opt callstack 0
 41825                           
 41826 ;; *************** function _AdcHandler *****************
 41827 ;; Defined at:
 41828 ;;		line 96 in file "monitor.c"
 41829 ;; Parameters:    Size  Location     Type
 41830 ;;		None
 41831 ;; Auto vars:     Size  Location     Type
 41832 ;;		None
 41833 ;; Return value:  Size  Location     Type
 41834 ;;                  1    wreg      void 
 41835 ;; Registers used:
 41836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41837 ;; Tracked objects:
 41838 ;;		On entry : 3F/2
 41839 ;;		On exit  : 3/2
 41840 ;;		Unchanged: 0/0
 41841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41846 ;;Total ram usage:        0 bytes
 41847 ;; Hardware stack levels used:    1
 41848 ;; Hardware stack levels required when called:    9
 41849 ;; This function calls:
 41850 ;;		_ADCC_GetConversionResult
 41851 ;;		_AdcReady
 41852 ;;		i2_ADCC_Initialize
 41853 ;;		i2_ADCC_StartConversion
 41854 ;;		i2_AdcInit
 41855 ;;		i2___wmul
 41856 ;;		i2_printf
 41857 ;; This function is called by:
 41858 ;;		_AdcInit
 41859 ;;		i2_AdcInit
 41860 ;;		_ADCC_ThresholdISR
 41861 ;; This function uses a non-reentrant model
 41862 ;;
 41863                           
 41864                           	psect	text351
 41865  006018                     __ptext351:
 41866                           	opt callstack 0
 41867  006018                     _AdcHandler:
 41868                           	opt callstack 6
 41869                           
 41870                           ; BSR set to: 2
 41871                           ;monitor.c: 97:     static int cnt = 0;;monitor.c: 101:     if (!AdcReady()) {
 41872                           
 41873                           ; BSR set to: 2
 41874                           ;incstack = 0
 41875  006018  EC17  F053         	call	_AdcReady	;wreg free
 41876  00601C  0900               	iorlw	0
 41877  00601E  A4D8               	btfss	status,2,c
 41878  006020  D010               	goto	i2l21043
 41879                           
 41880                           ; BSR set to: 62
 41881                           ;monitor.c: 102:         printf("EAI: %02X\r\n", ADSTAT);
 41882  006022  0E84               	movlw	low STR_31
 41883  006024  0100               	movlb	0	; () banked
 41884  006026  6F77               	movwf	i2printf@fmt& (0+255),b
 41885  006028  0EFF               	movlw	high STR_31
 41886  00602A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 41887  00602C  006F FBF0  F079    	movff	16124,?i2_printf+2	;volatile
 41888  006032  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 41889  006034  ECE8  F04D         	call	i2_printf	;wreg free
 41890                           
 41891                           ; BSR set to: 2
 41892                           ;monitor.c: 103:         ADCC_Initialize();
 41893  006038  EC93  F043         	call	i2_ADCC_Initialize	;wreg free
 41894                           
 41895                           ;monitor.c: 104:         AdcInit();
 41896  00603C  EC49  F042         	call	i2_AdcInit	;wreg free
 41897  006040  0012               	return	
 41898  006042                     i2l21043:
 41899                           
 41900                           ; BSR set to: 62
 41901                           ;monitor.c: 108:     adcChannels[currentChannel].data = ADCC_GetConversionResult();
 41902  006042  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 41903  006048  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 41904  00604E  0E00               	movlw	0
 41905  006050  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 41906  006052  0E05               	movlw	5
 41907  006054  6E03               	movwf	i2___wmul@multiplicand^0,c
 41908  006056  ECD3  F04C         	call	i2___wmul	;wreg free
 41909  00605A  0EBE               	movlw	low (_adcChannels+2)
 41910  00605C  2401               	addwf	?i2___wmul^0,w,c
 41911  00605E  6ED9               	movwf	fsr2l,c
 41912  006060  0E02               	movlw	high (_adcChannels+2)
 41913  006062  2002               	addwfc	(?i2___wmul+1)^0,w,c
 41914  006064  6EDA               	movwf	fsr2h,c
 41915  006066  EC2C  F050         	call	_ADCC_GetConversionResult	;wreg free
 41916  00606A  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 41917  006070  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 41918                           
 41919                           ;monitor.c: 109:     adcChannels[currentChannel].dataValid = 1;
 41920  006076  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 41921  00607C  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 41922  006082  0E00               	movlw	0
 41923  006084  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 41924  006086  0E05               	movlw	5
 41925  006088  6E03               	movwf	i2___wmul@multiplicand^0,c
 41926  00608A  ECD3  F04C         	call	i2___wmul	;wreg free
 41927  00608E  0EBD               	movlw	low (_adcChannels+1)
 41928  006090  2401               	addwf	?i2___wmul^0,w,c
 41929  006092  6ED9               	movwf	fsr2l,c
 41930  006094  0E02               	movlw	high (_adcChannels+1)
 41931  006096  2002               	addwfc	(?i2___wmul+1)^0,w,c
 41932  006098  6EDA               	movwf	fsr2h,c
 41933  00609A  0E01               	movlw	1
 41934  00609C  6EDF               	movwf	indf2,c
 41935                           
 41936                           ;monitor.c: 112:     if (currentChannel < (4 -1))
 41937  00609E  0101               	movlb	1	; () banked
 41938  0060A0  BFE6               	btfsc	(_currentChannel+1)& (0+255),7,b
 41939  0060A2  D006               	goto	i2u2016_40
 41940  0060A4  51E6               	movf	(_currentChannel+1)& (0+255),w,b
 41941  0060A6  E133               	bnz	i2l21055
 41942  0060A8  0E03               	movlw	3
 41943  0060AA  5DE5               	subwf	_currentChannel& (0+255),w,b
 41944  0060AC  B0D8               	btfsc	status,0,c
 41945  0060AE  D02F               	goto	i2l21055
 41946  0060B0                     i2u2016_40:
 41947                           
 41948                           ; BSR set to: 1
 41949                           ;monitor.c: 113:     {;monitor.c: 115:         currentChannel++;
 41950  0060B0  4BE5               	infsnz	_currentChannel& (0+255),f,b
 41951  0060B2  2BE6               	incf	(_currentChannel+1)& (0+255),f,b
 41952                           
 41953                           ; BSR set to: 1
 41954                           ;monitor.c: 116:         ADCON0bits.ADON = 0;
 41955  0060B4  013E               	movlb	62	; () banked
 41956  0060B6  9FF8               	bcf	248,7,b	;volatile
 41957                           
 41958                           ; BSR set to: 62
 41959                           ;monitor.c: 117:         ADREF = adcChannels[currentChannel].ref;
 41960  0060B8  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 41961  0060BE  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 41962  0060C4  0E00               	movlw	0
 41963  0060C6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 41964  0060C8  0E05               	movlw	5
 41965  0060CA  6E03               	movwf	i2___wmul@multiplicand^0,c
 41966  0060CC  ECD3  F04C         	call	i2___wmul	;wreg free
 41967  0060D0  0EC0               	movlw	low (_adcChannels+4)
 41968  0060D2  2401               	addwf	?i2___wmul^0,w,c
 41969  0060D4  6ED9               	movwf	fsr2l,c
 41970  0060D6  0E02               	movlw	high (_adcChannels+4)
 41971  0060D8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 41972  0060DA  6EDA               	movwf	fsr2h,c
 41973  0060DC  50DF               	movf	indf2,w,c
 41974  0060DE  013E               	movlb	62	; () banked
 41975  0060E0  6FFD               	movwf	253,b	;volatile
 41976                           
 41977                           ; BSR set to: 62
 41978                           ;monitor.c: 118:         ADCC_StartConversion(adcChannels[currentChannel].ch);
 41979  0060E2  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 41980  0060E8  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 41981  0060EE  0E00               	movlw	0
 41982  0060F0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 41983  0060F2  0E05               	movlw	5
 41984  0060F4  6E03               	movwf	i2___wmul@multiplicand^0,c
 41985  0060F6  ECD3  F04C         	call	i2___wmul	;wreg free
 41986  0060FA  0EBC               	movlw	low _adcChannels
 41987  0060FC  2401               	addwf	?i2___wmul^0,w,c
 41988  0060FE  6ED9               	movwf	fsr2l,c
 41989  006100  0E02               	movlw	high _adcChannels
 41990  006102  2002               	addwfc	(?i2___wmul+1)^0,w,c
 41991  006104  6EDA               	movwf	fsr2h,c
 41992  006106  50DF               	movf	indf2,w,c
 41993  006108  ECC6  F050         	call	i2_ADCC_StartConversion
 41994                           
 41995                           ;monitor.c: 119:     } else {
 41996  00610C  0012               	return	
 41997  00610E                     i2l21055:
 41998                           
 41999                           ; BSR set to: 1
 42000                           ;monitor.c: 121:         currentChannel = 0;
 42001  00610E  0E00               	movlw	0
 42002  006110  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 42003  006112  0E00               	movlw	0
 42004  006114  6FE5               	movwf	_currentChannel& (0+255),b
 42005                           
 42006                           ; BSR set to: 1
 42007                           ;monitor.c: 123:         cnt++;
 42008  006116  0102               	movlb	2	; () banked
 42009  006118  4B70               	infsnz	AdcHandler@cnt& (0+255),f,b
 42010  00611A  2B71               	incf	(AdcHandler@cnt+1)& (0+255),f,b
 42011                           
 42012                           ; BSR set to: 2
 42013                           ;monitor.c: 124:         if (cnt>=1000) { cnt = 0; }
 42014  00611C  BF71               	btfsc	(AdcHandler@cnt+1)& (0+255),7,b
 42015  00611E  D00A               	goto	i2l21063
 42016  006120  0EE8               	movlw	232
 42017  006122  5D70               	subwf	AdcHandler@cnt& (0+255),w,b
 42018  006124  0E03               	movlw	3
 42019  006126  5971               	subwfb	(AdcHandler@cnt+1)& (0+255),w,b
 42020  006128  A0D8               	btfss	status,0,c
 42021  00612A  D004               	goto	i2l21063
 42022                           
 42023                           ; BSR set to: 2
 42024  00612C  0E00               	movlw	0
 42025  00612E  6F71               	movwf	(AdcHandler@cnt+1)& (0+255),b
 42026  006130  0E00               	movlw	0
 42027  006132  6F70               	movwf	AdcHandler@cnt& (0+255),b
 42028  006134                     i2l21063:
 42029                           
 42030                           ; BSR set to: 2
 42031                           ;monitor.c: 125:         if (cnt==0) printf("o\r\n");
 42032  006134  5170               	movf	AdcHandler@cnt& (0+255),w,b
 42033  006136  1171               	iorwf	(AdcHandler@cnt+1)& (0+255),w,b
 42034  006138  A4D8               	btfss	status,2,c
 42035  00613A  0012               	return	
 42036                           
 42037                           ; BSR set to: 2
 42038  00613C  0EE4               	movlw	low STR_32
 42039  00613E  0100               	movlb	0	; () banked
 42040  006140  6F77               	movwf	i2printf@fmt& (0+255),b
 42041  006142  0EFF               	movlw	high STR_32
 42042  006144  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 42043  006146  ECE8  F04D         	call	i2_printf	;wreg free
 42044  00614A  0012               	return		;funcret
 42045  00614C                     __end_of_AdcHandler:
 42046                           	opt callstack 0
 42047                           
 42048 ;; *************** function i2_printf *****************
 42049 ;; Defined at:
 42050 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 42051 ;; Parameters:    Size  Location     Type
 42052 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
 42053 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42054 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42055 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42056 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42057 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42058 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42059 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42060 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42061 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42062 ;;		 -> STR_15(5), STR_14(19), STR_4(45), STR_3(4), 
 42063 ;;		 -> STR_2(15), STR_1(13), 
 42064 ;; Auto vars:     Size  Location     Type
 42065 ;;  printf          2   88[COMRAM] PTR void [1]
 42066 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 42067 ;;  printf          2    0        int 
 42068 ;; Return value:  Size  Location     Type
 42069 ;;                  2   23[BANK0 ] int 
 42070 ;; Registers used:
 42071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42072 ;; Tracked objects:
 42073 ;;		On entry : 0/0
 42074 ;;		On exit  : 3F/2
 42075 ;;		Unchanged: 0/0
 42076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42077 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42078 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42080 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42081 ;;Total ram usage:       14 bytes
 42082 ;; Hardware stack levels used:    1
 42083 ;; Hardware stack levels required when called:    8
 42084 ;; This function calls:
 42085 ;;		i2_vfprintf
 42086 ;; This function is called by:
 42087 ;;		_ButtonTask
 42088 ;;		_BuzzerTestHandler
 42089 ;;		_BuzzerCMPHandler
 42090 ;;		_AlarmHandler
 42091 ;;		_AdcHandler
 42092 ;;		_MonitorPressureTask
 42093 ;;		_UpdateState
 42094 ;;		_StopHandler
 42095 ;;		_ControllerTimerHandler
 42096 ;;		i2_BuzzerTask
 42097 ;;		i2_MuteAlarm
 42098 ;;		i2_SetCalibrateState
 42099 ;;		i2_SetAlarmSV1
 42100 ;;		i2_SetSV1
 42101 ;; This function uses a non-reentrant model
 42102 ;;
 42103                           
 42104                           	psect	text352
 42105  009BD0                     __ptext352:
 42106                           	opt callstack 0
 42107  009BD0                     i2_printf:
 42108                           	opt callstack 6
 42109                           
 42110                           ;incstack = 0
 42111  009BD0  0E79               	movlw	low (?i2_printf+2)
 42112  009BD2  6E59               	movwf	i2printf@ap^0,c
 42113  009BD4  6A5A               	clrf	(i2printf@ap+1)^0,c
 42114  009BD6  0E00               	movlw	0
 42115  009BD8  6E4F               	movwf	i2vfprintf@fp^0,c
 42116  009BDA  0E00               	movlw	0
 42117  009BDC  6E50               	movwf	(i2vfprintf@fp+1)^0,c
 42118  009BDE  0060  F1DC  F051   	movff	i2printf@fmt,i2vfprintf@fmt
 42119  009BE4  0060  F1E0  F052   	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 42120  009BEA  0E59               	movlw	low i2printf@ap
 42121  009BEC  6E53               	movwf	i2vfprintf@ap^0,c
 42122  009BEE  6A54               	clrf	(i2vfprintf@ap+1)^0,c
 42123  009BF0  ECC9  F043         	call	i2_vfprintf	;wreg free
 42124                           
 42125                           ; BSR set to: 2
 42126  009BF4  0012               	return		;funcret
 42127  009BF6                     __end_ofi2_printf:
 42128                           	opt callstack 0
 42129                           
 42130 ;; *************** function i2_vfprintf *****************
 42131 ;; Defined at:
 42132 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 42133 ;; Parameters:    Size  Location     Type
 42134 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
 42135 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 42136 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
 42137 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42138 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42139 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42140 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42141 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42142 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42143 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42144 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42145 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42146 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 42147 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 42148 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 42149 ;;  ap              2   82[COMRAM] PTR PTR void 
 42150 ;;		 -> i2printf@ap(2), i2sprintf@ap(2), printf@ap(2), sprintf@ap(2), 
 42151 ;; Auto vars:     Size  Location     Type
 42152 ;;  vfprintf        2   84[COMRAM] PTR unsigned char 
 42153 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42154 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42155 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42156 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42157 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42158 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42159 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42160 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42161 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42162 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 42163 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 42164 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 42165 ;; Return value:  Size  Location     Type
 42166 ;;                  2   78[COMRAM] int 
 42167 ;; Registers used:
 42168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42169 ;; Tracked objects:
 42170 ;;		On entry : 0/0
 42171 ;;		On exit  : 3F/2
 42172 ;;		Unchanged: 0/0
 42173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42174 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42177 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42178 ;;Total ram usage:        8 bytes
 42179 ;; Hardware stack levels used:    1
 42180 ;; Hardware stack levels required when called:    7
 42181 ;; This function calls:
 42182 ;;		i2_vfpfcnvrt
 42183 ;; This function is called by:
 42184 ;;		i2_sprintf
 42185 ;;		i2_printf
 42186 ;; This function uses a non-reentrant model
 42187 ;;
 42188                           
 42189                           	psect	text353
 42190  008792                     __ptext353:
 42191                           	opt callstack 0
 42192  008792                     i2_vfprintf:
 42193                           	opt callstack 6
 42194                           
 42195                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 42196                           
 42197                           ; BSR set to: 2
 42198                           ;incstack = 0
 42199  008792  0060  F144  F055   	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 42200  008798  0060  F148  F056   	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 42201                           
 42202                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 42203  00879E  0E00               	movlw	0
 42204  0087A0  0102               	movlb	2	; () banked
 42205  0087A2  6F2B               	movwf	(_nout+1)& (0+255),b
 42206  0087A4  0E00               	movlw	0
 42207  0087A6  6F2A               	movwf	_nout& (0+255),b
 42208                           
 42209                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 42210  0087A8  D016               	goto	i2l17895
 42211  0087AA                     i2l17893:
 42212                           
 42213                           ; BSR set to: 2
 42214                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 42215  0087AA  0060  F13C  F045   	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 42216  0087B0  0060  F140  F046   	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 42217  0087B6  0E55               	movlw	low i2vfprintf@cfmt
 42218  0087B8  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 42219  0087BA  6A48               	clrf	(i2vfpfcnvrt@fmt+1)^0,c
 42220  0087BC  0060  F14C  F049   	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 42221  0087C2  0060  F150  F04A   	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 42222  0087C8  EC57  F009         	call	i2_vfpfcnvrt	;wreg free
 42223  0087CC  5045               	movf	?i2_vfpfcnvrt^0,w,c
 42224  0087CE  0102               	movlb	2	; () banked
 42225  0087D0  272A               	addwf	_nout& (0+255),f,b
 42226  0087D2  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 42227  0087D4  232B               	addwfc	(_nout+1)& (0+255),f,b
 42228  0087D6                     i2l17895:
 42229                           
 42230                           ; BSR set to: 2
 42231                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 42232  0087D6  0060  F157  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 42233  0087DC  0060  F15B  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 42234  0087E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42235  0087E2  6AF8               	clrf	tblptru,c
 42236  0087E4                     	endif
 42237  0087E4                     	if	0	;tblptru may be non-zero
 42238  0087E4                     	endif
 42239  0087E4  0008               	tblrd		*
 42240  0087E6  50F5               	movf	tablat,w,c
 42241  0087E8  0900               	iorlw	0
 42242  0087EA  A4D8               	btfss	status,2,c
 42243  0087EC  D7DE               	goto	i2l17893
 42244                           
 42245                           ; BSR set to: 2
 42246                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 42247  0087EE  0060  F8A8  F04F   	movff	_nout,?i2_vfprintf
 42248  0087F4  0060  F8AC  F050   	movff	_nout+1,?i2_vfprintf+1
 42249                           
 42250                           ; BSR set to: 2
 42251  0087FA  0012               	return		;funcret
 42252  0087FC                     __end_ofi2_vfprintf:
 42253                           	opt callstack 0
 42254                           
 42255 ;; *************** function i2_vfpfcnvrt *****************
 42256 ;; Defined at:
 42257 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 42258 ;; Parameters:    Size  Location     Type
 42259 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 42260 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 42261 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
 42262 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 42263 ;;  ap              2   72[COMRAM] PTR PTR void 
 42264 ;;		 -> i2printf@ap(2), i2sprintf@ap(2), printf@ap(2), sprintf@ap(2), 
 42265 ;; Auto vars:     Size  Location     Type
 42266 ;;  vfpfcnvrt       8    8[BANK0 ] unsigned long long 
 42267 ;;  vfpfcnvrt       8    0[BANK0 ] long long 
 42268 ;;  vfpfcnvrt       4    0        long long 
 42269 ;;  vfpfcnvrt       3    0        PTR void 
 42270 ;;  vfpfcnvrt       3    0        unsigned char [3]
 42271 ;;  vfpfcnvrt       2   18[BANK0 ] int 
 42272 ;;  vfpfcnvrt       2   16[BANK0 ] PTR unsigned char 
 42273 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 42274 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 42275 ;;		 -> alarmData(399), STR_11(3), 
 42276 ;;  vfpfcnvrt       2    0        int 
 42277 ;;  vfpfcnvrt       1   22[BANK0 ] unsigned char 
 42278 ;; Return value:  Size  Location     Type
 42279 ;;                  2   68[COMRAM] int 
 42280 ;; Registers used:
 42281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42282 ;; Tracked objects:
 42283 ;;		On entry : 0/2
 42284 ;;		On exit  : 0/0
 42285 ;;		Unchanged: 0/0
 42286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42287 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42288 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42290 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42291 ;;Total ram usage:       33 bytes
 42292 ;; Hardware stack levels used:    1
 42293 ;; Hardware stack levels required when called:    6
 42294 ;; This function calls:
 42295 ;;		i2_atoi
 42296 ;;		i2_ctoa
 42297 ;;		i2_dtoa
 42298 ;;		i2_fputc
 42299 ;;		i2_isdigit
 42300 ;;		i2_stoa
 42301 ;;		i2_xtoa
 42302 ;; This function is called by:
 42303 ;;		i2_vfprintf
 42304 ;; This function uses a non-reentrant model
 42305 ;;
 42306                           
 42307                           	psect	text354
 42308  0012AE                     __ptext354:
 42309                           	opt callstack 0
 42310  0012AE                     i2_vfpfcnvrt:
 42311                           	opt callstack 6
 42312                           
 42313                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 42314                           
 42315                           ; BSR set to: 2
 42316                           ;incstack = 0
 42317  0012AE  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42318  0012B4  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42319  0012BA  006F FF7B FFF6     	movff	postinc2,tblptrl
 42320  0012C0  006F FF77 FFF7     	movff	postdec2,tblptrh
 42321  0012C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42322  0012C6  6AF8               	clrf	tblptru,c
 42323  0012C8                     	endif
 42324  0012C8                     	if	0	;tblptru may be non-zero
 42325  0012C8                     	endif
 42326  0012C8  0008               	tblrd		*
 42327  0012CA  50F5               	movf	tablat,w,c
 42328  0012CC  0A25               	xorlw	37
 42329  0012CE  A4D8               	btfss	status,2,c
 42330  0012D0  D2C1               	goto	i2l17629
 42331                           
 42332                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 42333  0012D2  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42334  0012D8  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42335  0012DE  2ADE               	incf	postinc2,f,c
 42336  0012E0  0E00               	movlw	0
 42337  0012E2  22DD               	addwfc	postdec2,f,c
 42338                           
 42339                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 42340  0012E4  0E00               	movlw	0
 42341  0012E6  0101               	movlb	1	; () banked
 42342  0012E8  6FC8               	movwf	(_width+1)& (0+255),b
 42343  0012EA  0E00               	movlw	0
 42344  0012EC  6FC7               	movwf	_width& (0+255),b
 42345  0012EE  C1C7  F1CB         	movff	_width,_flags
 42346  0012F2  C1C8  F1CC         	movff	_width+1,_flags+1
 42347                           
 42348                           ; BSR set to: 1
 42349                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 42350  0012F6  69C9               	setf	_prec& (0+255),b
 42351  0012F8  69CA               	setf	(_prec+1)& (0+255),b
 42352                           
 42353                           ; BSR set to: 1
 42354                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 42355  0012FA  0E00               	movlw	0
 42356  0012FC  0100               	movlb	0	; () banked
 42357  0012FE  6F73               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 42358  001300  0E00               	movlw	0
 42359  001302  D01B               	goto	L17
 42360  001304                     i2l17525:
 42361                           
 42362                           ; BSR set to: 0
 42363                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 42364  001304  0101               	movlb	1	; () banked
 42365  001306  81CB               	bsf	_flags& (0+255),0,b
 42366  001308  D00B               	goto	i2l17543
 42367  00130A                     i2l17529:
 42368                           
 42369                           ; BSR set to: 0
 42370                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 42371  00130A  0101               	movlb	1	; () banked
 42372  00130C  83CB               	bsf	_flags& (0+255),1,b
 42373  00130E  D008               	goto	i2l17543
 42374  001310                     i2l17533:
 42375                           
 42376                           ; BSR set to: 0
 42377                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 42378  001310  0101               	movlb	1	; () banked
 42379  001312  85CB               	bsf	_flags& (0+255),2,b
 42380  001314  D005               	goto	i2l17543
 42381  001316                     i2l17537:
 42382                           
 42383                           ; BSR set to: 0
 42384                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 42385  001316  0101               	movlb	1	; () banked
 42386  001318  87CB               	bsf	_flags& (0+255),3,b
 42387  00131A  D002               	goto	i2l17543
 42388  00131C                     i2l17541:
 42389                           
 42390                           ; BSR set to: 0
 42391                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 42392  00131C  0101               	movlb	1	; () banked
 42393  00131E  89CB               	bsf	_flags& (0+255),4,b
 42394  001320                     i2l17543:
 42395                           
 42396                           ; BSR set to: 1
 42397                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 709:                
      +                               ++*fmt;
 42398  001320  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42399  001326  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42400  00132C  2ADE               	incf	postinc2,f,c
 42401  00132E  0E00               	movlw	0
 42402  001330  22DD               	addwfc	postdec2,f,c
 42403                           
 42404                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 710:                
      +                               break;
 42405  001332  D02B               	goto	i2l17551
 42406  001334                     i2l17545:
 42407                           
 42408                           ; BSR set to: 0
 42409                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 42410  001334  0E00               	movlw	0
 42411  001336  6F73               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 42412  001338  0E01               	movlw	1
 42413  00133A                     L17:
 42414  00133A  6F72               	movwf	i2vfpfcnvrt@done& (0+255),b
 42415                           
 42416                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 42417  00133C  D026               	goto	i2l17551
 42418  00133E                     i2l17549:
 42419                           
 42420                           ; BSR set to: 0
 42421  00133E  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42422  001344  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42423  00134A  006F FF7B FFF6     	movff	postinc2,tblptrl
 42424  001350  006F FF77 FFF7     	movff	postdec2,tblptrh
 42425  001356                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42426  001356  6AF8               	clrf	tblptru,c
 42427  001358                     	endif
 42428  001358                     	if	0	;tblptru may be non-zero
 42429  001358                     	endif
 42430  001358  0008               	tblrd		*
 42431  00135A  50F5               	movf	tablat,w,c
 42432  00135C  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 42433  00135E  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
 42434                           
 42435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42436                           ; Switch size 1, requested type "simple"
 42437                           ; Number of cases is 1, Range of values is 0 to 0
 42438                           ; switch strategies available:
 42439                           ; Name         Instructions Cycles
 42440                           ; simple_byte            4     3 (average)
 42441                           ;	Chosen strategy is simple_byte
 42442  001360  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 42443  001362  0A00               	xorlw	0	; case 0
 42444  001364  A4D8               	btfss	status,2,c
 42445  001366  D7E6               	goto	i2l17545
 42446                           
 42447                           ; BSR set to: 0
 42448                           ; Switch size 1, requested type "simple"
 42449                           ; Number of cases is 5, Range of values is 32 to 48
 42450                           ; switch strategies available:
 42451                           ; Name         Instructions Cycles
 42452                           ; simple_byte           16     9 (average)
 42453                           ;	Chosen strategy is simple_byte
 42454  001368  504B               	movf	??i2_vfpfcnvrt^0,w,c
 42455  00136A  0A20               	xorlw	32	; case 32
 42456  00136C  B4D8               	btfsc	status,2,c
 42457  00136E  D7D3               	goto	i2l17537
 42458  001370  0A03               	xorlw	3	; case 35
 42459  001372  B4D8               	btfsc	status,2,c
 42460  001374  D7D3               	goto	i2l17541
 42461  001376  0A08               	xorlw	8	; case 43
 42462  001378  B4D8               	btfsc	status,2,c
 42463  00137A  D7CA               	goto	i2l17533
 42464  00137C  0A06               	xorlw	6	; case 45
 42465  00137E  B4D8               	btfsc	status,2,c
 42466  001380  D7C1               	goto	i2l17525
 42467  001382  0A1D               	xorlw	29	; case 48
 42468  001384  B4D8               	btfsc	status,2,c
 42469  001386  D7C1               	goto	i2l17529
 42470  001388  D7D5               	goto	i2l17545
 42471  00138A                     i2l17551:
 42472                           
 42473                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 42474  00138A  0100               	movlb	0	; () banked
 42475  00138C  5172               	movf	i2vfpfcnvrt@done& (0+255),w,b
 42476  00138E  1173               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 42477  001390  B4D8               	btfsc	status,2,c
 42478  001392  D7D5               	goto	i2l17549
 42479                           
 42480                           ; BSR set to: 0
 42481                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 42482  001394  0101               	movlb	1	; () banked
 42483  001396  B1CB               	btfsc	_flags& (0+255),0,b
 42484                           
 42485                           ; BSR set to: 1
 42486                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 42487  001398  93CB               	bcf	_flags& (0+255),1,b
 42488                           
 42489                           ; BSR set to: 1
 42490                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 42491  00139A  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42492  0013A0  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42493  0013A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 42494  0013AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 42495  0013B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42496  0013B2  6AF8               	clrf	tblptru,c
 42497  0013B4                     	endif
 42498  0013B4                     	if	0	;tblptru may be non-zero
 42499  0013B4                     	endif
 42500  0013B4  0008               	tblrd		*
 42501  0013B6  50F5               	movf	tablat,w,c
 42502  0013B8  0A2A               	xorlw	42
 42503  0013BA  A4D8               	btfss	status,2,c
 42504  0013BC  D02D               	goto	i2l17563
 42505                           
 42506                           ; BSR set to: 1
 42507                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 42508  0013BE  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42509  0013C4  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42510  0013CA  2ADE               	incf	postinc2,f,c
 42511  0013CC  0E00               	movlw	0
 42512  0013CE  22DD               	addwfc	postdec2,f,c
 42513                           
 42514                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 42515  0013D0  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42516  0013D6  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42517  0013DC  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42518  0013E2  0E02               	movlw	2
 42519  0013E4  26DE               	addwf	postinc2,f,c
 42520  0013E6  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42521  0013EC  0E00               	movlw	0
 42522  0013EE  22DD               	addwfc	postdec2,f,c
 42523  0013F0  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42524  0013F6  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42525  0013FC  006F FF78  F1C7    	movff	postinc2,_width
 42526  001402  006F FF74  F1C8    	movff	postdec2,_width+1
 42527                           
 42528                           ; BSR set to: 1
 42529                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 42530  001408  AFC8               	btfss	(_width+1)& (0+255),7,b
 42531  00140A  D04D               	goto	i2u1674_40
 42532                           
 42533                           ; BSR set to: 1
 42534                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 42535  00140C  81CB               	bsf	_flags& (0+255),0,b
 42536                           
 42537                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 42538  00140E  6DC7               	negf	_width& (0+255),b
 42539  001410  1FC8               	comf	(_width+1)& (0+255),f,b
 42540  001412  B0D8               	btfsc	status,0,c
 42541  001414  2BC8               	incf	(_width+1)& (0+255),f,b
 42542  001416  D047               	goto	i2u1674_40
 42543  001418                     i2l17563:
 42544                           
 42545                           ; BSR set to: 1
 42546                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 42547  001418  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42548  00141E  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42549  001424  006F FF78  F008    	movff	postinc2,i2atoi@s
 42550  00142A  006F FF74  F009    	movff	postdec2,i2atoi@s+1
 42551  001430  EC69  F02B         	call	i2_atoi	;wreg free
 42552  001434  0060  F020  F1C7   	movff	?i2_atoi,_width
 42553  00143A  0060  F024  F1C8   	movff	?i2_atoi+1,_width+1
 42554                           
 42555                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 42556  001440  D009               	goto	i2l17567
 42557  001442                     i2l17565:
 42558                           
 42559                           ; BSR set to: 0
 42560                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 42561  001442  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42562  001448  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42563  00144E  2ADE               	incf	postinc2,f,c
 42564  001450  0E00               	movlw	0
 42565  001452  22DD               	addwfc	postdec2,f,c
 42566  001454                     i2l17567:
 42567  001454  0ED0               	movlw	208
 42568  001456  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 42569  001458  0EFF               	movlw	255
 42570  00145A  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 42571  00145C  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42572  001462  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42573  001468  006F FF7B FFF6     	movff	postinc2,tblptrl
 42574  00146E  006F FF77 FFF7     	movff	postdec2,tblptrh
 42575  001474                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42576  001474  6AF8               	clrf	tblptru,c
 42577  001476                     	endif
 42578  001476                     	if	0	;tblptru may be non-zero
 42579  001476                     	endif
 42580  001476  0008               	tblrd		*
 42581  001478  50F5               	movf	tablat,w,c
 42582  00147A  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 42583  00147C  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 42584  00147E  504B               	movf	??i2_vfpfcnvrt^0,w,c
 42585  001480  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 42586  001482  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 42587  001484  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 42588  001486  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 42589  001488  E106               	bnz	i2u1672_40
 42590  00148A  0E0A               	movlw	10
 42591  00148C  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 42592  00148E  B0D8               	btfsc	status,0,c
 42593  001490  D002               	goto	i2u1672_40
 42594  001492  0E01               	movlw	1
 42595  001494  D001               	goto	i2u1673_40
 42596  001496                     i2u1672_40:
 42597  001496  0E00               	movlw	0
 42598  001498                     i2u1673_40:
 42599  001498  0100               	movlb	0	; () banked
 42600  00149A  6F74               	movwf	i2_vfpfcnvrt$5214& (0+255),b
 42601  00149C  6B75               	clrf	(i2_vfpfcnvrt$5214+1)& (0+255),b
 42602                           
 42603                           ; BSR set to: 0
 42604  00149E  5174               	movf	i2_vfpfcnvrt$5214& (0+255),w,b
 42605  0014A0  1175               	iorwf	(i2_vfpfcnvrt$5214+1)& (0+255),w,b
 42606  0014A2  A4D8               	btfss	status,2,c
 42607  0014A4  D7CE               	goto	i2l17565
 42608  0014A6                     i2u1674_40:
 42609                           
 42610                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 42611  0014A6  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42612  0014AC  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42613  0014B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 42614  0014B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 42615  0014BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42616  0014BE  6AF8               	clrf	tblptru,c
 42617  0014C0                     	endif
 42618  0014C0                     	if	0	;tblptru may be non-zero
 42619  0014C0                     	endif
 42620  0014C0  0008               	tblrd		*
 42621  0014C2  50F5               	movf	tablat,w,c
 42622  0014C4  0A63               	xorlw	99
 42623  0014C6  A4D8               	btfss	status,2,c
 42624  0014C8  D034               	goto	i2l17581
 42625                           
 42626                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 42627  0014CA  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42628  0014D0  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42629  0014D6  2ADE               	incf	postinc2,f,c
 42630  0014D8  0E00               	movlw	0
 42631  0014DA  22DD               	addwfc	postdec2,f,c
 42632                           
 42633                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 42634  0014DC  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42635  0014E2  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42636  0014E8  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42637  0014EE  0E02               	movlw	2
 42638  0014F0  26DE               	addwf	postinc2,f,c
 42639  0014F2  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42640  0014F8  0E00               	movlw	0
 42641  0014FA  22DD               	addwfc	postdec2,f,c
 42642  0014FC  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42643  001502  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42644  001508  50DF               	movf	indf2,w,c
 42645  00150A  0100               	movlb	0	; () banked
 42646  00150C  6F76               	movwf	i2vfpfcnvrt@c& (0+255),b
 42647                           
 42648                           ; BSR set to: 0
 42649                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 42650  00150E  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 42651  001514  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 42652  00151A  0060  F1D8  F020   	movff	i2vfpfcnvrt@c,i2ctoa@c
 42653  001520  EC62  F045         	call	i2_ctoa	;wreg free
 42654  001524  0060  F078  F045   	movff	?i2_ctoa,?i2_vfpfcnvrt
 42655  00152A  0060  F07C  F046   	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 42656  001530  0012               	return	
 42657  001532                     i2l17581:
 42658                           
 42659                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 42660  001532  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42661  001538  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42662  00153E  006F FF7B FFF6     	movff	postinc2,tblptrl
 42663  001544  006F FF77 FFF7     	movff	postdec2,tblptrh
 42664  00154A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42665  00154A  6AF8               	clrf	tblptru,c
 42666  00154C                     	endif
 42667  00154C                     	if	0	;tblptru may be non-zero
 42668  00154C                     	endif
 42669  00154C  0008               	tblrd		*
 42670  00154E  50F5               	movf	tablat,w,c
 42671  001550  0A64               	xorlw	100
 42672  001552  B4D8               	btfsc	status,2,c
 42673  001554  D012               	goto	i2u1677_40
 42674  001556  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42675  00155C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42676  001562  006F FF7B FFF6     	movff	postinc2,tblptrl
 42677  001568  006F FF77 FFF7     	movff	postdec2,tblptrh
 42678  00156E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42679  00156E  6AF8               	clrf	tblptru,c
 42680  001570                     	endif
 42681  001570                     	if	0	;tblptru may be non-zero
 42682  001570                     	endif
 42683  001570  0008               	tblrd		*
 42684  001572  50F5               	movf	tablat,w,c
 42685  001574  0A69               	xorlw	105
 42686  001576  A4D8               	btfss	status,2,c
 42687  001578  D056               	goto	i2l17591
 42688  00157A                     i2u1677_40:
 42689                           
 42690                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 42691  00157A  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42692  001580  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42693  001586  2ADE               	incf	postinc2,f,c
 42694  001588  0E00               	movlw	0
 42695  00158A  22DD               	addwfc	postdec2,f,c
 42696                           
 42697                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 42698  00158C  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42699  001592  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42700  001598  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42701  00159E  0E02               	movlw	2
 42702  0015A0  26DE               	addwf	postinc2,f,c
 42703  0015A2  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42704  0015A8  0E00               	movlw	0
 42705  0015AA  22DD               	addwfc	postdec2,f,c
 42706  0015AC  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42707  0015B2  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42708  0015B8  006F FF78  F060    	movff	postinc2,i2vfpfcnvrt@ll
 42709  0015BE  006F FF74  F061    	movff	postdec2,i2vfpfcnvrt@ll+1
 42710  0015C4  0100               	movlb	0	; () banked
 42711  0015C6  0E00               	movlw	0
 42712  0015C8  BF61               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 42713  0015CA  0EFF               	movlw	-1
 42714  0015CC  6F62               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 42715  0015CE  6F63               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 42716  0015D0  6F64               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 42717  0015D2  6F65               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 42718  0015D4  6F66               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 42719  0015D6  6F67               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 42720                           
 42721                           ; BSR set to: 0
 42722                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 42723  0015D8  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 42724  0015DE  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 42725  0015E4  0060  F180  F020   	movff	i2vfpfcnvrt@ll,i2dtoa@d
 42726  0015EA  0060  F184  F021   	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 42727  0015F0  0060  F188  F022   	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 42728  0015F6  0060  F18C  F023   	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 42729  0015FC  0060  F190  F024   	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 42730  001602  0060  F194  F025   	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 42731  001608  0060  F198  F026   	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 42732  00160E  0060  F19C  F027   	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 42733  001614  EC14  F01A         	call	i2_dtoa	;wreg free
 42734  001618  0060  F078  F045   	movff	?i2_dtoa,?i2_vfpfcnvrt
 42735  00161E  0060  F07C  F046   	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 42736  001624  0012               	return	
 42737  001626                     i2l17591:
 42738                           
 42739                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*f
      +                          mt[0] == 's') {
 42740  001626  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42741  00162C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42742  001632  006F FF7B FFF6     	movff	postinc2,tblptrl
 42743  001638  006F FF77 FFF7     	movff	postdec2,tblptrh
 42744  00163E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42745  00163E  6AF8               	clrf	tblptru,c
 42746  001640                     	endif
 42747  001640                     	if	0	;tblptru may be non-zero
 42748  001640                     	endif
 42749  001640  0008               	tblrd		*
 42750  001642  50F5               	movf	tablat,w,c
 42751  001644  0A73               	xorlw	115
 42752  001646  A4D8               	btfss	status,2,c
 42753  001648  D03A               	goto	i2l17599
 42754                           
 42755                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++
      +                          *fmt;
 42756  00164A  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42757  001650  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42758  001656  2ADE               	incf	postinc2,f,c
 42759  001658  0E00               	movlw	0
 42760  00165A  22DD               	addwfc	postdec2,f,c
 42761                           
 42762                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 42763  00165C  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42764  001662  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42765  001668  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42766  00166E  0E02               	movlw	2
 42767  001670  26DE               	addwf	postinc2,f,c
 42768  001672  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42769  001678  0E00               	movlw	0
 42770  00167A  22DD               	addwfc	postdec2,f,c
 42771  00167C  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42772  001682  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42773  001688  006F FF78  F070    	movff	postinc2,i2vfpfcnvrt@cp
 42774  00168E  006F FF74  F071    	movff	postdec2,i2vfpfcnvrt@cp+1
 42775                           
 42776                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             re
      +                          turn stoa(fp, cp);
 42777  001694  0060  F114  F00C   	movff	i2vfpfcnvrt@fp,i2stoa@fp
 42778  00169A  0060  F118  F00D   	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 42779  0016A0  0060  F1C0  F00E   	movff	i2vfpfcnvrt@cp,i2stoa@s
 42780  0016A6  0060  F1C4  F00F   	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 42781  0016AC  ECF5  F029         	call	i2_stoa	;wreg free
 42782  0016B0  0060  F030  F045   	movff	?i2_stoa,?i2_vfpfcnvrt
 42783  0016B6  0060  F034  F046   	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 42784  0016BC  0012               	return	
 42785  0016BE                     i2l17599:
 42786                           
 42787                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 42788  0016BE  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42789  0016C4  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42790  0016CA  006F FF7B FFF6     	movff	postinc2,tblptrl
 42791  0016D0  006F FF77 FFF7     	movff	postdec2,tblptrh
 42792  0016D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42793  0016D6  6AF8               	clrf	tblptru,c
 42794  0016D8                     	endif
 42795  0016D8                     	if	0	;tblptru may be non-zero
 42796  0016D8                     	endif
 42797  0016D8  0008               	tblrd		*
 42798  0016DA  50F5               	movf	tablat,w,c
 42799  0016DC  0A78               	xorlw	120
 42800  0016DE  B4D8               	btfsc	status,2,c
 42801  0016E0  D012               	goto	i2u1680_40
 42802  0016E2  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42803  0016E8  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42804  0016EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 42805  0016F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 42806  0016FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42807  0016FA  6AF8               	clrf	tblptru,c
 42808  0016FC                     	endif
 42809  0016FC                     	if	0	;tblptru may be non-zero
 42810  0016FC                     	endif
 42811  0016FC  0008               	tblrd		*
 42812  0016FE  50F5               	movf	tablat,w,c
 42813  001700  0A58               	xorlw	88
 42814  001702  A4D8               	btfss	status,2,c
 42815  001704  D06D               	goto	i2l17613
 42816  001706                     i2u1680_40:
 42817                           
 42818                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 42819  001706  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42820  00170C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42821  001712  006F FF7B FFF6     	movff	postinc2,tblptrl
 42822  001718  006F FF77 FFF7     	movff	postdec2,tblptrh
 42823  00171E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42824  00171E  6AF8               	clrf	tblptru,c
 42825  001720                     	endif
 42826  001720                     	if	0	;tblptru may be non-zero
 42827  001720                     	endif
 42828  001720  0008               	tblrd		*
 42829  001722  006F FFD4  F076    	movff	tablat,i2vfpfcnvrt@c
 42830                           
 42831                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 42832  001728  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42833  00172E  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42834  001734  2ADE               	incf	postinc2,f,c
 42835  001736  0E00               	movlw	0
 42836  001738  22DD               	addwfc	postdec2,f,c
 42837                           
 42838                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 42839  00173A  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 42840  001740  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 42841  001746  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 42842  00174C  0E02               	movlw	2
 42843  00174E  26DE               	addwf	postinc2,f,c
 42844  001750  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 42845  001756  0E00               	movlw	0
 42846  001758  22DD               	addwfc	postdec2,f,c
 42847  00175A  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 42848  001760  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 42849  001766  006F FF78  F04D    	movff	postinc2,??i2_vfpfcnvrt+2
 42850  00176C  006F FF74  F04E    	movff	postdec2,??i2_vfpfcnvrt+3
 42851  001772  0060  F134  F068   	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 42852  001778  0060  F138  F069   	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 42853  00177E  0100               	movlb	0	; () banked
 42854  001780  6B6A               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 42855  001782  6B6B               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 42856  001784  6B6C               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 42857  001786  6B6D               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 42858  001788  6B6E               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 42859  00178A  6B6F               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 42860                           
 42861                           ; BSR set to: 0
 42862                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 42863  00178C  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 42864  001792  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 42865  001798  0060  F1A0  F020   	movff	i2vfpfcnvrt@llu,i2xtoa@d
 42866  00179E  0060  F1A4  F021   	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 42867  0017A4  0060  F1A8  F022   	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 42868  0017AA  0060  F1AC  F023   	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 42869  0017B0  0060  F1B0  F024   	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 42870  0017B6  0060  F1B4  F025   	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 42871  0017BC  0060  F1B8  F026   	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 42872  0017C2  0060  F1BC  F027   	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 42873  0017C8  0060  F1D8  F028   	movff	i2vfpfcnvrt@c,i2xtoa@x
 42874  0017CE  ECC4  F01C         	call	i2_xtoa	;wreg free
 42875  0017D2  0060  F078  F045   	movff	?i2_xtoa,?i2_vfpfcnvrt
 42876  0017D8  0060  F07C  F046   	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 42877  0017DE  0012               	return	
 42878  0017E0                     i2l17613:
 42879                           
 42880                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 42881  0017E0  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42882  0017E6  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42883  0017EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 42884  0017F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 42885  0017F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42886  0017F8  6AF8               	clrf	tblptru,c
 42887  0017FA                     	endif
 42888  0017FA                     	if	0	;tblptru may be non-zero
 42889  0017FA                     	endif
 42890  0017FA  0008               	tblrd		*
 42891  0017FC  50F5               	movf	tablat,w,c
 42892  0017FE  0A25               	xorlw	37
 42893  001800  A4D8               	btfss	status,2,c
 42894  001802  D01A               	goto	i2l17623
 42895                           
 42896                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 42897  001804  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42898  00180A  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42899  001810  2ADE               	incf	postinc2,f,c
 42900  001812  0E00               	movlw	0
 42901  001814  22DD               	addwfc	postdec2,f,c
 42902                           
 42903                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 42904  001816  0E00               	movlw	0
 42905  001818  6E04               	movwf	(i2fputc@c+1)^0,c
 42906  00181A  0E25               	movlw	37
 42907  00181C  6E03               	movwf	i2fputc@c^0,c
 42908  00181E  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 42909  001824  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 42910  00182A  EC25  F03A         	call	i2_fputc	;wreg free
 42911  00182E                     i2l17619:
 42912                           
 42913                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 42914  00182E  0E00               	movlw	0
 42915  001830  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 42916  001832  0E01               	movlw	1
 42917  001834  6E45               	movwf	?i2_vfpfcnvrt^0,c
 42918  001836  0012               	return	
 42919  001838                     i2l17623:
 42920                           
 42921                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 42922  001838  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42923  00183E  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42924  001844  2ADE               	incf	postinc2,f,c
 42925  001846  0E00               	movlw	0
 42926  001848  22DD               	addwfc	postdec2,f,c
 42927                           
 42928                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 42929  00184A  0E00               	movlw	0
 42930  00184C  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 42931  00184E  0E00               	movlw	0
 42932  001850  6E45               	movwf	?i2_vfpfcnvrt^0,c
 42933  001852  0012               	return	
 42934  001854                     i2l17629:
 42935                           
 42936                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 42937  001854  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42938  00185A  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42939  001860  006F FF7B FFF6     	movff	postinc2,tblptrl
 42940  001866  006F FF77 FFF7     	movff	postdec2,tblptrh
 42941  00186C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42942  00186C  6AF8               	clrf	tblptru,c
 42943  00186E                     	endif
 42944  00186E                     	if	0	;tblptru may be non-zero
 42945  00186E                     	endif
 42946  00186E  0008               	tblrd		*
 42947  001870  50F5               	movf	tablat,w,c
 42948  001872  6E03               	movwf	i2fputc@c^0,c
 42949  001874  6A04               	clrf	(i2fputc@c+1)^0,c
 42950  001876  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 42951  00187C  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 42952  001882  EC25  F03A         	call	i2_fputc	;wreg free
 42953                           
 42954                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 42955  001886  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 42956  00188C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 42957  001892  2ADE               	incf	postinc2,f,c
 42958  001894  0E00               	movlw	0
 42959  001896  22DD               	addwfc	postdec2,f,c
 42960  001898  D7CA               	goto	i2l17619
 42961  00189A                     __end_ofi2_vfpfcnvrt:
 42962                           	opt callstack 0
 42963                           
 42964 ;; *************** function i2_xtoa *****************
 42965 ;; Defined at:
 42966 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 42967 ;; Parameters:    Size  Location     Type
 42968 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 42969 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 42970 ;;  d               8   31[COMRAM] unsigned long long 
 42971 ;;  x               1   39[COMRAM] unsigned char 
 42972 ;; Auto vars:     Size  Location     Type
 42973 ;;  xtoa            8   56[COMRAM] unsigned long long 
 42974 ;;  xtoa            2   66[COMRAM] int 
 42975 ;;  xtoa            2   64[COMRAM] int 
 42976 ;;  xtoa            2   54[COMRAM] int 
 42977 ;;  xtoa            2   52[COMRAM] int 
 42978 ;; Return value:  Size  Location     Type
 42979 ;;                  2   29[COMRAM] int 
 42980 ;; Registers used:
 42981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42982 ;; Tracked objects:
 42983 ;;		On entry : 3F/0
 42984 ;;		On exit  : 0/0
 42985 ;;		Unchanged: 0/0
 42986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42987 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42988 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42989 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42990 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42991 ;;Total ram usage:       39 bytes
 42992 ;; Hardware stack levels used:    1
 42993 ;; Hardware stack levels required when called:    5
 42994 ;; This function calls:
 42995 ;;		i2_isalpha
 42996 ;;		i2_isupper
 42997 ;;		i2_pad
 42998 ;;		i2_toupper
 42999 ;; This function is called by:
 43000 ;;		i2_vfpfcnvrt
 43001 ;; This function uses a non-reentrant model
 43002 ;;
 43003                           
 43004                           	psect	text355
 43005  003988                     __ptext355:
 43006                           	opt callstack 0
 43007  003988                     i2_xtoa:
 43008                           	opt callstack 6
 43009                           
 43010                           ; BSR set to: 0
 43011                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 43012                           
 43013                           ;incstack = 0
 43014  003988  0101               	movlb	1	; () banked
 43015  00398A  AFCA               	btfss	(_prec+1)& (0+255),7,b
 43016                           
 43017                           ; BSR set to: 1
 43018                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 43019  00398C  93CB               	bcf	_flags& (0+255),1,b
 43020                           
 43021                           ; BSR set to: 1
 43022                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 43023  00398E  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 43024  003990  D005               	goto	i2u1615_40
 43025  003992  51CA               	movf	(_prec+1)& (0+255),w,b
 43026  003994  E108               	bnz	i2l3539
 43027  003996  05C9               	decf	_prec& (0+255),w,b
 43028  003998  B0D8               	btfsc	status,0,c
 43029  00399A  D005               	goto	i2l3539
 43030  00399C                     i2u1615_40:
 43031                           
 43032                           ; BSR set to: 1
 43033  00399C  0E00               	movlw	0
 43034  00399E  6E36               	movwf	(i2xtoa@p+1)^0,c
 43035  0039A0  0E01               	movlw	1
 43036  0039A2  6E35               	movwf	i2xtoa@p^0,c
 43037  0039A4  D006               	goto	i2l3541
 43038  0039A6                     i2l3539:
 43039                           
 43040                           ; BSR set to: 1
 43041  0039A6  0060  F724  F035   	movff	_prec,i2xtoa@p
 43042  0039AC  0060  F728  F036   	movff	_prec+1,i2xtoa@p+1
 43043  0039B2                     i2l3541:
 43044                           
 43045                           ; BSR set to: 1
 43046                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 43047  0039B2  0060  F71C  F037   	movff	_width,i2xtoa@w
 43048  0039B8  0060  F720  F038   	movff	_width+1,i2xtoa@w+1
 43049                           
 43050                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 43051  0039BE  A9CB               	btfss	_flags& (0+255),4,b
 43052  0039C0  D004               	goto	i2l17269
 43053                           
 43054                           ; BSR set to: 1
 43055                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 43056  0039C2  0EFE               	movlw	254
 43057  0039C4  2637               	addwf	i2xtoa@w^0,f,c
 43058  0039C6  0EFF               	movlw	255
 43059  0039C8  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 43060  0039CA                     i2l17269:
 43061                           
 43062                           ; BSR set to: 1
 43063                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 43064  0039CA  0060  F080  F039   	movff	i2xtoa@d,i2xtoa@n
 43065  0039D0  0060  F084  F03A   	movff	i2xtoa@d+1,i2xtoa@n+1
 43066  0039D6  0060  F088  F03B   	movff	i2xtoa@d+2,i2xtoa@n+2
 43067  0039DC  0060  F08C  F03C   	movff	i2xtoa@d+3,i2xtoa@n+3
 43068  0039E2  0060  F090  F03D   	movff	i2xtoa@d+4,i2xtoa@n+4
 43069  0039E8  0060  F094  F03E   	movff	i2xtoa@d+5,i2xtoa@n+5
 43070  0039EE  0060  F098  F03F   	movff	i2xtoa@d+6,i2xtoa@n+6
 43071  0039F4  0060  F09C  F040   	movff	i2xtoa@d+7,i2xtoa@n+7
 43072                           
 43073                           ; BSR set to: 1
 43074                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 43075  0039FA  0E00               	movlw	0
 43076  0039FC  6E42               	movwf	(i2xtoa@i+1)^0,c
 43077  0039FE  0E1F               	movlw	31
 43078  003A00  6E41               	movwf	i2xtoa@i^0,c
 43079                           
 43080                           ; BSR set to: 1
 43081                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 43082  003A02  0E00               	movlw	0
 43083  003A04  0103               	movlb	3	; () banked
 43084  003A06  6FA8               	movwf	(_dbuf+31)& (0+255),b
 43085                           
 43086                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 43087  003A08  D0A8               	goto	i2l17305
 43088  003A0A                     i2l17275:
 43089                           
 43090                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 43091  003A0A  0641               	decf	i2xtoa@i^0,f,c
 43092  003A0C  A0D8               	btfss	status,0,c
 43093  003A0E  0642               	decf	(i2xtoa@i+1)^0,f,c
 43094                           
 43095                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 43096  003A10  0E0F               	movlw	15
 43097  003A12  1439               	andwf	i2xtoa@n^0,w,c
 43098  003A14  6E43               	movwf	i2xtoa@c^0,c
 43099  003A16  6A44               	clrf	(i2xtoa@c+1)^0,c
 43100                           
 43101                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 43102  003A18  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 43103  003A1A  D008               	goto	i2l17283
 43104  003A1C  5044               	movf	(i2xtoa@c+1)^0,w,c
 43105  003A1E  E104               	bnz	i2u1617_40
 43106  003A20  0E0A               	movlw	10
 43107  003A22  5C43               	subwf	i2xtoa@c^0,w,c
 43108  003A24  A0D8               	btfss	status,0,c
 43109  003A26  D002               	goto	i2l17283
 43110  003A28                     i2u1617_40:
 43111  003A28  0E57               	movlw	87
 43112  003A2A  D001               	goto	L18
 43113  003A2C                     i2l17283:
 43114  003A2C  0E30               	movlw	48
 43115  003A2E                     L18:
 43116  003A2E  2443               	addwf	i2xtoa@c^0,w,c
 43117  003A30  6E43               	movwf	i2xtoa@c^0,c
 43118  003A32  0E00               	movlw	0
 43119  003A34  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 43120  003A36  6E44               	movwf	(i2xtoa@c+1)^0,c
 43121                           
 43122                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 43123  003A38  0EBF               	movlw	191
 43124  003A3A  6E29               	movwf	??i2_xtoa^0,c
 43125  003A3C  0EFF               	movlw	255
 43126  003A3E  6E2A               	movwf	(??i2_xtoa+1)^0,c
 43127  003A40  5028               	movf	i2xtoa@x^0,w,c
 43128  003A42  6E2B               	movwf	(??i2_xtoa+2)^0,c
 43129  003A44  6A2C               	clrf	(??i2_xtoa+3)^0,c
 43130  003A46  5029               	movf	??i2_xtoa^0,w,c
 43131  003A48  262B               	addwf	(??i2_xtoa+2)^0,f,c
 43132  003A4A  502A               	movf	(??i2_xtoa+1)^0,w,c
 43133  003A4C  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 43134  003A4E  502C               	movf	(??i2_xtoa+3)^0,w,c
 43135  003A50  E106               	bnz	i2u1618_40
 43136  003A52  0E1A               	movlw	26
 43137  003A54  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 43138  003A56  B0D8               	btfsc	status,0,c
 43139  003A58  D002               	goto	i2u1618_40
 43140  003A5A  0E01               	movlw	1
 43141  003A5C  D001               	goto	i2u1619_40
 43142  003A5E                     i2u1618_40:
 43143  003A5E  0E00               	movlw	0
 43144  003A60                     i2u1619_40:
 43145  003A60  6E31               	movwf	i2_xtoa$5199^0,c
 43146  003A62  6A32               	clrf	(i2_xtoa$5199+1)^0,c
 43147  003A64  5031               	movf	i2_xtoa$5199^0,w,c
 43148  003A66  1032               	iorwf	(i2_xtoa$5199+1)^0,w,c
 43149  003A68  B4D8               	btfsc	status,2,c
 43150  003A6A  D02B               	goto	i2l17297
 43151  003A6C  0E9F               	movlw	159
 43152  003A6E  6E29               	movwf	??i2_xtoa^0,c
 43153  003A70  0EFF               	movlw	255
 43154  003A72  6E2A               	movwf	(??i2_xtoa+1)^0,c
 43155  003A74  0E20               	movlw	32
 43156  003A76  1043               	iorwf	i2xtoa@c^0,w,c
 43157  003A78  6E2B               	movwf	(??i2_xtoa+2)^0,c
 43158  003A7A  0E00               	movlw	0
 43159  003A7C  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 43160  003A7E  6E2C               	movwf	(??i2_xtoa+3)^0,c
 43161  003A80  5029               	movf	??i2_xtoa^0,w,c
 43162  003A82  262B               	addwf	(??i2_xtoa+2)^0,f,c
 43163  003A84  502A               	movf	(??i2_xtoa+1)^0,w,c
 43164  003A86  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 43165  003A88  502C               	movf	(??i2_xtoa+3)^0,w,c
 43166  003A8A  E106               	bnz	i2u1621_40
 43167  003A8C  0E1A               	movlw	26
 43168  003A8E  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 43169  003A90  B0D8               	btfsc	status,0,c
 43170  003A92  D002               	goto	i2u1621_40
 43171  003A94  0E01               	movlw	1
 43172  003A96  D001               	goto	i2u1622_40
 43173  003A98                     i2u1621_40:
 43174  003A98  0E00               	movlw	0
 43175  003A9A                     i2u1622_40:
 43176  003A9A  6E33               	movwf	i2_xtoa$5200^0,c
 43177  003A9C  6A34               	clrf	(i2_xtoa$5200+1)^0,c
 43178  003A9E  5033               	movf	i2_xtoa$5200^0,w,c
 43179  003AA0  1034               	iorwf	(i2_xtoa$5200+1)^0,w,c
 43180  003AA2  B4D8               	btfsc	status,2,c
 43181  003AA4  D00E               	goto	i2l17297
 43182                           
 43183                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 43184  003AA6  0060  F10C  F007   	movff	i2xtoa@c,i2toupper@c
 43185  003AAC  0060  F110  F008   	movff	i2xtoa@c+1,i2toupper@c+1
 43186  003AB2  EC6E  F047         	call	i2_toupper	;wreg free
 43187  003AB6  0060  F01C  F043   	movff	?i2_toupper,i2xtoa@c
 43188  003ABC  0060  F020  F044   	movff	?i2_toupper+1,i2xtoa@c+1
 43189  003AC2                     i2l17297:
 43190                           
 43191                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 43192  003AC2  0E89               	movlw	low _dbuf
 43193  003AC4  2441               	addwf	i2xtoa@i^0,w,c
 43194  003AC6  6ED9               	movwf	fsr2l,c
 43195  003AC8  0E03               	movlw	high _dbuf
 43196  003ACA  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43197  003ACC  6EDA               	movwf	fsr2h,c
 43198  003ACE  0060  F10F  FFDF   	movff	i2xtoa@c,indf2
 43199                           
 43200                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 43201  003AD4  0635               	decf	i2xtoa@p^0,f,c
 43202  003AD6  A0D8               	btfss	status,0,c
 43203  003AD8  0636               	decf	(i2xtoa@p+1)^0,f,c
 43204                           
 43205                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 43206  003ADA  0637               	decf	i2xtoa@w^0,f,c
 43207  003ADC  A0D8               	btfss	status,0,c
 43208  003ADE  0638               	decf	(i2xtoa@w+1)^0,f,c
 43209                           
 43210                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 43211  003AE0  0060  F0E4  F029   	movff	i2xtoa@n,??i2_xtoa
 43212  003AE6  0060  F0E8  F02A   	movff	i2xtoa@n+1,??i2_xtoa+1
 43213  003AEC  0060  F0EC  F02B   	movff	i2xtoa@n+2,??i2_xtoa+2
 43214  003AF2  0060  F0F0  F02C   	movff	i2xtoa@n+3,??i2_xtoa+3
 43215  003AF8  0060  F0F4  F02D   	movff	i2xtoa@n+4,??i2_xtoa+4
 43216  003AFE  0060  F0F8  F02E   	movff	i2xtoa@n+5,??i2_xtoa+5
 43217  003B04  0060  F0FC  F02F   	movff	i2xtoa@n+6,??i2_xtoa+6
 43218  003B0A  0060  F100  F030   	movff	i2xtoa@n+7,??i2_xtoa+7
 43219  003B10  0E05               	movlw	5
 43220  003B12  D009               	goto	i2u1624_40
 43221  003B14                     i2u1624_45:
 43222  003B14  90D8               	bcf	status,0,c
 43223  003B16  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 43224  003B18  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 43225  003B1A  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 43226  003B1C  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 43227  003B1E  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 43228  003B20  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 43229  003B22  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 43230  003B24  3229               	rrcf	??i2_xtoa^0,f,c
 43231  003B26                     i2u1624_40:
 43232  003B26  2EE8               	decfsz	wreg,f,c
 43233  003B28  D7F5               	goto	i2u1624_45
 43234  003B2A  0060  F0A4  F039   	movff	??i2_xtoa,i2xtoa@n
 43235  003B30  0060  F0A8  F03A   	movff	??i2_xtoa+1,i2xtoa@n+1
 43236  003B36  0060  F0AC  F03B   	movff	??i2_xtoa+2,i2xtoa@n+2
 43237  003B3C  0060  F0B0  F03C   	movff	??i2_xtoa+3,i2xtoa@n+3
 43238  003B42  0060  F0B4  F03D   	movff	??i2_xtoa+4,i2xtoa@n+4
 43239  003B48  0060  F0B8  F03E   	movff	??i2_xtoa+5,i2xtoa@n+5
 43240  003B4E  0060  F0BC  F03F   	movff	??i2_xtoa+6,i2xtoa@n+6
 43241  003B54  0060  F0C0  F040   	movff	??i2_xtoa+7,i2xtoa@n+7
 43242  003B5A                     i2l17305:
 43243                           
 43244                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 43245  003B5A  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 43246  003B5C  D021               	goto	i2u1629_40
 43247  003B5E  5042               	movf	(i2xtoa@i+1)^0,w,c
 43248  003B60  E104               	bnz	i2u1625_40
 43249  003B62  0E02               	movlw	2
 43250  003B64  5C41               	subwf	i2xtoa@i^0,w,c
 43251  003B66  A0D8               	btfss	status,0,c
 43252  003B68  D01B               	goto	i2u1629_40
 43253  003B6A                     i2u1625_40:
 43254  003B6A  5039               	movf	i2xtoa@n^0,w,c
 43255  003B6C  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 43256  003B6E  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 43257  003B70  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 43258  003B72  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 43259  003B74  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 43260  003B76  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 43261  003B78  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 43262  003B7A  A4D8               	btfss	status,2,c
 43263  003B7C  D746               	goto	i2l17275
 43264  003B7E  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 43265  003B80  D005               	goto	i2u1627_40
 43266  003B82  5036               	movf	(i2xtoa@p+1)^0,w,c
 43267  003B84  E102               	bnz	i2u1627_41
 43268  003B86  0435               	decf	i2xtoa@p^0,w,c
 43269  003B88  B0D8               	btfsc	status,0,c
 43270  003B8A                     i2u1627_41:
 43271  003B8A  D73F               	goto	i2l17275
 43272  003B8C                     i2u1627_40:
 43273  003B8C  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 43274  003B8E  D008               	goto	i2u1629_40
 43275  003B90  5038               	movf	(i2xtoa@w+1)^0,w,c
 43276  003B92  E103               	bnz	i2u1628_40
 43277  003B94  0437               	decf	i2xtoa@w^0,w,c
 43278  003B96  A0D8               	btfss	status,0,c
 43279  003B98  D003               	goto	i2u1629_40
 43280  003B9A                     i2u1628_40:
 43281  003B9A  0101               	movlb	1	; () banked
 43282  003B9C  B3CB               	btfsc	_flags& (0+255),1,b
 43283  003B9E  D735               	goto	i2l17275
 43284  003BA0                     i2u1629_40:
 43285                           
 43286                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 43287  003BA0  0101               	movlb	1	; () banked
 43288  003BA2  A9CB               	btfss	_flags& (0+255),4,b
 43289  003BA4  D017               	goto	i2l17321
 43290                           
 43291                           ; BSR set to: 1
 43292                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 43293  003BA6  0641               	decf	i2xtoa@i^0,f,c
 43294  003BA8  A0D8               	btfss	status,0,c
 43295  003BAA  0642               	decf	(i2xtoa@i+1)^0,f,c
 43296                           
 43297                           ; BSR set to: 1
 43298                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 43299  003BAC  0E89               	movlw	low _dbuf
 43300  003BAE  2441               	addwf	i2xtoa@i^0,w,c
 43301  003BB0  6ED9               	movwf	fsr2l,c
 43302  003BB2  0E03               	movlw	high _dbuf
 43303  003BB4  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43304  003BB6  6EDA               	movwf	fsr2h,c
 43305  003BB8  0060  F0A3  FFDF   	movff	i2xtoa@x,indf2
 43306                           
 43307                           ; BSR set to: 1
 43308                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 43309  003BBE  0641               	decf	i2xtoa@i^0,f,c
 43310  003BC0  A0D8               	btfss	status,0,c
 43311  003BC2  0642               	decf	(i2xtoa@i+1)^0,f,c
 43312                           
 43313                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 43314  003BC4  0E89               	movlw	low _dbuf
 43315  003BC6  2441               	addwf	i2xtoa@i^0,w,c
 43316  003BC8  6ED9               	movwf	fsr2l,c
 43317  003BCA  0E03               	movlw	high _dbuf
 43318  003BCC  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43319  003BCE  6EDA               	movwf	fsr2h,c
 43320  003BD0  0E30               	movlw	48
 43321  003BD2  6EDF               	movwf	indf2,c
 43322  003BD4                     i2l17321:
 43323                           
 43324                           ; BSR set to: 1
 43325                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 43326  003BD4  0060  F078  F013   	movff	i2xtoa@fp,i2pad@fp
 43327  003BDA  0060  F07C  F014   	movff	i2xtoa@fp+1,i2pad@fp+1
 43328  003BE0  0E89               	movlw	low _dbuf
 43329  003BE2  2441               	addwf	i2xtoa@i^0,w,c
 43330  003BE4  6E15               	movwf	i2pad@buf^0,c
 43331  003BE6  0E03               	movlw	high _dbuf
 43332  003BE8  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43333  003BEA  6E16               	movwf	(i2pad@buf+1)^0,c
 43334  003BEC  0060  F0DC  F017   	movff	i2xtoa@w,i2pad@p
 43335  003BF2  0060  F0E0  F018   	movff	i2xtoa@w+1,i2pad@p+1
 43336  003BF8  EC0F  F038         	call	i2_pad	;wreg free
 43337  003BFC  0060  F04C  F01E   	movff	?i2_pad,?i2_xtoa
 43338  003C02  0060  F050  F01F   	movff	?i2_pad+1,?i2_xtoa+1
 43339  003C08  0012               	return		;funcret
 43340  003C0A                     __end_ofi2_xtoa:
 43341                           	opt callstack 0
 43342                           
 43343 ;; *************** function i2_toupper *****************
 43344 ;; Defined at:
 43345 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 43346 ;; Parameters:    Size  Location     Type
 43347 ;;  c               2    6[COMRAM] int 
 43348 ;; Auto vars:     Size  Location     Type
 43349 ;;		None
 43350 ;; Return value:  Size  Location     Type
 43351 ;;                  2    6[COMRAM] int 
 43352 ;; Registers used:
 43353 ;;		wreg, status,2, status,0
 43354 ;; Tracked objects:
 43355 ;;		On entry : 0/3
 43356 ;;		On exit  : 0/0
 43357 ;;		Unchanged: 0/0
 43358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43361 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43362 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43363 ;;Total ram usage:        8 bytes
 43364 ;; Hardware stack levels used:    1
 43365 ;; Hardware stack levels required when called:    1
 43366 ;; This function calls:
 43367 ;;		i2_islower
 43368 ;; This function is called by:
 43369 ;;		i2_xtoa
 43370 ;; This function uses a non-reentrant model
 43371 ;;
 43372                           
 43373                           	psect	text356
 43374  008EDC                     __ptext356:
 43375                           	opt callstack 0
 43376  008EDC                     i2_toupper:
 43377                           	opt callstack 9
 43378                           
 43379                           ;incstack = 0
 43380  008EDC  0E9F               	movlw	159
 43381  008EDE  6E09               	movwf	??i2_toupper^0,c
 43382  008EE0  0EFF               	movlw	255
 43383  008EE2  6E0A               	movwf	(??i2_toupper+1)^0,c
 43384  008EE4  0060  F01C  F00B   	movff	i2toupper@c,??i2_toupper+2
 43385  008EEA  0060  F020  F00C   	movff	i2toupper@c+1,??i2_toupper+3
 43386  008EF0  5009               	movf	??i2_toupper^0,w,c
 43387  008EF2  260B               	addwf	(??i2_toupper+2)^0,f,c
 43388  008EF4  500A               	movf	(??i2_toupper+1)^0,w,c
 43389  008EF6  220C               	addwfc	(??i2_toupper+3)^0,f,c
 43390  008EF8  500C               	movf	(??i2_toupper+3)^0,w,c
 43391  008EFA  E106               	bnz	i2u1580_40
 43392  008EFC  0E1A               	movlw	26
 43393  008EFE  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 43394  008F00  B0D8               	btfsc	status,0,c
 43395  008F02  D002               	goto	i2u1580_40
 43396  008F04  0E01               	movlw	1
 43397  008F06  D001               	goto	i2u1581_40
 43398  008F08                     i2u1580_40:
 43399  008F08  0E00               	movlw	0
 43400  008F0A                     i2u1581_40:
 43401  008F0A  6E0D               	movwf	i2_toupper$5789^0,c
 43402  008F0C  6A0E               	clrf	(i2_toupper$5789+1)^0,c
 43403  008F0E  500D               	movf	i2_toupper$5789^0,w,c
 43404  008F10  100E               	iorwf	(i2_toupper$5789+1)^0,w,c
 43405  008F12  B4D8               	btfsc	status,2,c
 43406  008F14  D005               	goto	i2l4393
 43407  008F16  0E5F               	movlw	95
 43408  008F18  1407               	andwf	i2toupper@c^0,w,c
 43409  008F1A  6E07               	movwf	?i2_toupper^0,c
 43410  008F1C  6A08               	clrf	(?i2_toupper+1)^0,c
 43411  008F1E  0012               	return	
 43412  008F20                     i2l4393:
 43413  008F20  0060  F01C  F007   	movff	i2toupper@c,?i2_toupper
 43414  008F26  0060  F020  F008   	movff	i2toupper@c+1,?i2_toupper+1
 43415  008F2C  0012               	return		;funcret
 43416  008F2E                     __end_ofi2_toupper:
 43417                           	opt callstack 0
 43418                           
 43419 ;; *************** function i2_islower *****************
 43420 ;; Defined at:
 43421 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 43422 ;; Parameters:    Size  Location     Type
 43423 ;;  c               2    0[COMRAM] int 
 43424 ;; Auto vars:     Size  Location     Type
 43425 ;;		None
 43426 ;; Return value:  Size  Location     Type
 43427 ;;                  2    0[COMRAM] int 
 43428 ;; Registers used:
 43429 ;;		wreg, status,2, status,0
 43430 ;; Tracked objects:
 43431 ;;		On entry : 0/0
 43432 ;;		On exit  : 0/0
 43433 ;;		Unchanged: 0/0
 43434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43437 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43438 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43439 ;;Total ram usage:        6 bytes
 43440 ;; Hardware stack levels used:    1
 43441 ;; This function calls:
 43442 ;;		Nothing
 43443 ;; This function is called by:
 43444 ;;		i2_toupper
 43445 ;; This function uses a non-reentrant model
 43446 ;;
 43447                           
 43448                           	psect	text357
 43449  009700                     __ptext357:
 43450                           	opt callstack 0
 43451  009700                     i2_islower:
 43452                           	opt callstack 9
 43453                           
 43454                           ;incstack = 0
 43455  009700  0E9F               	movlw	159
 43456  009702  6E03               	movwf	??i2_islower^0,c
 43457  009704  0EFF               	movlw	255
 43458  009706  6E04               	movwf	(??i2_islower+1)^0,c
 43459  009708  0060  F004  F005   	movff	i2islower@c,??i2_islower+2
 43460  00970E  0060  F008  F006   	movff	i2islower@c+1,??i2_islower+3
 43461  009714  5003               	movf	??i2_islower^0,w,c
 43462  009716  2605               	addwf	(??i2_islower+2)^0,f,c
 43463  009718  5004               	movf	(??i2_islower+1)^0,w,c
 43464  00971A  2206               	addwfc	(??i2_islower+3)^0,f,c
 43465  00971C  5006               	movf	(??i2_islower+3)^0,w,c
 43466  00971E  E106               	bnz	i2u1548_40
 43467  009720  0E1A               	movlw	26
 43468  009722  5C05               	subwf	(??i2_islower+2)^0,w,c
 43469  009724  B0D8               	btfsc	status,0,c
 43470  009726  D002               	goto	i2u1548_40
 43471  009728  0E01               	movlw	1
 43472  00972A  D001               	goto	i2u1549_40
 43473  00972C                     i2u1548_40:
 43474  00972C  0E00               	movlw	0
 43475  00972E                     i2u1549_40:
 43476  00972E  6E01               	movwf	?i2_islower^0,c
 43477  009730  6A02               	clrf	(?i2_islower+1)^0,c
 43478  009732  0012               	return		;funcret
 43479  009734                     __end_ofi2_islower:
 43480                           	opt callstack 0
 43481                           
 43482 ;; *************** function i2_isupper *****************
 43483 ;; Defined at:
 43484 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 43485 ;; Parameters:    Size  Location     Type
 43486 ;;  c               2    0[COMRAM] int 
 43487 ;; Auto vars:     Size  Location     Type
 43488 ;;		None
 43489 ;; Return value:  Size  Location     Type
 43490 ;;                  2    0[COMRAM] int 
 43491 ;; Registers used:
 43492 ;;		wreg, status,2, status,0
 43493 ;; Tracked objects:
 43494 ;;		On entry : 0/0
 43495 ;;		On exit  : 0/0
 43496 ;;		Unchanged: 0/0
 43497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43500 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43502 ;;Total ram usage:        6 bytes
 43503 ;; Hardware stack levels used:    1
 43504 ;; This function calls:
 43505 ;;		Nothing
 43506 ;; This function is called by:
 43507 ;;		i2_xtoa
 43508 ;; This function uses a non-reentrant model
 43509 ;;
 43510                           
 43511                           	psect	text358
 43512  009734                     __ptext358:
 43513                           	opt callstack 0
 43514  009734                     i2_isupper:
 43515                           	opt callstack 10
 43516                           
 43517                           ;incstack = 0
 43518  009734  0EBF               	movlw	191
 43519  009736  6E03               	movwf	??i2_isupper^0,c
 43520  009738  0EFF               	movlw	255
 43521  00973A  6E04               	movwf	(??i2_isupper+1)^0,c
 43522  00973C  0060  F004  F005   	movff	i2isupper@c,??i2_isupper+2
 43523  009742  0060  F008  F006   	movff	i2isupper@c+1,??i2_isupper+3
 43524  009748  5003               	movf	??i2_isupper^0,w,c
 43525  00974A  2605               	addwf	(??i2_isupper+2)^0,f,c
 43526  00974C  5004               	movf	(??i2_isupper+1)^0,w,c
 43527  00974E  2206               	addwfc	(??i2_isupper+3)^0,f,c
 43528  009750  5006               	movf	(??i2_isupper+3)^0,w,c
 43529  009752  E106               	bnz	i2u1578_40
 43530  009754  0E1A               	movlw	26
 43531  009756  5C05               	subwf	(??i2_isupper+2)^0,w,c
 43532  009758  B0D8               	btfsc	status,0,c
 43533  00975A  D002               	goto	i2u1578_40
 43534  00975C  0E01               	movlw	1
 43535  00975E  D001               	goto	i2u1579_40
 43536  009760                     i2u1578_40:
 43537  009760  0E00               	movlw	0
 43538  009762                     i2u1579_40:
 43539  009762  6E01               	movwf	?i2_isupper^0,c
 43540  009764  6A02               	clrf	(?i2_isupper+1)^0,c
 43541  009766  0012               	return		;funcret
 43542  009768                     __end_ofi2_isupper:
 43543                           	opt callstack 0
 43544                           
 43545 ;; *************** function i2_isalpha *****************
 43546 ;; Defined at:
 43547 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 43548 ;; Parameters:    Size  Location     Type
 43549 ;;  c               2    0[COMRAM] int 
 43550 ;; Auto vars:     Size  Location     Type
 43551 ;;		None
 43552 ;; Return value:  Size  Location     Type
 43553 ;;                  2    0[COMRAM] int 
 43554 ;; Registers used:
 43555 ;;		wreg, status,2, status,0
 43556 ;; Tracked objects:
 43557 ;;		On entry : 0/0
 43558 ;;		On exit  : 0/0
 43559 ;;		Unchanged: 0/0
 43560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43565 ;;Total ram usage:        6 bytes
 43566 ;; Hardware stack levels used:    1
 43567 ;; This function calls:
 43568 ;;		Nothing
 43569 ;; This function is called by:
 43570 ;;		i2_xtoa
 43571 ;; This function uses a non-reentrant model
 43572 ;;
 43573                           
 43574                           	psect	text359
 43575  009768                     __ptext359:
 43576                           	opt callstack 0
 43577  009768                     i2_isalpha:
 43578                           	opt callstack 10
 43579                           
 43580                           ;incstack = 0
 43581  009768  0E9F               	movlw	159
 43582  00976A  6E03               	movwf	??i2_isalpha^0,c
 43583  00976C  0EFF               	movlw	255
 43584  00976E  6E04               	movwf	(??i2_isalpha+1)^0,c
 43585  009770  0E20               	movlw	32
 43586  009772  1001               	iorwf	i2isalpha@c^0,w,c
 43587  009774  6E05               	movwf	(??i2_isalpha+2)^0,c
 43588  009776  0E00               	movlw	0
 43589  009778  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 43590  00977A  6E06               	movwf	(??i2_isalpha+3)^0,c
 43591  00977C  5003               	movf	??i2_isalpha^0,w,c
 43592  00977E  2605               	addwf	(??i2_isalpha+2)^0,f,c
 43593  009780  5004               	movf	(??i2_isalpha+1)^0,w,c
 43594  009782  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 43595  009784  5006               	movf	(??i2_isalpha+3)^0,w,c
 43596  009786  E106               	bnz	i2u1572_40
 43597  009788  0E1A               	movlw	26
 43598  00978A  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 43599  00978C  B0D8               	btfsc	status,0,c
 43600  00978E  D002               	goto	i2u1572_40
 43601  009790  0E01               	movlw	1
 43602  009792  D001               	goto	i2u1573_40
 43603  009794                     i2u1572_40:
 43604  009794  0E00               	movlw	0
 43605  009796                     i2u1573_40:
 43606  009796  6E01               	movwf	?i2_isalpha^0,c
 43607  009798  6A02               	clrf	(?i2_isalpha+1)^0,c
 43608  00979A  0012               	return		;funcret
 43609  00979C                     __end_ofi2_isalpha:
 43610                           	opt callstack 0
 43611                           
 43612 ;; *************** function i2_stoa *****************
 43613 ;; Defined at:
 43614 ;;		line 546 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 43615 ;; Parameters:    Size  Location     Type
 43616 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 43617 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 43618 ;;  s               2   13[COMRAM] PTR unsigned char 
 43619 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 43620 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 43621 ;;		 -> alarmData(399), STR_11(3), 
 43622 ;; Auto vars:     Size  Location     Type
 43623 ;;  stoa            7   16[COMRAM] unsigned char [7]
 43624 ;;  stoa            2   31[COMRAM] int 
 43625 ;;  stoa            2   29[COMRAM] int 
 43626 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 43627 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 43628 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 43629 ;;		 -> STR_27(3), STR_26(3), alarmData(399), STR_11(3), 
 43630 ;;  stoa            2   25[COMRAM] int 
 43631 ;;  stoa            2   23[COMRAM] int 
 43632 ;; Return value:  Size  Location     Type
 43633 ;;                  2   11[COMRAM] int 
 43634 ;; Registers used:
 43635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 43636 ;; Tracked objects:
 43637 ;;		On entry : 3E/1
 43638 ;;		On exit  : 0/0
 43639 ;;		Unchanged: 0/0
 43640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43642 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43644 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43645 ;;Total ram usage:       22 bytes
 43646 ;; Hardware stack levels used:    1
 43647 ;; Hardware stack levels required when called:    3
 43648 ;; This function calls:
 43649 ;;		i2_fputc
 43650 ;;		i2_strlen
 43651 ;; This function is called by:
 43652 ;;		i2_vfpfcnvrt
 43653 ;; This function uses a non-reentrant model
 43654 ;;
 43655                           
 43656                           	psect	text360
 43657  0053EA                     __ptext360:
 43658                           	opt callstack 0
 43659  0053EA                     i2_stoa:
 43660                           	opt callstack 8
 43661                           
 43662                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 5
      +                          47: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *
      +                          cp, nuls[] = "(null)";
 43663                           
 43664                           ;incstack = 0
 43665  0053EA  EE20  F2D0         	lfsr	2,stoa@F1144
 43666  0053EE  EE10  F011         	lfsr	1,i2stoa@nuls
 43667  0053F2  0E06               	movlw	6
 43668  0053F4                     i2u1604_41:
 43669  0053F4  006F FF6F FFE3     	movff	plusw2,plusw1
 43670  0053FA  06E8               	decf	wreg,f,c
 43671  0053FC  E2FB               	bc	i2u1604_41
 43672                           
 43673                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 43674  0053FE  0060  F038  F01C   	movff	i2stoa@s,i2stoa@cp
 43675  005404  0060  F03C  F01D   	movff	i2stoa@s+1,i2stoa@cp+1
 43676                           
 43677                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 43678  00540A  501C               	movf	i2stoa@cp^0,w,c
 43679  00540C  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 43680  00540E  A4D8               	btfss	status,2,c
 43681  005410  D003               	goto	i2l17225
 43682                           
 43683                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nu
      +                          ls;
 43684  005412  0E11               	movlw	low i2stoa@nuls
 43685  005414  6E1C               	movwf	i2stoa@cp^0,c
 43686  005416  6A1D               	clrf	(i2stoa@cp+1)^0,c
 43687  005418                     i2l17225:
 43688                           
 43689                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(
      +                          cp);
 43690  005418  0060  F070  F001   	movff	i2stoa@cp,i2strlen@s
 43691  00541E  0060  F074  F002   	movff	i2stoa@cp+1,i2strlen@s+1
 43692  005424  EC0F  F048         	call	i2_strlen	;wreg free
 43693  005428  0060  F004  F020   	movff	?i2_strlen,i2stoa@l
 43694  00542E  0060  F008  F021   	movff	?i2_strlen+1,i2stoa@l+1
 43695                           
 43696                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 43697  005434  0060  F724  F01E   	movff	_prec,i2stoa@p
 43698  00543A  0060  F728  F01F   	movff	_prec+1,i2stoa@p+1
 43699                           
 43700                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 43701  005440  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 43702  005442  D010               	goto	i2l3520
 43703  005444  5020               	movf	i2stoa@l^0,w,c
 43704  005446  5C1E               	subwf	i2stoa@p^0,w,c
 43705  005448  501F               	movf	(i2stoa@p+1)^0,w,c
 43706  00544A  0A80               	xorlw	128
 43707  00544C  6E10               	movwf	??i2_stoa^0,c
 43708  00544E  5021               	movf	(i2stoa@l+1)^0,w,c
 43709  005450  0A80               	xorlw	128
 43710  005452  5810               	subwfb	??i2_stoa^0,w,c
 43711  005454  B0D8               	btfsc	status,0,c
 43712  005456  D006               	goto	i2l3520
 43713  005458  0060  F078  F020   	movff	i2stoa@p,i2stoa@l
 43714  00545E  0060  F07C  F021   	movff	i2stoa@p+1,i2stoa@l+1
 43715  005464                     i2l3520:
 43716                           
 43717                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 43718  005464  0060  F080  F01E   	movff	i2stoa@l,i2stoa@p
 43719  00546A  0060  F084  F01F   	movff	i2stoa@l+1,i2stoa@p+1
 43720                           
 43721                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 43722  005470  0060  F71C  F01A   	movff	_width,i2stoa@w
 43723  005476  0060  F720  F01B   	movff	_width+1,i2stoa@w+1
 43724                           
 43725                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags
      +                           & (1 << 0))) {
 43726  00547C  0101               	movlb	1	; () banked
 43727  00547E  A1CB               	btfss	_flags& (0+255),0,b
 43728  005480  D00F               	goto	i2l17239
 43729  005482  D018               	goto	i2u1609_40
 43730  005484                     i2l17235:
 43731                           
 43732                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fpu
      +                          tc(' ', fp);
 43733  005484  0E00               	movlw	0
 43734  005486  6E04               	movwf	(i2fputc@c+1)^0,c
 43735  005488  0E20               	movlw	32
 43736  00548A  6E03               	movwf	i2fputc@c^0,c
 43737  00548C  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 43738  005492  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 43739  005498  EC25  F03A         	call	i2_fputc	;wreg free
 43740                           
 43741                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l
      +                          ;
 43742  00549C  4A20               	infsnz	i2stoa@l^0,f,c
 43743  00549E  2A21               	incf	(i2stoa@l+1)^0,f,c
 43744  0054A0                     i2l17239:
 43745                           
 43746                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (
      +                          l < w) {
 43747  0054A0  501A               	movf	i2stoa@w^0,w,c
 43748  0054A2  5C20               	subwf	i2stoa@l^0,w,c
 43749  0054A4  5021               	movf	(i2stoa@l+1)^0,w,c
 43750  0054A6  0A80               	xorlw	128
 43751  0054A8  6E10               	movwf	??i2_stoa^0,c
 43752  0054AA  501B               	movf	(i2stoa@w+1)^0,w,c
 43753  0054AC  0A80               	xorlw	128
 43754  0054AE  5810               	subwfb	??i2_stoa^0,w,c
 43755  0054B0  A0D8               	btfss	status,0,c
 43756  0054B2  D7E8               	goto	i2l17235
 43757  0054B4                     i2u1609_40:
 43758                           
 43759                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 43760  0054B4  0E00               	movlw	0
 43761  0054B6  6E19               	movwf	(i2stoa@i+1)^0,c
 43762  0054B8  0E00               	movlw	0
 43763  0054BA  6E18               	movwf	i2stoa@i^0,c
 43764                           
 43765                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 43766  0054BC  D025               	goto	i2l17249
 43767  0054BE                     i2l17243:
 43768                           
 43769                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*
      +                          cp, fp);
 43770  0054BE  0060  F073  FFF6   	movff	i2stoa@cp,tblptrl
 43771  0054C4  0060  F077  FFF7   	movff	i2stoa@cp+1,tblptrh
 43772  0054CA  0E00               	movlw	low (__mediumconst shr (0+16))
 43773  0054CC  6EF8               	movwf	tblptru,c
 43774  0054CE  0E0F               	movlw	(high __ramtop+-1)
 43775  0054D0  64F7               	cpfsgt	tblptrh,c
 43776  0054D2  D003               	bra	i2u1610_47
 43777  0054D4  0008               	tblrd		*
 43778  0054D6  50F5               	movf	tablat,w,c
 43779  0054D8  D007               	bra	i2u1610_40
 43780  0054DA                     i2u1610_47:
 43781  0054DA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 43782  0054E0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 43783  0054E6  50E7               	movf	indf1,w,c
 43784  0054E8                     i2u1610_40:
 43785  0054E8  6E10               	movwf	??i2_stoa^0,c
 43786  0054EA  5010               	movf	??i2_stoa^0,w,c
 43787  0054EC  6E03               	movwf	i2fputc@c^0,c
 43788  0054EE  6A04               	clrf	(i2fputc@c+1)^0,c
 43789  0054F0  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 43790  0054F6  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 43791  0054FC  EC25  F03A         	call	i2_fputc	;wreg free
 43792                           
 43793                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 43794  005500  4A1C               	infsnz	i2stoa@cp^0,f,c
 43795  005502  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 43796                           
 43797                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 43798  005504  4A18               	infsnz	i2stoa@i^0,f,c
 43799  005506  2A19               	incf	(i2stoa@i+1)^0,f,c
 43800  005508                     i2l17249:
 43801                           
 43802                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 43803  005508  501E               	movf	i2stoa@p^0,w,c
 43804  00550A  5C18               	subwf	i2stoa@i^0,w,c
 43805  00550C  5019               	movf	(i2stoa@i+1)^0,w,c
 43806  00550E  0A80               	xorlw	128
 43807  005510  6E10               	movwf	??i2_stoa^0,c
 43808  005512  501F               	movf	(i2stoa@p+1)^0,w,c
 43809  005514  0A80               	xorlw	128
 43810  005516  5810               	subwfb	??i2_stoa^0,w,c
 43811  005518  A0D8               	btfss	status,0,c
 43812  00551A  D7D1               	goto	i2l17243
 43813                           
 43814                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags &
      +                           (1 << 0)) {
 43815  00551C  0101               	movlb	1	; () banked
 43816  00551E  B1CB               	btfsc	_flags& (0+255),0,b
 43817  005520  D00F               	goto	i2l17257
 43818  005522  D018               	goto	i2u1613_40
 43819  005524                     i2l17253:
 43820                           
 43821                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fpu
      +                          tc(' ', fp);
 43822  005524  0E00               	movlw	0
 43823  005526  6E04               	movwf	(i2fputc@c+1)^0,c
 43824  005528  0E20               	movlw	32
 43825  00552A  6E03               	movwf	i2fputc@c^0,c
 43826  00552C  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 43827  005532  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 43828  005538  EC25  F03A         	call	i2_fputc	;wreg free
 43829                           
 43830                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l
      +                          ;
 43831  00553C  4A20               	infsnz	i2stoa@l^0,f,c
 43832  00553E  2A21               	incf	(i2stoa@l+1)^0,f,c
 43833  005540                     i2l17257:
 43834                           
 43835                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (
      +                          l < w) {
 43836  005540  501A               	movf	i2stoa@w^0,w,c
 43837  005542  5C20               	subwf	i2stoa@l^0,w,c
 43838  005544  5021               	movf	(i2stoa@l+1)^0,w,c
 43839  005546  0A80               	xorlw	128
 43840  005548  6E10               	movwf	??i2_stoa^0,c
 43841  00554A  501B               	movf	(i2stoa@w+1)^0,w,c
 43842  00554C  0A80               	xorlw	128
 43843  00554E  5810               	subwfb	??i2_stoa^0,w,c
 43844  005550  A0D8               	btfss	status,0,c
 43845  005552  D7E8               	goto	i2l17253
 43846  005554                     i2u1613_40:
 43847                           
 43848                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 43849                           
 43850                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
 43851  005554  0060  F080  F00C   	movff	i2stoa@l,?i2_stoa
 43852  00555A  0060  F084  F00D   	movff	i2stoa@l+1,?i2_stoa+1
 43853  005560  0012               	return		;funcret
 43854  005562                     __end_ofi2_stoa:
 43855                           	opt callstack 0
 43856                           
 43857 ;; *************** function i2_dtoa *****************
 43858 ;; Defined at:
 43859 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 43860 ;; Parameters:    Size  Location     Type
 43861 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 43862 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 43863 ;;  d               8   31[COMRAM] long long 
 43864 ;; Auto vars:     Size  Location     Type
 43865 ;;  dtoa            8   55[COMRAM] long long 
 43866 ;;  dtoa            2   63[COMRAM] int 
 43867 ;;  dtoa            2   53[COMRAM] int 
 43868 ;;  dtoa            2   51[COMRAM] int 
 43869 ;;  dtoa            2   49[COMRAM] int 
 43870 ;; Return value:  Size  Location     Type
 43871 ;;                  2   29[COMRAM] int 
 43872 ;; Registers used:
 43873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 43874 ;; Tracked objects:
 43875 ;;		On entry : 3F/0
 43876 ;;		On exit  : 0/0
 43877 ;;		Unchanged: 0/0
 43878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43879 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43880 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43881 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43882 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43883 ;;Total ram usage:       36 bytes
 43884 ;; Hardware stack levels used:    1
 43885 ;; Hardware stack levels required when called:    5
 43886 ;; This function calls:
 43887 ;;		i2___aodiv
 43888 ;;		i2___aomod
 43889 ;;		i2_abs
 43890 ;;		i2_pad
 43891 ;; This function is called by:
 43892 ;;		i2_vfpfcnvrt
 43893 ;; This function uses a non-reentrant model
 43894 ;;
 43895                           
 43896                           	psect	text361
 43897  003428                     __ptext361:
 43898                           	opt callstack 0
 43899  003428                     i2_dtoa:
 43900                           	opt callstack 6
 43901                           
 43902                           ; BSR set to: 0
 43903                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 43904                           
 43905                           ;incstack = 0
 43906  003428  0060  F080  F038   	movff	i2dtoa@d,i2dtoa@n
 43907  00342E  0060  F084  F039   	movff	i2dtoa@d+1,i2dtoa@n+1
 43908  003434  0060  F088  F03A   	movff	i2dtoa@d+2,i2dtoa@n+2
 43909  00343A  0060  F08C  F03B   	movff	i2dtoa@d+3,i2dtoa@n+3
 43910  003440  0060  F090  F03C   	movff	i2dtoa@d+4,i2dtoa@n+4
 43911  003446  0060  F094  F03D   	movff	i2dtoa@d+5,i2dtoa@n+5
 43912  00344C  0060  F098  F03E   	movff	i2dtoa@d+6,i2dtoa@n+6
 43913  003452  0060  F09C  F03F   	movff	i2dtoa@d+7,i2dtoa@n+7
 43914                           
 43915                           ; BSR set to: 0
 43916                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 43917  003458  AE3F               	btfss	(i2dtoa@n+7)^0,7,c
 43918  00345A  D002               	goto	i2u1589_40
 43919  00345C  0E01               	movlw	1
 43920  00345E  D001               	goto	i2u1590_40
 43921  003460                     i2u1589_40:
 43922  003460  0E00               	movlw	0
 43923  003462                     i2u1590_40:
 43924  003462  6E36               	movwf	i2dtoa@s^0,c
 43925  003464  6A37               	clrf	(i2dtoa@s+1)^0,c
 43926                           
 43927                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 43928  003466  5036               	movf	i2dtoa@s^0,w,c
 43929  003468  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 43930  00346A  B4D8               	btfsc	status,2,c
 43931  00346C  D010               	goto	i2l17161
 43932                           
 43933                           ; BSR set to: 0
 43934                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 43935  00346E  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 43936  003470  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 43937  003472  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 43938  003474  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 43939  003476  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 43940  003478  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 43941  00347A  1E39               	comf	(i2dtoa@n+1)^0,f,c
 43942  00347C  6C38               	negf	i2dtoa@n^0,c
 43943  00347E  0E00               	movlw	0
 43944  003480  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 43945  003482  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 43946  003484  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 43947  003486  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 43948  003488  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 43949  00348A  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 43950  00348C  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 43951  00348E                     i2l17161:
 43952                           
 43953                           ; BSR set to: 0
 43954                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 43955  00348E  0101               	movlb	1	; () banked
 43956  003490  AFCA               	btfss	(_prec+1)& (0+255),7,b
 43957                           
 43958                           ; BSR set to: 1
 43959                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 43960  003492  93CB               	bcf	_flags& (0+255),1,b
 43961                           
 43962                           ; BSR set to: 1
 43963                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 43964  003494  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 43965  003496  D005               	goto	i2u1593_40
 43966  003498  51CA               	movf	(_prec+1)& (0+255),w,b
 43967  00349A  E108               	bnz	i2l3491
 43968  00349C  05C9               	decf	_prec& (0+255),w,b
 43969  00349E  B0D8               	btfsc	status,0,c
 43970  0034A0  D005               	goto	i2l3491
 43971  0034A2                     i2u1593_40:
 43972                           
 43973                           ; BSR set to: 1
 43974  0034A2  0E00               	movlw	0
 43975  0034A4  6E33               	movwf	(i2dtoa@p+1)^0,c
 43976  0034A6  0E01               	movlw	1
 43977  0034A8  6E32               	movwf	i2dtoa@p^0,c
 43978  0034AA  D006               	goto	i2l3493
 43979  0034AC                     i2l3491:
 43980                           
 43981                           ; BSR set to: 1
 43982  0034AC  0060  F724  F032   	movff	_prec,i2dtoa@p
 43983  0034B2  0060  F728  F033   	movff	_prec+1,i2dtoa@p+1
 43984  0034B8                     i2l3493:
 43985                           
 43986                           ; BSR set to: 1
 43987                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 43988  0034B8  0060  F71C  F034   	movff	_width,i2dtoa@w
 43989  0034BE  0060  F720  F035   	movff	_width+1,i2dtoa@w+1
 43990                           
 43991                           ; BSR set to: 1
 43992                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 43993  0034C4  5036               	movf	i2dtoa@s^0,w,c
 43994  0034C6  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 43995  0034C8  A4D8               	btfss	status,2,c
 43996  0034CA  D002               	goto	i2u1595_40
 43997                           
 43998                           ; BSR set to: 1
 43999  0034CC  A5CB               	btfss	_flags& (0+255),2,b
 44000  0034CE  D003               	goto	i2l17175
 44001  0034D0                     i2u1595_40:
 44002                           
 44003                           ; BSR set to: 1
 44004                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 44005  0034D0  0634               	decf	i2dtoa@w^0,f,c
 44006  0034D2  A0D8               	btfss	status,0,c
 44007  0034D4  0635               	decf	(i2dtoa@w+1)^0,f,c
 44008  0034D6                     i2l17175:
 44009                           
 44010                           ; BSR set to: 1
 44011                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 44012  0034D6  0E00               	movlw	0
 44013  0034D8  6E41               	movwf	(i2dtoa@i+1)^0,c
 44014  0034DA  0E1F               	movlw	31
 44015  0034DC  6E40               	movwf	i2dtoa@i^0,c
 44016                           
 44017                           ; BSR set to: 1
 44018                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 44019  0034DE  0E00               	movlw	0
 44020  0034E0  0103               	movlb	3	; () banked
 44021  0034E2  6FA8               	movwf	(_dbuf+31)& (0+255),b
 44022                           
 44023                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 44024  0034E4  D09E               	goto	i2l17189
 44025  0034E6                     i2l17179:
 44026                           
 44027                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 44028  0034E6  0640               	decf	i2dtoa@i^0,f,c
 44029  0034E8  A0D8               	btfss	status,0,c
 44030  0034EA  0641               	decf	(i2dtoa@i+1)^0,f,c
 44031                           
 44032                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 44033  0034EC  0E89               	movlw	low _dbuf
 44034  0034EE  2440               	addwf	i2dtoa@i^0,w,c
 44035  0034F0  6ED9               	movwf	fsr2l,c
 44036  0034F2  0E03               	movlw	high _dbuf
 44037  0034F4  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 44038  0034F6  6EDA               	movwf	fsr2h,c
 44039  0034F8  0060  F0E0  F001   	movff	i2dtoa@n,i2___aomod@dividend
 44040  0034FE  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aomod@dividend+1
 44041  003504  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aomod@dividend+2
 44042  00350A  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aomod@dividend+3
 44043  003510  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aomod@dividend+4
 44044  003516  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aomod@dividend+5
 44045  00351C  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aomod@dividend+6
 44046  003522  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aomod@dividend+7
 44047  003528  0E0A               	movlw	10
 44048  00352A  6E09               	movwf	i2___aomod@divisor^0,c
 44049  00352C  0E00               	movlw	0
 44050  00352E  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 44051  003530  0E00               	movlw	0
 44052  003532  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 44053  003534  0E00               	movlw	0
 44054  003536  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 44055  003538  0E00               	movlw	0
 44056  00353A  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 44057  00353C  0E00               	movlw	0
 44058  00353E  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 44059  003540  0E00               	movlw	0
 44060  003542  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 44061  003544  0E00               	movlw	0
 44062  003546  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 44063  003548  ECA6  F030         	call	i2___aomod	;wreg free
 44064  00354C  0060  F004  F028   	movff	?i2___aomod,??i2_dtoa
 44065  003552  0060  F008  F029   	movff	?i2___aomod+1,??i2_dtoa+1
 44066  003558  0060  F00C  F02A   	movff	?i2___aomod+2,??i2_dtoa+2
 44067  00355E  0060  F010  F02B   	movff	?i2___aomod+3,??i2_dtoa+3
 44068  003564  0060  F014  F02C   	movff	?i2___aomod+4,??i2_dtoa+4
 44069  00356A  0060  F018  F02D   	movff	?i2___aomod+5,??i2_dtoa+5
 44070  003570  0060  F01C  F02E   	movff	?i2___aomod+6,??i2_dtoa+6
 44071  003576  0060  F020  F02F   	movff	?i2___aomod+7,??i2_dtoa+7
 44072  00357C  0060  F0A0  F013   	movff	??i2_dtoa,i2abs@a
 44073  003582  0060  F0A8  F014   	movff	??i2_dtoa+2,i2abs@a+1
 44074  003588  EC32  F04A         	call	i2_abs	;wreg free
 44075  00358C  5013               	movf	?i2_abs^0,w,c
 44076  00358E  0F30               	addlw	48
 44077  003590  6EDF               	movwf	indf2,c
 44078                           
 44079                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 44080  003592  0632               	decf	i2dtoa@p^0,f,c
 44081  003594  A0D8               	btfss	status,0,c
 44082  003596  0633               	decf	(i2dtoa@p+1)^0,f,c
 44083                           
 44084                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 44085  003598  0634               	decf	i2dtoa@w^0,f,c
 44086  00359A  A0D8               	btfss	status,0,c
 44087  00359C  0635               	decf	(i2dtoa@w+1)^0,f,c
 44088                           
 44089                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 44090  00359E  0060  F0E0  F001   	movff	i2dtoa@n,i2___aodiv@dividend
 44091  0035A4  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 44092  0035AA  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 44093  0035B0  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 44094  0035B6  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 44095  0035BC  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 44096  0035C2  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 44097  0035C8  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 44098  0035CE  0E0A               	movlw	10
 44099  0035D0  6E09               	movwf	i2___aodiv@divisor^0,c
 44100  0035D2  0E00               	movlw	0
 44101  0035D4  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 44102  0035D6  0E00               	movlw	0
 44103  0035D8  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 44104  0035DA  0E00               	movlw	0
 44105  0035DC  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 44106  0035DE  0E00               	movlw	0
 44107  0035E0  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 44108  0035E2  0E00               	movlw	0
 44109  0035E4  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 44110  0035E6  0E00               	movlw	0
 44111  0035E8  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 44112  0035EA  0E00               	movlw	0
 44113  0035EC  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 44114  0035EE  EC84  F02D         	call	i2___aodiv	;wreg free
 44115  0035F2  0060  F004  F038   	movff	?i2___aodiv,i2dtoa@n
 44116  0035F8  0060  F008  F039   	movff	?i2___aodiv+1,i2dtoa@n+1
 44117  0035FE  0060  F00C  F03A   	movff	?i2___aodiv+2,i2dtoa@n+2
 44118  003604  0060  F010  F03B   	movff	?i2___aodiv+3,i2dtoa@n+3
 44119  00360A  0060  F014  F03C   	movff	?i2___aodiv+4,i2dtoa@n+4
 44120  003610  0060  F018  F03D   	movff	?i2___aodiv+5,i2dtoa@n+5
 44121  003616  0060  F01C  F03E   	movff	?i2___aodiv+6,i2dtoa@n+6
 44122  00361C  0060  F020  F03F   	movff	?i2___aodiv+7,i2dtoa@n+7
 44123  003622                     i2l17189:
 44124                           
 44125                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 44126  003622  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 44127  003624  D020               	goto	i2u1600_40
 44128  003626  5041               	movf	(i2dtoa@i+1)^0,w,c
 44129  003628  E103               	bnz	i2u1596_40
 44130  00362A  0440               	decf	i2dtoa@i^0,w,c
 44131  00362C  A0D8               	btfss	status,0,c
 44132  00362E  D01B               	goto	i2u1600_40
 44133  003630                     i2u1596_40:
 44134  003630  5038               	movf	i2dtoa@n^0,w,c
 44135  003632  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 44136  003634  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 44137  003636  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 44138  003638  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 44139  00363A  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 44140  00363C  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 44141  00363E  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 44142  003640  A4D8               	btfss	status,2,c
 44143  003642  D751               	goto	i2l17179
 44144  003644  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 44145  003646  D005               	goto	i2u1598_40
 44146  003648  5033               	movf	(i2dtoa@p+1)^0,w,c
 44147  00364A  E102               	bnz	i2u1598_41
 44148  00364C  0432               	decf	i2dtoa@p^0,w,c
 44149  00364E  B0D8               	btfsc	status,0,c
 44150  003650                     i2u1598_41:
 44151  003650  D74A               	goto	i2l17179
 44152  003652                     i2u1598_40:
 44153  003652  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 44154  003654  D008               	goto	i2u1600_40
 44155  003656  5035               	movf	(i2dtoa@w+1)^0,w,c
 44156  003658  E103               	bnz	i2u1599_40
 44157  00365A  0434               	decf	i2dtoa@w^0,w,c
 44158  00365C  A0D8               	btfss	status,0,c
 44159  00365E  D003               	goto	i2u1600_40
 44160  003660                     i2u1599_40:
 44161  003660  0101               	movlb	1	; () banked
 44162  003662  B3CB               	btfsc	_flags& (0+255),1,b
 44163  003664  D740               	goto	i2l17179
 44164  003666                     i2u1600_40:
 44165                           
 44166                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 44167  003666  5036               	movf	i2dtoa@s^0,w,c
 44168  003668  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44169  00366A  A4D8               	btfss	status,2,c
 44170  00366C  D003               	goto	i2u1602_40
 44171  00366E  0101               	movlb	1	; () banked
 44172  003670  A5CB               	btfss	_flags& (0+255),2,b
 44173  003672  D018               	goto	i2l17213
 44174  003674                     i2u1602_40:
 44175                           
 44176                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 44177  003674  0640               	decf	i2dtoa@i^0,f,c
 44178  003676  A0D8               	btfss	status,0,c
 44179  003678  0641               	decf	(i2dtoa@i+1)^0,f,c
 44180                           
 44181                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 44182  00367A  5036               	movf	i2dtoa@s^0,w,c
 44183  00367C  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44184  00367E  A4D8               	btfss	status,2,c
 44185  003680  D004               	goto	i2l17209
 44186  003682  0E00               	movlw	0
 44187  003684  6E31               	movwf	(i2_dtoa$5178+1)^0,c
 44188  003686  0E2B               	movlw	43
 44189  003688  D003               	goto	L19
 44190  00368A                     i2l17209:
 44191  00368A  0E00               	movlw	0
 44192  00368C  6E31               	movwf	(i2_dtoa$5178+1)^0,c
 44193  00368E  0E2D               	movlw	45
 44194  003690                     L19:
 44195  003690  6E30               	movwf	i2_dtoa$5178^0,c
 44196  003692  0E89               	movlw	low _dbuf
 44197  003694  2440               	addwf	i2dtoa@i^0,w,c
 44198  003696  6ED9               	movwf	fsr2l,c
 44199  003698  0E03               	movlw	high _dbuf
 44200  00369A  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 44201  00369C  6EDA               	movwf	fsr2h,c
 44202  00369E  0060  F0C3  FFDF   	movff	i2_dtoa$5178,indf2
 44203  0036A4                     i2l17213:
 44204                           
 44205                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 44206  0036A4  0060  F078  F013   	movff	i2dtoa@fp,i2pad@fp
 44207  0036AA  0060  F07C  F014   	movff	i2dtoa@fp+1,i2pad@fp+1
 44208  0036B0  0E89               	movlw	low _dbuf
 44209  0036B2  2440               	addwf	i2dtoa@i^0,w,c
 44210  0036B4  6E15               	movwf	i2pad@buf^0,c
 44211  0036B6  0E03               	movlw	high _dbuf
 44212  0036B8  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 44213  0036BA  6E16               	movwf	(i2pad@buf+1)^0,c
 44214  0036BC  0060  F0D0  F017   	movff	i2dtoa@w,i2pad@p
 44215  0036C2  0060  F0D4  F018   	movff	i2dtoa@w+1,i2pad@p+1
 44216  0036C8  EC0F  F038         	call	i2_pad	;wreg free
 44217  0036CC  0060  F04C  F01E   	movff	?i2_pad,?i2_dtoa
 44218  0036D2  0060  F050  F01F   	movff	?i2_pad+1,?i2_dtoa+1
 44219  0036D8  0012               	return		;funcret
 44220  0036DA                     __end_ofi2_dtoa:
 44221                           	opt callstack 0
 44222                           
 44223 ;; *************** function i2_abs *****************
 44224 ;; Defined at:
 44225 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 44226 ;; Parameters:    Size  Location     Type
 44227 ;;  a               2   18[COMRAM] int 
 44228 ;; Auto vars:     Size  Location     Type
 44229 ;;		None
 44230 ;; Return value:  Size  Location     Type
 44231 ;;                  2   18[COMRAM] int 
 44232 ;; Registers used:
 44233 ;;		wreg, status,2, status,0
 44234 ;; Tracked objects:
 44235 ;;		On entry : 0/3
 44236 ;;		On exit  : 0/0
 44237 ;;		Unchanged: 0/0
 44238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44242 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44243 ;;Total ram usage:        4 bytes
 44244 ;; Hardware stack levels used:    1
 44245 ;; This function calls:
 44246 ;;		Nothing
 44247 ;; This function is called by:
 44248 ;;		i2_dtoa
 44249 ;; This function uses a non-reentrant model
 44250 ;;
 44251                           
 44252                           	psect	text362
 44253  009464                     __ptext362:
 44254                           	opt callstack 0
 44255  009464                     i2_abs:
 44256                           	opt callstack 10
 44257                           
 44258                           ;incstack = 0
 44259  009464  BE14               	btfsc	(i2abs@a+1)^0,7,c
 44260  009466  D005               	goto	i2u1571_40
 44261  009468  5014               	movf	(i2abs@a+1)^0,w,c
 44262  00946A  E114               	bnz	i2l4283
 44263  00946C  0413               	decf	i2abs@a^0,w,c
 44264  00946E  B0D8               	btfsc	status,0,c
 44265  009470  D011               	goto	i2l4283
 44266  009472                     i2u1571_40:
 44267  009472  0060  F04C  F015   	movff	i2abs@a,??i2_abs
 44268  009478  0060  F050  F016   	movff	i2abs@a+1,??i2_abs+1
 44269  00947E  1E15               	comf	??i2_abs^0,f,c
 44270  009480  1E16               	comf	(??i2_abs+1)^0,f,c
 44271  009482  4A15               	infsnz	??i2_abs^0,f,c
 44272  009484  2A16               	incf	(??i2_abs+1)^0,f,c
 44273  009486  0060  F054  F013   	movff	??i2_abs,?i2_abs
 44274  00948C  0060  F058  F014   	movff	??i2_abs+1,?i2_abs+1
 44275  009492  0012               	return	
 44276  009494                     i2l4283:
 44277  009494  0060  F04C  F013   	movff	i2abs@a,?i2_abs
 44278  00949A  0060  F050  F014   	movff	i2abs@a+1,?i2_abs+1
 44279  0094A0  0012               	return		;funcret
 44280  0094A2                     __end_ofi2_abs:
 44281                           	opt callstack 0
 44282                           
 44283 ;; *************** function i2___aomod *****************
 44284 ;; Defined at:
 44285 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 44286 ;; Parameters:    Size  Location     Type
 44287 ;;  dividend        8    0[COMRAM] long long 
 44288 ;;  divisor         8    8[COMRAM] long long 
 44289 ;; Auto vars:     Size  Location     Type
 44290 ;;  __aomod         1   17[COMRAM] unsigned char 
 44291 ;;  __aomod         1   16[COMRAM] unsigned char 
 44292 ;; Return value:  Size  Location     Type
 44293 ;;                  8    0[COMRAM] long long 
 44294 ;; Registers used:
 44295 ;;		wreg, status,2, status,0
 44296 ;; Tracked objects:
 44297 ;;		On entry : 0/3
 44298 ;;		On exit  : 0/0
 44299 ;;		Unchanged: 0/0
 44300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44301 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44304 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44305 ;;Total ram usage:       18 bytes
 44306 ;; Hardware stack levels used:    1
 44307 ;; This function calls:
 44308 ;;		Nothing
 44309 ;; This function is called by:
 44310 ;;		i2_dtoa
 44311 ;; This function uses a non-reentrant model
 44312 ;;
 44313                           
 44314                           	psect	text363
 44315  00614C                     __ptext363:
 44316                           	opt callstack 0
 44317  00614C                     i2___aomod:
 44318                           	opt callstack 10
 44319                           
 44320                           ;incstack = 0
 44321  00614C  0E00               	movlw	0
 44322  00614E  6E12               	movwf	i2___aomod@sign^0,c
 44323  006150  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
 44324  006152  D012               	goto	i2l17053
 44325  006154  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 44326  006156  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 44327  006158  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 44328  00615A  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 44329  00615C  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 44330  00615E  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 44331  006160  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 44332  006162  6C01               	negf	i2___aomod@dividend^0,c
 44333  006164  0E00               	movlw	0
 44334  006166  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 44335  006168  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 44336  00616A  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 44337  00616C  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 44338  00616E  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 44339  006170  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 44340  006172  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 44341  006174  0E01               	movlw	1
 44342  006176  6E12               	movwf	i2___aomod@sign^0,c
 44343  006178                     i2l17053:
 44344  006178  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 44345  00617A  D010               	goto	i2l17057
 44346  00617C  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 44347  00617E  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 44348  006180  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 44349  006182  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 44350  006184  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 44351  006186  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 44352  006188  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 44353  00618A  6C09               	negf	i2___aomod@divisor^0,c
 44354  00618C  0E00               	movlw	0
 44355  00618E  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 44356  006190  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 44357  006192  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 44358  006194  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 44359  006196  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 44360  006198  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 44361  00619A  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 44362  00619C                     i2l17057:
 44363  00619C  5009               	movf	i2___aomod@divisor^0,w,c
 44364  00619E  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 44365  0061A0  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 44366  0061A2  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 44367  0061A4  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 44368  0061A6  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 44369  0061A8  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 44370  0061AA  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 44371  0061AC  B4D8               	btfsc	status,2,c
 44372  0061AE  D03C               	goto	i2l17073
 44373  0061B0  0E01               	movlw	1
 44374  0061B2  6E11               	movwf	i2___aomod@counter^0,c
 44375  0061B4  D00A               	goto	i2l17063
 44376  0061B6                     i2l17061:
 44377  0061B6  90D8               	bcf	status,0,c
 44378  0061B8  3609               	rlcf	i2___aomod@divisor^0,f,c
 44379  0061BA  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 44380  0061BC  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 44381  0061BE  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 44382  0061C0  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 44383  0061C2  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 44384  0061C4  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 44385  0061C6  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 44386  0061C8  2A11               	incf	i2___aomod@counter^0,f,c
 44387  0061CA                     i2l17063:
 44388  0061CA  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 44389  0061CC  D7F4               	goto	i2l17061
 44390  0061CE                     i2u1568_40:
 44391  0061CE  5009               	movf	i2___aomod@divisor^0,w,c
 44392  0061D0  5C01               	subwf	i2___aomod@dividend^0,w,c
 44393  0061D2  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 44394  0061D4  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 44395  0061D6  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 44396  0061D8  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 44397  0061DA  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 44398  0061DC  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 44399  0061DE  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 44400  0061E0  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 44401  0061E2  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 44402  0061E4  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 44403  0061E6  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 44404  0061E8  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 44405  0061EA  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 44406  0061EC  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 44407  0061EE  A0D8               	btfss	status,0,c
 44408  0061F0  D010               	goto	i2l17069
 44409  0061F2  5009               	movf	i2___aomod@divisor^0,w,c
 44410  0061F4  5E01               	subwf	i2___aomod@dividend^0,f,c
 44411  0061F6  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 44412  0061F8  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 44413  0061FA  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 44414  0061FC  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 44415  0061FE  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 44416  006200  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 44417  006202  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 44418  006204  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 44419  006206  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 44420  006208  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 44421  00620A  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 44422  00620C  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 44423  00620E  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 44424  006210  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 44425  006212                     i2l17069:
 44426  006212  90D8               	bcf	status,0,c
 44427  006214  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 44428  006216  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 44429  006218  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 44430  00621A  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 44431  00621C  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 44432  00621E  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 44433  006220  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 44434  006222  3209               	rrcf	i2___aomod@divisor^0,f,c
 44435  006224  2E11               	decfsz	i2___aomod@counter^0,f,c
 44436  006226  D7D3               	goto	i2u1568_40
 44437  006228                     i2l17073:
 44438  006228  5012               	movf	i2___aomod@sign^0,w,c
 44439  00622A  B4D8               	btfsc	status,2,c
 44440  00622C  D010               	goto	i2l17077
 44441  00622E  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 44442  006230  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 44443  006232  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 44444  006234  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 44445  006236  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 44446  006238  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 44447  00623A  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 44448  00623C  6C01               	negf	i2___aomod@dividend^0,c
 44449  00623E  0E00               	movlw	0
 44450  006240  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 44451  006242  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 44452  006244  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 44453  006246  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 44454  006248  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 44455  00624A  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 44456  00624C  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 44457  00624E                     i2l17077:
 44458  00624E  0060  F004  F001   	movff	i2___aomod@dividend,?i2___aomod
 44459  006254  0060  F008  F002   	movff	i2___aomod@dividend+1,?i2___aomod+1
 44460  00625A  0060  F00C  F003   	movff	i2___aomod@dividend+2,?i2___aomod+2
 44461  006260  0060  F010  F004   	movff	i2___aomod@dividend+3,?i2___aomod+3
 44462  006266  0060  F014  F005   	movff	i2___aomod@dividend+4,?i2___aomod+4
 44463  00626C  0060  F018  F006   	movff	i2___aomod@dividend+5,?i2___aomod+5
 44464  006272  0060  F01C  F007   	movff	i2___aomod@dividend+6,?i2___aomod+6
 44465  006278  0060  F020  F008   	movff	i2___aomod@dividend+7,?i2___aomod+7
 44466  00627E  0012               	return		;funcret
 44467  006280                     __end_ofi2___aomod:
 44468                           	opt callstack 0
 44469                           
 44470 ;; *************** function i2___aodiv *****************
 44471 ;; Defined at:
 44472 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 44473 ;; Parameters:    Size  Location     Type
 44474 ;;  dividend        8    0[COMRAM] long long 
 44475 ;;  divisor         8    8[COMRAM] long long 
 44476 ;; Auto vars:     Size  Location     Type
 44477 ;;  __aodiv         8   18[COMRAM] long long 
 44478 ;;  __aodiv         1   17[COMRAM] unsigned char 
 44479 ;;  __aodiv         1   16[COMRAM] unsigned char 
 44480 ;; Return value:  Size  Location     Type
 44481 ;;                  8    0[COMRAM] long long 
 44482 ;; Registers used:
 44483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44484 ;; Tracked objects:
 44485 ;;		On entry : 0/3
 44486 ;;		On exit  : 0/0
 44487 ;;		Unchanged: 0/0
 44488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44489 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44490 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44492 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44493 ;;Total ram usage:       26 bytes
 44494 ;; Hardware stack levels used:    1
 44495 ;; This function calls:
 44496 ;;		Nothing
 44497 ;; This function is called by:
 44498 ;;		i2_dtoa
 44499 ;; This function uses a non-reentrant model
 44500 ;;
 44501                           
 44502                           	psect	text364
 44503  005B08                     __ptext364:
 44504                           	opt callstack 0
 44505  005B08                     i2___aodiv:
 44506                           	opt callstack 10
 44507                           
 44508                           ;incstack = 0
 44509  005B08  0E00               	movlw	0
 44510  005B0A  6E12               	movwf	i2___aodiv@sign^0,c
 44511  005B0C  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 44512  005B0E  D012               	goto	i2l17009
 44513  005B10  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 44514  005B12  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 44515  005B14  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 44516  005B16  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 44517  005B18  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 44518  005B1A  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 44519  005B1C  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 44520  005B1E  6C09               	negf	i2___aodiv@divisor^0,c
 44521  005B20  0E00               	movlw	0
 44522  005B22  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 44523  005B24  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 44524  005B26  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 44525  005B28  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 44526  005B2A  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 44527  005B2C  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 44528  005B2E  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 44529  005B30  0E01               	movlw	1
 44530  005B32  6E12               	movwf	i2___aodiv@sign^0,c
 44531  005B34                     i2l17009:
 44532  005B34  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
 44533  005B36  D012               	goto	i2l17015
 44534  005B38  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 44535  005B3A  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 44536  005B3C  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 44537  005B3E  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 44538  005B40  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 44539  005B42  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 44540  005B44  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 44541  005B46  6C01               	negf	i2___aodiv@dividend^0,c
 44542  005B48  0E00               	movlw	0
 44543  005B4A  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 44544  005B4C  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 44545  005B4E  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 44546  005B50  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 44547  005B52  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 44548  005B54  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 44549  005B56  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 44550  005B58  0E01               	movlw	1
 44551  005B5A  1A12               	xorwf	i2___aodiv@sign^0,f,c
 44552  005B5C                     i2l17015:
 44553  005B5C  EE20  F013         	lfsr	2,i2___aodiv@quotient
 44554  005B60  0E07               	movlw	7
 44555  005B62                     i2u1560_41:
 44556  005B62  6ADE               	clrf	postinc2,c
 44557  005B64  06E8               	decf	wreg,f,c
 44558  005B66  E2FD               	bc	i2u1560_41
 44559  005B68  5009               	movf	i2___aodiv@divisor^0,w,c
 44560  005B6A  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 44561  005B6C  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 44562  005B6E  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 44563  005B70  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 44564  005B72  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 44565  005B74  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 44566  005B76  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 44567  005B78  B4D8               	btfsc	status,2,c
 44568  005B7A  D046               	goto	i2l17037
 44569  005B7C  0E01               	movlw	1
 44570  005B7E  6E11               	movwf	i2___aodiv@counter^0,c
 44571  005B80  D00A               	goto	i2l17023
 44572  005B82                     i2l17021:
 44573  005B82  90D8               	bcf	status,0,c
 44574  005B84  3609               	rlcf	i2___aodiv@divisor^0,f,c
 44575  005B86  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 44576  005B88  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 44577  005B8A  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 44578  005B8C  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 44579  005B8E  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 44580  005B90  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 44581  005B92  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 44582  005B94  2A11               	incf	i2___aodiv@counter^0,f,c
 44583  005B96                     i2l17023:
 44584  005B96  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 44585  005B98  D7F4               	goto	i2l17021
 44586  005B9A                     i2u1562_40:
 44587  005B9A  90D8               	bcf	status,0,c
 44588  005B9C  3613               	rlcf	i2___aodiv@quotient^0,f,c
 44589  005B9E  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 44590  005BA0  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 44591  005BA2  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 44592  005BA4  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 44593  005BA6  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 44594  005BA8  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 44595  005BAA  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 44596  005BAC  5009               	movf	i2___aodiv@divisor^0,w,c
 44597  005BAE  5C01               	subwf	i2___aodiv@dividend^0,w,c
 44598  005BB0  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 44599  005BB2  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 44600  005BB4  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 44601  005BB6  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 44602  005BB8  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 44603  005BBA  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 44604  005BBC  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 44605  005BBE  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 44606  005BC0  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 44607  005BC2  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 44608  005BC4  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 44609  005BC6  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 44610  005BC8  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 44611  005BCA  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 44612  005BCC  A0D8               	btfss	status,0,c
 44613  005BCE  D011               	goto	i2l17033
 44614  005BD0  5009               	movf	i2___aodiv@divisor^0,w,c
 44615  005BD2  5E01               	subwf	i2___aodiv@dividend^0,f,c
 44616  005BD4  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 44617  005BD6  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 44618  005BD8  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 44619  005BDA  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 44620  005BDC  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 44621  005BDE  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 44622  005BE0  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 44623  005BE2  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 44624  005BE4  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 44625  005BE6  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 44626  005BE8  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 44627  005BEA  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 44628  005BEC  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 44629  005BEE  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 44630  005BF0  8013               	bsf	i2___aodiv@quotient^0,0,c
 44631  005BF2                     i2l17033:
 44632  005BF2  90D8               	bcf	status,0,c
 44633  005BF4  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 44634  005BF6  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 44635  005BF8  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 44636  005BFA  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 44637  005BFC  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 44638  005BFE  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 44639  005C00  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 44640  005C02  3209               	rrcf	i2___aodiv@divisor^0,f,c
 44641  005C04  2E11               	decfsz	i2___aodiv@counter^0,f,c
 44642  005C06  D7C9               	goto	i2u1562_40
 44643  005C08                     i2l17037:
 44644  005C08  5012               	movf	i2___aodiv@sign^0,w,c
 44645  005C0A  B4D8               	btfsc	status,2,c
 44646  005C0C  D010               	goto	i2l17041
 44647  005C0E  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 44648  005C10  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 44649  005C12  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 44650  005C14  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 44651  005C16  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 44652  005C18  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 44653  005C1A  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 44654  005C1C  6C13               	negf	i2___aodiv@quotient^0,c
 44655  005C1E  0E00               	movlw	0
 44656  005C20  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 44657  005C22  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 44658  005C24  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 44659  005C26  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 44660  005C28  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 44661  005C2A  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 44662  005C2C  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 44663  005C2E                     i2l17041:
 44664  005C2E  0060  F04C  F001   	movff	i2___aodiv@quotient,?i2___aodiv
 44665  005C34  0060  F050  F002   	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 44666  005C3A  0060  F054  F003   	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 44667  005C40  0060  F058  F004   	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 44668  005C46  0060  F05C  F005   	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 44669  005C4C  0060  F060  F006   	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 44670  005C52  0060  F064  F007   	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 44671  005C58  0060  F068  F008   	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 44672  005C5E  0012               	return		;funcret
 44673  005C60                     __end_ofi2___aodiv:
 44674                           	opt callstack 0
 44675                           
 44676 ;; *************** function i2_ctoa *****************
 44677 ;; Defined at:
 44678 ;;		line 259 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 44679 ;; Parameters:    Size  Location     Type
 44680 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 44681 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 44682 ;;  c               1   31[COMRAM] unsigned char 
 44683 ;; Auto vars:     Size  Location     Type
 44684 ;;  ctoa            2   32[COMRAM] int 
 44685 ;;  ctoa            2    0        int 
 44686 ;; Return value:  Size  Location     Type
 44687 ;;                  2   29[COMRAM] int 
 44688 ;; Registers used:
 44689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44690 ;; Tracked objects:
 44691 ;;		On entry : 3F/0
 44692 ;;		On exit  : 0/0
 44693 ;;		Unchanged: 0/0
 44694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44695 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44698 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44699 ;;Total ram usage:        5 bytes
 44700 ;; Hardware stack levels used:    1
 44701 ;; Hardware stack levels required when called:    5
 44702 ;; This function calls:
 44703 ;;		i2_pad
 44704 ;; This function is called by:
 44705 ;;		i2_vfpfcnvrt
 44706 ;; This function uses a non-reentrant model
 44707 ;;
 44708                           
 44709                           	psect	text365
 44710  008AC4                     __ptext365:
 44711                           	opt callstack 0
 44712  008AC4                     i2_ctoa:
 44713                           	opt callstack 6
 44714                           
 44715                           ; BSR set to: 0
 44716                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 44717                           
 44718                           ;incstack = 0
 44719  008AC4  0101               	movlb	1	; () banked
 44720  008AC6  51C7               	movf	_width& (0+255),w,b
 44721  008AC8  11C8               	iorwf	(_width+1)& (0+255),w,b
 44722  008ACA  A4D8               	btfss	status,2,c
 44723  008ACC  D007               	goto	i2l17145
 44724                           
 44725                           ; BSR set to: 1
 44726  008ACE  0060  F71C  F021   	movff	_width,i2ctoa@w
 44727  008AD4  0060  F720  F022   	movff	_width+1,i2ctoa@w+1
 44728  008ADA  D006               	goto	i2l17147
 44729  008ADC                     i2l17145:
 44730                           
 44731                           ; BSR set to: 1
 44732  008ADC  0EFF               	movlw	255
 44733  008ADE  25C7               	addwf	_width& (0+255),w,b
 44734  008AE0  6E21               	movwf	i2ctoa@w^0,c
 44735  008AE2  0EFF               	movlw	255
 44736  008AE4  21C8               	addwfc	(_width+1)& (0+255),w,b
 44737  008AE6  6E22               	movwf	(i2ctoa@w+1)^0,c
 44738  008AE8                     i2l17147:
 44739                           
 44740                           ; BSR set to: 1
 44741                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 44742  008AE8  0060  F080  F389   	movff	i2ctoa@c,_dbuf
 44743                           
 44744                           ; BSR set to: 1
 44745                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 44746  008AEE  0E00               	movlw	0
 44747  008AF0  0103               	movlb	3	; () banked
 44748  008AF2  6F8A               	movwf	(_dbuf+1)& (0+255),b
 44749                           
 44750                           ; BSR set to: 3
 44751                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 44752  008AF4  0060  F078  F013   	movff	i2ctoa@fp,i2pad@fp
 44753  008AFA  0060  F07C  F014   	movff	i2ctoa@fp+1,i2pad@fp+1
 44754  008B00  0E89               	movlw	low _dbuf
 44755  008B02  6E15               	movwf	i2pad@buf^0,c
 44756  008B04  0E03               	movlw	high _dbuf
 44757  008B06  6E16               	movwf	(i2pad@buf+1)^0,c
 44758  008B08  0060  F084  F017   	movff	i2ctoa@w,i2pad@p
 44759  008B0E  0060  F088  F018   	movff	i2ctoa@w+1,i2pad@p+1
 44760  008B14  EC0F  F038         	call	i2_pad	;wreg free
 44761  008B18  0060  F04C  F01E   	movff	?i2_pad,?i2_ctoa
 44762  008B1E  0060  F050  F01F   	movff	?i2_pad+1,?i2_ctoa+1
 44763  008B24  0012               	return		;funcret
 44764  008B26                     __end_ofi2_ctoa:
 44765                           	opt callstack 0
 44766                           
 44767 ;; *************** function i2_pad *****************
 44768 ;; Defined at:
 44769 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 44770 ;; Parameters:    Size  Location     Type
 44771 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 44772 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 44773 ;;  buf             2   20[COMRAM] PTR unsigned char 
 44774 ;;		 -> dbuf(32), 
 44775 ;;  p               2   22[COMRAM] int 
 44776 ;; Auto vars:     Size  Location     Type
 44777 ;;  pad             2   27[COMRAM] int 
 44778 ;;  pad             2   25[COMRAM] int 
 44779 ;; Return value:  Size  Location     Type
 44780 ;;                  2   18[COMRAM] int 
 44781 ;; Registers used:
 44782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44783 ;; Tracked objects:
 44784 ;;		On entry : 0/1
 44785 ;;		On exit  : 0/0
 44786 ;;		Unchanged: 0/0
 44787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44788 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44789 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44791 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44792 ;;Total ram usage:       11 bytes
 44793 ;; Hardware stack levels used:    1
 44794 ;; Hardware stack levels required when called:    4
 44795 ;; This function calls:
 44796 ;;		i2_fputc
 44797 ;;		i2_fputs
 44798 ;;		i2_strlen
 44799 ;; This function is called by:
 44800 ;;		i2_ctoa
 44801 ;;		i2_dtoa
 44802 ;;		i2_xtoa
 44803 ;; This function uses a non-reentrant model
 44804 ;;
 44805                           
 44806                           	psect	text366
 44807  00701E                     __ptext366:
 44808                           	opt callstack 0
 44809  00701E                     i2_pad:
 44810                           	opt callstack 6
 44811                           
 44812                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 44813                           
 44814                           ;incstack = 0
 44815  00701E  0101               	movlb	1	; () banked
 44816  007020  A1CB               	btfss	_flags& (0+255),0,b
 44817  007022  D00E               	goto	i2l16977
 44818                           
 44819                           ; BSR set to: 1
 44820                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 44821  007024  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 44822  00702A  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 44823  007030  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 44824  007036  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 44825  00703C  EC51  F04A         	call	i2_fputs	;wreg free
 44826  007040                     i2l16977:
 44827                           
 44828                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 44829  007040  BE18               	btfsc	(i2pad@p+1)^0,7,c
 44830  007042  D007               	goto	i2l16981
 44831  007044  0060  F05C  F01C   	movff	i2pad@p,i2pad@w
 44832  00704A  0060  F060  F01D   	movff	i2pad@p+1,i2pad@w+1
 44833  007050  D004               	goto	i2l3473
 44834  007052                     i2l16981:
 44835  007052  0E00               	movlw	0
 44836  007054  6E1D               	movwf	(i2pad@w+1)^0,c
 44837  007056  0E00               	movlw	0
 44838  007058  6E1C               	movwf	i2pad@w^0,c
 44839  00705A                     i2l3473:
 44840                           
 44841                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 44842  00705A  0E00               	movlw	0
 44843  00705C  6E1B               	movwf	(i2pad@i+1)^0,c
 44844  00705E  0E00               	movlw	0
 44845  007060  6E1A               	movwf	i2pad@i^0,c
 44846                           
 44847                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 44848  007062  D00E               	goto	i2l16987
 44849  007064                     i2l16983:
 44850                           
 44851                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 44852  007064  0E00               	movlw	0
 44853  007066  6E04               	movwf	(i2fputc@c+1)^0,c
 44854  007068  0E20               	movlw	32
 44855  00706A  6E03               	movwf	i2fputc@c^0,c
 44856  00706C  0060  F04C  F005   	movff	i2pad@fp,i2fputc@fp
 44857  007072  0060  F050  F006   	movff	i2pad@fp+1,i2fputc@fp+1
 44858  007078  EC25  F03A         	call	i2_fputc	;wreg free
 44859                           
 44860                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 44861  00707C  4A1A               	infsnz	i2pad@i^0,f,c
 44862  00707E  2A1B               	incf	(i2pad@i+1)^0,f,c
 44863  007080                     i2l16987:
 44864                           
 44865                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 44866  007080  501C               	movf	i2pad@w^0,w,c
 44867  007082  5C1A               	subwf	i2pad@i^0,w,c
 44868  007084  501B               	movf	(i2pad@i+1)^0,w,c
 44869  007086  0A80               	xorlw	128
 44870  007088  6E19               	movwf	??i2_pad^0,c
 44871  00708A  501D               	movf	(i2pad@w+1)^0,w,c
 44872  00708C  0A80               	xorlw	128
 44873  00708E  5819               	subwfb	??i2_pad^0,w,c
 44874  007090  A0D8               	btfss	status,0,c
 44875  007092  D7E8               	goto	i2l16983
 44876                           
 44877                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 44878  007094  0101               	movlb	1	; () banked
 44879  007096  B1CB               	btfsc	_flags& (0+255),0,b
 44880  007098  D00E               	goto	i2l16991
 44881                           
 44882                           ; BSR set to: 1
 44883                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 44884  00709A  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 44885  0070A0  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 44886  0070A6  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 44887  0070AC  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 44888  0070B2  EC51  F04A         	call	i2_fputs	;wreg free
 44889  0070B6                     i2l16991:
 44890                           
 44891                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 44892  0070B6  0060  F054  F001   	movff	i2pad@buf,i2strlen@s
 44893  0070BC  0060  F058  F002   	movff	i2pad@buf+1,i2strlen@s+1
 44894  0070C2  EC0F  F048         	call	i2_strlen	;wreg free
 44895  0070C6  501C               	movf	i2pad@w^0,w,c
 44896  0070C8  2401               	addwf	?i2_strlen^0,w,c
 44897  0070CA  6E13               	movwf	?i2_pad^0,c
 44898  0070CC  501D               	movf	(i2pad@w+1)^0,w,c
 44899  0070CE  2002               	addwfc	(?i2_strlen+1)^0,w,c
 44900  0070D0  6E14               	movwf	(?i2_pad+1)^0,c
 44901  0070D2  0012               	return		;funcret
 44902  0070D4                     __end_ofi2_pad:
 44903                           	opt callstack 0
 44904                           
 44905 ;; *************** function i2_strlen *****************
 44906 ;; Defined at:
 44907 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 44908 ;; Parameters:    Size  Location     Type
 44909 ;;  s               2    0[COMRAM] PTR const unsigned char 
 44910 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 44911 ;;		 -> dbuf(32), adcVOffset(2), adcOffset(2), STR_29(3), 
 44912 ;;		 -> STR_28(3), STR_27(3), STR_26(3), alarmData(399), 
 44913 ;;		 -> msg3(20), STR_11(3), msg2(20), msg1(20), 
 44914 ;;		 -> msg4(20), LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), 
 44915 ;;		 -> STR_5(17), 
 44916 ;; Auto vars:     Size  Location     Type
 44917 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 44918 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 44919 ;;		 -> dbuf(32), adcVOffset(2), adcOffset(2), STR_29(3), 
 44920 ;;		 -> STR_28(3), STR_27(3), STR_26(3), alarmData(399), 
 44921 ;;		 -> msg3(20), STR_11(3), msg2(20), msg1(20), 
 44922 ;;		 -> msg4(20), LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), 
 44923 ;;		 -> STR_5(17), 
 44924 ;; Return value:  Size  Location     Type
 44925 ;;                  2    0[COMRAM] unsigned int 
 44926 ;; Registers used:
 44927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 44928 ;; Tracked objects:
 44929 ;;		On entry : 0/1
 44930 ;;		On exit  : 0/0
 44931 ;;		Unchanged: 0/0
 44932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44937 ;;Total ram usage:        4 bytes
 44938 ;; Hardware stack levels used:    1
 44939 ;; This function calls:
 44940 ;;		Nothing
 44941 ;; This function is called by:
 44942 ;;		i2_pad
 44943 ;;		i2_stoa
 44944 ;; This function uses a non-reentrant model
 44945 ;;
 44946                           
 44947                           	psect	text367
 44948  00901E                     __ptext367:
 44949                           	opt callstack 0
 44950  00901E                     i2_strlen:
 44951                           	opt callstack 9
 44952                           
 44953                           ;incstack = 0
 44954  00901E  0060  F004  F003   	movff	i2strlen@s,i2strlen@a
 44955  009024  0060  F008  F004   	movff	i2strlen@s+1,i2strlen@a+1
 44956  00902A  D002               	goto	i2l16947
 44957  00902C                     i2l16945:
 44958  00902C  4A01               	infsnz	i2strlen@s^0,f,c
 44959  00902E  2A02               	incf	(i2strlen@s+1)^0,f,c
 44960  009030                     i2l16947:
 44961  009030  0060  F007  FFF6   	movff	i2strlen@s,tblptrl
 44962  009036  0060  F00B  FFF7   	movff	i2strlen@s+1,tblptrh
 44963  00903C  0E00               	movlw	low (__mediumconst shr (0+16))
 44964  00903E  6EF8               	movwf	tblptru,c
 44965  009040  0E0F               	movlw	(high __ramtop+-1)
 44966  009042  64F7               	cpfsgt	tblptrh,c
 44967  009044  D003               	bra	i2u1546_47
 44968  009046  0008               	tblrd		*
 44969  009048  50F5               	movf	tablat,w,c
 44970  00904A  D007               	bra	i2u1546_40
 44971  00904C                     i2u1546_47:
 44972  00904C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 44973  009052  006F FFDF FFE2     	movff	tblptrh,fsr1h
 44974  009058  50E7               	movf	indf1,w,c
 44975  00905A                     i2u1546_40:
 44976  00905A  0900               	iorlw	0
 44977  00905C  A4D8               	btfss	status,2,c
 44978  00905E  D7E6               	goto	i2l16945
 44979  009060  5003               	movf	i2strlen@a^0,w,c
 44980  009062  5C01               	subwf	i2strlen@s^0,w,c
 44981  009064  6E01               	movwf	?i2_strlen^0,c
 44982  009066  5004               	movf	(i2strlen@a+1)^0,w,c
 44983  009068  5802               	subwfb	(i2strlen@s+1)^0,w,c
 44984  00906A  6E02               	movwf	(?i2_strlen+1)^0,c
 44985  00906C  0012               	return		;funcret
 44986  00906E                     __end_ofi2_strlen:
 44987                           	opt callstack 0
 44988                           
 44989 ;; *************** function i2_fputs *****************
 44990 ;; Defined at:
 44991 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 44992 ;; Parameters:    Size  Location     Type
 44993 ;;  s               2   11[COMRAM] PTR const unsigned char 
 44994 ;;		 -> dbuf(32), 
 44995 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 44996 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 44997 ;; Auto vars:     Size  Location     Type
 44998 ;;  fputs           2   16[COMRAM] int 
 44999 ;;  fputs           1   15[COMRAM] unsigned char 
 45000 ;; Return value:  Size  Location     Type
 45001 ;;                  2   11[COMRAM] int 
 45002 ;; Registers used:
 45003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 45004 ;; Tracked objects:
 45005 ;;		On entry : 3F/1
 45006 ;;		On exit  : 0/0
 45007 ;;		Unchanged: 0/0
 45008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45010 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45012 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45013 ;;Total ram usage:        7 bytes
 45014 ;; Hardware stack levels used:    1
 45015 ;; Hardware stack levels required when called:    3
 45016 ;; This function calls:
 45017 ;;		i2_fputc
 45018 ;; This function is called by:
 45019 ;;		i2_pad
 45020 ;; This function uses a non-reentrant model
 45021 ;;
 45022                           
 45023                           	psect	text368
 45024  0094A2                     __ptext368:
 45025                           	opt callstack 0
 45026  0094A2                     i2_fputs:
 45027                           	opt callstack 6
 45028                           
 45029                           ; BSR set to: 1
 45030                           
 45031                           ;incstack = 0
 45032  0094A2  0E00               	movlw	0
 45033  0094A4  6E12               	movwf	(i2fputs@i+1)^0,c
 45034  0094A6  0E00               	movlw	0
 45035  0094A8  6E11               	movwf	i2fputs@i^0,c
 45036  0094AA  D00E               	goto	i2l16941
 45037  0094AC                     i2l16937:
 45038  0094AC  0060  F040  F003   	movff	i2fputs@c,i2fputc@c
 45039  0094B2  6A04               	clrf	(i2fputc@c+1)^0,c
 45040  0094B4  0060  F038  F005   	movff	i2fputs@fp,i2fputc@fp
 45041  0094BA  0060  F03C  F006   	movff	i2fputs@fp+1,i2fputc@fp+1
 45042  0094C0  EC25  F03A         	call	i2_fputc	;wreg free
 45043  0094C4  4A11               	infsnz	i2fputs@i^0,f,c
 45044  0094C6  2A12               	incf	(i2fputs@i+1)^0,f,c
 45045  0094C8                     i2l16941:
 45046  0094C8  5011               	movf	i2fputs@i^0,w,c
 45047  0094CA  240C               	addwf	i2fputs@s^0,w,c
 45048  0094CC  6ED9               	movwf	fsr2l,c
 45049  0094CE  5012               	movf	(i2fputs@i+1)^0,w,c
 45050  0094D0  200D               	addwfc	(i2fputs@s+1)^0,w,c
 45051  0094D2  6EDA               	movwf	fsr2h,c
 45052  0094D4  50DF               	movf	indf2,w,c
 45053  0094D6  6E10               	movwf	i2fputs@c^0,c
 45054  0094D8  5010               	movf	i2fputs@c^0,w,c
 45055  0094DA  B4D8               	btfsc	status,2,c
 45056  0094DC  0012               	return	
 45057  0094DE  D7E6               	goto	i2l16937
 45058  0094E0                     __end_ofi2_fputs:
 45059                           	opt callstack 0
 45060                           
 45061 ;; *************** function i2_fputc *****************
 45062 ;; Defined at:
 45063 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 45064 ;; Parameters:    Size  Location     Type
 45065 ;;  c               2    2[COMRAM] int 
 45066 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 45067 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 45068 ;; Auto vars:     Size  Location     Type
 45069 ;;		None
 45070 ;; Return value:  Size  Location     Type
 45071 ;;                  2    2[COMRAM] int 
 45072 ;; Registers used:
 45073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 45074 ;; Tracked objects:
 45075 ;;		On entry : 0/1
 45076 ;;		On exit  : 0/0
 45077 ;;		Unchanged: 0/0
 45078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45081 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45082 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45083 ;;Total ram usage:        9 bytes
 45084 ;; Hardware stack levels used:    1
 45085 ;; Hardware stack levels required when called:    2
 45086 ;; This function calls:
 45087 ;;		i2_putch
 45088 ;; This function is called by:
 45089 ;;		i2_pad
 45090 ;;		i2_stoa
 45091 ;;		i2_vfpfcnvrt
 45092 ;;		i2_fputs
 45093 ;; This function uses a non-reentrant model
 45094 ;;
 45095                           
 45096                           	psect	text369
 45097  00744A                     __ptext369:
 45098                           	opt callstack 0
 45099  00744A                     i2_fputc:
 45100                           	opt callstack 6
 45101                           
 45102                           ;incstack = 0
 45103  00744A  5005               	movf	i2fputc@fp^0,w,c
 45104  00744C  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 45105  00744E  B4D8               	btfsc	status,2,c
 45106  007450  D004               	goto	i2u1542_40
 45107  007452  5005               	movf	i2fputc@fp^0,w,c
 45108  007454  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 45109  007456  A4D8               	btfss	status,2,c
 45110  007458  D004               	goto	i2l16925
 45111  00745A                     i2u1542_40:
 45112  00745A  5003               	movf	i2fputc@c^0,w,c
 45113  00745C  EC33  F052         	call	i2_putch
 45114  007460  0012               	return	
 45115  007462                     i2l16925:
 45116  007462  EE20 F004          	lfsr	2,4
 45117  007466  5005               	movf	i2fputc@fp^0,w,c
 45118  007468  26D9               	addwf	fsr2l,f,c
 45119  00746A  5006               	movf	(i2fputc@fp+1)^0,w,c
 45120  00746C  22DA               	addwfc	fsr2h,f,c
 45121  00746E  50DE               	movf	postinc2,w,c
 45122  007470  10DE               	iorwf	postinc2,w,c
 45123  007472  B4D8               	btfsc	status,2,c
 45124  007474  D016               	goto	i2u1544_40
 45125  007476  EE20 F004          	lfsr	2,4
 45126  00747A  5005               	movf	i2fputc@fp^0,w,c
 45127  00747C  26D9               	addwf	fsr2l,f,c
 45128  00747E  5006               	movf	(i2fputc@fp+1)^0,w,c
 45129  007480  22DA               	addwfc	fsr2h,f,c
 45130  007482  EE10 F002          	lfsr	1,2
 45131  007486  5005               	movf	i2fputc@fp^0,w,c
 45132  007488  26E1               	addwf	fsr1l,f,c
 45133  00748A  5006               	movf	(i2fputc@fp+1)^0,w,c
 45134  00748C  22E2               	addwfc	fsr1h,f,c
 45135  00748E  50DE               	movf	postinc2,w,c
 45136  007490  5CE6               	subwf	postinc1,w,c
 45137  007492  50E6               	movf	postinc1,w,c
 45138  007494  0A80               	xorlw	128
 45139  007496  6E0B               	movwf	(??i2_fputc+4)^0,c
 45140  007498  50DE               	movf	postinc2,w,c
 45141  00749A  0A80               	xorlw	128
 45142  00749C  580B               	subwfb	(??i2_fputc+4)^0,w,c
 45143  00749E  B0D8               	btfsc	status,0,c
 45144  0074A0  0012               	return	
 45145  0074A2                     i2u1544_40:
 45146  0074A2  EE20 F002          	lfsr	2,2
 45147  0074A6  5005               	movf	i2fputc@fp^0,w,c
 45148  0074A8  26D9               	addwf	fsr2l,f,c
 45149  0074AA  5006               	movf	(i2fputc@fp+1)^0,w,c
 45150  0074AC  22DA               	addwfc	fsr2h,f,c
 45151  0074AE  006F FF78  F007    	movff	postinc2,??i2_fputc
 45152  0074B4  006F FF74  F008    	movff	postdec2,??i2_fputc+1
 45153  0074BA  0060  F017  FFD9   	movff	i2fputc@fp,fsr2l
 45154  0074C0  0060  F01B  FFDA   	movff	i2fputc@fp+1,fsr2h
 45155  0074C6  006F FF78  F009    	movff	postinc2,??i2_fputc+2
 45156  0074CC  006F FF74  F00A    	movff	postdec2,??i2_fputc+3
 45157  0074D2  5007               	movf	??i2_fputc^0,w,c
 45158  0074D4  2409               	addwf	(??i2_fputc+2)^0,w,c
 45159  0074D6  6ED9               	movwf	fsr2l,c
 45160  0074D8  5008               	movf	(??i2_fputc+1)^0,w,c
 45161  0074DA  200A               	addwfc	(??i2_fputc+3)^0,w,c
 45162  0074DC  6EDA               	movwf	fsr2h,c
 45163  0074DE  0060  F00F  FFDF   	movff	i2fputc@c,indf2
 45164  0074E4  EE20 F002          	lfsr	2,2
 45165  0074E8  5005               	movf	i2fputc@fp^0,w,c
 45166  0074EA  26D9               	addwf	fsr2l,f,c
 45167  0074EC  5006               	movf	(i2fputc@fp+1)^0,w,c
 45168  0074EE  22DA               	addwfc	fsr2h,f,c
 45169  0074F0  2ADE               	incf	postinc2,f,c
 45170  0074F2  0E00               	movlw	0
 45171  0074F4  22DD               	addwfc	postdec2,f,c
 45172  0074F6  0012               	return		;funcret
 45173  0074F8                     __end_ofi2_fputc:
 45174                           	opt callstack 0
 45175                           
 45176 ;; *************** function i2_putch *****************
 45177 ;; Defined at:
 45178 ;;		line 229 in file "mcc_generated_files/uart1.c"
 45179 ;; Parameters:    Size  Location     Type
 45180 ;;  txData          1    wreg     unsigned char 
 45181 ;; Auto vars:     Size  Location     Type
 45182 ;;  txData          1    1[COMRAM] unsigned char 
 45183 ;; Return value:  Size  Location     Type
 45184 ;;                  1    wreg      void 
 45185 ;; Registers used:
 45186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45187 ;; Tracked objects:
 45188 ;;		On entry : 0/1
 45189 ;;		On exit  : 3F/39
 45190 ;;		Unchanged: 0/0
 45191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45196 ;;Total ram usage:        1 bytes
 45197 ;; Hardware stack levels used:    1
 45198 ;; Hardware stack levels required when called:    1
 45199 ;; This function calls:
 45200 ;;		i2_UART1_Write
 45201 ;; This function is called by:
 45202 ;;		i2_fputc
 45203 ;; This function uses a non-reentrant model
 45204 ;;
 45205                           
 45206                           	psect	text370
 45207  00A466                     __ptext370:
 45208                           	opt callstack 0
 45209  00A466                     i2_putch:
 45210                           	opt callstack 6
 45211                           
 45212                           ;incstack = 0
 45213                           ;i2putch@txData stored from wreg
 45214  00A466  6E02               	movwf	i2putch@txData^0,c
 45215                           
 45216                           ;mcc_generated_files/uart1.c: 229: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          230: {;mcc_generated_files/uart1.c: 231:     UART1_Write(txData);
 45217  00A468  5002               	movf	i2putch@txData^0,w,c
 45218  00A46A  EC9E  F046         	call	i2_UART1_Write
 45219                           
 45220                           ; BSR set to: 57
 45221  00A46E  0012               	return		;funcret
 45222  00A470                     __end_ofi2_putch:
 45223                           	opt callstack 0
 45224                           
 45225 ;; *************** function i2_UART1_Write *****************
 45226 ;; Defined at:
 45227 ;;		line 201 in file "mcc_generated_files/uart1.c"
 45228 ;; Parameters:    Size  Location     Type
 45229 ;;  txData          1    wreg     unsigned char 
 45230 ;; Auto vars:     Size  Location     Type
 45231 ;;  txData          1    0[COMRAM] unsigned char 
 45232 ;; Return value:  Size  Location     Type
 45233 ;;                  1    wreg      void 
 45234 ;; Registers used:
 45235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45236 ;; Tracked objects:
 45237 ;;		On entry : 0/1
 45238 ;;		On exit  : 3F/39
 45239 ;;		Unchanged: 0/0
 45240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45245 ;;Total ram usage:        1 bytes
 45246 ;; Hardware stack levels used:    1
 45247 ;; This function calls:
 45248 ;;		Nothing
 45249 ;; This function is called by:
 45250 ;;		i2_putch
 45251 ;; This function uses a non-reentrant model
 45252 ;;
 45253                           
 45254                           	psect	text371
 45255  008D3C                     __ptext371:
 45256                           	opt callstack 0
 45257  008D3C                     i2_UART1_Write:
 45258                           	opt callstack 6
 45259                           
 45260                           ; BSR set to: 57
 45261                           ;incstack = 0
 45262                           ;i2UART1_Write@txData stored from wreg
 45263  008D3C  6E01               	movwf	i2UART1_Write@txData^0,c
 45264  008D3E                     
 45265                           ;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 45266                           
 45267                           ;mcc_generated_files/uart1.c: 201: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 202: {;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 45268  008D3E  0102               	movlb	2	; () banked
 45269  008D40  51EB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 45270  008D42  11EC               	iorwf	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 45271  008D44  B4D8               	btfsc	status,2,c
 45272  008D46  D7FB               	goto	i2l16881
 45273                           
 45274                           ; BSR set to: 2
 45275                           ;mcc_generated_files/uart1.c: 207:     if(0 == PIE3bits.U1TXIE)
 45276  008D48  0139               	movlb	57	; () banked
 45277  008D4A  B993               	btfsc	147,4,b	;volatile
 45278  008D4C  D004               	goto	i2l657
 45279                           
 45280                           ; BSR set to: 57
 45281                           ;mcc_generated_files/uart1.c: 208:     {;mcc_generated_files/uart1.c: 209:         U1TXB
      +                           = txData;
 45282  008D4E  0060  F007  FDEA   	movff	i2UART1_Write@txData,15850	;volatile
 45283                           
 45284                           ;mcc_generated_files/uart1.c: 210:     }
 45285  008D54  D01B               	goto	i2l16897
 45286  008D56                     i2l657:
 45287                           
 45288                           ; BSR set to: 57
 45289                           ;mcc_generated_files/uart1.c: 212:     {;mcc_generated_files/uart1.c: 213:         PIE3b
      +                          its.U1TXIE = 0;
 45290  008D56  9993               	bcf	147,4,b	;volatile
 45291                           
 45292                           ; BSR set to: 57
 45293                           ;mcc_generated_files/uart1.c: 214:         uart1TxBuffer[uart1TxHead++] = txData;
 45294  008D58  0E64               	movlw	low _uart1TxBuffer
 45295  008D5A  0101               	movlb	1	; () banked
 45296  008D5C  25ED               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 45297  008D5E  6ED9               	movwf	fsr2l,c
 45298  008D60  0E04               	movlw	high _uart1TxBuffer
 45299  008D62  21EE               	addwfc	(_uart1TxHead+1)& (0+255),w,b	;volatile
 45300  008D64  6EDA               	movwf	fsr2h,c
 45301  008D66  0060  F007  FFDF   	movff	i2UART1_Write@txData,indf2
 45302                           
 45303                           ; BSR set to: 1
 45304  008D6C  4BED               	infsnz	_uart1TxHead& (0+255),f,b	;volatile
 45305  008D6E  2BEE               	incf	(_uart1TxHead+1)& (0+255),f,b	;volatile
 45306                           
 45307                           ; BSR set to: 1
 45308                           ;mcc_generated_files/uart1.c: 215:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 45309  008D70  0EB0               	movlw	176
 45310  008D72  5DED               	subwf	_uart1TxHead& (0+255),w,b	;volatile
 45311  008D74  0E04               	movlw	4
 45312  008D76  59EE               	subwfb	(_uart1TxHead+1)& (0+255),w,b	;volatile
 45313  008D78  A0D8               	btfss	status,0,c
 45314  008D7A  D004               	goto	i2l16895
 45315                           
 45316                           ; BSR set to: 1
 45317                           ;mcc_generated_files/uart1.c: 216:         {;mcc_generated_files/uart1.c: 217:          
      +                             uart1TxHead = 0;
 45318  008D7C  0E00               	movlw	0
 45319  008D7E  6FEE               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
 45320  008D80  0E00               	movlw	0
 45321  008D82  6FED               	movwf	_uart1TxHead& (0+255),b	;volatile
 45322  008D84                     i2l16895:
 45323                           
 45324                           ; BSR set to: 1
 45325                           ;mcc_generated_files/uart1.c: 219:         uart1TxBufferRemaining--;
 45326  008D84  0102               	movlb	2	; () banked
 45327  008D86  07EB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 45328  008D88  A0D8               	btfss	status,0,c
 45329  008D8A  07EC               	decf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 45330  008D8C                     i2l16897:
 45331                           
 45332                           ;mcc_generated_files/uart1.c: 221:     PIE3bits.U1TXIE = 1;
 45333  008D8C  0139               	movlb	57	; () banked
 45334  008D8E  8993               	bsf	147,4,b	;volatile
 45335                           
 45336                           ; BSR set to: 57
 45337  008D90  0012               	return		;funcret
 45338  008D92                     __end_ofi2_UART1_Write:
 45339                           	opt callstack 0
 45340                           
 45341 ;; *************** function i2_atoi *****************
 45342 ;; Defined at:
 45343 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 45344 ;; Parameters:    Size  Location     Type
 45345 ;;  s               2    7[COMRAM] PTR const unsigned char 
 45346 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 45347 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 45348 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 45349 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 45350 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 45351 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 45352 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 45353 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 45354 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 45355 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 45356 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 45357 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 45358 ;; Auto vars:     Size  Location     Type
 45359 ;;  atoi            2   20[COMRAM] int 
 45360 ;;  atoi            2   13[COMRAM] int 
 45361 ;; Return value:  Size  Location     Type
 45362 ;;                  2    7[COMRAM] int 
 45363 ;; Registers used:
 45364 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45365 ;; Tracked objects:
 45366 ;;		On entry : 3F/1
 45367 ;;		On exit  : 0/0
 45368 ;;		Unchanged: 0/0
 45369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45371 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45373 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45374 ;;Total ram usage:       15 bytes
 45375 ;; Hardware stack levels used:    1
 45376 ;; Hardware stack levels required when called:    1
 45377 ;; This function calls:
 45378 ;;		i2___wmul
 45379 ;;		i2_isdigit
 45380 ;;		i2_isspace
 45381 ;; This function is called by:
 45382 ;;		i2_vfpfcnvrt
 45383 ;; This function uses a non-reentrant model
 45384 ;;
 45385                           
 45386                           	psect	text372
 45387  0056D2                     __ptext372:
 45388                           	opt callstack 0
 45389  0056D2                     i2_atoi:
 45390                           	opt callstack 10
 45391                           
 45392                           ; BSR set to: 1
 45393                           
 45394                           ; BSR set to: 57
 45395                           ;incstack = 0
 45396  0056D2  0E00               	movlw	0
 45397  0056D4  6E16               	movwf	(i2atoi@n+1)^0,c
 45398  0056D6  0E00               	movlw	0
 45399  0056D8  6E15               	movwf	i2atoi@n^0,c
 45400  0056DA  0E00               	movlw	0
 45401  0056DC  6E0F               	movwf	(i2atoi@neg+1)^0,c
 45402  0056DE  0E00               	movlw	0
 45403  0056E0  6E0E               	movwf	i2atoi@neg^0,c
 45404  0056E2  D002               	goto	i2l17329
 45405  0056E4                     i2l17327:
 45406                           
 45407                           ; BSR set to: 1
 45408  0056E4  4A08               	infsnz	i2atoi@s^0,f,c
 45409  0056E6  2A09               	incf	(i2atoi@s+1)^0,f,c
 45410  0056E8                     i2l17329:
 45411                           
 45412                           ; BSR set to: 1
 45413  0056E8  0E01               	movlw	1
 45414  0056EA  6E14               	movwf	i2_atoi$5675^0,c
 45415                           
 45416                           ; BSR set to: 1
 45417  0056EC  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45418  0056F2  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45419  0056F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45420  0056F8  6AF8               	clrf	tblptru,c
 45421  0056FA                     	endif
 45422  0056FA                     	if	0	;tblptru may be non-zero
 45423  0056FA                     	endif
 45424  0056FA  0008               	tblrd		*
 45425  0056FC  50F5               	movf	tablat,w,c
 45426  0056FE  0A20               	xorlw	32
 45427  005700  B4D8               	btfsc	status,2,c
 45428  005702  D01B               	goto	i2l17337
 45429                           
 45430                           ; BSR set to: 1
 45431  005704  0EF7               	movlw	247
 45432  005706  6E0A               	movwf	??i2_atoi^0,c
 45433  005708  0EFF               	movlw	255
 45434  00570A  6E0B               	movwf	(??i2_atoi+1)^0,c
 45435  00570C  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45436  005712  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45437  005718                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45438  005718  6AF8               	clrf	tblptru,c
 45439  00571A                     	endif
 45440  00571A                     	if	0	;tblptru may be non-zero
 45441  00571A                     	endif
 45442  00571A  0008               	tblrd		*
 45443  00571C  50F5               	movf	tablat,w,c
 45444  00571E  6E0C               	movwf	(??i2_atoi+2)^0,c
 45445  005720  6A0D               	clrf	(??i2_atoi+3)^0,c
 45446  005722  500A               	movf	??i2_atoi^0,w,c
 45447  005724  260C               	addwf	(??i2_atoi+2)^0,f,c
 45448  005726  500B               	movf	(??i2_atoi+1)^0,w,c
 45449  005728  220D               	addwfc	(??i2_atoi+3)^0,f,c
 45450  00572A  500D               	movf	(??i2_atoi+3)^0,w,c
 45451  00572C  E104               	bnz	i2u1632_40
 45452  00572E  0E05               	movlw	5
 45453  005730  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 45454  005732  A0D8               	btfss	status,0,c
 45455  005734  D002               	goto	i2l17337
 45456  005736                     i2u1632_40:
 45457                           
 45458                           ; BSR set to: 1
 45459  005736  0E00               	movlw	0
 45460  005738  6E14               	movwf	i2_atoi$5675^0,c
 45461  00573A                     i2l17337:
 45462                           
 45463                           ; BSR set to: 1
 45464  00573A  0060  F050  F010   	movff	i2_atoi$5675,i2_atoi$5674
 45465  005740  6A11               	clrf	(i2_atoi$5674+1)^0,c
 45466                           
 45467                           ; BSR set to: 1
 45468  005742  5010               	movf	i2_atoi$5674^0,w,c
 45469  005744  1011               	iorwf	(i2_atoi$5674+1)^0,w,c
 45470  005746  B4D8               	btfsc	status,2,c
 45471  005748  D008               	goto	i2l17347
 45472  00574A  D7CC               	goto	i2l17327
 45473  00574C                     i2l17343:
 45474                           
 45475                           ; BSR set to: 1
 45476  00574C  0E00               	movlw	0
 45477  00574E  6E0F               	movwf	(i2atoi@neg+1)^0,c
 45478  005750  0E01               	movlw	1
 45479  005752  6E0E               	movwf	i2atoi@neg^0,c
 45480  005754                     i2l17345:
 45481  005754  4A08               	infsnz	i2atoi@s^0,f,c
 45482  005756  2A09               	incf	(i2atoi@s+1)^0,f,c
 45483  005758  D036               	goto	i2l17353
 45484  00575A                     i2l17347:
 45485                           
 45486                           ; BSR set to: 1
 45487  00575A  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45488  005760  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45489  005766                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45490  005766  6AF8               	clrf	tblptru,c
 45491  005768                     	endif
 45492  005768                     	if	0	;tblptru may be non-zero
 45493  005768                     	endif
 45494  005768  0008               	tblrd		*
 45495  00576A  50F5               	movf	tablat,w,c
 45496  00576C  6E0A               	movwf	??i2_atoi^0,c
 45497  00576E  6A0B               	clrf	(??i2_atoi+1)^0,c
 45498                           
 45499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45500                           ; Switch size 1, requested type "simple"
 45501                           ; Number of cases is 1, Range of values is 0 to 0
 45502                           ; switch strategies available:
 45503                           ; Name         Instructions Cycles
 45504                           ; simple_byte            4     3 (average)
 45505                           ;	Chosen strategy is simple_byte
 45506  005770  500B               	movf	(??i2_atoi+1)^0,w,c
 45507  005772  0A00               	xorlw	0	; case 0
 45508  005774  A4D8               	btfss	status,2,c
 45509  005776  D027               	goto	i2l17353
 45510                           
 45511                           ; BSR set to: 1
 45512                           ; Switch size 1, requested type "simple"
 45513                           ; Number of cases is 2, Range of values is 43 to 45
 45514                           ; switch strategies available:
 45515                           ; Name         Instructions Cycles
 45516                           ; simple_byte            7     4 (average)
 45517                           ;	Chosen strategy is simple_byte
 45518  005778  500A               	movf	??i2_atoi^0,w,c
 45519  00577A  0A2B               	xorlw	43	; case 43
 45520  00577C  B4D8               	btfsc	status,2,c
 45521  00577E  D7EA               	goto	i2l17345
 45522  005780  0A06               	xorlw	6	; case 45
 45523  005782  B4D8               	btfsc	status,2,c
 45524  005784  D7E3               	goto	i2l17343
 45525  005786  D01F               	goto	i2l17353
 45526  005788                     i2l17349:
 45527  005788  0060  F054  F001   	movff	i2atoi@n,i2___wmul@multiplier
 45528  00578E  0060  F058  F002   	movff	i2atoi@n+1,i2___wmul@multiplier+1
 45529  005794  0E00               	movlw	0
 45530  005796  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 45531  005798  0E0A               	movlw	10
 45532  00579A  6E03               	movwf	i2___wmul@multiplicand^0,c
 45533  00579C  ECD3  F04C         	call	i2___wmul	;wreg free
 45534  0057A0  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45535  0057A6  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45536  0057AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45537  0057AC  6AF8               	clrf	tblptru,c
 45538  0057AE                     	endif
 45539  0057AE                     	if	0	;tblptru may be non-zero
 45540  0057AE                     	endif
 45541  0057AE  0008               	tblrd		*
 45542  0057B0  50F5               	movf	tablat,w,c
 45543  0057B2  5E01               	subwf	?i2___wmul^0,f,c
 45544  0057B4  0E00               	movlw	0
 45545  0057B6  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 45546  0057B8  0E30               	movlw	48
 45547  0057BA  2401               	addwf	?i2___wmul^0,w,c
 45548  0057BC  6E15               	movwf	i2atoi@n^0,c
 45549  0057BE  0E00               	movlw	0
 45550  0057C0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 45551  0057C2  6E16               	movwf	(i2atoi@n+1)^0,c
 45552  0057C4  D7C7               	goto	i2l17345
 45553  0057C6                     i2l17353:
 45554  0057C6  0ED0               	movlw	208
 45555  0057C8  6E0A               	movwf	??i2_atoi^0,c
 45556  0057CA  0EFF               	movlw	255
 45557  0057CC  6E0B               	movwf	(??i2_atoi+1)^0,c
 45558  0057CE  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 45559  0057D4  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 45560  0057DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45561  0057DA  6AF8               	clrf	tblptru,c
 45562  0057DC                     	endif
 45563  0057DC                     	if	0	;tblptru may be non-zero
 45564  0057DC                     	endif
 45565  0057DC  0008               	tblrd		*
 45566  0057DE  50F5               	movf	tablat,w,c
 45567  0057E0  6E0C               	movwf	(??i2_atoi+2)^0,c
 45568  0057E2  6A0D               	clrf	(??i2_atoi+3)^0,c
 45569  0057E4  500A               	movf	??i2_atoi^0,w,c
 45570  0057E6  260C               	addwf	(??i2_atoi+2)^0,f,c
 45571  0057E8  500B               	movf	(??i2_atoi+1)^0,w,c
 45572  0057EA  220D               	addwfc	(??i2_atoi+3)^0,f,c
 45573  0057EC  500D               	movf	(??i2_atoi+3)^0,w,c
 45574  0057EE  E106               	bnz	i2u1634_40
 45575  0057F0  0E0A               	movlw	10
 45576  0057F2  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 45577  0057F4  B0D8               	btfsc	status,0,c
 45578  0057F6  D002               	goto	i2u1634_40
 45579  0057F8  0E01               	movlw	1
 45580  0057FA  D001               	goto	i2u1635_40
 45581  0057FC                     i2u1634_40:
 45582  0057FC  0E00               	movlw	0
 45583  0057FE                     i2u1635_40:
 45584  0057FE  6E12               	movwf	i2_atoi$5676^0,c
 45585  005800  6A13               	clrf	(i2_atoi$5676+1)^0,c
 45586  005802  5012               	movf	i2_atoi$5676^0,w,c
 45587  005804  1013               	iorwf	(i2_atoi$5676+1)^0,w,c
 45588  005806  A4D8               	btfss	status,2,c
 45589  005808  D7BF               	goto	i2l17349
 45590  00580A  500E               	movf	i2atoi@neg^0,w,c
 45591  00580C  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 45592  00580E  A4D8               	btfss	status,2,c
 45593  005810  D011               	goto	i2l4314
 45594  005812  0060  F054  F00A   	movff	i2atoi@n,??i2_atoi
 45595  005818  0060  F058  F00B   	movff	i2atoi@n+1,??i2_atoi+1
 45596  00581E  1E0A               	comf	??i2_atoi^0,f,c
 45597  005820  1E0B               	comf	(??i2_atoi+1)^0,f,c
 45598  005822  4A0A               	infsnz	??i2_atoi^0,f,c
 45599  005824  2A0B               	incf	(??i2_atoi+1)^0,f,c
 45600  005826  0060  F028  F008   	movff	??i2_atoi,?i2_atoi
 45601  00582C  0060  F02C  F009   	movff	??i2_atoi+1,?i2_atoi+1
 45602  005832  0012               	return	
 45603  005834                     i2l4314:
 45604  005834  0060  F054  F008   	movff	i2atoi@n,?i2_atoi
 45605  00583A  0060  F058  F009   	movff	i2atoi@n+1,?i2_atoi+1
 45606  005840  0012               	return		;funcret
 45607  005842                     __end_ofi2_atoi:
 45608                           	opt callstack 0
 45609                           
 45610 ;; *************** function i2_isspace *****************
 45611 ;; Defined at:
 45612 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 45613 ;; Parameters:    Size  Location     Type
 45614 ;;  c               2    0[COMRAM] int 
 45615 ;; Auto vars:     Size  Location     Type
 45616 ;;		None
 45617 ;; Return value:  Size  Location     Type
 45618 ;;                  2    0[COMRAM] int 
 45619 ;; Registers used:
 45620 ;;		wreg, status,2, status,0
 45621 ;; Tracked objects:
 45622 ;;		On entry : 0/0
 45623 ;;		On exit  : 0/0
 45624 ;;		Unchanged: 0/0
 45625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45629 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45630 ;;Total ram usage:        7 bytes
 45631 ;; Hardware stack levels used:    1
 45632 ;; This function calls:
 45633 ;;		Nothing
 45634 ;; This function is called by:
 45635 ;;		i2_atoi
 45636 ;; This function uses a non-reentrant model
 45637 ;;
 45638                           
 45639                           	psect	text373
 45640  00922A                     __ptext373:
 45641                           	opt callstack 0
 45642  00922A                     i2_isspace:
 45643                           	opt callstack 10
 45644                           
 45645                           ;incstack = 0
 45646  00922A  0E01               	movlw	1
 45647  00922C  6E07               	movwf	i2_isspace$5701^0,c
 45648  00922E  0E20               	movlw	32
 45649  009230  1801               	xorwf	i2isspace@c^0,w,c
 45650  009232  1002               	iorwf	(i2isspace@c+1)^0,w,c
 45651  009234  B4D8               	btfsc	status,2,c
 45652  009236  D016               	goto	i2l17101
 45653  009238  0EF7               	movlw	247
 45654  00923A  6E03               	movwf	??i2_isspace^0,c
 45655  00923C  0EFF               	movlw	255
 45656  00923E  6E04               	movwf	(??i2_isspace+1)^0,c
 45657  009240  0060  F004  F005   	movff	i2isspace@c,??i2_isspace+2
 45658  009246  0060  F008  F006   	movff	i2isspace@c+1,??i2_isspace+3
 45659  00924C  5003               	movf	??i2_isspace^0,w,c
 45660  00924E  2605               	addwf	(??i2_isspace+2)^0,f,c
 45661  009250  5004               	movf	(??i2_isspace+1)^0,w,c
 45662  009252  2206               	addwfc	(??i2_isspace+3)^0,f,c
 45663  009254  5006               	movf	(??i2_isspace+3)^0,w,c
 45664  009256  E104               	bnz	i2u1577_40
 45665  009258  0E05               	movlw	5
 45666  00925A  5C05               	subwf	(??i2_isspace+2)^0,w,c
 45667  00925C  A0D8               	btfss	status,0,c
 45668  00925E  D002               	goto	i2l17101
 45669  009260                     i2u1577_40:
 45670  009260  0E00               	movlw	0
 45671  009262  6E07               	movwf	i2_isspace$5701^0,c
 45672  009264                     i2l17101:
 45673  009264  0060  F01C  F001   	movff	i2_isspace$5701,?i2_isspace
 45674  00926A  6A02               	clrf	(?i2_isspace+1)^0,c
 45675  00926C  0012               	return		;funcret
 45676  00926E                     __end_ofi2_isspace:
 45677                           	opt callstack 0
 45678                           
 45679 ;; *************** function i2_isdigit *****************
 45680 ;; Defined at:
 45681 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 45682 ;; Parameters:    Size  Location     Type
 45683 ;;  c               2    0[COMRAM] int 
 45684 ;; Auto vars:     Size  Location     Type
 45685 ;;		None
 45686 ;; Return value:  Size  Location     Type
 45687 ;;                  2    0[COMRAM] int 
 45688 ;; Registers used:
 45689 ;;		wreg, status,2, status,0
 45690 ;; Tracked objects:
 45691 ;;		On entry : 0/0
 45692 ;;		On exit  : 0/0
 45693 ;;		Unchanged: 0/0
 45694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45697 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45699 ;;Total ram usage:        6 bytes
 45700 ;; Hardware stack levels used:    1
 45701 ;; This function calls:
 45702 ;;		Nothing
 45703 ;; This function is called by:
 45704 ;;		i2_vfpfcnvrt
 45705 ;;		i2_atoi
 45706 ;; This function uses a non-reentrant model
 45707 ;;
 45708                           
 45709                           	psect	text374
 45710  00979C                     __ptext374:
 45711                           	opt callstack 0
 45712  00979C                     i2_isdigit:
 45713                           	opt callstack 11
 45714                           
 45715                           ;incstack = 0
 45716  00979C  0ED0               	movlw	208
 45717  00979E  6E03               	movwf	??i2_isdigit^0,c
 45718  0097A0  0EFF               	movlw	255
 45719  0097A2  6E04               	movwf	(??i2_isdigit+1)^0,c
 45720  0097A4  0060  F004  F005   	movff	i2isdigit@c,??i2_isdigit+2
 45721  0097AA  0060  F008  F006   	movff	i2isdigit@c+1,??i2_isdigit+3
 45722  0097B0  5003               	movf	??i2_isdigit^0,w,c
 45723  0097B2  2605               	addwf	(??i2_isdigit+2)^0,f,c
 45724  0097B4  5004               	movf	(??i2_isdigit+1)^0,w,c
 45725  0097B6  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 45726  0097B8  5006               	movf	(??i2_isdigit+3)^0,w,c
 45727  0097BA  E106               	bnz	i2u1574_40
 45728  0097BC  0E0A               	movlw	10
 45729  0097BE  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 45730  0097C0  B0D8               	btfsc	status,0,c
 45731  0097C2  D002               	goto	i2u1574_40
 45732  0097C4  0E01               	movlw	1
 45733  0097C6  D001               	goto	i2u1575_40
 45734  0097C8                     i2u1574_40:
 45735  0097C8  0E00               	movlw	0
 45736  0097CA                     i2u1575_40:
 45737  0097CA  6E01               	movwf	?i2_isdigit^0,c
 45738  0097CC  6A02               	clrf	(?i2_isdigit+1)^0,c
 45739  0097CE  0012               	return		;funcret
 45740  0097D0                     __end_ofi2_isdigit:
 45741                           	opt callstack 0
 45742                           
 45743 ;; *************** function i2_AdcInit *****************
 45744 ;; Defined at:
 45745 ;;		line 57 in file "monitor.c"
 45746 ;; Parameters:    Size  Location     Type
 45747 ;;		None
 45748 ;; Auto vars:     Size  Location     Type
 45749 ;;		None
 45750 ;; Return value:  Size  Location     Type
 45751 ;;                  1    wreg      void 
 45752 ;; Registers used:
 45753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45754 ;; Tracked objects:
 45755 ;;		On entry : 7/1
 45756 ;;		On exit  : 3F/3E
 45757 ;;		Unchanged: 0/0
 45758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45763 ;;Total ram usage:        0 bytes
 45764 ;; Hardware stack levels used:    1
 45765 ;; Hardware stack levels required when called:    1
 45766 ;; This function calls:
 45767 ;;		i2_ADCC_SetADTIInterruptHandler
 45768 ;;		i2_ADCC_StartConversion
 45769 ;;		i2___wmul
 45770 ;; This function is called by:
 45771 ;;		_AdcHandler
 45772 ;; This function uses a non-reentrant model
 45773 ;;
 45774                           
 45775                           	psect	text375
 45776  008492                     __ptext375:
 45777                           	opt callstack 0
 45778  008492                     i2_AdcInit:
 45779                           	opt callstack 13
 45780                           
 45781                           ;monitor.c: 58:     currentChannel = 0;
 45782                           
 45783                           ;incstack = 0
 45784  008492  0E00               	movlw	0
 45785  008494  0101               	movlb	1	; () banked
 45786  008496  6FE6               	movwf	(_currentChannel+1)& (0+255),b
 45787  008498  0E00               	movlw	0
 45788  00849A  6FE5               	movwf	_currentChannel& (0+255),b
 45789                           
 45790                           ; BSR set to: 1
 45791                           ;monitor.c: 59:     ADCC_SetADTIInterruptHandler(AdcHandler);
 45792  00849C  0E18               	movlw	low _AdcHandler
 45793  00849E  6E01               	movwf	i2ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
 45794  0084A0  0E60               	movlw	high _AdcHandler
 45795  0084A2  6E02               	movwf	(i2ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
 45796  0084A4  ECC3  F051         	call	i2_ADCC_SetADTIInterruptHandler	;wreg free
 45797                           
 45798                           ;monitor.c: 62:     ADCON0bits.ADON = 0;
 45799  0084A8  013E               	movlb	62	; () banked
 45800  0084AA  9FF8               	bcf	248,7,b	;volatile
 45801                           
 45802                           ; BSR set to: 62
 45803                           ;monitor.c: 63:     ADREF = adcChannels[currentChannel].ref;
 45804  0084AC  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 45805  0084B2  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 45806  0084B8  0E00               	movlw	0
 45807  0084BA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 45808  0084BC  0E05               	movlw	5
 45809  0084BE  6E03               	movwf	i2___wmul@multiplicand^0,c
 45810  0084C0  ECD3  F04C         	call	i2___wmul	;wreg free
 45811  0084C4  0EC0               	movlw	low (_adcChannels+4)
 45812  0084C6  2401               	addwf	?i2___wmul^0,w,c
 45813  0084C8  6ED9               	movwf	fsr2l,c
 45814  0084CA  0E02               	movlw	high (_adcChannels+4)
 45815  0084CC  2002               	addwfc	(?i2___wmul+1)^0,w,c
 45816  0084CE  6EDA               	movwf	fsr2h,c
 45817  0084D0  50DF               	movf	indf2,w,c
 45818  0084D2  013E               	movlb	62	; () banked
 45819  0084D4  6FFD               	movwf	253,b	;volatile
 45820                           
 45821                           ; BSR set to: 62
 45822                           ;monitor.c: 64:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 45823  0084D6  0060  F794  F001   	movff	_currentChannel,i2___wmul@multiplier
 45824  0084DC  0060  F798  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 45825  0084E2  0E00               	movlw	0
 45826  0084E4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 45827  0084E6  0E05               	movlw	5
 45828  0084E8  6E03               	movwf	i2___wmul@multiplicand^0,c
 45829  0084EA  ECD3  F04C         	call	i2___wmul	;wreg free
 45830  0084EE  0EBC               	movlw	low _adcChannels
 45831  0084F0  2401               	addwf	?i2___wmul^0,w,c
 45832  0084F2  6ED9               	movwf	fsr2l,c
 45833  0084F4  0E02               	movlw	high _adcChannels
 45834  0084F6  2002               	addwfc	(?i2___wmul+1)^0,w,c
 45835  0084F8  6EDA               	movwf	fsr2h,c
 45836  0084FA  50DF               	movf	indf2,w,c
 45837  0084FC  ECC6  F050         	call	i2_ADCC_StartConversion
 45838                           
 45839                           ; BSR set to: 62
 45840  008500  0012               	return		;funcret
 45841  008502                     __end_ofi2_AdcInit:
 45842                           	opt callstack 0
 45843                           
 45844 ;; *************** function i2___wmul *****************
 45845 ;; Defined at:
 45846 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 45847 ;; Parameters:    Size  Location     Type
 45848 ;;  multiplier      2    0[COMRAM] unsigned int 
 45849 ;;  multiplicand    2    2[COMRAM] unsigned int 
 45850 ;; Auto vars:     Size  Location     Type
 45851 ;;  __wmul          2    4[COMRAM] unsigned int 
 45852 ;; Return value:  Size  Location     Type
 45853 ;;                  2    0[COMRAM] unsigned int 
 45854 ;; Registers used:
 45855 ;;		wreg, status,2, status,0, prodl, prodh
 45856 ;; Tracked objects:
 45857 ;;		On entry : 0/1
 45858 ;;		On exit  : 0/0
 45859 ;;		Unchanged: 0/0
 45860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45864 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45865 ;;Total ram usage:        6 bytes
 45866 ;; Hardware stack levels used:    1
 45867 ;; This function calls:
 45868 ;;		Nothing
 45869 ;; This function is called by:
 45870 ;;		_SetTarget
 45871 ;;		_MonitorPressureTask
 45872 ;;		i2_ValueDisplay
 45873 ;;		i2_HigherAlarm
 45874 ;;		i2_MuteAlarm
 45875 ;;		i2_AlarmUpdateLCD
 45876 ;;		i2_atoi
 45877 ;;		_AdcHandler
 45878 ;;		i2_AdcInit
 45879 ;;		i2_AdcGetData
 45880 ;;		_AdcReStartCycle
 45881 ;;		i2_AdcSeeData
 45882 ;;		i2_AdcDataReady
 45883 ;; This function uses a non-reentrant model
 45884 ;;
 45885                           
 45886                           	psect	text376
 45887  0099A6                     __ptext376:
 45888                           	opt callstack 0
 45889  0099A6                     i2___wmul:
 45890                           	opt callstack 10
 45891                           
 45892                           ; BSR set to: 62
 45893                           ;incstack = 0
 45894  0099A6  5001               	movf	i2___wmul@multiplier^0,w,c
 45895  0099A8  0203               	mulwf	i2___wmul@multiplicand^0,c
 45896  0099AA  006F FFCC  F005    	movff	prodl,i2___wmul@product
 45897  0099B0  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
 45898  0099B6  5001               	movf	i2___wmul@multiplier^0,w,c
 45899  0099B8  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 45900  0099BA  50F3               	movf	243,w,c
 45901  0099BC  2606               	addwf	(i2___wmul@product+1)^0,f,c
 45902  0099BE  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 45903  0099C0  0203               	mulwf	i2___wmul@multiplicand^0,c
 45904  0099C2  50F3               	movf	243,w,c
 45905  0099C4  2606               	addwf	(i2___wmul@product+1)^0,f,c
 45906  0099C6  0060  F014  F001   	movff	i2___wmul@product,?i2___wmul
 45907  0099CC  0060  F018  F002   	movff	i2___wmul@product+1,?i2___wmul+1
 45908  0099D2  0012               	return		;funcret
 45909  0099D4                     __end_ofi2___wmul:
 45910                           	opt callstack 0
 45911                           
 45912 ;; *************** function i2_ADCC_StartConversion *****************
 45913 ;; Defined at:
 45914 ;;		line 120 in file "mcc_generated_files/adcc.c"
 45915 ;; Parameters:    Size  Location     Type
 45916 ;;  channel         1    wreg     enum E16053
 45917 ;; Auto vars:     Size  Location     Type
 45918 ;;  channel         1    0[COMRAM] enum E16053
 45919 ;; Return value:  Size  Location     Type
 45920 ;;                  1    wreg      void 
 45921 ;; Registers used:
 45922 ;;		wreg
 45923 ;; Tracked objects:
 45924 ;;		On entry : 0/3E
 45925 ;;		On exit  : 3F/3E
 45926 ;;		Unchanged: 0/0
 45927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45932 ;;Total ram usage:        1 bytes
 45933 ;; Hardware stack levels used:    1
 45934 ;; This function calls:
 45935 ;;		Nothing
 45936 ;; This function is called by:
 45937 ;;		_AdcReStartCycle
 45938 ;;		_AdcHandler
 45939 ;;		i2_AdcInit
 45940 ;; This function uses a non-reentrant model
 45941 ;;
 45942                           
 45943                           	psect	text377
 45944  00A18C                     __ptext377:
 45945                           	opt callstack 0
 45946  00A18C                     i2_ADCC_StartConversion:
 45947                           	opt callstack 13
 45948                           
 45949                           ;incstack = 0
 45950                           ;i2ADCC_StartConversion@channel stored from wreg
 45951  00A18C  6E01               	movwf	i2ADCC_StartConversion@channel^0,c
 45952                           
 45953                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 45954  00A18E  0060  F007  FEF1   	movff	i2ADCC_StartConversion@channel,16113	;volatile
 45955                           
 45956                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 45957  00A194  013E               	movlb	62	; () banked
 45958  00A196  8FF8               	bsf	248,7,b	;volatile
 45959                           
 45960                           ; BSR set to: 62
 45961                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 45962  00A198  81F8               	bsf	248,0,b	;volatile
 45963                           
 45964                           ; BSR set to: 62
 45965  00A19A  0012               	return		;funcret
 45966  00A19C                     __end_ofi2_ADCC_StartConversion:
 45967                           	opt callstack 0
 45968                           
 45969 ;; *************** function i2_ADCC_Initialize *****************
 45970 ;; Defined at:
 45971 ;;		line 63 in file "mcc_generated_files/adcc.c"
 45972 ;; Parameters:    Size  Location     Type
 45973 ;;		None
 45974 ;; Auto vars:     Size  Location     Type
 45975 ;;		None
 45976 ;; Return value:  Size  Location     Type
 45977 ;;                  1    wreg      void 
 45978 ;; Registers used:
 45979 ;;		wreg, status,2, status,0, cstack
 45980 ;; Tracked objects:
 45981 ;;		On entry : 3F/2
 45982 ;;		On exit  : 7/1
 45983 ;;		Unchanged: 0/0
 45984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45989 ;;Total ram usage:        0 bytes
 45990 ;; Hardware stack levels used:    1
 45991 ;; Hardware stack levels required when called:    1
 45992 ;; This function calls:
 45993 ;;		i2_ADCC_SetADTIInterruptHandler
 45994 ;; This function is called by:
 45995 ;;		_AdcHandler
 45996 ;; This function uses a non-reentrant model
 45997 ;;
 45998                           
 45999                           	psect	text378
 46000  008726                     __ptext378:
 46001                           	opt callstack 0
 46002  008726                     i2_ADCC_Initialize:
 46003                           	opt callstack 13
 46004                           
 46005                           ; BSR set to: 2
 46006                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
 46007                           
 46008                           ; BSR set to: 62
 46009                           ;incstack = 0
 46010  008726  013E               	movlb	62	; () banked
 46011  008728  69DE               	setf	222,b	;volatile
 46012                           
 46013                           ; BSR set to: 62
 46014                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
 46015  00872A  0E7F               	movlw	127
 46016  00872C  6FDF               	movwf	223,b	;volatile
 46017                           
 46018                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 46019  00872E  0E00               	movlw	0
 46020  008730  6FE0               	movwf	224,b	;volatile
 46021                           
 46022                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
 46023  008732  0E80               	movlw	128
 46024  008734  6FE1               	movwf	225,b	;volatile
 46025                           
 46026                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 46027  008736  0E00               	movlw	0
 46028  008738  6FE4               	movwf	228,b	;volatile
 46029                           
 46030                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 46031  00873A  0E00               	movlw	0
 46032  00873C  6FE5               	movwf	229,b	;volatile
 46033                           
 46034                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 46035  00873E  0E00               	movlw	0
 46036  008740  6FEA               	movwf	234,b	;volatile
 46037                           
 46038                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
 46039  008742  0E10               	movlw	16
 46040  008744  6FEC               	movwf	236,b	;volatile
 46041                           
 46042                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 46043  008746  0E00               	movlw	0
 46044  008748  6FF1               	movwf	241,b	;volatile
 46045                           
 46046                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
 46047  00874A  0E80               	movlw	128
 46048  00874C  6FF3               	movwf	243,b	;volatile
 46049                           
 46050                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 46051  00874E  0E00               	movlw	0
 46052  008750  6FF4               	movwf	244,b	;volatile
 46053                           
 46054                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 46055  008752  0E00               	movlw	0
 46056  008754  6FF5               	movwf	245,b	;volatile
 46057                           
 46058                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 46059  008756  0E00               	movlw	0
 46060  008758  6FF6               	movwf	246,b	;volatile
 46061                           
 46062                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 46063  00875A  0E00               	movlw	0
 46064  00875C  6FF7               	movwf	247,b	;volatile
 46065                           
 46066                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 46067  00875E  0E00               	movlw	0
 46068  008760  6FF9               	movwf	249,b	;volatile
 46069                           
 46070                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
 46071  008762  0E43               	movlw	67
 46072  008764  6FFA               	movwf	250,b	;volatile
 46073                           
 46074                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
 46075  008766  0E27               	movlw	39
 46076  008768  6FFB               	movwf	251,b	;volatile
 46077                           
 46078                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 46079  00876A  0E00               	movlw	0
 46080  00876C  6FFC               	movwf	252,b	;volatile
 46081                           
 46082                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
 46083  00876E  0E03               	movlw	3
 46084  008770  6FFD               	movwf	253,b	;volatile
 46085                           
 46086                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 46087  008772  0E00               	movlw	0
 46088  008774  6FFE               	movwf	254,b	;volatile
 46089                           
 46090                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x27;
 46091  008776  0E27               	movlw	39
 46092  008778  6FFF               	movwf	255,b	;volatile
 46093                           
 46094                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 46095  00877A  0E84               	movlw	132
 46096  00877C  6FF8               	movwf	248,b	;volatile
 46097                           
 46098                           ; BSR set to: 62
 46099                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
 46100  00877E  0139               	movlb	57	; () banked
 46101  008780  97A1               	bcf	161,3,b	;volatile
 46102                           
 46103                           ; BSR set to: 57
 46104                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
 46105  008782  8791               	bsf	145,3,b	;volatile
 46106                           
 46107                           ; BSR set to: 57
 46108                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46109  008784  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 46110  008786  6E01               	movwf	i2ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
 46111  008788  0EA6               	movlw	high _ADCC_DefaultInterruptHandler
 46112  00878A  6E02               	movwf	(i2ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
 46113  00878C  ECC3  F051         	call	i2_ADCC_SetADTIInterruptHandler	;wreg free
 46114  008790  0012               	return		;funcret
 46115  008792                     __end_ofi2_ADCC_Initialize:
 46116                           	opt callstack 0
 46117                           
 46118 ;; *************** function i2_ADCC_SetADTIInterruptHandler *****************
 46119 ;; Defined at:
 46120 ;;		line 316 in file "mcc_generated_files/adcc.c"
 46121 ;; Parameters:    Size  Location     Type
 46122 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 46123 ;;		 -> AdcHandler(1), ADCC_DefaultInterruptHandler(1), 
 46124 ;; Auto vars:     Size  Location     Type
 46125 ;;		None
 46126 ;; Return value:  Size  Location     Type
 46127 ;;                  1    wreg      void 
 46128 ;; Registers used:
 46129 ;;		wreg, status,2, status,0
 46130 ;; Tracked objects:
 46131 ;;		On entry : 7/1
 46132 ;;		On exit  : 7/1
 46133 ;;		Unchanged: 7/0
 46134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46139 ;;Total ram usage:        2 bytes
 46140 ;; Hardware stack levels used:    1
 46141 ;; This function calls:
 46142 ;;		Nothing
 46143 ;; This function is called by:
 46144 ;;		i2_ADCC_Initialize
 46145 ;;		i2_AdcInit
 46146 ;; This function uses a non-reentrant model
 46147 ;;
 46148                           
 46149                           	psect	text379
 46150  00A386                     __ptext379:
 46151                           	opt callstack 0
 46152  00A386                     i2_ADCC_SetADTIInterruptHandler:
 46153                           	opt callstack 13
 46154                           
 46155                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46156                           
 46157                           ;incstack = 0
 46158  00A386  0060  F004  F2F3   	movff	i2ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 46159  00A38C  0060  F008  F2F4   	movff	i2ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 46160  00A392  0012               	return		;funcret
 46161  00A394                     __end_ofi2_ADCC_SetADTIInterruptHandler:
 46162                           	opt callstack 0
 46163                           
 46164 ;; *************** function _AdcReady *****************
 46165 ;; Defined at:
 46166 ;;		line 67 in file "monitor.c"
 46167 ;; Parameters:    Size  Location     Type
 46168 ;;		None
 46169 ;; Auto vars:     Size  Location     Type
 46170 ;;		None
 46171 ;; Return value:  Size  Location     Type
 46172 ;;                  1    wreg      _Bool 
 46173 ;; Registers used:
 46174 ;;		wreg, cstack
 46175 ;; Tracked objects:
 46176 ;;		On entry : 0/2
 46177 ;;		On exit  : 3F/3E
 46178 ;;		Unchanged: 0/0
 46179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46184 ;;Total ram usage:        0 bytes
 46185 ;; Hardware stack levels used:    1
 46186 ;; Hardware stack levels required when called:    1
 46187 ;; This function calls:
 46188 ;;		_ADCC_IsConversionDone
 46189 ;; This function is called by:
 46190 ;;		_AdcHandler
 46191 ;;		_MonitorPressureTask
 46192 ;; This function uses a non-reentrant model
 46193 ;;
 46194                           
 46195                           	psect	text380
 46196  00A62E                     __ptext380:
 46197                           	opt callstack 0
 46198  00A62E                     _AdcReady:
 46199                           	opt callstack 13
 46200                           
 46201                           ;monitor.c: 68:     return ADCC_IsConversionDone();
 46202                           
 46203                           ;incstack = 0
 46204  00A62E  ECCA  F051         	call	_ADCC_IsConversionDone	;wreg free
 46205                           
 46206                           ; BSR set to: 62
 46207  00A632  0012               	return		;funcret
 46208  00A634                     __end_of_AdcReady:
 46209                           	opt callstack 0
 46210                           
 46211 ;; *************** function _ADCC_IsConversionDone *****************
 46212 ;; Defined at:
 46213 ;;		line 132 in file "mcc_generated_files/adcc.c"
 46214 ;; Parameters:    Size  Location     Type
 46215 ;;		None
 46216 ;; Auto vars:     Size  Location     Type
 46217 ;;		None
 46218 ;; Return value:  Size  Location     Type
 46219 ;;                  1    wreg      _Bool 
 46220 ;; Registers used:
 46221 ;;		wreg
 46222 ;; Tracked objects:
 46223 ;;		On entry : 0/2
 46224 ;;		On exit  : 3F/3E
 46225 ;;		Unchanged: 0/0
 46226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46231 ;;Total ram usage:        0 bytes
 46232 ;; Hardware stack levels used:    1
 46233 ;; This function calls:
 46234 ;;		Nothing
 46235 ;; This function is called by:
 46236 ;;		_AdcReady
 46237 ;; This function uses a non-reentrant model
 46238 ;;
 46239                           
 46240                           	psect	text381
 46241  00A394                     __ptext381:
 46242                           	opt callstack 0
 46243  00A394                     _ADCC_IsConversionDone:
 46244                           	opt callstack 13
 46245                           
 46246                           ;mcc_generated_files/adcc.c: 135:     return ((unsigned char)(!ADCON0bits.ADGO));
 46247                           
 46248                           ; BSR set to: 62
 46249                           ;incstack = 0
 46250  00A394  013E               	movlb	62	; () banked
 46251  00A396  B1F8               	btfsc	248,0,b	;volatile
 46252  00A398  D002               	goto	i2u1081_40
 46253  00A39A  0E01               	movlw	1
 46254  00A39C  0012               	return	
 46255  00A39E                     i2u1081_40:
 46256  00A39E  0E00               	movlw	0
 46257                           
 46258                           ; BSR set to: 62
 46259  00A3A0  0012               	return		;funcret
 46260  00A3A2                     __end_of_ADCC_IsConversionDone:
 46261                           	opt callstack 0
 46262                           
 46263 ;; *************** function _ADCC_GetConversionResult *****************
 46264 ;; Defined at:
 46265 ;;		line 138 in file "mcc_generated_files/adcc.c"
 46266 ;; Parameters:    Size  Location     Type
 46267 ;;		None
 46268 ;; Auto vars:     Size  Location     Type
 46269 ;;		None
 46270 ;; Return value:  Size  Location     Type
 46271 ;;                  2    0[COMRAM] unsigned short 
 46272 ;; Registers used:
 46273 ;;		wreg, status,2, status,0
 46274 ;; Tracked objects:
 46275 ;;		On entry : 0/3E
 46276 ;;		On exit  : 3F/3E
 46277 ;;		Unchanged: 0/0
 46278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46283 ;;Total ram usage:        4 bytes
 46284 ;; Hardware stack levels used:    1
 46285 ;; This function calls:
 46286 ;;		Nothing
 46287 ;; This function is called by:
 46288 ;;		_AdcHandler
 46289 ;; This function uses a non-reentrant model
 46290 ;;
 46291                           
 46292                           	psect	text382
 46293  00A058                     __ptext382:
 46294                           	opt callstack 0
 46295  00A058                     _ADCC_GetConversionResult:
 46296                           	opt callstack 14
 46297                           
 46298                           ;mcc_generated_files/adcc.c: 141:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 46299                           
 46300                           ; BSR set to: 62
 46301                           ;incstack = 0
 46302  00A058  013E               	movlb	62	; () banked
 46303  00A05A  51F0               	movf	240,w,b	;volatile
 46304  00A05C  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 46305  00A05E  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 46306  00A060  51EF               	movf	239,w,b	;volatile
 46307  00A062  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 46308  00A064  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 46309  00A066  0E00               	movlw	0
 46310  00A068  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 46311  00A06A  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 46312                           
 46313                           ; BSR set to: 62
 46314  00A06C  0012               	return		;funcret
 46315  00A06E                     __end_of_ADCC_GetConversionResult:
 46316                           	opt callstack 0
 46317                           
 46318                           ;
 46319                           ; Interrupt Vector Table @ 0x8
 46320                           ;
 46321                           
 46322                           	psect	ivt0x8
 46323  000008                     __pivt0x8:
 46324                           	opt callstack 0
 46325  000008                     ivt0x8_base:
 46326                           	opt callstack 0
 46327                           
 46328                           ; high-priority vector
 46329  000008  EFEA  F033         	goto	_INTERRUPT_InterruptManager
 46330  000018                     	org	16
 46331                           
 46332                           ; low-priority vector
 46333  000018  00FF               	reset	
 46334                           
 46335                           	psect	text383
 46336  000000                     __ptext383:
 46337                           	opt callstack 0
 46338                           
 46339                           	psect	rparam
 46340  0000                     tosu	equ	0x3FFF
 46341                           tosh	equ	0x3FFE
 46342                           tosl	equ	0x3FFD
 46343                           stkptr	equ	0x3FFC
 46344                           pclatu	equ	0x3FFB
 46345                           pclath	equ	0x3FFA
 46346                           pcl	equ	0x3FF9
 46347                           tblptru	equ	0x3FF8
 46348                           tblptrh	equ	0x3FF7
 46349                           tblptrl	equ	0x3FF6
 46350                           tablat	equ	0x3FF5
 46351                           prodh	equ	0x3FF4
 46352                           prodl	equ	0x3FF3
 46353                           indf0	equ	0x3FEF
 46354                           postinc0	equ	0x3FEE
 46355                           postdec0	equ	0x3FED
 46356                           preinc0	equ	0x3FEC
 46357                           plusw0	equ	0x3FEB
 46358                           fsr0h	equ	0x3FEA
 46359                           fsr0l	equ	0x3FE9
 46360                           wreg	equ	0x3FE8
 46361                           indf1	equ	0x3FE7
 46362                           postinc1	equ	0x3FE6
 46363                           postdec1	equ	0x3FE5
 46364                           preinc1	equ	0x3FE4
 46365                           plusw1	equ	0x3FE3
 46366                           fsr1h	equ	0x3FE2
 46367                           fsr1l	equ	0x3FE1
 46368                           bsr	equ	0x3FE0
 46369                           indf2	equ	0x3FDF
 46370                           postinc2	equ	0x3FDE
 46371                           postdec2	equ	0x3FDD
 46372                           preinc2	equ	0x3FDC
 46373                           plusw2	equ	0x3FDB
 46374                           fsr2h	equ	0x3FDA
 46375                           fsr2l	equ	0x3FD9
 46376                           status	equ	0x3FD8


Data Sizes:
    Strings     935
    Constant    0
    Data        432
    BSS         1842
    Persistent  28
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    104     160
    BANK1           256    199     252
    BANK2           256     11     256
    BANK3           256      1     250
    BANK4           256      0     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    i2_AlarmUpdateLCD$7132	PTR unsigned char [17] size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    AlarmCheckTask$6537	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    AlarmUpdateLCD$6532	PTR unsigned char [17] size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), dbuf(BANK3[32]), 
		 -> adcVOffset(BANK1[2]), adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), alarmData(BIGRAM[399]), msg3(BANK3[20]), 
		 -> STR_11(CODE[3]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), dbuf(BANK3[32]), 
		 -> adcVOffset(BANK1[2]), adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), alarmData(BIGRAM[399]), msg3(BANK3[20]), 
		 -> STR_11(CODE[3]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_4(CODE[45]), STR_3(CODE[4]), 
		 -> STR_2(CODE[15]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[8]), STR_12(CODE[23]), STR_10(CODE[26]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S5714_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), adcVOffset(BANK1[2]), adcOffset(BANK1[2]), 
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), adcVOffset(BANK1[2]), adcOffset(BANK1[2]), 
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), adcVOffset(BANK1[2]), 
		 -> adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    alarmData.func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    S4382alarm$func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    a.func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    AlarmDisplay@alarm	PTR unsigned char  size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    ValueDisplay$4007	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_11(CODE[3]), 

    sp__GetAlarmState	PTR unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 

    LCDMessage2@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg2(BANK3[20]), msg4(BANK3[20]), 

    LCDMessage12@str2	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), LCDTest@msg2(BANK1[17]), 

    LCDMessage12@str1	PTR unsigned char  size(2) Largest target is 20
		 -> msg1(BANK3[20]), LCDTest@msg1(BANK1[17]), 

    LCDMessage1@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg1(BANK3[20]), 

    LCDMessage@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    CMP1_SetIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerCMPHandler(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerCMPHandler(), Absolute function(), 

    I2C2_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefBusColInterruptHandler(), 

    I2C2_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefBusColInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrColInterruptHandler(), 

    I2C2_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrColInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefAddrInterruptHandler(), 

    I2C2_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefAddrInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetStopIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> StopHandler(), 

    I2C2_SlaveStopInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> StopHandler(), Absolute function(), 

    I2C2_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrInterruptHandler(), 

    I2C2_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), I2C2_SlaveDefRdInterruptHandler(), 

    I2C2_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), I2C2_SlaveDefRdInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Isr(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ControllerTimerHandler(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ControllerTimerHandler(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ButtonTask(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ButtonTask(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MonitorPressureTask(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MonitorPressureTask(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AlarmHandler(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AlarmHandler(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerTestHandler(), BuzzerHandler(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerTestHandler(), BuzzerHandler(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    I2C2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Isr(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AdcHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AdcHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ControllerTimerHandler->i2_printf
    _TMR5_ISR->_AlarmHandler
    _AlarmHandler->i2_printf
    _BuzzerTestHandler->i2_printf
    _BuzzerHandler->i2_BuzzerTask
    i2_BuzzerTask->i2_printf
    _ButtonTask->i2_HistAlarm
    i2_MuteAlarm->i2_SetAlarmSV1
    i2_SetAlarmSV1->i2_printf
    i2_AlarmUpdateLCD->i2_AlarmDisplay
    i2_HigherAlarm->i2___wmul
    _TMR0_ISR->_MonitorPressureTask
    _MonitorPressureTask->i2_printf
    i2_See5V->i2___aldiv
    i2_See12V->i2___aldiv
    i2_AdcSeeData->i2___wmul
    i2_AdcDataReady->i2___wmul
    _GetPressure_mbar02->i2_GetPressure_pa
    _AdcReStartCycle->i2___wmul
    _I2C2_SlaveStopCallBack->_StopHandler
    _StopHandler->_UpdateState
    _UpdateState->i2_SetCalibrateState
    _UpdateState->i2_SetSV1
    i2_SetSV1->i2_printf
    i2_SetCalibrateState->i2_printf
    i2_GetPressure_pa->i2___aldiv
    i2_GetPressureV_pa->i2___awdiv
    i2_AdcGetData->i2___wmul
    _SetTarget->i2___aldiv
    i2___aldiv->i2___lmul
    i2_sprintf->i2_vfprintf
    i2_GetTargetIp->i2___awdiv
    i2_GetTargetEp->i2___awdiv
    i2_GetPmax->i2___awdiv
    i2_GetIp->i2___awdiv
    i2_GetEp->i2___awdiv
    i2___awdiv->i2___wmul
    i2_GetAlarmState->i2_AnyAlarm
    _I2C2_SlaveRdCallBack->_ReceiveHandler
    _BuzzerCMPHandler->i2_printf
    _AdcHandler->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_stoa->i2_fputc
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART1_Write
    i2_atoi->i2_isspace
    i2_AdcInit->i2___wmul
    i2_ADCC_Initialize->i2_ADCC_SetADTIInterruptHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _ControllerTimerHandler->i2_printf
    _AlarmHandler->i2_printf
    _BuzzerTestHandler->i2_printf
    i2_BuzzerTask->i2_printf
    _TMR1_ISR->_ButtonTask
    i2_MuteAlarm->i2_printf
    i2_SetAlarmSV1->i2_printf
    i2_HistAlarm->i2_AlarmUpdateLCD
    i2_AlarmUpdateLCD->i2_AlarmDisplay
    i2_AlarmDisplay->i2_ValueDisplay
    _TMR0_ISR->_MonitorPressureTask
    _MonitorPressureTask->_DisplayCalibrate
    _DisplayCalibrate->i2_sprintf
    _StopHandler->_UpdateState
    i2_SetSV1->i2_printf
    i2_SetCalibrateState->i2_printf
    _DisplayEnable->i2_ValueDisplay
    _DisplayDisable->i2_ValueDisplay
    i2_ValueDisplay->i2_sprintf
    _BuzzerCMPHandler->i2_printf
    _AdcHandler->i2_printf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _getch->_UART1_Read
    _TestAlarm->_printf
    _putchar->_fputc
    _SetSV1->_printf
    _SetCalibrateState->_printf
    _GetPressure_pa->___aldiv
    _GetPressureV_pa->___awdiv
    _SeePressure_pa->___aldiv
    _SeePressureV_pa->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MuteAlarm->_SetAlarmSV1
    _AdcInit->___wmul
    _MonitorDump->_printf
    _See5V->___aldiv
    _See12V->___aldiv
    _AdcSeeData->___wmul
    _InitDisplay->_LCDInit
    _LCDInit->_LCDTest
    _LCDTest->_LCDMessage12
    _HistAlarm->_AlarmUpdateLCD
    _DisplayTask->_LCDMessage12
    _LCDMessage2->_LCDMessage
    _LCDMessage12->_LCDMessage
    _LCDMessage1->_LCDMessage
    _LCDMessage->_strlen
    _ControllerInit->_I2C2_SlaveSetReadIntHandler
    _ControllerInit->_I2C2_SlaveSetStopIntHandler
    _ControllerInit->_TMR6_SetInterruptHandler
    _I2C2_Open->_I2C2_SlaveSetAddrIntHandler
    _I2C2_Open->_I2C2_SlaveSetBusColIntHandler
    _I2C2_Open->_I2C2_SlaveSetIsrHandler
    _I2C2_Open->_I2C2_SlaveSetReadIntHandler
    _I2C2_Open->_I2C2_SlaveSetWrColIntHandler
    _I2C2_Open->_I2C2_SlaveSetWriteIntHandler
    _BuzzerTest->_TMR4_SetInterruptHandler
    _BuzzerCheck->_printf
    _ButtonInit->_TMR1_SetInterruptHandler
    _AlarmInit->_TMR5_SetInterruptHandler
    _BuzzerInit->_CMP1_SetIntHandler
    _BuzzerInit->_TMR4_SetInterruptHandler
    _AlarmCheckTask->_AlarmUpdateLCD
    _SetAlarmSV1->_printf
    _MonitorFailAlarm->_printf
    _Get5V->___aldiv
    _HighPressureAlarmLow->_GetMaxPressure
    _GetMaxPressure->___awdiv
    _BuzzerSet->_BuzzerTask
    _BuzzerTask->_printf
    _printf->_vfprintf
    _BatteryFailAlarm->_Get12V
    _Get12V->___aldiv
    ___aldiv->___lmul
    _AdcGetData->___wmul
    _AdcDataReady->___wmul
    _AlarmUpdateLCD->_AlarmDisplay
    _HigherAlarm->___wmul
    _AlarmDisplay->_ValueDisplay
    _ValueDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _atoi->_isspace
    _GetTargetIp->___awdiv
    _GetTargetEp->___awdiv
    _GetPmax->___awdiv
    _GetIp->___awdiv
    _GetEp->___awdiv
    ___awdiv->___wmul
    _GetAlarmState->_AnyAlarm

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_AlarmCheckTask

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1285821
                                            198 BANK1      1     1      0
                                              0 BANK3      1     1      0
                     _AlarmCheckTask
                          _AlarmInit
                         _ButtonInit
                        _BuzzerCheck
                         _BuzzerTest
                     _ControllerInit
                    _DisableAlarmSV1
                        _DisplayTask
                            _DumpI2C
                     _EnableAlarmSV1
                          _HistAlarm
                        _InitDisplay
                             _LCDOff
                              _LCDOn
                     _MonitorDisable
                        _MonitorDump
                      _MonitorEnable
                        _MonitorInit
                          _MuteAlarm
                  _SYSTEM_Initialize
                             _See12V
                              _See5V
                    _SeePressureV_pa
                     _SeePressure_pa
                        _SetAlarmSV1
                  _SetCalibrateState
                             _SetSV1
                          _TestAlarm
                  _UART1_is_rx_ready
                            ___llmod
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0      37
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      37
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              4 BANK1      9     1      8
 ---------------------------------------------------------------------------------
 (1) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TestAlarm                                            8     6      2   43918
                                            131 BANK1      8     6      2
                             _printf
                            _putchar
 ---------------------------------------------------------------------------------
 (2) _putchar                                              2     0      2    2085
                                             15 BANK1      2     0      2
                              _fputc
 ---------------------------------------------------------------------------------
 (1) _SetSV1                                               1     1      0   40865
                                            131 BANK1      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SetCalibrateState                                    1     1      0   90980
                                            131 BANK1      1     1      0
                          _ClearVars
                    _GetPressureV_pa
                     _GetPressure_pa
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                 _UnDisplayCalibrate
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UnDisplayCalibrate                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetPressure_pa                                      16    14      2   21361
                                             30 BANK1     16    14      2
                         _AdcGetData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _GetPressureV_pa                                     12    10      2   17612
                                             18 BANK1     12    10      2
                         _AdcGetData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _SeePressure_pa                                      16    14      2   21299
                                             30 BANK1     16    14      2
                         _AdcSeeData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _SeePressureV_pa                                     12    10      2   17516
                                             18 BANK1     12    10      2
                         _AdcSeeData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2051
                    _ADCC_Initialize
                    _CMP1_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                              6 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     391
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              6 BANK1      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
                       _CMP1_Disable
                        _CMP1_Enable
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MuteAlarm                                            5     5      0   94185
                                            132 BANK1      5     5      0
                           _AnyAlarm
                        _BuzzerClear
           _ClearCircuitFailureAlarm
              _ClearControlFailAlarm
               _ClearGasFailureAlarm
         _ClearHighPressureAlarmHigh
              _ClearMonitorFailAlarm
     _ClearVeryHighPressureAlarmHigh
                        _HigherAlarm
                        _SetAlarmSV1
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ClearVeryHighPressureAlarmHigh                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearHighPressureAlarmHigh                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearGasFailureAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearControlFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MonitorInit                                          0     0      0    6693
                            _AdcInit
                          _ClearVars
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearVars                                            4     4      0     260
                                              4 BANK1      4     4      0
           _ClearCircuitFailureAlarm
               _ClearEPAboveSetAlarm
               _ClearEPBelowSetAlarm
               _ClearIPAboveSetAlarm
               _ClearIPBelowSetAlarm
 ---------------------------------------------------------------------------------
 (3) _ClearIPBelowSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearIPAboveSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearEPBelowSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearEPAboveSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearCircuitFailureAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AdcInit                                              0     0      0    6222
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ADCC_StartConversion                                 1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MonitorEnable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MonitorDump                                          0     0      0   70736
                             _See12V
                              _See5V
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _See5V                                               10     8      2    8832
                                             30 BANK1     10     8      2
                         _AdcSeeData
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _See12V                                              10     8      2   10188
                                             30 BANK1     10     8      2
                         _AdcSeeData
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _AdcSeeData                                           4     2      2    6405
                                             10 BANK1      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _MonitorDisable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDisplay                                          0     0      0    4588
                            _LCDInit
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              2     2      0    4588
                                             60 BANK1      2     2      0
                         _LCDMessage
                            _LCDTest
                          _LCDWrite4
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (3) _LCDWrite4                                            1     1      0     124
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCDTest                                             40    40      0    2740
                                             20 BANK1     40    40      0
                       _LCDMessage12
 ---------------------------------------------------------------------------------
 (1) _HistAlarm                                            4     4      0  281396
                                              0 BANK2      4     4      0
                     _AlarmUpdateLCD
                    _TMR5_StartTimer
                     _TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableAlarmSV1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DumpI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTask                                          0     0      0    6106
                        _LCDMessage1
                       _LCDMessage12
                        _LCDMessage2
 ---------------------------------------------------------------------------------
 (2) _LCDMessage2                                          2     0      2    1935
                                             16 BANK1      2     0      2
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (4) _LCDMessage12                                         4     0      4    2326
                                             16 BANK1      4     0      4
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCDMessage1                                          2     0      2    1845
                                             16 BANK1      2     0      2
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (3) _LCDWriteCmd                                          1     1      0     248
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _LCDMessage                                           8     6      2    1476
                                              8 BANK1      8     6      2
                       _LCDWriteChar
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _LCDWriteChar                                         1     1      0     248
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisableAlarmSV1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControllerInit                                       0     0      0    1421
                          _I2C2_Open
        _I2C2_SlaveSetReadIntHandler
        _I2C2_SlaveSetStopIntHandler
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR6_StartTimer                                      0     0      0       0
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (3) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_SlaveSetStopIntHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_Open                                            0     0      0     878
                _I2C2_SlaveEnableIrq
                     _I2C2_SlaveOpen
        _I2C2_SlaveSetAddrIntHandler
      _I2C2_SlaveSetBusColIntHandler
            _I2C2_SlaveSetIsrHandler
        _I2C2_SlaveSetReadIntHandler
             _I2C2_SlaveSetSlaveAddr
             _I2C2_SlaveSetSlaveMask
       _I2C2_SlaveSetWrColIntHandler
       _I2C2_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetWriteIntHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetWrColIntHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetSlaveMask                               1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetSlaveAddr                               1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C2_SlaveSetReadIntHandler                          2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetIsrHandler                              2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetBusColIntHandler                        2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetAddrIntHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BuzzerTest                                           3     3      0     484
                                              6 BANK1      3     3      0
                          _BuzzerOff
                           _BuzzerOn
                 _TMR4_Period8BitSet
           _TMR4_SetInterruptHandler
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (1) _BuzzerCheck                                          2     2      0   40772
                                            131 BANK1      2     2      0
                          _BuzzerOff
                           _BuzzerOn
                _SetMonitorFailAlarm
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ButtonInit                                           0     0      0     211
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _AlarmInit                                            2     2      0     853
                                              6 BANK1      2     2      0
                         _BuzzerInit
           _TMR5_SetInterruptHandler
                    _TMR5_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _BuzzerInit                                           0     0      0     512
                          _BuzzerOff
                 _CMP1_SetIntHandler
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _CMP1_SetIntHandler                                   2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _AlarmCheckTask                                      11    11      0  459553
                                              0 BANK2     11    11      0
                         _AlarmClear
                           _AlarmSet
                     _AlarmUpdateLCD
                           _AnyAlarm
                _BaterryLowAlarmHigh *
                 _BaterryLowAlarmMed *
                   _BatteryFailAlarm *
                        _BuzzerClear
                          _BuzzerSet
                _CircuitFailureAlarm *
                      _ClearAlarmLED
                   _ControlFailAlarm *
                    _EPAboveSetAlarm *
                    _EPBelowSetAlarm *
                    _GasFailureAlarm *
              _HighPressureAlarmHigh *
               _HighPressureAlarmLow *
                        _HigherAlarm
                    _IPAboveSetAlarm *
                    _IPBelowSetAlarm *
                   _MonitorFailAlarm *
                 _NoPowerSupplyAlarm *
                        _SetAlarmLED
                        _SetAlarmSV1
                    _TdeTooLongAlarm *
                    _TdiTooLongAlarm *
                     _VAboveMaxAlarm *
                     _VBelowMinAlarm *
          _VeryHighPressureAlarmHigh *
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _VeryHighPressureAlarmHigh                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VBelowMinAlarm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VAboveMaxAlarm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TdiTooLongAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TdeTooLongAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetAlarmSV1                                          1     1      0   40865
                                            131 BANK1      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SetAlarmLED                                          1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _NoPowerSupplyAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MonitorFailAlarm                                     3     3      0   56014
                                            131 BANK1      3     3      0
                       _AdcDataReady
                              _Get5V
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Get5V                                               10     8      2    8863
                                             30 BANK1     10     8      2
                         _AdcGetData
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _IPBelowSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPAboveSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HighPressureAlarmLow                                 3     3      0   11074
                                             22 BANK1      3     3      0
                     _GetMaxPressure
           _SetHighPressureAlarmHigh
       _SetVeryHighPressureAlarmHigh
 ---------------------------------------------------------------------------------
 (3) _SetVeryHighPressureAlarmHigh                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetHighPressureAlarmHigh                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetMaxPressure                                       4     2      2   11009
                                             18 BANK1      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _HighPressureAlarmHigh                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GasFailureAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPBelowSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPAboveSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ControlFailAlarm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearAlarmLED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CircuitFailureAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerSet                                            1     1      0   41225
                                            133 BANK1      1     1      0
                          _BuzzerOff
                         _BuzzerTask
 ---------------------------------------------------------------------------------
 (3) _BuzzerTask                                           2     2      0   41194
                                            131 BANK1      2     2      0
                          _BuzzerOff
                           _BuzzerOn
              _ClearMonitorFailAlarm
                _SetMonitorFailAlarm
                 _TMR4_Period8BitSet
           _TMR4_SetInterruptHandler
                         _TMR4_Start
                          _TMR4_Stop
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   40741
                                            113 BANK1     18     4     14
                    _GetPressureV_pa (ARG)
                     _GetPressure_pa (ARG)
                             _See12V (ARG)
                              _See5V (ARG)
                    _SeePressureV_pa (ARG)
                     _SeePressure_pa (ARG)
                            ___awdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     391
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Period8BitSet                                   1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetMonitorFailAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearMonitorFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerOn                                             1     1      0      31
                                              4 BANK1      1     1      0
                        _CMP1_Enable
 ---------------------------------------------------------------------------------
 (3) _CMP1_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerClear                                          0     0      0       0
                          _BuzzerOff
                          _TMR4_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BuzzerOff                                            0     0      0       0
                       _CMP1_Disable
 ---------------------------------------------------------------------------------
 (3) _CMP1_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BatteryFailAlarm                                     2     2      0   16561
                                             40 BANK1      2     2      0
                       _AdcDataReady
           _ClearBaterryLowAlarmHigh
            _ClearBaterryLowAlarmMed
              _ClearBatteryFailAlarm
            _ClearNoPowerSupplyAlarm
                             _Get12V
             _SetBaterryLowAlarmHigh
              _SetBaterryLowAlarmMed
                _SetBatteryFailAlarm
              _SetNoPowerSupplyAlarm
 ---------------------------------------------------------------------------------
 (3) _SetNoPowerSupplyAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBatteryFailAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBaterryLowAlarmMed                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBaterryLowAlarmHigh                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Get12V                                              10     8      2   10219
                                             30 BANK1     10     8      2
                         _AdcGetData
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1356
                                              4 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    2325
                                             16 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _AdcGetData                                           4     2      2    6436
                                             10 BANK1      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ClearNoPowerSupplyAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBatteryFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBaterryLowAlarmMed                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBaterryLowAlarmHigh                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _AdcDataReady                                         2     0      2    6246
                                             10 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _BaterryLowAlarmMed                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BaterryLowAlarmHigh                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AlarmUpdateLCD                                       6     6      0  280944
                                            192 BANK1      6     6      0
                       _AlarmDisplay
                           _AnyAlarm
                        _HigherAlarm
                       _ValueDisplay
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _HigherAlarm                                         11     9      2    6274
                                             10 BANK1     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _AlarmDisplay                                         9     5      4  154753
                                            183 BANK1      9     5      4
                       _ValueDisplay
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _ValueDisplay                                        42    42      0  113637
                                            141 BANK1     42    42      0
                      _GetAlarmState
                             _GetBpm
                 _GetDisableAlarmSV1
                              _GetEp
                              _GetIp
                            _GetPmax
                             _GetSpr
                        _GetTargetEp
                        _GetTargetIp
                             _GetTde
                             _GetTdi
                              _GetTe
                              _GetTi
                          _GetVolume
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             28    10     18   38882
                                            113 BANK1     28    10     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   37491
                                            105 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   36523
                                             72 BANK1     33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7931
                                             33 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 BANK1      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3222
                                             15 BANK1     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8167
                                             33 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 BANK1     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 BANK1     26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    6180
                                             33 BANK1      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5901
                                             22 BANK1     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     490
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2374
                                             15 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1874
                                              6 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 BANK1      1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    7083
                                             11 BANK1     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 BANK1      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    5980
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1673
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) _GetVolume                                            2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTi                                                2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTe                                                2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTdi                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTde                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTargetIp                                          2     0      2   10975
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetTargetEp                                          2     0      2   10975
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetSpr                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetPmax                                              2     0      2   10975
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetIp                                                9     7      2   11049
                                             18 BANK1      9     7      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetEp                                                2     0      2   10975
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4   10975
                                             10 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetDisableAlarmSV1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetBpm                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetAlarmState                                        2     0      2      99
                                              8 BANK1      2     0      2
                           _AnyAlarm
 ---------------------------------------------------------------------------------
 (2) _AnyAlarm                                             4     4      0      99
                                              4 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _AlarmSet                                             1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _AlarmClear                                           1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          4     4      0  602169
                                              0 BANK1      4     4      0
                   Absolute function *
                  _ADCC_ThresholdISR
                           _CMP1_ISR
                           _I2C2_Isr *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR4_ISR
                           _TMR5_ISR
                           _TMR6_ISR
                  _UART1_Receive_ISR *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR6_ISR                                            0     0      0   22054
                   Absolute function *
             _ControllerTimerHandler *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ControllerTimerHandler                              0     0      0   22054
                _SetControlFailAlarm
            i2_ClearControlFailAlarm
                          i2___awmod
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                            0     0      0   21249
                   Absolute function *
                       _AlarmHandler *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _AlarmHandler                                        2     2      0   21020
                                             90 COMRAM     2     2      0
                         i2_AnyAlarm
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) _TMR4_ISR                                            0     0      0   41943
                   Absolute function *
                      _BuzzerHandler *
                  _BuzzerTestHandler *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _BuzzerTestHandler                                   0     0      0   20921
                        i2_BuzzerOff
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) _BuzzerHandler                                       0     0      0   21022
                       i2_BuzzerTask
 ---------------------------------------------------------------------------------
 (17) i2_BuzzerTask                                        2     2      0   21022
                                             90 COMRAM     2     2      0
                        i2_BuzzerOff
                         i2_BuzzerOn
            i2_ClearMonitorFailAlarm
              i2_SetMonitorFailAlarm
               i2_TMR4_Period8BitSet
         i2_TMR4_SetInterruptHandler
                       i2_TMR4_Start
                        i2_TMR4_Stop
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_SetInterruptHandler                          2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Period8BitSet                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_SetMonitorFailAlarm                               0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_BuzzerOn                                          1     1      0      31
                                              0 COMRAM     1     1      0
                      i2_CMP1_Enable
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0  186921
                   Absolute function *
                         _ButtonTask *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ButtonTask                                          1     1      0  186692
                                            103 BANK0      1     1      0
                  i2_DisableAlarmSV1
                        i2_HistAlarm
                        i2_MuteAlarm
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_MuteAlarm                                         5     5      0   46461
                                             91 COMRAM     2     2      0
                                             33 BANK0      3     3      0
                         i2_AnyAlarm
                      i2_BuzzerClear
         i2_ClearCircuitFailureAlarm
            i2_ClearControlFailAlarm
             i2_ClearGasFailureAlarm
       i2_ClearHighPressureAlarmHigh
            i2_ClearMonitorFailAlarm
   i2_ClearVeryHighPressureAlarmHigh
                      i2_HigherAlarm
                      i2_SetAlarmSV1
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_SetAlarmSV1                                       1     1      0   21045
                                             90 COMRAM     1     1      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_BuzzerClear                                       0     0      0       0
                        i2_BuzzerOff
                        i2_TMR4_Stop
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_BuzzerOff                                         0     0      0       0
                     i2_CMP1_Disable
 ---------------------------------------------------------------------------------
 (17) i2_HistAlarm                                         4     4      0  119310
                                             91 COMRAM     4     4      0
                   i2_AlarmUpdateLCD
                  i2_TMR5_StartTimer
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_TMR5_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_AlarmUpdateLCD                                    6     6      0  118858
                                             97 BANK0      6     6      0
                     i2_AlarmDisplay
                         i2_AnyAlarm
                      i2_HigherAlarm
                     i2_ValueDisplay
                           i2___wmul
 ---------------------------------------------------------------------------------
 (18) i2_HigherAlarm                                      11     9      2    2232
                                              6 COMRAM    11     9      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (19) i2_AlarmDisplay                                      9     5      4   68259
                                             86 COMRAM     5     5      0
                                             93 BANK0      4     0      4
                     i2_ValueDisplay
                          i2___awmod
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (17) i2_DisableAlarmSV1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0   86725
                   Absolute function *
                _MonitorPressureTask *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MonitorPressureTask                                49    49      0   86725
                                             90 COMRAM     5     5      0
                                             59 BANK0     40    40      0
                    _AdcReStartCycle
                           _AdcReady
               _ClearTdeTooLongAlarm
               _ClearTdiTooLongAlarm
                _ClearVAboveMaxAlarm
                _ClearVBelowMinAlarm
                   _DisplayCalibrate
                 _GetPressure_mbar02
             _SetCircuitFailureAlarm
                 _SetEPAboveSetAlarm
                 _SetEPBelowSetAlarm
                 _SetGasFailureAlarm
                 _SetIPAboveSetAlarm
                 _SetIPBelowSetAlarm
                 _SetTdeTooLongAlarm
                 _SetTdiTooLongAlarm
                  _SetVAboveMaxAlarm
                  _SetVBelowMinAlarm
                            ___lldiv
                            ___lwdiv
                              _isqrt
                     i2_AdcDataReady
         i2_ClearCircuitFailureAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
                        i2_ClearVars
                  i2_GetPressureV_pa
                   i2_GetPressure_pa
                           i2_See12V
                            i2_See5V
                          i2___aldiv
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_See5V                                            10     8      2    3180
                                             26 COMRAM    10     8      2
                       i2_AdcSeeData
                          i2___aldiv
 ---------------------------------------------------------------------------------
 (17) i2_See12V                                           10     8      2    3526
                                             26 COMRAM    10     8      2
                       i2_AdcSeeData
                          i2___aldiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (18) i2_AdcSeeData                                        4     2      2    2073
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2_AdcDataReady                                      2     0      2    2004
                                              6 COMRAM     2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) _isqrt                                              10     8      2     326
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (17) ___lwdiv                                             7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (17) _SetVBelowMinAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetVAboveMaxAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetTdiTooLongAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetTdeTooLongAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetIPBelowSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetIPAboveSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetGasFailureAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetEPBelowSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetEPAboveSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetCircuitFailureAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _GetPressure_mbar02                                  4     2      2   10808
                                             42 COMRAM     4     2      2
                   i2_GetPressure_pa
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) _DisplayCalibrate                                    8     0      8   21078
                                             51 BANK0      8     0      8
                          i2___awdiv (ARG)
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (17) _AdcReStartCycle                                     0     0      0    1960
             i2_ADCC_StartConversion
                           i2___wmul
 ---------------------------------------------------------------------------------
 (15) _I2C2_Isr                                            0     0      0  197367
                _I2C2_SlaveClearBuff
            _I2C2_SlaveClearStopFlag
              _I2C2_SlaveIsRxBufFull
               _I2C2_SlaveRdCallBack
             _I2C2_SlaveReleaseClock
               _I2C2_SlaveSetCounter
             _I2C2_SlaveStopCallBack
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveStopCallBack                              0     0      0  197302
                   Absolute function *
                        _StopHandler *
 ---------------------------------------------------------------------------------
 (17) _StopHandler                                         2     2      0  197302
                                             93 COMRAM     2     2      0
                     _ReceiveHandler
                        _UpdateState
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) _UpdateState                                         8     8      0  176332
                                             91 COMRAM     2     2      0
                                             93 BANK0      6     6      0
                      _ClearAllAlarm
              _ControllerBuzzerCheck
                     _DisplayDisable
                      _DisplayEnable
           _GetControllerBuzzerCheck
                _SetControlFailAlarm
                     _SetMaxPressure
                          _SetTarget
                   _SetVolumeControl
            i2_ClearControlFailAlarm
                   i2_EnableAlarmSV1
                           i2_LCDOff
                            i2_LCDOn
                   i2_MonitorDisable
                    i2_MonitorEnable
                i2_SetCalibrateState
                           i2_SetSV1
                           i2_printf
 ---------------------------------------------------------------------------------
 (19) i2_SetSV1                                            1     1      0   21045
                                             90 COMRAM     1     1      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (19) i2_SetCalibrateState                                 1     1      0   37816
                                             90 COMRAM     1     1      0
                        i2_ClearVars
                  i2_GetPressureV_pa
                   i2_GetPressure_pa
                  i2_TMR0_StartTimer
                   i2_TMR0_StopTimer
               i2_UnDisplayCalibrate
                          i2___awdiv
                           i2_printf
 ---------------------------------------------------------------------------------
 (20) i2_UnDisplayCalibrate                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_TMR0_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_GetPressure_pa                                   16    14      2    7249
                                             26 COMRAM    16    14      2
                       i2_AdcGetData
                          i2___aldiv
                          i2___awdiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (18) i2___lmul                                           12     4      8     346
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2_GetPressureV_pa                                  12    10      2    5830
                                             14 COMRAM    12    10      2
                       i2_AdcGetData
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (18) i2_AdcGetData                                        4     2      2    2104
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2_ClearVars                                         4     4      0     260
                                              0 COMRAM     4     4      0
         i2_ClearCircuitFailureAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
 ---------------------------------------------------------------------------------
 (19) i2_MonitorEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_MonitorDisable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_LCDOn                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_LCDOff                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_EnableAlarmSV1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _SetVolumeControl                                    1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) _SetTarget                                          12     0     12    3700
                                             26 COMRAM    12     0     12
                          i2___aldiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___aldiv                                          14     6      8    1005
                                             12 COMRAM    14     6      8
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 (19) _SetMaxPressure                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _SetControlFailAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _GetControllerBuzzerCheck                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) _DisplayEnable                                       0     0      0   46129
                     i2_ValueDisplay
 ---------------------------------------------------------------------------------
 (19) _DisplayDisable                                      0     0      0   46129
                     i2_ValueDisplay
 ---------------------------------------------------------------------------------
 (19) i2_ValueDisplay                                     42    42      0   46129
                                             51 BANK0     42    42      0
                    i2_GetAlarmState
                           i2_GetBpm
               i2_GetDisableAlarmSV1
                            i2_GetEp
                            i2_GetIp
                          i2_GetPmax
                           i2_GetSpr
                      i2_GetTargetEp
                      i2_GetTargetIp
                           i2_GetTde
                           i2_GetTdi
                            i2_GetTe
                            i2_GetTi
                        i2_GetVolume
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (20) i2_sprintf                                          28    10     18   20656
                                             23 BANK0     28    10     18
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (20) i2_GetVolume                                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTi                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTe                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTdi                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTde                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTargetIp                                       2     0      2    3525
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetTargetEp                                       2     0      2    3525
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetSpr                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetPmax                                           2     0      2    3525
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetIp                                             9     7      2    3599
                                             14 COMRAM     9     7      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetEp                                             2     0      2    3525
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2___awdiv                                           8     4      4    3525
                                              6 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (20) i2_GetDisableAlarmSV1                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_GetBpm                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetAlarmState                                     2     0      2      99
                                              4 COMRAM     2     0      2
                         i2_AnyAlarm
 ---------------------------------------------------------------------------------
 (17) i2_AnyAlarm                                          4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (19) _ControllerBuzzerCheck                               0     0      0       0
                      i2_CMP1_Enable
 ---------------------------------------------------------------------------------
 (19) i2_CMP1_Enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ClearAllAlarm                                       0     0      0       0
          _ClearHighPressureAlarmLow
               _ClearTdeTooLongAlarm
               _ClearTdiTooLongAlarm
                _ClearVAboveMaxAlarm
                _ClearVBelowMinAlarm
         i2_ClearBaterryLowAlarmHigh
          i2_ClearBaterryLowAlarmMed
            i2_ClearBatteryFailAlarm
         i2_ClearCircuitFailureAlarm
            i2_ClearControlFailAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
       i2_ClearHighPressureAlarmHigh
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
            i2_ClearMonitorFailAlarm
          i2_ClearNoPowerSupplyAlarm
   i2_ClearVeryHighPressureAlarmHigh
 ---------------------------------------------------------------------------------
 (18) i2_ClearVeryHighPressureAlarmHigh                    0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearNoPowerSupplyAlarm                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearMonitorFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearIPBelowSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearIPAboveSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearHighPressureAlarmHigh                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearGasFailureAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearEPBelowSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearEPAboveSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_ClearControlFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearCircuitFailureAlarm                          0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBatteryFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBaterryLowAlarmMed                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBaterryLowAlarmHigh                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearVBelowMinAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearVAboveMaxAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearTdiTooLongAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearTdeTooLongAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _ClearHighPressureAlarmLow                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveSetCounter                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveReleaseClock                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveRdCallBack                                0     0      0      43
                   Absolute function *
    _I2C2_SlaveDefRdInterruptHandler *
                     _ReceiveHandler *
 ---------------------------------------------------------------------------------
 (18) _ReceiveHandler                                      4     4      0      43
                                              0 COMRAM     4     4      0
                          _I2C2_Read
 ---------------------------------------------------------------------------------
 (19) _I2C2_Read                                           0     0      0       0
                _I2C2_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (17) _I2C2_SlaveDefRdInterruptHandler                     0     0      0       0
                _I2C2_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (20) _I2C2_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveClearStopFlag                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveClearBuff                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _CMP1_ISR                                            0     0      0   20921
                   Absolute function *
                   _BuzzerCMPHandler *
 ---------------------------------------------------------------------------------
 (16) _BuzzerCMPHandler                                    0     0      0   20921
                     i2_CMP1_Disable
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_CMP1_Disable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   24989
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                         _AdcHandler *
 ---------------------------------------------------------------------------------
 (16) _AdcHandler                                          0     0      0   24989
           _ADCC_GetConversionResult
                           _AdcReady
                  i2_ADCC_Initialize
             i2_ADCC_StartConversion
                          i2_AdcInit
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_printf                                           14     4     10   20921
                                             86 COMRAM     4     4      0
                                             23 BANK0     10     0     10
                  i2_GetPressureV_pa (ARG)
                   i2_GetPressure_pa (ARG)
                          i2___awdiv (ARG)
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (18) i2_vfprintf                                          8     2      6   19906
                                             78 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) i2_vfpfcnvrt                                        45    39      6   19403
                                             68 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_stoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (20) i2_xtoa                                             39    28     11    4313
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (21) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (22) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (20) i2_stoa                                             22    18      4    1842
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (20) i2_dtoa                                             36    26     10    4829
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (21) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (20) i2_ctoa                                              7     4      3    3117
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_pad                                              11     5      6    2948
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (22) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (22) i2_fputs                                             7     3      4    1180
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (23) i2_fputc                                             9     5      4     900
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (24) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                      i2_UART1_Write
 ---------------------------------------------------------------------------------
 (25) i2_UART1_Write                                       1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_atoi                                             15    13      2    2681
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (21) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (20) i2_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (17) i2_AdcInit                                           0     0      0    2034
     i2_ADCC_SetADTIInterruptHandler
             i2_ADCC_StartConversion
                           i2___wmul
 ---------------------------------------------------------------------------------
 (21) i2___wmul                                            6     2      4    1938
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) i2_ADCC_StartConversion                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_ADCC_Initialize                                   0     0      0      74
     i2_ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (18) i2_ADCC_SetADTIInterruptHandler                      2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _AdcReady                                            0     0      0       0
              _ADCC_IsConversionDone
 ---------------------------------------------------------------------------------
 (18) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 25
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AlarmCheckTask
     _AlarmClear
     _AlarmSet
     _AlarmUpdateLCD
       _AlarmDisplay
         _ValueDisplay
           _GetAlarmState
             _AnyAlarm
           _GetBpm
           _GetDisableAlarmSV1
           _GetEp
             ___awdiv
               ___wmul (ARG)
           _GetIp
             ___awdiv
               ___wmul (ARG)
           _GetPmax
             ___awdiv
               ___wmul (ARG)
           _GetSpr
           _GetTargetEp
             ___awdiv
               ___wmul (ARG)
           _GetTargetIp
             ___awdiv
               ___wmul (ARG)
           _GetTde
           _GetTdi
           _GetTe
           _GetTi
           _GetVolume
           ___awdiv
             ___wmul (ARG)
           ___awmod
           ___wmul
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
         ___awmod
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _AnyAlarm
       _HigherAlarm
         ___wmul
       _ValueDisplay
         _GetAlarmState
           _AnyAlarm
         _GetBpm
         _GetDisableAlarmSV1
         _GetEp
           ___awdiv
             ___wmul (ARG)
         _GetIp
           ___awdiv
             ___wmul (ARG)
         _GetPmax
           ___awdiv
             ___wmul (ARG)
         _GetSpr
         _GetTargetEp
           ___awdiv
             ___wmul (ARG)
         _GetTargetIp
           ___awdiv
             ___wmul (ARG)
         _GetTde
         _GetTdi
         _GetTe
         _GetTi
         _GetVolume
         ___awdiv
           ___wmul (ARG)
         ___awmod
         ___wmul
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       ___wmul
     _AnyAlarm
     _BaterryLowAlarmHigh *
     _BaterryLowAlarmMed *
     _BatteryFailAlarm *
       _AdcDataReady
         ___wmul
       _ClearBaterryLowAlarmHigh
       _ClearBaterryLowAlarmMed
       _ClearBatteryFailAlarm
       _ClearNoPowerSupplyAlarm
       _Get12V
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _SetBaterryLowAlarmHigh
       _SetBaterryLowAlarmMed
       _SetBatteryFailAlarm
       _SetNoPowerSupplyAlarm
     _BuzzerClear *
       _BuzzerOff
         _CMP1_Disable
       _TMR4_Stop
     _BuzzerSet *
       _BuzzerOff
         _CMP1_Disable
       _BuzzerTask
         _BuzzerOff
           _CMP1_Disable
         _BuzzerOn
           _CMP1_Enable
         _ClearMonitorFailAlarm
         _SetMonitorFailAlarm
         _TMR4_Period8BitSet
         _TMR4_SetInterruptHandler
         _TMR4_Start
         _TMR4_Stop
         _printf
           _GetPressureV_pa (ARG)
             _AdcGetData
               ___wmul
             ___awdiv
               ___wmul (ARG)
           _GetPressure_pa (ARG)
             _AdcGetData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           _See12V (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _See5V (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
           _SeePressureV_pa (ARG)
             _AdcSeeData
               ___wmul
             ___awdiv
               ___wmul (ARG)
           _SeePressure_pa (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           ___awdiv (ARG)
             ___wmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
     _CircuitFailureAlarm *
     _ClearAlarmLED *
     _ControlFailAlarm *
     _EPAboveSetAlarm *
     _EPBelowSetAlarm *
     _GasFailureAlarm *
     _HighPressureAlarmHigh *
     _HighPressureAlarmLow *
       _GetMaxPressure
         ___awdiv
           ___wmul (ARG)
       _SetHighPressureAlarmHigh
       _SetVeryHighPressureAlarmHigh
     _HigherAlarm *
       ___wmul
     _IPAboveSetAlarm *
     _IPBelowSetAlarm *
     _MonitorFailAlarm *
       _AdcDataReady
         ___wmul
       _Get5V
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     _NoPowerSupplyAlarm *
     _SetAlarmLED *
     _SetAlarmSV1 *
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     _TdeTooLongAlarm *
     _TdiTooLongAlarm *
     _VAboveMaxAlarm *
     _VBelowMinAlarm *
     _VeryHighPressureAlarmHigh *
     ___wmul *
   _AlarmInit
     _BuzzerInit
       _BuzzerOff
         _CMP1_Disable
       _CMP1_SetIntHandler
       _TMR4_SetInterruptHandler
     _TMR5_SetInterruptHandler
     _TMR5_StartTimer
   _ButtonInit
     _TMR1_SetInterruptHandler
     _TMR1_StartTimer
   _BuzzerCheck
     _BuzzerOff
       _CMP1_Disable
     _BuzzerOn
       _CMP1_Enable
     _SetMonitorFailAlarm
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _BuzzerTest
     _BuzzerOff
       _CMP1_Disable
     _BuzzerOn
       _CMP1_Enable
     _TMR4_Period8BitSet
     _TMR4_SetInterruptHandler
     _TMR4_Start
   _ControllerInit
     _I2C2_Open
       _I2C2_SlaveEnableIrq
       _I2C2_SlaveOpen
       _I2C2_SlaveSetAddrIntHandler
       _I2C2_SlaveSetBusColIntHandler
       _I2C2_SlaveSetIsrHandler
       _I2C2_SlaveSetReadIntHandler
       _I2C2_SlaveSetSlaveAddr
       _I2C2_SlaveSetSlaveMask
       _I2C2_SlaveSetWrColIntHandler
       _I2C2_SlaveSetWriteIntHandler
     _I2C2_SlaveSetReadIntHandler
     _I2C2_SlaveSetStopIntHandler
     _TMR6_SetInterruptHandler
     _TMR6_StartTimer
       _TMR6_Start
   _DisableAlarmSV1
   _DisplayTask
     _LCDMessage1
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
     _LCDMessage12
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
     _LCDMessage2
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
   _DumpI2C
   _EnableAlarmSV1
   _HistAlarm
     _AlarmUpdateLCD
       _AlarmDisplay
         _ValueDisplay
           _GetAlarmState
             _AnyAlarm
           _GetBpm
           _GetDisableAlarmSV1
           _GetEp
             ___awdiv
               ___wmul (ARG)
           _GetIp
             ___awdiv
               ___wmul (ARG)
           _GetPmax
             ___awdiv
               ___wmul (ARG)
           _GetSpr
           _GetTargetEp
             ___awdiv
               ___wmul (ARG)
           _GetTargetIp
             ___awdiv
               ___wmul (ARG)
           _GetTde
           _GetTdi
           _GetTe
           _GetTi
           _GetVolume
           ___awdiv
             ___wmul (ARG)
           ___awmod
           ___wmul
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
         ___awmod
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _AnyAlarm
       _HigherAlarm
         ___wmul
       _ValueDisplay
         _GetAlarmState
           _AnyAlarm
         _GetBpm
         _GetDisableAlarmSV1
         _GetEp
           ___awdiv
             ___wmul (ARG)
         _GetIp
           ___awdiv
             ___wmul (ARG)
         _GetPmax
           ___awdiv
             ___wmul (ARG)
         _GetSpr
         _GetTargetEp
           ___awdiv
             ___wmul (ARG)
         _GetTargetIp
           ___awdiv
             ___wmul (ARG)
         _GetTde
         _GetTdi
         _GetTe
         _GetTi
         _GetVolume
         ___awdiv
           ___wmul (ARG)
         ___awmod
         ___wmul
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       ___wmul
     _TMR5_StartTimer
     _TMR5_StopTimer
   _InitDisplay
     _LCDInit
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDTest
         _LCDMessage12
           _LCDMessage
             _LCDWriteChar
             _strlen
           _LCDWriteCmd
       _LCDWrite4
       _LCDWriteCmd
   _LCDOff
   _LCDOn
   _MonitorDisable
   _MonitorDump
     _See12V
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _See5V
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
     ___awdiv
       ___wmul (ARG)
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _MonitorEnable
   _MonitorInit
     _AdcInit
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
       ___wmul
     _ClearVars
       _ClearCircuitFailureAlarm
       _ClearEPAboveSetAlarm
       _ClearEPBelowSetAlarm
       _ClearIPAboveSetAlarm
       _ClearIPBelowSetAlarm
     _TMR0_SetInterruptHandler
     _TMR0_StartTimer
   _MuteAlarm
     _AnyAlarm
     _BuzzerClear
       _BuzzerOff
         _CMP1_Disable
       _TMR4_Stop
     _ClearCircuitFailureAlarm
     _ClearControlFailAlarm
     _ClearGasFailureAlarm
     _ClearHighPressureAlarmHigh
     _ClearMonitorFailAlarm
     _ClearVeryHighPressureAlarmHigh
     _HigherAlarm
       ___wmul
     _SetAlarmSV1
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___awdiv
             ___wmul (ARG)
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     ___wmul
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CMP1_Initialize
       _CMP1_Disable
       _CMP1_Enable
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _See12V
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _See5V
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
   _SeePressureV_pa
     _AdcSeeData
       ___wmul
     ___awdiv
       ___wmul (ARG)
   _SeePressure_pa
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
     ___awdiv
       ___wmul (ARG)
     ___lmul
   _SetAlarmSV1
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SetCalibrateState
     _ClearVars
       _ClearCircuitFailureAlarm
       _ClearEPAboveSetAlarm
       _ClearEPBelowSetAlarm
       _ClearIPAboveSetAlarm
       _ClearIPBelowSetAlarm
     _GetPressureV_pa
       _AdcGetData
         ___wmul
       ___awdiv
         ___wmul (ARG)
     _GetPressure_pa
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _TMR0_StartTimer
     _TMR0_StopTimer
     _UnDisplayCalibrate
     ___awdiv
       ___wmul (ARG)
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SetSV1
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _TestAlarm
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___awdiv
           ___wmul (ARG)
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
     _putchar
       _fputc
         _putch
           _UART1_Write
   _UART1_is_rx_ready
   ___llmod
   _getch
     _UART1_Read
   _printf
     _GetPressureV_pa (ARG)
       _AdcGetData
         ___wmul
       ___awdiv
         ___wmul (ARG)
     _GetPressure_pa (ARG)
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _See12V (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _See5V (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
     _SeePressureV_pa (ARG)
       _AdcSeeData
         ___wmul
       ___awdiv
         ___wmul (ARG)
     _SeePressure_pa (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     ___awdiv (ARG)
       ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
         _fputc
           _putch
             _UART1_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _UART1_Write
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _AdcHandler *
       _ADCC_GetConversionResult
       _AdcReady
         _ADCC_IsConversionDone
       i2_ADCC_Initialize
         i2_ADCC_SetADTIInterruptHandler
       i2_ADCC_StartConversion
       i2_AdcInit
         i2_ADCC_SetADTIInterruptHandler
         i2_ADCC_StartConversion
         i2___wmul
       i2___wmul
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
   _CMP1_ISR *
     Absolute function(Fake) *
     _BuzzerCMPHandler *
       i2_CMP1_Disable
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
   _I2C2_Isr *
     _I2C2_SlaveClearBuff
     _I2C2_SlaveClearStopFlag
     _I2C2_SlaveIsRxBufFull
     _I2C2_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C2_SlaveDefRdInterruptHandler *
         _I2C2_SlaveGetRxData
       _ReceiveHandler *
         _I2C2_Read
           _I2C2_SlaveGetRxData
     _I2C2_SlaveReleaseClock
     _I2C2_SlaveSetCounter
     _I2C2_SlaveStopCallBack
       Absolute function(Fake) *
       _StopHandler *
         _ReceiveHandler
           _I2C2_Read
             _I2C2_SlaveGetRxData
         _UpdateState
           _ClearAllAlarm
             _ClearHighPressureAlarmLow
             _ClearTdeTooLongAlarm
             _ClearTdiTooLongAlarm
             _ClearVAboveMaxAlarm
             _ClearVBelowMinAlarm
             i2_ClearBaterryLowAlarmHigh
             i2_ClearBaterryLowAlarmMed
             i2_ClearBatteryFailAlarm
             i2_ClearCircuitFailureAlarm
             i2_ClearControlFailAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
             i2_ClearHighPressureAlarmHigh
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
             i2_ClearMonitorFailAlarm
             i2_ClearNoPowerSupplyAlarm
             i2_ClearVeryHighPressureAlarmHigh
           _ControllerBuzzerCheck
             i2_CMP1_Enable
           _DisplayDisable
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
           _DisplayEnable
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
           _GetControllerBuzzerCheck
           _SetControlFailAlarm
           _SetMaxPressure
           _SetTarget
             i2___aldiv
               i2___lmul (ARG)
             i2___wmul
           _SetVolumeControl
           i2_ClearControlFailAlarm
           i2_EnableAlarmSV1
           i2_LCDOff
           i2_LCDOn
           i2_MonitorDisable
           i2_MonitorEnable
           i2_SetCalibrateState
             i2_ClearVars
               i2_ClearCircuitFailureAlarm
               i2_ClearEPAboveSetAlarm
               i2_ClearEPBelowSetAlarm
               i2_ClearIPAboveSetAlarm
               i2_ClearIPBelowSetAlarm
             i2_GetPressureV_pa
               i2_AdcGetData
                 i2___wmul
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPressure_pa
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_TMR0_StartTimer
             i2_TMR0_StopTimer
             i2_UnDisplayCalibrate
             i2___awdiv
               i2___wmul (ARG)
             i2_printf
               i2_GetPressureV_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPressure_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2___awdiv (ARG)
                 i2___wmul (ARG)
               i2_vfprintf (ARG)
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_SetSV1
             i2_printf
               i2_GetPressureV_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPressure_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2___awdiv (ARG)
                 i2___wmul (ARG)
               i2_vfprintf (ARG)
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_printf
             i2_GetPressureV_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPressure_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2___awdiv (ARG)
               i2___wmul (ARG)
             i2_vfprintf (ARG)
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_ctoa
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_isdigit
                 i2_stoa
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_strlen
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___awdiv
               i2___wmul (ARG)
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
   _TMR0_ISR *
     Absolute function(Fake) *
     _MonitorPressureTask *
       _AdcReStartCycle
         i2_ADCC_StartConversion
         i2___wmul
       _AdcReady
         _ADCC_IsConversionDone
       _ClearTdeTooLongAlarm
       _ClearTdiTooLongAlarm
       _ClearVAboveMaxAlarm
       _ClearVBelowMinAlarm
       _DisplayCalibrate
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_sprintf (ARG)
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       _GetPressure_mbar02
         i2_GetPressure_pa
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv
           i2___wmul (ARG)
       _SetCircuitFailureAlarm
       _SetEPAboveSetAlarm
       _SetEPBelowSetAlarm
       _SetGasFailureAlarm
       _SetIPAboveSetAlarm
       _SetIPBelowSetAlarm
       _SetTdeTooLongAlarm
       _SetTdiTooLongAlarm
       _SetVAboveMaxAlarm
       _SetVBelowMinAlarm
       ___lldiv
       ___lwdiv
       _isqrt
       i2_AdcDataReady
         i2___wmul
       i2_ClearCircuitFailureAlarm
       i2_ClearEPAboveSetAlarm
       i2_ClearEPBelowSetAlarm
       i2_ClearGasFailureAlarm
       i2_ClearIPAboveSetAlarm
       i2_ClearIPBelowSetAlarm
       i2_ClearVars
         i2_ClearCircuitFailureAlarm
         i2_ClearEPAboveSetAlarm
         i2_ClearEPBelowSetAlarm
         i2_ClearIPAboveSetAlarm
         i2_ClearIPBelowSetAlarm
       i2_GetPressureV_pa
         i2_AdcGetData
           i2___wmul
         i2___awdiv
           i2___wmul (ARG)
       i2_GetPressure_pa
         i2_AdcGetData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
         i2___awdiv
           i2___wmul (ARG)
         i2___lmul
       i2_See12V
         i2_AdcSeeData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
         i2___lmul
       i2_See5V
         i2_AdcSeeData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
       i2___aldiv
         i2___lmul (ARG)
       i2___awdiv
         i2___wmul (ARG)
       i2___awmod
       i2___wmul
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _ButtonTask *
       i2_DisableAlarmSV1
       i2_HistAlarm
         i2_AlarmUpdateLCD
           i2_AlarmDisplay
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
             i2___awmod
             i2_sprintf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_AnyAlarm
           i2_HigherAlarm
             i2___wmul
           i2_ValueDisplay
             i2_GetAlarmState
               i2_AnyAlarm
             i2_GetBpm
             i2_GetDisableAlarmSV1
             i2_GetEp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetIp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPmax
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetSpr
             i2_GetTargetEp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetTargetIp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetTde
             i2_GetTdi
             i2_GetTe
             i2_GetTi
             i2_GetVolume
             i2___awdiv
               i2___wmul (ARG)
             i2___awmod
             i2___wmul
             i2_sprintf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2___wmul
         i2_TMR5_StartTimer
         i2_TMR5_StopTimer
       i2_MuteAlarm
         i2_AnyAlarm
         i2_BuzzerClear
           i2_BuzzerOff
             i2_CMP1_Disable
           i2_TMR4_Stop
         i2_ClearCircuitFailureAlarm
         i2_ClearControlFailAlarm
         i2_ClearGasFailureAlarm
         i2_ClearHighPressureAlarmHigh
         i2_ClearMonitorFailAlarm
         i2_ClearVeryHighPressureAlarmHigh
         i2_HigherAlarm
           i2___wmul
         i2_SetAlarmSV1
           i2_printf
             i2_GetPressureV_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPressure_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2___awdiv (ARG)
               i2___wmul (ARG)
             i2_vfprintf (ARG)
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_ctoa
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_isdigit
                 i2_stoa
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_strlen
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2___wmul
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___awdiv
               i2___wmul (ARG)
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR4_ISR *
     Absolute function(Fake) *
     _BuzzerHandler *
       i2_BuzzerTask
         i2_BuzzerOff
           i2_CMP1_Disable
         i2_BuzzerOn
           i2_CMP1_Enable
         i2_ClearMonitorFailAlarm
         i2_SetMonitorFailAlarm
         i2_TMR4_Period8BitSet
         i2_TMR4_SetInterruptHandler
         i2_TMR4_Start
         i2_TMR4_Stop
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___awdiv
               i2___wmul (ARG)
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
     _BuzzerTestHandler *
       i2_BuzzerOff
         i2_CMP1_Disable
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR4_DefaultInterruptHandler *
   _TMR5_ISR *
     Absolute function(Fake) *
     _AlarmHandler *
       i2_AnyAlarm
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
   _TMR6_ISR *
     Absolute function(Fake) *
     _ControllerTimerHandler *
       _SetControlFailAlarm
       i2_ClearControlFailAlarm
       i2___awmod
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___awdiv
             i2___wmul (ARG)
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR6_DefaultInterruptHandler *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     63F      37       39.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      64      13       39.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      1      FA      11       97.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      B     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C7      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     459      32        0.0%
DATA                 0      0     A98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul  8 13:01:49 2020

                              i2_EnableAlarmSV1 A528                            ??_TMR4_Period8BitSet 0104  
                   __end_of_ClearVAboveMaxAlarm A580                                  i2_ValueDisplay 1E6C  
                                   ?_LCDMessage 0108                          ??_I2C2_SlaveSetCounter 0001  
                                             _a 034C                     ?i2_ClearCircuitFailureAlarm 0001  
                      _ClearCircuitFailureAlarm A498                __end_of_TMR5_SetInterruptHandler A2A6  
                     __size_of_SetVolumeControl 000A                      __end_of_BaterryLowAlarmMed A670  
                                  ?_LCDMessage1 0110                                    ?_LCDMessage2 0110  
                                   __CFG_CP$OFF 000000                               ??_CMP1_Initialize 0104  
                                  ___awdiv@sign 010F                         ?i2_ClearEPBelowSetAlarm 0001  
                                            _bp 02BA                               ??_TMR6_StartTimer 0104  
                        __end_of_FVR_Initialize A478                                              _pe 00DA  
                                            _pi 01D5                                              _on 00F9  
                                            _te 0258                                              _ti 025A  
                                            _tt 00C8                 ?_ClearVeryHighPressureAlarmHigh 0001  
              ??_ClearVeryHighPressureAlarmHigh 0104                             ___wmul@multiplicand 0106  
                             ??_TMR5_WriteTimer 0003                                 ?_ControllerInit 0001  
                   __end_of_BaterryLowAlarmHigh A66C                           ??_CircuitFailureAlarm 0104  
                         __end_ofi2_UART1_Write 8D92                                   ?_LCDMessage12 0110  
                           _SetControlFailAlarm A530                                      HistAlarm@i 02F7  
                      ??_I2C2_SlaveReleaseClock 0001                                     __CFG_LVP$ON 000000  
                         i2_AlarmUpdateLCD$7131 00C3                           i2_AlarmUpdateLCD$7132 00C5  
                __end_ofi2_ClearIPAboveSetAlarm A02C                                             l657 8C54  
                                           _LED 01F0                                             _PR4 003F9F  
                                           i2l6 7630                              i2___aodiv@quotient 0013  
                          _ClearEPAboveSetAlarm 9FD4                      ??_SetHighPressureAlarmHigh 0104  
                               _timer1ReloadVal 02DD                                             _abs 93AA  
                               _TdeTooLongAlarm A660                           __end_of_GetAlarmState 8FCE  
                                           _bpm 0256                                             _pad 7238  
                                           _tt1 0266                                             _tt2 00DE  
                                           _tt3 01DB                                             _tt4 00DC  
                                           _tde 01D7                                             _msg 0200  
                                           _tdi 01D9                                             _rpe 0246  
                                           _rpi 0248                                             _spr 0232  
                                           _run 00F0                         __size_of_PMD_Initialize 0024  
                                  ___awmod@sign 0109                        __size_of_AdcReStartCycle 0064  
                               _TMR2_Initialize 9E56                                             prod 003FF3  
                                           tosl 003FFD                                             wreg 003FE8  
                           __end_ofi2_vfpfcnvrt 189A                             GetPressureV_pa@adcv 0116  
                      ?_ClearNoPowerSupplyAlarm 0001                         __end_of_SeePressureV_pa 8152  
                       __end_ofi2_GetAlarmState 901E                              _UART1_Transmit_ISR 919C  
                                 __CFG_BBEN$OFF 000000                         ??_ClearControlFailAlarm 0104  
                          __end_of_CMP1_Disable A4E8                                 ?_VBelowMinAlarm 0001  
                                  ?_LCDWriteCmd 0001                                 __end_of_LCDInit 69AC  
                               __end_of_LCDTest 7E24                                    __CFG_ZCD$OFF 000000  
                           __end_of_GetTargetEp 9B12                             __end_of_GetTargetIp 9AEC  
                      ?_I2C2_SlaveSetIsrHandler 0104                        __size_of_GasFailureAlarm 0004  
                                          ?_abs 0116                                      _GetIp$4810 0119  
                                          l2116 2A38                                            l2142 2B14  
                                    _GetIp$4809 0117                                            l1710 907C  
                                          l1623 77D2                                            l1730 909C  
                                          l1722 9090                                            l1716 9086  
                                          l4028 8556                                            l1653 7C80  
                                          l1647 7C76                                            l1743 7BE0  
                                          l3520 52EE                                            l1728 909A  
                                          l2632 4716                                            l2385 6B62  
                                          l2377 6B36                                            l1665 7C94  
                                          l1761 7BFE                                            l4314 56C4  
                                          l1683 7CC8                                            l1667 7C96  
                                          l1659 7C8A                                            l1763 7C00  
                                          l1755 7BF4                                            l3541 3C32  
                                          l2389 A0B8                                            l1677 7CBE  
                                          l1773 7C28                                            l1749 7BEA  
                          _ADCC_StartConversion A11C                                            l1695 7CDC  
                                          l1791 7C46                                            l3473 7272  
                                          l1697 7CDE                                            l1689 7CD2  
                                          l1793 7C48                                            l1785 7C3C  
                              __end_of_I2C2_Isr 88CC                                            l4283 93DA  
                                          l3491 375C                                            l3539 3C26  
                                          l1779 7C32                                            l3493 3768  
                                          ?_pad 0116                                            l4393 8E7C  
                                          STR_1 FF77                                            STR_2 FF4D  
                                          STR_3 FFEC                                            STR_4 FD3A  
                                          STR_5 FEF0                                            STR_6 FEDF  
                                          STR_7 FF3E                                            STR_8 FECE  
                                          STR_9 FEBD                                      _AlarmClear 9DB6  
                                          _LATA 003FBA                                            _LATB 003FBB  
                               __end_ofi2_LCDOn A43E                                            _LATC 003FBC  
                                          _LATD 003FBD                                            _LATE 003FBE  
                                          _T2PR 003FAB                                            _T4PR 003F9F  
                                          _T6PR 003F93                                            _PMD0 0039C0  
                                          _PMD1 0039C1                                            _PMD2 0039C2  
                                          _PMD3 0039C3                                            _PMD4 0039C4  
                                          _PMD5 0039C5                                            _PMD6 0039C6  
                                          _PMD7 0039C7                      __end_of_SetTdeTooLongAlarm A510  
                                          _WPUA 003A41                                            _WPUB 003A51  
                                          _WPUC 003A61                                            _WPUD 003A71  
                                          _WPUE 003A81                         i2_ClearBatteryFailAlarm A570  
                                 __CFG_FCMEN$ON 000000                             ?_UART1_Transmit_ISR 0001  
                          ?_SetControlFailAlarm 0001                                 __end_ofi2_GetEp 9AA0  
                               __end_ofi2_GetIp 5272                   ?_I2C2_SlaveSetWrColIntHandler 0104  
                               __end_ofi2_GetTe A3EA                                 __end_ofi2_GetTi A34E  
                                _MonitorDisable A4A8                                            abs@a 0116  
                                          _dbuf 0389                                            _tt12 0262  
                                          _pLow 024E                                 __end_ofi2_See5V 86BA  
                                          _tt34 0260                                            _atoi 5562  
                                          _ctoa 8A62                               ??_TdiTooLongAlarm 0104  
                                          _main 2D48                                            _dtoa 36DA  
                               __end_of_AdcInit 82C6                                            _msg1 03E5  
                                          _msg2 03D1                                            _msg3 03BD  
                                          _msg4 03A9                                            _hist 01E7  
                                          _init 029A          __end_ofi2_ADCC_SetADTIInterruptHandler A394  
       __size_ofi2_ADCC_SetADTIInterruptHandler 000E                  i2_ADCC_SetADTIInterruptHandler A386  
                                          _lrpe 00D4                                            _pmax 00D8  
                                          _lrpi 01D1                                            _pmin 0254  
                                          _prec 01C9                                 _TMR0_StartTimer A640  
                                          _nout 022A                                            pad@i 011D  
                                          pad@p 011A                                            fsr1h 003FE2  
                         __end_of_MonitorEnable A4A8                                            fsr2h 003FDA  
                                          indf1 003FE7                                            indf2 003FDF  
                                          fsr1l 003FE1                                            pad@w 011F  
                                          fsr2l 003FD9                                            _stoa 5272  
                                          _xtoa 3C0A                                     LCDMessage@i 010E  
                                 ??_InitDisplay 013E                                     i2_atoi$5674 0010  
                                   i2_atoi$5675 0014                                     i2_atoi$5676 0012  
                                          prodh 003FF4                                            prodl 003FF3  
                                          start 001A                                 _timer5ReloadVal 02E3  
                      ??_I2C2_SlaveSetSlaveAddr 0104                         __end_ofi2_MonitorEnable A520  
                            __size_of_LCDWrite4 004E                                 __end_ofi2_fputc 74F8  
                      ??_I2C2_SlaveSetSlaveMask 0104                                 __end_ofi2_fputs 94E0  
                                    _i2c2RdData 02B6                          __end_ofi2_ValueDisplay 2238  
                 ??_UART1_SetTxInterruptHandler 0106                                __end_of_CMP1_ISR 9D56  
                ??_SetVeryHighPressureAlarmHigh 0104                                 __end_ofi2_putch A470  
                               __end_of_GetPmax 9B38                      ??_TMR1_SetInterruptHandler 0106  
                  __end_ofi2_GetDisableAlarmSV1 A5FE                                   __CFG_CSWEN$ON 000000  
                          _ClearGasFailureAlarm A488                                     i2_dtoa$5178 0030  
                    ??_TMR4_SetInterruptHandler 0106                                 __end_of_DumpI2C A6AA  
                ?_I2C2_SlaveSetBusColIntHandler 0104                                    ___param_bank 000000  
                             _SetVBelowMinAlarm A5EC                       CMP1_SetIntHandler@handler 0104  
                                    _i2c2WrData 02B7            __size_of_I2C2_SlaveSetAddrIntHandler 000E  
                  __end_of_ClearIPBelowSetAlarm A082                  __end_ofi2_ClearEPBelowSetAlarm A042  
                    __size_of_UART1_is_rx_ready 000E                                     ?_UART1_Read 0001  
                           __end_of_HigherAlarm 7238                                ??_AlarmCheckTask 02F5  
                                         ??_abs 0118                                           ??_pad 011C  
                        ??i2_UnDisplayCalibrate 0001                              ?_SetVBelowMinAlarm 0001  
                                 ?_LCDWriteChar 0001                                      i2_vfprintf 8792  
                       __end_of_TMR0_Initialize 9C1A                                     LCDTest@msg1 0116  
                                   LCDTest@msg2 0127                  ??_TMR0_DefaultInterruptHandler 0001  
                               ?_FVR_Initialize 0001                  __size_of_OSCILLATOR_Initialize 0018  
                                ??_LCDMessage12 0114                          ??_HighPressureAlarmLow 0116  
                          ??_UART1_Transmit_ISR 0001                        __size_of_IPAboveSetAlarm 001A  
                 __end_of_OSCILLATOR_Initialize 9FD4                                           l21101 771A  
                                         l22001 4EB8                                           l22003 4EBE  
                                         l21115 7782                                           l21125 4108  
                                         l21109 776A                                           l22023 4F4E  
                           __end_of_DisplayTask 75A0                                           l22041 7E48  
                                         l22113 6588                                           l22105 6574  
                                         l21137 4158                                           l21081 4CF0  
                                         l21073 4CA0                                           l22027 4F5C  
                                         l22043 7E50                                           l21091 4DE8  
                                         l22211 7420                                           l20507 918A  
                                         l22029 4F66                                           l22045 7E58  
                                         l22037 7E38                                           l22133 65CA  
                                         l22213 742C                                           l22047 7E60  
                                         l22039 7E40                                           l22055 7E6E  
                                         l22207 73F4                                           l22049 7E68  
                                         l22057 7EA4                                           l22161 463E  
                                         l22145 45AC                                           l22305 8548  
                                         l22401 2DAC                                           l22075 64E0  
                                         l20565 96BE                                           l22093 6532  
                                         l22173 46E0                                           l22165 4674  
                                         l22157 4608                                           l22261 8138  
                                         l22237 58AA                                           l22405 2DC8  
                                         l22247 59A2                                           l22511 2FF8  
                                         l22503 2FD8                                           l22431 2E7A  
                                         l22423 2E5A                                           l22415 2E3A  
                                         l20825 6B26                                           l20921 9F52  
                                         l22097 654A                                           l22089 651A  
                                         l22169 46AA                                           l20851 8188  
                                         l22195 475C                                           l22283 64BA  
                                         l22275 63C0                                           l22531 3080  
                                         l22507 2FE8                                           l22435 2E8A  
                                         l22427 2E6A                                           l22419 2E4A  
                                         l20773 6A16                                           l20853 8196  
                                         l20909 9F6C                                           l20933 9F38  
                                         l22285 64BE                                           l20783 6A4C  
                                         l22543 30AC                                           l22471 2F18  
                                         l22463 2EE8                                           l22439 2E9A  
                                         l17121 8DA0                                           l20769 6A02  
                                         l20865 81CE                                           l21825 968A  
                                         l22297 8514                                           l22393 2D88  
                                         l17131 93F2                                           l17123 8DA6  
                                         l20795 6A7C                                           l20859 81B2  
                                         l22299 8520                                           l22539 309C  
                                         l22491 2F90                                           l22483 2F60  
                                         l22475 2F30                                           l22467 2F00  
                                         l22459 2ED8                                           l20789 6A5E  
                                         l21845 81E2                                           l21925 7D84  
                                         l17135 940E                                           l18007 1B08  
                                         l20983 5CE8                                           l20799 6A8A  
                                         l21935 7522                                           l22495 2FA8  
                                         l22487 2F78                                           l22479 2F48  
                                         l18025 1C92                                           l18017 1BFA  
                                         l20897 9F86                                           l21953 755C  
                                         l21945 7540                                           l21939 752A  
                                         l22499 2FC0                                           l18045 1E00  
                                         l19013 2506                                           l20997 5D88  
                                         l21981 4E1C                                           l21965 758A  
                                         l17511 9220                                           l17431 59DC  
                                         l18039 1DB2                                           l18055 1E26  
                                         l19007 24E8                                           l18311 7CCA  
                                         l18049 1E0A                                           l19009 24F2  
                                         l21993 4E42                                           l18313 7CD4  
                                         l17443 5A2A                                           l19203 6BBE  
                                         l16901 8C3C                                           l17373 7258  
                                         l17445 5A3E                                           l17437 5A04  
                                         l19205 6BCA                                           l18309 7CC0  
                                         l18343 9508                                           l17383 7298  
                                         l17463 5AD6                                           l17455 5A9A  
                                         l17711 3938                                           l19223 6C22  
                                         l19215 6BFE                                           l18337 94EA  
                                         l17377 726A                                           l16915 8C82  
                                         l17387 72CC                                           l17379 727C  
                                         l17459 5AB0                                           l17491 5FAA  
                                         l17483 5F4E                                           l17475 5F10  
                                         l17715 3952                                           l18355 8438  
                                         l19219 6C0C                                           l18611 7BF6  
                                         l18381 7F7C                                           l18373 7F5E  
                                         l16917 8C8A                                           l17485 5F62  
                                         l17741 5328                                           l18357 846C  
                                         l18621 7C2A                                           l18391 7F9C  
                                         l18367 7F4E                                           l17831 5578  
                                         l17647 8A78                                           l17495 5FC0  
                                         l17479 5F34                                           l17663 3740  
                                         l17751 5392                                           l17727 52A2  
                                         l17823 3E52                                           l17807 3DDA  
                                         l19191 6B84                                           l19175 8B36  
                                         l19423 29E2                                           l18295 7C78  
                                         l18623 7C34                                           l18607 7BE2  
                                         l17649 8A84                                           l17681 3796  
                                         l17745 5346                                           l17737 530C  
                                         l19505 2B06                                           l19441 2A22  
                                         l19433 2A0C                                           l19425 29E6  
                                         l18297 7C82                                           l18625 7C3E  
                                         l18609 7BEC                                           l19345 907E  
                                         l18379 7F74                                           l18395 7FA6  
                                         l17851 5618                                           l16963 6F7E  
                                         l17499 5FE6                                           l17691 38D2  
                                         l17755 53AC                                           l17771 3C4A  
                                         l19179 8B4A                                           l19419 29CA  
                                         l19427 29F4                                           l18299 7C8C  
                                         l18643 781C                                           l19363 7D9E  
                                         l19347 9088                                           l18821 8314  
                                         l18813 82F4                                           l18805 82DA  
                                         l17845 55DC                                           l17829 5574  
                                         l17677 3786                                           l19197 6B9C  
                                         l19613 2C08                                           l19605 2BFA  
                                         l19533 2B2C                                           l19525 2B24  
                                         l19461 2A40                                           l19437 2A18  
                                         l18637 77CA                                           l19349 9092  
                                         l18399 7FB4                                           l18815 82FC  
                                         l17855 5656                                           l17847 55E4  
                                         l17839 55CA                                           l17759 53C8  
                                         l17951 18EC                                           l19543 2B9A  
                                         l19535 2B8C                                           l19519 2B1C  
                                         l19463 2A46                                           l19447 2A2A  
                                         l19439 2A1C                                           l18639 77DC  
                                         l18753 8FC4                                           l18737 8F94  
                                         l18825 831E                                           l18809 82E6  
                                         l17849 55EA                                           l16969 7012  
                                         l17785 3CAC                                           l17777 3C8A  
                                         l19393 7A22                                           l19641 2C34  
                                         l19633 2C26                                           l19369 7DA6  
                                         l18747 8FB0                                           l18691 4FE4  
                                         l17971 1912                                           l17963 18F8  
                                         l17955 18F0                                           l19627 2C1E  
                                         l19619 2C10                                           l19571 2BC6  
                                         l19563 2BB8                                           l19491 2AF0  
                                         l19475 2A56                                           l19467 2A4E  
                                         l18829 832C                                           l19397 7A38  
                                         l19813 71BE                                           l19661 2C52  
                                         l19557 2BB0                                           l19549 2BA2  
                                         l19485 2AE8                                           l19477 2ADA  
                                         l18695 505A                                           l17799 3D42  
                                         l17991 1A1C                                           l17975 191C  
                                         l17967 18FC                                           l17959 18F4  
                                         l19399 7A40                                           l19807 7192  
                                         l19655 2C4A                                           l19647 2C3C  
                                         l19591 2BE4                                           l17993 1A2E  
                                         l17969 18FE                                           l17977 1968  
                                         l19817 721A                                           l19681 2C70  
                                         l19585 2BDC                                           l19577 2BCE  
                                         l18945 934C                                           l18699 50C4  
                                         l18963 227E                                 __end_of___aldiv 6C3C  
                                         l19691 2D14                                           l19675 2C68  
                                         l19499 2AFE                                           l17989 19F2  
                                         l18957 225E                                           l19669 2C60  
                                         l19599 2BF2                                           l19695 2D1A  
                                         l19689 2C78                                           l18987 2468  
                                         l18989 2470                               __end_of_I2C2_Read A628  
                               __end_of___aodiv 5B08                                           _ADCAP 003EF5  
                                         _ADACT 003EFE                                           ?_atoi 010B  
                                         ?_ctoa 0121                                           ?_main 0001  
                                         ?_dtoa 0121                                           _ADCLK 003EFF  
                               __end_of___aomod 6018                               __end_of_I2C2_Open 8932  
                                         _ADPCH 003EF1                                           _ADREF 003EFD  
                               __end_of___awdiv 7FC2                                           STR_10 FE67  
                                         STR_11 FFF9                                           STR_20 FF2F  
                                         STR_12 FE81                                           STR_13 FFB2  
                                         STR_21 FF20                                           STR_30 FFE8  
                                         STR_22 FEAB                                           STR_14 FE98  
                                         STR_15 FFC6                                           STR_23 FFBA  
                                         STR_31 FF84                                           STR_24 FEBA  
                                         STR_32 FFE4                                           STR_16 FFCB  
                                         STR_40 FD05                                           STR_17 FFC6  
                                         STR_25 FFC1                                           STR_41 FC98  
                                         STR_33 FC57                                   __CFG_WDTE$OFF 000000  
                                         STR_18 FFCB                                           STR_26 FFF0  
                                         STR_42 FFD8                                           STR_34 FE47  
                                         STR_50 FE27                                           STR_27 FFF6  
                                         STR_43 FFA8                                           STR_19 FF9C  
                                         STR_51 FE07                                           STR_35 FD92  
                                         STR_44 FFFC                                           STR_28 FFF3  
                                         STR_52 FF01                                           STR_36 FDE3  
                               __end_of___awmod 833A                                           STR_29 FEED  
                                         STR_45 FFE0                                           STR_53 FF11  
                                         STR_37 FDBB                                           STR_46 FFDC  
                                         STR_54 FFD4                                           STR_38 FCCF  
                                         STR_55 FFD0                                           STR_47 FF5C  
                                         STR_39 FD67                                           STR_48 FF90  
                                         _ADRPT 003EEC                                           STR_49 FF6A  
                               _TMR1_StartTimer A64C                                           ?_stoa 010F  
                                    SetSV1@last 00F1                                 __end_of___lldiv 7F3A  
                                i2_AdcDataReady 9A50                                           u20010 81A6  
                         ?_ClearEPAboveSetAlarm 0001                                           u20020 81C4  
                                         u20030 9F82                                           _T1CLK 003FB5  
                                         u20040 9F68                                           u20050 9F4E  
                                         u20060 9F34                                 ___awdiv@divisor 010C  
                                         ?_xtoa 0121                                           _T1CON 003FB2  
                               __end_of___llmod 8570                                           u20250 4150  
                                         _U1P1H 003DED                                           u20260 41A0  
                                         _U1P2H 003DEF                                           u21310 A1A6  
                                         _U1P1L 003DEC                                           _U1P3H 003DF1  
                                         u22040 8524                                           _T2CON 003FAC  
                                         _U1P2L 003DEE                                           _U1P3L 003DF0  
                                         u21440 8226                                           u21700 650A  
                                         u21630 4EAE                                           u21710 6514  
                                         _T5CLK 003F9D                                           u21640 4ED0  
                                         u21800 45A4                                           _T4CON 003FA0  
                                         u21618 4E78                                           u21619 4E8C  
                                         u21660 4F2E                                           u21580 4E28  
                                         u21740 6574                                           _T2HLT 003FAD  
                                         u15510 6F76                                           u17030 533C  
                                         u17110 3CA8                                           u21590 4E2A  
                                         u21750 6580                                           u17040 5370  
                                         u17120 3CDE                                           u21920 4766  
                                         _T5CON 003F9A                                           u15530 6FBE  
                                         u17210 3E0E                                           u17130 3CE0  
                                         u21770 65B2                                           u21930 4768  
                                         u17211 3E0C                                           u16500 9626  
                                         u16420 93B8                                           u17220 3E1C  
                                         u21780 65BE                                           u21940 73BA  
                                         u16510 9628                                           u17070 53DC  
                                         u16430 95BA                                           u17230 3E20  
                                         u17150 3D18                                           u21950 73BC  
                                         u17047 5362                                           u22807 6998  
                                         u16440 95BC                                           u17160 3D1A  
                                         _T6CON 003F94                                           u22817 90A0  
                                         u16450 95F0                                           u17090 3C1C  
                                         u18210 7812                                           u21970 743C  
                                         u22907 7C60                                           u22827 90AA  
                                         u17260 55C6                                           u16620 5F66  
                                         u16460 95F2                                           u17180 3DA6  
                                         _T4HLT 003FA1                                           u16541 5A0A  
                                         u22917 7C9A                                           u22837 90B4  
                                         u22757 68D4                                           u15830 8DD0  
                                         u16470 8E64                                           u17190 3DEC  
                                         u17510 1B50                                           u19030 7DDE  
                                __CFG_DEBUG$OFF 000000                                           u22927 7CA4  
                                         u22847 7DFE                                           u22767 68EE  
                                         u17280 568C                                           u16560 5A42  
                                         u16480 8E66                                           u19040 7E22  
                                         u17185 3D94                                           u22937 7CAE  
                                         u18217 7804                                           u22857 7C04  
                                         u22777 6906                                           u17290 568E  
                                         u22947 7CE2                                           u22867 7C0E  
                                         u22787 691E                                __end_ofi2_LCDOff A448  
                                         u16660 921C                                           u16900 38E2  
                                         u15860 9584                                           u17540 1CDA  
                                         u17460 1A70                                           _LCDOn A402  
                                         u15837 8DC2                                           u22957 7CEC  
                                         u22877 7C18                                           u22797 6948  
                                         u16830 3712                                           u15870 9586  
                                         u17470 1A72                                           u19150 71B0  
                                         u22967 7CF6                                           u22887 7C4C  
                                         u18360 8300                                           u16920 3904  
                                         u16840 3714                                           u17480 1A7E  
                                         u16921 3902                                           u22977 7D10  
                                         u22897 7C56                                           u16930 3912  
                                         u19170 722A                                           u19090 29DC  
                               __end_of___lwdiv 8CE6                      __size_ofi2_TMR5_StartTimer 0004  
                                         u22987 7D36                                           u17900 9518  
                                         u16940 3916                                           _T6HLT 003F95  
                                         u22997 7D56                                           u16870 3752  
                                         u16960 3922                      _ADCC_ADTI_InterruptHandler 02F3  
                                         u16890 3780                                           u18900 6BCE  
                                         u16981 527C                                           u17950 7F80  
                                         _T2TMR 003FAA                                           _U1UIR 003DF8  
                                         u19850 69E0                                           u19930 6AE4  
                                         _T2RST 003FAF                                           _U1RXB 003DE8  
                   __size_of_SetEPAboveSetAlarm 001E                                           u19940 6AFA  
                                         u19870 6A28                                           u19950 6B42  
                                         u19880 6A42                                           u19960 6B44  
                                         u19890 6A70                                           _U1TXB 003DEA  
                                         _T4TMR 003F9E                                           _PCON0 003FF0  
                                         _T4RST 003FA3                                           i2l270 6836  
                                         i2l280 6878                                           i2l272 6842  
                                         i2l264 67FA                                           i2l282 6884  
                                         i2l274 6860                                           i2l266 6812  
                    __size_ofi2_ADCC_Initialize 006C                                           i2l284 6890  
                                         i2l276 6868                                           i2l268 682A  
                                         _T6TMR 003F92                                           i2l286 689C  
                                         i2l278 6870                                           i2l287 68AE  
                                         i2l288 68A4                                           _T6RST 003F97  
                                         i2l750 9C78                                           i2l657 8D56  
                                         i2l669 91DE                                           i2l862 9C9C  
                               ___awdiv@counter 010E                                           _OSCEN 0039DD  
                            __size_ofi2_AdcInit 0070                                    vfpfcnvrt@fmt 014A  
                                         _TMR0H 003FB7                                    vfpfcnvrt@llu 015A  
                                         _TMR1H 003FB1                                           _TMR0L 003FB6  
                                         _TMR1L 003FB0                                           _TMR5H 003F99  
                                         _TMR5L 003F98                             ??_SetVBelowMinAlarm 0001  
                                         _TRISA 003FC2                                           _TRISB 003FC3  
                                         _TRISC 003FC4                                           _TRISD 003FC5  
                                         _TRISE 003FC6                                ??_I2C2_SlaveOpen 0104  
                                         i2_abs 9464                                           _Get5V 85DE  
                                         i2_pad 701E               __size_of_TMR0_SetInterruptHandler 000E  
                                         _GetEp 98EE                                           _GetIp 4F7A  
                       ?i2_ClearIPBelowSetAlarm 0001                                           _GetTe A0D2  
                                         _GetTi A0BE                        _GetControllerBuzzerCheck A0F8  
                               _TMR4_Initialize 9892                                 _PWM6_Initialize 9FA4  
                                         _See5V 8570                             ___lmul@multiplicand 0108  
                     ?_TMR0_SetInterruptHandler 0104                               ?_BatteryFailAlarm 0001  
                       ??_ADCC_IsConversionDone 0001                                     ?i2_AnyAlarm 0001  
             __size_of_TMR6_SetInterruptHandler 000E                       ?_TMR6_SetInterruptHandler 0104  
                              __end_of_TMR0_ISR 9D34                                __end_of_TMR1_ISR 9834  
                __size_of_ClearMonitorFailAlarm 0008                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                __end_of_TMR4_ISR 9D12  
                                 __CFG_WRTD$OFF 000000                                __end_of_TMR5_ISR 9802  
                              __end_ofi2_GetBpm A378                                __end_of_TMR6_ISR 9CF0  
                  ??_ClearHighPressureAlarmHigh 0104                   __end_of_ClearMonitorFailAlarm A4D8  
                              __end_ofi2_GetTde A3F6                                __end_ofi2_GetTdi A35C  
                              __end_ofi2_See12V 7B3A            __size_of_I2C2_SlaveSetReadIntHandler 000E  
                                         _pHigh 01D3                                      i2isalpha@c 0001  
                               _gasFailureAlarm 02AF                                __end_ofi2_GetSpr A36A  
                   TMR4_Period8BitSet@periodVal 0104                                      i2isdigit@c 0001  
                            __size_ofi2_GetPmax 0026                                 ??i2_BuzzerClear 0001  
                                         _flags 01CB                                           _getch A598  
                            ??_BatteryFailAlarm 0128                                     ?_AdcGetData 010A  
                        ?_SetNoPowerSupplyAlarm 0001                                           _count 0244  
                              __end_of_AdcReady A634                              __size_of_TMR4_Stop 0004  
                         ?_ADCC_StartConversion 0001                                           _fputc 6F66  
                               __end_of_isalpha 95F8                                           _fputs 93E8  
                               __end_of_isdigit 962E                                   ??_BuzzerCheck 0183  
                                   ?_TMR4_Start 0001                                     ?_AdcHandler 0001  
                              __end_ofi2_SetSV1 99A6                                  _vAboveMaxAlarm 02A5  
                                 ??_BuzzerClear 0104                                           _isqrt 75A0  
                          _ClearIPAboveSetAlarm A082                                           _ttExt 0264  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0118  
                                         pad@fp 0116                                           atoi@s 010B  
                                         _width 01C7                                           ctoa@c 0123  
                                         _state 01DF                                           _putch A3C6  
                                   ?_TMR6_Start 0001                                           ctoa@w 0124  
                        __end_of_MonitorDisable A4B0                                           dtoa@d 0123  
                           __size_of_LCDMessage 00A2                                           dtoa@i 0143  
                                         dtoa@n 013B                                           dtoa@p 0135  
                                         dtoa@s 0139                                           dtoa@w 0137  
                                i2HigherAlarm@i 0010                                 __end_of_islower 958C  
                               __end_of_isspace 922A                            __size_of_CMP1_Enable 0008  
                       __end_of_TMR1_Initialize 8E38                                 __end_of_isupper 95C2  
                                         pclath 003FFA                                           tablat 003FF5  
                                   ?_AdcSeeData 010A                              MonitorFailAlarm@v5 0184  
                         ??_SetControlFailAlarm 0001                                __end_ofi2___lmul 8BE2  
                              __end_ofi2___wmul 99D4                                           plusw1 003FE3  
                                         plusw2 003FDB             _I2C2_SlaveDefBusColInterruptHandler 000000  
                             i2GetPressure_pa@p 0025                                           stoa@i 011B  
                                         stoa@l 0123                                           stoa@p 0121  
                                         stoa@s 0111                                           stoa@w 011D  
                        ??_ClearTdiTooLongAlarm 0001                                 __end_of_putchar 9F22  
                                    i2islower@c 0001                                 ??i2_SetAlarmSV1 005B  
                                         status 003FD8             __end_of_UART1_SetRxInterruptHandler A1D4  
                   _UART1_SetRxInterruptHandler A1C6                                      i2isspace@c 0001  
                               __end_of_sprintf 8C3A                                           xtoa@c 0146  
                                         xtoa@d 0123                                           xtoa@i 0144  
                                         xtoa@n 013C                                           xtoa@p 0138  
                                         xtoa@w 013A                                           xtoa@x 012B  
                                 ??_SetAlarmLED 0104                      __size_of_SetVAboveMaxAlarm 0008  
                              __end_of_AlarmSet 9DB6                                 __end_of_toupper 8E8A  
                                 ??_SetAlarmSV1 0183                                     ?i2_BuzzerOn 0001  
                      __end_ofi2_MonitorDisable A528                                  i2AdcGetData@id 0007  
      __end_of_UART1_DefaultFramingErrorHandler A6AE       __size_of_UART1_DefaultFramingErrorHandler 0002  
            ??_UART1_DefaultFramingErrorHandler 0001               ?_UART1_DefaultFramingErrorHandler 0001  
              _UART1_DefaultFramingErrorHandler A6AC                                 _TMR1_WriteTimer 9C86  
                            __size_ofi2___aldiv 00D4                        ?_I2C2_SlaveClearStopFlag 0001  
                            __size_ofi2___aodiv 0158                                __end_of_AnyAlarm 951C  
                            __size_ofi2___aomod 0134                              __size_ofi2___awdiv 0088  
                            __size_ofi2___awmod 0074                                      i2isupper@c 0001  
                     __end_of_SetVBelowMinAlarm A5F2                                __end_ofi2_printf 9BF6  
                ??_TMR6_DefaultInterruptHandler 0001                           __size_of_AlarmHandler 0068  
                         ?_ClearGasFailureAlarm 0001                               ?i2_AlarmUpdateLCD 0001  
                               _TMR5_Initialize 8F2E                        __size_of_DisableAlarmSV1 0008  
                               ?i2_ValueDisplay 0001                             i2_ValueDisplay$4007 00AC  
                           i2_ValueDisplay$4008 00AE                                  _MuteAlarm$4543 0186  
                              __end_ofi2_strlen 906E                             i2_ValueDisplay$7130 00A5  
                                  _toupper$5789 0110                     __size_of_SetGasFailureAlarm 0008  
                         __size_of_AlarmDisplay 009A                               ??_I2C2_Initialize 0104  
                               __initialization 6D10                        __size_of_EPBelowSetAlarm 001A  
                                  __end_of_atoi 56D2                                    __end_of_ctoa 8AC4  
                                  __end_of_main 30C8                                    __end_of_dtoa 3988  
                            ??i2_AlarmUpdateLCD 005C                                    __end_of_stoa 53EA  
                                    i2printf@ap 0059                                    __end_of_xtoa 3E88  
                                ??_LCDWriteChar 0104                             __end_of_InitDisplay A3AE  
                                    _ButtonInit 99D4                              __size_of_AlarmInit 007E  
                                __CFG_SAFEN$OFF 000000                     __end_of_ClearVBelowMinAlarm A616  
                   ??_UART1_DefaultErrorHandler 0001                                      _ButtonTask 65D0  
                        __size_ofi2_CMP1_Enable 0008                         __end_of_TdeTooLongAlarm A664  
                       __size_of_GetPressure_pa 0184                           _ControllerBuzzerCheck A3F6  
                            __size_ofi2_isalpha 0034                         __end_of_TMR2_Initialize 9E74  
                            __size_ofi2_isdigit 0034                          __size_of_BuzzerHandler 0006  
                                _GetMaxPressure 936C                     ?_INTERRUPT_InterruptManager 0001  
                        __end_ofi2_AdcDataReady 9A78                                      i2stoa@nuls 0011  
                            __size_of_ClearVars 024E                  __size_of_I2C2_SlaveIsRxBufFull 000E  
                                   i2_vfpfcnvrt 12AE                __size_of_ClearBaterryLowAlarmMed 0006  
                              __end_of_BuzzerOn 9E92                        ?i2_ClearMonitorFailAlarm 0001  
                              ??_SetMaxPressure 0003                   __end_of_I2C2_SlaveIsRxBufFull A386  
                                  ?_UART1_Write 0001                              __size_ofi2_islower 0034  
                            __size_ofi2_isspace 0044                                   i2vfpfcnvrt@ap 0049  
                             ??_EPAboveSetAlarm 0104                                   i2vfpfcnvrt@cp 0070  
                                 i2vfpfcnvrt@fp 0045                                   i2vfpfcnvrt@ll 0060  
                                   i2_xtoa$5200 0033                 __end_of_ClearNoPowerSupplyAlarm A5C2  
                                   i2_xtoa$5199 0031                              __size_ofi2_isupper 0034  
                              ??_VAboveMaxAlarm 0104                                          ??_atoi 010D  
                                        ??_ctoa 0124                                          ??_main 01C6  
                                        ??_dtoa 012B                                  __CFG_PR1WAY$ON 000000  
                      _TMR5_SetInterruptHandler A298                                    ?i2_TMR4_Stop 0001  
                                        ??_stoa 0113                 __size_of_I2C2_SlaveReleaseClock 0006  
                 i2ADCC_StartConversion@channel 0001                                          ??_xtoa 012C  
                __end_ofi2_ClearIPBelowSetAlarm A016                                   __activetblptr 000003  
                                        ?_LCDOn 0001                                      _BuzzerInit 9834  
                                    i2sprintf@f 008D                                      i2sprintf@s 0077  
                                    _BuzzerTask 29A0                      __end_of_GetPressure_mbar02 9664  
                                    _BuzzerTest 7E24            __size_of_UART1_SetTxInterruptHandler 000E  
                                   _GetTargetEp 9AEC                                       ??_LCDInit 013C  
                                   _GetTargetIp 9AC6                              __size_ofi2_sprintf 0052  
                                     ??_LCDTest 0114                            _ClearEPBelowSetAlarm A096  
                                        ?i2_abs 0013                                          ?_Get5V 011E  
               __end_of_I2C2_SlaveSetIsrHandler A26E                              __size_ofi2_toupper 0052  
                                        ?i2_pad 0013                                          ?_GetEp 0112  
                       ??_HighPressureAlarmHigh 0104                                          ?_GetIp 0112  
                                        ?_GetTe 0104                                          ?_GetTi 0104  
                                 SetTarget@pmax 001B              __size_of_VeryHighPressureAlarmHigh 0004  
                             __end_of_LCDWrite4 90BC                              __size_of_GetVolume 000E  
                                        ?_See5V 011E                                   SetTarget@vmax 0023  
                                 SetTarget@vmin 0025                                 _TMR6_Initialize 9864  
                              _UART1_Initialize 6EA6                                       ??i2_LCDOn 0001  
                                _EnableAlarmSV1 A4B0                                      i2toupper@c 0007  
                              ?_SeePressureV_pa 0112                                ??_AlarmUpdateLCD 01C0  
                              ?i2_GetAlarmState 0005                                       ??i2_GetEp 0011  
                                     ??i2_GetIp 0011                                       ??i2_GetTe 0003  
                                     ??i2_GetTi 0003                         __end_of_TMR0_StartTimer A644  
                                        _ADACCU 003EEA                       ??i2_ClearBatteryFailAlarm 0001  
                  __size_ofi2_SetCalibrateState 0126                                          _ADACQH 003EF4  
                                        _ADACQL 003EF3                                          ?_getch 0001  
                                     ??i2_See5V 001D                                          _ADCON0 003EF8  
                                        _ADCON1 003EF9                                          _ADCON2 003EFA  
                                        _ADCON3 003EFB                           ?_ClearIPAboveSetAlarm 0001  
                                     ??_AdcInit 010A                                          _CM1NCH 003EBE  
                  ?_I2C2_SlaveSetStopIntHandler 0104                                          _CM1PCH 003EBF  
                             _BuzzerTestHandler 991C                       __size_ofi2_TMR0_StopTimer 0004  
                                        ?_fputc 0106                     __size_of_SetIPAboveSetAlarm 0020  
                              ___llmod@dividend 0104                                          _ADLTHH 003EDF  
                                        _ADLTHL 003EDE                                          ?_fputs 010F  
                                        _ADRESH 003EF0                                          _ADRESL 003EEF  
                                        _ADPREH 003EF7                                          _ADPREL 003EF6  
                                        _ADSTAT 003EFC                                          ?_isqrt 0001  
                                        _ADUTHH 003EE1                                ___awdiv@dividend 010A  
                                        _ADUTHL 003EE0                                  i2___aldiv@sign 0016  
                                        _ANSELA 003A40                                          ?_putch 0001  
                                        _ANSELB 003A50                                          _ANSELC 003A60  
                                        _ANSELD 003A70                                          _ANSELE 003A80  
                                        _T0CON0 003FB8                                          _T0CON1 003FB9  
                                        _RB1I2C 003A5A                                     ?_AlarmClear 0001  
                                        _T1GATE 003FB4                                          _RB2I2C 003A5B  
                                        _T1GCON 003FB3                                          _RD0I2C 003A7A  
                               ?_MonitorDisable 0001                                          _U1CON0 003DF2  
                                        _U1CON1 003DF3                                          _U1CON2 003DF4  
                                        _RC3I2C 003A6A                                          _RD1I2C 003A7B  
                                        _RC4I2C 003A6B                             __size_of_UART1_Read 0048  
                                        _U1BRGH 003DF6                                          _U1FIFO 003DF7  
                       ?_SetCircuitFailureAlarm 0001                                          _U1BRGL 003DF5  
                            __size_of_HistAlarm 0108                                          _T5GATE 003F9C  
                              i2_GetPressure_pa 4AEC                                          _T5GCON 003F9B  
                                   SetSV1@value 0183                             i2UART1_Write@txData 0001  
                                        _RC1PPS 003A11                                    _AlarmHandler 87FC  
                                        _RB4PPS 003A0C                                          _RD0PPS 003A18  
                                        _RB5PPS 003A0D                                          _LCDOff A40C  
                       TMR1_WriteTimer@timerVal 0001                               ??_AdcReStartCycle 0007  
                                 ??_MonitorDump 0183                                   ??_MonitorInit 010A  
                                        _ODCONA 003A42                                          _ODCONB 003A52  
                                        _ODCONC 003A62                                          _ODCOND 003A72  
                                        _ODCONE 003A82                                          i2l1222 888A  
                                        i2l2116 268C                                          i2l3101 05A2  
                                        i2l2142 276A                                          i2l3120 090E  
                                        i2l3121 0944                                          i2l3105 0672  
                                __CFG_WDTCCS$SC 000000                                          i2l3106 068E  
                                        i2l3062 0042                                          i2l3162 0FB2  
                                        i2l3090 04CC                                          i2l3163 117C  
                                        i2l3155 0F20                                          i2l3520 5464  
                                        i2l2632 48FC                                          i2l3177 116E  
                                        i2l4314 5834                                          i2l3541 39B2  
                                        i2l3473 705A                                          i2l4283 9494  
                                        i2l3491 34AC                                          i2l3539 39A6  
                                        i2l3635 7F20                                          i2l4099 8CD8  
                                        i2l3493 34B8                                          i2l4393 8F20  
                                        _INLVLA 003A44                                          _INLVLB 003A54  
                                        _INLVLC 003A64                                          _INLVLD 003A74  
                                        _INLVLE 003A84                                   i2putch@txData 0002  
                                        _FVRCON 003EC1                              ?_BuzzerTestHandler 0001  
                                     ??i2_fputc 0007                                    _AlarmDisplay 7A06  
                                     ??i2_fputs 0010                                          _OSCFRQ 0039DF  
                  __end_ofi2_TMR4_Period8BitSet A434                                   vfpfcnvrt@done 0164  
                              _MonitorFailAlarm 6A90                                       ??i2_putch 0002  
                                     ??_GetPmax 0114                                i2___lmul@product 0009  
                       ??_SetBaterryLowAlarmMed 0104                      __end_of_NoPowerSupplyAlarm A658  
                     __size_of_DisplayCalibrate 0034                           _UART1_SetErrorHandler A1F0  
                                     ??_DumpI2C 0104                                  i2___aodiv@sign 0012  
                                        _Get12V 796C                                      TestAlarm@i 0189  
                               _prSlowNumStable 0240                                          i2abs@a 0013  
                 __size_of_ClearTdeTooLongAlarm 0008                                          i2_atoi 56D2  
                                        i2_ctoa 8AC4                                          i2_dtoa 3428  
                    ??_ADCC_GetConversionResult 0003            __end_of_I2C2_SlaveSetWriteIntHandler A244  
         __size_of_I2C2_SlaveSetWriteIntHandler 000E                    _I2C2_SlaveSetWriteIntHandler A236  
                                        _GetBpm A2FA                                     _HigherAlarm 7186  
               _I2C2_SlaveWrColInterruptHandler 028C                                          i2pad@i 001A  
                                        i2pad@p 0017                                          _GetTde A3D2  
                                        i2pad@w 001C                               ??_GasFailureAlarm 0104  
                                        _GetTdi A2DE                                          _See12V 78D2  
                                        i2_stoa 53EA                             __end_of_BuzzerCheck 7D94  
                               _disableAlarmSV1 00F3                                          _GetSpr A2EC  
                           __end_of_BuzzerClear A14C                                          i2_xtoa 3988  
                                i2AdcSeeData@id 0007                      __end_of_UnDisplayCalibrate A1B8  
                             __end_ofi2_AdcInit 8502                         __size_ofi2_AlarmDisplay 0098  
                     __size_of_ControlFailAlarm 0014                                ?i2_MonitorEnable 0001  
                                  ?i2_ClearVars 0001                 __size_of_I2C2_SlaveSetSlaveAddr 000C  
                            __size_of_BuzzerOff 0010                             ??_BuzzerTestHandler 005B  
                                        _SetSV1 9664                              __size_of_BuzzerSet 001A  
                                __CFG_XINST$OFF 000000                 __size_of_I2C2_SlaveSetSlaveMask 0010  
                ??_I2C2_SlaveSetWrColIntHandler 0106            __end_of_TMR1_DefaultInterruptHandler A6B6  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler A6B4  
                             i2_DisableAlarmSV1 A5E6                                    _CCPTMRS1bits 003F5F  
                                  vfprintf@cfmt 016F                                     _DisplayTask 74F8  
                           __size_ofi2_AnyAlarm 003A                                  i2___aomod@sign 0012  
                                        ___lmul 8B26                         __end_of_TMR1_StartTimer A650  
                                     ??___aldiv 0118                          __end_of_GetMaxPressure 93AA  
                             _ADCC_ThresholdISR 9CAA                                       ??___aodiv 0114  
                             __end_ofi2_GetPmax 9BAA                                   i2vfprintf@fmt 0051  
                                     ??___aomod 0114                                          ___wmul 98C0  
                              _SetVolumeControl A448                                       ??___awdiv 010E  
                           __end_of_SetAlarmLED A2C2                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0108                             __end_of_SetAlarmSV1 96CC  
                                        _alarms 0300                                       ??___lldiv 0009  
                             __end_of_TMR4_Stop A688                              ?i2_DisableAlarmSV1 0001  
                                     ??___llmod 010C                                          _ledCnt 00EA  
                                        _enable 00FE                              __size_of_SetTarget 00CA  
                                     ??___lwdiv 0005                             __size_of_AdcGetData 0066  
                                   ?i2_vfprintf 004F                                    ?i2_GetVolume 0001  
                           __size_of_AdcHandler 0134                             __size_of_TMR4_Start 0004  
                                        _prFast 023E                                ?_TMR0_Initialize 0001  
                            ?_ADCC_ThresholdISR 0001                         __end_of_PWM6_Initialize 9FBC  
                       __end_of_TMR4_Initialize 98C0                             _MonitorPressureTask 001E  
                           __size_of_TMR6_Start 0004                                          clear_0 6D82  
                                        clear_1 6D94                                 ?i2_AdcDataReady 0007  
                                        clear_2 6DA0                                          clear_3 6DAC  
                                        clear_4 6DB8                                          clear_5 6DC4  
                              ___awdiv@quotient 0110                                          _prSlow 00CE  
                               ___awmod@divisor 0106                                       ?_I2C2_Isr 0001  
                                        _numLow 024A                          ??_ClearEPAboveSetAlarm 0104  
                            __size_of_MuteAlarm 01F2                                 ___awmod@counter 0108  
                                  LCDWrite4@chr 0104                                          _printf 99FE  
                                        _numtde 00D0                                          pad@buf 0118  
                                        _numtdi 00D2                             _SetBatteryFailAlarm A4E8  
                      __size_of_IPBelowSetAlarm 001A                             __size_of_AdcSeeData 003E  
                          __size_of_LCDMessage1 0020                            __size_of_LCDMessage2 0026  
                                        ctoa@fp 0121                                          main@ch 03F9  
                            __size_of_TestAlarm 00AE                                          dtoa@fp 0121  
                   __size_of_GetDisableAlarmSV1 0006                                          _strlen 8D92  
                                        _volume 01DD                                  i2___awdiv@sign 000C  
                           _AlarmUpdateLCD$6531 01C2                             _AlarmUpdateLCD$6532 01C4  
          __end_ofi2_ClearHighPressureAlarmHigh A558           __size_ofi2_ClearHighPressureAlarmHigh 0008  
                  i2_ClearHighPressureAlarmHigh A550                                 _TMR5_StartTimer A650  
                        __end_of_EnableAlarmSV1 A4B8                                    __pdataBIGRAM 0914  
                   __end_of_SetMonitorFailAlarm A4D0                           ?_ClearEPBelowSetAlarm 0001  
                               _ADCC_Initialize 86BA                           __size_of_CMP1_Disable 0008  
                           ??i2_DisableAlarmSV1 0001                    ??i2_ClearBaterryLowAlarmHigh 0001  
          __end_of_TMR4_DefaultInterruptHandler A6B4           __size_of_TMR4_DefaultInterruptHandler 0002  
                  _TMR4_DefaultInterruptHandler A6B2                                          fputc@c 0106  
                                _PMD_Initialize 9C1A                     __size_of_SetEPBelowSetAlarm 001E  
                                  ?i2_HistAlarm 0001                                   LCDMessage@str 0108  
                             __end_ofi2___aldiv 6D10             __end_of_I2C2_SlaveSetStopIntHandler A236  
                   _I2C2_SlaveSetStopIntHandler A228                                          fputs@c 0113  
                                        fputs@i 0114                               __end_ofi2___aodiv 5C60  
                                        fputs@s 010F                                       ??_isalpha 0106  
                                     ??_isdigit 0106                               __end_ofi2___aomod 6280  
                           __size_ofi2_BuzzerOn 001C                               __end_ofi2___awdiv 804A  
                             __end_ofi2___awmod 83AE                              i2GetPressureV_pa@p 0019  
                           ??_ADCC_ThresholdISR 005B            I2C2_SlaveSetBusColIntHandler@handler 0104  
                                        isqrt@x 0001                                       ??_islower 0106  
                                  __mediumconst FC56                                       ??_isspace 0106  
                     __end_of_BuzzerTestHandler 994A                            _highPressureAlarmLow 02AE  
              _I2C2_SlaveBusColInterruptHandler 028E                                          tblptrh 003FF7  
                                     ??_isupper 0106                                          tblptrl 003FF6  
                                        tblptru 003FF8                               ??_IPAboveSetAlarm 0104  
                        ??_ADCC_StartConversion 0104                              i2GetPressure_pa@mv 0027  
                                        stoa@cp 011F                                          stoa@fp 010F  
                      __end_ofi2_EnableAlarmSV1 A530                            i2_GetDisableAlarmSV1 A5F8  
                                     ?_CMP1_ISR 0001                              i2___aomod@dividend 0001  
                       ??_ClearBatteryFailAlarm 0104                                __end_of_vfprintf 8492  
                                i2___awmod@sign 0006                  __end_of_SetCircuitFailureAlarm A5F8  
                                     ??_putchar 0111      i2TMR4_SetInterruptHandler@InterruptHandler 0001  
i2ADCC_SetADTIInterruptHandler@InterruptHandler 0001        TMR6_SetInterruptHandler@InterruptHandler 0104  
      TMR1_SetInterruptHandler@InterruptHandler 0104        TMR0_SetInterruptHandler@InterruptHandler 0104  
      TMR5_SetInterruptHandler@InterruptHandler 0104     UART1_SetTxInterruptHandler@InterruptHandler 0104  
   UART1_SetRxInterruptHandler@InterruptHandler 0104        TMR4_SetInterruptHandler@InterruptHandler 0104  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0104            __end_of_UART1_SetOverrunErrorHandler A1E2  
         __size_of_UART1_SetOverrunErrorHandler 000E                    _UART1_SetOverrunErrorHandler A1D4  
                     _UART1_DefaultErrorHandler A5D4                                       ??_sprintf 0183  
                             ?_BuzzerCMPHandler 0001                                   i2_CMP1_Enable A538  
                       __end_of_TMR1_WriteTimer 9CAA                                          xtoa@fp 0121  
                                     ??_toupper 010C                            _ClearIPBelowSetAlarm A06E  
                I2C2_SlaveSetIsrHandler@handler 0104                               __end_of_AlarmInit 8252  
               __end_of_I2C2_SlaveClearStopFlag A6A4                   __size_of_INTERRUPT_Initialize 0004  
                                 _BuzzerHandler A5DA                                    ?i2_BuzzerOff 0001  
                  __size_of_UART1_RxDataHandler 0024                                  _vBelowMinAlarm 02A6  
                          ?_MonitorPressureTask 0001                   ??_I2C2_SlaveSetStopIntHandler 0106  
                              ?_TMR1_Initialize 0001                       MonitorPressureTask@i_4881 00BF  
                     MonitorPressureTask@i_4894 00B7                       MonitorPressureTask@i_4897 00B9  
                       __end_of_TMR5_Initialize 8F7E                               __end_ofi2_isalpha 979C  
                             __end_ofi2_isdigit 97D0                              ??_BuzzerCMPHandler 005B  
                          __size_of_LCDWriteCmd 0096                               _SYSTEM_Initialize 926E  
                                    _adcVOffset 01F4                               __end_of_ClearVars 4330  
                          ?_SetBatteryFailAlarm 0001                                      __accesstop 0060  
                       __end_of__initialization 6DD6                               __end_ofi2_islower 9734  
                 __size_of_I2C2_SlaveRdCallBack 0020                            __end_of_LCDMessage12 936C  
                             __end_ofi2_isspace 926E                          _I2C2_SlaveReleaseClock A61C  
                    ??_ClearCircuitFailureAlarm 0104                               __end_ofi2_isupper 9768  
           I2C2_SlaveSetWrColIntHandler@handler 0104                              _CMP1_SetIntHandler A2A6  
                               _CMP1_Initialize 9D56                                   ??_UpdateState 00BD  
                            ?_SYSTEM_Initialize 0001                                 _TMR6_StartTimer A59E  
                     __size_ofi2_TMR5_StopTimer 0004                                   ___rparam_used 000001  
                        ??_ClearGasFailureAlarm 0104                       __end_ofi2_DisableAlarmSV1 A5EC  
                                   _InitDisplay A3A2                                   __end_of_LCDOn A40C  
                               _TMR5_WriteTimer 9C62                         __size_of_SeePressure_pa 016E  
                    __size_of_SetVBelowMinAlarm 0006                               __end_ofi2_sprintf 8EDC  
                     MonitorPressureTask@measPe 029D                       MonitorPressureTask@measPi 029E  
                                     ?i2_LCDOff 0001                     __end_of_I2C2_SlaveClearBuff A6A8  
                             __end_ofi2_toupper 8F2E                     BatteryFailAlarm@timeBelow10 027E  
                __size_ofi2_SetMonitorFailAlarm 0006                       __end_of_ADCC_ThresholdISR 9CCE  
                                 __end_ofi2_abs 94A2                             __end_of_MonitorDump 3428  
                           __end_of_MonitorInit 8420                                   __end_of_Get5V 864C  
                      ??_ControllerTimerHandler 005B                                   __end_ofi2_pad 70D4  
                             __end_of_GetVolume A2DE                   __end_ofi2_SetMonitorFailAlarm A5E6  
                                  ?i2_MuteAlarm 0001                                   __end_of_GetEp 991C  
                                 __end_of_GetIp 50F6                                   __end_of_GetTe A0E6  
                                 __end_of_GetTi A0D2                     BatteryFailAlarm@timeBattery 0280  
                                 __end_of_See5V 85DE                                  __pcstackCOMRAM 0001  
                              ??_ControllerInit 0106                 __end_ofi2_ClearMonitorFailAlarm A550  
                           ?_CMP1_SetIntHandler 0104                                    ??_LCDMessage 010A  
           __size_ofi2_ClearBaterryLowAlarmHigh 0006                                    __pidataBANK1 A634  
                                  __pidataBANK2 9ECE                             ??_SYSTEM_Initialize 0108  
                   __end_of_I2C2_SlaveEnableIrq A000                                 ?_GetMaxPressure 0112  
                        ?_ControllerBuzzerCheck 0001                                       ?_TMR0_ISR 0001  
                                  _CMP1_Disable A4E0                     __end_of_I2C2_SlaveGetRxData A62E  
                                     ?_TMR1_ISR 0001                             _baterryLowAlarmHigh 02A9  
                 ?_TMR1_DefaultInterruptHandler 0001                                     ?_ButtonInit 0001  
                                     ?_TMR4_ISR 0001                                       ?_TMR5_ISR 0001  
                                     ?i2_GetBpm 0001                                   __end_of_getch A59E  
                                     ?_TMR6_ISR 0001                                     ?_ButtonTask 0001  
                                     ?i2_GetTde 0001                                       ?i2_GetTdi 0001  
                                     ?i2_See12V 001B                                       ?i2_GetSpr 0001  
                            ReceiveHandler@data 0004                                   __end_of_fputc 701E  
                                 __end_of_fputs 9426                                ?_TdeTooLongAlarm 0001  
                                 __end_of_isqrt 7646                             _AlarmCheckTask$4558 02FB  
                           _AlarmCheckTask$6533 02F7                             _AlarmCheckTask$6537 02F9  
                                     ?_AdcReady 0001                               __end_of_HistAlarm 65D0  
                                 __end_of_putch A3D2                                       ?i2_SetSV1 0001  
                                   i2printf@fmt 0077                                ?_TMR2_Initialize 0001  
                       __end_of_TMR6_Initialize 9892                               ??_DisableAlarmSV1 0104  
                           __size_of_AlarmClear 0020                                      ??_I2C2_Isr 0060  
                    ?_ClearHighPressureAlarmLow 0001                          __end_of_PMD_Initialize 9C3E  
                      __size_of_GetPressureV_pa 00A4                         __size_ofi2_CMP1_Disable 0008  
                             ??_EPBelowSetAlarm 0104                                       ?i2___lmul 0001  
                                     ?i2___wmul 0001                                     ?_BuzzerInit 0001  
                                       ??_LCDOn 0104                                     ?_BuzzerTask 0001  
                                   SetTarget@br 0021                                     SetTarget@ep 001F  
                            SetVolumeControl@vc 0001                                     SetTarget@ip 001D  
                                   ?_BuzzerTest 0001                                   ??_StopHandler 005E  
                               ?_EnableAlarmSV1 0001                                ??_VBelowMinAlarm 0104  
                         __end_ofi2_GetTargetEp 9B84                           __end_ofi2_GetTargetIp 9B5E  
                        _I2C2_SlaveSetSlaveAddr A3AE                                         ??i2_abs 0015  
                              _alarmMaxPressure 0250                                   _volumeControl 02A1  
                                       ??_Get5V 0120                                         ??i2_pad 0019  
                                     ?_AlarmSet 0001                                         ??_GetEp 0114  
                        _I2C2_SlaveSetSlaveMask A12C                                         ??_GetIp 0114  
                                       ??_GetTe 0106                                         ??_GetTi 0106  
                               _TdiTooLongAlarm A664                                         ??_See5V 0120  
            __end_of_ClearHighPressureAlarmHigh A488                   ?i2_ClearHighPressureAlarmHigh 0001  
                    _ClearHighPressureAlarmHigh A480                       _UART1_FramingErrorHandler 02E9  
                                     ?_AnyAlarm 0001               __size_of_ClearBaterryLowAlarmHigh 0006  
                 ?_TMR4_DefaultInterruptHandler 0001                               __end_of_BuzzerOff A15C  
                             __end_of_BuzzerSet 9FA4                          ??_ClearIPAboveSetAlarm 0104  
                     ?_ClearBaterryLowAlarmHigh 0001                           ?i2_GetDisableAlarmSV1 0001  
                                i2vfpfcnvrt@fmt 0047                                       ?i2_printf 0077  
                            _BaterryLowAlarmMed A66C                                  i2vfpfcnvrt@llu 0068  
                   ADCC_StartConversion@channel 0104                            ??_CMP1_SetIntHandler 0106  
                                    ??_CMP1_ISR 005B                                  ?i2_CMP1_Enable 0001  
                                     ?i2_strlen 0001                        ??_I2C2_SlaveStopCallBack 0060  
                                       ??_getch 0105                                ?_TMR0_StartTimer 0001  
                                 ?i2_AdcGetData 0007                                         ??_fputc 010A  
                     __end_of_SYSTEM_Initialize 92B0                                         ??_fputs 0113  
                         ?_ClearIPBelowSetAlarm 0001                                         ??_isqrt 0003  
                                ?_BuzzerHandler 0001                                   ?i2_TMR4_Start 0001  
                               __CFG_IVT1WAY$ON 000000                     __size_of_SetIPBelowSetAlarm 0020  
      __end_ofi2_ClearVeryHighPressureAlarmHigh A548       __size_ofi2_ClearVeryHighPressureAlarmHigh 0008  
        __end_of_ClearVeryHighPressureAlarmHigh A480         __size_of_ClearVeryHighPressureAlarmHigh 0008  
            ??i2_ClearVeryHighPressureAlarmHigh 0001               ?i2_ClearVeryHighPressureAlarmHigh 0001  
              i2_ClearVeryHighPressureAlarmHigh A540                  _ClearVeryHighPressureAlarmHigh A478  
                                       ??_putch 0105                           _I2C2_InterruptHandler 00EE  
                                   _BuzzerCheck 7CFE                           ??_MonitorPressureTask 005B  
                __size_of_ClearControlFailAlarm 0008                                     _BuzzerClear A13C  
                          __end_of_LCDWriteChar 7CFE                               __end_of_SetTarget 6EA6  
                 __end_of_ClearControlFailAlarm A498                                      __pbssBANK0 00C8  
                                    __pbssBANK1 01C7                                      __pbssBANK2 0200  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                       ?_LCDOff 0001                    ControllerTimerHandler@errors 022E  
                 ?_UART1_SetOverrunErrorHandler 0104                    ?_I2C2_SlaveSetAddrIntHandler 0104  
                            __end_of_LCDMessage 7832                                     i2sprintf@ap 008B  
                         ??_SetBatteryFailAlarm 0104                          ?_UART1_SetErrorHandler 0104  
                                    _alarmCheck 02A3                                   ?i2_AdcSeeData 0007  
                           __size_ofi2_vfprintf 006A                      __end_of_SetTdiTooLongAlarm A508  
                           ?_BaterryLowAlarmMed 0001                                 __CFG_MVECEN$OFF 000000  
                             __end_of_MuteAlarm 476E                                      _alarmState 00FA  
                                       ?_Get12V 011E                               __end_of_TestAlarm 744A  
                                     ?_BuzzerOn 0001                         __size_of_ReceiveHandler 004A  
                                       ?i2_atoi 0008                                         ?i2_ctoa 001E  
                                       ?i2_dtoa 001E                           _TMR4_InterruptHandler 02ED  
                                   _SetAlarmLED A2B4                                         ?_GetBpm 0104  
                            i2SetAlarmSV1@value 005B                                     _SetAlarmSV1 9698  
              __size_of_ClearNoPowerSupplyAlarm 0006                                         ?_GetTde 0104  
                                       ?_GetTdi 0104                                         ?_See12V 011E  
                                       ?i2_stoa 000C                           __end_ofi2_HigherAlarm 739C  
                                       ?_GetSpr 0104                          __size_of_ClearAllAlarm 004E  
                                       ?i2_xtoa 001E                                         IVTBASEH 003FD6  
                                    _batterySV1 01FA                                         IVTBASEL 003FD5  
                                       IVTBASEU 003FD7                                   ?_ValueDisplay 0001  
                                    ??i2_LCDOff 0001                              i2AlarmDisplay@type 00BD  
                         __end_of_DisplayEnable A18C                          __size_of_ClearAlarmLED 000A  
                                       ?_SetSV1 0001                              GetMaxPressure@temp 0114  
                              ??_FVR_Initialize 0104                                SetMaxPressure@pr 0001  
              __size_of_I2C2_SlaveSetIsrHandler 000E                     __end_of_CircuitFailureAlarm A674  
              __end_of_TMR0_SetInterruptHandler A20C                         __size_of_TMR0_StopTimer 0004  
                                       ?___lmul 0104                              _SetTdeTooLongAlarm A508  
                   __size_of_TMR4_Period8BitSet 000C                                    ??_UART1_Read 0104  
                                       _I2C2CNT 003D56                                         ?___wmul 0104  
                                       _I2C2PIR 003D63                                ?_TMR1_StartTimer 0001  
                                    ??_TMR0_ISR 0060                                         _I2C2RXB 003D54  
                                       _I2C2TXB 003D55                                      ??_TMR1_ISR 0060  
                       __end_of_TMR5_StartTimer A654                                 __CFG_PPS1WAY$ON 000000  
              __end_of_TMR6_SetInterruptHandler A228                             __end_of_UpdateState 40E2  
                                _GetPressure_pa 4C72              __size_ofi2_ClearBaterryLowAlarmMed 0006  
                                i2_toupper$5789 000D                                      ??_TMR4_ISR 005D  
                       __end_of_ADCC_Initialize 8726                                      ??_TMR5_ISR 005D  
                                    ??i2_GetBpm 0003                                      ??_TMR6_ISR 005B  
                                    ??i2_GetTde 0003                                      ??i2_GetTdi 0003  
                                    ??i2_See12V 001D                                         _I2C2_on 02B4  
                                    ??i2_GetSpr 0003                      ??_GetControllerBuzzerCheck 0001  
                    ?i2_ClearBaterryLowAlarmMed 0001                         _ClearBaterryLowAlarmMed A5C2  
                                       _CM1CON0 003EBC                                         _CM1CON1 003EBD  
                  ?_I2C2_SlaveSetReadIntHandler 0104                                      ??_AdcReady 0001  
                                    ??i2_SetSV1 005B                                  ___lmul@product 010C  
                 __size_of_I2C2_SlaveSetCounter 000A         __end_of_I2C2_SlaveDefRdInterruptHandler A466  
      __size_of_I2C2_SlaveDefRdInterruptHandler 000A               ??_I2C2_SlaveDefRdInterruptHandler 0001  
              ?_I2C2_SlaveDefRdInterruptHandler 0001                 _I2C2_SlaveDefRdInterruptHandler A45C  
          __end_of_ADCC_SetADTIInterruptHandler A21A           __size_of_ADCC_SetADTIInterruptHandler 000E  
              ??i2_ADCC_SetADTIInterruptHandler 0003                 ?i2_ADCC_SetADTIInterruptHandler 0001  
                  _ADCC_SetADTIInterruptHandler A20C                                ?_PWM6_Initialize 0001  
                              ?_TMR4_Initialize 0001                 _I2C2_SlaveDefWrInterruptHandler 000000  
            I2C2_SlaveSetAddrIntHandler@handler 0104                            ??_BaterryLowAlarmMed 0104  
                                       _ADSTPTH 003EE5                                         _ADSTPTL 003EE4  
                                       ?_printf 0171                                 ?_PMD_Initialize 0001  
                        ??_ClearEPBelowSetAlarm 0104                               _UART1_Receive_ISR 7832  
             __end_of_ClearHighPressureAlarmLow A61C                                         ?_strlen 0104  
                                    ??i2___lmul 0009                             ?_SetTdeTooLongAlarm 0001  
                          i2_TMR4_Period8BitSet A42A                               i2_GetPressureV_pa 7646  
                                       Get5V@mv 0120                                      ??i2___wmul 0005  
                  __size_of_ClearVAboveMaxAlarm 0008                                         _U1ERRIE 003DFA  
                                       _U1ERRIR 003DF9                    ??i2_TMR4_SetInterruptHandler 0003  
                                     _I2C2STAT0 003D61                                       _I2C2STAT1 003D62  
                                       _LCDInit 68C8                                         i2l20021 281E  
                                       i2l20013 2810                                         i2l20111 28AA  
                                       i2l20007 2808                             __CFG_PWRTS$PWRT_OFF 000000  
                                       i2l20105 28A2                                         i2l20041 283C  
                                       i2l20203 4894                                         i2l20131 28C8  
                                       i2l20035 2834                                         i2l20027 2826  
                                       i2l21011 8824                                         i2l20141 296E  
                                       i2l20125 28C0                                         i2l21021 884E  
                                       i2l20207 48C8                                         i2l20119 28B8  
                                       i2l20063 2860                                         i2l20055 2852  
                                       i2l21015 8832                        ?i2_ClearControlFailAlarm 0001  
                                       i2l20241 66EA                                         i2l20049 284A  
                                       i2l20145 2974                                         i2l21009 881A  
                                       i2l21043 6042                                         i2l21203 021E  
                                       i2l20139 28D0                                         i2l20091 288C  
                                       i2l20083 287E                                         i2l21301 045A  
                                       i2l21213 0254                                         i2l20229 4948  
                                       i2l20077 2876                                         i2l20069 2868  
                                       i2l21063 6134                                         i2l21055 610E  
                                       i2l21311 048A                                         i2l20271 6778  
                                       i2l20263 674E                                         i2l20255 6724  
                                       i2l20191 47F8                                         i2l13119 9C5E  
                                       i2l13081 75D8                                         i2l21401 0800  
                                       i2l21305 046A                                         i2l21313 04AE  
                                       i2l21209 023C                                         i2l20097 2894  
                                       i2l21411 0880                                         i2l21331 051C  
                                       i2l21323 04EC                                         i2l21163 0044  
                                       i2l20259 673C                                         i2l20195 482C  
                                       i2l20179 479C                                         i2l13085 761E  
                                       i2l13077 75BE                                         i2l21413 088A  
                                       i2l21325 04F2                                         i2l21261 02DA  
                                       i2l21181 00BE                                         i2l21173 00A0  
                                       i2l13079 75CA                                         i2l21503 0C54  
                                       i2l21327 04FC                                         i2l21255 02C0  
                                       i2l21167 005C                                         i2l20279 678C  
                                       i2l20199 4860                                         i2l21521 0CC0  
                                       i2l21345 05AE                                         i2l21337 0546  
                                       i2l21177 00A6                                         i2l21363 06D0  
                                       i2l21339 0570                                         i2l21283 039E  
                                       i2l21267 0316                                         i2l20299 67CE  
                                       i2l20651 6610                                         i2l20731 9938  
                                       i2l20741 9BC4                                         i2l21621 111A  
                                       i2l21613 10D4                                         i2l21605 1078  
                                       i2l21533 0D68                                         i2l21541 0DDA  
                                       i2l21445 0A64                                         i2l21437 09FE  
                                       i2l21429 0996                                         i2l21381 0730  
                                       i2l21293 03CE                                         i2l20733 9944  
                          __size_of_UART1_Write 0056                                         i2l20743 9BCA  
                                       i2l21623 1122                                         i2l21615 10DC  
                                       i2l21287 03AE                                         i2l13721 7EDE  
                                       i2l21641 1208                                         i2l21609 10AA  
                                       i2l21561 0EBC                                         i2l21545 0E12  
                                       i2l21473 0AF8                                         i2l21481 0B38  
                                       i2l21385 0756                                         i2l21377 0712  
                                       i2l21369 06EE                                         i2l20657 6622  
                                       i2l21803 88A2                                         i2l13731 7F12  
                                       i2l21539 0DD0                                         i2l21475 0AFC  
                                       i2l21459 0AAC                                         i2l21483 0B40  
                                       i2l21395 07BA                                         i2l20683 6684  
                                       i2l20667 6640                                         i2l17101 9264  
                                       i2l17021 5B82                                         i2l13741 8CA6  
                                       i2l21661 126C                                         i2l21653 1244  
                                       i2l21637 11C2                                         i2l21629 1156  
                                       i2l21565 0EEE                                         i2l21389 0776  
                                       i2l17023 5B96                                         i2l17015 5B5C  
                                       i2l13719 7ED2                                         i2l13743 8CAE  
                                       i2l21655 1248                                         i2l21647 1228  
                                       i2l21583 0F9A                                         i2l21575 0F5A  
                                       i2l21479 0B32                                         i2l17041 5C2E  
                                       i2l17033 5BF2                                         i2l17009 5B34  
                                       i2l13753 8CCE                                         i2l21665 128A  
                                       i2l21649 122C                                         i2l21577 0F66  
                                       i2l21569 0F14                                         i2l21489 0BC6  
                                       i2l20697 66C2                                         i2l21659 1268  
                                       i2l21667 1290                                         i2l20699 66C8  
                                       i2l21683 807E                                         i2l17037 5C08  
                                       i2l17061 61B6                                         i2l17053 6178  
                                       i2l17213 36A4                                         i2l18101 8FE2  
                                       i2l21669 12A0                                         i2l21589 0FC0  
                                       i2l21693 80CA                                         i2l21685 8084  
                                       i2l17063 61CA                                         i2l18111 9000  
                                       i2l21791 8884                                         i2l21687 808C  
                                       i2l17145 8ADC                                         i2l17073 6228  
                                       i2l17057 619C                                         i2l17209 368A  
                                       i2l17161 348E                                         i2l17225 5418  
                                       i2l17321 3BD4                                         i2l17305 3B5A  
                                       i2l17147 8AE8                                         i2l17243 54BE  
                                       i2l17235 5484                                         i2l18211 6C70  
                                       i2l21787 8876                                         i2l15723 91D6  
                                       i2l17077 624E                                         i2l17069 6212  
                                       i2l17253 5524                                         i2l18117 9014  
                                       i2l18205 6C58                                         i2l19101 3F96  
                                       _LCDTest 7D94                                         i2l17343 574C  
                                       i2l17327 56E4                                         i2l17175 34D6  
                                       i2l17239 54A0                                         i2l19103 3F9A  
                                       i2l15743 78CC                              ?_UART1_Receive_ISR 0001  
                                       i2l17353 57C6                                         i2l17345 5754  
                                       i2l17337 573A                                         i2l17329 56E8  
                                       i2l17257 5540                                         i2l17249 5508  
                                       i2l18161 5240                                         i2l18153 5160  
                                       i2l18217 6C92                                         i2l18233 6CE0  
                                       i2l17347 575A                                         i2l17179 34E6  
                                       i2l17283 3A2C                                         i2l17275 3A0A  
                                       i2l18219 6C9E                                         i2l19123 3FDE  
                                       i2l19115 3FBE                                         i2l17349 5788  
                                       i2l17189 3622                                         i2l17269 39CA  
                                       i2l17613 17E0                                         i2l17541 131C  
                                       i2l17533 1310                                         i2l17525 1304  
                                       i2l18157 51D6                                         i2l18253 835A  
                                       i2l18237 6CF6                                         i2l18229 6CD2  
                                       i2l19133 3FFE                                         i2l19117 3FC2  
                                       i2l17623 1838                                         i2l17543 1320  
                                       i2l17551 138A                                         i2l19135 4002  
                                       i2l19127 3FEC                                         i2l19063 3EFA  
                                       i2l17297 3AC2                                         i2l17545 1334  
                                       i2l17537 1316                                         i2l17529 130A  
                                       i2l19161 9118                                         i2l18273 83A0  
                                       i2l18265 8388                                         i2l18257 8368  
                                       i2l18249 834E                                         i2l18425 1EB2  
                                       i2l18521 43A4                                         i2l18193 8BA8  
                                       i2l19153 40D2                                         i2l19129 3FF0  
                                       i2l17619 182E                                         i2l17563 1418  
                                       i2l18259 8370                                         i2l18451 20B8  
                                       i2l18419 1E92                                         i2l19083 3F48  
                                       i2l19075 3F30                                         i2l16925 7462  
                                       i2l16941 94C8                                         i2l17581 1532  
                                       i2l17565 1442                                         i2l17549 133E  
                                       i2l17629 1854                                         i2l18269 8392  
                                       i2l18509 4354                                         i2l18189 8B94  
                                       i2l17591 1626                                         i2l17567 1454  
                                       i2l19167 9142                                         i2l17911 7FE6  
                                       i2l18471 213A                                         i2l19079 3F42  
                                       i2l19255 5E28                                         i2l16881 8D3E  
                                       i2l16937 94AC                                         i2l16945 902C  
                                       i2l19169 9146                                         i2l17905 7FD6  
                                       i2l18449 20B0                                         i2l18553 4B6C  
                                       i2l18545 4B1C                                         i2l16947 9030  
                                       i2l18475 214C                                         i2l18563 4C64  
                                       i2l19099 3F88                                         i2l16981 7052  
                                       i2l17917 7FFC                                         i2l17933 802E  
                                       i2l18469 2132                                         i2l18581 76C6  
                                       i2l18573 7676                                         i2l19269 5ECA  
                                       i2l19285 996A                                         i2l16895 8D84  
                                       i2l16991 70B6                                         i2l16983 7064  
                                       i2l17599 16BE                                         i2l17919 8004  
                                       i2l16897 8D8C                                         i2l16977 7040  
                                       i2l17881 9542                                         i2l17937 803C  
                                       i2l17929 8024                                         i2l18905 6398  
                                       i2l18921 9998                                         i2l16987 7080  
                                       i2l17875 9524                                         i2l18587 76DE  
                                       i2l18907 639C                                         i2l17893 87AA  
                                       i2l18853 7B6C                                         i2l17895 87D6  
                                       i2l18791 6E68                                         i2l18855 7B74  
                                       i2l19911 2694                                         i2l18849 7B56  
                                       i2l19913 269A                                         i2l18883 7322  
                                       i2l18789 6E5E                                         i2l19853 8D22  
                                       i2l18877 72F6                                         i2l19941 2746  
                                       i2l19925 26AA                                         i2l19917 26A2  
                                       i2l18887 737E                                         i2l19935 273E  
                                       i2l19927 2730                                         i2l18897 6298  
                                       i2l19873 2638                                         i2l19955 275C  
                                       i2l19891 2676                                         i2l19883 2660  
                                       i2l19875 263C                                         i2l19949 2754  
                                       i2l19869 2620                                         i2l19877 264A  
                                       i2l19983 2782                                         i2l19975 277A  
                                       i2l19887 266C                                         i2l19993 27F2  
                                       i2l19985 27E4                                         i2l19969 2772  
                                       i2l19897 267E                                         i2l19889 2670  
                                       i2l19999 27FA                                         _U1RXPPS 003AE5  
                       ??_SetNoPowerSupplyAlarm 0104                                      ??_AlarmSet 0104  
                            ?i2_GetPressureV_pa 000F                 ??_I2C2_SlaveSetBusColIntHandler 0106  
                          __size_ofi2_TMR4_Stop 0004                                    ??i2_AnyAlarm 0001  
            I2C2_SlaveSetReadIntHandler@handler 0104                                      ??_AnyAlarm 0104  
                    __size_of_BuzzerTestHandler 002E                                         i2_LCDOn A434  
                                     _I2C2_Read A622                                         _OSCCON1 0039D9  
                                       _OSCCON3 0039DB                                       _I2C2_Open 88CC  
                            __size_of_vfpfcnvrt 05D2             __end_of_I2C2_SlaveSetAddrIntHandler A28A  
                   _I2C2_SlaveSetAddrIntHandler A27C                                      ??i2_printf 0057  
                                       _OSCTUNE 0039DE                                         _PWM6DCH 003F69  
                                       _PWM6DCL 003F68                                         _PWM6CON 003F6A  
                             ??_IPBelowSetAlarm 0104                                  ??i2_AdcGetData 0009  
                      ??_SetBaterryLowAlarmHigh 0104                    __size_of_BaterryLowAlarmHigh 0004  
                                       _SLRCONA 003A43                                         _SLRCONB 003A53  
                                       _SLRCONC 003A63                                         _SLRCOND 003A73  
                                       _SLRCONE 003A83                                      ??i2_strlen 0003  
                                       i2_GetEp 9A78                                         i2_GetIp 50F6  
                                       i2_GetTe A3DE                                    ??_AdcGetData 010C  
                                       i2_GetTi A340                  __size_of_ADCC_IsConversionDone 000E  
                                ??i2_TMR4_Start 0001                                         i2_See5V 864C  
                              i2BuzzerOn@period 0001                         __end_of_CMP1_Initialize 9D76  
                              i2_TMR0_StopTimer A698                                         See5V@mv 0120  
                                       _AdcInit 8252                   __end_of_ADCC_IsConversionDone A3A2  
                                  ??_AdcHandler 005B                                    ??_TMR4_Start 0104  
                       __end_of_TMR6_StartTimer A5A4                                    _enableAlarms 00F4  
                                  ??_TMR6_Start 0104                             __end_of_StopHandler 8D3C  
                           ??_UART1_Receive_ISR 0001                                     TestAlarm@id 0183  
                              ?_TMR1_WriteTimer 0001                         __end_of_TMR5_WriteTimer 9C86  
                               _I2C2_Initialize A0E6              I2C2_SlaveSetStopIntHandler@handler 0104  
                                ??i2_AdcSeeData 0009                             ??i2_GetPressureV_pa 0011  
                           __size_of_ButtonInit 002A                                    ??_AdcSeeData 010C  
                           __size_of_ButtonTask 0104                              __end_of_UART1_Read 919C  
                               __size_of_LCDOff 000A                                         i2_fputc 744A  
                                       i2_fputs 94A2                                     _MonitorDump 30C8  
                                   _MonitorInit 83AE                                ?_TMR5_Initialize 0001  
                              ??i2_ValueDisplay 0057                                         i2atoi@n 0015  
                                       i2pad@fp 0013                                         i2atoi@s 0008  
                                       i2ctoa@c 0020                                         i2_putch A466  
                                       _GetPmax 9B12                                         i2ctoa@w 0021  
                              _DisplayCalibrate 96CC                                         i2dtoa@d 0020  
                                       i2dtoa@i 0040                                         i2dtoa@n 0038  
                                       i2dtoa@p 0032                                         i2dtoa@s 0036  
                                       i2dtoa@w 0034                                      _controlSV1 01F9  
                          ??_SetTdeTooLongAlarm 0001                   ??_I2C2_SlaveSetAddrIntHandler 0106  
                                       _DumpI2C A6A8                         _GetPressure_mbar02$7129 002D  
                      ??i2_ClearEPAboveSetAlarm 0001                                    ??i2_BuzzerOn 0001  
                                    ??_BuzzerOn 0104               __size_of_SetHighPressureAlarmHigh 0006  
                                ??_ValueDisplay 018D                          __size_ofi2_UART1_Write 0056  
                               __size_of_Get12V 009A                               i2___aldiv@divisor 0011  
                                i2_AlarmDisplay 7B3A                       ?_SetHighPressureAlarmHigh 0001  
                    __size_ofi2_DisableAlarmSV1 0006                          SetCalibrateState@calib 0183  
                               __size_ofi2_atoi 0170                                 __size_ofi2_ctoa 0062  
                               __size_ofi2_dtoa 02B2                               ?i2_MonitorDisable 0001  
                                       i2stoa@i 0018                                         i2stoa@l 0020  
                                       i2stoa@p 001E                                         i2stoa@s 000E  
                                       i2stoa@w 001A                               i2___aldiv@counter 0015  
                              _ControlFailAlarm A0AA                                 __size_of_GetBpm 000E  
                     __size_of_BatteryFailAlarm 00E4                             __size_of_BuzzerInit 0030  
                               _EPAboveSetAlarm 9F56                                 __size_of_GetTde 000C  
                               __size_of_GetTdi 000E                                      _histButton 00FC  
                               __size_of_See12V 009A                                 __size_ofi2_stoa 0178  
                               _epAboveSetAlarm 00E6                             __size_of_BuzzerTask 03A8  
                               __size_of_GetSpr 000E                                       Get12V@v12 0126  
                               __size_ofi2_xtoa 0282                             __size_of_BuzzerTest 008C  
                                       i2xtoa@c 0043                                         i2xtoa@d 0020  
                                       i2xtoa@i 0041                                         i2xtoa@n 0039  
                                       i2xtoa@p 0035                                         i2xtoa@w 0037  
                                       i2xtoa@x 0028                                         __Hparam 0000  
                                     Get12V@adc 0124                      __size_of_ADCC_ThresholdISR 0024  
           __end_of_I2C2_SlaveSetReadIntHandler A260                     _I2C2_SlaveSetReadIntHandler A252  
                        __size_of_GetAlarmState 0050                                         __Lparam 0000  
                      __end_of_UART1_Initialize 6F66                          __end_of_GetPressure_pa 4DF6  
                               __size_of_SetSV1 0034                      ??_TMR5_SetInterruptHandler 0106  
                            ??i2_MonitorDisable 0001                      __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
               __size_of_ControllerTimerHandler 0086             __size_ofi2_TMR4_SetInterruptHandler 000E  
                       __size_of_DisplayDisable 0012                             i2_SetCalibrateState 6280  
                                       ___aldiv 6B68                                         ___aodiv 59B0  
                          __size_ofi2_ClearVars 024C                                         ___aomod 5EE4  
                      ??i2_ADCC_StartConversion 0001                              __end_ofi2_AnyAlarm 9556  
                                       ___awdiv 7F3A                                 __size_of___lmul 005E  
                                       ___awmod 82C6                                         ___lldiv 7EB0  
                               __size_of___wmul 002E                                         ___llmod 8502  
                              i2AdcDataReady@id 0007                                         ___lwdiv 8C90  
                     __end_of_UART1_Receive_ISR 78D2                                       ?_vfprintf 0169  
                                 ?_AdcDataReady 010A                                  i2vfprintf@cfmt 0055  
                  _I2C2_SlaveRdInterruptHandler 0296                    _I2C2_SlaveWrInterruptHandler 0294  
                      __end_ofi2_GetPressure_pa 4C72                       __end_ofi2_GetPressureV_pa 76EC  
                            __end_of_AdcGetData 8998                         __end_of_TdiTooLongAlarm A668  
                    __end_of_SetEPAboveSetAlarm 9ECE                                    ?i2_vfpfcnvrt 0045  
             __end_ofi2_ClearBaterryLowAlarmMed A60A                                         _hiLimit 01CF  
                                       __pcinit 6D10                                         _pLowAcc 021A  
                            __end_of_AdcHandler 614C                              __end_of_TMR4_Start A684  
                               i2AlarmDisplay@t 0057                                ?_TMR6_Initialize 0001  
                       MonitorPressureTask@adcv 00AD                                         __ramtop 1000  
                       MonitorPressureTask@cnt2 0234                         MonitorPressureTask@ecnt 0236  
                   __size_of_UART1_Transmit_ISR 0048                              __end_of_TMR6_Start A64C  
                       MonitorPressureTask@down 029C                   __size_ofi2_UnDisplayCalibrate 000E  
                      __end_of_MonitorFailAlarm 6B68                                         _cntByte 00CC  
                         ?i2_TMR4_Period8BitSet 0001                   ??_I2C2_SlaveSetReadIntHandler 0106  
              __size_of_I2C2_SlaveClearStopFlag 0004                                         __ptext0 2D48  
                                       __ptext1 A598                                         __ptext2 9154  
                                       __ptext3 8502                                         __ptext4 A19C  
                                       __ptext5 739C                                         __ptext6 9F08  
                                       __ptext7 9664                         MonitorPressureTask@tmp2 00B1  
                                       __ptext8 63A6                                         __ptext9 A1AA  
                       MonitorPressureTask@next 00B5              __end_ofi2_ClearBaterryLowAlarmHigh A610  
                    i2_ClearBaterryLowAlarmHigh A60A                         MonitorPressureTask@temp 00BB  
                               __size_of_printf 002A                            __size_ofi2_GetVolume 000E  
                                       _ledType 00FB                                   MuteAlarm@high 0187  
                ??_TMR1_DefaultInterruptHandler 0001                                         _loLimit 01CD  
                 ?_ADCC_SetADTIInterruptHandler 0104                         __size_of_TMR5_StopTimer 0004  
                            __end_of_AdcSeeData 932E                                 __CFG_WRTAPP$OFF 000000  
                 __size_of_HighPressureAlarmLow 0082                                 __size_of_strlen 0054  
                               _AdcReStartCycle 89FE                                       _T1CONbits 003FB2  
                                  ?_GetTargetEp 0112                                    ?_GetTargetIp 0112  
                                       _histSec 01E9                                   _ClearAllAlarm 90BC  
                         _OSCILLATOR_Initialize 9FBC                                    __size_of_abs 003E  
                                  __size_of_pad 00B2                          __size_of_MonitorEnable 0008  
                                       _isalpha 95C2                                         _isdigit 95F8  
                          MonitorPressureTask@i 00BD                       __size_ofi2_AlarmUpdateLCD 0142  
                        ??i2_GetDisableAlarmSV1 0001                                   _ClearAlarmLED A420  
                              ___awmod@dividend 0104                                ??_MonitorDisable 0104  
             __size_of_TMR1_SetInterruptHandler 000E                                     _I2C2ERRbits 003D60  
                      ??i2_ClearGasFailureAlarm 0001                                ___aldiv@dividend 0110  
                                     _T4CONbits 003FA0                                         _ttAlarm 025C  
                               ??i2_CMP1_Enable 0001                                         _islower 9556  
                            __end_ofi2_BuzzerOn 9F08                        ??_PIN_MANAGER_Initialize 0104  
             __size_of_TMR4_SetInterruptHandler 000E                                         _isspace 91E4  
                     ?_TMR1_SetInterruptHandler 0104                                         _numHigh 024C  
                               __CFG_WRTSAF$OFF 000000                               _ValueDisplay$4007 01A6  
                             _ValueDisplay$4008 01A8                                      ?_I2C2_Read 0001  
                             _ValueDisplay$6530 019F                                       _T5CONbits 003F9A  
                                    ?_I2C2_Open 0001                       ?_TMR4_SetInterruptHandler 0104  
                                       _isupper 958C                     __end_of_SetControlFailAlarm A538  
                                   _I2C2PIEbits 003D64                                   ??_CMP1_Enable 0104  
                               ??_BuzzerHandler 005D                                         _muteSec 01EB  
                                     _T6CONbits 003F94                          ??_ClearIPBelowSetAlarm 0104  
                          __size_ofi2_HistAlarm 0100                  __size_of_HighPressureAlarmHigh 0004  
                             ??_GetPressureV_pa 0114                                 _GasFailureAlarm A678  
                          ?i2_SetCalibrateState 0001                                     _I2C2PIRbits 003D63  
                                       atoi@neg 0111                   __end_of_HighPressureAlarmHigh A678  
                         __size_of_LCDMessage12 003E                                         _putchar 9F08  
                                       main@cnt 0226                      __size_of_SYSTEM_Initialize 0042  
                      __end_of_SetVolumeControl A452                                         _sprintf 8BE2  
                           DisplayCalibrate@off 0095                 __size_of_I2C2_SlaveStopCallBack 0020  
                           DisplayCalibrate@prv 0097                                  LCDMessage1@str 0110  
                                LCDMessage2@str 0110                                         _toupper 8E38  
                               GetPressure_pa@p 0128                                    ??_AlarmClear 0104  
                                     _LCDWrite4 906E                            end_of_initialization 6DD6  
              __size_ofi2_ClearMonitorFailAlarm 0008                           __end_ofi2_BuzzerClear A16C  
                ??i2_ClearHighPressureAlarmHigh 0001                                i2HigherAlarm@max 000E  
                         _ClearMonitorFailAlarm A4D0                  ??_TMR4_DefaultInterruptHandler 0001  
                        __end_ofi2_AlarmDisplay 7BD2                              _GetPressure_mbar02 962E  
                                     AnyAlarm@i 0106                                         fputc@fp 0108  
                                 ValueDisplay@r 01B1             __end_of_UART1_SetTxInterruptHandler A1C6  
                   _UART1_SetTxInterruptHandler A1B8                                         fputs@fp 0111  
                           i2___wmul@multiplier 0001                            __size_ofi2_BuzzerOff 0010  
                                     i2u1203_40 A382                      __end_of_SetGasFailureAlarm A518  
                                     i2u2101_40 10C6                                       i2u1150_40 9EC4  
                                     i2u1151_40 9DEC                                       i2u2103_40 110C  
                                     i2u2016_40 60B0                                       i2u1152_40 9E0C  
                                     i2u1081_40 A39E                                       i2u2105_40 1166  
                                     i2u2120_48 9D22                                       i2u2122_48 9D44  
                                     i2u2043_40 04C4                                       i2u2130_48 9822  
                                     i2u2115_40 8078                                       i2u2210_48 6804  
                              i2_TMR5_StopTimer A690                                       i2u1149_40 9EA6  
                                     i2u1165_40 7EE2                                       i2u2029_40 003E  
                                     i2u2124_48 9CDE                                       i2u2220_48 684C  
                                     i2u2070_40 0A0C                                       i2u2054_40 0706  
                                     i2u2213_48 681C                                       i2u2118_48 9CBC  
                                     i2u2047_40 053C                                       i2u2126_48 97F0  
                                     i2u2207_40 67F4                                    ?_HigherAlarm 010A  
                                     i2u1600_40 3666                                       i2u1168_40 8CB2  
                                     i2u2065_40 08D4                                       i2u2128_48 9D00  
                                    _targetHigh 01E3                                       i2u1602_40 3674  
                                     i2u1610_40 54E8                  __size_of_SetBaterryLowAlarmMed 0006  
                           i2GetPressureV_pa@mv 0015                                  _SeePressure_pa 5842  
                                     i2u1610_47 54DA                                       i2u2219_40 6848  
                                     i2u2092_40 0E70                                       i2u2084_40 0D00  
                                     i2u1604_41 53F4                                       i2u1613_40 5554  
                                     i2u1621_40 3A98                                       i2u2093_40 0F0A  
                                     i2u2069_40 09A6                                     _UpdateState 3E88  
                                     i2u1542_40 745A                                       i2u1622_40 3A9A  
                                     i2u1615_40 399C                                       i2u2095_40 0F50  
                                     i2u1390_48 788E                                       i2u1390_49 78A0  
                                     i2u1632_40 5736                                       i2u1544_40 74A2  
                                     i2u1624_40 3B26                                       i2u2088_40 0DCA  
                                     i2u1560_41 5B62                                       i2u1624_45 3B14  
                                     i2u1609_40 54B4                                       i2u1625_40 3B6A  
                                     i2u1617_40 3A28                                       i2u2097_40 0FAA  
                                     i2u1392_48 78B8                                       i2u1634_40 57FC  
                                     i2u1546_40 905A                                       i2u1562_40 5B9A  
                                     i2u1618_40 3A5E                                       i2u1546_47 904C  
                                     i2u1635_40 57FE                                       i2u1571_40 9472  
                                     i2u1627_40 3B8C                                       i2u1619_40 3A60  
                                     i2u1627_41 3B8A                                       i2u1572_40 9794  
                                     i2u1548_40 972C                                       i2u1580_40 8F08  
                                     i2u1628_40 3B9A                                       i2u1804_40 439C  
                                    _targetPmax 026E                           __end_ofi2_SetAlarmSV1 9978  
                                     i2u1573_40 9796                                       i2u1549_40 972E  
                                     i2u1581_40 8F0A                                       i2u1629_40 3BA0  
                                     i2u1733_40 9552                                       i2u1805_40 43EC  
                                     i2u1388_48 7860                                       i2u1388_49 7872  
                 __end_of_SetBaterryLowAlarmMed A5B6                                       i2u1574_40 97C8  
                                     i2u1590_40 3462                                       i2u1575_40 97CA  
                                     i2u1568_40 61CE                                       i2u1680_40 1706  
                                     i2u1672_40 1496                                       i2u1577_40 9260  
                                     i2u1593_40 34A2                                       i2u1673_40 1498  
                                     i2u1578_40 9760                                       i2u1674_40 14A6  
                                     i2u1738_40 8008                                       i2u1842_40 7314  
                 __size_of_ClearTdiTooLongAlarm 0008                                       i2u1595_40 34D0  
                                     i2u1579_40 9762                                       i2u1923_40 2632  
                                     i2u1596_40 3630                                       i2u1772_40 6CA2  
                                     i2u1844_40 738E                                         isqrt@op 0005  
                                     i2u1589_40 3460                                       i2u1677_40 157A  
                                     i2u1861_40 3EF4                                       i2u1941_40 6714  
                                     i2u1925_40 4794                                       i2u1598_40 3652  
                                     i2u1942_40 671E                                       i2u1598_41 3650  
                ??_UART1_SetOverrunErrorHandler 0106                                       i2u1599_40 3660  
                                     i2u1919_40 8D04                                      _monitorSV1 01F8  
                                     i2u1856_40 3E9E                                       i2u1960_40 65E6  
                                     i2u1881_40 40CC                                       i2u1873_40 3FCC  
                                     i2u1857_40 3EA0                                       i2u1945_40 6778  
                                     i2u1937_40 4954                                       i2u1961_40 65F8  
                                     i2u1953_48 9E44                                       i2u1778_40 8374  
                                     i2u1874_40 3FCE                                       i2u1866_40 3F2A  
                                     i2u1946_40 6784                                       i2u1938_40 4956  
                                     i2u1970_40 6660                                       i2u1962_40 65FA  
                               ___lldiv@divisor 0005                                       i2u1883_40 9130  
                                     i2u1859_45 3EB6                                       i2u1955_48 9E24  
                                     i2u1948_40 67B6                                       i2u1980_40 66B8  
                                     i2u1972_40 6672                                       i2u1949_40 67C2  
                                     i2u1878_40 4012                                       i2u1974_40 6682  
                                     i2u1879_40 4014                                       i2u1959_40 65E4  
                                     i2u1976_40 6694                           _highPressureAlarmHigh 02AD  
                                     i2u1978_40 66A6                                 ___lldiv@counter 000D  
                                     See12V@v12 0126                                       See12V@adc 0124  
                               SetAlarmLED@type 0104                             ?_GetPressure_mbar02 002B  
                              ??i2_AdcDataReady 0009                                 ?_GetPressure_pa 011E  
                     ??_ClearBaterryLowAlarmMed 0104                                    ?_DisplayTask 0001  
                             __end_of_vfpfcnvrt 1E6C                             i2GetPressure_pa@p32 001F  
                           i2GetPressure_pa@adc 0023                                ___aldiv@quotient 011A  
                              AlarmUpdateLCD@id 01C0                                         postdec1 003FE5  
                                       postdec2 003FDD                        ??i2_ClearIPAboveSetAlarm 0001  
                                       postinc0 003FEE                                         postinc1 003FE6  
                                       postinc2 003FDE                                       i2See5V@mv 001D  
                                     i2_AdcInit 8492                                  ??_AdcDataReady 010C  
                                    _muteButton 00FD                             i2___lmul@multiplier 0001  
                          __size_ofi2_MuteAlarm 01EE                                ?_TMR5_StartTimer 0001  
                              ?_ADCC_Initialize 0001                                    ??i2_vfprintf 0055  
                                    ??_vfprintf 016F                                 _IPAboveSetAlarm 9F22  
                            _NoPowerSupplyAlarm A654                                 _ipAboveSetAlarm 00E2  
                             UART1_Write@txData 0104                             _UART1_RxDataHandler 9C3E  
               __end_ofi2_ClearControlFailAlarm A568                           __CFG_WDTCPS$WDTCPS_31 000000  
                                       strlen@a 0106                                         strlen@s 0104  
                             i2ValueDisplay@ete 00A8                               i2ValueDisplay@eti 00A7  
                         _CMP1_InterruptHandler 028A                               i2ValueDisplay@tde 00B2  
                             i2ValueDisplay@tdi 00B0                               i2ValueDisplay@spr 00A3  
                             i2ValueDisplay@vol 009F                                  i2_CMP1_Disable A590  
                                   _adcChannels 02BC                        _TMR0_SetInterruptHandler A1FE  
                                     i2_GetPmax 9B84                    __end_of_ClearTdeTooLongAlarm A590  
                            __end_of_AlarmClear 9DD6                              _UnDisplayCalibrate A1AA  
                                     _PORTDbits 003FCD                                 SetAlarmSV1@last 00F2  
                                  AlarmClear@id 0104                                    _LCDMessage12 932E  
                                     _TMR4_Stop A684                                  ?_ClearAllAlarm 0001  
                      _TMR6_SetInterruptHandler A21A                                   i2_UART1_Write 8D3C  
                             i2ClearVars@i_4906 0003                           _TMR5_InterruptHandler 02E1  
                                 ?i2_BuzzerTask 0001                                  ?_ClearAlarmLED 0001  
                         _I2C2_SlaveIsRxBufFull A378                               __size_of_I2C2_Isr 0068  
                             i2___aodiv@divisor 0009                                i2AdcGetData@data 0009  
                                   _StopHandler 8CE6                             ?_NoPowerSupplyAlarm 0001  
                  __size_of_ClearVBelowMinAlarm 0006                         __end_of_I2C2_Initialize A0F8  
                           i2_AlarmDisplay$4015 0058                             i2_AlarmDisplay$4016 005A  
                             i2___aodiv@counter 0011                     GetControllerBuzzerCheck@tmp 0001  
                         __size_of_LCDWriteChar 0096                                   _GetAlarmState 8F7E  
                    __end_of_SetIPAboveSetAlarm 9E16                            ??_GetPressure_mbar02 002D  
                        _ControllerTimerHandler 804A                         __size_of_AlarmCheckTask 0184  
                         ??i2_SetCalibrateState 005B                             ?_UnDisplayCalibrate 0001  
                                     i2___aldiv 6C3C                 __size_of_SetBaterryLowAlarmHigh 0006  
                                     i2___aodiv 5B08                               ?i2_EnableAlarmSV1 0001  
                                     i2___aomod 614C                                       i2___awdiv 7FC2  
                              ?_CMP1_Initialize 0001                                       i2___awmod 833A  
                       ?_I2C2_SlaveReleaseClock 0001                                __CFG_FEXTOSC$OFF 000000  
                              ?_TMR6_StartTimer 0001                                      ?_LCDWrite4 0001  
                __size_of_ClearBatteryFailAlarm 0008           __end_of_I2C2_SlaveSetBusColIntHandler A27C  
        __size_of_I2C2_SlaveSetBusColIntHandler 000E                   _I2C2_SlaveSetBusColIntHandler A26E  
                          ?_UART1_RxDataHandler 0001                         __end_of_EPAboveSetAlarm 9F70  
                 __end_of_ClearBatteryFailAlarm A4F8                                ?_TMR5_WriteTimer 0001  
                             __size_of_CMP1_ISR 0022                              ??i2_EnableAlarmSV1 0001  
                       TMR5_WriteTimer@timerVal 0001                          __end_of_SeePressure_pa 59B0  
            __size_ofi2_ClearNoPowerSupplyAlarm 0006                                 ?i2_AlarmDisplay 00BD  
                              _monitorFailAlarm 02B0                         __size_of_I2C2_SlaveOpen 000A  
                           __end_of_CMP1_Enable A4E0                              __end_ofi2_vfprintf 87FC  
                                __end_of_LCDOff A416                        __size_of_SeePressureV_pa 0082  
                                _ReceiveHandler 910A                      ?i2_ClearNoPowerSupplyAlarm 0001  
                       _ClearNoPowerSupplyAlarm A5BC                        __size_ofi2_GetAlarmState 0050  
                    MonitorPressureTask@nt_4872 0238                                       _AlarmInit 81D4  
                      ??i2_ClearEPBelowSetAlarm 0001                 __size_ofi2_ClearEPAboveSetAlarm 0016  
                              ??_GetMaxPressure 0114                              i2___awdiv@dividend 0007  
                                  ?_InitDisplay 0001                                   _MonitorEnable A4A0  
                               _DisableAlarmSV1 A4B8                            ??_NoPowerSupplyAlarm 0104  
                                     i2_isalpha 9768                                       i2_isdigit 979C  
                                __end_of_Get12V 7A06                         ??_ControllerBuzzerCheck 0001  
                                     _ClearVars 40E2                                 _EPBelowSetAlarm 9F70  
                                __end_ofi2_atoi 5842                                 _epBelowSetAlarm 00E8  
                                __end_ofi2_ctoa 8B26                         _I2C2_SlaveSetIsrHandler A260  
                                __end_ofi2_dtoa 36DA                                       i2_islower 9700  
                                     i2_isspace 922A                                  __end_of_GetBpm A308  
                                __end_of_GetTde A3DE                                  __end_of_GetTdi A2EC  
                                __end_of_See12V 796C                                  __end_ofi2_stoa 5562  
                       controller@volumeControl 0299                                  __end_of_GetSpr A2FA  
                                __end_ofi2_xtoa 3C0A                             SeePressureV_pa@adcv 0116  
                                     i2_isupper 9734                           AlarmCheckTask@current 0274  
                          ??_UnDisplayCalibrate 0104                                  BuzzerOn@period 0104  
                                _TMR0_StopTimer A638                                       _i2c2State 02B8  
                     __size_of_BuzzerCMPHandler 0026                                       i2atoi@neg 000E  
                                __end_of_SetSV1 9698                          _I2C2_SlaveStopCallBack 9E16  
                             __size_ofi2_LCDOff 000A                                      ?i2_AdcInit 0001  
                          __end_ofi2_AdcGetData 89FE                __end_of_ClearBaterryLowAlarmHigh A5CE  
                                  ??_ButtonInit 0106                         __end_of_AdcReStartCycle 8A62  
                                     i2_sprintf 8E8A                    __end_of_INTERRUPT_Initialize A640  
                                  ??_ButtonTask 00C7                                   ??_LCDMessage1 0112  
                                 ??_LCDMessage2 0112                          __end_ofi2_CMP1_Disable A598  
                          __end_ofi2_TMR4_Start A68C                 __size_ofi2_ADCC_StartConversion 0010  
                ??_ADCC_DefaultInterruptHandler 0001                                       i2_toupper 8EDC  
                              ??_EnableAlarmSV1 0104                    ??i2_ClearCircuitFailureAlarm 0001  
                    __size_of_UART1_Receive_ISR 00A0                      __end_of_GetDisableAlarmSV1 A5D4  
                                __end_of___lmul 8B84                                       _GetVolume A2D0  
                                 __pidataBIGRAM 495C                                     vfpfcnvrt@ap 014C  
                                   vfpfcnvrt@cp 0162                                     vfpfcnvrt@fp 0148  
                                   vfpfcnvrt@ll 0152                                    _LCDWriteChar 7C68  
                                __end_of___wmul 98EE                          ??i2_TMR4_Period8BitSet 0001  
                    __size_ofi2_GetPressureV_pa 00A6                                   ButtonTask@cnt 0284  
                  __end_of_I2C2_SlaveRdCallBack 9E56                            __end_ofi2_AdcSeeData 9464  
                              ?_TdiTooLongAlarm 0001                        __size_ofi2_MonitorEnable 0008  
                       ?_I2C2_SlaveSetSlaveAddr 0001                      __end_of_SetEPBelowSetAlarm 9EB0  
                             __size_of_TMR0_ISR 0022                               __size_of_TMR1_ISR 0032  
                             __size_of_TMR4_ISR 0022                               __size_of_TMR5_ISR 0032  
                             __size_ofi2_GetBpm 000E                         ?_I2C2_SlaveSetSlaveMask 0001  
                                     i2fputc@fp 0005                               __size_of_TMR6_ISR 0022  
                                    ?i2_GetPmax 000F                               __size_ofi2_GetTde 000C  
                             __size_ofi2_GetTdi 000E                     ??_ClearHighPressureAlarmLow 0001  
                                ?i2_UART1_Write 0001                               __size_ofi2_See12V 009A  
            __end_ofi2_TMR4_SetInterruptHandler A316                      i2_TMR4_SetInterruptHandler A308  
                             __size_ofi2_GetSpr 000E                          ?_OSCILLATOR_Initialize 0001  
                       __end_of_GasFailureAlarm A67C                                       i2fputs@fp 000E  
                                    ?_TMR4_Stop 0001                                  ??i2_BuzzerTask 005B  
             __size_of_ADCC_GetConversionResult 0016                                    ??_BuzzerInit 0106  
                             __size_of_AdcReady 0006                                    ??_BuzzerTask 0183  
                     ?_ADCC_GetConversionResult 0001                                    ??_BuzzerTest 0106  
                             __size_ofi2_SetSV1 002E                                i2___wmul@product 0005  
                 __size_of_ClearEPAboveSetAlarm 0016                                  __end_of_printf 9A28  
                      ?i2_ClearBatteryFailAlarm 0001                                       _HistAlarm 64C8  
                                 _i2c2SlaveAddr 02B5                                  ?_GetAlarmState 0108  
                          __end_of_ValueDisplay 25F6                                  __end_of_strlen 8DE6  
                           start_initialization 6D10                               __size_ofi2___lmul 005E  
                                   ??_I2C2_Read 0001                              i2___awdiv@quotient 000D  
                                   ??_I2C2_Open 0106                     ?_ClearHighPressureAlarmHigh 0001  
                             __size_ofi2___wmul 002E                                  BuzzerSet@state 0185  
               __size_ofi2_ClearGasFailureAlarm 0008            __end_of_TMR5_DefaultInterruptHandler A6B2  
         __size_of_TMR5_DefaultInterruptHandler 0002                    _TMR5_DefaultInterruptHandler A6B0  
                      __size_of_TMR0_Initialize 0024                 __size_of_PIN_MANAGER_Initialize 00B2  
          __end_of_I2C2_SlaveSetWrColIntHandler A252           __size_of_I2C2_SlaveSetWrColIntHandler 000E  
                  _I2C2_SlaveSetWrColIntHandler A244                  __end_of_I2C2_SlaveReleaseClock A622  
                                   __end_of_abs 93E8                                     __end_of_pad 72EA  
                       ??_UART1_SetErrorHandler 0106                                   ??_LCDWriteCmd 0104  
                             __size_of_AlarmSet 0020                                  AdcDataReady@id 010A  
                                    ?i2___aldiv 000D                                      ?i2___aodiv 0001  
                        ?_ClearMonitorFailAlarm 0001                                      ?i2___aomod 0001  
                                    ?i2___awdiv 0007                                      ?i2___awmod 0001  
                       __size_of_SetMaxPressure 000E                               __size_of_AnyAlarm 003C  
                         ??_UART1_RxDataHandler 0001                                    i2vfpfcnvrt@c 0076  
                  __size_of_SetMonitorFailAlarm 0008                                    ?_BuzzerCheck 0001  
                 __size_of_ADCC_StartConversion 0010                      ?_VeryHighPressureAlarmHigh 0001  
                                   putch@txData 0105                                    ?_BuzzerClear 0001  
                                    ivt0x8_base 0008                         __size_of_VAboveMaxAlarm 0004  
                             __size_ofi2_printf 0026                                       _BuzzerOff A14C  
                        __end_of_ReceiveHandler 9154                                       _BuzzerSet 9F8A  
                                      ??_LCDOff 0104                               __size_ofi2_strlen 0050  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                            __end_of_ButtonInit 99FE                              _controllerDetected 02B1  
                                 _uart1RxBuffer 0212                                  BuzzerTest@note 0108  
                            __end_of_ButtonTask 66D4                                 ?_SeePressure_pa 011E  
                                 _uart1TxBuffer 0464                                        ??_Get12V 0120  
                               ___llmod@divisor 0108                                  ?_MonitorEnable 0001  
                           _ClearVAboveMaxAlarm A578                                      ?_AlarmInit 0001  
                                      ??i2_atoi 000A                                        ??i2_ctoa 0021  
                                      ??i2_dtoa 0028                                    ?_SetAlarmLED 0001  
                               ___llmod@counter 010C                                       _SetTarget 6DDC  
           __size_ofi2_ClearCircuitFailureAlarm 0008               __end_ofi2_ClearNoPowerSupplyAlarm A604  
                                  ?_SetAlarmSV1 0001                                        ??_GetBpm 0106  
                       __size_of_AlarmUpdateLCD 0142                                        ??_GetTde 0106  
                                      ??_GetTdi 0106                                        ??_See12V 0120  
                                      ??i2_stoa 0010                                        ??_GetSpr 0106  
                                      ??i2_xtoa 0029                             _circuitFailureAlarm 02AB  
                              _BatteryFailAlarm 69AC                                      ?i2_isalpha 0001  
                        __end_of_TMR0_StopTimer A63C                                      ?i2_isdigit 0001  
                                _currentChannel 01E5                         __end_of_IPAboveSetAlarm 9F3C  
                                    ?_ClearVars 0001                                        ??_SetSV1 0183  
                                    ?i2_islower 0001                              __end_of_BuzzerInit 9864  
                                    ?i2_isspace 0001                                __CFG_LPBOREN$OFF 000000  
                            __end_of_BuzzerTask 2D48                               __size_of_BuzzerOn 001E  
                                     _MuteAlarm 457C                              __end_of_BuzzerTest 7EB0  
                 __size_of_ClearGasFailureAlarm 0008                                      ?i2_isupper 0001  
                      __size_of_TMR1_Initialize 0052                                     vfprintf@fmt 016B  
                                     _TestAlarm 739C                                  _DisplayDisable A10A  
                                  i2vfprintf@ap 0053                                 i2vfpfcnvrt@done 0072  
                                  i2vfprintf@fp 004F                          _SetBaterryLowAlarmHigh A5B6  
                           _BaterryLowAlarmHigh A668                                ??_PMD_Initialize 0104  
                                      ??___lmul 010C                                        ??___wmul 0108  
                      __end_ofi2_TMR0_StopTimer A69C                        ??i2_ClearIPBelowSetAlarm 0001  
                                    ?i2_sprintf 0077                                  HigherAlarm@max 0111  
                         i2_SetMonitorFailAlarm A5E0                 __size_ofi2_ClearIPAboveSetAlarm 0016  
                               ?i2_CMP1_Disable 0001                                      ?i2_toupper 0007  
                            _SetTdiTooLongAlarm A500                  __end_of_I2C2_SlaveSetSlaveAddr A3BA  
                                   __pdataBANK1 01F8                                     __pdataBANK2 02BC  
                                    ?_GetVolume 0104                  __end_of_I2C2_SlaveSetSlaveMask A13C  
                   ??i2_ClearBaterryLowAlarmMed 0001                                ValueDisplay@dtde 01A4  
                              ValueDisplay@dtdi 01A3                                ValueDisplay@etde 01AF  
                              ValueDisplay@etdi 01AE                                 _IPBelowSetAlarm 9F3C  
                       _I2C2_SlaveClearStopFlag A6A0                                 _ipBelowSetAlarm 00E4  
                               ??_ClearAllAlarm 0001                                ValueDisplay@pmax 019B  
                  __size_of_I2C2_SlaveClearBuff 0004                                    _prFastBuffer 0400  
             __size_of_ClearCircuitFailureAlarm 0008                          BuzzerTask@noDetections 0282  
                               ??_ClearAlarmLED 0104                                        ??_printf 017F  
                     ?_ClearCircuitFailureAlarm 0001                        __end_of_DisplayCalibrate 9700  
                                _TMR5_StopTimer A644                               i2___aomod@divisor 0009  
                        ?_I2C2_SlaveIsRxBufFull 0001                                        ??_strlen 0106  
                          ?_ClearVAboveMaxAlarm 0001                          i2_ClearEPAboveSetAlarm A042  
                             i2___aomod@counter 0011                            __size_ofi2_vfpfcnvrt 05EC  
                  __size_of_I2C2_SlaveEnableIrq 0016                             ?_SetTdiTooLongAlarm 0001  
                                      ?_LCDInit 0001                                      ?_HistAlarm 0001  
                  __size_of_I2C2_SlaveGetRxData 0006                                     __pbssBIGRAM 0464  
                           __end_of_LCDMessage1 9D96                             __end_of_LCDMessage2 9AC6  
                              i2_AlarmUpdateLCD 5DA2                                        ?_LCDTest 0001  
                                     _adcOffset 01F6                        __end_of_ControlFailAlarm A0BE  
                                  i2sprintf@fmt 0079                     __end_of_MonitorPressureTask 12AE  
                              ?_I2C2_Initialize 0001                        __size_of_TdeTooLongAlarm 0004  
                                      ?i2_LCDOn 0001                              _UART1_ErrorHandler 02E5  
              __end_of_SetHighPressureAlarmHigh A5AA                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                   __pcstackBANK2 02F5  
                                 __pcstackBANK3 03F9                     __end_of_SetBatteryFailAlarm A4F0  
                    __end_of_SetIPBelowSetAlarm 9DF6                                ___aodiv@dividend 0104  
                          __size_of_GetTargetEp 0026                               SeePressureV_pa@mv 011A  
                          __size_of_GetTargetIp 0026                  __size_of_SetNoPowerSupplyAlarm 0006  
                      __size_of_TMR2_Initialize 001E              _I2C2_SlaveDefWrColInterruptHandler 000000  
                                      LCDTest@i 0138                                        LCDTest@j 013A  
                          ?_BaterryLowAlarmHigh 0001                   __end_of_SetNoPowerSupplyAlarm A5B0  
                                   _CMP1_Enable A4D8                              _baterryLowAlarmMed 02AA  
                                      ?i2_GetEp 000F                                        ?i2_GetIp 000F  
                                      ?i2_GetTe 0001                                        ?i2_GetTi 0001  
                   __size_of_CMP1_SetIntHandler 000E                        _UART1_RxInterruptHandler 02F1  
                       i2_ClearMonitorFailAlarm A548                                        ?i2_See5V 001B  
                                      ?_AdcInit 0001                          i2_ADCC_StartConversion A18C  
                 ?_TMR5_DefaultInterruptHandler 0001                   __size_of_ClearIPAboveSetAlarm 0014  
                                   ??_LCDWrite4 0104                         __end_of_DisableAlarmSV1 A4C0  
                     ??_ClearNoPowerSupplyAlarm 0104                    __end_of_I2C2_SlaveSetCounter A45C  
                          __end_of_AdcDataReady 9A50                               SeePressure_pa@p32 0122  
                                    ?_BuzzerOff 0001                                      ?_BuzzerSet 0001  
                             SeePressure_pa@adc 0126                                 ?_ReceiveHandler 0001  
                              ?_EPAboveSetAlarm 0001               __end_of_VeryHighPressureAlarmHigh A680  
                       __end_of_EPBelowSetAlarm 9F8A                                   monitor@enable 02A2  
                                  ?_MonitorDump 0001                                    ?_MonitorInit 0001  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
                     _ClearHighPressureAlarmLow A616                                        ?i2_putch 0001  
                                      ?_GetPmax 0112                             i2AlarmDisplay@alarm 00BF  
                                     _calibrate 00FF                __size_ofi2_ClearControlFailAlarm 0008  
                     ??_I2C2_SlaveSetIsrHandler 0106                                        ?_DumpI2C 0001  
                         _ClearControlFailAlarm A490                             __end_of_LCDWriteCmd 7C68  
                                AdcGetData@data 010C                            _ClearTdeTooLongAlarm A588  
                  ?_UART1_SetRxInterruptHandler 0104                                      ?_SetTarget 001B  
                         _TMR0_InterruptHandler 02DF                            ??_SetTdiTooLongAlarm 0001  
                                     _alarmData 0914                                       _atoi$5674 0113  
                                     _atoi$5675 0117                                       _atoi$5676 0115  
                         _TMR6_InterruptHandler 02D9                                       __pnvBANK2 02D9  
                      __size_of_TMR0_StartTimer 0004                                       _alarmPmax 02D7  
               __size_ofi2_ClearEPBelowSetAlarm 0016                                       _alarmStep 01EF  
                        __end_of_DisplayDisable A11C                                 ?_TMR0_StopTimer 0001  
                    __end_of_TMR4_Period8BitSet A3C6                          i2_ClearGasFailureAlarm A558  
                        __size_ofi2_GetTargetEp 0026                                ___lwdiv@dividend 0001  
                        _PIN_MANAGER_Initialize 70D4                          __size_ofi2_GetTargetIp 0026  
                                    ?_MuteAlarm 0001                                       _dtoa$5178 0133  
                          __size_of_HigherAlarm 00B2                                      ?_TestAlarm 0183  
                             ?_UART1_Initialize 0001            __end_of_UART1_SetFramingErrorHandler A1F0  
         __size_of_UART1_SetFramingErrorHandler 000E                    _UART1_SetFramingErrorHandler A1E2  
                             ??_SeePressureV_pa 0114                __end_of_TMR1_SetInterruptHandler A298  
                                 __pmediumconst FC56                               ??i2_GetAlarmState 0007  
                                      ?___aldiv 0110                                        ?___aodiv 0104  
                                   ??i2_AdcInit 0007                                        ?___aomod 0104  
              __end_of_TMR4_SetInterruptHandler A2D0                             UART1_Read@readValue 0104  
                                      ?___awdiv 010A                                       __ptext100 A650  
                                     __ptext101 A298                                       __ptext110 9F22  
                                     __ptext102 9834                                ___aodiv@quotient 0116  
                                     __ptext111 9F3C                                       __ptext103 A2A6  
                                     __ptext200 A2FA                                       __ptext120 A0AA  
                                     __ptext112 9F56                                       __ptext104 4DF6  
                                     __ptext201 8F7E                                       __ptext121 6A90  
                                     __ptext113 9F70                                       __ptext105 A654  
                                     __ptext210 A5D4                                       __ptext202 94E0  
                                     __ptext130 A420                                       __ptext122 69AC  
                                     __ptext114 A668                                       __ptext106 A658  
                                     __ptext211 9C3E                                       __ptext203 9D96  
                                     __ptext131 9F8A                                       __ptext123 A67C  
                                     __ptext115 A66C                                       __ptext107 A65C  
                                     __ptext300 A3DE                                       __ptext220 991C  
                                     __ptext212 9CCE                                       __ptext204 9DB6  
                                     __ptext140 A4D8                                       __ptext132 29A0  
                                     __ptext124 9698                                       __ptext116 A670  
                                     __ptext108 A660                                       __ptext301 A34E  
                                     __ptext221 A5DA                                       __ptext213 804A  
                                     __ptext205 67D4                                       __ptext141 A13C  
                                     __ptext133 99FE                                       __ptext125 A2B4  
                                     __ptext117 A674                                       __ptext109 A664  
                                     __ptext310 A5F8                                       __ptext302 A3EA  
                                     __ptext230 9C86                                       __ptext222 A6B2  
                                     __ptext214 A6AE                                       __ptext206 919C  
                                     __ptext150 8B26                                       __ptext142 A684  
                                     __ptext134 A680                                       __ptext126 85DE  
                                     __ptext118 8152                                       __ptext311 A36A  
                                     __ptext303 9B38                                       __ptext231 65D0  
                                     __ptext223 25F6                                       __ptext215 97D0  
                                     __ptext207 7832                                       __ptext151 6B68  
                                     __ptext143 A14C                                       __ptext135 A2C2  
                                     __ptext127 A4C0                                       __ptext119 A678  
                                     __ptext320 A000                                       __ptext312 8FCE  
                                     __ptext304 9B5E                                       __ptext240 A694  
                                     __ptext232 A6B4                                       __ptext224 A688  
                                     __ptext216 9C62                                       __ptext208 A6AA  
                                     __ptext160 7A06                                       __ptext152 8932  
                                     __ptext144 A4E0                                       __ptext136 A3BA  
                                     __ptext128 A5A4                                       __ptext321 A016  
                                     __ptext313 951C                                       __ptext305 A35C  
                                     __ptext241 5DA2                                       __ptext233 476E  
                                     __ptext225 A308                                       __ptext217 87FC  
                                     __ptext209 A6AC                                       __ptext161 2238  
                                     __ptext153 A5BC                                       __ptext145 A5AA  
                                     __ptext137 A4C8                                       __ptext129 936C  
                                     __ptext330 A60A                                       __ptext322 A550  
                                     __ptext314 A3F6                                       __ptext306 9B84  
                                     __ptext250 9426                                       __ptext242 72EA  
                                     __ptext234 994A                                       __ptext226 A42A  
                                     __ptext218 A6B0                                       __ptext170 5272  
                                     __ptext162 8BE2                                       __ptext154 A4F0  
                                     __ptext146 A4E8                                       __ptext138 A4D0  
                                     __ptext331 A610                                       __ptext323 A558  
                                     __ptext315 A538                                       __ptext307 50F6  
                                     __ptext251 9A50                                       __ptext243 7B3A  
                                     __ptext235 A15C                                       __ptext227 A5E0  
                                     __ptext219 9CF0                                       __ptext171 36DA  
                                     __ptext163 8420                                       __ptext155 A5C2  
                                     __ptext147 A5B0                                       __ptext139 9E74  
                                     __ptext340 910A                                       __ptext332 A578  
                                     __ptext324 A02C                                       __ptext316 90BC  
                                     __ptext308 9A78                                       __ptext260 9DF6  
                                     __ptext252 75A0                                       __ptext244 A5E6  
                                     __ptext236 A68C                                       __ptext228 9EEC  
                                     __ptext180 A3C6                                       __ptext172 93AA  
                                     __ptext164 189A                                       __ptext156 A5C8  
                                     __ptext148 A5B6                                       __ptext341 A622  
                                     __ptext333 A580                                       __ptext325 A042  
                                     __ptext317 A540                                       __ptext309 7FC2  
                                     __ptext261 A510                                       __ptext253 8C90  
                                     __ptext245 9D12                                       __ptext237 A16C  
                                     __ptext229 9802                                       __ptext181 8C3A  
                                     __ptext173 5EE4                                       __ptext165 3C0A  
                                     __ptext157 9A28                                       __ptext149 796C  
                                     __ptext350 A6B8                                       __ptext342 A628  
                                     __ptext334 A588                                       __ptext326 A560  
                                     __ptext318 A5FE                                       __ptext270 8CE6  
                                     __ptext262 9E92                                       __ptext254 7EB0  
                                     __ptext246 001E                                       __ptext238 66D4  
                                     __ptext190 A2DE                                       __ptext182 5562  
                                     __ptext174 59B0                                       __ptext166 8E38  
                                     __ptext158 5C60                                       __ptext351 6018  
                                     __ptext343 A378                                       __ptext335 A616  
                                     __ptext327 A568                                       __ptext319 A548  
                                     __ptext271 3E88                                       __ptext263 9EB0  
                                     __ptext255 A5EC                                       __ptext247 A6B6  
                                     __ptext239 A690                                       __ptext191 A3D2  
                                     __ptext183 91E4                                       __ptext175 8A62  
                                     __ptext167 9556                                       __ptext159 7186  
                                     __ptext360 53EA                                       __ptext352 9BD0  
                                     __ptext344 A6A0                                       __ptext336 A452  
                                     __ptext328 A570                                       __ptext280 8998  
                                     __ptext272 9978                                       __ptext264 A5F2  
                                     __ptext256 A4F8                                       __ptext248 864C  
                                     __ptext192 9AC6                                       __ptext184 95F8  
                                     __ptext176 7238                                       __ptext168 958C  
                                     __ptext361 3428                                       __ptext353 8792  
                                     __ptext345 A6A4                                       __ptext337 A61C  
                                     __ptext329 A604                                       __ptext281 4330  
                                     __ptext273 6280                                       __ptext265 962E  
                                     __ptext257 A500                                       __ptext249 7AA0  
                                     __ptext193 9AEC                                       __ptext185 98C0  
                                     __ptext177 8D92                                       __ptext169 95C2  
                                     __ptext370 A466                                       __ptext362 9464  
                                     __ptext354 12AE                                       __ptext346 9D34  
                                     __ptext338 9E36                                       __ptext290 A324  
                                     __ptext282 A518                                       __ptext274 A316  
                                     __ptext266 96CC                                       __ptext258 A508  
                                     __ptext194 A2EC                                       __ptext186 82C6  
                                     __ptext178 93E8                                       __ptext371 8D3C  
                                     __ptext363 614C                                       __ptext355 3988  
                                     __ptext347 9BAA                                       __ptext339 A45C  
                                     __ptext291 A530                                       __ptext283 A520  
                                     __ptext275 A698                                       __ptext267 89FE  
                                     __ptext259 9DD6                                       __ptext195 9B12  
                                     __ptext187 A2D0                                       __ptext179 6F66  
                                      ?___awmod 0104                                       __ptext380 A62E  
                                     __ptext372 56D2                                       __ptext364 5B08  
                                     __ptext356 8EDC                                       __ptext348 A590  
                                     __ptext292 A0F8                                       __ptext284 A434  
                                     __ptext276 A69C                                       __ptext268 8864  
                                     __ptext196 4F7A                                       __ptext188 A0BE  
                                     __ptext381 A394                                       __ptext373 922A  
                                     __ptext365 8AC4                                       __ptext357 9700  
                                     __ptext349 9CAA                                       __ptext293 A17C  
                                     __ptext285 A43E                                       __ptext277 4AEC  
                                     __ptext269 9E16                                       __ptext197 98EE  
                                     __ptext189 A0D2                                       __ptext382 A058  
                                     __ptext374 979C                                       __ptext366 701E  
                                     __ptext358 9734                                       __ptext294 A10A  
                                     __ptext286 A528                                       __ptext278 8B84  
                                     __ptext198 7F3A                                       __ptext383 0000  
                                     __ptext375 8492                                       __ptext367 901E  
                                     __ptext359 9768                                       __ptext295 1E6C  
                                     __ptext287 A448                                       __ptext279 7646  
                                     __ptext199 A5CE                                       __ptext376 99A6  
                                     __ptext368 94A2                                       __ptext296 8E8A  
                                     __ptext288 6DDC                                       __ptext377 A18C  
                                     __ptext369 744A                                       __ptext297 833A  
                                     __ptext289 6C3C                                       __ptext378 8726  
                                     __ptext298 A332                                       __ptext379 A386  
                                     __ptext299 A340                                        ?___lldiv 0001  
                 ?_I2C2_SlaveSetWriteIntHandler 0104                                        ?___llmod 0104  
                              ?_AdcReStartCycle 0001                                        _I2C2ADB0 003D57  
                                      _I2C2ADR0 003D59                                        _I2C2ADR1 003D5A  
                                      ?___lwdiv 0001                              ??_UART1_Initialize 0106  
                                      _I2C2CON0 003D5D                                        _I2C2CON1 003D5E  
                                      _I2C2CON2 003D5F                            __size_of_DisplayTask 00A8  
                               ??i2_UART1_Write 0001                          __end_of_TMR5_StopTimer A648  
               __end_ofi2_ClearBatteryFailAlarm A578                                 _GetPressureV_pa 76EC  
                              _uart1RxLastError 02B9                                   ??_UART1_Write 0104  
                             ?i2_GetPressure_pa 001B                                        _I2C2_Isr 8864  
                  ??_INTERRUPT_InterruptManager 0100                                     ??i2_GetPmax 0011  
                   __size_of_BaterryLowAlarmMed 0004                           ??_ClearVAboveMaxAlarm 0001  
                               ??_GetAlarmState 010A                                   ??i2_TMR4_Stop 0001  
                             __size_of_vfprintf 0072                                     ??_TMR4_Stop 0104  
                   ?i2_ClearBaterryLowAlarmHigh 0001                        _ClearBaterryLowAlarmHigh A5C8  
                             ?_MonitorFailAlarm 0001                                ?_GasFailureAlarm 0001  
                      ??_SetCircuitFailureAlarm 0001                    __size_of_CircuitFailureAlarm 0004  
                     __size_ofi2_MonitorDisable 0008                              ??i2_GetPressure_pa 001D  
                        __CFG_BBSIZE$BBSIZE_512 000000                                  __size_of_LCDOn 000A  
                      __end_ofi2_TMR5_StopTimer A694                                 _tdeTooLongAlarm 02A7  
                      __size_of_TMR1_StartTimer 0004                   __size_of_ClearEPBelowSetAlarm 0014  
      __end_of_UART1_DefaultOverrunErrorHandler A6AC       __size_of_UART1_DefaultOverrunErrorHandler 0002  
            ??_UART1_DefaultOverrunErrorHandler 0001               ?_UART1_DefaultOverrunErrorHandler 0001  
              _UART1_DefaultOverrunErrorHandler A6AA                                        ?_isalpha 0104  
                                      ?_isdigit 0104                         __size_of_ControllerInit 0040  
                                __size_ofi2_abs 003E                                  __size_of_Get5V 006E  
                            ??_MonitorFailAlarm 0183                                  __size_ofi2_pad 00B6  
                                __size_of_GetEp 002E                                  _AlarmCheckTask 4DF6  
                                __size_of_GetIp 017C                                  __size_of_GetTe 0014  
                                __size_of_GetTi 0014                                        ?_islower 0104  
                                      ?_isspace 0104                          __size_ofi2_HigherAlarm 00B2  
                                __size_of_See5V 006E                                        Get12V@mv 0120  
                         ??_BaterryLowAlarmHigh 0104                                        ?_isupper 0104  
                             ??i2_MonitorEnable 0001                                       _prFastDev 023C  
                      __size_of_PWM6_Initialize 0018                        __size_of_TMR4_Initialize 002E  
                        __size_of_DisplayEnable 0010                                    i2ClearVars@i 0001  
                                      _CMP1_ISR 9D34                                ___lwdiv@quotient 0005  
                                   ??i2___aldiv 0015                          i2_ClearIPAboveSetAlarm A016  
                             _SetCalibrateState 63A6                                     ??i2___aodiv 0011  
                                      ?_putchar 010F                                     ??i2___aomod 0011  
                                __size_of_getch 0006                                       _tdeBuffer 0375  
                                   ??i2___awdiv 000B                                     ??i2___awmod 0005  
                                      ?_sprintf 0171                              _SetEPAboveSetAlarm 9EB0  
                        MonitorPressureTask@v12 009B               __size_of_GetControllerBuzzerCheck 0012  
                                      Get5V@v12 0126                                  __size_of_fputc 00B8  
                                      _T2CLKCON 003FAE                                  __size_of_fputs 003E  
                     ?_GetControllerBuzzerCheck 0001                          MonitorPressureTask@cnt 023A  
                                      ?_toupper 010A                                        Get5V@adc 0124  
                                __size_of_isqrt 00A6                                     _U1ERRIRbits 003DF9  
                     i2_ClearBaterryLowAlarmMed A604                          MonitorPressureTask@tmp 00AF  
                             ?_SetVolumeControl 0001                                        _T4CLKCON 003FA2  
                                     _tdiBuffer 0361                                   ?_AlarmHandler 0001  
                                __size_of_putch 000C                            _INTERRUPT_Initialize A63C  
                                      _T6CLKCON 003F96                              ?_SetCalibrateState 0001  
                                 ?_AlarmDisplay 01B7                                      _I2C2SDAPPS 003AE4  
                  __end_ofi2_UnDisplayCalibrate A324                                 ??_MonitorEnable 0104  
             _I2C2_SlaveDefAddrInterruptHandler 000000                                      _I2C2SCLPPS 003AE3  
                         _ADCC_IsConversionDone A394                         __size_of_VBelowMinAlarm 0004  
                                _I2C2_SlaveOpen A416                                 ___aldiv@divisor 0114  
                             ??_TMR0_Initialize 0106                              ??_SetVolumeControl 0001  
                               ___aldiv@counter 0118                                ??_GetPressure_pa 0120  
                          _I2C2_SlaveRdCallBack 9E36                    __end_of_HighPressureAlarmLow 81D4  
                                ___wmul@product 0108                           ?_ClearTdeTooLongAlarm 0001  
                            DisplayCalibrate@pr 0093                                        _LATAbits 003FBA  
         UART1_SetErrorHandler@interruptHandler 0104                                       _prSlowDev 0242  
                                      _LATCbits 003FBC                                        _LATDbits 003FBD  
                   __size_of_SetTdeTooLongAlarm 0008                                     ??_AlarmInit 0106  
                           ?_SetEPAboveSetAlarm 0001                                    ?_UpdateState 0001  
                          __end_ofi2_BuzzerTask 29A0                                        _PIE1bits 003991  
                         __size_ofi2_AdcGetData 0066                                        _PIE3bits 003993  
                                      _PIE4bits 003994                                        _PIE5bits 003995  
                                   ??i2_isalpha 0003                                        _PIE6bits 003996  
                                   ??i2_isdigit 0003                                       _ttNoAlarm 025E  
                                      _PIE7bits 003997                                        _PIE8bits 003998  
                           __CFG_BORV$VBOR_2P45 000000                                        _PIE9bits 003999  
                              _controlFailAlarm 00F6                           __size_ofi2_TMR4_Start 0004  
                                 ??i2_ClearVars 0001                                 ?_DisplayDisable 0001  
                           _ClearVBelowMinAlarm A610                                     ??_ClearVars 0104  
                             i2_TMR0_StartTimer A69C                             ??_SetCalibrateState 0183  
                                      i2_LCDOff A43E                                       _targetLow 01E1  
                      __size_of_TMR1_WriteTimer 0024                                ?_IPAboveSetAlarm 0001  
                 ??_UART1_SetRxInterruptHandler 0106                         __end_of_IPBelowSetAlarm 9F56  
                                   ??i2_islower 0003                                     ??i2_isspace 0003  
           __size_of_INTERRUPT_InterruptManager 00F4                                i2_vfpfcnvrt$5214 0074  
                    ??_TMR0_SetInterruptHandler 0106                                        _PIR1bits 0039A1  
                                   ??i2_isupper 0003                                        _PIR3bits 0039A3  
                                      _PIR4bits 0039A4                                        _PIR5bits 0039A5  
                                     _normalSV1 029F                                        _PIR6bits 0039A6  
                                      _PIR7bits 0039A7                                        See12V@mv 0120  
                                      _PIR8bits 0039A8                                        _PIR9bits 0039A9  
                         __size_ofi2_AdcSeeData 003E                      ??_TMR6_SetInterruptHandler 0106  
                          __size_of_InitDisplay 000C                                AlarmCheckTask@id 02FE  
                        ?i2_SetMonitorFailAlarm 0001                        __size_of_TMR5_Initialize 0050  
                              _BuzzerCMPHandler 9BAA                                       _testAlarm 0326  
                     ??_I2C2_SlaveClearStopFlag 0001                              ?i2_TMR0_StartTimer 0001  
            __end_ofi2_ClearCircuitFailureAlarm A570                      i2_ClearCircuitFailureAlarm A568  
           __size_of_ClearHighPressureAlarmHigh 0008                                     ??i2_sprintf 0057  
                                 _I2C2STAT1bits 003D62                                        _TMR0_ISR 9D12  
                              i2ValueDisplay@dr 00AB                                i2ValueDisplay@er 00B6  
                                      _TMR1_ISR 9802                                i2ValueDisplay@pe 009D  
                              i2ValueDisplay@pi 009B                                i2ValueDisplay@te 00B9  
                              i2ValueDisplay@ti 00BB                                        _TMR4_ISR 9CF0  
                    __end_of_UART1_Transmit_ISR 91E4                                        _TMR5_ISR 97D0  
                                      i2_GetBpm A36A                                        _TMR6_ISR 9CCE  
                                   ??i2_toupper 0009                                        i2_GetTde A3EA  
                                      i2_GetTdi A34E                                        i2_See12V 7AA0  
                                      See5V@v12 0126                                        i2_GetSpr A35C  
                                 ??i2_GetVolume 0003                 __size_ofi2_ClearIPBelowSetAlarm 0016  
                 ?_UART1_SetFramingErrorHandler 0104                                     _LCDMessage1 9D76  
                                      See5V@adc 0124                                     ??_GetVolume 0106  
                                   _LCDMessage2 9AA0                                 ?_TMR5_StopTimer 0001  
                                      _AdcReady A62E                           __size_of_ValueDisplay 03BE  
                              LCDMessage12@str1 0110                                LCDMessage12@str2 0112  
                                      i2_SetSV1 9978                                       _vfpfcnvrt 189A  
                            _SetGasFailureAlarm A510                                       _xtoa$5200 0136  
                                     _xtoa$5199 0134                               ??_TMR1_Initialize 0106  
                                    _ADCON0bits 003EF8                             ??i2_TMR0_StartTimer 0001  
                             ___wmul@multiplier 0104                         ?_ControllerTimerHandler 0001  
                                      i2___lmul 8B84                            ??_SetEPAboveSetAlarm 0001  
                        __end_of_AlarmCheckTask 4F7A                    __end_of_ClearTdiTooLongAlarm A588  
                                      i2___wmul 99A6                          i2_ClearEPBelowSetAlarm A02C  
                       __size_of_FVR_Initialize 0008                                   ??i2_HistAlarm 005C  
                                   ??_HistAlarm 02F5                               GetPressureV_pa@mv 0118  
                                  ?_StopHandler 0001                                 _commandReceived 029B  
                          ?_ClearVBelowMinAlarm 0001                       ??i2_ClearMonitorFailAlarm 0001  
                                      _AlarmSet 9D96                                   i2_GetTargetEp 9B5E  
                                 i2_GetTargetIp 9B38                                __size_of_LCDInit 00E4  
                     __end_of_SetCalibrateState 64C8                               i2___awdiv@divisor 0009  
                              __size_of_LCDTest 0090                             ?_SetGasFailureAlarm 0001  
             __size_of_TMR5_SetInterruptHandler 000E                                        _AnyAlarm 94E0  
                             i2___awdiv@counter 000B                       ?_TMR5_SetInterruptHandler 0104  
                           __end_of_UART1_Write 8C90                                    _prSlowBuffer 0432  
                                     _volumeAcc 0222                                        i2_printf 9BD0  
                                      i2pad@buf 0015                                       _volumeMax 026A  
                                     _volumeMin 0268                               GetPressure_pa@p32 0122  
                                  _isspace$5701 010A                                ??i2_AlarmDisplay 0057  
                                      i2ctoa@fp 001E                                __size_ofi2_LCDOn 000A  
                 __size_ofi2_GetDisableAlarmSV1 0006                        __size_of_TMR6_Initialize 002E  
                             GetPressure_pa@adc 0126                           __end_ofi2_CMP1_Enable A540  
                                      i2dtoa@fp 001E                             __end_ofi2_TMR4_Stop A690  
                                      i2_strlen 901E                                  _SetMaxPressure A324  
                              i2AdcSeeData@data 0009                                      vfpfcnvrt@c 0168  
                                   _LCDWriteCmd 7BD2                                  ??_AlarmHandler 005B  
                                   _INTCON0bits 003FD2                                  _VAboveMaxAlarm A65C  
                         __end_of_BuzzerHandler A5E0                          __end_of_I2C2_SlaveOpen A420  
                             ___lmul@multiplier 0104                                    i2_AdcGetData 8998  
                                     copy_data0 6D24                                       copy_data1 6D4A  
                                      i2fputc@c 0003                                       copy_data2 6D6C  
                              __size_ofi2_GetEp 0028                                __size_ofi2_GetIp 017C  
                         ?_INTERRUPT_Initialize 0001                                __size_ofi2_GetTe 000C  
                              __size_ofi2_GetTi 000E                                  ??_AlarmDisplay 01BB  
                                      i2fputs@c 0010                   __size_of_ClearIPBelowSetAlarm 0014  
                                 ??i2_BuzzerOff 0001                                        i2fputs@i 0011  
                              __size_ofi2_See5V 006E                                        i2fputs@s 000C  
                                  i2_TMR4_Start A688                             BatteryFailAlarm@bat 0128  
                              __size_of_AdcInit 0074                                     ??_BuzzerOff 0104  
                              ?_DisableAlarmSV1 0001                                     ??_BuzzerSet 0185  
                            i2___awmod@dividend 0001                        _SetHighPressureAlarmHigh A5A4  
                         _HighPressureAlarmHigh A674                              i2___aldiv@dividend 000D  
                      i2SetCalibrateState@calib 005B                                ?_EPBelowSetAlarm 0001  
                             ??_TdeTooLongAlarm 0104                          ?_ClearControlFailAlarm 0001  
                        _uart1TxBufferRemaining 02EB                           ?_I2C2_SlaveRdCallBack 0001  
                                 i2SetSV1@value 005B                                    i2_AdcSeeData 9426  
                             ??_TMR2_Initialize 0104                    __size_of_SetControlFailAlarm 0008  
                          __size_of_BuzzerCheck 0096                            __size_of_BuzzerClear 0010  
                                      i2stoa@cp 001C                                        i2stoa@fp 000C  
                              __size_ofi2_fputc 00AE                                __size_ofi2_fputs 003E  
                     __end_ofi2_TMR0_StartTimer A6A0                  ??_TMR5_DefaultInterruptHandler 0001  
                _I2C2_SlaveAddrInterruptHandler 0290                     ??i2_ClearNoPowerSupplyAlarm 0001  
                                _AlarmUpdateLCD 5C60                                        _BuzzerOn 9E74  
                              __size_ofi2_putch 000A                                __size_of_GetPmax 0026  
                                   ??_SetTarget 0027                              _SetIPAboveSetAlarm 9DF6  
                                      i2xtoa@fp 001E                                __size_of_DumpI2C 0002  
                                  _uart1RxCount 01F1                         ?_I2C2_SlaveStopCallBack 0001  
                                   _maxPressure 0252                               _AlarmDisplay$4015 01BC  
                             _AlarmDisplay$4016 01BE                                    _ValueDisplay 2238  
                _I2C2_SlaveStopInterruptHandler 0292                                        __Hrparam 0000  
                                 i2_HigherAlarm 72EA                __end_of_ADCC_GetConversionResult A06E  
                          ??_SetGasFailureAlarm 0001                         __end_of_GetPressureV_pa 7790  
                                 ??i2_MuteAlarm 005C                                     ??_MuteAlarm 0184  
                          __size_of_SetAlarmLED 000E                                      vfprintf@ap 016D  
                                      __Lrparam 0000                                      vfprintf@fp 0169  
                                   ??_TestAlarm 0185                            __size_of_SetAlarmSV1 0034  
                                 _DisplayEnable A17C                  __size_of_ControllerBuzzerCheck 000C  
                         _SetBaterryLowAlarmMed A5B0                              __CFG_BOREN$SBORDIS 000000  
                              LCDMessage@length 010C                   __end_of_ControllerBuzzerCheck A402  
                     __size_ofi2_EnableAlarmSV1 0008                            UpdateState@initPhase 005C  
                       HighPressureAlarmLow@max 0117                                   ?_CMP1_Disable 0001  
                           ?_SetIPAboveSetAlarm 0001                                 ValueDisplay@cnt 0288  
                               ValueDisplay@ete 01A2                                 ValueDisplay@eti 01A1  
                               ValueDisplay@tde 01AC                                 ValueDisplay@tdi 01AA  
                               ValueDisplay@spr 019D                                 ValueDisplay@vol 0199  
                       __size_ofi2_ValueDisplay 03CC                       HighPressureAlarmLow@count 0278  
                       ??_OSCILLATOR_Initialize 0104                             _SetMonitorFailAlarm A4C8  
                             ??_TMR0_StartTimer 0104                                __size_of___aldiv 00D4  
                              __size_of___aodiv 0158                                __size_of___aomod 0134  
                              __size_of___awdiv 0088                                __size_of___awmod 0074  
                         i2___wmul@multiplicand 0003                                __size_of___lldiv 008A  
                           __end_ofi2_ClearVars 457C                                 LCDWriteCmd@data 0104  
                            _noPowerSupplyAlarm 02A4                                __size_of___llmod 006E  
                                    ?_vfpfcnvrt 0148                                 ClearVars@i_4906 0106  
                __end_of_ControllerTimerHandler 80D0                                __size_of___lwdiv 0056  
                          _I2C2_SlaveSetCounter A452                                 LCDWriteChar@chr 0104  
                        __size_ofi2_BuzzerClear 0010                                SeePressureV_pa@p 0118  
                     ControllerTimerHandler@cnt 022C                                 ___aodiv@divisor 010C  
                      _TMR1_SetInterruptHandler A28A                     __end_ofi2_SetCalibrateState 63A6  
                                   _minPressure 00D6                                 ___aodiv@counter 0114  
                            i2___aldiv@quotient 0017                     ?i2_TMR4_SetInterruptHandler 0001  
                      _TMR4_SetInterruptHandler A2C2                              i2AlarmUpdateLCD@id 00C1  
                                  i2HistAlarm@i 005E                                        _pHighAcc 021E  
                ??_I2C2_SlaveSetWriteIntHandler 0106                                 ?_AlarmCheckTask 0001  
                              SeePressure_pa@mv 012A                           ??_ClearVBelowMinAlarm 0001  
                         _TMR1_InterruptHandler 02DB            __size_of_UART1_SetRxInterruptHandler 000E  
               __size_of_SetCircuitFailureAlarm 0006                                  ?i2_GetTargetEp 000F  
                                    sprintf@fmt 0173                                  ?i2_GetTargetIp 000F  
                      __end_of_BatteryFailAlarm 6A90                         ??_ClearMonitorFailAlarm 0104  
                                      _alarmSV1 02A0                             __end_ofi2_GetVolume A340  
                      __size_of_TMR5_StartTimer 0004                                      _T0CON0bits 003FB8  
                      __size_of_ADCC_Initialize 006C                           i2GetPressureV_pa@adcv 0013  
                         __size_of_AdcDataReady 0028                          __end_of_SetMaxPressure A332  
                        __size_ofi2_SetAlarmSV1 002E                                __size_of_isalpha 0036  
                              __size_of_isdigit 0036                  I2C2_SlaveSetSlaveMask@maskAddr 0104  
                        __end_of_VAboveMaxAlarm A660                                        __pivt0x8 0008  
                               ___lwdiv@divisor 0003                     __size_of_GetPressure_mbar02 0036  
                      _MonitorPressureTask$4886 00A3                        _MonitorPressureTask$4895 00A5  
                      _MonitorPressureTask$4896 00A7                        _MonitorPressureTask$4898 00A9  
                      _MonitorPressureTask$4899 00AB                                    _I2C2CON0bits 003D5D  
                              __size_of_islower 0036                                __size_of_isspace 0046  
                               ___lwdiv@counter 0007                                        _detected 00F8  
                              ??_SeePressure_pa 0120                                        __ptext10 A638  
                                      __ptext11 4C72                                        __ptext20 A1E2  
                                      __ptext12 76EC                                        __ptext21 A1F0  
                                      __ptext13 5842                                        __ptext30 70D4  
                                      __ptext22 9864                                        __ptext14 80D0  
                                      __ptext31 9FBC                                        __ptext23 8F2E  
                                      __ptext15 926E                                        __ptext40 A488  
                                      __ptext32 A63C                                        __ptext24 9892  
                                      __ptext16 6EA6                                        __ptext41 A490  
                                      __ptext33 A0E6                                        __ptext25 9E56  
                                      __ptext17 A1B8                                        __ptext50 A498  
                                      __ptext42 83AE                                        __ptext34 A470  
                                      __ptext26 8DE6                                        __ptext18 A1C6  
                                      __ptext51 8252                                        __ptext43 A640  
                                      __ptext35 9D56                                        __ptext27 9BF6  
                                      __ptext19 A1D4                                        __ptext60 A402  
                                      __ptext52 A11C                                        __ptext44 A1FE  
                                      __ptext36 86BA                                        __ptext28 9FA4  
                                      __ptext61 A40C                                        __ptext53 A20C  
                                      __ptext45 40E2                                        __ptext37 457C  
                                      __ptext29 9C1A                                        __ptext70 74F8  
                                      __ptext62 A3A2                                        __ptext54 A4A0  
                                      __ptext46 A06E                                        __ptext38 A478  
                                      __ptext71 9AA0                                        __ptext63 68C8  
                                      __ptext55 30C8                                        __ptext47 A082  
                                      __ptext39 A480                                        __ptext80 A648  
                                      __ptext72 932E                                        __ptext64 906E  
                                      __ptext56 8570                                        __ptext48 A096  
                                      __ptext81 A21A                                        __ptext73 9D76  
                                      __ptext65 7D94                                        __ptext57 78D2  
                                      __ptext49 9FD4                              _GetDisableAlarmSV1 A5CE  
                                      __ptext90 A26E                                        __ptext82 A228  
                                      __ptext74 7BD2                                        __ptext66 64C8  
                                      __ptext58 92F0                                        __ptext91 A27C  
                                      __ptext83 88CC                                        __ptext75 7790  
                                      __ptext67 A644                                        __ptext59 A4A8  
                                      __ptext92 A416                                        __ptext84 A236  
                                      __ptext76 7C68                                        __ptext68 A4B0  
                                      __ptext93 9FEA                                        __ptext85 A244  
                                      __ptext77 A4B8                                        __ptext69 A6A8  
                                      __ptext94 7E24                                        __ptext86 A12C  
                                      __ptext78 92B0                                        __ptext95 7CFE  
                                      __ptext87 A3AE                                        __ptext79 A59E  
                                      __ptext96 99D4                                        __ptext88 A252  
                                      __ptext97 A64C                                        __ptext89 A260  
                                      __ptext98 A28A                                        __ptext99 81D4  
                              __size_of_isupper 0036                            ??_SetIPAboveSetAlarm 0001  
                               i2MuteAlarm@high 0082                          i2_ClearIPBelowSetAlarm A000  
                          ?_SetMonitorFailAlarm 0001                                 ?_I2C2_SlaveOpen 0001  
                            _SetEPBelowSetAlarm 9E92                             __end_ofi2_HistAlarm 67D4  
                        ?_ADCC_IsConversionDone 0001                  __size_of_UART1_SetErrorHandler 000E  
          __end_of_SetVeryHighPressureAlarmHigh A4C8           __size_of_SetVeryHighPressureAlarmHigh 0008  
                  _SetVeryHighPressureAlarmHigh A4C0                                __size_of_putchar 001A  
                             ??_TMR1_StartTimer 0104                   __end_of_UART1_SetErrorHandler A1FE  
                   ??_VeryHighPressureAlarmHigh 0104                                    i2_GetIp$4810 0016  
                                  i2_GetIp$4809 0014                                __size_of_sprintf 0058  
                              __size_of_toupper 0052                    MonitorPressureTask@halfLimit 009F  
                        __end_of_AlarmUpdateLCD 5DA2                          ??_ClearTdeTooLongAlarm 0001  
                       i2_ClearControlFailAlarm A560                             _I2C2_SlaveClearBuff A6A4  
                                   i2AnyAlarm@i 0003                               ??_TMR4_Initialize 0106  
                             ??_PWM6_Initialize 0104                                   __size_of_atoi 0170  
              __size_ofi2_ClearBatteryFailAlarm 0008                                   __size_of_ctoa 0062  
                           ?_GetDisableAlarmSV1 0001                                   __size_of_main 0380  
                __end_of_I2C2_SlaveStopCallBack 9E36                                   __size_of_dtoa 02AE  
                  __end_of_ClearEPAboveSetAlarm 9FEA                           MonitorPressureTask@v1 00A1  
                         MonitorPressureTask@v2 00B3                           MonitorPressureTask@v5 009D  
                       __size_of_MonitorDisable 0008                           _ClearBatteryFailAlarm A4F0  
                         MonitorPressureTask@pr 00C1                        ?_ClearBaterryLowAlarmMed 0001  
                                 __size_of_stoa 0178                                   __size_of_xtoa 027E  
                          __size_of_MonitorDump 0360                            __size_of_MonitorInit 0072  
                                   _buzzerState 02B3                             _I2C2_SlaveEnableIrq 9FEA  
                           ?_SetEPBelowSetAlarm 0001                         ?_SetBaterryLowAlarmHigh 0001  
          __end_of_TMR0_DefaultInterruptHandler A6B8           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler A6B6                __end_of_ClearCircuitFailureAlarm A4A0  
                           _I2C2_SlaveGetRxData A628                                  ?i2_HigherAlarm 0007  
                          __CFG_WDTCWS$WDTCWS_7 000000                        __end_ofi2_AlarmUpdateLCD 5EE4  
                      __size_of_CMP1_Initialize 0020                                ??i2_CMP1_Disable 0001  
                   __size_of_NoPowerSupplyAlarm 0004                             __end_ofi2_BuzzerOff A17C  
                                 AdcHandler@cnt 0270                        __size_of_TMR6_StartTimer 0006  
                                ?_DisplayEnable 0001                                        _targetBp 026C  
                      __size_of_TMR5_WriteTimer 0024                                ?_IPBelowSetAlarm 0001  
                                   i2See12V@v12 0023                                     i2See12V@adc 0021  
                     _UART1_OverrunErrorHandler 02E7                                       stoa@F1144 02D0  
  UART1_SetOverrunErrorHandler@interruptHandler 0104                       _veryHighPressureAlarmHigh 02AC  
                                ??_CMP1_Disable 0104                                 _checkController 02B2  
                         _MonitorFailAlarm$4446 0183                     __size_of_UnDisplayCalibrate 000E  
                               i2ValueDisplay@r 00B7              __size_of_ClearHighPressureAlarmLow 0006  
            __size_of_UART1_DefaultErrorHandler 0006                                  UpdateState@cnt 0230  
                  __end_of_ADCC_StartConversion A12C                                  UpdateState@old 0298  
                                    _LCDMessage 7790                      ?_UART1_DefaultErrorHandler 0001  
                       ??_I2C2_SlaveIsRxBufFull 0001                                      AlarmInit@i 0106  
                             ?i2_TMR0_StopTimer 0001                         ?i2_ClearEPAboveSetAlarm 0001  
                                      _vfprintf 8420                                      AlarmSet@id 0104  
            __end_of_INTERRUPT_InterruptManager 68C8                     I2C2_SlaveSetCounter@counter 0001  
                    _INTERRUPT_InterruptManager 67D4                           ?_I2C2_SlaveSetCounter 0001  
                              GetPressureV_pa@p 011C                                    _AdcDataReady 9A28  
                                     printf@fmt 0171                            ?_I2C2_SlaveClearBuff 0001  
                             ??_TMR1_WriteTimer 0003                               _UART1_is_rx_ready A19C  
                          DisplayCalibrate@offv 0099                             __end_ofi2_MuteAlarm 495C  
                                   _UART1_Write 8C3A                              ??i2_TMR0_StopTimer 0001  
                          ??_GetDisableAlarmSV1 0104                            i2_UnDisplayCalibrate A316  
                              GetPressure_pa@mv 012A                       i2_ClearNoPowerSupplyAlarm A5FE  
                             ??_TMR5_Initialize 0106                                ___aomod@dividend 0104  
                 __size_ofi2_TMR4_Period8BitSet 000A                                     i2_TMR4_Stop A68C  
                              i2_MonitorDisable A520                               ?_DisplayCalibrate 0093  
                            ?_UART1_is_rx_ready 0001                   HighPressureAlarmLow@countVery 0276  
                          ?_I2C2_SlaveEnableIrq 0001                            _HighPressureAlarmLow 8152  
                          ??_SetEPBelowSetAlarm 0001                               i2___awmod@divisor 0003  
                       __size_ofi2_AdcDataReady 0028                  ??_UART1_SetFramingErrorHandler 0106  
                          ?_I2C2_SlaveGetRxData 0001                                  _ControllerInit 92B0  
                             i2___awmod@counter 0005                                  _vfpfcnvrt$5214 0166  
               I2C2_SlaveSetSlaveAddr@slaveAddr 0104                     __end_of_UART1_RxDataHandler 9C62  
                                   _uart1RxHead 01F3                         ?i2_ADCC_StartConversion 0001  
                  __end_of_ClearGasFailureAlarm A490                           i2___lmul@multiplicand 0005  
                                   _uart1TxHead 01ED                      __size_of_SetCalibrateState 0122  
                            ??_DisplayCalibrate 0057                                     _uart1RxTail 01F2  
                               ?_SetMaxPressure 0001                               ?_ControlFailAlarm 0001  
                              ??_ReceiveHandler 0001                                     _uart1TxTail 00EC  
                             i2_TMR5_StartTimer A694                               i2_ADCC_Initialize 8726  
                               ?_VAboveMaxAlarm 0001                                      ClearVars@i 0104  
                                  HigherAlarm@i 0113                        __size_of_TdiTooLongAlarm 0004  
                                  ?_CMP1_Enable 0001                                        isalpha@c 0104  
                                ValueDisplay@dr 01A5                                  ValueDisplay@er 01B0  
                                      isdigit@c 0104                                  ValueDisplay@pe 0197  
                                ValueDisplay@pi 0195                                  ValueDisplay@te 01B3  
                        ??_INTERRUPT_Initialize 0104                                  ValueDisplay@ti 01B5  
                         ??_SetMonitorFailAlarm 0104                             ??_UART1_is_rx_ready 0104  
                            ??_ControlFailAlarm 0104                              ?i2_TMR5_StartTimer 0001  
                            ?i2_ADCC_Initialize 0001                          ?_HighPressureAlarmHigh 0001  
          __end_of_TMR6_DefaultInterruptHandler A6B0           __size_of_TMR6_DefaultInterruptHandler 0002  
                  _TMR6_DefaultInterruptHandler A6AE                           __size_ofi2_BuzzerTask 03AA  
                        ??_I2C2_SlaveRdCallBack 0005            __end_of_ADCC_DefaultInterruptHandler A6BA  
         __size_of_ADCC_DefaultInterruptHandler 0002                    _ADCC_DefaultInterruptHandler A6B8  
                               SeePressure_pa@p 0128                                        intlevel2 0000  
                                     sprintf@ap 0185                                  _VBelowMinAlarm A658  
                              ??_TMR0_StopTimer 0104                                    AdcGetData@id 010A  
                               _SeePressureV_pa 80D0                        BatteryFailAlarm@timeFail 027C  
                               ?_AlarmUpdateLCD 0001                                   i2_BuzzerClear A15C  
                               i2_GetAlarmState 8FCE                   ?_SetVeryHighPressureAlarmHigh 0001  
                         MonitorFailAlarm@cnt5v 027A                                        islower@c 0104  
                __end_of_SetBaterryLowAlarmHigh A5BC                         ?i2_ClearGasFailureAlarm 0001  
                                      isspace@c 0104                                ___lldiv@dividend 0001  
                       ?_PIN_MANAGER_Initialize 0001                               ??_TMR6_Initialize 0106  
                    __size_ofi2_TMR0_StartTimer 0004                                        isqrt@one 0009  
                                      isqrt@res 0007                             ??i2_TMR5_StartTimer 0001  
                        _SetCircuitFailureAlarm A5F2                             _CircuitFailureAlarm A670  
                             __CFG_CLKOUTEN$OFF 000000                             ??i2_ADCC_Initialize 0003  
                            _SetIPBelowSetAlarm 9DD6                                        isupper@c 0104  
                          _ClearTdiTooLongAlarm A580                                _batteryFailAlarm 00F7  
                        ?_SetBaterryLowAlarmMed 0001                                   i2_SetAlarmSV1 994A  
                             _SetVAboveMaxAlarm A4F8                                     i2_ClearVars 4330  
          __size_of_I2C2_SlaveSetStopIntHandler 000E                                ?_GetPressureV_pa 0112  
                           _uart1RxStatusBuffer 020A                   ?_TMR0_DefaultInterruptHandler 0001  
                          __size_of_UpdateState 025A                      ??_ClearBaterryLowAlarmHigh 0104  
                                    i2See12V@mv 001D                                  AdcSeeData@data 010C  
                  __end_of_ClearIPAboveSetAlarm A096                  __end_ofi2_ClearEPAboveSetAlarm A058  
                            ?_SetVAboveMaxAlarm 0001                                        printf@ap 0181  
                     __end_of_UART1_is_rx_ready A1AA                                      _UART1_Read 9154  
           I2C2_SlaveSetWriteIntHandler@handler 0104                             ?_SetIPBelowSetAlarm 0001  
  UART1_SetFramingErrorHandler@interruptHandler 0104                       _VeryHighPressureAlarmHigh A67C  
                               AlarmHandler@cnt 0272                                      i2See5V@v12 0023  
                          __end_of_AlarmHandler 8864                              AlarmCheckTask@type 02FC  
                      _ADCC_GetConversionResult A058                                 i2_MonitorEnable A518  
                         ??_I2C2_SlaveClearBuff 0001                                      i2See5V@adc 0021  
             __end_of_UART1_DefaultErrorHandler A5DA                                 ___aomod@divisor 010C  
                                   i2_GetVolume A332                                   ??i2_vfpfcnvrt 004B  
                          __end_of_AlarmDisplay 7AA0                                     ??_vfpfcnvrt 014E  
                                      stoa@nuls 0114                                 ___aomod@counter 0114  
              __end_of_GetControllerBuzzerCheck A10A                           ?i2_UnDisplayCalibrate 0001  
                       __size_of_GetMaxPressure 003E                                        putchar@c 010F  
                        __end_of_ControllerInit 92F0                                 ??i2_GetTargetEp 0011  
                             AlarmDisplay@alarm 01B9                                 ??i2_GetTargetIp 0011  
                         ??_I2C2_SlaveEnableIrq 0104                           ?_HighPressureAlarmLow 0001  
                          ?_CircuitFailureAlarm 0001                           __end_of_ClearAllAlarm 910A  
                           ??_SetVAboveMaxAlarm 0001                                  _FVR_Initialize A470  
                         ??_I2C2_SlaveGetRxData 0001                              _TMR4_Period8BitSet A3BA  
                __end_ofi2_ADCC_StartConversion A19C                   i2TMR4_Period8BitSet@periodVal 0001  
                                 ??_GetTargetEp 0114                                   ??_GetTargetIp 0114  
                                      sprintf@f 0187                                        sprintf@s 0171  
                     __end_ofi2_TMR5_StartTimer A698                       __end_ofi2_ADCC_Initialize 8792  
                         __end_of_ClearAlarmLED A42A                                    i2_BuzzerTask 25F6  
                              ___lldiv@quotient 0009                                     i2_HistAlarm 66D4  
                       ?i2_ClearIPAboveSetAlarm 0001                               ?i2_TMR5_StopTimer 0001  
                               _TMR0_Initialize 9BF6                      __end_of_CMP1_SetIntHandler A2B4  
                            i2ValueDisplay@dtde 00AA                              i2ValueDisplay@dtdi 00A9  
                            i2ValueDisplay@etde 00B5                              i2ValueDisplay@etdi 00B4  
                               _tdiTooLongAlarm 02A8                              i2ValueDisplay@pmax 00A1  
                                      toupper@c 010A                       __size_of_UART1_Initialize 00C0  
                                    i2_AnyAlarm 951C                                    ___aldiv@sign 0119  
                       __size_of_EnableAlarmSV1 0008                                i2_MuteAlarm$4543 0081  
                          __size_of_StopHandler 0056                              ??i2_TMR5_StopTimer 0001  
                      __end_of_BuzzerCMPHandler 9BD0                             ?_TMR4_Period8BitSet 0001  
                        __end_of_VBelowMinAlarm A65C                       ??i2_ClearControlFailAlarm 0001  
                      _UART1_TxInterruptHandler 02EF                                      _AdcGetData 8932  
                          ??_SetIPBelowSetAlarm 0001                                      _AdcHandler 6018  
                                    _TMR4_Start A680                 __end_of_ClearBaterryLowAlarmMed A5C8  
                              SetAlarmSV1@value 0183                                      _TMR6_Start A648  
                         _SetNoPowerSupplyAlarm A5AA                                   _displayStatus 00E0  
                                i2_isspace$5701 0007                                  ?i2_BuzzerClear 0001  
                                  ___aodiv@sign 0115                       __size_ofi2_GetPressure_pa 0186  
                __end_ofi2_ClearGasFailureAlarm A560                               ??_TMR5_StartTimer 0104  
                                   i2_BuzzerOff A16C                                AlarmDisplay@type 01B7  
                ??_ADCC_SetADTIInterruptHandler 0106                                ??_DisplayDisable 0057  
                __end_of_PIN_MANAGER_Initialize 7186                               ??_ADCC_Initialize 0106  
                  __size_of_MonitorPressureTask 1290                                      _AdcSeeData 92F0  
                 ?_TMR6_DefaultInterruptHandler 0001                          ?_ClearBatteryFailAlarm 0001  
                      __size_of_I2C2_Initialize 0012                              i2___aodiv@dividend 0001  
                                  AdcSeeData@id 010A                              __size_of_I2C2_Read 0006  
                            __size_of_I2C2_Open 0066                       __size_of_MonitorFailAlarm 00D8  
                  __size_of_SetBatteryFailAlarm 0008                   ?_ADCC_DefaultInterruptHandler 0001  
                               ??i2_HigherAlarm 0009                                 AlarmDisplay@cnt 0286  
                     __end_of_SetVAboveMaxAlarm A500                    __end_of_ClearEPBelowSetAlarm A0AA  
                                 ??_HigherAlarm 010C                                 ??_DisplayEnable 0057  
                                    i2_BuzzerOn 9EEC                    ?_UART1_SetTxInterruptHandler 0104  
                                   _veryHighSV1 01FB                         ??i2_SetMonitorFailAlarm 0001  
                         ?_ClearTdiTooLongAlarm 0001              MonitorFailAlarm@monitorFailAlarm5V 00F5  
                   __size_of_SetTdiTooLongAlarm 0008                                  ?i2_SetAlarmSV1 0001  
                                  ___aomod@sign 0115                                 _TMR1_Initialize 8DE6  
                                 AlarmDisplay@t 01BB                                ??_TMR5_StopTimer 0104  
                                 ??_DisplayTask 0114                        __size_of_EPAboveSetAlarm 001A  
                                   i2_MuteAlarm 476E  
