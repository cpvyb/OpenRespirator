

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 22 17:22:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1,inline
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1,inline
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1,inline
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1,inline
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1,inline
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1,inline
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1,inline
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1,inline
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1,inline
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1,inline
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1,inline
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1,inline
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1,inline
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1,inline
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	text212,global,reloc=2,class=CODE,delta=1,inline
   235                           	psect	text213,global,reloc=2,class=CODE,delta=1,inline
   236                           	psect	text214,global,reloc=2,class=CODE,delta=1,inline
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1,inline
   238                           	psect	text216,global,reloc=2,class=CODE,delta=1,inline
   239                           	psect	text217,global,reloc=2,class=CODE,delta=1,inline
   240                           	psect	text218,global,reloc=2,class=CODE,delta=1,inline
   241                           	psect	text219,global,reloc=2,class=CODE,delta=1
   242                           	psect	text220,global,reloc=2,class=CODE,delta=1
   243                           	psect	text221,global,reloc=2,class=CODE,delta=1
   244                           	psect	text222,global,reloc=2,class=CODE,delta=1
   245                           	psect	text223,global,reloc=2,class=CODE,delta=1
   246                           	psect	text224,global,reloc=2,class=CODE,delta=1
   247                           	psect	text225,global,reloc=2,class=CODE,delta=1
   248                           	psect	text226,global,reloc=2,class=CODE,delta=1
   249                           	psect	text227,global,reloc=2,class=CODE,delta=1
   250                           	psect	text228,global,reloc=2,class=CODE,delta=1
   251                           	psect	text229,global,reloc=2,class=CODE,delta=1
   252                           	psect	text230,global,reloc=2,class=CODE,delta=1
   253                           	psect	text231,global,reloc=2,class=CODE,delta=1
   254                           	psect	text232,global,reloc=2,class=CODE,delta=1
   255                           	psect	text233,global,reloc=2,class=CODE,delta=1
   256                           	psect	text234,global,reloc=2,class=CODE,delta=1
   257                           	psect	text235,global,reloc=2,class=CODE,delta=1
   258                           	psect	text236,global,reloc=2,class=CODE,delta=1
   259                           	psect	text237,global,reloc=2,class=CODE,delta=1
   260                           	psect	text238,global,reloc=2,class=CODE,delta=1
   261                           	psect	text239,global,reloc=2,class=CODE,delta=1
   262                           	psect	text240,global,reloc=2,class=CODE,delta=1
   263                           	psect	text241,global,reloc=2,class=CODE,delta=1
   264                           	psect	text242,global,reloc=2,class=CODE,delta=1
   265                           	psect	text243,global,reloc=2,class=CODE,delta=1
   266                           	psect	text244,global,reloc=2,class=CODE,delta=1
   267                           	psect	text245,global,reloc=2,class=CODE,delta=1
   268                           	psect	text246,global,reloc=2,class=CODE,delta=1
   269                           	psect	text247,global,reloc=2,class=CODE,delta=1
   270                           	psect	text248,global,reloc=2,class=CODE,delta=1
   271                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   272                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   273                           	psect	text249,global,reloc=2,class=CODE,delta=1
   274                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   275  0000                     
   276                           ; Version 2.10
   277                           ; Generated 31/07/2019 GMT
   278                           ; 
   279                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   280                           ; All rights reserved.
   281                           ; 
   282                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   283                           ; 
   284                           ; Redistribution and use in source and binary forms, with or without modification, are
   285                           ; permitted provided that the following conditions are met:
   286                           ; 
   287                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   288                           ;        conditions and the following disclaimer.
   289                           ; 
   290                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   291                           ;        of conditions and the following disclaimer in the documentation and/or other
   292                           ;        materials provided with the distribution.
   293                           ; 
   294                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   295                           ;        software without specific prior written permission.
   296                           ; 
   297                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   298                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   299                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   300                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   301                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   302                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   303                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   304                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   305                           ; 
   306                           ; 
   307                           ; Code-generator required, PIC18F46K42 Definitions
   308                           ; 
   309                           ; SFR Addresses
   310  0000                     
   311 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   312  0000                     
   313 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   314  0000                     
   315 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   316  0000                     
   317                           	psect	idataBANK1
   318  00A4FA                     __pidataBANK1:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for _mainPSensCal
   322  00A4FA  00A4               	dw	164
   323                           
   324                           ;initializer for _LowVAlarm
   325  00A4FC  22                 	db	34
   326                           
   327                           ;initializer for _VentMode
   328  00A4FD  01                 	db	1
   329                           
   330                           ;initializer for _BdTrig
   331  00A4FE  02                 	db	2
   332                           
   333                           ;initializer for _PEEP
   334  00A4FF  0F                 	db	15
   335                           
   336                           ;initializer for _IP
   337  00A500  1E                 	db	30
   338                           
   339                           ;initializer for _BPM
   340  00A501  14                 	db	20
   341                           
   342                           ;initializer for _HighVAlarm
   343  00A502  2E                 	db	46
   344                           
   345                           ;initializer for _MaxV
   346  00A503  28                 	db	40
   347                           
   348                           ;initializer for _MaxP
   349  00A504  28                 	db	40
   350                           
   351                           	psect	idataBANK2
   352  00A27E                     __pidataBANK2:
   353                           	opt callstack 0
   354                           
   355                           ;initializer for setCursor@F16920
   356  00A27E  0000               	dw	0
   357  00A280  0040               	dw	64
   358  00A282  0014               	dw	20
   359  00A284  0054               	dw	84
   360                           
   361                           ;initializer for _keysD
   362  00A286  01                 	db	1
   363  00A287  02                 	db	2
   364  00A288  03                 	db	3
   365  00A289  04                 	db	4
   366  00A28A  05                 	db	5
   367  00A28B  07                 	db	7
   368                           
   369                           ;initializer for _keysC
   370  00A28C  04                 	db	4
   371  00A28D  05                 	db	5
   372  00A28E  06                 	db	6
   373  00A28F  07                 	db	7
   374  00A290  02                 	db	2
   375                           
   376                           ;initializer for _auxPSensCal
   377  00A291  03C2               	dw	962
   378                           
   379                           	psect	mediumconst
   380  00FA6E                     __pmediumconst:
   381                           	opt callstack 0
   382  00FA6E  00                 	db	0
   383  00FA6F                     _fsmStateTable:
   384                           	opt callstack 0
   385  00FA6F  CA                 	db	low _I2C2_DO_IDLE
   386  00FA70  A4                 	db	high _I2C2_DO_IDLE
   387  00FA71  E8                 	db	low _I2C2_DO_SEND_ADR_READ
   388  00FA72  9E                 	db	high _I2C2_DO_SEND_ADR_READ
   389  00FA73  C6                 	db	low _I2C2_DO_SEND_ADR_WRITE
   390  00FA74  A1                 	db	high _I2C2_DO_SEND_ADR_WRITE
   391  00FA75  E0                 	db	low _I2C2_DO_TX
   392  00FA76  7A                 	db	high _I2C2_DO_TX
   393  00FA77  08                 	db	low _I2C2_DO_RX
   394  00FA78  88                 	db	high _I2C2_DO_RX
   395  00FA79  68                 	db	low _I2C2_DO_TX_EMPTY
   396  00FA7A  8C                 	db	high _I2C2_DO_TX_EMPTY
   397  00FA7B  86                 	db	low _I2C2_DO_RX_EMPTY
   398  00FA7C  87                 	db	high _I2C2_DO_RX_EMPTY
   399  00FA7D  56                 	db	low _I2C2_DO_SEND_RESTART_READ
   400  00FA7E  A4                 	db	high _I2C2_DO_SEND_RESTART_READ
   401  00FA7F  DE                 	db	low _I2C2_DO_SEND_RESTART_WRITE
   402  00FA80  A5                 	db	high _I2C2_DO_SEND_RESTART_WRITE
   403  00FA81  DA                 	db	low _I2C2_DO_SEND_RESTART
   404  00FA82  A5                 	db	high _I2C2_DO_SEND_RESTART
   405  00FA83  8C                 	db	low _I2C2_DO_SEND_STOP
   406  00FA84  A1                 	db	high _I2C2_DO_SEND_STOP
   407  00FA85  6C                 	db	low _I2C2_DO_RX_ACK
   408  00FA86  A5                 	db	high _I2C2_DO_RX_ACK
   409  00FA87  64                 	db	low _I2C2_DO_TX_ACK
   410  00FA88  A5                 	db	high _I2C2_DO_TX_ACK
   411  00FA89  48                 	db	low _I2C2_DO_RX_NACK_STOP
   412  00FA8A  A4                 	db	high _I2C2_DO_RX_NACK_STOP
   413  00FA8B  5C                 	db	low _I2C2_DO_RX_NACK_RESTART
   414  00FA8C  A5                 	db	high _I2C2_DO_RX_NACK_RESTART
   415  00FA8D  7E                 	db	low _I2C2_DO_RESET
   416  00FA8E  A3                 	db	high _I2C2_DO_RESET
   417  00FA8F  64                 	db	low _I2C2_DO_ADDRESS_NACK
   418  00FA90  91                 	db	high _I2C2_DO_ADDRESS_NACK
   419  00FA91  48                 	db	low _I2C2_DO_BUS_COLLISION
   420  00FA92  8E                 	db	high _I2C2_DO_BUS_COLLISION
   421  00FA93  6E                 	db	low _I2C2_DO_BUS_ERROR
   422  00FA94  A3                 	db	high _I2C2_DO_BUS_ERROR
   423  00FA95                     __end_of_fsmStateTable:
   424                           	opt callstack 0
   425  00FA95                     STR_15:
   426                           
   427                           ; BSR set to: 2
   428  00FA95  50                 	db	80	;'P'
   429  00FA96  49                 	db	73	;'I'
   430  00FA97  2D                 	db	45
   431  00FA98  45                 	db	69	;'E'
   432  00FA99  4E                 	db	78	;'N'
   433  00FA9A  44                 	db	68	;'D'
   434  00FA9B  20                 	db	32
   435  00FA9C  54                 	db	84	;'T'
   436  00FA9D  20                 	db	32
   437  00FA9E  25                 	db	37
   438  00FA9F  64                 	db	100	;'d'
   439  00FAA0  20                 	db	32
   440  00FAA1  2D                 	db	45
   441  00FAA2  20                 	db	32
   442  00FAA3  50                 	db	80	;'P'
   443  00FAA4  69                 	db	105	;'i'
   444  00FAA5  20                 	db	32
   445  00FAA6  25                 	db	37
   446  00FAA7  64                 	db	100	;'d'
   447  00FAA8  20                 	db	32
   448  00FAA9  50                 	db	80	;'P'
   449  00FAAA  63                 	db	99	;'c'
   450  00FAAB  20                 	db	32
   451  00FAAC  25                 	db	37
   452  00FAAD  64                 	db	100	;'d'
   453  00FAAE  20                 	db	32
   454  00FAAF  56                 	db	86	;'V'
   455  00FAB0  6F                 	db	111	;'o'
   456  00FAB1  6C                 	db	108	;'l'
   457  00FAB2  20                 	db	32
   458  00FAB3  25                 	db	37
   459  00FAB4  64                 	db	100	;'d'
   460  00FAB5  20                 	db	32
   461  00FAB6  50                 	db	80	;'P'
   462  00FAB7  4D                 	db	77	;'M'
   463  00FAB8  61                 	db	97	;'a'
   464  00FAB9  78                 	db	120	;'x'
   465  00FABA  20                 	db	32
   466  00FABB  25                 	db	37
   467  00FABC  64                 	db	100	;'d'
   468  00FABD  20                 	db	32
   469  00FABE  56                 	db	86	;'V'
   470  00FABF  4C                 	db	76	;'L'
   471  00FAC0  20                 	db	32
   472  00FAC1  25                 	db	37
   473  00FAC2  64                 	db	100	;'d'
   474  00FAC3  20                 	db	32
   475  00FAC4  56                 	db	86	;'V'
   476  00FAC5  4F                 	db	79	;'O'
   477  00FAC6  53                 	db	83	;'S'
   478  00FAC7  20                 	db	32
   479  00FAC8  25                 	db	37
   480  00FAC9  64                 	db	100	;'d'
   481  00FACA  20                 	db	32
   482  00FACB  50                 	db	80	;'P'
   483  00FACC  4F                 	db	79	;'O'
   484  00FACD  53                 	db	83	;'S'
   485  00FACE  20                 	db	32
   486  00FACF  25                 	db	37
   487  00FAD0  64                 	db	100	;'d'
   488  00FAD1  20                 	db	32
   489  00FAD2  46                 	db	70	;'F'
   490  00FAD3  52                 	db	82	;'R'
   491  00FAD4  20                 	db	32
   492  00FAD5  25                 	db	37
   493  00FAD6  64                 	db	100	;'d'
   494  00FAD7  20                 	db	32
   495  00FAD8  55                 	db	85	;'U'
   496  00FAD9  56                 	db	86	;'V'
   497  00FADA  20                 	db	32
   498  00FADB  25                 	db	37
   499  00FADC  64                 	db	100	;'d'
   500  00FADD  0A                 	db	10
   501  00FADE  00                 	db	0
   502  00FADF                     STR_10:
   503                           
   504                           ; BSR set to: 2
   505  00FADF  0A                 	db	10
   506  00FAE0  49                 	db	73	;'I'
   507  00FAE1  50                 	db	80	;'P'
   508  00FAE2  2E                 	db	46
   509  00FAE3  20                 	db	32
   510  00FAE4  4D                 	db	77	;'M'
   511  00FAE5  61                 	db	97	;'a'
   512  00FAE6  78                 	db	120	;'x'
   513  00FAE7  56                 	db	86	;'V'
   514  00FAE8  20                 	db	32
   515  00FAE9  25                 	db	37
   516  00FAEA  64                 	db	100	;'d'
   517  00FAEB  20                 	db	32
   518  00FAEC  45                 	db	69	;'E'
   519  00FAED  42                 	db	66	;'B'
   520  00FAEE  52                 	db	82	;'R'
   521  00FAEF  61                 	db	97	;'a'
   522  00FAF0  74                 	db	116	;'t'
   523  00FAF1  65                 	db	101	;'e'
   524  00FAF2  20                 	db	32
   525  00FAF3  25                 	db	37
   526  00FAF4  64                 	db	100	;'d'
   527  00FAF5  20                 	db	32
   528  00FAF6  53                 	db	83	;'S'
   529  00FAF7  56                 	db	86	;'V'
   530  00FAF8  32                 	db	50	;'2'
   531  00FAF9  52                 	db	82	;'R'
   532  00FAFA  4F                 	db	79	;'O'
   533  00FAFB  20                 	db	32
   534  00FAFC  25                 	db	37
   535  00FAFD  64                 	db	100	;'d'
   536  00FAFE  20                 	db	32
   537  00FAFF  53                 	db	83	;'S'
   538  00FB00  56                 	db	86	;'V'
   539  00FB01  32                 	db	50	;'2'
   540  00FB02  52                 	db	82	;'R'
   541  00FB03  43                 	db	67	;'C'
   542  00FB04  20                 	db	32
   543  00FB05  25                 	db	37
   544  00FB06  64                 	db	100	;'d'
   545  00FB07  20                 	db	32
   546  00FB08  50                 	db	80	;'P'
   547  00FB09  51                 	db	81	;'Q'
   548  00FB0A  20                 	db	32
   549  00FB0B  25                 	db	37
   550  00FB0C  64                 	db	100	;'d'
   551  00FB0D  20                 	db	32
   552  00FB0E  56                 	db	86	;'V'
   553  00FB0F  51                 	db	81	;'Q'
   554  00FB10  20                 	db	32
   555  00FB11  25                 	db	37
   556  00FB12  64                 	db	100	;'d'
   557  00FB13  2E                 	db	46
   558  00FB14  0A                 	db	10
   559  00FB15  00                 	db	0
   560  00FB16                     STR_27:
   561                           
   562                           ; BSR set to: 2
   563  00FB16  50                 	db	80	;'P'
   564  00FB17  45                 	db	69	;'E'
   565  00FB18  20                 	db	32
   566  00FB19  54                 	db	84	;'T'
   567  00FB1A  20                 	db	32
   568  00FB1B  25                 	db	37
   569  00FB1C  64                 	db	100	;'d'
   570  00FB1D  20                 	db	32
   571  00FB1E  2D                 	db	45
   572  00FB1F  20                 	db	32
   573  00FB20  50                 	db	80	;'P'
   574  00FB21  69                 	db	105	;'i'
   575  00FB22  20                 	db	32
   576  00FB23  25                 	db	37
   577  00FB24  64                 	db	100	;'d'
   578  00FB25  20                 	db	32
   579  00FB26  50                 	db	80	;'P'
   580  00FB27  64                 	db	100	;'d'
   581  00FB28  20                 	db	32
   582  00FB29  25                 	db	37
   583  00FB2A  64                 	db	100	;'d'
   584  00FB2B  2E                 	db	46
   585  00FB2C  20                 	db	32
   586  00FB2D  52                 	db	82	;'R'
   587  00FB2E  20                 	db	32
   588  00FB2F  25                 	db	37
   589  00FB30  64                 	db	100	;'d'
   590  00FB31  20                 	db	32
   591  00FB32  50                 	db	80	;'P'
   592  00FB33  65                 	db	101	;'e'
   593  00FB34  70                 	db	112	;'p'
   594  00FB35  20                 	db	32
   595  00FB36  25                 	db	37
   596  00FB37  64                 	db	100	;'d'
   597  00FB38  20                 	db	32
   598  00FB39  50                 	db	80	;'P'
   599  00FB3A  4F                 	db	79	;'O'
   600  00FB3B  53                 	db	83	;'S'
   601  00FB3C  20                 	db	32
   602  00FB3D  25                 	db	37
   603  00FB3E  64                 	db	100	;'d'
   604  00FB3F  20                 	db	32
   605  00FB40  50                 	db	80	;'P'
   606  00FB41  51                 	db	81	;'Q'
   607  00FB42  20                 	db	32
   608  00FB43  25                 	db	37
   609  00FB44  64                 	db	100	;'d'
   610  00FB45  0A                 	db	10
   611  00FB46  00                 	db	0
   612  00FB47                     STR_13:
   613                           
   614                           ; BSR set to: 2
   615  00FB47  50                 	db	80	;'P'
   616  00FB48  49                 	db	73	;'I'
   617  00FB49  2D                 	db	45
   618  00FB4A  4D                 	db	77	;'M'
   619  00FB4B  45                 	db	69	;'E'
   620  00FB4C  44                 	db	68	;'D'
   621  00FB4D  20                 	db	32
   622  00FB4E  54                 	db	84	;'T'
   623  00FB4F  20                 	db	32
   624  00FB50  25                 	db	37
   625  00FB51  64                 	db	100	;'d'
   626  00FB52  20                 	db	32
   627  00FB53  2D                 	db	45
   628  00FB54  20                 	db	32
   629  00FB55  50                 	db	80	;'P'
   630  00FB56  69                 	db	105	;'i'
   631  00FB57  20                 	db	32
   632  00FB58  25                 	db	37
   633  00FB59  64                 	db	100	;'d'
   634  00FB5A  20                 	db	32
   635  00FB5B  50                 	db	80	;'P'
   636  00FB5C  63                 	db	99	;'c'
   637  00FB5D  20                 	db	32
   638  00FB5E  25                 	db	37
   639  00FB5F  64                 	db	100	;'d'
   640  00FB60  20                 	db	32
   641  00FB61  56                 	db	86	;'V'
   642  00FB62  6F                 	db	111	;'o'
   643  00FB63  6C                 	db	108	;'l'
   644  00FB64  20                 	db	32
   645  00FB65  25                 	db	37
   646  00FB66  33                 	db	51	;'3'
   647  00FB67  78                 	db	120	;'x'
   648  00FB68  20                 	db	32
   649  00FB69  4F                 	db	79	;'O'
   650  00FB6A  53                 	db	83	;'S'
   651  00FB6B  20                 	db	32
   652  00FB6C  25                 	db	37
   653  00FB6D  64                 	db	100	;'d'
   654  00FB6E  20                 	db	32
   655  00FB6F  52                 	db	82	;'R'
   656  00FB70  46                 	db	70	;'F'
   657  00FB71  20                 	db	32
   658  00FB72  25                 	db	37
   659  00FB73  64                 	db	100	;'d'
   660  00FB74  0A                 	db	10
   661  00FB75  00                 	db	0
   662  00FB76                     STR_14:
   663                           
   664                           ; BSR set to: 2
   665  00FB76  50                 	db	80	;'P'
   666  00FB77  49                 	db	73	;'I'
   667  00FB78  2D                 	db	45
   668  00FB79  4C                 	db	76	;'L'
   669  00FB7A  4F                 	db	79	;'O'
   670  00FB7B  57                 	db	87	;'W'
   671  00FB7C  20                 	db	32
   672  00FB7D  54                 	db	84	;'T'
   673  00FB7E  20                 	db	32
   674  00FB7F  25                 	db	37
   675  00FB80  64                 	db	100	;'d'
   676  00FB81  20                 	db	32
   677  00FB82  2D                 	db	45
   678  00FB83  20                 	db	32
   679  00FB84  50                 	db	80	;'P'
   680  00FB85  69                 	db	105	;'i'
   681  00FB86  20                 	db	32
   682  00FB87  25                 	db	37
   683  00FB88  64                 	db	100	;'d'
   684  00FB89  20                 	db	32
   685  00FB8A  50                 	db	80	;'P'
   686  00FB8B  63                 	db	99	;'c'
   687  00FB8C  20                 	db	32
   688  00FB8D  25                 	db	37
   689  00FB8E  64                 	db	100	;'d'
   690  00FB8F  20                 	db	32
   691  00FB90  56                 	db	86	;'V'
   692  00FB91  6F                 	db	111	;'o'
   693  00FB92  6C                 	db	108	;'l'
   694  00FB93  20                 	db	32
   695  00FB94  25                 	db	37
   696  00FB95  64                 	db	100	;'d'
   697  00FB96  20                 	db	32
   698  00FB97  4F                 	db	79	;'O'
   699  00FB98  53                 	db	83	;'S'
   700  00FB99  20                 	db	32
   701  00FB9A  25                 	db	37
   702  00FB9B  64                 	db	100	;'d'
   703  00FB9C  0A                 	db	10
   704  00FB9D  00                 	db	0
   705  00FB9E                     STR_65:
   706                           
   707                           ; BSR set to: 2
   708  00FB9E  4D                 	db	77	;'M'
   709  00FB9F  41                 	db	65	;'A'
   710  00FBA0  49                 	db	73	;'I'
   711  00FBA1  4E                 	db	78	;'N'
   712  00FBA2  20                 	db	32
   713  00FBA3  50                 	db	80	;'P'
   714  00FBA4  52                 	db	82	;'R'
   715  00FBA5  45                 	db	69	;'E'
   716  00FBA6  53                 	db	83	;'S'
   717  00FBA7  53                 	db	83	;'S'
   718  00FBA8  55                 	db	85	;'U'
   719  00FBA9  52                 	db	82	;'R'
   720  00FBAA  45                 	db	69	;'E'
   721  00FBAB  2E                 	db	46
   722  00FBAC  20                 	db	32
   723  00FBAD  4D                 	db	77	;'M'
   724  00FBAE  69                 	db	105	;'i'
   725  00FBAF  6E                 	db	110	;'n'
   726  00FBB0  20                 	db	32
   727  00FBB1  25                 	db	37
   728  00FBB2  64                 	db	100	;'d'
   729  00FBB3  20                 	db	32
   730  00FBB4  4D                 	db	77	;'M'
   731  00FBB5  61                 	db	97	;'a'
   732  00FBB6  78                 	db	120	;'x'
   733  00FBB7  20                 	db	32
   734  00FBB8  25                 	db	37
   735  00FBB9  64                 	db	100	;'d'
   736  00FBBA  20                 	db	32
   737  00FBBB  4D                 	db	77	;'M'
   738  00FBBC  45                 	db	69	;'E'
   739  00FBBD  41                 	db	65	;'A'
   740  00FBBE  4E                 	db	78	;'N'
   741  00FBBF  20                 	db	32
   742  00FBC0  25                 	db	37
   743  00FBC1  64                 	db	100	;'d'
   744  00FBC2  0A                 	db	10
   745  00FBC3  00                 	db	0
   746  00FBC4                     STR_66:
   747                           
   748                           ; BSR set to: 2
   749  00FBC4  41                 	db	65	;'A'
   750  00FBC5  55                 	db	85	;'U'
   751  00FBC6  58                 	db	88	;'X'
   752  00FBC7  20                 	db	32
   753  00FBC8  50                 	db	80	;'P'
   754  00FBC9  52                 	db	82	;'R'
   755  00FBCA  45                 	db	69	;'E'
   756  00FBCB  53                 	db	83	;'S'
   757  00FBCC  53                 	db	83	;'S'
   758  00FBCD  55                 	db	85	;'U'
   759  00FBCE  52                 	db	82	;'R'
   760  00FBCF  45                 	db	69	;'E'
   761  00FBD0  2E                 	db	46
   762  00FBD1  20                 	db	32
   763  00FBD2  4D                 	db	77	;'M'
   764  00FBD3  69                 	db	105	;'i'
   765  00FBD4  6E                 	db	110	;'n'
   766  00FBD5  20                 	db	32
   767  00FBD6  25                 	db	37
   768  00FBD7  64                 	db	100	;'d'
   769  00FBD8  20                 	db	32
   770  00FBD9  4D                 	db	77	;'M'
   771  00FBDA  61                 	db	97	;'a'
   772  00FBDB  78                 	db	120	;'x'
   773  00FBDC  20                 	db	32
   774  00FBDD  25                 	db	37
   775  00FBDE  64                 	db	100	;'d'
   776  00FBDF  20                 	db	32
   777  00FBE0  4D                 	db	77	;'M'
   778  00FBE1  45                 	db	69	;'E'
   779  00FBE2  41                 	db	65	;'A'
   780  00FBE3  4E                 	db	78	;'N'
   781  00FBE4  20                 	db	32
   782  00FBE5  25                 	db	37
   783  00FBE6  64                 	db	100	;'d'
   784  00FBE7  0A                 	db	10
   785  00FBE8  00                 	db	0
   786  00FBE9                     STR_25:
   787                           
   788                           ; BSR set to: 2
   789  00FBE9  42                 	db	66	;'B'
   790  00FBEA  44                 	db	68	;'D'
   791  00FBEB  20                 	db	32
   792  00FBEC  56                 	db	86	;'V'
   793  00FBED  4F                 	db	79	;'O'
   794  00FBEE  20                 	db	32
   795  00FBEF  54                 	db	84	;'T'
   796  00FBF0  20                 	db	32
   797  00FBF1  25                 	db	37
   798  00FBF2  64                 	db	100	;'d'
   799  00FBF3  20                 	db	32
   800  00FBF4  2D                 	db	45
   801  00FBF5  20                 	db	32
   802  00FBF6  50                 	db	80	;'P'
   803  00FBF7  69                 	db	105	;'i'
   804  00FBF8  20                 	db	32
   805  00FBF9  25                 	db	37
   806  00FBFA  64                 	db	100	;'d'
   807  00FBFB  20                 	db	32
   808  00FBFC  50                 	db	80	;'P'
   809  00FBFD  35                 	db	53	;'5'
   810  00FBFE  30                 	db	48	;'0'
   811  00FBFF  20                 	db	32
   812  00FC00  25                 	db	37
   813  00FC01  64                 	db	100	;'d'
   814  00FC02  20                 	db	32
   815  00FC03  50                 	db	80	;'P'
   816  00FC04  32                 	db	50	;'2'
   817  00FC05  30                 	db	48	;'0'
   818  00FC06  30                 	db	48	;'0'
   819  00FC07  30                 	db	48	;'0'
   820  00FC08  20                 	db	32
   821  00FC09  25                 	db	37
   822  00FC0A  64                 	db	100	;'d'
   823  00FC0B  0A                 	db	10
   824  00FC0C  00                 	db	0
   825  00FC0D                     STR_17:
   826                           
   827                           ; BSR set to: 2
   828  00FC0D  50                 	db	80	;'P'
   829  00FC0E  49                 	db	73	;'I'
   830  00FC0F  2D                 	db	45
   831  00FC10  56                 	db	86	;'V'
   832  00FC11  4F                 	db	79	;'O'
   833  00FC12  20                 	db	32
   834  00FC13  54                 	db	84	;'T'
   835  00FC14  20                 	db	32
   836  00FC15  25                 	db	37
   837  00FC16  64                 	db	100	;'d'
   838  00FC17  20                 	db	32
   839  00FC18  2D                 	db	45
   840  00FC19  20                 	db	32
   841  00FC1A  50                 	db	80	;'P'
   842  00FC1B  69                 	db	105	;'i'
   843  00FC1C  20                 	db	32
   844  00FC1D  25                 	db	37
   845  00FC1E  64                 	db	100	;'d'
   846  00FC1F  20                 	db	32
   847  00FC20  50                 	db	80	;'P'
   848  00FC21  71                 	db	113	;'q'
   849  00FC22  20                 	db	32
   850  00FC23  25                 	db	37
   851  00FC24  64                 	db	100	;'d'
   852  00FC25  20                 	db	32
   853  00FC26  56                 	db	86	;'V'
   854  00FC27  4F                 	db	79	;'O'
   855  00FC28  4C                 	db	76	;'L'
   856  00FC29  20                 	db	32
   857  00FC2A  25                 	db	37
   858  00FC2B  64                 	db	100	;'d'
   859  00FC2C  0A                 	db	10
   860  00FC2D  00                 	db	0
   861  00FC2E                     STR_67:
   862                           
   863                           ; BSR set to: 2
   864  00FC2E  50                 	db	80	;'P'
   865  00FC2F  52                 	db	82	;'R'
   866  00FC30  45                 	db	69	;'E'
   867  00FC31  53                 	db	83	;'S'
   868  00FC32  53                 	db	83	;'S'
   869  00FC33  55                 	db	85	;'U'
   870  00FC34  52                 	db	82	;'R'
   871  00FC35  45                 	db	69	;'E'
   872  00FC36  20                 	db	32
   873  00FC37  43                 	db	67	;'C'
   874  00FC38  41                 	db	65	;'A'
   875  00FC39  4C                 	db	76	;'L'
   876  00FC3A  49                 	db	73	;'I'
   877  00FC3B  42                 	db	66	;'B'
   878  00FC3C  52                 	db	82	;'R'
   879  00FC3D  41                 	db	65	;'A'
   880  00FC3E  54                 	db	84	;'T'
   881  00FC3F  49                 	db	73	;'I'
   882  00FC40  4F                 	db	79	;'O'
   883  00FC41  4E                 	db	78	;'N'
   884  00FC42  20                 	db	32
   885  00FC43  45                 	db	69	;'E'
   886  00FC44  52                 	db	82	;'R'
   887  00FC45  52                 	db	82	;'R'
   888  00FC46  4F                 	db	79	;'O'
   889  00FC47  52                 	db	82	;'R'
   890  00FC48  0A                 	db	10
   891  00FC49  00                 	db	0
   892  00FC4A                     STR_22:
   893                           
   894                           ; BSR set to: 2
   895  00FC4A  50                 	db	80	;'P'
   896  00FC4B  45                 	db	69	;'E'
   897  00FC4C  49                 	db	73	;'I'
   898  00FC4D  20                 	db	32
   899  00FC4E  65                 	db	101	;'e'
   900  00FC4F  6E                 	db	110	;'n'
   901  00FC50  64                 	db	100	;'d'
   902  00FC51  20                 	db	32
   903  00FC52  54                 	db	84	;'T'
   904  00FC53  20                 	db	32
   905  00FC54  25                 	db	37
   906  00FC55  64                 	db	100	;'d'
   907  00FC56  20                 	db	32
   908  00FC57  2D                 	db	45
   909  00FC58  20                 	db	32
   910  00FC59  50                 	db	80	;'P'
   911  00FC5A  69                 	db	105	;'i'
   912  00FC5B  20                 	db	32
   913  00FC5C  25                 	db	37
   914  00FC5D  64                 	db	100	;'d'
   915  00FC5E  20                 	db	32
   916  00FC5F  4F                 	db	79	;'O'
   917  00FC60  53                 	db	83	;'S'
   918  00FC61  20                 	db	32
   919  00FC62  25                 	db	37
   920  00FC63  64                 	db	100	;'d'
   921  00FC64  0A                 	db	10
   922  00FC65  00                 	db	0
   923  00FC66                     STR_85:
   924                           
   925                           ; BSR set to: 2
   926  00FC66  56                 	db	86	;'V'
   927  00FC67  44                 	db	68	;'D'
   928  00FC68  44                 	db	68	;'D'
   929  00FC69  20                 	db	32
   930  00FC6A  4D                 	db	77	;'M'
   931  00FC6B  69                 	db	105	;'i'
   932  00FC6C  6E                 	db	110	;'n'
   933  00FC6D  20                 	db	32
   934  00FC6E  25                 	db	37
   935  00FC6F  64                 	db	100	;'d'
   936  00FC70  20                 	db	32
   937  00FC71  4D                 	db	77	;'M'
   938  00FC72  61                 	db	97	;'a'
   939  00FC73  78                 	db	120	;'x'
   940  00FC74  20                 	db	32
   941  00FC75  25                 	db	37
   942  00FC76  64                 	db	100	;'d'
   943  00FC77  20                 	db	32
   944  00FC78  4D                 	db	77	;'M'
   945  00FC79  45                 	db	69	;'E'
   946  00FC7A  41                 	db	65	;'A'
   947  00FC7B  4E                 	db	78	;'N'
   948  00FC7C  20                 	db	32
   949  00FC7D  25                 	db	37
   950  00FC7E  64                 	db	100	;'d'
   951  00FC7F  0A                 	db	10
   952  00FC80  00                 	db	0
   953  00FC81                     STR_24:
   954                           
   955                           ; BSR set to: 2
   956  00FC81  50                 	db	80	;'P'
   957  00FC82  45                 	db	69	;'E'
   958  00FC83  20                 	db	32
   959  00FC84  4F                 	db	79	;'O'
   960  00FC85  53                 	db	83	;'S'
   961  00FC86  43                 	db	67	;'C'
   962  00FC87  20                 	db	32
   963  00FC88  54                 	db	84	;'T'
   964  00FC89  20                 	db	32
   965  00FC8A  25                 	db	37
   966  00FC8B  64                 	db	100	;'d'
   967  00FC8C  20                 	db	32
   968  00FC8D  2D                 	db	45
   969  00FC8E  20                 	db	32
   970  00FC8F  50                 	db	80	;'P'
   971  00FC90  69                 	db	105	;'i'
   972  00FC91  20                 	db	32
   973  00FC92  25                 	db	37
   974  00FC93  64                 	db	100	;'d'
   975  00FC94  20                 	db	32
   976  00FC95  50                 	db	80	;'P'
   977  00FC96  30                 	db	48	;'0'
   978  00FC97  20                 	db	32
   979  00FC98  25                 	db	37
   980  00FC99  64                 	db	100	;'d'
   981  00FC9A  0A                 	db	10
   982  00FC9B  00                 	db	0
   983  00FC9C                     STR_1:
   984                           
   985                           ; BSR set to: 2
   986  00FC9C  0A                 	db	10
   987  00FC9D  49                 	db	73	;'I'
   988  00FC9E  50                 	db	80	;'P'
   989  00FC9F  4F                 	db	79	;'O'
   990  00FCA0  53                 	db	83	;'S'
   991  00FCA1  20                 	db	32
   992  00FCA2  4C                 	db	76	;'L'
   993  00FCA3  43                 	db	67	;'C'
   994  00FCA4  20                 	db	32
   995  00FCA5  25                 	db	37
   996  00FCA6  64                 	db	100	;'d'
   997  00FCA7  20                 	db	32
   998  00FCA8  50                 	db	80	;'P'
   999  00FCA9  6C                 	db	108	;'l'
  1000  00FCAA  61                 	db	97	;'a'
  1001  00FCAB  74                 	db	116	;'t'
  1002  00FCAC  20                 	db	32
  1003  00FCAD  25                 	db	37
  1004  00FCAE  64                 	db	100	;'d'
  1005  00FCAF  20                 	db	32
  1006  00FCB0  46                 	db	70	;'F'
  1007  00FCB1  49                 	db	73	;'I'
  1008  00FCB2  20                 	db	32
  1009  00FCB3  25                 	db	37
  1010  00FCB4  64                 	db	100	;'d'
  1011  00FCB5  0A                 	db	10
  1012  00FCB6  00                 	db	0
  1013  00FCB7                     STR_37:
  1014                           
  1015                           ; BSR set to: 2
  1016  00FCB7  25                 	db	37
  1017  00FCB8  32                 	db	50	;'2'
  1018  00FCB9  64                 	db	100	;'d'
  1019  00FCBA  20                 	db	32
  1020  00FCBB  25                 	db	37
  1021  00FCBC  32                 	db	50	;'2'
  1022  00FCBD  64                 	db	100	;'d'
  1023  00FCBE  20                 	db	32
  1024  00FCBF  25                 	db	37
  1025  00FCC0  32                 	db	50	;'2'
  1026  00FCC1  64                 	db	100	;'d'
  1027  00FCC2  20                 	db	32
  1028  00FCC3  25                 	db	37
  1029  00FCC4  32                 	db	50	;'2'
  1030  00FCC5  64                 	db	100	;'d'
  1031  00FCC6  20                 	db	32
  1032  00FCC7  2D                 	db	45
  1033  00FCC8  2D                 	db	45
  1034  00FCC9  2D                 	db	45
  1035  00FCCA  2D                 	db	45
  1036  00FCCB  00                 	db	0
  1037  00FCCC                     STR_23:
  1038                           
  1039                           ; BSR set to: 2
  1040  00FCCC  50                 	db	80	;'P'
  1041  00FCCD  45                 	db	69	;'E'
  1042  00FCCE  20                 	db	32
  1043  00FCCF  56                 	db	86	;'V'
  1044  00FCD0  43                 	db	67	;'C'
  1045  00FCD1  20                 	db	32
  1046  00FCD2  54                 	db	84	;'T'
  1047  00FCD3  20                 	db	32
  1048  00FCD4  25                 	db	37
  1049  00FCD5  64                 	db	100	;'d'
  1050  00FCD6  20                 	db	32
  1051  00FCD7  2D                 	db	45
  1052  00FCD8  20                 	db	32
  1053  00FCD9  50                 	db	80	;'P'
  1054  00FCDA  69                 	db	105	;'i'
  1055  00FCDB  20                 	db	32
  1056  00FCDC  25                 	db	37
  1057  00FCDD  64                 	db	100	;'d'
  1058  00FCDE  0A                 	db	10
  1059  00FCDF  00                 	db	0
  1060  00FCE0                     STR_16:
  1061                           
  1062                           ; BSR set to: 2
  1063  00FCE0  50                 	db	80	;'P'
  1064  00FCE1  49                 	db	73	;'I'
  1065  00FCE2  2D                 	db	45
  1066  00FCE3  56                 	db	86	;'V'
  1067  00FCE4  43                 	db	67	;'C'
  1068  00FCE5  20                 	db	32
  1069  00FCE6  54                 	db	84	;'T'
  1070  00FCE7  20                 	db	32
  1071  00FCE8  25                 	db	37
  1072  00FCE9  64                 	db	100	;'d'
  1073  00FCEA  20                 	db	32
  1074  00FCEB  2D                 	db	45
  1075  00FCEC  20                 	db	32
  1076  00FCED  50                 	db	80	;'P'
  1077  00FCEE  69                 	db	105	;'i'
  1078  00FCEF  20                 	db	32
  1079  00FCF0  25                 	db	37
  1080  00FCF1  64                 	db	100	;'d'
  1081  00FCF2  0A                 	db	10
  1082  00FCF3  00                 	db	0
  1083  00FCF4                     STR_26:
  1084                           
  1085                           ; BSR set to: 2
  1086  00FCF4  50                 	db	80	;'P'
  1087  00FCF5  45                 	db	69	;'E'
  1088  00FCF6  20                 	db	32
  1089  00FCF7  56                 	db	86	;'V'
  1090  00FCF8  4F                 	db	79	;'O'
  1091  00FCF9  20                 	db	32
  1092  00FCFA  54                 	db	84	;'T'
  1093  00FCFB  20                 	db	32
  1094  00FCFC  25                 	db	37
  1095  00FCFD  64                 	db	100	;'d'
  1096  00FCFE  20                 	db	32
  1097  00FCFF  2D                 	db	45
  1098  00FD00  20                 	db	32
  1099  00FD01  50                 	db	80	;'P'
  1100  00FD02  69                 	db	105	;'i'
  1101  00FD03  20                 	db	32
  1102  00FD04  25                 	db	37
  1103  00FD05  64                 	db	100	;'d'
  1104  00FD06  0A                 	db	10
  1105  00FD07  00                 	db	0
  1106  00FD08                     STR_4:
  1107                           
  1108                           ; BSR set to: 2
  1109  00FD08  57                 	db	87	;'W'
  1110  00FD09  61                 	db	97	;'a'
  1111  00FD0A  69                 	db	105	;'i'
  1112  00FD0B  74                 	db	116	;'t'
  1113  00FD0C  20                 	db	32
  1114  00FD0D  66                 	db	102	;'f'
  1115  00FD0E  6F                 	db	111	;'o'
  1116  00FD0F  72                 	db	114	;'r'
  1117  00FD10  20                 	db	32
  1118  00FD11  6B                 	db	107	;'k'
  1119  00FD12  65                 	db	101	;'e'
  1120  00FD13  79                 	db	121	;'y'
  1121  00FD14  20                 	db	32
  1122  00FD15  70                 	db	112	;'p'
  1123  00FD16  72                 	db	114	;'r'
  1124  00FD17  65                 	db	101	;'e'
  1125  00FD18  73                 	db	115	;'s'
  1126  00FD19  73                 	db	115	;'s'
  1127  00FD1A  0A                 	db	10
  1128  00FD1B  00                 	db	0
  1129  00FD1C                     STR_68:
  1130                           
  1131                           ; BSR set to: 2
  1132  00FD1C  56                 	db	86	;'V'
  1133  00FD1D  41                 	db	65	;'A'
  1134  00FD1E  4C                 	db	76	;'L'
  1135  00FD1F  56                 	db	86	;'V'
  1136  00FD20  45                 	db	69	;'E'
  1137  00FD21  20                 	db	32
  1138  00FD22  43                 	db	67	;'C'
  1139  00FD23  48                 	db	72	;'H'
  1140  00FD24  45                 	db	69	;'E'
  1141  00FD25  43                 	db	67	;'C'
  1142  00FD26  4B                 	db	75	;'K'
  1143  00FD27  20                 	db	32
  1144  00FD28  45                 	db	69	;'E'
  1145  00FD29  52                 	db	82	;'R'
  1146  00FD2A  52                 	db	82	;'R'
  1147  00FD2B  4F                 	db	79	;'O'
  1148  00FD2C  52                 	db	82	;'R'
  1149  00FD2D  0A                 	db	10
  1150  00FD2E  00                 	db	0
  1151  00FD2F                     STR_64:
  1152                           
  1153                           ; BSR set to: 2
  1154  00FD2F  4D                 	db	77	;'M'
  1155  00FD30  53                 	db	83	;'S'
  1156  00FD31  3A                 	db	58	;':'
  1157  00FD32  20                 	db	32
  1158  00FD33  25                 	db	37
  1159  00FD34  20                 	db	32
  1160  00FD35  33                 	db	51	;'3'
  1161  00FD36  64                 	db	100	;'d'
  1162  00FD37  20                 	db	32
  1163  00FD38  41                 	db	65	;'A'
  1164  00FD39  53                 	db	83	;'S'
  1165  00FD3A  3A                 	db	58	;':'
  1166  00FD3B  20                 	db	32
  1167  00FD3C  25                 	db	37
  1168  00FD3D  20                 	db	32
  1169  00FD3E  33                 	db	51	;'3'
  1170  00FD3F  64                 	db	100	;'d'
  1171  00FD40  20                 	db	32
  1172  00FD41  00                 	db	0
  1173  00FD42                     STR_51:
  1174                           
  1175                           ; BSR set to: 2
  1176  00FD42  25                 	db	37
  1177  00FD43  31                 	db	49	;'1'
  1178  00FD44  64                 	db	100	;'d'
  1179  00FD45  20                 	db	32
  1180  00FD46  20                 	db	32
  1181  00FD47  20                 	db	32
  1182  00FD48  20                 	db	32
  1183  00FD49  20                 	db	32
  1184  00FD4A  20                 	db	32
  1185  00FD4B  20                 	db	32
  1186  00FD4C  20                 	db	32
  1187  00FD4D  20                 	db	32
  1188  00FD4E  20                 	db	32
  1189  00FD4F  20                 	db	32
  1190  00FD50  20                 	db	32
  1191  00FD51  20                 	db	32
  1192  00FD52  20                 	db	32
  1193  00FD53  20                 	db	32
  1194  00FD54  00                 	db	0
  1195  00FD55                     STR_38:
  1196                           
  1197                           ; BSR set to: 2
  1198  00FD55  25                 	db	37
  1199  00FD56  32                 	db	50	;'2'
  1200  00FD57  64                 	db	100	;'d'
  1201  00FD58  20                 	db	32
  1202  00FD59  25                 	db	37
  1203  00FD5A  32                 	db	50	;'2'
  1204  00FD5B  64                 	db	100	;'d'
  1205  00FD5C  20                 	db	32
  1206  00FD5D  2D                 	db	45
  1207  00FD5E  2D                 	db	45
  1208  00FD5F  20                 	db	32
  1209  00FD60  25                 	db	37
  1210  00FD61  32                 	db	50	;'2'
  1211  00FD62  64                 	db	100	;'d'
  1212  00FD63  20                 	db	32
  1213  00FD64  25                 	db	37
  1214  00FD65  34                 	db	52	;'4'
  1215  00FD66  64                 	db	100	;'d'
  1216  00FD67  00                 	db	0
  1217  00FD68                     STR_5:
  1218                           
  1219                           ; BSR set to: 2
  1220  00FD68  50                 	db	80	;'P'
  1221  00FD69  52                 	db	82	;'R'
  1222  00FD6A  45                 	db	69	;'E'
  1223  00FD6B  53                 	db	83	;'S'
  1224  00FD6C  53                 	db	83	;'S'
  1225  00FD6D  20                 	db	32
  1226  00FD6E  2B                 	db	43
  1227  00FD6F  20                 	db	32
  1228  00FD70  54                 	db	84	;'T'
  1229  00FD71  4F                 	db	79	;'O'
  1230  00FD72  20                 	db	32
  1231  00FD73  52                 	db	82	;'R'
  1232  00FD74  45                 	db	69	;'E'
  1233  00FD75  50                 	db	80	;'P'
  1234  00FD76  45                 	db	69	;'E'
  1235  00FD77  41                 	db	65	;'A'
  1236  00FD78  54                 	db	84	;'T'
  1237  00FD79  20                 	db	32
  1238  00FD7A  00                 	db	0
  1239  00FD7B                     STR_69:
  1240                           
  1241                           ; BSR set to: 2
  1242  00FD7B  46                 	db	70	;'F'
  1243  00FD7C  4C                 	db	76	;'L'
  1244  00FD7D  4F                 	db	79	;'O'
  1245  00FD7E  57                 	db	87	;'W'
  1246  00FD7F  20                 	db	32
  1247  00FD80  52                 	db	82	;'R'
  1248  00FD81  41                 	db	65	;'A'
  1249  00FD82  54                 	db	84	;'T'
  1250  00FD83  45                 	db	69	;'E'
  1251  00FD84  20                 	db	32
  1252  00FD85  20                 	db	32
  1253  00FD86  20                 	db	32
  1254  00FD87  20                 	db	32
  1255  00FD88  20                 	db	32
  1256  00FD89  20                 	db	32
  1257  00FD8A  20                 	db	32
  1258  00FD8B  20                 	db	32
  1259  00FD8C  00                 	db	0
  1260  00FD8D                     STR_95:
  1261                           
  1262                           ; BSR set to: 2
  1263  00FD8D  43                 	db	67	;'C'
  1264  00FD8E  41                 	db	65	;'A'
  1265  00FD8F  4C                 	db	76	;'L'
  1266  00FD90  20                 	db	32
  1267  00FD91  45                 	db	69	;'E'
  1268  00FD92  52                 	db	82	;'R'
  1269  00FD93  52                 	db	82	;'R'
  1270  00FD94  4F                 	db	79	;'O'
  1271  00FD95  52                 	db	82	;'R'
  1272  00FD96  2E                 	db	46
  1273  00FD97  20                 	db	32
  1274  00FD98  52                 	db	82	;'R'
  1275  00FD99  45                 	db	69	;'E'
  1276  00FD9A  54                 	db	84	;'T'
  1277  00FD9B  52                 	db	82	;'R'
  1278  00FD9C  59                 	db	89	;'Y'
  1279  00FD9D  20                 	db	32
  1280  00FD9E  00                 	db	0
  1281  00FD9F                     STR_75:
  1282                           
  1283                           ; BSR set to: 2
  1284  00FD9F  46                 	db	70	;'F'
  1285  00FDA0  4C                 	db	76	;'L'
  1286  00FDA1  4F                 	db	79	;'O'
  1287  00FDA2  57                 	db	87	;'W'
  1288  00FDA3  3A                 	db	58	;':'
  1289  00FDA4  20                 	db	32
  1290  00FDA5  25                 	db	37
  1291  00FDA6  20                 	db	32
  1292  00FDA7  33                 	db	51	;'3'
  1293  00FDA8  64                 	db	100	;'d'
  1294  00FDA9  20                 	db	32
  1295  00FDAA  4C                 	db	76	;'L'
  1296  00FDAB  2F                 	db	47
  1297  00FDAC  6D                 	db	109	;'m'
  1298  00FDAD  69                 	db	105	;'i'
  1299  00FDAE  6E                 	db	110	;'n'
  1300  00FDAF  20                 	db	32
  1301  00FDB0  00                 	db	0
  1302  00FDB1                     STR_78:
  1303                           
  1304                           ; BSR set to: 2
  1305  00FDB1  53                 	db	83	;'S'
  1306  00FDB2  45                 	db	69	;'E'
  1307  00FDB3  4C                 	db	76	;'L'
  1308  00FDB4  46                 	db	70	;'F'
  1309  00FDB5  2D                 	db	45
  1310  00FDB6  54                 	db	84	;'T'
  1311  00FDB7  45                 	db	69	;'E'
  1312  00FDB8  53                 	db	83	;'S'
  1313  00FDB9  54                 	db	84	;'T'
  1314  00FDBA  20                 	db	32
  1315  00FDBB  20                 	db	32
  1316  00FDBC  20                 	db	32
  1317  00FDBD  20                 	db	32
  1318  00FDBE  20                 	db	32
  1319  00FDBF  20                 	db	32
  1320  00FDC0  20                 	db	32
  1321  00FDC1  00                 	db	0
  1322  00FDC2                     STR_89:
  1323                           
  1324                           ; BSR set to: 2
  1325  00FDC2  56                 	db	86	;'V'
  1326  00FDC3  44                 	db	68	;'D'
  1327  00FDC4  44                 	db	68	;'D'
  1328  00FDC5  20                 	db	32
  1329  00FDC6  4E                 	db	78	;'N'
  1330  00FDC7  4F                 	db	79	;'O'
  1331  00FDC8  49                 	db	73	;'I'
  1332  00FDC9  53                 	db	83	;'S'
  1333  00FDCA  59                 	db	89	;'Y'
  1334  00FDCB  20                 	db	32
  1335  00FDCC  20                 	db	32
  1336  00FDCD  20                 	db	32
  1337  00FDCE  20                 	db	32
  1338  00FDCF  20                 	db	32
  1339  00FDD0  20                 	db	32
  1340  00FDD1  20                 	db	32
  1341  00FDD2  00                 	db	0
  1342  00FDD3                     STR_81:
  1343                           
  1344                           ; BSR set to: 2
  1345  00FDD3  41                 	db	65	;'A'
  1346  00FDD4  49                 	db	73	;'I'
  1347  00FDD5  52                 	db	82	;'R'
  1348  00FDD6  57                 	db	87	;'W'
  1349  00FDD7  41                 	db	65	;'A'
  1350  00FDD8  59                 	db	89	;'Y'
  1351  00FDD9  20                 	db	32
  1352  00FDDA  4F                 	db	79	;'O'
  1353  00FDDB  50                 	db	80	;'P'
  1354  00FDDC  45                 	db	69	;'E'
  1355  00FDDD  4E                 	db	78	;'N'
  1356  00FDDE  20                 	db	32
  1357  00FDDF  20                 	db	32
  1358  00FDE0  20                 	db	32
  1359  00FDE1  20                 	db	32
  1360  00FDE2  20                 	db	32
  1361  00FDE3  00                 	db	0
  1362  00FDE4                     STR_79:
  1363                           
  1364                           ; BSR set to: 2
  1365  00FDE4  44                 	db	68	;'D'
  1366  00FDE5  49                 	db	73	;'I'
  1367  00FDE6  53                 	db	83	;'S'
  1368  00FDE7  50                 	db	80	;'P'
  1369  00FDE8  4C                 	db	76	;'L'
  1370  00FDE9  41                 	db	65	;'A'
  1371  00FDEA  59                 	db	89	;'Y'
  1372  00FDEB  20                 	db	32
  1373  00FDEC  54                 	db	84	;'T'
  1374  00FDED  45                 	db	69	;'E'
  1375  00FDEE  53                 	db	83	;'S'
  1376  00FDEF  54                 	db	84	;'T'
  1377  00FDF0  20                 	db	32
  1378  00FDF1  20                 	db	32
  1379  00FDF2  20                 	db	32
  1380  00FDF3  20                 	db	32
  1381  00FDF4  00                 	db	0
  1382  00FDF5                     STR_76:
  1383                           
  1384                           ; BSR set to: 2
  1385  00FDF5  46                 	db	70	;'F'
  1386  00FDF6  4C                 	db	76	;'L'
  1387  00FDF7  4F                 	db	79	;'O'
  1388  00FDF8  57                 	db	87	;'W'
  1389  00FDF9  20                 	db	32
  1390  00FDFA  54                 	db	84	;'T'
  1391  00FDFB  4F                 	db	79	;'O'
  1392  00FDFC  4F                 	db	79	;'O'
  1393  00FDFD  20                 	db	32
  1394  00FDFE  4C                 	db	76	;'L'
  1395  00FDFF  4F                 	db	79	;'O'
  1396  00FE00  57                 	db	87	;'W'
  1397  00FE01  20                 	db	32
  1398  00FE02  20                 	db	32
  1399  00FE03  20                 	db	32
  1400  00FE04  20                 	db	32
  1401  00FE05  00                 	db	0
  1402  00FE06                     STR_74:
  1403                           
  1404                           ; BSR set to: 2
  1405  00FE06  46                 	db	70	;'F'
  1406  00FE07  4C                 	db	76	;'L'
  1407  00FE08  4F                 	db	79	;'O'
  1408  00FE09  57                 	db	87	;'W'
  1409  00FE0A  20                 	db	32
  1410  00FE0B  54                 	db	84	;'T'
  1411  00FE0C  4F                 	db	79	;'O'
  1412  00FE0D  4F                 	db	79	;'O'
  1413  00FE0E  20                 	db	32
  1414  00FE0F  48                 	db	72	;'H'
  1415  00FE10  49                 	db	73	;'I'
  1416  00FE11  47                 	db	71	;'G'
  1417  00FE12  48                 	db	72	;'H'
  1418  00FE13  20                 	db	32
  1419  00FE14  20                 	db	32
  1420  00FE15  20                 	db	32
  1421  00FE16  00                 	db	0
  1422  00FE17                     STR_94:
  1423                           
  1424                           ; BSR set to: 2
  1425  00FE17  4D                 	db	77	;'M'
  1426  00FE18  4F                 	db	79	;'O'
  1427  00FE19  4E                 	db	78	;'N'
  1428  00FE1A  49                 	db	73	;'I'
  1429  00FE1B  54                 	db	84	;'T'
  1430  00FE1C  4F                 	db	79	;'O'
  1431  00FE1D  52                 	db	82	;'R'
  1432  00FE1E  20                 	db	32
  1433  00FE1F  45                 	db	69	;'E'
  1434  00FE20  52                 	db	82	;'R'
  1435  00FE21  52                 	db	82	;'R'
  1436  00FE22  4F                 	db	79	;'O'
  1437  00FE23  52                 	db	82	;'R'
  1438  00FE24  20                 	db	32
  1439  00FE25  20                 	db	32
  1440  00FE26  20                 	db	32
  1441  00FE27  00                 	db	0
  1442  00FE28                     STR_86:
  1443                           
  1444                           ; BSR set to: 2
  1445  00FE28  49                 	db	73	;'I'
  1446  00FE29  4E                 	db	78	;'N'
  1447  00FE2A  54                 	db	84	;'T'
  1448  00FE2B  45                 	db	69	;'E'
  1449  00FE2C  52                 	db	82	;'R'
  1450  00FE2D  4E                 	db	78	;'N'
  1451  00FE2E  41                 	db	65	;'A'
  1452  00FE2F  4C                 	db	76	;'L'
  1453  00FE30  20                 	db	32
  1454  00FE31  45                 	db	69	;'E'
  1455  00FE32  52                 	db	82	;'R'
  1456  00FE33  52                 	db	82	;'R'
  1457  00FE34  4F                 	db	79	;'O'
  1458  00FE35  52                 	db	82	;'R'
  1459  00FE36  20                 	db	32
  1460  00FE37  20                 	db	32
  1461  00FE38  00                 	db	0
  1462  00FE39                     STR_103:
  1463                           
  1464                           ; BSR set to: 2
  1465  00FE39  53                 	db	83	;'S'
  1466  00FE3A  56                 	db	86	;'V'
  1467  00FE3B  31                 	db	49	;'1'
  1468  00FE3C  20                 	db	32
  1469  00FE3D  56                 	db	86	;'V'
  1470  00FE3E  61                 	db	97	;'a'
  1471  00FE3F  6C                 	db	108	;'l'
  1472  00FE40  76                 	db	118	;'v'
  1473  00FE41  65                 	db	101	;'e'
  1474  00FE42  20                 	db	32
  1475  00FE43  65                 	db	101	;'e'
  1476  00FE44  72                 	db	114	;'r'
  1477  00FE45  72                 	db	114	;'r'
  1478  00FE46  6F                 	db	111	;'o'
  1479  00FE47  72                 	db	114	;'r'
  1480  00FE48  20                 	db	32
  1481  00FE49  00                 	db	0
  1482  00FE4A                     STR_99:
  1483                           
  1484                           ; BSR set to: 2
  1485  00FE4A  53                 	db	83	;'S'
  1486  00FE4B  56                 	db	86	;'V'
  1487  00FE4C  32                 	db	50	;'2'
  1488  00FE4D  20                 	db	32
  1489  00FE4E  56                 	db	86	;'V'
  1490  00FE4F  61                 	db	97	;'a'
  1491  00FE50  6C                 	db	108	;'l'
  1492  00FE51  76                 	db	118	;'v'
  1493  00FE52  65                 	db	101	;'e'
  1494  00FE53  20                 	db	32
  1495  00FE54  65                 	db	101	;'e'
  1496  00FE55  72                 	db	114	;'r'
  1497  00FE56  72                 	db	114	;'r'
  1498  00FE57  6F                 	db	111	;'o'
  1499  00FE58  72                 	db	114	;'r'
  1500  00FE59  20                 	db	32
  1501  00FE5A  00                 	db	0
  1502  00FE5B                     STR_80:
  1503                           
  1504                           ; BSR set to: 2
  1505  00FE5B  53                 	db	83	;'S'
  1506  00FE5C  45                 	db	69	;'E'
  1507  00FE5D  4C                 	db	76	;'L'
  1508  00FE5E  46                 	db	70	;'F'
  1509  00FE5F  2D                 	db	45
  1510  00FE60  54                 	db	84	;'T'
  1511  00FE61  45                 	db	69	;'E'
  1512  00FE62  53                 	db	83	;'S'
  1513  00FE63  54                 	db	84	;'T'
  1514  00FE64  2E                 	db	46
  1515  00FE65  20                 	db	32
  1516  00FE66  4C                 	db	76	;'L'
  1517  00FE67  45                 	db	69	;'E'
  1518  00FE68  41                 	db	65	;'A'
  1519  00FE69  56                 	db	86	;'V'
  1520  00FE6A  45                 	db	69	;'E'
  1521  00FE6B  00                 	db	0
  1522  00FE6C                     STR_91:
  1523                           
  1524                           ; BSR set to: 2
  1525  00FE6C  43                 	db	67	;'C'
  1526  00FE6D  41                 	db	65	;'A'
  1527  00FE6E  4C                 	db	76	;'L'
  1528  00FE6F  20                 	db	32
  1529  00FE70  50                 	db	80	;'P'
  1530  00FE71  52                 	db	82	;'R'
  1531  00FE72  45                 	db	69	;'E'
  1532  00FE73  53                 	db	83	;'S'
  1533  00FE74  53                 	db	83	;'S'
  1534  00FE75  20                 	db	32
  1535  00FE76  42                 	db	66	;'B'
  1536  00FE77  52                 	db	82	;'R'
  1537  00FE78  45                 	db	69	;'E'
  1538  00FE79  41                 	db	65	;'A'
  1539  00FE7A  54                 	db	84	;'T'
  1540  00FE7B  48                 	db	72	;'H'
  1541  00FE7C  00                 	db	0
  1542  00FE7D                     STR_87:
  1543                           
  1544                           ; BSR set to: 2
  1545  00FE7D  56                 	db	86	;'V'
  1546  00FE7E  44                 	db	68	;'D'
  1547  00FE7F  44                 	db	68	;'D'
  1548  00FE80  20                 	db	32
  1549  00FE81  4F                 	db	79	;'O'
  1550  00FE82  4F                 	db	79	;'O'
  1551  00FE83  4C                 	db	76	;'L'
  1552  00FE84  3A                 	db	58	;':'
  1553  00FE85  20                 	db	32
  1554  00FE86  25                 	db	37
  1555  00FE87  20                 	db	32
  1556  00FE88  33                 	db	51	;'3'
  1557  00FE89  64                 	db	100	;'d'
  1558  00FE8A  20                 	db	32
  1559  00FE8B  6D                 	db	109	;'m'
  1560  00FE8C  56                 	db	86	;'V'
  1561  00FE8D  00                 	db	0
  1562  00FE8E                     STR_49:
  1563                           
  1564                           ; BSR set to: 2
  1565  00FE8E  25                 	db	37
  1566  00FE8F  33                 	db	51	;'3'
  1567  00FE90  64                 	db	100	;'d'
  1568  00FE91  20                 	db	32
  1569  00FE92  25                 	db	37
  1570  00FE93  33                 	db	51	;'3'
  1571  00FE94  64                 	db	100	;'d'
  1572  00FE95  20                 	db	32
  1573  00FE96  25                 	db	37
  1574  00FE97  33                 	db	51	;'3'
  1575  00FE98  64                 	db	100	;'d'
  1576  00FE99  20                 	db	32
  1577  00FE9A  20                 	db	32
  1578  00FE9B  20                 	db	32
  1579  00FE9C  20                 	db	32
  1580  00FE9D  20                 	db	32
  1581  00FE9E  00                 	db	0
  1582  00FE9F                     STR_48:
  1583                           
  1584                           ; BSR set to: 2
  1585  00FE9F  50                 	db	80	;'P'
  1586  00FEA0  52                 	db	82	;'R'
  1587  00FEA1  45                 	db	69	;'E'
  1588  00FEA2  53                 	db	83	;'S'
  1589  00FEA3  53                 	db	83	;'S'
  1590  00FEA4  20                 	db	32
  1591  00FEA5  42                 	db	66	;'B'
  1592  00FEA6  50                 	db	80	;'P'
  1593  00FEA7  4D                 	db	77	;'M'
  1594  00FEA8  20                 	db	32
  1595  00FEA9  54                 	db	84	;'T'
  1596  00FEAA  4F                 	db	79	;'O'
  1597  00FEAB  20                 	db	32
  1598  00FEAC  20                 	db	32
  1599  00FEAD  20                 	db	32
  1600  00FEAE  20                 	db	32
  1601  00FEAF  00                 	db	0
  1602  00FEB0                     STR_36:
  1603                           
  1604                           ; BSR set to: 2
  1605  00FEB0  56                 	db	86	;'V'
  1606  00FEB1  65                 	db	101	;'e'
  1607  00FEB2  6E                 	db	110	;'n'
  1608  00FEB3  74                 	db	116	;'t'
  1609  00FEB4  69                 	db	105	;'i'
  1610  00FEB5  6C                 	db	108	;'l'
  1611  00FEB6  61                 	db	97	;'a'
  1612  00FEB7  74                 	db	116	;'t'
  1613  00FEB8  6F                 	db	111	;'o'
  1614  00FEB9  72                 	db	114	;'r'
  1615  00FEBA  20                 	db	32
  1616  00FEBB  56                 	db	86	;'V'
  1617  00FEBC  31                 	db	49	;'1'
  1618  00FEBD  2E                 	db	46
  1619  00FEBE  30                 	db	48	;'0'
  1620  00FEBF  20                 	db	32
  1621  00FEC0  00                 	db	0
  1622  00FEC1                     STR_39:
  1623                           
  1624                           ; BSR set to: 2
  1625  00FEC1  2D                 	db	45
  1626  00FEC2  2D                 	db	45
  1627  00FEC3  2D                 	db	45
  1628  00FEC4  2D                 	db	45
  1629  00FEC5  4F                 	db	79	;'O'
  1630  00FEC6  46                 	db	70	;'F'
  1631  00FEC7  46                 	db	70	;'F'
  1632  00FEC8  2D                 	db	45
  1633  00FEC9  53                 	db	83	;'S'
  1634  00FECA  54                 	db	84	;'T'
  1635  00FECB  41                 	db	65	;'A'
  1636  00FECC  54                 	db	84	;'T'
  1637  00FECD  45                 	db	69	;'E'
  1638  00FECE  2D                 	db	45
  1639  00FECF  2D                 	db	45
  1640  00FED0  2D                 	db	45
  1641  00FED1  00                 	db	0
  1642  00FED2                     STR_35:
  1643                           
  1644                           ; BSR set to: 2
  1645  00FED2  4F                 	db	79	;'O'
  1646  00FED3  78                 	db	120	;'x'
  1647  00FED4  79                 	db	121	;'y'
  1648  00FED5  56                 	db	86	;'V'
  1649  00FED6  69                 	db	105	;'i'
  1650  00FED7  74                 	db	116	;'t'
  1651  00FED8  61                 	db	97	;'a'
  1652  00FED9  45                 	db	69	;'E'
  1653  00FEDA  6D                 	db	109	;'m'
  1654  00FEDB  65                 	db	101	;'e'
  1655  00FEDC  72                 	db	114	;'r'
  1656  00FEDD  67                 	db	103	;'g'
  1657  00FEDE  65                 	db	101	;'e'
  1658  00FEDF  6E                 	db	110	;'n'
  1659  00FEE0  63                 	db	99	;'c'
  1660  00FEE1  79                 	db	121	;'y'
  1661  00FEE2  00                 	db	0
  1662  00FEE3                     STR_2:
  1663                           
  1664                           ; BSR set to: 2
  1665  00FEE3  20                 	db	32
  1666  00FEE4  20                 	db	32
  1667  00FEE5  20                 	db	32
  1668  00FEE6  20                 	db	32
  1669  00FEE7  20                 	db	32
  1670  00FEE8  20                 	db	32
  1671  00FEE9  20                 	db	32
  1672  00FEEA  20                 	db	32
  1673  00FEEB  20                 	db	32
  1674  00FEEC  20                 	db	32
  1675  00FEED  20                 	db	32
  1676  00FEEE  20                 	db	32
  1677  00FEEF  20                 	db	32
  1678  00FEF0  20                 	db	32
  1679  00FEF1  20                 	db	32
  1680  00FEF2  20                 	db	32
  1681  00FEF3  00                 	db	0
  1682  00FEF4                     STR_6:
  1683                           
  1684                           ; BSR set to: 2
  1685  00FEF4  50                 	db	80	;'P'
  1686  00FEF5  52                 	db	82	;'R'
  1687  00FEF6  45                 	db	69	;'E'
  1688  00FEF7  53                 	db	83	;'S'
  1689  00FEF8  53                 	db	83	;'S'
  1690  00FEF9  20                 	db	32
  1691  00FEFA  2D                 	db	45
  1692  00FEFB  20                 	db	32
  1693  00FEFC  54                 	db	84	;'T'
  1694  00FEFD  4F                 	db	79	;'O'
  1695  00FEFE  20                 	db	32
  1696  00FEFF  45                 	db	69	;'E'
  1697  00FF00  58                 	db	88	;'X'
  1698  00FF01  49                 	db	73	;'I'
  1699  00FF02  54                 	db	84	;'T'
  1700  00FF03  20                 	db	32
  1701  00FF04  00                 	db	0
  1702  00FF05                     STR_19:
  1703                           
  1704                           ; BSR set to: 2
  1705  00FF05  2D                 	db	45
  1706  00FF06  3A                 	db	58	;':'
  1707  00FF07  20                 	db	32
  1708  00FF08  25                 	db	37
  1709  00FF09  64                 	db	100	;'d'
  1710  00FF0A  20                 	db	32
  1711  00FF0B  25                 	db	37
  1712  00FF0C  64                 	db	100	;'d'
  1713  00FF0D  20                 	db	32
  1714  00FF0E  25                 	db	37
  1715  00FF0F  64                 	db	100	;'d'
  1716  00FF10  20                 	db	32
  1717  00FF11  25                 	db	37
  1718  00FF12  64                 	db	100	;'d'
  1719  00FF13  0A                 	db	10
  1720  00FF14  00                 	db	0
  1721  00FF15                     STR_71:
  1722                           
  1723                           ; BSR set to: 2
  1724  00FF15  4D                 	db	77	;'M'
  1725  00FF16  4F                 	db	79	;'O'
  1726  00FF17  4E                 	db	78	;'N'
  1727  00FF18  49                 	db	73	;'I'
  1728  00FF19  54                 	db	84	;'T'
  1729  00FF1A  4F                 	db	79	;'O'
  1730  00FF1B  52                 	db	82	;'R'
  1731  00FF1C  20                 	db	32
  1732  00FF1D  45                 	db	69	;'E'
  1733  00FF1E  52                 	db	82	;'R'
  1734  00FF1F  52                 	db	82	;'R'
  1735  00FF20  4F                 	db	79	;'O'
  1736  00FF21  52                 	db	82	;'R'
  1737  00FF22  00                 	db	0
  1738  00FF23                     STR_18:
  1739                           
  1740                           ; BSR set to: 2
  1741  00FF23  50                 	db	80	;'P'
  1742  00FF24  49                 	db	73	;'I'
  1743  00FF25  2D                 	db	45
  1744  00FF26  4F                 	db	79	;'O'
  1745  00FF27  53                 	db	83	;'S'
  1746  00FF28  56                 	db	86	;'V'
  1747  00FF29  33                 	db	51	;'3'
  1748  00FF2A  20                 	db	32
  1749  00FF2B  54                 	db	84	;'T'
  1750  00FF2C  20                 	db	32
  1751  00FF2D  25                 	db	37
  1752  00FF2E  64                 	db	100	;'d'
  1753  00FF2F  0A                 	db	10
  1754  00FF30  00                 	db	0
  1755  00FF31                     STR_58:
  1756                           
  1757                           ; BSR set to: 2
  1758  00FF31  4C                 	db	76	;'L'
  1759  00FF32  43                 	db	67	;'C'
  1760  00FF33  20                 	db	32
  1761  00FF34  20                 	db	32
  1762  00FF35  20                 	db	32
  1763  00FF36  20                 	db	32
  1764  00FF37  4C                 	db	76	;'L'
  1765  00FF38  52                 	db	82	;'R'
  1766  00FF39  20                 	db	32
  1767  00FF3A  20                 	db	32
  1768  00FF3B  20                 	db	32
  1769  00FF3C  00                 	db	0
  1770  00FF3D                     STR_50:
  1771                           
  1772                           ; BSR set to: 2
  1773  00FF3D  25                 	db	37
  1774  00FF3E  33                 	db	51	;'3'
  1775  00FF3F  64                 	db	100	;'d'
  1776  00FF40  20                 	db	32
  1777  00FF41  20                 	db	32
  1778  00FF42  20                 	db	32
  1779  00FF43  25                 	db	37
  1780  00FF44  33                 	db	51	;'3'
  1781  00FF45  64                 	db	100	;'d'
  1782  00FF46  20                 	db	32
  1783  00FF47  20                 	db	32
  1784  00FF48  00                 	db	0
  1785  00FF49                     STR_57:
  1786                           
  1787                           ; BSR set to: 2
  1788  00FF49  53                 	db	83	;'S'
  1789  00FF4A  32                 	db	50	;'2'
  1790  00FF4B  4F                 	db	79	;'O'
  1791  00FF4C  20                 	db	32
  1792  00FF4D  53                 	db	83	;'S'
  1793  00FF4E  32                 	db	50	;'2'
  1794  00FF4F  43                 	db	67	;'C'
  1795  00FF50  20                 	db	32
  1796  00FF51  53                 	db	83	;'S'
  1797  00FF52  33                 	db	51	;'3'
  1798  00FF53  43                 	db	67	;'C'
  1799  00FF54  00                 	db	0
  1800  00FF55                     STR_54:
  1801                           
  1802                           ; BSR set to: 2
  1803  00FF55  50                 	db	80	;'P'
  1804  00FF56  4F                 	db	79	;'O'
  1805  00FF57  57                 	db	87	;'W'
  1806  00FF58  45                 	db	69	;'E'
  1807  00FF59  52                 	db	82	;'R'
  1808  00FF5A  20                 	db	32
  1809  00FF5B  4F                 	db	79	;'O'
  1810  00FF5C  46                 	db	70	;'F'
  1811  00FF5D  46                 	db	70	;'F'
  1812  00FF5E  20                 	db	32
  1813  00FF5F  00                 	db	0
  1814  00FF60                     STR_60:
  1815                           
  1816                           ; BSR set to: 2
  1817  00FF60  50                 	db	80	;'P'
  1818  00FF61  57                 	db	87	;'W'
  1819  00FF62  52                 	db	82	;'R'
  1820  00FF63  20                 	db	32
  1821  00FF64  54                 	db	84	;'T'
  1822  00FF65  4F                 	db	79	;'O'
  1823  00FF66  20                 	db	32
  1824  00FF67  4F                 	db	79	;'O'
  1825  00FF68  4E                 	db	78	;'N'
  1826  00FF69  20                 	db	32
  1827  00FF6A  00                 	db	0
  1828  00FF6B                     STR_3:
  1829                           
  1830                           ; BSR set to: 2
  1831  00FF6B  50                 	db	80	;'P'
  1832  00FF6C  4F                 	db	79	;'O'
  1833  00FF6D  57                 	db	87	;'W'
  1834  00FF6E  45                 	db	69	;'E'
  1835  00FF6F  52                 	db	82	;'R'
  1836  00FF70  2D                 	db	45
  1837  00FF71  4F                 	db	79	;'O'
  1838  00FF72  46                 	db	70	;'F'
  1839  00FF73  46                 	db	70	;'F'
  1840  00FF74  0A                 	db	10
  1841  00FF75  00                 	db	0
  1842  00FF76                     STR_104:
  1843                           
  1844                           ; BSR set to: 2
  1845  00FF76  43                 	db	67	;'C'
  1846  00FF77  48                 	db	72	;'H'
  1847  00FF78  4B                 	db	75	;'K'
  1848  00FF79  20                 	db	32
  1849  00FF7A  46                 	db	70	;'F'
  1850  00FF7B  4C                 	db	76	;'L'
  1851  00FF7C  4F                 	db	79	;'O'
  1852  00FF7D  57                 	db	87	;'W'
  1853  00FF7E  0A                 	db	10
  1854  00FF7F  00                 	db	0
  1855  00FF80                     STR_70:
  1856                           
  1857                           ; BSR set to: 2
  1858  00FF80  4D                 	db	77	;'M'
  1859  00FF81  6F                 	db	111	;'o'
  1860  00FF82  6E                 	db	110	;'n'
  1861  00FF83  20                 	db	32
  1862  00FF84  65                 	db	101	;'e'
  1863  00FF85  72                 	db	114	;'r'
  1864  00FF86  72                 	db	114	;'r'
  1865  00FF87  6F                 	db	111	;'o'
  1866  00FF88  72                 	db	114	;'r'
  1867  00FF89  00                 	db	0
  1868  00FF8A                     STR_52:
  1869                           
  1870                           ; BSR set to: 2
  1871  00FF8A  25                 	db	37
  1872  00FF8B  34                 	db	52	;'4'
  1873  00FF8C  64                 	db	100	;'d'
  1874  00FF8D  20                 	db	32
  1875  00FF8E  25                 	db	37
  1876  00FF8F  34                 	db	52	;'4'
  1877  00FF90  64                 	db	100	;'d'
  1878  00FF91  20                 	db	32
  1879  00FF92  20                 	db	32
  1880  00FF93  00                 	db	0
  1881  00FF94                     STR_56:
  1882                           
  1883                           ; BSR set to: 2
  1884  00FF94  20                 	db	32
  1885  00FF95  20                 	db	32
  1886  00FF96  20                 	db	32
  1887  00FF97  20                 	db	32
  1888  00FF98  20                 	db	32
  1889  00FF99  20                 	db	32
  1890  00FF9A  42                 	db	66	;'B'
  1891  00FF9B  44                 	db	68	;'D'
  1892  00FF9C  54                 	db	84	;'T'
  1893  00FF9D  00                 	db	0
  1894  00FF9E                     STR_55:
  1895                           
  1896                           ; BSR set to: 2
  1897  00FF9E  56                 	db	86	;'V'
  1898  00FF9F  53                 	db	83	;'S'
  1899  00FFA0  20                 	db	32
  1900  00FFA1  4C                 	db	76	;'L'
  1901  00FFA2  53                 	db	83	;'S'
  1902  00FFA3  20                 	db	32
  1903  00FFA4  42                 	db	66	;'B'
  1904  00FFA5  44                 	db	68	;'D'
  1905  00FFA6  54                 	db	84	;'T'
  1906  00FFA7  00                 	db	0
  1907  00FFA8                     STR_34:
  1908                           
  1909                           ; BSR set to: 2
  1910  00FFA8  4B                 	db	75	;'K'
  1911  00FFA9  45                 	db	69	;'E'
  1912  00FFAA  59                 	db	89	;'Y'
  1913  00FFAB  21                 	db	33
  1914  00FFAC  20                 	db	32
  1915  00FFAD  25                 	db	37
  1916  00FFAE  64                 	db	100	;'d'
  1917  00FFAF  0A                 	db	10
  1918  00FFB0  00                 	db	0
  1919  00FFB1                     STR_28:
  1920                           
  1921                           ; BSR set to: 2
  1922  00FFB1  46                 	db	70	;'F'
  1923  00FFB2  61                 	db	97	;'a'
  1924  00FFB3  74                 	db	116	;'t'
  1925  00FFB4  61                 	db	97	;'a'
  1926  00FFB5  6C                 	db	108	;'l'
  1927  00FFB6  20                 	db	32
  1928  00FFB7  25                 	db	37
  1929  00FFB8  64                 	db	100	;'d'
  1930  00FFB9  00                 	db	0
  1931  00FFBA                     STR_100:
  1932                           
  1933                           ; BSR set to: 2
  1934  00FFBA  43                 	db	67	;'C'
  1935  00FFBB  48                 	db	72	;'H'
  1936  00FFBC  4B                 	db	75	;'K'
  1937  00FFBD  53                 	db	83	;'S'
  1938  00FFBE  56                 	db	86	;'V'
  1939  00FFBF  31                 	db	49	;'1'
  1940  00FFC0  0A                 	db	10
  1941  00FFC1  00                 	db	0
  1942  00FFC2                     STR_96:
  1943                           
  1944                           ; BSR set to: 2
  1945  00FFC2  43                 	db	67	;'C'
  1946  00FFC3  48                 	db	72	;'H'
  1947  00FFC4  4B                 	db	75	;'K'
  1948  00FFC5  53                 	db	83	;'S'
  1949  00FFC6  56                 	db	86	;'V'
  1950  00FFC7  32                 	db	50	;'2'
  1951  00FFC8  0A                 	db	10
  1952  00FFC9  00                 	db	0
  1953  00FFCA                     STR_61:
  1954                           
  1955                           ; BSR set to: 2
  1956  00FFCA  49                 	db	73	;'I'
  1957  00FFCB  32                 	db	50	;'2'
  1958  00FFCC  43                 	db	67	;'C'
  1959  00FFCD  32                 	db	50	;'2'
  1960  00FFCE  20                 	db	32
  1961  00FFCF  45                 	db	69	;'E'
  1962  00FFD0  0A                 	db	10
  1963  00FFD1  00                 	db	0
  1964  00FFD2                     STR_105:
  1965                           
  1966                           ; BSR set to: 2
  1967  00FFD2  20                 	db	32
  1968  00FFD3  4D                 	db	77	;'M'
  1969  00FFD4  2E                 	db	46
  1970  00FFD5  45                 	db	69	;'E'
  1971  00FFD6  52                 	db	82	;'R'
  1972  00FFD7  52                 	db	82	;'R'
  1973  00FFD8  00                 	db	0
  1974  00FFD9                     STR_90:
  1975                           
  1976                           ; BSR set to: 2
  1977  00FFD9  4B                 	db	75	;'K'
  1978  00FFDA  50                 	db	80	;'P'
  1979  00FFDB  20                 	db	32
  1980  00FFDC  25                 	db	37
  1981  00FFDD  64                 	db	100	;'d'
  1982  00FFDE  0A                 	db	10
  1983  00FFDF  00                 	db	0
  1984  00FFE0                     STR_12:
  1985                           
  1986                           ; BSR set to: 2
  1987  00FFE0  0A                 	db	10
  1988  00FFE1  56                 	db	86	;'V'
  1989  00FFE2  4D                 	db	77	;'M'
  1990  00FFE3  65                 	db	101	;'e'
  1991  00FFE4  64                 	db	100	;'d'
  1992  00FFE5  0A                 	db	10
  1993  00FFE6  00                 	db	0
  1994  00FFE7                     STR_11:
  1995                           
  1996                           ; BSR set to: 2
  1997  00FFE7  0A                 	db	10
  1998  00FFE8  56                 	db	86	;'V'
  1999  00FFE9  4C                 	db	76	;'L'
  2000  00FFEA  6F                 	db	111	;'o'
  2001  00FFEB  77                 	db	119	;'w'
  2002  00FFEC  0A                 	db	10
  2003  00FFED  00                 	db	0
  2004  00FFEE                     STR_92:
  2005                           
  2006                           ; BSR set to: 2
  2007  00FFEE  43                 	db	67	;'C'
  2008  00FFEF  41                 	db	65	;'A'
  2009  00FFF0  4C                 	db	76	;'L'
  2010  00FFF1  50                 	db	80	;'P'
  2011  00FFF2  0A                 	db	10
  2012  00FFF3  00                 	db	0
  2013  00FFF4                     STR_20:
  2014                           
  2015                           ; BSR set to: 2
  2016  00FFF4  56                 	db	86	;'V'
  2017  00FFF5  25                 	db	37
  2018  00FFF6  20                 	db	32
  2019  00FFF7  34                 	db	52	;'4'
  2020  00FFF8  64                 	db	100	;'d'
  2021  00FFF9  00                 	db	0
  2022  00FFFA                     STR_21:
  2023                           
  2024                           ; BSR set to: 2
  2025  00FFFA  0A                 	db	10
  2026  00FFFB  45                 	db	69	;'E'
  2027  00FFFC  50                 	db	80	;'P'
  2028  00FFFD  0A                 	db	10
  2029  00FFFE  00                 	db	0
  2030  0000                     
  2031                           ; #config settings
  2032  00FFFF  00                 	db	0	; dummy byte at the end
  2033  0000                     
  2034                           	psect	nvBANK0
  2035  0000D4                     __pnvBANK0:
  2036                           	opt callstack 0
  2037  0000D4                     _uart1TxBufferRemaining:
  2038                           	opt callstack 0
  2039  0000D4                     	ds	1
  2040                           
  2041                           	psect	nvBANK2
  2042  0002E8                     __pnvBANK2:
  2043                           	opt callstack 0
  2044  0002E8                     _TMR6_InterruptHandler:
  2045                           	opt callstack 0
  2046  0002E8                     	ds	2
  2047  0002EA                     _TMR4_InterruptHandler:
  2048                           	opt callstack 0
  2049  0002EA                     	ds	2
  2050  0002EC                     _TMR2_InterruptHandler:
  2051                           	opt callstack 0
  2052  0002EC                     	ds	2
  2053  0002EE                     _timer1ReloadVal:
  2054                           	opt callstack 0
  2055  0002EE                     	ds	2
  2056  0002F0                     _UART1_ErrorHandler:
  2057                           	opt callstack 0
  2058  0002F0                     	ds	2
  2059  0002F2                     _UART1_OverrunErrorHandler:
  2060                           	opt callstack 0
  2061  0002F2                     	ds	2
  2062  0002F4                     _UART1_FramingErrorHandler:
  2063                           	opt callstack 0
  2064  0002F4                     	ds	2
  2065  0002F6                     _UART1_TxInterruptHandler:
  2066                           	opt callstack 0
  2067  0002F6                     	ds	2
  2068  0002F8                     _ADCC_ADTI_InterruptHandler:
  2069                           	opt callstack 0
  2070  0002F8                     	ds	2
  2071  0000                     _PMD7	set	14791
  2072  0000                     _PMD6	set	14790
  2073  0000                     _PMD5	set	14789
  2074  0000                     _PMD4	set	14788
  2075  0000                     _PMD3	set	14787
  2076  0000                     _PMD2	set	14786
  2077  0000                     _PMD1	set	14785
  2078  0000                     _PMD0	set	14784
  2079  0000                     _OSCTUNE	set	14814
  2080  0000                     _OSCFRQ	set	14815
  2081  0000                     _OSCEN	set	14813
  2082  0000                     _OSCCON3	set	14811
  2083  0000                     _OSCCON1	set	14809
  2084  0000                     _PIR4bits	set	14756
  2085  0000                     _PIE4bits	set	14740
  2086  0000                     _PIR7bits	set	14759
  2087  0000                     _PIE7bits	set	14743
  2088  0000                     _PIR9bits	set	14761
  2089  0000                     _PIE9bits	set	14745
  2090  0000                     _PIR5bits	set	14757
  2091  0000                     _PIE5bits	set	14741
  2092  0000                     _PIR6bits	set	14758
  2093  0000                     _PIE6bits	set	14742
  2094  0000                     _PIR3bits	set	14755
  2095  0000                     _PIE3bits	set	14739
  2096  0000                     _PIE1bits	set	14737
  2097  0000                     _PIR1bits	set	14753
  2098  0000                     _I2C2SDAPPS	set	15076
  2099  0000                     _T4INPPS	set	15051
  2100  0000                     _U1RXPPS	set	15077
  2101  0000                     _RC1PPS	set	14865
  2102  0000                     _RB2PPS	set	14858
  2103  0000                     _T6INPPS	set	15052
  2104  0000                     _RB1PPS	set	14857
  2105  0000                     _I2C2SCLPPS	set	15075
  2106  0000                     _INLVLE	set	14980
  2107  0000                     _INLVLD	set	14964
  2108  0000                     _INLVLC	set	14948
  2109  0000                     _INLVLB	set	14932
  2110  0000                     _INLVLA	set	14916
  2111  0000                     _SLRCONE	set	14979
  2112  0000                     _SLRCOND	set	14963
  2113  0000                     _SLRCONC	set	14947
  2114  0000                     _SLRCONB	set	14931
  2115  0000                     _SLRCONA	set	14915
  2116  0000                     _ODCOND	set	14962
  2117  0000                     _ODCONC	set	14946
  2118  0000                     _ODCONB	set	14930
  2119  0000                     _ODCONA	set	14914
  2120  0000                     _ODCONE	set	14978
  2121  0000                     _RD1I2C	set	14971
  2122  0000                     _RD0I2C	set	14970
  2123  0000                     _RC4I2C	set	14955
  2124  0000                     _RC3I2C	set	14954
  2125  0000                     _RB2I2C	set	14939
  2126  0000                     _RB1I2C	set	14938
  2127  0000                     _WPUC	set	14945
  2128  0000                     _WPUA	set	14913
  2129  0000                     _WPUB	set	14929
  2130  0000                     _WPUE	set	14977
  2131  0000                     _WPUD	set	14961
  2132  0000                     _ANSELA	set	14912
  2133  0000                     _ANSELE	set	14976
  2134  0000                     _ANSELB	set	14928
  2135  0000                     _ANSELC	set	14944
  2136  0000                     _ANSELD	set	14960
  2137  0000                     _I2C2PIEbits	set	15716
  2138  0000                     _I2C2PIRbits	set	15715
  2139  0000                     _I2C2ERRbits	set	15712
  2140  0000                     _I2C2CON1bits	set	15710
  2141  0000                     _I2C2TXB	set	15701
  2142  0000                     _I2C2RXB	set	15700
  2143  0000                     _I2C2STAT1bits	set	15714
  2144  0000                     _I2C2CON0bits	set	15709
  2145  0000                     _I2C2CNT	set	15702
  2146  0000                     _I2C2ERR	set	15712
  2147  0000                     _I2C2PIE	set	15716
  2148  0000                     _I2C2PIR	set	15715
  2149  0000                     _I2C2CLK	set	15717
  2150  0000                     _I2C2CON2	set	15711
  2151  0000                     _I2C2CON1	set	15710
  2152  0000                     _I2C2CON0	set	15709
  2153  0000                     _U1TXB	set	15850
  2154  0000                     _U1ERRIE	set	15866
  2155  0000                     _U1ERRIR	set	15865
  2156  0000                     _U1UIR	set	15864
  2157  0000                     _U1FIFO	set	15863
  2158  0000                     _U1BRGH	set	15862
  2159  0000                     _U1BRGL	set	15861
  2160  0000                     _U1CON2	set	15860
  2161  0000                     _U1CON1	set	15859
  2162  0000                     _U1CON0	set	15858
  2163  0000                     _U1P3H	set	15857
  2164  0000                     _U1P3L	set	15856
  2165  0000                     _U1P2H	set	15855
  2166  0000                     _U1P2L	set	15854
  2167  0000                     _U1P1H	set	15853
  2168  0000                     _U1P1L	set	15852
  2169  0000                     _FVRCON	set	16065
  2170  0000                     _ADFLTRL	set	16102
  2171  0000                     _ADFLTRH	set	16103
  2172  0000                     _ADCON0bits	set	16120
  2173  0000                     _ADCON0	set	16120
  2174  0000                     _ADCLK	set	16127
  2175  0000                     _ADACT	set	16126
  2176  0000                     _ADREF	set	16125
  2177  0000                     _ADSTAT	set	16124
  2178  0000                     _ADCON3	set	16123
  2179  0000                     _ADCON2	set	16122
  2180  0000                     _ADCON1	set	16121
  2181  0000                     _ADPREH	set	16119
  2182  0000                     _ADPREL	set	16118
  2183  0000                     _ADCAP	set	16117
  2184  0000                     _ADACQH	set	16116
  2185  0000                     _ADACQL	set	16115
  2186  0000                     _ADPCH	set	16113
  2187  0000                     _ADRPT	set	16108
  2188  0000                     _ADACCU	set	16106
  2189  0000                     _ADSTPTH	set	16101
  2190  0000                     _ADSTPTL	set	16100
  2191  0000                     _ADUTHH	set	16097
  2192  0000                     _ADUTHL	set	16096
  2193  0000                     _ADLTHH	set	16095
  2194  0000                     _ADLTHL	set	16094
  2195  0000                     _LATBbits	set	16315
  2196  0000                     _PORTC	set	16332
  2197  0000                     _PORTD	set	16333
  2198  0000                     _LATDbits	set	16317
  2199  0000                     _LATCbits	set	16316
  2200  0000                     _LATAbits	set	16314
  2201  0000                     _T6CONbits	set	16276
  2202  0000                     _T6CON	set	16276
  2203  0000                     _T6TMR	set	16274
  2204  0000                     _T6PR	set	16275
  2205  0000                     _T6RST	set	16279
  2206  0000                     _T6HLT	set	16277
  2207  0000                     _T6CLKCON	set	16278
  2208  0000                     _T4CONbits	set	16288
  2209  0000                     _T4CON	set	16288
  2210  0000                     _T4TMR	set	16286
  2211  0000                     _T4PR	set	16287
  2212  0000                     _T4RST	set	16291
  2213  0000                     _T4HLT	set	16289
  2214  0000                     _T4CLKCON	set	16290
  2215  0000                     _T2CONbits	set	16300
  2216  0000                     _T2CON	set	16300
  2217  0000                     _T2TMR	set	16298
  2218  0000                     _T2PR	set	16299
  2219  0000                     _T2RST	set	16303
  2220  0000                     _T2HLT	set	16301
  2221  0000                     _T2CLKCON	set	16302
  2222  0000                     _T0CON0bits	set	16312
  2223  0000                     _T0CON0	set	16312
  2224  0000                     _TMR0L	set	16310
  2225  0000                     _TMR0H	set	16311
  2226  0000                     _T0CON1	set	16313
  2227  0000                     _T1CONbits	set	16306
  2228  0000                     _T1CON	set	16306
  2229  0000                     _TMR1L	set	16304
  2230  0000                     _TMR1H	set	16305
  2231  0000                     _T1CLK	set	16309
  2232  0000                     _T1GATE	set	16308
  2233  0000                     _T1GCON	set	16307
  2234  0000                     _TRISD	set	16325
  2235  0000                     _TRISC	set	16324
  2236  0000                     _TRISB	set	16323
  2237  0000                     _TRISA	set	16322
  2238  0000                     _TRISE	set	16326
  2239  0000                     _LATC	set	16316
  2240  0000                     _LATB	set	16315
  2241  0000                     _LATA	set	16314
  2242  0000                     _LATD	set	16317
  2243  0000                     _LATE	set	16318
  2244  0000                     _INTCON0bits	set	16338
  2245                           
  2246                           	psect	cinit
  2247  00867A                     __pcinit:
  2248                           	opt callstack 0
  2249  00867A                     start_initialization:
  2250                           	opt callstack 0
  2251  00867A                     __initialization:
  2252                           	opt callstack 0
  2253                           
  2254                           ; Initialize objects allocated to BANK2 (21 bytes)
  2255                           ; load TBLPTR registers with __pidataBANK2
  2256  00867A  0E7E               	movlw	low __pidataBANK2
  2257  00867C  6EF6               	movwf	tblptrl,c
  2258  00867E  0EA2               	movlw	high __pidataBANK2
  2259  008680  6EF7               	movwf	tblptrh,c
  2260  008682  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2261  008684  6EF8               	movwf	tblptru,c
  2262  008686  EE00  F2D3         	lfsr	0,__pdataBANK2
  2263  00868A  EE10 F015          	lfsr	1,21
  2264  00868E                     copy_data0:
  2265  00868E  0009               	tblrd		*+
  2266  008690  006F FFD7 FFEE     	movff	tablat,postinc0
  2267  008696  50E5               	movf	postdec1,w,c
  2268  008698  50E1               	movf	fsr1l,w,c
  2269  00869A  E1F9               	bnz	copy_data0
  2270                           
  2271                           ; Initialize objects allocated to BANK1 (11 bytes)
  2272                           ; load TBLPTR registers with __pidataBANK1
  2273  00869C  0EFA               	movlw	low __pidataBANK1
  2274  00869E  6EF6               	movwf	tblptrl,c
  2275  0086A0  0EA4               	movlw	high __pidataBANK1
  2276  0086A2  6EF7               	movwf	tblptrh,c
  2277  0086A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2278  0086A6  6EF8               	movwf	tblptru,c
  2279  0086A8  EE00  F1F5         	lfsr	0,__pdataBANK1
  2280  0086AC  EE10 F00B          	lfsr	1,11
  2281  0086B0                     copy_data1:
  2282  0086B0  0009               	tblrd		*+
  2283  0086B2  006F FFD7 FFEE     	movff	tablat,postinc0
  2284  0086B8  50E5               	movf	postdec1,w,c
  2285  0086BA  50E1               	movf	fsr1l,w,c
  2286  0086BC  E1F9               	bnz	copy_data1
  2287                           
  2288                           ; Clear objects allocated to BANK3 (144 bytes)
  2289  0086BE  EE00  F300         	lfsr	0,__pbssBANK3
  2290  0086C2  0E90               	movlw	144
  2291  0086C4                     clear_0:
  2292  0086C4  6AEE               	clrf	postinc0,c
  2293  0086C6  06E8               	decf	wreg,f,c
  2294  0086C8  E1FD               	bnz	clear_0
  2295                           
  2296                           ; Clear objects allocated to BANK2 (211 bytes)
  2297  0086CA  EE00  F200         	lfsr	0,__pbssBANK2
  2298  0086CE  0ED3               	movlw	211
  2299  0086D0                     clear_1:
  2300  0086D0  6AEE               	clrf	postinc0,c
  2301  0086D2  06E8               	decf	wreg,f,c
  2302  0086D4  E1FD               	bnz	clear_1
  2303                           
  2304                           ; Clear objects allocated to BANK1 (100 bytes)
  2305  0086D6  EE00  F191         	lfsr	0,__pbssBANK1
  2306  0086DA  0E64               	movlw	100
  2307  0086DC                     clear_2:
  2308  0086DC  6AEE               	clrf	postinc0,c
  2309  0086DE  06E8               	decf	wreg,f,c
  2310  0086E0  E1FD               	bnz	clear_2
  2311                           
  2312                           ; Clear objects allocated to BANK0 (37 bytes)
  2313  0086E2  EE00  F0AF         	lfsr	0,__pbssBANK0
  2314  0086E6  0E25               	movlw	37
  2315  0086E8                     clear_3:
  2316  0086E8  6AEE               	clrf	postinc0,c
  2317  0086EA  06E8               	decf	wreg,f,c
  2318  0086EC  E1FD               	bnz	clear_3
  2319                           
  2320                           ;
  2321                           ; Setup IVTBASE
  2322                           ;
  2323  0086EE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2324  0086F0  6ED5               	movwf	213,c
  2325  0086F2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2326  0086F4  6ED6               	movwf	214,c
  2327  0086F6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2328  0086F8  6ED7               	movwf	215,c
  2329  0086FA                     end_of_initialization:
  2330                           	opt callstack 0
  2331  0086FA                     __end_of__initialization:
  2332                           	opt callstack 0
  2333  0086FA  0100               	movlb	0
  2334  0086FC  EF0F  F000         	goto	_main	;jump to C main() function
  2335                           
  2336                           	psect	bssBANK0
  2337  0000AF                     __pbssBANK0:
  2338                           	opt callstack 0
  2339  0000AF                     _bRatePtr:
  2340                           	opt callstack 0
  2341  0000AF                     	ds	3
  2342  0000B2                     _width:
  2343                           	opt callstack 0
  2344  0000B2                     	ds	2
  2345  0000B4                     _prec:
  2346                           	opt callstack 0
  2347  0000B4                     	ds	2
  2348  0000B6                     _flags:
  2349                           	opt callstack 0
  2350  0000B6                     	ds	2
  2351  0000B8                     _rVLowActuationTstamp:
  2352                           	opt callstack 0
  2353  0000B8                     	ds	2
  2354  0000BA                     _rVHighActuationTstamp:
  2355                           	opt callstack 0
  2356  0000BA                     	ds	2
  2357  0000BC                     _I2C2_InterruptHandler:
  2358                           	opt callstack 0
  2359  0000BC                     	ds	2
  2360  0000BE                     _bRateCnt:
  2361                           	opt callstack 0
  2362  0000BE                     	ds	1
  2363  0000BF                     _eBRate:
  2364                           	opt callstack 0
  2365  0000BF                     	ds	1
  2366  0000C0                     _lastI2C2MTrfResponse:
  2367                           	opt callstack 0
  2368  0000C0                     	ds	1
  2369  0000C1                     _lcdBusy:
  2370                           	opt callstack 0
  2371  0000C1                     	ds	1
  2372  0000C2                     _parBuffLen:
  2373                           	opt callstack 0
  2374  0000C2                     	ds	1
  2375  0000C3                     _parBuffPtr:
  2376                           	opt callstack 0
  2377  0000C3                     	ds	1
  2378  0000C4                     __backlightval:
  2379                           	opt callstack 0
  2380  0000C4                     	ds	1
  2381  0000C5                     __numlines:
  2382                           	opt callstack 0
  2383  0000C5                     	ds	1
  2384  0000C6                     __displaymode:
  2385                           	opt callstack 0
  2386  0000C6                     	ds	1
  2387  0000C7                     __displaycontrol:
  2388                           	opt callstack 0
  2389  0000C7                     	ds	1
  2390  0000C8                     __displayfunction:
  2391                           	opt callstack 0
  2392  0000C8                     	ds	1
  2393  0000C9                     _keyFilter:
  2394                           	opt callstack 0
  2395  0000C9                     	ds	1
  2396  0000CA                     _lastkeyEC:
  2397                           	opt callstack 0
  2398  0000CA                     	ds	1
  2399  0000CB                     _lastkey:
  2400                           	opt callstack 0
  2401  0000CB                     	ds	1
  2402  0000CC                     _curASrc:
  2403                           	opt callstack 0
  2404  0000CC                     	ds	1
  2405  0000CD                     _uart1RxLastError:
  2406                           	opt callstack 0
  2407  0000CD                     	ds	1
  2408  0000CE                     _uart1TxTail:
  2409                           	opt callstack 0
  2410  0000CE                     	ds	1
  2411  0000CF                     _uart1TxHead:
  2412                           	opt callstack 0
  2413  0000CF                     	ds	1
  2414  0000D0                     _pInspOS:
  2415                           	opt callstack 0
  2416  0000D0                     	ds	2
  2417  0000D2                     _bdP2:
  2418                           	opt callstack 0
  2419  0000D2                     	ds	2
  2420                           
  2421                           	psect	bssBANK1
  2422  000191                     __pbssBANK1:
  2423                           	opt callstack 0
  2424  000191                     _vddValMean:
  2425                           	opt callstack 0
  2426  000191                     	ds	2
  2427  000193                     _menuVal:
  2428                           	opt callstack 0
  2429  000193                     	ds	2
  2430  000195                     _rTimeTmp:
  2431                           	opt callstack 0
  2432  000195                     	ds	2
  2433  000197                     _rValveDelayStart:
  2434                           	opt callstack 0
  2435  000197                     	ds	2
  2436  000199                     _rSV3ValveORT:
  2437                           	opt callstack 0
  2438  000199                     	ds	2
  2439  00019B                     _rSV2ValveCRT:
  2440                           	opt callstack 0
  2441  00019B                     	ds	2
  2442  00019D                     _rSV2ValveORT:
  2443                           	opt callstack 0
  2444  00019D                     	ds	2
  2445  00019F                     _rVMedActuationTstamp:
  2446                           	opt callstack 0
  2447  00019F                     	ds	2
  2448  0001A1                     _rValveActuationTstamp:
  2449                           	opt callstack 0
  2450  0001A1                     	ds	2
  2451  0001A3                     _pAdj:
  2452                           	opt callstack 0
  2453  0001A3                     	ds	2
  2454  0001A5                     _vQuanta:
  2455                           	opt callstack 0
  2456  0001A5                     	ds	2
  2457  0001A7                     _vValveActuation:
  2458                           	opt callstack 0
  2459  0001A7                     	ds	2
  2460  0001A9                     _pPeepActual:
  2461                           	opt callstack 0
  2462  0001A9                     	ds	2
  2463  0001AB                     _pPlatMax:
  2464                           	opt callstack 0
  2465  0001AB                     	ds	2
  2466  0001AD                     _IDuration:
  2467                           	opt callstack 0
  2468  0001AD                     	ds	2
  2469  0001AF                     _intIDuration:
  2470                           	opt callstack 0
  2471  0001AF                     	ds	2
  2472  0001B1                     _intPEEP:
  2473                           	opt callstack 0
  2474  0001B1                     	ds	2
  2475  0001B3                     _intIP:
  2476                           	opt callstack 0
  2477  0001B3                     	ds	2
  2478  0001B5                     _lastI2C2MAckResponse:
  2479                           	opt callstack 0
  2480  0001B5                     	ds	1
  2481  0001B6                     _currentTrfAddr:
  2482                           	opt callstack 0
  2483  0001B6                     	ds	1
  2484  0001B7                     _menuStatus:
  2485                           	opt callstack 0
  2486  0001B7                     	ds	1
  2487  0001B8                     _lcdBlink:
  2488                           	opt callstack 0
  2489  0001B8                     	ds	1
  2490  0001B9                     _chMaxV:
  2491                           	opt callstack 0
  2492  0001B9                     	ds	1
  2493  0001BA                     _chHighVAlarm:
  2494                           	opt callstack 0
  2495  0001BA                     	ds	1
  2496  0001BB                     _chLowVAlarm:
  2497                           	opt callstack 0
  2498  0001BB                     	ds	1
  2499  0001BC                     _chPEEP:
  2500                           	opt callstack 0
  2501  0001BC                     	ds	1
  2502  0001BD                     _chMaxP:
  2503                           	opt callstack 0
  2504  0001BD                     	ds	1
  2505  0001BE                     _chIP:
  2506                           	opt callstack 0
  2507  0001BE                     	ds	1
  2508  0001BF                     _chBPM:
  2509                           	opt callstack 0
  2510  0001BF                     	ds	1
  2511  0001C0                     __Addr:
  2512                           	opt callstack 0
  2513  0001C0                     	ds	1
  2514  0001C1                     _OSCheckInt:
  2515                           	opt callstack 0
  2516  0001C1                     	ds	1
  2517  0001C2                     _QuantaCheck:
  2518                           	opt callstack 0
  2519  0001C2                     	ds	1
  2520  0001C3                     _OSCheck:
  2521                           	opt callstack 0
  2522  0001C3                     	ds	1
  2523  0001C4                     _sv3DelayCheck:
  2524                           	opt callstack 0
  2525  0001C4                     	ds	1
  2526  0001C5                     _sv2DelayCheck:
  2527                           	opt callstack 0
  2528  0001C5                     	ds	1
  2529  0001C6                     _initInspSubState:
  2530                           	opt callstack 0
  2531  0001C6                     	ds	1
  2532  0001C7                     _initExpSubState:
  2533                           	opt callstack 0
  2534  0001C7                     	ds	1
  2535  0001C8                     _ctrlStatus:
  2536                           	opt callstack 0
  2537  0001C8                     	ds	1
  2538  0001C9                     _sBreath:
  2539                           	opt callstack 0
  2540  0001C9                     	ds	1
  2541  0001CA                     _intVentMode:
  2542                           	opt callstack 0
  2543  0001CA                     	ds	1
  2544  0001CB                     _ctrlErrorStatus:
  2545                           	opt callstack 0
  2546  0001CB                     	ds	1
  2547  0001CC                     _lcdPrintBRR:
  2548                           	opt callstack 0
  2549  0001CC                     	ds	1
  2550  0001CD                     _lcdPrintBR:
  2551                           	opt callstack 0
  2552  0001CD                     	ds	1
  2553  0001CE                     _lcdPrintTR:
  2554                           	opt callstack 0
  2555  0001CE                     	ds	1
  2556  0001CF                     _rCycleTime:
  2557                           	opt callstack 0
  2558  0001CF                     	ds	2
  2559  0001D1                     _effectiveFlowRateInv:
  2560                           	opt callstack 0
  2561  0001D1                     	ds	2
  2562  0001D3                     _pQuantaExp:
  2563                           	opt callstack 0
  2564  0001D3                     	ds	2
  2565  0001D5                     _pQuantaInsp:
  2566                           	opt callstack 0
  2567  0001D5                     	ds	2
  2568  0001D7                     _pInspVSet:
  2569                           	opt callstack 0
  2570  0001D7                     	ds	2
  2571  0001D9                     _vInspOS:
  2572                           	opt callstack 0
  2573  0001D9                     	ds	2
  2574  0001DB                     _pInspOS2:
  2575                           	opt callstack 0
  2576  0001DB                     	ds	2
  2577  0001DD                     _pInspOS3:
  2578                           	opt callstack 0
  2579  0001DD                     	ds	2
  2580  0001DF                     _lungC:
  2581                           	opt callstack 0
  2582  0001DF                     	ds	2
  2583  0001E1                     _pExpOS:
  2584                           	opt callstack 0
  2585  0001E1                     	ds	2
  2586  0001E3                     _pPlatInsp:
  2587                           	opt callstack 0
  2588  0001E3                     	ds	2
  2589  0001E5                     _pValveActuation:
  2590                           	opt callstack 0
  2591  0001E5                     	ds	2
  2592  0001E7                     _pCtrl:
  2593                           	opt callstack 0
  2594  0001E7                     	ds	2
  2595  0001E9                     _bdP1:
  2596                           	opt callstack 0
  2597  0001E9                     	ds	2
  2598  0001EB                     _pAvgUShort:
  2599                           	opt callstack 0
  2600  0001EB                     	ds	2
  2601  0001ED                     _pAvgShort:
  2602                           	opt callstack 0
  2603  0001ED                     	ds	2
  2604  0001EF                     _pInst:
  2605                           	opt callstack 0
  2606  0001EF                     	ds	2
  2607  0001F1                     _intMaxV:
  2608                           	opt callstack 0
  2609  0001F1                     	ds	2
  2610  0001F3                     _intMaxP:
  2611                           	opt callstack 0
  2612  0001F3                     	ds	2
  2613                           
  2614                           	psect	dataBANK1
  2615  0001F5                     __pdataBANK1:
  2616                           	opt callstack 0
  2617  0001F5                     _mainPSensCal:
  2618                           	opt callstack 0
  2619  0001F5                     	ds	2
  2620  0001F7                     _LowVAlarm:
  2621                           	opt callstack 0
  2622  0001F7                     	ds	1
  2623  0001F8                     _VentMode:
  2624                           	opt callstack 0
  2625  0001F8                     	ds	1
  2626  0001F9                     _BdTrig:
  2627                           	opt callstack 0
  2628  0001F9                     	ds	1
  2629  0001FA                     _PEEP:
  2630                           	opt callstack 0
  2631  0001FA                     	ds	1
  2632  0001FB                     _IP:
  2633                           	opt callstack 0
  2634  0001FB                     	ds	1
  2635  0001FC                     _BPM:
  2636                           	opt callstack 0
  2637  0001FC                     	ds	1
  2638  0001FD                     _HighVAlarm:
  2639                           	opt callstack 0
  2640  0001FD                     	ds	1
  2641  0001FE                     _MaxV:
  2642                           	opt callstack 0
  2643  0001FE                     	ds	1
  2644  0001FF                     _MaxP:
  2645                           	opt callstack 0
  2646  0001FF                     	ds	1
  2647                           
  2648                           	psect	bssBANK2
  2649  000200                     __pbssBANK2:
  2650                           	opt callstack 0
  2651  000200                     _I2C2_Status:
  2652                           	opt callstack 0
  2653  000200                     	ds	36
  2654  000224                     _resultTblVal:
  2655                           	opt callstack 0
  2656  000224                     	ds	7
  2657  00022B                     _volume:
  2658                           	opt callstack 0
  2659  00022B                     	ds	4
  2660  00022F                     _bRateHist:
  2661                           	opt callstack 0
  2662  00022F                     	ds	3
  2663  000232                     _nout:
  2664                           	opt callstack 0
  2665  000232                     	ds	2
  2666  000234                     _freeFlowRateL:
  2667                           	opt callstack 0
  2668  000234                     	ds	2
  2669  000236                     _freeFlowRateM:
  2670                           	opt callstack 0
  2671  000236                     	ds	2
  2672  000238                     _menuTstamp:
  2673                           	opt callstack 0
  2674  000238                     	ds	2
  2675  00023A                     _pressMills:
  2676                           	opt callstack 0
  2677  00023A                     	ds	2
  2678  00023C                     _tInsp:
  2679                           	opt callstack 0
  2680  00023C                     	ds	2
  2681  00023E                     _vAdj:
  2682                           	opt callstack 0
  2683  00023E                     	ds	2
  2684  000240                     _pInspOSVSet:
  2685                           	opt callstack 0
  2686  000240                     	ds	2
  2687  000242                     _vPlateau:
  2688                           	opt callstack 0
  2689  000242                     	ds	2
  2690  000244                     _lastCycleVol:
  2691                           	opt callstack 0
  2692  000244                     	ds	2
  2693  000246                     _EDuration:
  2694                           	opt callstack 0
  2695  000246                     	ds	2
  2696  000248                     _intEDuration:
  2697                           	opt callstack 0
  2698  000248                     	ds	2
  2699  00024A                     _intBdTrig:
  2700                           	opt callstack 0
  2701  00024A                     	ds	2
  2702  00024C                     _lastI2CMonTrfResponse:
  2703                           	opt callstack 0
  2704  00024C                     	ds	1
  2705  00024D                     _lastI2C2LAckResponse:
  2706                           	opt callstack 0
  2707  00024D                     	ds	1
  2708  00024E                     _lastI2C2LTrfResponse:
  2709                           	opt callstack 0
  2710  00024E                     	ds	1
  2711  00024F                     _chVentMode:
  2712                           	opt callstack 0
  2713  00024F                     	ds	1
  2714  000250                     _chBdTrig:
  2715                           	opt callstack 0
  2716  000250                     	ds	1
  2717  000251                     __rows:
  2718                           	opt callstack 0
  2719  000251                     	ds	1
  2720  000252                     __cols:
  2721                           	opt callstack 0
  2722  000252                     	ds	1
  2723  000253                     _dbuf:
  2724                           	opt callstack 0
  2725  000253                     	ds	32
  2726  000273                     _resultTbl:
  2727                           	opt callstack 0
  2728  000273                     	ds	28
  2729  00028F                     _lcdBtnRow:
  2730                           	opt callstack 0
  2731  00028F                     	ds	20
  2732  0002A3                     _lcdTopRow:
  2733                           	opt callstack 0
  2734  0002A3                     	ds	20
  2735  0002B7                     _monitorMsg:
  2736                           	opt callstack 0
  2737  0002B7                     	ds	10
  2738  0002C1                     _lcdBtnRRow:
  2739                           	opt callstack 0
  2740  0002C1                     	ds	10
  2741  0002CB                     _monTstamp:
  2742                           	opt callstack 0
  2743  0002CB                     	ds	2
  2744  0002CD                     _lungR:
  2745                           	opt callstack 0
  2746  0002CD                     	ds	2
  2747  0002CF                     _pPlatExp:
  2748                           	opt callstack 0
  2749  0002CF                     	ds	2
  2750  0002D1                     _freeFlowRateF:
  2751                           	opt callstack 0
  2752  0002D1                     	ds	2
  2753                           
  2754                           	psect	dataBANK2
  2755  0002D3                     __pdataBANK2:
  2756                           	opt callstack 0
  2757  0002D3                     setCursor@F16920:
  2758                           	opt callstack 0
  2759  0002D3                     	ds	8
  2760  0002DB                     _keysD:
  2761                           	opt callstack 0
  2762  0002DB                     	ds	6
  2763  0002E1                     _keysC:
  2764                           	opt callstack 0
  2765  0002E1                     	ds	5
  2766  0002E6                     _auxPSensCal:
  2767                           	opt callstack 0
  2768  0002E6                     	ds	2
  2769                           
  2770                           	psect	bssBANK3
  2771  000300                     __pbssBANK3:
  2772                           	opt callstack 0
  2773  000300                     _i2cBuff:
  2774                           	opt callstack 0
  2775  000300                     	ds	80
  2776  000350                     _uart1TxBuffer:
  2777                           	opt callstack 0
  2778  000350                     	ds	64
  2779                           
  2780                           	psect	cstackBANK3
  2781  000390                     __pcstackBANK3:
  2782                           	opt callstack 0
  2783  000390                     SelfTest@tstScreen:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 1 bytes @ 0x0
  2787  000390                     	ds	1
  2788  000391                     SelfTest@lcdBLight:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 1 bytes @ 0x1
  2792  000391                     	ds	1
  2793  000392                     SelfTest@idx:
  2794                           	opt callstack 0
  2795                           
  2796                           ; 2 bytes @ 0x2
  2797  000392                     	ds	2
  2798  000394                     SelfTest@cIdx:
  2799                           	opt callstack 0
  2800                           
  2801                           ; 2 bytes @ 0x4
  2802  000394                     	ds	2
  2803  000396                     SelfTest@tstamp:
  2804                           	opt callstack 0
  2805                           
  2806                           ; 2 bytes @ 0x6
  2807  000396                     	ds	2
  2808  000398                     SelfTest@vddValMax:
  2809                           	opt callstack 0
  2810                           
  2811                           ; 2 bytes @ 0x8
  2812  000398                     	ds	2
  2813  00039A                     SelfTest@vddValMin:
  2814                           	opt callstack 0
  2815                           
  2816                           ; 2 bytes @ 0xA
  2817  00039A                     	ds	2
  2818  00039C                     SelfTest@vddVal:
  2819                           	opt callstack 0
  2820                           
  2821                           ; 2 bytes @ 0xC
  2822  00039C                     	ds	2
  2823  00039E                     SelfTest@initOk:
  2824                           	opt callstack 0
  2825                           
  2826                           ; 1 bytes @ 0xE
  2827  00039E                     	ds	1
  2828  00039F                     ??_main:
  2829                           
  2830                           ; 1 bytes @ 0xF
  2831  00039F                     	ds	11
  2832  0003AA                     _main$3847:
  2833                           	opt callstack 0
  2834                           
  2835                           ; 2 bytes @ 0x1A
  2836  0003AA                     	ds	2
  2837  0003AC                     _main$3848:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 2 bytes @ 0x1C
  2841  0003AC                     	ds	2
  2842  0003AE                     main@tstScreen:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 1 bytes @ 0x1E
  2846  0003AE                     	ds	1
  2847  0003AF                     _main$6101:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 3 bytes @ 0x1F
  2851  0003AF                     	ds	3
  2852  0003B2                     main@vInspOSScale:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 2 bytes @ 0x22
  2856  0003B2                     	ds	2
  2857  0003B4                     main@printTime:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 2 bytes @ 0x24
  2861  0003B4                     	ds	2
  2862  0003B6                     main@keyTmp:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 1 bytes @ 0x26
  2866  0003B6                     	ds	1
  2867  0003B7                     main@tmpUVal:
  2868                           	opt callstack 0
  2869                           
  2870                           ; 2 bytes @ 0x27
  2871  0003B7                     	ds	2
  2872  0003B9                     _main$6102:
  2873                           	opt callstack 0
  2874                           
  2875                           ; 2 bytes @ 0x29
  2876  0003B9                     	ds	2
  2877  0003BB                     main@tmpVal2:
  2878                           	opt callstack 0
  2879                           
  2880                           ; 2 bytes @ 0x2B
  2881  0003BB                     	ds	2
  2882  0003BD                     main@pInspOSScale:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 2 bytes @ 0x2D
  2886  0003BD                     	ds	2
  2887  0003BF                     main@tmpVal:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 2 bytes @ 0x2F
  2891  0003BF                     	ds	2
  2892                           
  2893                           	psect	cstackBANK2
  2894  0002FA                     __pcstackBANK2:
  2895                           	opt callstack 0
  2896  0002FA                     ??_SelfTest:
  2897                           
  2898                           ; 1 bytes @ 0x0
  2899  0002FA                     	ds	4
  2900                           
  2901                           	psect	cstackBANK1
  2902  000100                     __pcstackBANK1:
  2903                           	opt callstack 0
  2904  000100                     ??___fltol:
  2905  000100                     ?_dtoa:
  2906                           	opt callstack 0
  2907  000100                     ?_xtoa:
  2908                           	opt callstack 0
  2909  000100                     dtoa@fp:
  2910                           	opt callstack 0
  2911  000100                     xtoa@fp:
  2912                           	opt callstack 0
  2913  000100                     atoi@neg:
  2914                           	opt callstack 0
  2915                           
  2916                           ; 2 bytes @ 0x0
  2917  000100                     	ds	2
  2918  000102                     _atoi$5375:
  2919                           	opt callstack 0
  2920  000102                     dtoa@d:
  2921                           	opt callstack 0
  2922  000102                     xtoa@d:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 8 bytes @ 0x2
  2926  000102                     	ds	2
  2927  000104                     _atoi$5377:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 2 bytes @ 0x4
  2931  000104                     	ds	2
  2932  000106                     _atoi$5376:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 1 bytes @ 0x6
  2936  000106                     	ds	1
  2937  000107                     atoi@n:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 2 bytes @ 0x7
  2941  000107                     	ds	3
  2942  00010A                     ??_dtoa:
  2943  00010A                     xtoa@x:
  2944                           	opt callstack 0
  2945                           
  2946                           ; 1 bytes @ 0xA
  2947  00010A                     	ds	1
  2948  00010B                     ??_xtoa:
  2949                           
  2950                           ; 1 bytes @ 0xB
  2951  00010B                     	ds	7
  2952  000112                     _dtoa$4891:
  2953                           	opt callstack 0
  2954                           
  2955                           ; 2 bytes @ 0x12
  2956  000112                     	ds	1
  2957  000113                     _xtoa$4902:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x13
  2961  000113                     	ds	1
  2962  000114                     dtoa@p:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x14
  2966  000114                     	ds	1
  2967  000115                     _xtoa$4903:
  2968                           	opt callstack 0
  2969                           
  2970                           ; 2 bytes @ 0x15
  2971  000115                     	ds	1
  2972  000116                     dtoa@w:
  2973                           	opt callstack 0
  2974                           
  2975                           ; 2 bytes @ 0x16
  2976  000116                     	ds	1
  2977  000117                     xtoa@p:
  2978                           	opt callstack 0
  2979                           
  2980                           ; 2 bytes @ 0x17
  2981  000117                     	ds	1
  2982  000118                     dtoa@s:
  2983                           	opt callstack 0
  2984                           
  2985                           ; 2 bytes @ 0x18
  2986  000118                     	ds	1
  2987  000119                     xtoa@w:
  2988                           	opt callstack 0
  2989                           
  2990                           ; 2 bytes @ 0x19
  2991  000119                     	ds	1
  2992  00011A                     dtoa@n:
  2993                           	opt callstack 0
  2994                           
  2995                           ; 8 bytes @ 0x1A
  2996  00011A                     	ds	1
  2997  00011B                     xtoa@n:
  2998                           	opt callstack 0
  2999                           
  3000                           ; 8 bytes @ 0x1B
  3001  00011B                     	ds	7
  3002  000122                     dtoa@i:
  3003                           	opt callstack 0
  3004                           
  3005                           ; 2 bytes @ 0x22
  3006  000122                     	ds	1
  3007  000123                     xtoa@i:
  3008                           	opt callstack 0
  3009                           
  3010                           ; 2 bytes @ 0x23
  3011  000123                     	ds	2
  3012  000125                     xtoa@c:
  3013                           	opt callstack 0
  3014                           
  3015                           ; 2 bytes @ 0x25
  3016  000125                     	ds	2
  3017  000127                     ??_vfpfcnvrt:
  3018                           
  3019                           ; 1 bytes @ 0x27
  3020  000127                     	ds	4
  3021  00012B                     vfpfcnvrt@ll:
  3022                           	opt callstack 0
  3023                           
  3024                           ; 8 bytes @ 0x2B
  3025  00012B                     	ds	8
  3026  000133                     vfpfcnvrt@llu:
  3027                           	opt callstack 0
  3028                           
  3029                           ; 8 bytes @ 0x33
  3030  000133                     	ds	8
  3031  00013B                     vfpfcnvrt@c:
  3032                           	opt callstack 0
  3033                           
  3034                           ; 1 bytes @ 0x3B
  3035  00013B                     	ds	1
  3036  00013C                     vfpfcnvrt@done:
  3037                           	opt callstack 0
  3038                           
  3039                           ; 2 bytes @ 0x3C
  3040  00013C                     	ds	2
  3041  00013E                     _vfpfcnvrt$4917:
  3042                           	opt callstack 0
  3043                           
  3044                           ; 2 bytes @ 0x3E
  3045  00013E                     	ds	2
  3046  000140                     ?_vfprintf:
  3047                           	opt callstack 0
  3048  000140                     vfprintf@fp:
  3049                           	opt callstack 0
  3050                           
  3051                           ; 2 bytes @ 0x40
  3052  000140                     	ds	2
  3053  000142                     vfprintf@fmt:
  3054                           	opt callstack 0
  3055                           
  3056                           ; 2 bytes @ 0x42
  3057  000142                     	ds	2
  3058  000144                     vfprintf@ap:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x44
  3062  000144                     	ds	2
  3063  000146                     ?_printf:
  3064                           	opt callstack 0
  3065  000146                     ?_sprintf:
  3066                           	opt callstack 0
  3067  000146                     sprintf@s:
  3068                           	opt callstack 0
  3069  000146                     printf@fmt:
  3070                           	opt callstack 0
  3071                           
  3072                           ; 2 bytes @ 0x46
  3073  000146                     	ds	2
  3074  000148                     sprintf@fmt:
  3075                           	opt callstack 0
  3076                           
  3077                           ; 2 bytes @ 0x48
  3078  000148                     	ds	12
  3079  000154                     sprintf@ap:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 2 bytes @ 0x54
  3083  000154                     	ds	2
  3084  000156                     sprintf@f:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 6 bytes @ 0x56
  3088  000156                     	ds	6
  3089  00015C                     ??_screenMng:
  3090                           
  3091                           ; 1 bytes @ 0x5C
  3092  00015C                     	ds	2
  3093  00015E                     printf@ap:
  3094                           	opt callstack 0
  3095  00015E                     _screenMng$6103:
  3096                           	opt callstack 0
  3097                           
  3098                           ; 2 bytes @ 0x5E
  3099  00015E                     	ds	2
  3100  000160                     ??_MenuMng:
  3101  000160                     ??_aCaptRstFlt:
  3102  000160                     ??_inspOSMeasure:
  3103  000160                     ??_adcGetCh:
  3104  000160                     ?_aCaptureOffGet:
  3105                           	opt callstack 0
  3106  000160                     rd1RegCompleteHandler@ptr:
  3107                           	opt callstack 0
  3108  000160                     rd2RegCompleteHandler@ptr:
  3109                           	opt callstack 0
  3110  000160                     wr1RegCompleteHandler@ptr:
  3111                           	opt callstack 0
  3112  000160                     wr2RegCompleteHandler@ptr:
  3113                           	opt callstack 0
  3114  000160                     rdBlkRegCompleteHandler@ptr:
  3115                           	opt callstack 0
  3116  000160                     I2C2_CallbackReturnStop@funPtr:
  3117                           	opt callstack 0
  3118  000160                     aCaptureOffSet@offVal:
  3119                           	opt callstack 0
  3120  000160                     aCaptGetResult@outVal:
  3121                           	opt callstack 0
  3122  000160                     I2C2_NackCb@ptr:
  3123                           	opt callstack 0
  3124                           
  3125                           ; 2 bytes @ 0x60
  3126  000160                     	ds	2
  3127  000162                     ??_I2C2_DO_RX_EMPTY:
  3128  000162                     ??_aCaptGetResult:
  3129  000162                     adcGetCh@sel:
  3130                           	opt callstack 0
  3131  000162                     aCaptureOffSet@sel:
  3132                           	opt callstack 0
  3133  000162                     aCaptureOffGet@sel:
  3134                           	opt callstack 0
  3135                           
  3136                           ; 1 bytes @ 0x62
  3137  000162                     	ds	1
  3138  000163                     aCaptureInit@idx:
  3139                           	opt callstack 0
  3140                           
  3141                           ; 2 bytes @ 0x63
  3142  000163                     	ds	1
  3143  000164                     I2C2_MasterOperation@read:
  3144                           	opt callstack 0
  3145  000164                     aCaptRstFlt@sel:
  3146                           	opt callstack 0
  3147  000164                     _MenuMng$4363:
  3148                           	opt callstack 0
  3149  000164                     _inspOSMeasure$6100:
  3150                           	opt callstack 0
  3151                           
  3152                           ; 4 bytes @ 0x64
  3153  000164                     	ds	1
  3154  000165                     I2C2_MasterOperation@returnValue:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 1 bytes @ 0x65
  3158  000165                     	ds	1
  3159  000166                     aCaptGetResult@lclValid:
  3160                           	opt callstack 0
  3161  000166                     _MenuMng$4364:
  3162                           	opt callstack 0
  3163                           
  3164                           ; 2 bytes @ 0x66
  3165  000166                     	ds	1
  3166  000167                     aCaptGetResult@sel:
  3167                           	opt callstack 0
  3168                           
  3169                           ; 1 bytes @ 0x67
  3170  000167                     	ds	1
  3171  000168                     inspOSMeasure@tmpUVal:
  3172                           	opt callstack 0
  3173  000168                     _MenuMng$4365:
  3174                           	opt callstack 0
  3175  000168                     aCaptGetResult@lclRaw:
  3176                           	opt callstack 0
  3177                           
  3178                           ; 4 bytes @ 0x68
  3179  000168                     	ds	2
  3180  00016A                     inspOSMeasure@setScale:
  3181                           	opt callstack 0
  3182  00016A                     _MenuMng$4366:
  3183                           	opt callstack 0
  3184                           
  3185                           ; 2 bytes @ 0x6A
  3186  00016A                     	ds	1
  3187  00016B                     inspOSMeasure@tmpVal:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 2 bytes @ 0x6B
  3191  00016B                     	ds	1
  3192  00016C                     ??_MonitorMsgForcedSend:
  3193  00016C                     _MenuMng$4367:
  3194                           	opt callstack 0
  3195  00016C                     pressureSensorChk@time:
  3196                           	opt callstack 0
  3197                           
  3198                           ; 2 bytes @ 0x6C
  3199  00016C                     	ds	1
  3200  00016D                     MonitorMsgForcedSend@trfError:
  3201                           	opt callstack 0
  3202                           
  3203                           ; 1 bytes @ 0x6D
  3204  00016D                     	ds	1
  3205  00016E                     ??_pressureSensorChk:
  3206  00016E                     MenuMng@keyPress:
  3207                           	opt callstack 0
  3208  00016E                     MonitorMsgForcedSend@state:
  3209                           	opt callstack 0
  3210                           
  3211                           ; 1 bytes @ 0x6E
  3212  00016E                     	ds	1
  3213  00016F                     MonitorMsgForcedSend@trfAck:
  3214                           	opt callstack 0
  3215                           
  3216                           ; 1 bytes @ 0x6F
  3217  00016F                     	ds	1
  3218  000170                     MonitorMsgForcedSend@vddVal:
  3219                           	opt callstack 0
  3220                           
  3221                           ; 2 bytes @ 0x70
  3222  000170                     	ds	2
  3223  000172                     MonitorMsgSend@state:
  3224                           	opt callstack 0
  3225  000172                     MonitorMsgSendBlock@state:
  3226                           	opt callstack 0
  3227                           
  3228                           ; 1 bytes @ 0x72
  3229  000172                     	ds	1
  3230  000173                     ??_flowChk:
  3231                           
  3232                           ; 1 bytes @ 0x73
  3233  000173                     	ds	2
  3234  000175                     flowChk@flowVal:
  3235                           	opt callstack 0
  3236                           
  3237                           ; 1 bytes @ 0x75
  3238  000175                     	ds	1
  3239  000176                     flowChk@aPValMean:
  3240                           	opt callstack 0
  3241                           
  3242                           ; 2 bytes @ 0x76
  3243  000176                     	ds	2
  3244  000178                     flowChk@maxFlowL:
  3245                           	opt callstack 0
  3246                           
  3247                           ; 2 bytes @ 0x78
  3248  000178                     	ds	1
  3249  000179                     pressureSensorChk@offsetCal:
  3250                           	opt callstack 0
  3251                           
  3252                           ; 1 bytes @ 0x79
  3253  000179                     	ds	1
  3254  00017A                     pressureSensorChk@tstamp:
  3255                           	opt callstack 0
  3256  00017A                     flowChk@aPValMin:
  3257                           	opt callstack 0
  3258                           
  3259                           ; 2 bytes @ 0x7A
  3260  00017A                     	ds	2
  3261  00017C                     pressureSensorChk@chkResult:
  3262                           	opt callstack 0
  3263  00017C                     flowChk@tstamp:
  3264                           	opt callstack 0
  3265                           
  3266                           ; 2 bytes @ 0x7C
  3267  00017C                     	ds	1
  3268  00017D                     pressureSensorChk@mPValMax:
  3269                           	opt callstack 0
  3270                           
  3271                           ; 2 bytes @ 0x7D
  3272  00017D                     	ds	1
  3273  00017E                     flowChk@aPValMax:
  3274                           	opt callstack 0
  3275                           
  3276                           ; 2 bytes @ 0x7E
  3277  00017E                     	ds	1
  3278  00017F                     pressureSensorChk@mPValMin:
  3279                           	opt callstack 0
  3280                           
  3281                           ; 2 bytes @ 0x7F
  3282  00017F                     	ds	1
  3283  000180                     flowChk@minFlowL:
  3284                           	opt callstack 0
  3285                           
  3286                           ; 2 bytes @ 0x80
  3287  000180                     	ds	1
  3288  000181                     pressureSensorChk@aPValMax:
  3289                           	opt callstack 0
  3290                           
  3291                           ; 2 bytes @ 0x81
  3292  000181                     	ds	1
  3293  000182                     flowChk@initOk:
  3294                           	opt callstack 0
  3295                           
  3296                           ; 1 bytes @ 0x82
  3297  000182                     	ds	1
  3298  000183                     pressureSensorChk@aPValMin:
  3299                           	opt callstack 0
  3300  000183                     flowChk@aPVal:
  3301                           	opt callstack 0
  3302                           
  3303                           ; 2 bytes @ 0x83
  3304  000183                     	ds	2
  3305  000185                     pressureSensorChk@mPValMean:
  3306                           	opt callstack 0
  3307                           
  3308                           ; 4 bytes @ 0x85
  3309  000185                     	ds	4
  3310  000189                     pressureSensorChk@aPValMean:
  3311                           	opt callstack 0
  3312                           
  3313                           ; 4 bytes @ 0x89
  3314  000189                     	ds	4
  3315  00018D                     pressureSensorChk@mPVal:
  3316                           	opt callstack 0
  3317                           
  3318                           ; 2 bytes @ 0x8D
  3319  00018D                     	ds	2
  3320  00018F                     pressureSensorChk@aPVal:
  3321                           	opt callstack 0
  3322                           
  3323                           ; 2 bytes @ 0x8F
  3324  00018F                     	ds	2
  3325                           
  3326                           	psect	cstackBANK0
  3327  000060                     __pcstackBANK0:
  3328                           	opt callstack 0
  3329  000060                     i2vfpfcnvrt@ll:
  3330                           	opt callstack 0
  3331                           
  3332                           ; 8 bytes @ 0x0
  3333  000060                     	ds	8
  3334  000068                     i2vfpfcnvrt@llu:
  3335                           	opt callstack 0
  3336                           
  3337                           ; 8 bytes @ 0x8
  3338  000068                     	ds	8
  3339  000070                     i2vfpfcnvrt@c:
  3340                           	opt callstack 0
  3341                           
  3342                           ; 1 bytes @ 0x10
  3343  000070                     	ds	1
  3344  000071                     i2vfpfcnvrt@done:
  3345                           	opt callstack 0
  3346                           
  3347                           ; 2 bytes @ 0x11
  3348  000071                     	ds	2
  3349  000073                     i2_vfpfcnvrt$4917:
  3350                           	opt callstack 0
  3351                           
  3352                           ; 2 bytes @ 0x13
  3353  000073                     	ds	2
  3354  000075                     ?i2_vfprintf:
  3355                           	opt callstack 0
  3356  000075                     i2vfprintf@fp:
  3357                           	opt callstack 0
  3358                           
  3359                           ; 2 bytes @ 0x15
  3360  000075                     	ds	2
  3361  000077                     i2vfprintf@fmt:
  3362                           	opt callstack 0
  3363                           
  3364                           ; 2 bytes @ 0x17
  3365  000077                     	ds	2
  3366  000079                     i2vfprintf@ap:
  3367                           	opt callstack 0
  3368                           
  3369                           ; 2 bytes @ 0x19
  3370  000079                     	ds	2
  3371  00007B                     ?i2_printf:
  3372                           	opt callstack 0
  3373  00007B                     i2printf@fmt:
  3374                           	opt callstack 0
  3375                           
  3376                           ; 2 bytes @ 0x1B
  3377  00007B                     	ds	4
  3378  00007F                     i2aCaptGetResult@outVal:
  3379                           	opt callstack 0
  3380  00007F                     adcCaptureIsr@adcData:
  3381                           	opt callstack 0
  3382                           
  3383                           ; 4 bytes @ 0x1F
  3384  00007F                     	ds	2
  3385  000081                     vMeasureIsr@v1:
  3386                           	opt callstack 0
  3387                           
  3388                           ; 2 bytes @ 0x21
  3389  000081                     	ds	2
  3390  000083                     adcCaptureIsr@adcSel:
  3391                           	opt callstack 0
  3392  000083                     vMeasureIsr@v2:
  3393                           	opt callstack 0
  3394                           
  3395                           ; 2 bytes @ 0x23
  3396  000083                     	ds	2
  3397  000085                     vMeasureIsr@instP:
  3398                           	opt callstack 0
  3399                           
  3400                           ; 2 bytes @ 0x25
  3401  000085                     	ds	2
  3402  000087                     ??_INTERRUPT_InterruptManager:
  3403                           
  3404                           ; 1 bytes @ 0x27
  3405  000087                     	ds	4
  3406  00008B                     ??_TMR1_Initialize:
  3407  00008B                     ??_bRateUpdt:
  3408  00008B                     ??_digitalReadD:
  3409  00008B                     ??_digitalReadC:
  3410  00008B                     ?_strlen:
  3411                           	opt callstack 0
  3412  00008B                     ?_isupper:
  3413                           	opt callstack 0
  3414  00008B                     ?_isalpha:
  3415                           	opt callstack 0
  3416  00008B                     ?_isdigit:
  3417                           	opt callstack 0
  3418  00008B                     ?_isspace:
  3419                           	opt callstack 0
  3420  00008B                     ?_islower:
  3421                           	opt callstack 0
  3422  00008B                     ?_TMR1_ReadTimer:
  3423                           	opt callstack 0
  3424  00008B                     ?___lwdiv:
  3425                           	opt callstack 0
  3426  00008B                     ?___tmul:
  3427                           	opt callstack 0
  3428  00008B                     ?___ltdiv:
  3429                           	opt callstack 0
  3430  00008B                     ?___lmul:
  3431                           	opt callstack 0
  3432  00008B                     ?___xxtofl:
  3433                           	opt callstack 0
  3434  00008B                     ?___aodiv:
  3435                           	opt callstack 0
  3436  00008B                     ?___aomod:
  3437                           	opt callstack 0
  3438  00008B                     ADCC_StartConversion@channel:
  3439                           	opt callstack 0
  3440  00008B                     UART1_Write@txData:
  3441                           	opt callstack 0
  3442  00008B                     I2C2_Close@returnValue:
  3443                           	opt callstack 0
  3444  00008B                     I2C2_MasterSendTxData@data:
  3445                           	opt callstack 0
  3446  00008B                     I2C2_MasterSetCounter@counter:
  3447                           	opt callstack 0
  3448  00008B                     send4bits@mode:
  3449                           	opt callstack 0
  3450  00008B                     MonitorErrorSet@flag:
  3451                           	opt callstack 0
  3452  00008B                     MonitorErrorClr@flag:
  3453                           	opt callstack 0
  3454  00008B                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  3455                           	opt callstack 0
  3456  00008B                     UART1_SetFramingErrorHandler@interruptHandler:
  3457                           	opt callstack 0
  3458  00008B                     UART1_SetOverrunErrorHandler@interruptHandler:
  3459                           	opt callstack 0
  3460  00008B                     UART1_SetErrorHandler@interruptHandler:
  3461                           	opt callstack 0
  3462  00008B                     UART1_SetTxInterruptHandler@InterruptHandler:
  3463                           	opt callstack 0
  3464  00008B                     TMR2_SetInterruptHandler@InterruptHandler:
  3465                           	opt callstack 0
  3466  00008B                     I2C2_SetBuffer@buffer:
  3467                           	opt callstack 0
  3468  00008B                     I2C2_SetInterruptHandler@InterruptHandler:
  3469                           	opt callstack 0
  3470  00008B                     I2C2_SetCallback@cb:
  3471                           	opt callstack 0
  3472  00008B                     TMR4_SetInterruptHandler@InterruptHandler:
  3473                           	opt callstack 0
  3474  00008B                     TMR6_SetInterruptHandler@InterruptHandler:
  3475                           	opt callstack 0
  3476  00008B                     printstr@c:
  3477                           	opt callstack 0
  3478  00008B                     ___lwdiv@dividend:
  3479                           	opt callstack 0
  3480  00008B                     isalpha@c:
  3481                           	opt callstack 0
  3482  00008B                     isdigit@c:
  3483                           	opt callstack 0
  3484  00008B                     isspace@c:
  3485                           	opt callstack 0
  3486  00008B                     isupper@c:
  3487                           	opt callstack 0
  3488  00008B                     strlen@s:
  3489                           	opt callstack 0
  3490  00008B                     islower@c:
  3491                           	opt callstack 0
  3492  00008B                     ___tmul@multiplier:
  3493                           	opt callstack 0
  3494  00008B                     ___ltdiv@dividend:
  3495                           	opt callstack 0
  3496  00008B                     ___lmul@multiplier:
  3497                           	opt callstack 0
  3498  00008B                     ___xxtofl@val:
  3499                           	opt callstack 0
  3500  00008B                     ___aodiv@dividend:
  3501                           	opt callstack 0
  3502  00008B                     ___aomod@dividend:
  3503                           	opt callstack 0
  3504                           
  3505                           ; 8 bytes @ 0x2B
  3506  00008B                     	ds	1
  3507  00008C                     putch@byte:
  3508                           	opt callstack 0
  3509  00008C                     send4bits@value:
  3510                           	opt callstack 0
  3511  00008C                     I2C2_MClose@trfRsp:
  3512                           	opt callstack 0
  3513                           
  3514                           ; 1 bytes @ 0x2C
  3515  00008C                     	ds	1
  3516  00008D                     ??_isupper:
  3517  00008D                     ??_isalpha:
  3518  00008D                     ??_isdigit:
  3519  00008D                     ??_isspace:
  3520  00008D                     ??_islower:
  3521  00008D                     ??_TMR1_ReadTimer:
  3522  00008D                     ??_printstr:
  3523  00008D                     I2C2_Open@address:
  3524                           	opt callstack 0
  3525  00008D                     digitalReadD@pin:
  3526                           	opt callstack 0
  3527  00008D                     digitalReadC@pin:
  3528                           	opt callstack 0
  3529  00008D                     I2C2_SetBuffer@bufferSize:
  3530                           	opt callstack 0
  3531  00008D                     I2C2_SetCallback@ptr:
  3532                           	opt callstack 0
  3533  00008D                     send4bits@idx:
  3534                           	opt callstack 0
  3535  00008D                     ___lwdiv@divisor:
  3536                           	opt callstack 0
  3537  00008D                     fputc@c:
  3538                           	opt callstack 0
  3539  00008D                     strlen@a:
  3540                           	opt callstack 0
  3541                           
  3542                           ; 2 bytes @ 0x2D
  3543  00008D                     	ds	1
  3544  00008E                     I2C2_Open@returnValue:
  3545                           	opt callstack 0
  3546  00008E                     keyPeek@n:
  3547                           	opt callstack 0
  3548  00008E                     printstr@idx:
  3549                           	opt callstack 0
  3550  00008E                     bRateUpdt@triggered:
  3551                           	opt callstack 0
  3552  00008E                     ___tmul@multiplicand:
  3553                           	opt callstack 0
  3554  00008E                     ___ltdiv@divisor:
  3555                           	opt callstack 0
  3556                           
  3557                           ; 3 bytes @ 0x2E
  3558  00008E                     	ds	1
  3559  00008F                     ??___xxtofl:
  3560  00008F                     I2C2_SetCallback@idx:
  3561                           	opt callstack 0
  3562  00008F                     keyPeek@n_4072:
  3563                           	opt callstack 0
  3564  00008F                     send@mode:
  3565                           	opt callstack 0
  3566  00008F                     expanderWriteBlock@data:
  3567                           	opt callstack 0
  3568  00008F                     ___lwdiv@counter:
  3569                           	opt callstack 0
  3570  00008F                     TMR1_ReadTimer@readVal:
  3571                           	opt callstack 0
  3572  00008F                     printstrblock@c:
  3573                           	opt callstack 0
  3574  00008F                     fputc@fp:
  3575                           	opt callstack 0
  3576  00008F                     ___lmul@multiplicand:
  3577                           	opt callstack 0
  3578                           
  3579                           ; 4 bytes @ 0x2F
  3580  00008F                     	ds	1
  3581  000090                     ??_keyRead:
  3582  000090                     send@value:
  3583                           	opt callstack 0
  3584  000090                     setBacklight@new_val:
  3585                           	opt callstack 0
  3586  000090                     I2C2_SetDataCompleteCallback@cb:
  3587                           	opt callstack 0
  3588  000090                     I2C2_SetAddressNackCallback@cb:
  3589                           	opt callstack 0
  3590  000090                     I2C2_SetDataNackCallback@cb:
  3591                           	opt callstack 0
  3592  000090                     ___lwdiv@quotient:
  3593                           	opt callstack 0
  3594                           
  3595                           ; 2 bytes @ 0x30
  3596  000090                     	ds	1
  3597  000091                     ??_fputc:
  3598  000091                     ?_toupper:
  3599                           	opt callstack 0
  3600  000091                     TMR1_ReadTimer@readValHigh:
  3601                           	opt callstack 0
  3602  000091                     command@value:
  3603                           	opt callstack 0
  3604  000091                     _isspace$5402:
  3605                           	opt callstack 0
  3606  000091                     toupper@c:
  3607                           	opt callstack 0
  3608  000091                     ___tmul@product:
  3609                           	opt callstack 0
  3610  000091                     ___ltdiv@quotient:
  3611                           	opt callstack 0
  3612                           
  3613                           ; 3 bytes @ 0x31
  3614  000091                     	ds	1
  3615  000092                     TMR1_ReadTimer@readValLow:
  3616                           	opt callstack 0
  3617  000092                     setCursor@row:
  3618                           	opt callstack 0
  3619  000092                     I2C2_SetDataCompleteCallback@ptr:
  3620                           	opt callstack 0
  3621  000092                     I2C2_SetAddressNackCallback@ptr:
  3622                           	opt callstack 0
  3623  000092                     I2C2_SetDataNackCallback@ptr:
  3624                           	opt callstack 0
  3625  000092                     keyRead@tmp:
  3626                           	opt callstack 0
  3627                           
  3628                           ; 2 bytes @ 0x32
  3629  000092                     	ds	1
  3630  000093                     ??_toupper:
  3631  000093                     ?_timeGet:
  3632                           	opt callstack 0
  3633  000093                     ___xxtofl@sign:
  3634                           	opt callstack 0
  3635  000093                     timeElapsedR@prevTime:
  3636                           	opt callstack 0
  3637  000093                     timeElapsed@prevTime:
  3638                           	opt callstack 0
  3639  000093                     ___lmul@product:
  3640                           	opt callstack 0
  3641  000093                     setCursor@row_offsets:
  3642                           	opt callstack 0
  3643  000093                     ___aodiv@divisor:
  3644                           	opt callstack 0
  3645  000093                     ___aomod@divisor:
  3646                           	opt callstack 0
  3647                           
  3648                           ; 8 bytes @ 0x33
  3649  000093                     	ds	1
  3650  000094                     keyRead@ch:
  3651                           	opt callstack 0
  3652  000094                     I2C2_MOpen@trfRsp:
  3653                           	opt callstack 0
  3654  000094                     ___ltdiv@counter:
  3655                           	opt callstack 0
  3656  000094                     ___xxtofl@exp:
  3657                           	opt callstack 0
  3658                           
  3659                           ; 1 bytes @ 0x34
  3660  000094                     	ds	1
  3661  000095                     ?_timeDiff:
  3662                           	opt callstack 0
  3663  000095                     timeDiff@startT:
  3664                           	opt callstack 0
  3665  000095                     timeElapsedR@duration:
  3666                           	opt callstack 0
  3667  000095                     timeElapsed@duration:
  3668                           	opt callstack 0
  3669  000095                     ___xxtofl@arg:
  3670                           	opt callstack 0
  3671                           
  3672                           ; 4 bytes @ 0x35
  3673  000095                     	ds	1
  3674  000096                     fputs@s:
  3675                           	opt callstack 0
  3676                           
  3677                           ; 2 bytes @ 0x36
  3678  000096                     	ds	1
  3679  000097                     ??_timeElapsedR:
  3680  000097                     ?___lldiv:
  3681                           	opt callstack 0
  3682  000097                     timeDiff@endT:
  3683                           	opt callstack 0
  3684  000097                     timeElapsed@intTime:
  3685                           	opt callstack 0
  3686  000097                     _toupper$5483:
  3687                           	opt callstack 0
  3688  000097                     ___lldiv@dividend:
  3689                           	opt callstack 0
  3690                           
  3691                           ; 4 bytes @ 0x37
  3692  000097                     	ds	1
  3693  000098                     fputs@fp:
  3694                           	opt callstack 0
  3695                           
  3696                           ; 2 bytes @ 0x38
  3697  000098                     	ds	1
  3698  000099                     ?___fladd:
  3699                           	opt callstack 0
  3700  000099                     timeDiff@intDur:
  3701                           	opt callstack 0
  3702  000099                     timeElapsedR@intDur:
  3703                           	opt callstack 0
  3704  000099                     timeElapsed@intDur:
  3705                           	opt callstack 0
  3706  000099                     ___flge@ff1:
  3707                           	opt callstack 0
  3708  000099                     ___fladd@b:
  3709                           	opt callstack 0
  3710                           
  3711                           ; 4 bytes @ 0x39
  3712  000099                     	ds	1
  3713  00009A                     fputs@c:
  3714                           	opt callstack 0
  3715                           
  3716                           ; 1 bytes @ 0x3A
  3717  00009A                     	ds	1
  3718  00009B                     ?___wmul:
  3719                           	opt callstack 0
  3720  00009B                     keyReadEC@longPress:
  3721                           	opt callstack 0
  3722  00009B                     setCursor@col:
  3723                           	opt callstack 0
  3724  00009B                     ___aodiv@counter:
  3725                           	opt callstack 0
  3726  00009B                     ___aomod@counter:
  3727                           	opt callstack 0
  3728  00009B                     timeElapsedR@intTime:
  3729                           	opt callstack 0
  3730  00009B                     timeDelayMs@delms:
  3731                           	opt callstack 0
  3732  00009B                     ___wmul@multiplier:
  3733                           	opt callstack 0
  3734  00009B                     fputs@i:
  3735                           	opt callstack 0
  3736  00009B                     ___lldiv@divisor:
  3737                           	opt callstack 0
  3738                           
  3739                           ; 4 bytes @ 0x3B
  3740  00009B                     	ds	1
  3741  00009C                     _keyReadEC$4077:
  3742                           	opt callstack 0
  3743  00009C                     ___aodiv@sign:
  3744                           	opt callstack 0
  3745  00009C                     ___aomod@sign:
  3746                           	opt callstack 0
  3747                           
  3748                           ; 1 bytes @ 0x3C
  3749  00009C                     	ds	1
  3750  00009D                     ?_abs:
  3751                           	opt callstack 0
  3752  00009D                     ?_pad:
  3753                           	opt callstack 0
  3754  00009D                     keyReadEC@ch:
  3755                           	opt callstack 0
  3756  00009D                     timeDelayMs@tstamp:
  3757                           	opt callstack 0
  3758  00009D                     pad@fp:
  3759                           	opt callstack 0
  3760  00009D                     ___wmul@multiplicand:
  3761                           	opt callstack 0
  3762  00009D                     abs@a:
  3763                           	opt callstack 0
  3764  00009D                     ___flge@ff2:
  3765                           	opt callstack 0
  3766  00009D                     ___fladd@a:
  3767                           	opt callstack 0
  3768  00009D                     ___aodiv@quotient:
  3769                           	opt callstack 0
  3770                           
  3771                           ; 8 bytes @ 0x3D
  3772  00009D                     	ds	2
  3773  00009F                     ??_abs:
  3774  00009F                     LcdI2CInit@lcd_cols:
  3775                           	opt callstack 0
  3776  00009F                     pad@buf:
  3777                           	opt callstack 0
  3778  00009F                     ___wmul@product:
  3779                           	opt callstack 0
  3780  00009F                     ___lldiv@quotient:
  3781                           	opt callstack 0
  3782                           
  3783                           ; 4 bytes @ 0x3F
  3784  00009F                     	ds	1
  3785  0000A0                     LcdI2CInit@lcd_rows:
  3786                           	opt callstack 0
  3787                           
  3788                           ; 1 bytes @ 0x40
  3789  0000A0                     	ds	1
  3790  0000A1                     ??___fladd:
  3791  0000A1                     ??___flge:
  3792  0000A1                     ?_atoi:
  3793                           	opt callstack 0
  3794  0000A1                     ?___awdiv:
  3795                           	opt callstack 0
  3796  0000A1                     LcdI2CInit@lcd_Addr:
  3797                           	opt callstack 0
  3798  0000A1                     pad@p:
  3799                           	opt callstack 0
  3800  0000A1                     ___awdiv@dividend:
  3801                           	opt callstack 0
  3802  0000A1                     atoi@s:
  3803                           	opt callstack 0
  3804                           
  3805                           ; 2 bytes @ 0x41
  3806  0000A1                     	ds	1
  3807  0000A2                     
  3808                           ; 1 bytes @ 0x42
  3809  0000A2                     	ds	1
  3810  0000A3                     ??_atoi:
  3811  0000A3                     ??_pad:
  3812  0000A3                     ___lldiv@counter:
  3813                           	opt callstack 0
  3814  0000A3                     ___awdiv@divisor:
  3815                           	opt callstack 0
  3816                           
  3817                           ; 2 bytes @ 0x43
  3818  0000A3                     	ds	1
  3819  0000A4                     ?_vMeasureGet:
  3820                           	opt callstack 0
  3821  0000A4                     pad@i:
  3822                           	opt callstack 0
  3823                           
  3824                           ; 2 bytes @ 0x44
  3825  0000A4                     	ds	1
  3826  0000A5                     ___awdiv@counter:
  3827                           	opt callstack 0
  3828  0000A5                     ___fladd@signs:
  3829                           	opt callstack 0
  3830                           
  3831                           ; 1 bytes @ 0x45
  3832  0000A5                     	ds	1
  3833  0000A6                     ___awdiv@sign:
  3834                           	opt callstack 0
  3835  0000A6                     ___fladd@aexp:
  3836                           	opt callstack 0
  3837  0000A6                     pad@w:
  3838                           	opt callstack 0
  3839  0000A6                     vMeasureGet@rawV:
  3840                           	opt callstack 0
  3841                           
  3842                           ; 4 bytes @ 0x46
  3843  0000A6                     	ds	1
  3844  0000A7                     ___fladd@bexp:
  3845                           	opt callstack 0
  3846  0000A7                     ___awdiv@quotient:
  3847                           	opt callstack 0
  3848                           
  3849                           ; 2 bytes @ 0x47
  3850  0000A7                     	ds	1
  3851  0000A8                     ?_vfpfcnvrt:
  3852                           	opt callstack 0
  3853  0000A8                     ___fladd@grs:
  3854                           	opt callstack 0
  3855  0000A8                     vfpfcnvrt@fp:
  3856                           	opt callstack 0
  3857                           
  3858                           ; 2 bytes @ 0x48
  3859  0000A8                     	ds	1
  3860  0000A9                     ?___fltol:
  3861                           	opt callstack 0
  3862  0000A9                     ___fltol@f1:
  3863                           	opt callstack 0
  3864                           
  3865                           ; 4 bytes @ 0x49
  3866  0000A9                     	ds	1
  3867  0000AA                     vfpfcnvrt@fmt:
  3868                           	opt callstack 0
  3869                           
  3870                           ; 1 bytes @ 0x4A
  3871  0000AA                     	ds	1
  3872  0000AB                     vfpfcnvrt@ap:
  3873                           	opt callstack 0
  3874                           
  3875                           ; 2 bytes @ 0x4B
  3876  0000AB                     	ds	2
  3877  0000AD                     ___fltol@sign1:
  3878                           	opt callstack 0
  3879  0000AD                     vfprintf@cfmt:
  3880                           	opt callstack 0
  3881                           
  3882                           ; 2 bytes @ 0x4D
  3883  0000AD                     	ds	1
  3884  0000AE                     ___fltol@exp1:
  3885                           	opt callstack 0
  3886                           
  3887                           ; 1 bytes @ 0x4E
  3888  0000AE                     	ds	1
  3889  0000AF                     
  3890                           ; 1 bytes @ 0x4F
  3891                           
  3892                           	psect	cstackCOMRAM
  3893  000001                     __pcstackCOMRAM:
  3894                           	opt callstack 0
  3895  000001                     ??_I2C2_DO_RX:
  3896  000001                     ??_lcdIrqHandler:
  3897  000001                     ?_isqrt:
  3898                           	opt callstack 0
  3899  000001                     ?_ADCC_GetFilterValue:
  3900                           	opt callstack 0
  3901  000001                     ?i2___wmul:
  3902                           	opt callstack 0
  3903  000001                     ?i2_isalpha:
  3904                           	opt callstack 0
  3905  000001                     ?i2_isdigit:
  3906                           	opt callstack 0
  3907  000001                     ?i2_isspace:
  3908                           	opt callstack 0
  3909  000001                     ?i2_isupper:
  3910                           	opt callstack 0
  3911  000001                     ?i2_strlen:
  3912                           	opt callstack 0
  3913  000001                     ?i2_islower:
  3914                           	opt callstack 0
  3915  000001                     ?i2___lmul:
  3916                           	opt callstack 0
  3917  000001                     ?i2___aodiv:
  3918                           	opt callstack 0
  3919  000001                     ?i2___aomod:
  3920                           	opt callstack 0
  3921  000001                     i2ADCC_StartConversion@channel:
  3922                           	opt callstack 0
  3923  000001                     i2UART1_Write@txData:
  3924                           	opt callstack 0
  3925  000001                     i2I2C2_MasterSendTxData@data:
  3926                           	opt callstack 0
  3927  000001                     i2I2C2_MasterSetCounter@counter:
  3928                           	opt callstack 0
  3929  000001                     isqrt@x:
  3930                           	opt callstack 0
  3931  000001                     i2I2C2_SetBuffer@buffer:
  3932                           	opt callstack 0
  3933  000001                     i2I2C2_SetCallback@cb:
  3934                           	opt callstack 0
  3935  000001                     i2___wmul@multiplier:
  3936                           	opt callstack 0
  3937  000001                     i2isalpha@c:
  3938                           	opt callstack 0
  3939  000001                     i2isdigit@c:
  3940                           	opt callstack 0
  3941  000001                     i2isspace@c:
  3942                           	opt callstack 0
  3943  000001                     i2isupper@c:
  3944                           	opt callstack 0
  3945  000001                     i2strlen@s:
  3946                           	opt callstack 0
  3947  000001                     i2islower@c:
  3948                           	opt callstack 0
  3949  000001                     i2___lmul@multiplier:
  3950                           	opt callstack 0
  3951  000001                     i2___aodiv@dividend:
  3952                           	opt callstack 0
  3953  000001                     i2___aomod@dividend:
  3954                           	opt callstack 0
  3955                           
  3956                           ; 8 bytes @ 0x0
  3957  000001                     	ds	1
  3958  000002                     lcdIrqHandler@byte:
  3959                           	opt callstack 0
  3960  000002                     i2putch@byte:
  3961                           	opt callstack 0
  3962                           
  3963                           ; 1 bytes @ 0x1
  3964  000002                     	ds	1
  3965  000003                     ??_isqrt:
  3966  000003                     ??_ADCC_GetFilterValue:
  3967  000003                     ??i2_isalpha:
  3968  000003                     ??i2_isdigit:
  3969  000003                     ??i2_isspace:
  3970  000003                     ??i2_isupper:
  3971  000003                     ??i2_islower:
  3972  000003                     I2C2_DO_RX@retFsmState:
  3973                           	opt callstack 0
  3974  000003                     i2I2C2_SetBuffer@bufferSize:
  3975                           	opt callstack 0
  3976  000003                     i2I2C2_SetCallback@ptr:
  3977                           	opt callstack 0
  3978  000003                     i2___wmul@multiplicand:
  3979                           	opt callstack 0
  3980  000003                     i2fputc@c:
  3981                           	opt callstack 0
  3982  000003                     i2strlen@a:
  3983                           	opt callstack 0
  3984                           
  3985                           ; 2 bytes @ 0x2
  3986  000003                     	ds	2
  3987  000005                     i2I2C2_SetCallback@idx:
  3988                           	opt callstack 0
  3989  000005                     isqrt@op:
  3990                           	opt callstack 0
  3991  000005                     i2rd1RegCompleteHandler@ptr:
  3992                           	opt callstack 0
  3993  000005                     i2rd2RegCompleteHandler@ptr:
  3994                           	opt callstack 0
  3995  000005                     i2wr1RegCompleteHandler@ptr:
  3996                           	opt callstack 0
  3997  000005                     i2wr2RegCompleteHandler@ptr:
  3998                           	opt callstack 0
  3999  000005                     i2rdBlkRegCompleteHandler@ptr:
  4000                           	opt callstack 0
  4001  000005                     i2I2C2_CallbackReturnStop@funPtr:
  4002                           	opt callstack 0
  4003  000005                     i2___wmul@product:
  4004                           	opt callstack 0
  4005  000005                     i2fputc@fp:
  4006                           	opt callstack 0
  4007  000005                     i2___lmul@multiplicand:
  4008                           	opt callstack 0
  4009                           
  4010                           ; 4 bytes @ 0x4
  4011  000005                     	ds	1
  4012  000006                     i2I2C2_SetDataCompleteCallback@cb:
  4013                           	opt callstack 0
  4014                           
  4015                           ; 2 bytes @ 0x5
  4016  000006                     	ds	1
  4017  000007                     ??_I2C2_DO_TX:
  4018  000007                     ??_I2C2_DO_TX_EMPTY:
  4019  000007                     ??_I2C2_DO_ADDRESS_NACK:
  4020  000007                     ??_I2C2_DO_BUS_COLLISION:
  4021  000007                     ??i2_I2C2_DO_RX_EMPTY:
  4022  000007                     ??i2_fputc:
  4023  000007                     ?i2_toupper:
  4024                           	opt callstack 0
  4025  000007                     i2_isspace$5402:
  4026                           	opt callstack 0
  4027  000007                     isqrt@res:
  4028                           	opt callstack 0
  4029  000007                     i2toupper@c:
  4030                           	opt callstack 0
  4031                           
  4032                           ; 2 bytes @ 0x6
  4033  000007                     	ds	1
  4034  000008                     ?i2_atoi:
  4035                           	opt callstack 0
  4036  000008                     i2I2C2_SetDataCompleteCallback@ptr:
  4037                           	opt callstack 0
  4038  000008                     i2atoi@s:
  4039                           	opt callstack 0
  4040                           
  4041                           ; 2 bytes @ 0x7
  4042  000008                     	ds	1
  4043  000009                     ??i2_toupper:
  4044  000009                     I2C2_DO_TX@dataTx:
  4045                           	opt callstack 0
  4046  000009                     isqrt@one:
  4047                           	opt callstack 0
  4048  000009                     i2___lmul@product:
  4049                           	opt callstack 0
  4050  000009                     i2___aodiv@divisor:
  4051                           	opt callstack 0
  4052  000009                     i2___aomod@divisor:
  4053                           	opt callstack 0
  4054                           
  4055                           ; 8 bytes @ 0x8
  4056  000009                     	ds	1
  4057  00000A                     ??i2_atoi:
  4058  00000A                     I2C2_DO_TX@retFsmState:
  4059                           	opt callstack 0
  4060                           
  4061                           ; 1 bytes @ 0x9
  4062  00000A                     	ds	1
  4063  00000B                     _I2C2_DO_TX$2655:
  4064                           	opt callstack 0
  4065                           
  4066                           ; 2 bytes @ 0xA
  4067  00000B                     	ds	1
  4068  00000C                     i2fputs@s:
  4069                           	opt callstack 0
  4070                           
  4071                           ; 2 bytes @ 0xB
  4072  00000C                     	ds	1
  4073  00000D                     ??_I2C2_MasterFsm:
  4074  00000D                     i2_toupper$5483:
  4075                           	opt callstack 0
  4076                           
  4077                           ; 2 bytes @ 0xC
  4078  00000D                     	ds	1
  4079  00000E                     i2atoi@neg:
  4080                           	opt callstack 0
  4081  00000E                     i2fputs@fp:
  4082                           	opt callstack 0
  4083                           
  4084                           ; 2 bytes @ 0xD
  4085  00000E                     	ds	1
  4086  00000F                     
  4087                           ; 1 bytes @ 0xE
  4088  00000F                     	ds	1
  4089  000010                     i2fputs@c:
  4090                           	opt callstack 0
  4091  000010                     i2_atoi$5375:
  4092                           	opt callstack 0
  4093                           
  4094                           ; 2 bytes @ 0xF
  4095  000010                     	ds	1
  4096  000011                     i2___aodiv@counter:
  4097                           	opt callstack 0
  4098  000011                     i2___aomod@counter:
  4099                           	opt callstack 0
  4100  000011                     i2fputs@i:
  4101                           	opt callstack 0
  4102                           
  4103                           ; 2 bytes @ 0x10
  4104  000011                     	ds	1
  4105  000012                     i2___aodiv@sign:
  4106                           	opt callstack 0
  4107  000012                     i2___aomod@sign:
  4108                           	opt callstack 0
  4109  000012                     i2_atoi$5377:
  4110                           	opt callstack 0
  4111                           
  4112                           ; 2 bytes @ 0x11
  4113  000012                     	ds	1
  4114  000013                     ?i2_pad:
  4115                           	opt callstack 0
  4116  000013                     ?i2_abs:
  4117                           	opt callstack 0
  4118  000013                     i2pad@fp:
  4119                           	opt callstack 0
  4120  000013                     i2abs@a:
  4121                           	opt callstack 0
  4122  000013                     i2___aodiv@quotient:
  4123                           	opt callstack 0
  4124                           
  4125                           ; 8 bytes @ 0x12
  4126  000013                     	ds	1
  4127  000014                     i2_atoi$5376:
  4128                           	opt callstack 0
  4129                           
  4130                           ; 1 bytes @ 0x13
  4131  000014                     	ds	1
  4132  000015                     ??i2_abs:
  4133  000015                     i2pad@buf:
  4134                           	opt callstack 0
  4135  000015                     i2atoi@n:
  4136                           	opt callstack 0
  4137                           
  4138                           ; 2 bytes @ 0x14
  4139  000015                     	ds	2
  4140  000017                     i2pad@p:
  4141                           	opt callstack 0
  4142                           
  4143                           ; 2 bytes @ 0x16
  4144  000017                     	ds	2
  4145  000019                     ??i2_pad:
  4146                           
  4147                           ; 1 bytes @ 0x18
  4148  000019                     	ds	1
  4149  00001A                     i2pad@i:
  4150                           	opt callstack 0
  4151                           
  4152                           ; 2 bytes @ 0x19
  4153  00001A                     	ds	2
  4154  00001C                     i2pad@w:
  4155                           	opt callstack 0
  4156                           
  4157                           ; 2 bytes @ 0x1B
  4158  00001C                     	ds	2
  4159  00001E                     ?i2_dtoa:
  4160                           	opt callstack 0
  4161  00001E                     ?i2_xtoa:
  4162                           	opt callstack 0
  4163  00001E                     i2dtoa@fp:
  4164                           	opt callstack 0
  4165  00001E                     i2xtoa@fp:
  4166                           	opt callstack 0
  4167                           
  4168                           ; 2 bytes @ 0x1D
  4169  00001E                     	ds	2
  4170  000020                     i2dtoa@d:
  4171                           	opt callstack 0
  4172  000020                     i2xtoa@d:
  4173                           	opt callstack 0
  4174                           
  4175                           ; 8 bytes @ 0x1F
  4176  000020                     	ds	8
  4177  000028                     ??i2_dtoa:
  4178  000028                     i2xtoa@x:
  4179                           	opt callstack 0
  4180                           
  4181                           ; 1 bytes @ 0x27
  4182  000028                     	ds	1
  4183  000029                     ??i2_xtoa:
  4184                           
  4185                           ; 1 bytes @ 0x28
  4186  000029                     	ds	7
  4187  000030                     i2_dtoa$4891:
  4188                           	opt callstack 0
  4189                           
  4190                           ; 2 bytes @ 0x2F
  4191  000030                     	ds	1
  4192  000031                     i2_xtoa$4902:
  4193                           	opt callstack 0
  4194                           
  4195                           ; 2 bytes @ 0x30
  4196  000031                     	ds	1
  4197  000032                     i2dtoa@p:
  4198                           	opt callstack 0
  4199                           
  4200                           ; 2 bytes @ 0x31
  4201  000032                     	ds	1
  4202  000033                     i2_xtoa$4903:
  4203                           	opt callstack 0
  4204                           
  4205                           ; 2 bytes @ 0x32
  4206  000033                     	ds	1
  4207  000034                     i2dtoa@w:
  4208                           	opt callstack 0
  4209                           
  4210                           ; 2 bytes @ 0x33
  4211  000034                     	ds	1
  4212  000035                     i2xtoa@p:
  4213                           	opt callstack 0
  4214                           
  4215                           ; 2 bytes @ 0x34
  4216  000035                     	ds	1
  4217  000036                     i2dtoa@s:
  4218                           	opt callstack 0
  4219                           
  4220                           ; 2 bytes @ 0x35
  4221  000036                     	ds	1
  4222  000037                     i2xtoa@w:
  4223                           	opt callstack 0
  4224                           
  4225                           ; 2 bytes @ 0x36
  4226  000037                     	ds	1
  4227  000038                     i2dtoa@n:
  4228                           	opt callstack 0
  4229                           
  4230                           ; 8 bytes @ 0x37
  4231  000038                     	ds	1
  4232  000039                     i2xtoa@n:
  4233                           	opt callstack 0
  4234                           
  4235                           ; 8 bytes @ 0x38
  4236  000039                     	ds	7
  4237  000040                     i2dtoa@i:
  4238                           	opt callstack 0
  4239                           
  4240                           ; 2 bytes @ 0x3F
  4241  000040                     	ds	1
  4242  000041                     i2xtoa@i:
  4243                           	opt callstack 0
  4244                           
  4245                           ; 2 bytes @ 0x40
  4246  000041                     	ds	2
  4247  000043                     i2xtoa@c:
  4248                           	opt callstack 0
  4249                           
  4250                           ; 2 bytes @ 0x42
  4251  000043                     	ds	2
  4252  000045                     ?i2_vfpfcnvrt:
  4253                           	opt callstack 0
  4254  000045                     i2vfpfcnvrt@fp:
  4255                           	opt callstack 0
  4256                           
  4257                           ; 2 bytes @ 0x44
  4258  000045                     	ds	2
  4259  000047                     i2vfpfcnvrt@fmt:
  4260                           	opt callstack 0
  4261                           
  4262                           ; 1 bytes @ 0x46
  4263  000047                     	ds	1
  4264  000048                     i2vfpfcnvrt@ap:
  4265                           	opt callstack 0
  4266                           
  4267                           ; 2 bytes @ 0x47
  4268  000048                     	ds	2
  4269  00004A                     ??i2_vfpfcnvrt:
  4270                           
  4271                           ; 1 bytes @ 0x49
  4272  00004A                     	ds	4
  4273  00004E                     i2vfprintf@cfmt:
  4274                           	opt callstack 0
  4275                           
  4276                           ; 2 bytes @ 0x4D
  4277  00004E                     	ds	2
  4278  000050                     
  4279                           ; 1 bytes @ 0x4F
  4280  000050                     	ds	2
  4281  000052                     i2printf@ap:
  4282                           	opt callstack 0
  4283                           
  4284                           ; 2 bytes @ 0x51
  4285  000052                     	ds	2
  4286  000054                     ??i2_adcGetCh:
  4287  000054                     ??i2_aCaptGetResult:
  4288                           
  4289                           ; 1 bytes @ 0x53
  4290  000054                     	ds	2
  4291  000056                     i2adcGetCh@sel:
  4292                           	opt callstack 0
  4293                           
  4294                           ; 1 bytes @ 0x55
  4295  000056                     	ds	1
  4296  000057                     ??_adcCaptureIsr:
  4297                           
  4298                           ; 1 bytes @ 0x56
  4299  000057                     	ds	1
  4300  000058                     i2aCaptGetResult@lclValid:
  4301                           	opt callstack 0
  4302                           
  4303                           ; 1 bytes @ 0x57
  4304  000058                     	ds	1
  4305  000059                     i2aCaptGetResult@sel:
  4306                           	opt callstack 0
  4307                           
  4308                           ; 1 bytes @ 0x58
  4309  000059                     	ds	1
  4310  00005A                     i2aCaptGetResult@lclRaw:
  4311                           	opt callstack 0
  4312                           
  4313                           ; 4 bytes @ 0x59
  4314  00005A                     	ds	4
  4315  00005E                     ??_vMeasureIsr:
  4316                           
  4317                           ; 1 bytes @ 0x5D
  4318  00005E                     	ds	1
  4319  00005F                     
  4320                           ; 1 bytes @ 0x5E
  4321  00005F                     	ds	1
  4322  000060                     
  4323                           ; 1 bytes @ 0x5F
  4324 ;;
  4325 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
  4326 ;;
  4327 ;; *************** function _main *****************
  4328 ;; Defined at:
  4329 ;;		line 201 in file "main.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  keyTmp          1   38[BANK3 ] unsigned char 
  4334 ;;  tmpVal          2   47[BANK3 ] short 
  4335 ;;  pInspOSScale    2   45[BANK3 ] short 
  4336 ;;  tmpVal2         2   43[BANK3 ] short 
  4337 ;;  tmpUVal         2   39[BANK3 ] unsigned short 
  4338 ;;  printTime       2   36[BANK3 ] unsigned short 
  4339 ;;  vInspOSScale    2   34[BANK3 ] short 
  4340 ;;  tstScreen       1   30[BANK3 ] _Bool 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 3F/1
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0      23       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0      34       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:       34 bytes
  4355 ;; Hardware stack levels required when called:   34
  4356 ;; This function calls:
  4357 ;;		_CtrlPowerOff
  4358 ;;		_I2C2_MuxInit
  4359 ;;		_MenuMng
  4360 ;;		_MonitorErrorClr
  4361 ;;		_MonitorErrorSet
  4362 ;;		_MonitorInit
  4363 ;;		_MonitorMsgBusy
  4364 ;;		_MonitorMsgSend
  4365 ;;		_MonitorMsgSendBlock
  4366 ;;		_SYSTEM_Initialize
  4367 ;;		_SelfTest
  4368 ;;		_TMR4_SetInterruptHandler
  4369 ;;		_TMR4_Start
  4370 ;;		___awdiv
  4371 ;;		___fladd
  4372 ;;		___fltol
  4373 ;;		___ltdiv
  4374 ;;		___lwdiv
  4375 ;;		___tmul
  4376 ;;		___wmul
  4377 ;;		___xxtofl
  4378 ;;		_aCaptGetResult
  4379 ;;		_aCaptRstFlt
  4380 ;;		_aCaptureInit
  4381 ;;		_bRateGet
  4382 ;;		_bRateInit
  4383 ;;		_bRateUpdt
  4384 ;;		_inspOSMeasure
  4385 ;;		_keyPeek
  4386 ;;		_keyRead
  4387 ;;		_keyReadEC
  4388 ;;		_keyReadInit
  4389 ;;		_printf
  4390 ;;		_printstrblock
  4391 ;;		_screenInit
  4392 ;;		_screenMng
  4393 ;;		_setBacklight
  4394 ;;		_setCursor
  4395 ;;		_sprintf
  4396 ;;		_timeDelayMs
  4397 ;;		_timeDiff
  4398 ;;		_timeElapsed
  4399 ;;		_timeElapsedR
  4400 ;;		_timeGet
  4401 ;;		_timeInit
  4402 ;;		_vMeasureGet
  4403 ;;		_vMeasureInit
  4404 ;;		_vMeasureRst
  4405 ;; This function is called by:
  4406 ;;		Startup code after reset
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text0
  4411  00001E                     __ptext0:
  4412                           	opt callstack 0
  4413  00001E                     _main:
  4414                           	opt callstack 0
  4415                           
  4416                           ;main.c: 202:     uint16_t tmpUVal;;main.c: 203:     int16_t tmpVal, tmpVal2;;main.c: 20
      +                          4:     int16_t pInspOSScale, vInspOSScale;;main.c: 206:     time_t printTime;;main.c: 20
      +                          8:     _Bool tstScreen = 1;
  4417                           
  4418                           ;incstack = 0
  4419 ;; hardware stack exceeded
  4420  00001E  0E01               	movlw	1
  4421  000020  0103               	movlb	3	; () banked
  4422  000022  6FAE               	movwf	main@tstScreen& (0+255),b
  4423                           
  4424                           ; BSR set to: 3
  4425                           ;main.c: 212:     SYSTEM_Initialize();
  4426  000024  EC04  F04C         	call	_SYSTEM_Initialize	;wreg free
  4427                           
  4428                           ; BSR set to: 61
  4429                           ;main.c: 214:     PIE1bits.ADIE = 0;
  4430  000028  0139               	movlb	57	; () banked
  4431  00002A  9591               	bcf	145,2,b	;volatile
  4432                           
  4433                           ; BSR set to: 57
  4434                           ;main.c: 215:     PIE1bits.ADTIE = 0;
  4435  00002C  9791               	bcf	145,3,b	;volatile
  4436                           
  4437                           ; BSR set to: 57
  4438                           ;main.c: 217:     TMR4_SetInterruptHandler(SV2DelayOpen);
  4439  00002E  0E3A               	movlw	low _SV2DelayOpen
  4440  000030  0100               	movlb	0	; () banked
  4441  000032  6F8B               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  4442  000034  0EA4               	movlw	high _SV2DelayOpen
  4443  000036  6F8C               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4444  000038  EC01  F052         	call	_TMR4_SetInterruptHandler	;wreg free
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;main.c: 222:     (INTCON0bits.GIE = 1);
  4448  00003C  8ED2               	bsf	210,7,c	;volatile
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;main.c: 227:     aCaptureInit();
  4452  00003E  EC2F  F049         	call	_aCaptureInit	;wreg free
  4453                           
  4454                           ; BSR set to: 57
  4455                           ;main.c: 228:     timeInit();
  4456  000042  EC83  F052         	call	_timeInit	;wreg free
  4457                           
  4458                           ; BSR set to: 57
  4459                           ;main.c: 231:     timeDelayMs(50);
  4460  000046  0E00               	movlw	0
  4461  000048  0100               	movlb	0	; () banked
  4462  00004A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4463  00004C  0E32               	movlw	50
  4464  00004E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4465  000050  EC8B  F04C         	call	_timeDelayMs	;wreg free
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;main.c: 233:     keyReadInit();
  4469  000054  EC4A  F051         	call	_keyReadInit	;wreg free
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;main.c: 234:     screenInit();
  4473  000058  EC52  F047         	call	_screenInit	;wreg free
  4474                           
  4475                           ;main.c: 235:     I2C2_MuxInit();
  4476  00005C  EC57  F050         	call	_I2C2_MuxInit	;wreg free
  4477                           
  4478                           ; BSR set to: 1
  4479                           ;main.c: 236:     MonitorInit();
  4480  000060  ECFD  F052         	call	_MonitorInit	;wreg free
  4481                           
  4482                           ; BSR set to: 1
  4483                           ;main.c: 237:     vMeasureInit();
  4484  000064  EC28  F04F         	call	_vMeasureInit	;wreg free
  4485  000068  D002               	goto	l20395
  4486  00006A                     l20393:
  4487                           
  4488                           ; BSR set to: 3
  4489                           ;main.c: 242:             tstScreen = 0;
  4490  00006A  0E00               	movlw	0
  4491  00006C  6FAE               	movwf	main@tstScreen& (0+255),b
  4492  00006E                     l20395:
  4493                           
  4494                           ;main.c: 241:         while (!SelfTest(tstScreen))
  4495  00006E  0103               	movlb	3	; () banked
  4496  000070  51AE               	movf	main@tstScreen& (0+255),w,b
  4497  000072  EC6A  F01C         	call	_SelfTest
  4498  000076  0900               	iorlw	0
  4499  000078  B4D8               	btfsc	status,2,c
  4500  00007A  D7F7               	goto	l20393
  4501                           
  4502                           ; BSR set to: 3
  4503                           ;main.c: 244:         tstScreen = 0;
  4504  00007C  0E00               	movlw	0
  4505  00007E  6FAE               	movwf	main@tstScreen& (0+255),b
  4506                           
  4507                           ; BSR set to: 3
  4508                           ;main.c: 245:         setCursor(0, 0);
  4509  000080  0E00               	movlw	0
  4510  000082  0100               	movlb	0	; () banked
  4511  000084  6F92               	movwf	setCursor@row& (0+255),b
  4512  000086  0E00               	movlw	0
  4513  000088  EC55  F04B         	call	_setCursor
  4514                           
  4515                           ;main.c: 246:         printstrblock("PRESS + TO REPEAT ");
  4516  00008C  0E68               	movlw	low STR_5
  4517  00008E  0100               	movlb	0	; () banked
  4518  000090  6F8F               	movwf	printstrblock@c& (0+255),b
  4519  000092  0EFD               	movlw	high STR_5
  4520  000094  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4521  000096  EC4E  F04F         	call	_printstrblock	;wreg free
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;main.c: 247:         setCursor(0, 1);
  4525  00009A  0E01               	movlw	1
  4526  00009C  6F92               	movwf	setCursor@row& (0+255),b
  4527  00009E  0E00               	movlw	0
  4528  0000A0  EC55  F04B         	call	_setCursor
  4529                           
  4530                           ;main.c: 248:         printstrblock("PRESS - TO EXIT ");
  4531  0000A4  0EF4               	movlw	low STR_6
  4532  0000A6  0100               	movlb	0	; () banked
  4533  0000A8  6F8F               	movwf	printstrblock@c& (0+255),b
  4534  0000AA  0EFE               	movlw	high STR_6
  4535  0000AC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4536  0000AE  EC4E  F04F         	call	_printstrblock	;wreg free
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;main.c: 250:         keyTmp = keyRead();
  4540  0000B2  ECEC  F049         	call	_keyRead	;wreg free
  4541  0000B6  0103               	movlb	3	; () banked
  4542  0000B8  6FB6               	movwf	main@keyTmp& (0+255),b
  4543                           
  4544                           ;main.c: 251:         while ((keyTmp != 5)&&(keyTmp != 3)) {
  4545  0000BA  D007               	goto	l20413
  4546  0000BC                     l20409:
  4547                           
  4548                           ; BSR set to: 3
  4549                           ;main.c: 252:             keyTmp = keyRead();
  4550  0000BC  ECEC  F049         	call	_keyRead	;wreg free
  4551  0000C0  0103               	movlb	3	; () banked
  4552  0000C2  6FB6               	movwf	main@keyTmp& (0+255),b
  4553                           
  4554                           ; BSR set to: 3
  4555                           ;main.c: 253:             MonitorMsgSend(MONSTATE_STOP);
  4556  0000C4  0E00               	movlw	0
  4557  0000C6  ECFF  F04E         	call	_MonitorMsgSend
  4558  0000CA                     l20413:
  4559                           
  4560                           ;main.c: 251:         while ((keyTmp != 5)&&(keyTmp != 3)) {
  4561  0000CA  0E05               	movlw	5
  4562  0000CC  0103               	movlb	3	; () banked
  4563  0000CE  19B6               	xorwf	main@keyTmp& (0+255),w,b
  4564  0000D0  B4D8               	btfsc	status,2,c
  4565  0000D2  D004               	goto	u21910
  4566                           
  4567                           ; BSR set to: 3
  4568  0000D4  0E03               	movlw	3
  4569  0000D6  19B6               	xorwf	main@keyTmp& (0+255),w,b
  4570  0000D8  A4D8               	btfss	status,2,c
  4571  0000DA  D7F0               	goto	l20409
  4572  0000DC                     u21910:
  4573                           
  4574                           ; BSR set to: 3
  4575                           ;main.c: 255:         if (keyTmp == 5) {
  4576  0000DC  0E05               	movlw	5
  4577  0000DE  19B6               	xorwf	main@keyTmp& (0+255),w,b
  4578  0000E0  A4D8               	btfss	status,2,c
  4579  0000E2  D7C5               	goto	l20395
  4580                           
  4581                           ; BSR set to: 3
  4582                           ;main.c: 261:     setCursor(0, 1);
  4583  0000E4  0E01               	movlw	1
  4584  0000E6  0100               	movlb	0	; () banked
  4585  0000E8  6F92               	movwf	setCursor@row& (0+255),b
  4586  0000EA  0E00               	movlw	0
  4587  0000EC  EC55  F04B         	call	_setCursor
  4588                           
  4589                           ;main.c: 262:     printstrblock("                ");
  4590  0000F0  0EE3               	movlw	low STR_2
  4591  0000F2  0100               	movlb	0	; () banked
  4592  0000F4  6F8F               	movwf	printstrblock@c& (0+255),b
  4593  0000F6  0EFE               	movlw	high STR_2
  4594  0000F8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4595  0000FA  EC4E  F04F         	call	_printstrblock	;wreg free
  4596  0000FE                     l20425:
  4597                           
  4598                           ;main.c: 265:         setCursor(0, 1);
  4599  0000FE  0E01               	movlw	1
  4600  000100  0100               	movlb	0	; () banked
  4601  000102  6F92               	movwf	setCursor@row& (0+255),b
  4602  000104  0E00               	movlw	0
  4603  000106  EC55  F04B         	call	_setCursor
  4604                           
  4605                           ;main.c: 266:         printstrblock("                ");
  4606  00010A  0EE3               	movlw	low STR_2
  4607  00010C  0100               	movlb	0	; () banked
  4608  00010E  6F8F               	movwf	printstrblock@c& (0+255),b
  4609  000110  0EFE               	movlw	high STR_2
  4610  000112  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4611  000114  EC4E  F04F         	call	_printstrblock	;wreg free
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;main.c: 267:         timeDelayMs(10);
  4615  000118  0E00               	movlw	0
  4616  00011A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4617  00011C  0E0A               	movlw	10
  4618  00011E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4619  000120  EC8B  F04C         	call	_timeDelayMs	;wreg free
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;main.c: 268:         setBacklight(1);
  4623  000124  0E01               	movlw	1
  4624  000126  ECFC  F050         	call	_setBacklight
  4625                           
  4626                           ;main.c: 269:         timeDelayMs(10);
  4627  00012A  0E00               	movlw	0
  4628  00012C  0100               	movlb	0	; () banked
  4629  00012E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4630  000130  0E0A               	movlw	10
  4631  000132  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4632  000134  EC8B  F04C         	call	_timeDelayMs	;wreg free
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;main.c: 272:         lcdPrintTR = 1;
  4636  000138  0E01               	movlw	1
  4637  00013A  0101               	movlb	1	; () banked
  4638  00013C  6FCE               	movwf	_lcdPrintTR& (0+255),b
  4639                           
  4640                           ; BSR set to: 1
  4641                           ;main.c: 273:         lcdPrintBR = 1;
  4642  00013E  0E01               	movlw	1
  4643  000140  6FCD               	movwf	_lcdPrintBR& (0+255),b
  4644                           
  4645                           ; BSR set to: 1
  4646                           ;main.c: 274:         LATDbits.LATD6 = 1;
  4647  000142  8CBD               	bsf	189,6,c	;volatile
  4648                           
  4649                           ;main.c: 275:         while (ctrlStatus != CTRL_RUN) {
  4650  000144  D047               	goto	l20475
  4651  000146                     l20439:
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;main.c: 277:             MenuMng();
  4655  000146  ECD8  F014         	call	_MenuMng	;wreg free
  4656                           
  4657                           ;main.c: 278:             screenMng();
  4658  00014A  ECD7  F018         	call	_screenMng	;wreg free
  4659                           
  4660                           ;main.c: 280:             if (ctrlStatus == CTRL_SLEEP) {
  4661  00014E  0E03               	movlw	3
  4662  000150  0101               	movlb	1	; () banked
  4663  000152  19C8               	xorwf	_ctrlStatus& (0+255),w,b
  4664  000154  A4D8               	btfss	status,2,c
  4665  000156  D025               	goto	l20461
  4666                           
  4667                           ; BSR set to: 1
  4668                           ;main.c: 281:                 CtrlPowerOff();
  4669  000158  EC29  F041         	call	_CtrlPowerOff	;wreg free
  4670                           
  4671                           ; BSR set to: 1
  4672                           ;main.c: 282:                 setCursor(0, 1);
  4673  00015C  0E01               	movlw	1
  4674  00015E  0100               	movlb	0	; () banked
  4675  000160  6F92               	movwf	setCursor@row& (0+255),b
  4676  000162  0E00               	movlw	0
  4677  000164  EC55  F04B         	call	_setCursor
  4678                           
  4679                           ;main.c: 283:                 printstrblock("                ");
  4680  000168  0EE3               	movlw	low STR_2
  4681  00016A  0100               	movlb	0	; () banked
  4682  00016C  6F8F               	movwf	printstrblock@c& (0+255),b
  4683  00016E  0EFE               	movlw	high STR_2
  4684  000170  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4685  000172  EC4E  F04F         	call	_printstrblock	;wreg free
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;main.c: 284:                 timeDelayMs(10);
  4689  000176  0E00               	movlw	0
  4690  000178  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4691  00017A  0E0A               	movlw	10
  4692  00017C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4693  00017E  EC8B  F04C         	call	_timeDelayMs	;wreg free
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;main.c: 285:                 setBacklight(1);
  4697  000182  0E01               	movlw	1
  4698  000184  ECFC  F050         	call	_setBacklight
  4699                           
  4700                           ;main.c: 286:                 timeDelayMs(10);
  4701  000188  0E00               	movlw	0
  4702  00018A  0100               	movlb	0	; () banked
  4703  00018C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4704  00018E  0E0A               	movlw	10
  4705  000190  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4706  000192  EC8B  F04C         	call	_timeDelayMs	;wreg free
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;main.c: 288:                 lcdPrintTR = 1;
  4710  000196  0E01               	movlw	1
  4711  000198  0101               	movlb	1	; () banked
  4712  00019A  6FCE               	movwf	_lcdPrintTR& (0+255),b
  4713                           
  4714                           ; BSR set to: 1
  4715                           ;main.c: 289:                 lcdPrintBR = 1;
  4716  00019C  0E01               	movlw	1
  4717  00019E  6FCD               	movwf	_lcdPrintBR& (0+255),b
  4718                           
  4719                           ; BSR set to: 1
  4720                           ;main.c: 290:                 LATDbits.LATD6 = 1;
  4721  0001A0  8CBD               	bsf	189,6,c	;volatile
  4722  0001A2                     l20461:
  4723                           
  4724                           ; BSR set to: 1
  4725                           ;main.c: 293:             MonitorMsgSend(MONSTATE_STOP);
  4726  0001A2  0E00               	movlw	0
  4727  0001A4  ECFF  F04E         	call	_MonitorMsgSend
  4728                           
  4729                           ;main.c: 295:             if (keyReadEC() == -100) {
  4730  0001A8  ECB5  F042         	call	_keyReadEC	;wreg free
  4731  0001AC  0A9C               	xorlw	156
  4732  0001AE  A4D8               	btfss	status,2,c
  4733  0001B0  D011               	goto	l20475
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;main.c: 296:                 if (keyPeek() == 4) {
  4737  0001B2  EC96  F046         	call	_keyPeek	;wreg free
  4738  0001B6  0A04               	xorlw	4
  4739  0001B8  A4D8               	btfss	status,2,c
  4740  0001BA  D00C               	goto	l20475
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;main.c: 298:                     LATDbits.LATD6 = 0;
  4744  0001BC  9CBD               	bcf	189,6,c	;volatile
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;main.c: 299:                     ctrlStatus = CTRL_RUN;
  4748  0001BE  0E02               	movlw	2
  4749  0001C0  0101               	movlb	1	; () banked
  4750  0001C2  6FC8               	movwf	_ctrlStatus& (0+255),b
  4751  0001C4                     l20471:
  4752                           
  4753                           ;main.c: 302:                     while (keyPeek() != -1)
  4754  0001C4  EC96  F046         	call	_keyPeek	;wreg free
  4755  0001C8  0AFF               	xorlw	255
  4756  0001CA  A4D8               	btfss	status,2,c
  4757  0001CC  D7FB               	goto	l20471
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;main.c: 304:                     keyReadInit();
  4761  0001CE  EC4A  F051         	call	_keyReadInit	;wreg free
  4762                           
  4763                           ;main.c: 305:                     break;
  4764  0001D2  D005               	goto	u21970
  4765  0001D4                     l20475:
  4766                           
  4767                           ;main.c: 275:         while (ctrlStatus != CTRL_RUN) {
  4768  0001D4  0E02               	movlw	2
  4769  0001D6  0101               	movlb	1	; () banked
  4770  0001D8  19C8               	xorwf	_ctrlStatus& (0+255),w,b
  4771  0001DA  A4D8               	btfss	status,2,c
  4772  0001DC  D7B4               	goto	l20439
  4773  0001DE                     u21970:
  4774  0001DE  EC96  F051         	call	_MonitorMsgBusy	;wreg free
  4775  0001E2  0900               	iorlw	0
  4776  0001E4  A4D8               	btfss	status,2,c
  4777  0001E6  D7FB               	goto	u21970
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;main.c: 314:         rSV2ValveORT = 20;
  4781  0001E8  0E00               	movlw	0
  4782  0001EA  0101               	movlb	1	; () banked
  4783  0001EC  6F9E               	movwf	(_rSV2ValveORT+1)& (0+255),b
  4784  0001EE  0E14               	movlw	20
  4785  0001F0  6F9D               	movwf	_rSV2ValveORT& (0+255),b
  4786                           
  4787                           ;main.c: 315:         rSV2ValveCRT = 50;
  4788  0001F2  0E00               	movlw	0
  4789  0001F4  6F9C               	movwf	(_rSV2ValveCRT+1)& (0+255),b
  4790  0001F6  0E32               	movlw	50
  4791  0001F8  6F9B               	movwf	_rSV2ValveCRT& (0+255),b
  4792                           
  4793                           ;main.c: 316:         rSV3ValveORT = 40;
  4794  0001FA  0E00               	movlw	0
  4795  0001FC  6F9A               	movwf	(_rSV3ValveORT+1)& (0+255),b
  4796  0001FE  0E28               	movlw	40
  4797  000200  6F99               	movwf	_rSV3ValveORT& (0+255),b
  4798                           
  4799                           ;main.c: 317:         sv2DelayCheck = 0;
  4800  000202  0E00               	movlw	0
  4801  000204  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  4802                           
  4803                           ;main.c: 318:         OSCheck = 0;
  4804  000206  0E00               	movlw	0
  4805  000208  6FC3               	movwf	_OSCheck& (0+255),b
  4806                           
  4807                           ;main.c: 319:         QuantaCheck = 0;
  4808  00020A  0E00               	movlw	0
  4809  00020C  6FC2               	movwf	_QuantaCheck& (0+255),b
  4810                           
  4811                           ;main.c: 320:         pExpOS = 10;
  4812  00020E  0E00               	movlw	0
  4813  000210  6FE2               	movwf	(_pExpOS+1)& (0+255),b
  4814  000212  0E0A               	movlw	10
  4815  000214  6FE1               	movwf	_pExpOS& (0+255),b
  4816                           
  4817                           ;main.c: 321:         pInspOS = 50;
  4818  000216  0E00               	movlw	0
  4819  000218  0100               	movlb	0	; () banked
  4820  00021A  6FD1               	movwf	(_pInspOS+1)& (0+255),b
  4821  00021C  0E32               	movlw	50
  4822  00021E  6FD0               	movwf	_pInspOS& (0+255),b
  4823                           
  4824                           ;main.c: 322:         pInspOS3 = 50;
  4825  000220  0E00               	movlw	0
  4826  000222  0101               	movlb	1	; () banked
  4827  000224  6FDE               	movwf	(_pInspOS3+1)& (0+255),b
  4828  000226  0E32               	movlw	50
  4829  000228  6FDD               	movwf	_pInspOS3& (0+255),b
  4830                           
  4831                           ;main.c: 323:         pInspOS2 = 50;
  4832  00022A  0E00               	movlw	0
  4833  00022C  6FDC               	movwf	(_pInspOS2+1)& (0+255),b
  4834  00022E  0E32               	movlw	50
  4835  000230  6FDB               	movwf	_pInspOS2& (0+255),b
  4836                           
  4837                           ;main.c: 324:         vInspOS = 50;
  4838  000232  0E00               	movlw	0
  4839  000234  6FDA               	movwf	(_vInspOS+1)& (0+255),b
  4840  000236  0E32               	movlw	50
  4841  000238  6FD9               	movwf	_vInspOS& (0+255),b
  4842                           
  4843                           ;main.c: 325:         vQuanta = 30;
  4844  00023A  0E00               	movlw	0
  4845  00023C  6FA6               	movwf	(_vQuanta+1)& (0+255),b
  4846  00023E  0E1E               	movlw	30
  4847  000240  6FA5               	movwf	_vQuanta& (0+255),b
  4848                           
  4849                           ;main.c: 326:         pQuantaInsp = 20;
  4850  000242  0E00               	movlw	0
  4851  000244  6FD6               	movwf	(_pQuantaInsp+1)& (0+255),b
  4852  000246  0E14               	movlw	20
  4853  000248  6FD5               	movwf	_pQuantaInsp& (0+255),b
  4854                           
  4855                           ;main.c: 327:         pQuantaExp = 20;
  4856  00024A  0E00               	movlw	0
  4857  00024C  6FD4               	movwf	(_pQuantaExp+1)& (0+255),b
  4858  00024E  0E14               	movlw	20
  4859  000250  6FD3               	movwf	_pQuantaExp& (0+255),b
  4860                           
  4861                           ;main.c: 328:         lungC = 0;
  4862  000252  0E00               	movlw	0
  4863  000254  6FE0               	movwf	(_lungC+1)& (0+255),b
  4864  000256  0E00               	movlw	0
  4865  000258  6FDF               	movwf	_lungC& (0+255),b
  4866                           
  4867                           ;main.c: 329:         lungR = 0;
  4868  00025A  0E00               	movlw	0
  4869  00025C  0102               	movlb	2	; () banked
  4870  00025E  6FCE               	movwf	(_lungR+1)& (0+255),b
  4871  000260  0E00               	movlw	0
  4872  000262  6FCD               	movwf	_lungR& (0+255),b
  4873                           
  4874                           ;main.c: 330:         sBreath = 0;
  4875  000264  0E00               	movlw	0
  4876  000266  0101               	movlb	1	; () banked
  4877  000268  6FC9               	movwf	_sBreath& (0+255),b
  4878                           
  4879                           ; BSR set to: 1
  4880                           ;main.c: 334:         if (freeFlowRateF > 50) {
  4881  00026A  0102               	movlb	2	; () banked
  4882  00026C  51D2               	movf	(_freeFlowRateF+1)& (0+255),w,b
  4883  00026E  E104               	bnz	u21990
  4884  000270  0E33               	movlw	51
  4885  000272  5DD1               	subwf	_freeFlowRateF& (0+255),w,b
  4886  000274  A0D8               	btfss	status,0,c
  4887  000276  D016               	goto	l20485
  4888  000278                     u21990:
  4889                           
  4890                           ; BSR set to: 2
  4891                           ;main.c: 335:             effectiveFlowRateInv = ((uint24_t) 1 << 18) / freeFlowRateF;
  4892  000278  0E00               	movlw	0
  4893  00027A  0100               	movlb	0	; () banked
  4894  00027C  6F8B               	movwf	___ltdiv@dividend& (0+255),b
  4895  00027E  0E00               	movlw	0
  4896  000280  6F8C               	movwf	(___ltdiv@dividend+1)& (0+255),b
  4897  000282  0E04               	movlw	4
  4898  000284  6F8D               	movwf	(___ltdiv@dividend+2)& (0+255),b
  4899  000286  0060  FB44  F08E   	movff	_freeFlowRateF,___ltdiv@divisor
  4900  00028C  0060  FB48  F08F   	movff	_freeFlowRateF+1,___ltdiv@divisor+1
  4901  000292  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  4902  000294  ECF6  F044         	call	___ltdiv	;wreg free
  4903  000298  0060  F22C  F1D1   	movff	?___ltdiv,_effectiveFlowRateInv
  4904  00029E  0060  F230  F1D2   	movff	?___ltdiv+1,_effectiveFlowRateInv+1
  4905  0002A4                     l20485:
  4906                           
  4907                           ;main.c: 337:         pPeepActual = 0;
  4908  0002A4  0E00               	movlw	0
  4909  0002A6  0101               	movlb	1	; () banked
  4910  0002A8  6FAA               	movwf	(_pPeepActual+1)& (0+255),b
  4911  0002AA  0E00               	movlw	0
  4912  0002AC  6FA9               	movwf	_pPeepActual& (0+255),b
  4913                           
  4914                           ; BSR set to: 1
  4915                           ;main.c: 338:         IDuration = ((uint16_t) 60 * 1000) / (3 * BPM);
  4916  0002AE  0EEA               	movlw	234
  4917  0002B0  0100               	movlb	0	; () banked
  4918  0002B2  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
  4919  0002B4  0E60               	movlw	96
  4920  0002B6  6F8B               	movwf	___lwdiv@dividend& (0+255),b
  4921  0002B8  0101               	movlb	1	; () banked
  4922  0002BA  51FC               	movf	_BPM& (0+255),w,b
  4923  0002BC  0D03               	mullw	3
  4924  0002BE  006F FFCC  F08D    	movff	prodl,___lwdiv@divisor
  4925  0002C4  006F FFD0  F08E    	movff	prodh,___lwdiv@divisor+1
  4926  0002CA  EC06  F048         	call	___lwdiv	;wreg free
  4927  0002CE  0060  F22C  F1AD   	movff	?___lwdiv,_IDuration
  4928  0002D4  0060  F230  F1AE   	movff	?___lwdiv+1,_IDuration+1
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;main.c: 339:         EDuration = ((uint16_t) 60 * 1000 / BPM) - IDuration;
  4932  0002DA  0EEA               	movlw	234
  4933  0002DC  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
  4934  0002DE  0E60               	movlw	96
  4935  0002E0  6F8B               	movwf	___lwdiv@dividend& (0+255),b
  4936  0002E2  0060  F7F0  F08D   	movff	_BPM,___lwdiv@divisor
  4937  0002E8  6B8E               	clrf	(___lwdiv@divisor+1)& (0+255),b
  4938  0002EA  EC06  F048         	call	___lwdiv	;wreg free
  4939  0002EE  0101               	movlb	1	; () banked
  4940  0002F0  51AD               	movf	_IDuration& (0+255),w,b
  4941  0002F2  0100               	movlb	0	; () banked
  4942  0002F4  5D8B               	subwf	?___lwdiv& (0+255),w,b
  4943  0002F6  0102               	movlb	2	; () banked
  4944  0002F8  6F46               	movwf	_EDuration& (0+255),b
  4945  0002FA  0101               	movlb	1	; () banked
  4946  0002FC  51AE               	movf	(_IDuration+1)& (0+255),w,b
  4947  0002FE  0100               	movlb	0	; () banked
  4948  000300  598C               	subwfb	(?___lwdiv+1)& (0+255),w,b
  4949  000302  0102               	movlb	2	; () banked
  4950  000304  6F47               	movwf	(_EDuration+1)& (0+255),b
  4951                           
  4952                           ; BSR set to: 2
  4953                           ;main.c: 340:         lastCycleVol = 0;
  4954  000306  0E00               	movlw	0
  4955  000308  6F45               	movwf	(_lastCycleVol+1)& (0+255),b
  4956  00030A  0E00               	movlw	0
  4957  00030C  6F44               	movwf	_lastCycleVol& (0+255),b
  4958                           
  4959                           ; BSR set to: 2
  4960                           ;main.c: 341:         bRateInit();
  4961  00030E  EC9A  F04F         	call	_bRateInit	;wreg free
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;main.c: 344:         if (VentMode == VMODE_PRESSURE) {
  4965  000312  0101               	movlb	1	; () banked
  4966  000314  51F8               	movf	_VentMode& (0+255),w,b
  4967  000316  A4D8               	btfss	status,2,c
  4968  000318  D004               	goto	l20499
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;main.c: 345:             MonitorMsgSendBlock(MONSTATE_RUNP);
  4972  00031A  0E10               	movlw	16
  4973  00031C  EC61  F04F         	call	_MonitorMsgSendBlock
  4974                           
  4975                           ;main.c: 346:         } else {
  4976  000320  D003               	goto	l20501
  4977  000322                     l20499:
  4978                           
  4979                           ; BSR set to: 1
  4980                           ;main.c: 347:             MonitorMsgSendBlock(MONSTATE_RUNV);
  4981  000322  0E14               	movlw	20
  4982  000324  EC61  F04F         	call	_MonitorMsgSendBlock
  4983  000328                     l20501:
  4984                           
  4985                           ; BSR set to: 1
  4986                           ;main.c: 351:         rCycleTime = timeGet();
  4987  000328  EC7B  F051         	call	_timeGet	;wreg free
  4988  00032C  0060  F24C  F1CF   	movff	?_timeGet,_rCycleTime
  4989  000332  0060  F250  F1D0   	movff	?_timeGet+1,_rCycleTime+1
  4990                           
  4991                           ;main.c: 352:         while (ctrlStatus != CTRL_SLEEP) {
  4992  000338  EFCE  F014         	goto	l21171
  4993  00033C                     l1739:
  4994                           
  4995                           ; BSR set to: 1
  4996                           ;main.c: 357:             intVentMode = VentMode;
  4997  00033C  C1F8  F1CA         	movff	_VentMode,_intVentMode
  4998                           
  4999                           ; BSR set to: 1
  5000                           ;main.c: 358:             intMaxP = ((int16_t) ((0.045*4096+2)/5)*MaxP);
  5001  000340  51FF               	movf	_MaxP& (0+255),w,b
  5002  000342  0D25               	mullw	37
  5003  000344  006F FFCC  F1F3    	movff	prodl,_intMaxP
  5004  00034A  006F FFD0  F1F4    	movff	prodh,_intMaxP+1
  5005                           
  5006                           ; BSR set to: 1
  5007                           ;main.c: 359:             intPEEP = ((int16_t) ((0.045*4096+2)/5)*PEEP) + ((int16_t) ((0
      +                          .045*4096+2)/5)*0.4);
  5008  000350  0ECD               	movlw	205
  5009  000352  0100               	movlb	0	; () banked
  5010  000354  6F9D               	movwf	___fladd@a& (0+255),b
  5011  000356  0ECC               	movlw	204
  5012  000358  6F9E               	movwf	(___fladd@a+1)& (0+255),b
  5013  00035A  0E6C               	movlw	108
  5014  00035C  6F9F               	movwf	(___fladd@a+2)& (0+255),b
  5015  00035E  0E41               	movlw	65
  5016  000360  6FA0               	movwf	(___fladd@a+3)& (0+255),b
  5017  000362  0101               	movlb	1	; () banked
  5018  000364  51FA               	movf	_PEEP& (0+255),w,b
  5019  000366  0D25               	mullw	37
  5020  000368  006F FFCC  F39F    	movff	prodl,??_main
  5021  00036E  006F FFD0  F3A0    	movff	prodh,??_main+1
  5022  000374  0060  FE7C  F08B   	movff	??_main,___xxtofl@val
  5023  00037A  0060  FE80  F08C   	movff	??_main+1,___xxtofl@val+1
  5024  000380  0100               	movlb	0	; () banked
  5025  000382  0E00               	movlw	0
  5026  000384  BF8C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5027  000386  0EFF               	movlw	-1
  5028  000388  6F8D               	movwf	(___xxtofl@val+2)& (0+255),b
  5029  00038A  6F8E               	movwf	(___xxtofl@val+3)& (0+255),b
  5030  00038C  0E01               	movlw	1
  5031  00038E  EC1C  F038         	call	___xxtofl
  5032  000392  0060  F22C  F099   	movff	?___xxtofl,___fladd@b
  5033  000398  0060  F230  F09A   	movff	?___xxtofl+1,___fladd@b+1
  5034  00039E  0060  F234  F09B   	movff	?___xxtofl+2,___fladd@b+2
  5035  0003A4  0060  F238  F09C   	movff	?___xxtofl+3,___fladd@b+3
  5036  0003AA  ECB6  F02A         	call	___fladd	;wreg free
  5037  0003AE  0060  F264  F0A9   	movff	?___fladd,___fltol@f1
  5038  0003B4  0060  F268  F0AA   	movff	?___fladd+1,___fltol@f1+1
  5039  0003BA  0060  F26C  F0AB   	movff	?___fladd+2,___fltol@f1+2
  5040  0003C0  0060  F270  F0AC   	movff	?___fladd+3,___fltol@f1+3
  5041  0003C6  EC47  F03E         	call	___fltol	;wreg free
  5042  0003CA  0060  F2A4  F1B1   	movff	?___fltol,_intPEEP
  5043  0003D0  0060  F2A8  F1B2   	movff	?___fltol+1,_intPEEP+1
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;main.c: 360:             intBdTrig = ((int16_t) ((0.045*4096+2)/5)*BdTrig);
  5047  0003D6  0101               	movlb	1	; () banked
  5048  0003D8  51F9               	movf	_BdTrig& (0+255),w,b
  5049  0003DA  0D25               	mullw	37
  5050  0003DC  006F FFCC  F24A    	movff	prodl,_intBdTrig
  5051  0003E2  006F FFD0  F24B    	movff	prodh,_intBdTrig+1
  5052                           
  5053                           ; BSR set to: 1
  5054                           ;main.c: 361:             intIDuration = ((time_t) IDuration*1);
  5055  0003E8  C1AD  F1AF         	movff	_IDuration,_intIDuration
  5056  0003EC  C1AE  F1B0         	movff	_IDuration+1,_intIDuration+1
  5057                           
  5058                           ; BSR set to: 1
  5059                           ;main.c: 362:             if (sBreath) {
  5060  0003F0  51C9               	movf	_sBreath& (0+255),w,b
  5061  0003F2  B4D8               	btfsc	status,2,c
  5062  0003F4  D008               	goto	l1740
  5063                           
  5064                           ; BSR set to: 1
  5065                           ;main.c: 363:                 intEDuration = ((time_t) EDuration + 1000*1);
  5066  0003F6  0EE8               	movlw	232
  5067  0003F8  0102               	movlb	2	; () banked
  5068  0003FA  2546               	addwf	_EDuration& (0+255),w,b
  5069  0003FC  6F48               	movwf	_intEDuration& (0+255),b
  5070  0003FE  0E03               	movlw	3
  5071  000400  2147               	addwfc	(_EDuration+1)& (0+255),w,b
  5072  000402  6F49               	movwf	(_intEDuration+1)& (0+255),b
  5073                           
  5074                           ;main.c: 364:             } else {
  5075  000404  D004               	goto	l20515
  5076  000406                     l1740:
  5077                           
  5078                           ; BSR set to: 1
  5079                           ;main.c: 365:                 intEDuration = ((time_t) EDuration*1);
  5080  000406  C246  F248         	movff	_EDuration,_intEDuration
  5081  00040A  C247  F249         	movff	_EDuration+1,_intEDuration+1
  5082  00040E                     l20515:
  5083                           
  5084                           ;main.c: 368:             if (intVentMode == VMODE_PRESSURE) {
  5085  00040E  0101               	movlb	1	; () banked
  5086  000410  51CA               	movf	_intVentMode& (0+255),w,b
  5087  000412  A4D8               	btfss	status,2,c
  5088  000414  D05D               	goto	l20525
  5089                           
  5090                           ; BSR set to: 1
  5091                           ;main.c: 369:                 intIP = ((int16_t) ((0.045*4096+2)/5)*IP);
  5092  000416  51FB               	movf	_IP& (0+255),w,b
  5093  000418  0D25               	mullw	37
  5094  00041A  006F FFCC  F1B3    	movff	prodl,_intIP
  5095  000420  006F FFD0  F1B4    	movff	prodh,_intIP+1
  5096                           
  5097                           ; BSR set to: 1
  5098                           ;main.c: 371:                 intMaxV = ((((uint24_t) intIP - pPeepActual)*((uint24_t) l
      +                          ungC)) >> 7);
  5099  000426  0E07               	movlw	7
  5100  000428  0103               	movlb	3	; () banked
  5101  00042A  6F9F               	movwf	??_main& (0+255),b
  5102  00042C  0060  F6CC  F3A0   	movff	_intIP,??_main+1
  5103  000432  0060  F6D0  F3A1   	movff	_intIP+1,??_main+2
  5104  000438  6BA2               	clrf	(??_main+3)& (0+255),b
  5105  00043A  BFA1               	btfsc	(??_main+2)& (0+255),7,b
  5106  00043C  69A2               	setf	(??_main+3)& (0+255),b
  5107  00043E  0101               	movlb	1	; () banked
  5108  000440  51A9               	movf	_pPeepActual& (0+255),w,b
  5109  000442  0103               	movlb	3	; () banked
  5110  000444  5DA0               	subwf	(??_main+1)& (0+255),w,b
  5111  000446  0100               	movlb	0	; () banked
  5112  000448  6F8B               	movwf	___tmul@multiplier& (0+255),b
  5113  00044A  0101               	movlb	1	; () banked
  5114  00044C  51AA               	movf	(_pPeepActual+1)& (0+255),w,b
  5115  00044E  0103               	movlb	3	; () banked
  5116  000450  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5117  000452  0100               	movlb	0	; () banked
  5118  000454  6F8C               	movwf	(___tmul@multiplier+1)& (0+255),b
  5119  000456  0E00               	movlw	0
  5120  000458  0101               	movlb	1	; () banked
  5121  00045A  BFAA               	btfsc	(_pPeepActual+1)& (0+255),7,b
  5122  00045C  0EFF               	movlw	255
  5123  00045E  0103               	movlb	3	; () banked
  5124  000460  59A2               	subwfb	(??_main+3)& (0+255),w,b
  5125  000462  0100               	movlb	0	; () banked
  5126  000464  6F8D               	movwf	(___tmul@multiplier+2)& (0+255),b
  5127  000466  0060  F77C  F08E   	movff	_lungC,___tmul@multiplicand
  5128  00046C  0060  F780  F08F   	movff	_lungC+1,___tmul@multiplicand+1
  5129  000472  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5130  000474  ECC7  F049         	call	___tmul	;wreg free
  5131  000478  0103               	movlb	3	; () banked
  5132  00047A  299F               	incf	??_main& (0+255),w,b
  5133  00047C  6FA3               	movwf	(??_main+4)& (0+255),b
  5134  00047E  D005               	goto	u22030
  5135  000480                     u22035:
  5136  000480  0100               	movlb	0	; () banked
  5137  000482  90D8               	bcf	status,0,c
  5138  000484  338D               	rrcf	(?___tmul+2)& (0+255),f,b
  5139  000486  338C               	rrcf	(?___tmul+1)& (0+255),f,b
  5140  000488  338B               	rrcf	?___tmul& (0+255),f,b
  5141  00048A                     u22030:
  5142  00048A  0103               	movlb	3	; () banked
  5143  00048C  2FA3               	decfsz	(??_main+4)& (0+255),f,b
  5144  00048E  D7F8               	goto	u22035
  5145  000490  0060  F22C  F1F1   	movff	?___tmul,_intMaxV
  5146  000496  0060  F230  F1F2   	movff	?___tmul+1,_intMaxV+1
  5147                           
  5148                           ;main.c: 373:                 if (intMaxV > (10 * HighVAlarm)) {
  5149  00049C  0101               	movlb	1	; () banked
  5150  00049E  51FD               	movf	_HighVAlarm& (0+255),w,b
  5151  0004A0  0D0A               	mullw	10
  5152  0004A2  51F1               	movf	_intMaxV& (0+255),w,b
  5153  0004A4  5CF3               	subwf	243,w,c
  5154  0004A6  50F4               	movf	244,w,c
  5155  0004A8  0A80               	xorlw	128
  5156  0004AA  0103               	movlb	3	; () banked
  5157  0004AC  6F9F               	movwf	??_main& (0+255),b
  5158  0004AE  0101               	movlb	1	; () banked
  5159  0004B0  51F2               	movf	(_intMaxV+1)& (0+255),w,b
  5160  0004B2  0A80               	xorlw	128
  5161  0004B4  0103               	movlb	3	; () banked
  5162  0004B6  599F               	subwfb	??_main& (0+255),w,b
  5163  0004B8  B0D8               	btfsc	status,0,c
  5164  0004BA  D094               	goto	l20537
  5165                           
  5166                           ; BSR set to: 3
  5167                           ;main.c: 374:                     intMaxV = 10 * HighVAlarm;
  5168  0004BC  0101               	movlb	1	; () banked
  5169  0004BE  51FD               	movf	_HighVAlarm& (0+255),w,b
  5170  0004C0  0D0A               	mullw	10
  5171  0004C2  006F FFCC  F1F1    	movff	prodl,_intMaxV
  5172  0004C8  006F FFD0  F1F2    	movff	prodh,_intMaxV+1
  5173  0004CE  D08A               	goto	l20537
  5174  0004D0                     l20525:
  5175                           
  5176                           ; BSR set to: 1
  5177                           ;main.c: 378:                 if (pPeepActual > ((((int16_t) ((0.045*4096+2)/5)*1) + int
      +                          PEEP))) {
  5178  0004D0  0E25               	movlw	37
  5179  0004D2  25B1               	addwf	_intPEEP& (0+255),w,b
  5180  0004D4  0103               	movlb	3	; () banked
  5181  0004D6  6F9F               	movwf	??_main& (0+255),b
  5182  0004D8  0E00               	movlw	0
  5183  0004DA  0101               	movlb	1	; () banked
  5184  0004DC  21B2               	addwfc	(_intPEEP+1)& (0+255),w,b
  5185  0004DE  0103               	movlb	3	; () banked
  5186  0004E0  6FA0               	movwf	(??_main+1)& (0+255),b
  5187  0004E2  0101               	movlb	1	; () banked
  5188  0004E4  51A9               	movf	_pPeepActual& (0+255),w,b
  5189  0004E6  0103               	movlb	3	; () banked
  5190  0004E8  5D9F               	subwf	??_main& (0+255),w,b
  5191  0004EA  51A0               	movf	(??_main+1)& (0+255),w,b
  5192  0004EC  0A80               	xorlw	128
  5193  0004EE  6FA1               	movwf	(??_main+2)& (0+255),b
  5194  0004F0  0101               	movlb	1	; () banked
  5195  0004F2  51AA               	movf	(_pPeepActual+1)& (0+255),w,b
  5196  0004F4  0A80               	xorlw	128
  5197  0004F6  0103               	movlb	3	; () banked
  5198  0004F8  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5199  0004FA  B0D8               	btfsc	status,0,c
  5200  0004FC  D032               	goto	l20529
  5201                           
  5202                           ; BSR set to: 3
  5203                           ;main.c: 379:                     intMaxV = 10 * ((uint16_t) MaxV) - (((pPeepActual - in
      +                          tPEEP) * lungC) >> 7);
  5204  0004FE  0101               	movlb	1	; () banked
  5205  000500  51B1               	movf	_intPEEP& (0+255),w,b
  5206  000502  5DA9               	subwf	_pPeepActual& (0+255),w,b
  5207  000504  0100               	movlb	0	; () banked
  5208  000506  6F9B               	movwf	___wmul@multiplier& (0+255),b
  5209  000508  0101               	movlb	1	; () banked
  5210  00050A  51B2               	movf	(_intPEEP+1)& (0+255),w,b
  5211  00050C  59AA               	subwfb	(_pPeepActual+1)& (0+255),w,b
  5212  00050E  0100               	movlb	0	; () banked
  5213  000510  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  5214  000512  0060  F77C  F09D   	movff	_lungC,___wmul@multiplicand
  5215  000518  0060  F780  F09E   	movff	_lungC+1,___wmul@multiplicand+1
  5216  00051E  ECA2  F04D         	call	___wmul	;wreg free
  5217  000522  0E07               	movlw	7
  5218  000524  0103               	movlb	3	; () banked
  5219  000526  6F9F               	movwf	??_main& (0+255),b
  5220  000528                     u22065:
  5221  000528  0100               	movlb	0	; () banked
  5222  00052A  90D8               	bcf	status,0,c
  5223  00052C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5224  00052E  339B               	rrcf	?___wmul& (0+255),f,b
  5225  000530  0103               	movlb	3	; () banked
  5226  000532  2F9F               	decfsz	??_main& (0+255),f,b
  5227  000534  D7F9               	goto	u22065
  5228  000536  0101               	movlb	1	; () banked
  5229  000538  51FE               	movf	_MaxV& (0+255),w,b
  5230  00053A  0D0A               	mullw	10
  5231  00053C  006F FFCC  F3A0    	movff	prodl,??_main+1
  5232  000542  006F FFD0  F3A1    	movff	prodh,??_main+2
  5233  000548  0100               	movlb	0	; () banked
  5234  00054A  519B               	movf	?___wmul& (0+255),w,b
  5235  00054C  0103               	movlb	3	; () banked
  5236  00054E  5DA0               	subwf	(??_main+1)& (0+255),w,b
  5237  000550  0101               	movlb	1	; () banked
  5238  000552  6FF1               	movwf	_intMaxV& (0+255),b
  5239  000554  0100               	movlb	0	; () banked
  5240  000556  519C               	movf	(?___wmul+1)& (0+255),w,b
  5241  000558  0103               	movlb	3	; () banked
  5242  00055A  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5243  00055C  0101               	movlb	1	; () banked
  5244  00055E  6FF2               	movwf	(_intMaxV+1)& (0+255),b
  5245                           
  5246                           ;main.c: 380:                 } else {
  5247  000560  D009               	goto	l20531
  5248  000562                     l20529:
  5249                           
  5250                           ; BSR set to: 3
  5251                           ;main.c: 381:                     intMaxV = 10 * ((uint16_t) MaxV);
  5252  000562  0101               	movlb	1	; () banked
  5253  000564  51FE               	movf	_MaxV& (0+255),w,b
  5254  000566  0D0A               	mullw	10
  5255  000568  006F FFCC  F1F1    	movff	prodl,_intMaxV
  5256  00056E  006F FFD0  F1F2    	movff	prodh,_intMaxV+1
  5257  000574                     l20531:
  5258                           
  5259                           ; BSR set to: 1
  5260                           ;main.c: 383:                 if (lungC > 20) {
  5261  000574  51E0               	movf	(_lungC+1)& (0+255),w,b
  5262  000576  E104               	bnz	u22070
  5263  000578  0E15               	movlw	21
  5264  00057A  5DDF               	subwf	_lungC& (0+255),w,b
  5265  00057C  A0D8               	btfss	status,0,c
  5266  00057E  D02E               	goto	l20535
  5267  000580                     u22070:
  5268                           
  5269                           ; BSR set to: 1
  5270                           ;main.c: 384:                     intIP = ((uint24_t) intMaxV<<7)/lungC;
  5271  000580  0E07               	movlw	7
  5272  000582  0103               	movlb	3	; () banked
  5273  000584  6F9F               	movwf	??_main& (0+255),b
  5274  000586  0060  F7C4  F3A0   	movff	_intMaxV,??_main+1
  5275  00058C  0060  F7C8  F3A1   	movff	_intMaxV+1,??_main+2
  5276  000592  6BA2               	clrf	(??_main+3)& (0+255),b
  5277  000594  BFA1               	btfsc	(??_main+2)& (0+255),7,b
  5278  000596  69A2               	setf	(??_main+3)& (0+255),b
  5279  000598  299F               	incf	??_main& (0+255),w,b
  5280  00059A  D004               	goto	u22080
  5281  00059C                     u22085:
  5282  00059C  90D8               	bcf	status,0,c
  5283  00059E  37A0               	rlcf	(??_main+1)& (0+255),f,b
  5284  0005A0  37A1               	rlcf	(??_main+2)& (0+255),f,b
  5285  0005A2  37A2               	rlcf	(??_main+3)& (0+255),f,b
  5286  0005A4                     u22080:
  5287  0005A4  2EE8               	decfsz	wreg,f,c
  5288  0005A6  D7FA               	goto	u22085
  5289  0005A8  0060  FE80  F08B   	movff	??_main+1,___ltdiv@dividend
  5290  0005AE  0060  FE84  F08C   	movff	??_main+2,___ltdiv@dividend+1
  5291  0005B4  0060  FE88  F08D   	movff	??_main+3,___ltdiv@dividend+2
  5292  0005BA  0060  F77C  F08E   	movff	_lungC,___ltdiv@divisor
  5293  0005C0  0060  F780  F08F   	movff	_lungC+1,___ltdiv@divisor+1
  5294  0005C6  0100               	movlb	0	; () banked
  5295  0005C8  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  5296  0005CA  ECF6  F044         	call	___ltdiv	;wreg free
  5297  0005CE  0060  F22C  F1B3   	movff	?___ltdiv,_intIP
  5298  0005D4  0060  F230  F1B4   	movff	?___ltdiv+1,_intIP+1
  5299                           
  5300                           ;main.c: 385:                 } else {
  5301  0005DA  D004               	goto	l20537
  5302  0005DC                     l20535:
  5303                           
  5304                           ; BSR set to: 1
  5305                           ;main.c: 386:                     intIP = 0;
  5306  0005DC  0E00               	movlw	0
  5307  0005DE  6FB4               	movwf	(_intIP+1)& (0+255),b
  5308  0005E0  0E00               	movlw	0
  5309  0005E2  6FB3               	movwf	_intIP& (0+255),b
  5310  0005E4                     l20537:
  5311                           
  5312                           ;main.c: 389:             printf ("\nIP. MaxV %d EBRate %d SV2RO %d SV2RC %d PQ %d VQ %d
      +                          .\n", intMaxV, bRateGet(), rSV2ValveORT, rSV2ValveCRT, ((int16_t) (((2560/((int16_t) ((0
      +                          .045*4096+2)/5)*1))*((int24_t) pQuantaInsp))>>8)), vQuanta);
  5313  0005E4  0EDF               	movlw	low STR_10
  5314  0005E6  0101               	movlb	1	; () banked
  5315  0005E8  6F46               	movwf	printf@fmt& (0+255),b
  5316  0005EA  0EFA               	movlw	high STR_10
  5317  0005EC  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5318  0005EE  0060  F7C4  F148   	movff	_intMaxV,?_printf+2
  5319  0005F4  0060  F7C8  F149   	movff	_intMaxV+1,?_printf+3
  5320  0005FA  ECCF  F04F         	call	_bRateGet	;wreg free
  5321  0005FE  0103               	movlb	3	; () banked
  5322  000600  6F9F               	movwf	??_main& (0+255),b
  5323  000602  519F               	movf	??_main& (0+255),w,b
  5324  000604  0101               	movlb	1	; () banked
  5325  000606  6F4A               	movwf	(?_printf+4)& (0+255),b
  5326  000608  6B4B               	clrf	(?_printf+5)& (0+255),b
  5327  00060A  0060  F674  F14C   	movff	_rSV2ValveORT,?_printf+6
  5328  000610  0060  F678  F14D   	movff	_rSV2ValveORT+1,?_printf+7
  5329  000616  0060  F66C  F14E   	movff	_rSV2ValveCRT,?_printf+8
  5330  00061C  0060  F670  F14F   	movff	_rSV2ValveCRT+1,?_printf+9
  5331  000622  0060  F754  F08B   	movff	_pQuantaInsp,___tmul@multiplier
  5332  000628  0060  F758  F08C   	movff	_pQuantaInsp+1,___tmul@multiplier+1
  5333  00062E  0100               	movlb	0	; () banked
  5334  000630  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5335  000632  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  5336  000634  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  5337  000636  0E45               	movlw	69
  5338  000638  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5339  00063A  0E00               	movlw	0
  5340  00063C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5341  00063E  0E00               	movlw	0
  5342  000640  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5343  000642  ECC7  F049         	call	___tmul	;wreg free
  5344  000646  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5345  00064C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5346  000652  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5347  000654  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  5348  000656  698D               	setf	(?___tmul+2)& (0+255),b
  5349  000658  0060  F22C  F150   	movff	?___tmul,?_printf+10
  5350  00065E  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  5351  000664  0060  F694  F152   	movff	_vQuanta,?_printf+12
  5352  00066A  0060  F698  F153   	movff	_vQuanta+1,?_printf+13
  5353  000670  ECE9  F04E         	call	_printf	;wreg free
  5354                           
  5355                           ; BSR set to: 2
  5356                           ;main.c: 394:             tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * intMaxV) >> 8
      +                          ;
  5357  000674  0060  F7C4  F08E   	movff	_intMaxV,___tmul@multiplicand
  5358  00067A  0060  F7C8  F08F   	movff	_intMaxV+1,___tmul@multiplicand+1
  5359  000680  0100               	movlb	0	; () banked
  5360  000682  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5361  000684  BF8F               	btfsc	(___tmul@multiplicand+1)& (0+255),7,b
  5362  000686  0790               	decf	(___tmul@multiplicand+2)& (0+255),f,b
  5363  000688  0060  F744  F08B   	movff	_effectiveFlowRateInv,___tmul@multiplier
  5364  00068E  0060  F748  F08C   	movff	_effectiveFlowRateInv+1,___tmul@multiplier+1
  5365  000694  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5366  000696  ECC7  F049         	call	___tmul	;wreg free
  5367  00069A  0060  F22C  F3AF   	movff	?___tmul,_main$6101
  5368  0006A0  0060  F230  F3B0   	movff	?___tmul+1,_main$6101+1
  5369  0006A6  0060  F234  F3B1   	movff	?___tmul+2,_main$6101+2
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;main.c: 394:             tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * intMaxV) >> 8
      +                          ;
  5373  0006AC  0060  FEBC  F08B   	movff	_main$6101,___tmul@multiplier
  5374  0006B2  0060  FEC0  F08C   	movff	_main$6101+1,___tmul@multiplier+1
  5375  0006B8  0060  FEC4  F08D   	movff	_main$6101+2,___tmul@multiplier+2
  5376  0006BE  0E03               	movlw	3
  5377  0006C0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5378  0006C2  0E00               	movlw	0
  5379  0006C4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5380  0006C6  0E00               	movlw	0
  5381  0006C8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5382  0006CA  ECC7  F049         	call	___tmul	;wreg free
  5383  0006CE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5384  0006D4  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5385  0006DA  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5386  0006DC  0060  F22C  F3BB   	movff	?___tmul,main@tmpVal2
  5387  0006E2  0060  F230  F3BC   	movff	?___tmul+1,main@tmpVal2+1
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;main.c: 395:             if (tmpVal2 < 500) {
  5391  0006E8  0103               	movlb	3	; () banked
  5392  0006EA  BFBC               	btfsc	(main@tmpVal2+1)& (0+255),7,b
  5393  0006EC  D006               	goto	u22090
  5394  0006EE  0EF4               	movlw	244
  5395  0006F0  5DBB               	subwf	main@tmpVal2& (0+255),w,b
  5396  0006F2  0E01               	movlw	1
  5397  0006F4  59BC               	subwfb	(main@tmpVal2+1)& (0+255),w,b
  5398  0006F6  B0D8               	btfsc	status,0,c
  5399  0006F8  D01E               	goto	l20557
  5400  0006FA                     u22090:
  5401                           
  5402                           ; BSR set to: 3
  5403                           ;main.c: 396:                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  5404  0006FA  94BA               	bcf	186,2,c	;volatile
  5405  0006FC  86BC               	bsf	188,3,c	;volatile
  5406                           
  5407                           ; BSR set to: 3
  5408                           ;main.c: 397:                 rVLowActuationTstamp = timeGet();
  5409  0006FE  EC7B  F051         	call	_timeGet	;wreg free
  5410  000702  0060  F24C  F0B8   	movff	?_timeGet,_rVLowActuationTstamp
  5411  000708  0060  F250  F0B9   	movff	?_timeGet+1,_rVLowActuationTstamp+1
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;main.c: 398:                 rVMedActuationTstamp = rCycleTime;
  5415  00070E  C1CF  F19F         	movff	_rCycleTime,_rVMedActuationTstamp
  5416  000712  C1D0  F1A0         	movff	_rCycleTime+1,_rVMedActuationTstamp+1
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;main.c: 399:                 rVHighActuationTstamp = rCycleTime;
  5420  000716  C1CF  F0BA         	movff	_rCycleTime,_rVHighActuationTstamp
  5421  00071A  C1D0  F0BB         	movff	_rCycleTime+1,_rVHighActuationTstamp+1
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;main.c: 400:                 pInspVSet = 1;
  5425  00071E  0E00               	movlw	0
  5426  000720  0101               	movlb	1	; () banked
  5427  000722  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5428  000724  0E01               	movlw	1
  5429  000726  6FD7               	movwf	_pInspVSet& (0+255),b
  5430                           
  5431                           ; BSR set to: 1
  5432                           ;main.c: 401:                 printf ("\nVLow\n");
  5433  000728  0EE7               	movlw	low STR_11
  5434  00072A  6F46               	movwf	printf@fmt& (0+255),b
  5435  00072C  0EFF               	movlw	high STR_11
  5436  00072E  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5437  000730  ECE9  F04E         	call	_printf	;wreg free
  5438                           
  5439                           ;main.c: 403:             } else if ((tmpVal2 >> 1) < 500) {
  5440  000734  D036               	goto	l20573
  5441  000736                     l20557:
  5442                           
  5443                           ; BSR set to: 3
  5444  000736  35BC               	rlcf	(main@tmpVal2+1)& (0+255),w,b
  5445  000738  31BC               	rrcf	(main@tmpVal2+1)& (0+255),w,b
  5446  00073A  6FA0               	movwf	(??_main+1)& (0+255),b
  5447  00073C  31BB               	rrcf	main@tmpVal2& (0+255),w,b
  5448  00073E  6F9F               	movwf	??_main& (0+255),b
  5449  000740  BFA0               	btfsc	(??_main+1)& (0+255),7,b
  5450  000742  D006               	goto	u22100
  5451  000744  0EF4               	movlw	244
  5452  000746  5D9F               	subwf	??_main& (0+255),w,b
  5453  000748  0E01               	movlw	1
  5454  00074A  59A0               	subwfb	(??_main+1)& (0+255),w,b
  5455  00074C  B0D8               	btfsc	status,0,c
  5456  00074E  D01A               	goto	l1751
  5457  000750                     u22100:
  5458                           
  5459                           ; BSR set to: 3
  5460                           ;main.c: 404:                 LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
  5461  000750  84BA               	bsf	186,2,c	;volatile
  5462  000752  96BC               	bcf	188,3,c	;volatile
  5463                           
  5464                           ; BSR set to: 3
  5465                           ;main.c: 405:                 rVMedActuationTstamp = timeGet();
  5466  000754  EC7B  F051         	call	_timeGet	;wreg free
  5467  000758  0060  F24C  F19F   	movff	?_timeGet,_rVMedActuationTstamp
  5468  00075E  0060  F250  F1A0   	movff	?_timeGet+1,_rVMedActuationTstamp+1
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;main.c: 406:                 rVHighActuationTstamp = rCycleTime;
  5472  000764  C1CF  F0BA         	movff	_rCycleTime,_rVHighActuationTstamp
  5473  000768  C1D0  F0BB         	movff	_rCycleTime+1,_rVHighActuationTstamp+1
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;main.c: 407:                 pInspVSet = 2;
  5477  00076C  0E00               	movlw	0
  5478  00076E  0101               	movlb	1	; () banked
  5479  000770  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5480  000772  0E02               	movlw	2
  5481  000774  6FD7               	movwf	_pInspVSet& (0+255),b
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;main.c: 408:                 printf ("\nVMed\n");
  5485  000776  0EE0               	movlw	low STR_12
  5486  000778  6F46               	movwf	printf@fmt& (0+255),b
  5487  00077A  0EFF               	movlw	high STR_12
  5488  00077C  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5489  00077E  ECE9  F04E         	call	_printf	;wreg free
  5490                           
  5491                           ;main.c: 409:             } else {
  5492  000782  D00F               	goto	l20573
  5493  000784                     l1751:
  5494                           
  5495                           ; BSR set to: 3
  5496                           ;main.c: 410:                 LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
  5497  000784  84BA               	bsf	186,2,c	;volatile
  5498  000786  86BC               	bsf	188,3,c	;volatile
  5499                           
  5500                           ; BSR set to: 3
  5501                           ;main.c: 411:                 pInspVSet = 3;
  5502  000788  0E00               	movlw	0
  5503  00078A  0101               	movlb	1	; () banked
  5504  00078C  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5505  00078E  0E03               	movlw	3
  5506  000790  6FD7               	movwf	_pInspVSet& (0+255),b
  5507                           
  5508                           ; BSR set to: 1
  5509                           ;main.c: 412:                 rVHighActuationTstamp = timeGet();
  5510  000792  EC7B  F051         	call	_timeGet	;wreg free
  5511  000796  0060  F24C  F0BA   	movff	?_timeGet,_rVHighActuationTstamp
  5512  00079C  0060  F250  F0BB   	movff	?_timeGet+1,_rVHighActuationTstamp+1
  5513  0007A2                     l20573:
  5514                           
  5515                           ;main.c: 414:             LATAbits.LATA3 = 1;
  5516  0007A2  86BA               	bsf	186,3,c	;volatile
  5517                           
  5518                           ;main.c: 417:             initInspSubState = 1;
  5519  0007A4  0E01               	movlw	1
  5520  0007A6  0101               	movlb	1	; () banked
  5521  0007A8  6FC6               	movwf	_initInspSubState& (0+255),b
  5522                           
  5523                           ; BSR set to: 1
  5524                           ;main.c: 418:             sv2DelayCheck = 1;
  5525  0007AA  0E01               	movlw	1
  5526  0007AC  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  5527                           
  5528                           ; BSR set to: 1
  5529                           ;main.c: 419:             OSCheck = 0;
  5530  0007AE  0E00               	movlw	0
  5531  0007B0  6FC3               	movwf	_OSCheck& (0+255),b
  5532                           
  5533                           ; BSR set to: 1
  5534                           ;main.c: 420:             OSCheckInt = 0;
  5535  0007B2  0E00               	movlw	0
  5536  0007B4  6FC1               	movwf	_OSCheckInt& (0+255),b
  5537                           
  5538                           ; BSR set to: 1
  5539                           ;main.c: 421:             QuantaCheck = 0;
  5540  0007B6  0E00               	movlw	0
  5541  0007B8  6FC2               	movwf	_QuantaCheck& (0+255),b
  5542                           
  5543                           ;main.c: 422:             rValveDelayStart = timeGet();
  5544  0007BA  EC7B  F051         	call	_timeGet	;wreg free
  5545  0007BE  0060  F24C  F197   	movff	?_timeGet,_rValveDelayStart
  5546  0007C4  0060  F250  F198   	movff	?_timeGet+1,_rValveDelayStart+1
  5547                           
  5548                           ;main.c: 423:             vMeasureRst();
  5549  0007CA  ECD5  F050         	call	_vMeasureRst	;wreg free
  5550  0007CE                     l20585:
  5551                           
  5552                           ;main.c: 425:                 if (intVentMode == VMODE_PRESSURE) {
  5553  0007CE  0101               	movlb	1	; () banked
  5554  0007D0  51CA               	movf	_intVentMode& (0+255),w,b
  5555  0007D2  A4D8               	btfss	status,2,c
  5556  0007D4  D004               	goto	l20589
  5557                           
  5558                           ; BSR set to: 1
  5559                           ;main.c: 426:                     MonitorMsgSend(MONSTATE_RUNP);
  5560  0007D6  0E10               	movlw	16
  5561  0007D8  ECFF  F04E         	call	_MonitorMsgSend
  5562                           
  5563                           ;main.c: 427:                 } else {
  5564  0007DC  D003               	goto	l20591
  5565  0007DE                     l20589:
  5566                           
  5567                           ; BSR set to: 1
  5568                           ;main.c: 428:                     MonitorMsgSend(MONSTATE_RUNV);
  5569  0007DE  0E14               	movlw	20
  5570  0007E0  ECFF  F04E         	call	_MonitorMsgSend
  5571  0007E4                     l20591:
  5572                           
  5573                           ;main.c: 431:                 if (timeElapsedR(&rCycleTime, intIDuration)) {
  5574  0007E4  0ECF               	movlw	low _rCycleTime
  5575  0007E6  0100               	movlb	0	; () banked
  5576  0007E8  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  5577  0007EA  0E01               	movlw	high _rCycleTime
  5578  0007EC  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  5579  0007EE  0060  F6BC  F095   	movff	_intIDuration,timeElapsedR@duration
  5580  0007F4  0060  F6C0  F096   	movff	_intIDuration+1,timeElapsedR@duration+1
  5581  0007FA  EC66  F046         	call	_timeElapsedR	;wreg free
  5582  0007FE  0900               	iorlw	0
  5583  000800  B4D8               	btfsc	status,2,c
  5584  000802  D03F               	goto	l20623
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;main.c: 433:                     if (initInspSubState) {
  5588  000804  0101               	movlb	1	; () banked
  5589  000806  51C6               	movf	_initInspSubState& (0+255),w,b
  5590  000808  B4D8               	btfsc	status,2,c
  5591  00080A  D011               	goto	l20605
  5592                           
  5593                           ; BSR set to: 1
  5594                           ;main.c: 435:                         MonitorErrorSet(MON_IPE);
  5595  00080C  0E20               	movlw	32
  5596  00080E  EC84  F051         	call	_MonitorErrorSet
  5597                           
  5598                           ; BSR set to: 1
  5599                           ;main.c: 437:                         pPlatInsp = pInst;
  5600  000812  C1EF  F1E3         	movff	_pInst,_pPlatInsp
  5601  000816  C1F0  F1E4         	movff	_pInst+1,_pPlatInsp+1
  5602                           
  5603                           ; BSR set to: 1
  5604                           ;main.c: 438:                         pValveActuation = pInst;
  5605  00081A  C1EF  F1E5         	movff	_pInst,_pValveActuation
  5606  00081E  C1F0  F1E6         	movff	_pInst+1,_pValveActuation+1
  5607                           
  5608                           ; BSR set to: 1
  5609                           ;main.c: 439:                         pPlatMax = pInst;
  5610  000822  C1EF  F1AB         	movff	_pInst,_pPlatMax
  5611  000826  C1F0  F1AC         	movff	_pInst+1,_pPlatMax+1
  5612                           
  5613                           ; BSR set to: 1
  5614                           ;main.c: 440:                         inspOSMeasure();
  5615  00082A  ECFE  F026         	call	_inspOSMeasure	;wreg free
  5616  00082E                     l20605:
  5617                           
  5618                           ;main.c: 442:                     if (OSCheck) {
  5619  00082E  0101               	movlb	1	; () banked
  5620  000830  51C3               	movf	_OSCheck& (0+255),w,b
  5621  000832  B4D8               	btfsc	status,2,c
  5622  000834  D021               	goto	l20619
  5623                           
  5624                           ; BSR set to: 1
  5625                           ;main.c: 443:                         OSCheck = 0;
  5626  000836  0E00               	movlw	0
  5627  000838  6FC3               	movwf	_OSCheck& (0+255),b
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;main.c: 444:                         aCaptGetResult(Flt1PSensor, &pAvgUShort);
  5631  00083A  0EEB               	movlw	low _pAvgUShort
  5632  00083C  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5633  00083E  0E01               	movlw	high _pAvgUShort
  5634  000840  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5635  000842  0E04               	movlw	4
  5636  000844  EC04  F032         	call	_aCaptGetResult
  5637                           
  5638                           ;main.c: 445:                         pPlatInsp = pAvgUShort;
  5639  000848  C1EB  F1E3         	movff	_pAvgUShort,_pPlatInsp
  5640  00084C  C1EC  F1E4         	movff	_pAvgUShort+1,_pPlatInsp+1
  5641                           
  5642                           ;main.c: 446:                         if (pPlatMax < pAvgUShort) {
  5643  000850  0101               	movlb	1	; () banked
  5644  000852  51EB               	movf	_pAvgUShort& (0+255),w,b
  5645  000854  5DAB               	subwf	_pPlatMax& (0+255),w,b
  5646  000856  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  5647  000858  0A80               	xorlw	128
  5648  00085A  0103               	movlb	3	; () banked
  5649  00085C  6F9F               	movwf	??_main& (0+255),b
  5650  00085E  0101               	movlb	1	; () banked
  5651  000860  51EC               	movf	(_pAvgUShort+1)& (0+255),w,b
  5652  000862  0A80               	xorlw	128
  5653  000864  0103               	movlb	3	; () banked
  5654  000866  599F               	subwfb	??_main& (0+255),w,b
  5655  000868  B0D8               	btfsc	status,0,c
  5656  00086A  D004               	goto	l20617
  5657                           
  5658                           ; BSR set to: 3
  5659                           ;main.c: 447:                             pPlatMax = pAvgUShort;
  5660  00086C  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  5661  000870  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  5662  000874                     l20617:
  5663                           
  5664                           ; BSR set to: 3
  5665                           ;main.c: 449:                         inspOSMeasure();
  5666  000874  ECFE  F026         	call	_inspOSMeasure	;wreg free
  5667  000878                     l20619:
  5668                           
  5669                           ;main.c: 451:                     initInspSubState = 0;
  5670  000878  0E00               	movlw	0
  5671  00087A  0101               	movlb	1	; () banked
  5672  00087C  6FC6               	movwf	_initInspSubState& (0+255),b
  5673                           
  5674                           ;main.c: 452:                     break;
  5675  00087E  EF23  F00F         	goto	l20983
  5676  000882                     l20623:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;main.c: 460:                     if (timeElapsed(rCycleTime, ((time_t) 500*1))) {
  5680  000882  0060  F73C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  5681  000888  0060  F740  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  5682  00088E  0E01               	movlw	1
  5683  000890  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  5684  000892  0EF4               	movlw	244
  5685  000894  6F95               	movwf	timeElapsed@duration& (0+255),b
  5686  000896  EC8A  F04D         	call	_timeElapsed	;wreg free
  5687  00089A  0900               	iorlw	0
  5688  00089C  A4D8               	btfss	status,2,c
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;main.c: 462:                         LATDbits.LATD6 = 0;
  5692  00089E  9CBD               	bcf	189,6,c	;volatile
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;main.c: 464:                     if (initInspSubState) {
  5696  0008A0  0101               	movlb	1	; () banked
  5697  0008A2  51C6               	movf	_initInspSubState& (0+255),w,b
  5698  0008A4  B4D8               	btfsc	status,2,c
  5699  0008A6  EF88  F00B         	goto	l20831
  5700                           
  5701                           ; BSR set to: 1
  5702                           ;main.c: 466:                         aCaptGetResult(MainPSensor, &pInst);
  5703  0008AA  0EEF               	movlw	low _pInst
  5704  0008AC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5705  0008AE  0E01               	movlw	high _pInst
  5706  0008B0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5707  0008B2  0E00               	movlw	0
  5708  0008B4  EC04  F032         	call	_aCaptGetResult
  5709                           
  5710                           ;main.c: 468:                         if (sv2DelayCheck) {
  5711  0008B8  0101               	movlb	1	; () banked
  5712  0008BA  51C5               	movf	_sv2DelayCheck& (0+255),w,b
  5713  0008BC  B4D8               	btfsc	status,2,c
  5714  0008BE  D049               	goto	l20649
  5715                           
  5716                           ; BSR set to: 1
  5717                           ;main.c: 470:                             aCaptGetResult(VolPSensor, &tmpVal);
  5718  0008C0  0EBF               	movlw	low main@tmpVal
  5719  0008C2  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5720  0008C4  0E03               	movlw	high main@tmpVal
  5721  0008C6  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5722  0008C8  0E01               	movlw	1
  5723  0008CA  EC04  F032         	call	_aCaptGetResult
  5724                           
  5725                           ;main.c: 471:                             if (tmpVal > (20 << 2)) {
  5726  0008CE  0103               	movlb	3	; () banked
  5727  0008D0  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  5728  0008D2  D03F               	goto	l20649
  5729  0008D4  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  5730  0008D6  E104               	bnz	u22190
  5731  0008D8  0E51               	movlw	81
  5732  0008DA  5DBF               	subwf	main@tmpVal& (0+255),w,b
  5733  0008DC  A0D8               	btfss	status,0,c
  5734  0008DE  D039               	goto	l20649
  5735  0008E0                     u22190:
  5736                           
  5737                           ; BSR set to: 3
  5738                           ;main.c: 472:                                 sv2DelayCheck = 0;
  5739  0008E0  0E00               	movlw	0
  5740  0008E2  0101               	movlb	1	; () banked
  5741  0008E4  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;main.c: 474:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  5745  0008E6  0060  F65C  F095   	movff	_rValveDelayStart,timeDiff@startT
  5746  0008EC  0060  F660  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  5747  0008F2  EC7B  F051         	call	_timeGet	;wreg free
  5748  0008F6  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  5749  0008FC  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  5750  000902  EC0D  F04D         	call	_timeDiff	;wreg free
  5751  000906  0060  F254  F195   	movff	?_timeDiff,_rTimeTmp
  5752  00090C  0060  F258  F196   	movff	?_timeDiff+1,_rTimeTmp+1
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;main.c: 475:                                 if (rTimeTmp < ((time_t) 100*1)) {
  5756  000912  0101               	movlb	1	; () banked
  5757  000914  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  5758  000916  E11A               	bnz	l20647
  5759  000918  0E64               	movlw	100
  5760  00091A  5D95               	subwf	_rTimeTmp& (0+255),w,b
  5761  00091C  B0D8               	btfsc	status,0,c
  5762  00091E  D016               	goto	l20647
  5763                           
  5764                           ; BSR set to: 1
  5765                           ;main.c: 477:                                     rSV2ValveORT = (rSV2ValveORT + rTimeTm
      +                          p) >> 1;
  5766  000920  5195               	movf	_rTimeTmp& (0+255),w,b
  5767  000922  259D               	addwf	_rSV2ValveORT& (0+255),w,b
  5768  000924  0103               	movlb	3	; () banked
  5769  000926  6F9F               	movwf	??_main& (0+255),b
  5770  000928  0101               	movlb	1	; () banked
  5771  00092A  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  5772  00092C  219E               	addwfc	(_rSV2ValveORT+1)& (0+255),w,b
  5773  00092E  0103               	movlb	3	; () banked
  5774  000930  6FA0               	movwf	(??_main+1)& (0+255),b
  5775  000932  90D8               	bcf	status,0,c
  5776  000934  31A0               	rrcf	(??_main+1)& (0+255),w,b
  5777  000936  6FA1               	movwf	(??_main+2)& (0+255),b
  5778  000938  319F               	rrcf	??_main& (0+255),w,b
  5779  00093A  0101               	movlb	1	; () banked
  5780  00093C  6F9D               	movwf	_rSV2ValveORT& (0+255),b
  5781  00093E  0060  FE84  F19E   	movff	??_main+2,_rSV2ValveORT+1
  5782                           
  5783                           ; BSR set to: 1
  5784                           ;main.c: 479:                                     MonitorErrorClr(MON_SV2E);
  5785  000944  0E08               	movlw	8
  5786  000946  EC8D  F051         	call	_MonitorErrorClr
  5787                           
  5788                           ;main.c: 480:                                 } else {
  5789  00094A  D003               	goto	l20649
  5790  00094C                     l20647:
  5791                           
  5792                           ; BSR set to: 1
  5793                           ;main.c: 482:                                     MonitorErrorSet(MON_SV2E);
  5794  00094C  0E08               	movlw	8
  5795  00094E  EC84  F051         	call	_MonitorErrorSet
  5796  000952                     l20649:
  5797                           
  5798                           ;main.c: 493:                         aCaptGetResult(Flt1PSensor, &pAvgShort);
  5799  000952  0EED               	movlw	low _pAvgShort
  5800  000954  0101               	movlb	1	; () banked
  5801  000956  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5802  000958  0E01               	movlw	high _pAvgShort
  5803  00095A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5804  00095C  0E04               	movlw	4
  5805  00095E  EC04  F032         	call	_aCaptGetResult
  5806                           
  5807                           ;main.c: 497:                         pCtrl = pAvgShort;
  5808  000962  C1ED  F1E7         	movff	_pAvgShort,_pCtrl
  5809  000966  C1EE  F1E8         	movff	_pAvgShort+1,_pCtrl+1
  5810                           
  5811                           ;main.c: 498:                         vValveActuation = vMeasureGet();
  5812  00096A  EC7F  F047         	call	_vMeasureGet	;wreg free
  5813  00096E  0060  F290  F1A7   	movff	?_vMeasureGet,_vValveActuation
  5814  000974  0060  F294  F1A8   	movff	?_vMeasureGet+1,_vValveActuation+1
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;main.c: 500:                         tmpVal = 500 - timeDiff(rCycleTime, timeGet());
  5818  00097A  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  5819  000980  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  5820  000986  EC7B  F051         	call	_timeGet	;wreg free
  5821  00098A  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  5822  000990  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  5823  000996  EC0D  F04D         	call	_timeDiff	;wreg free
  5824  00099A  5195               	movf	?_timeDiff& (0+255),w,b
  5825  00099C  08F4               	sublw	244
  5826  00099E  0103               	movlb	3	; () banked
  5827  0009A0  6FBF               	movwf	main@tmpVal& (0+255),b
  5828  0009A2  0100               	movlb	0	; () banked
  5829  0009A4  5196               	movf	(?_timeDiff+1)& (0+255),w,b
  5830  0009A6  A0D8               	btfss	status,0,c
  5831  0009A8  2AE8               	incf	wreg,f,c
  5832  0009AA  0801               	sublw	1
  5833  0009AC  0103               	movlb	3	; () banked
  5834  0009AE  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  5835                           
  5836                           ; BSR set to: 3
  5837                           ;main.c: 505:                         tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * (
      +                          intMaxV - vValveActuation)) >> 8;
  5838  0009B0  0101               	movlb	1	; () banked
  5839  0009B2  51A7               	movf	_vValveActuation& (0+255),w,b
  5840  0009B4  5DF1               	subwf	_intMaxV& (0+255),w,b
  5841  0009B6  0103               	movlb	3	; () banked
  5842  0009B8  6F9F               	movwf	??_main& (0+255),b
  5843  0009BA  0101               	movlb	1	; () banked
  5844  0009BC  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
  5845  0009BE  59F2               	subwfb	(_intMaxV+1)& (0+255),w,b
  5846  0009C0  0103               	movlb	3	; () banked
  5847  0009C2  6FA0               	movwf	(??_main+1)& (0+255),b
  5848  0009C4  0060  FE7C  F08E   	movff	??_main,___tmul@multiplicand
  5849  0009CA  0060  FE80  F08F   	movff	??_main+1,___tmul@multiplicand+1
  5850  0009D0  0100               	movlb	0	; () banked
  5851  0009D2  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5852  0009D4  BF8F               	btfsc	(___tmul@multiplicand+1)& (0+255),7,b
  5853  0009D6  0790               	decf	(___tmul@multiplicand+2)& (0+255),f,b
  5854  0009D8  0060  F744  F08B   	movff	_effectiveFlowRateInv,___tmul@multiplier
  5855  0009DE  0060  F748  F08C   	movff	_effectiveFlowRateInv+1,___tmul@multiplier+1
  5856  0009E4  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5857  0009E6  ECC7  F049         	call	___tmul	;wreg free
  5858  0009EA  0060  F22C  F3AF   	movff	?___tmul,_main$6101
  5859  0009F0  0060  F230  F3B0   	movff	?___tmul+1,_main$6101+1
  5860  0009F6  0060  F234  F3B1   	movff	?___tmul+2,_main$6101+2
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;main.c: 505:                         tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * (
      +                          intMaxV - vValveActuation)) >> 8;
  5864  0009FC  0060  FEBC  F08B   	movff	_main$6101,___tmul@multiplier
  5865  000A02  0060  FEC0  F08C   	movff	_main$6101+1,___tmul@multiplier+1
  5866  000A08  0060  FEC4  F08D   	movff	_main$6101+2,___tmul@multiplier+2
  5867  000A0E  0E03               	movlw	3
  5868  000A10  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5869  000A12  0E00               	movlw	0
  5870  000A14  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5871  000A16  0E00               	movlw	0
  5872  000A18  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5873  000A1A  ECC7  F049         	call	___tmul	;wreg free
  5874  000A1E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5875  000A24  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5876  000A2A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5877  000A2C  0060  F22C  F3BB   	movff	?___tmul,main@tmpVal2
  5878  000A32  0060  F230  F3BC   	movff	?___tmul+1,main@tmpVal2+1
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;main.c: 506:                         if ((pInspVSet == 3) &&
  5882  000A38  0E03               	movlw	3
  5883  000A3A  0101               	movlb	1	; () banked
  5884  000A3C  19D7               	xorwf	_pInspVSet& (0+255),w,b
  5885  000A3E  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  5886  000A40  A4D8               	btfss	status,2,c
  5887  000A42  D0EA               	goto	l20679
  5888                           
  5889                           ; BSR set to: 1
  5890  000A44  51DD               	movf	_pInspOS3& (0+255),w,b
  5891  000A46  25E7               	addwf	_pCtrl& (0+255),w,b
  5892  000A48  0103               	movlb	3	; () banked
  5893  000A4A  6F9F               	movwf	??_main& (0+255),b
  5894  000A4C  0101               	movlb	1	; () banked
  5895  000A4E  51DE               	movf	(_pInspOS3+1)& (0+255),w,b
  5896  000A50  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  5897  000A52  0103               	movlb	3	; () banked
  5898  000A54  6FA0               	movwf	(??_main+1)& (0+255),b
  5899  000A56  0101               	movlb	1	; () banked
  5900  000A58  51DB               	movf	_pInspOS2& (0+255),w,b
  5901  000A5A  0103               	movlb	3	; () banked
  5902  000A5C  279F               	addwf	??_main& (0+255),f,b
  5903  000A5E  0101               	movlb	1	; () banked
  5904  000A60  51DC               	movf	(_pInspOS2+1)& (0+255),w,b
  5905  000A62  0103               	movlb	3	; () banked
  5906  000A64  23A0               	addwfc	(??_main+1)& (0+255),f,b
  5907  000A66  0060  F7CC  F09B   	movff	_intMaxP,___wmul@multiplier
  5908  000A6C  0060  F7D0  F09C   	movff	_intMaxP+1,___wmul@multiplier+1
  5909  000A72  0E00               	movlw	0
  5910  000A74  0100               	movlb	0	; () banked
  5911  000A76  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5912  000A78  0E07               	movlw	7
  5913  000A7A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  5914  000A7C  ECA2  F04D         	call	___wmul	;wreg free
  5915  000A80  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  5916  000A82  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5917  000A84  339B               	rrcf	?___wmul& (0+255),f,b
  5918  000A86  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  5919  000A88  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5920  000A8A  339B               	rrcf	?___wmul& (0+255),f,b
  5921  000A8C  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  5922  000A8E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5923  000A90  339B               	rrcf	?___wmul& (0+255),f,b
  5924  000A92  0103               	movlb	3	; () banked
  5925  000A94  519F               	movf	??_main& (0+255),w,b
  5926  000A96  0100               	movlb	0	; () banked
  5927  000A98  5D9B               	subwf	?___wmul& (0+255),w,b
  5928  000A9A  519C               	movf	(?___wmul+1)& (0+255),w,b
  5929  000A9C  0A80               	xorlw	128
  5930  000A9E  0103               	movlb	3	; () banked
  5931  000AA0  6FA1               	movwf	(??_main+2)& (0+255),b
  5932  000AA2  51A0               	movf	(??_main+1)& (0+255),w,b
  5933  000AA4  0A80               	xorlw	128
  5934  000AA6  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5935  000AA8  A0D8               	btfss	status,0,c
  5936  000AAA  D00F               	goto	u22230
  5937                           
  5938                           ; BSR set to: 3
  5939  000AAC  35BC               	rlcf	(main@tmpVal2+1)& (0+255),w,b
  5940  000AAE  31BC               	rrcf	(main@tmpVal2+1)& (0+255),w,b
  5941  000AB0  6FA0               	movwf	(??_main+1)& (0+255),b
  5942  000AB2  31BB               	rrcf	main@tmpVal2& (0+255),w,b
  5943  000AB4  6F9F               	movwf	??_main& (0+255),b
  5944  000AB6  51BF               	movf	main@tmpVal& (0+255),w,b
  5945  000AB8  5D9F               	subwf	??_main& (0+255),w,b
  5946  000ABA  51A0               	movf	(??_main+1)& (0+255),w,b
  5947  000ABC  0A80               	xorlw	128
  5948  000ABE  6FA1               	movwf	(??_main+2)& (0+255),b
  5949  000AC0  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  5950  000AC2  0A80               	xorlw	128
  5951  000AC4  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5952  000AC6  B0D8               	btfsc	status,0,c
  5953  000AC8  D0A7               	goto	l20679
  5954  000ACA                     u22230:
  5955                           
  5956                           ; BSR set to: 3
  5957                           ;main.c: 509:                                 ((tmpVal2 >> 1) < tmpVal))) {;main.c: 510:
      +                                                       LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
  5958  000ACA  84BA               	bsf	186,2,c	;volatile
  5959  000ACC  96BC               	bcf	188,3,c	;volatile
  5960                           
  5961                           ; BSR set to: 3
  5962                           ;main.c: 511:                             pInspVSet = 2;
  5963  000ACE  0E00               	movlw	0
  5964  000AD0  0101               	movlb	1	; () banked
  5965  000AD2  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5966  000AD4  0E02               	movlw	2
  5967  000AD6  6FD7               	movwf	_pInspVSet& (0+255),b
  5968                           
  5969                           ;main.c: 512:                             OSCheckInt = 1;
  5970  000AD8  0E01               	movlw	1
  5971  000ADA  6FC1               	movwf	_OSCheckInt& (0+255),b
  5972                           
  5973                           ; BSR set to: 1
  5974                           ;main.c: 513:                             pPlatMax = pCtrl;
  5975  000ADC  C1E7  F1AB         	movff	_pCtrl,_pPlatMax
  5976  000AE0  C1E8  F1AC         	movff	_pCtrl+1,_pPlatMax+1
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;main.c: 514:                             rVMedActuationTstamp = timeGet();
  5980  000AE4  EC7B  F051         	call	_timeGet	;wreg free
  5981  000AE8  0060  F24C  F19F   	movff	?_timeGet,_rVMedActuationTstamp
  5982  000AEE  0060  F250  F1A0   	movff	?_timeGet+1,_rVMedActuationTstamp+1
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;main.c: 515:                             rValveActuationTstamp = rVMedActuationTstamp;
  5986  000AF4  C19F  F1A1         	movff	_rVMedActuationTstamp,_rValveActuationTstamp
  5987  000AF8  C1A0  F1A2         	movff	_rVMedActuationTstamp+1,_rValveActuationTstamp+1
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;main.c: 516:                             pValveActuation = pCtrl;
  5991  000AFC  C1E7  F1E5         	movff	_pCtrl,_pValveActuation
  5992  000B00  C1E8  F1E6         	movff	_pCtrl+1,_pValveActuation+1
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;main.c: 517:                             printf ("PI-MED T %d - Pi %d Pc %d Vol %3x OS 
      +                          %d RF %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))
      +                          *((int24_t) pCtrl))>>8)), vValveActuation, ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInspOS3))>>8)), effectiveFlowRateInv);
  5996  000B04  0E47               	movlw	low STR_13
  5997  000B06  0101               	movlb	1	; () banked
  5998  000B08  6F46               	movwf	printf@fmt& (0+255),b
  5999  000B0A  0EFB               	movlw	high STR_13
  6000  000B0C  6F47               	movwf	(printf@fmt+1)& (0+255),b
  6001  000B0E  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  6002  000B14  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6003  000B1A  EC7B  F051         	call	_timeGet	;wreg free
  6004  000B1E  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  6005  000B24  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  6006  000B2A  EC0D  F04D         	call	_timeDiff	;wreg free
  6007  000B2E  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  6008  000B34  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  6009  000B3A  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  6010  000B40  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  6011  000B46  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6012  000B48  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6013  000B4A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6014  000B4C  0E45               	movlw	69
  6015  000B4E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6016  000B50  0E00               	movlw	0
  6017  000B52  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6018  000B54  0E00               	movlw	0
  6019  000B56  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6020  000B58  ECC7  F049         	call	___tmul	;wreg free
  6021  000B5C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6022  000B62  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6023  000B68  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6024  000B6A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6025  000B6C  698D               	setf	(?___tmul+2)& (0+255),b
  6026  000B6E  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  6027  000B74  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  6028  000B7A  0060  F79C  F08B   	movff	_pCtrl,___tmul@multiplier
  6029  000B80  0060  F7A0  F08C   	movff	_pCtrl+1,___tmul@multiplier+1
  6030  000B86  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6031  000B88  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6032  000B8A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6033  000B8C  0E45               	movlw	69
  6034  000B8E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6035  000B90  0E00               	movlw	0
  6036  000B92  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6037  000B94  0E00               	movlw	0
  6038  000B96  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6039  000B98  ECC7  F049         	call	___tmul	;wreg free
  6040  000B9C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6041  000BA2  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6042  000BA8  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6043  000BAA  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6044  000BAC  698D               	setf	(?___tmul+2)& (0+255),b
  6045  000BAE  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  6046  000BB4  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  6047  000BBA  0060  F69C  F14E   	movff	_vValveActuation,?_printf+8
  6048  000BC0  0060  F6A0  F14F   	movff	_vValveActuation+1,?_printf+9
  6049  000BC6  0060  F774  F08B   	movff	_pInspOS3,___tmul@multiplier
  6050  000BCC  0060  F778  F08C   	movff	_pInspOS3+1,___tmul@multiplier+1
  6051  000BD2  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6052  000BD4  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6053  000BD6  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6054  000BD8  0E45               	movlw	69
  6055  000BDA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6056  000BDC  0E00               	movlw	0
  6057  000BDE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6058  000BE0  0E00               	movlw	0
  6059  000BE2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6060  000BE4  ECC7  F049         	call	___tmul	;wreg free
  6061  000BE8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6062  000BEE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6063  000BF4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6064  000BF6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6065  000BF8  698D               	setf	(?___tmul+2)& (0+255),b
  6066  000BFA  0060  F22C  F150   	movff	?___tmul,?_printf+10
  6067  000C00  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  6068  000C06  0060  F744  F152   	movff	_effectiveFlowRateInv,?_printf+12
  6069  000C0C  0060  F748  F153   	movff	_effectiveFlowRateInv+1,?_printf+13
  6070  000C12  ECE9  F04E         	call	_printf	;wreg free
  6071                           
  6072                           ;main.c: 518:                         } else if ((pInspVSet == 2) &&
  6073  000C16  D103               	goto	l20713
  6074  000C18                     l20679:
  6075  000C18  0E02               	movlw	2
  6076  000C1A  0101               	movlb	1	; () banked
  6077  000C1C  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6078  000C1E  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6079  000C20  A4D8               	btfss	status,2,c
  6080  000C22  D0FD               	goto	l20713
  6081                           
  6082                           ; BSR set to: 1
  6083  000C24  51DB               	movf	_pInspOS2& (0+255),w,b
  6084  000C26  25E7               	addwf	_pCtrl& (0+255),w,b
  6085  000C28  0103               	movlb	3	; () banked
  6086  000C2A  6F9F               	movwf	??_main& (0+255),b
  6087  000C2C  0101               	movlb	1	; () banked
  6088  000C2E  51DC               	movf	(_pInspOS2+1)& (0+255),w,b
  6089  000C30  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6090  000C32  0103               	movlb	3	; () banked
  6091  000C34  6FA0               	movwf	(??_main+1)& (0+255),b
  6092  000C36  0060  F7CC  F09B   	movff	_intMaxP,___wmul@multiplier
  6093  000C3C  0060  F7D0  F09C   	movff	_intMaxP+1,___wmul@multiplier+1
  6094  000C42  0E00               	movlw	0
  6095  000C44  0100               	movlb	0	; () banked
  6096  000C46  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6097  000C48  0E07               	movlw	7
  6098  000C4A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6099  000C4C  ECA2  F04D         	call	___wmul	;wreg free
  6100  000C50  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6101  000C52  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6102  000C54  339B               	rrcf	?___wmul& (0+255),f,b
  6103  000C56  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6104  000C58  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6105  000C5A  339B               	rrcf	?___wmul& (0+255),f,b
  6106  000C5C  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6107  000C5E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6108  000C60  339B               	rrcf	?___wmul& (0+255),f,b
  6109  000C62  0103               	movlb	3	; () banked
  6110  000C64  519F               	movf	??_main& (0+255),w,b
  6111  000C66  0100               	movlb	0	; () banked
  6112  000C68  5D9B               	subwf	?___wmul& (0+255),w,b
  6113  000C6A  519C               	movf	(?___wmul+1)& (0+255),w,b
  6114  000C6C  0A80               	xorlw	128
  6115  000C6E  0103               	movlb	3	; () banked
  6116  000C70  6FA1               	movwf	(??_main+2)& (0+255),b
  6117  000C72  51A0               	movf	(??_main+1)& (0+255),w,b
  6118  000C74  0A80               	xorlw	128
  6119  000C76  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6120  000C78  A0D8               	btfss	status,0,c
  6121  000C7A  D00A               	goto	u22260
  6122                           
  6123                           ; BSR set to: 3
  6124  000C7C  51BF               	movf	main@tmpVal& (0+255),w,b
  6125  000C7E  5DBB               	subwf	main@tmpVal2& (0+255),w,b
  6126  000C80  51BC               	movf	(main@tmpVal2+1)& (0+255),w,b
  6127  000C82  0A80               	xorlw	128
  6128  000C84  6F9F               	movwf	??_main& (0+255),b
  6129  000C86  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  6130  000C88  0A80               	xorlw	128
  6131  000C8A  599F               	subwfb	??_main& (0+255),w,b
  6132  000C8C  B0D8               	btfsc	status,0,c
  6133  000C8E  D0C7               	goto	l20713
  6134  000C90                     u22260:
  6135                           
  6136                           ; BSR set to: 3
  6137                           ;main.c: 520:                                 ((tmpVal2) < tmpVal))) {;main.c: 522:     
      +                                                  if (rSV2ValveCRT > rSV2ValveORT) {
  6138  000C90  0101               	movlb	1	; () banked
  6139  000C92  519B               	movf	_rSV2ValveCRT& (0+255),w,b
  6140  000C94  5D9D               	subwf	_rSV2ValveORT& (0+255),w,b
  6141  000C96  519C               	movf	(_rSV2ValveCRT+1)& (0+255),w,b
  6142  000C98  599E               	subwfb	(_rSV2ValveORT+1)& (0+255),w,b
  6143  000C9A  B0D8               	btfsc	status,0,c
  6144  000C9C  D009               	goto	l1775
  6145                           
  6146                           ; BSR set to: 1
  6147                           ;main.c: 523:                                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  6148  000C9E  94BA               	bcf	186,2,c	;volatile
  6149  000CA0  96BC               	bcf	188,3,c	;volatile
  6150                           
  6151                           ; BSR set to: 1
  6152                           ;main.c: 524:                                 T4PR = 4 + rSV2ValveCRT - rSV2ValveORT;
  6153  000CA2  519D               	movf	_rSV2ValveORT& (0+255),w,b
  6154  000CA4  5D9B               	subwf	_rSV2ValveCRT& (0+255),w,b
  6155  000CA6  0F04               	addlw	4
  6156  000CA8  6E9F               	movwf	159,c	;volatile
  6157                           
  6158                           ; BSR set to: 1
  6159                           ;main.c: 525:                                 TMR4_Start();
  6160  000CAA  ECE5  F052         	call	_TMR4_Start	;wreg free
  6161                           
  6162                           ;main.c: 526:                             } else {
  6163  000CAE  D002               	goto	l20693
  6164  000CB0                     l1775:
  6165                           
  6166                           ; BSR set to: 1
  6167                           ;main.c: 527:                                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  6168  000CB0  94BA               	bcf	186,2,c	;volatile
  6169  000CB2  86BC               	bsf	188,3,c	;volatile
  6170  000CB4                     l20693:
  6171                           
  6172                           ; BSR set to: 1
  6173                           ;main.c: 529:                             if (OSCheckInt && (pInspOS3 < intMaxP)) {
  6174  000CB4  51C1               	movf	_OSCheckInt& (0+255),w,b
  6175  000CB6  B4D8               	btfsc	status,2,c
  6176  000CB8  D014               	goto	l20699
  6177                           
  6178                           ; BSR set to: 1
  6179  000CBA  51F3               	movf	_intMaxP& (0+255),w,b
  6180  000CBC  5DDD               	subwf	_pInspOS3& (0+255),w,b
  6181  000CBE  51DE               	movf	(_pInspOS3+1)& (0+255),w,b
  6182  000CC0  0A80               	xorlw	128
  6183  000CC2  0103               	movlb	3	; () banked
  6184  000CC4  6F9F               	movwf	??_main& (0+255),b
  6185  000CC6  0101               	movlb	1	; () banked
  6186  000CC8  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6187  000CCA  0A80               	xorlw	128
  6188  000CCC  0103               	movlb	3	; () banked
  6189  000CCE  599F               	subwfb	??_main& (0+255),w,b
  6190  000CD0  B0D8               	btfsc	status,0,c
  6191  000CD2  D007               	goto	l20699
  6192                           
  6193                           ; BSR set to: 3
  6194                           ;main.c: 531:                                 pInspOS3 = pInspOS3 + ((int16_t) ((0.045*4
      +                          096+2)/5)*1);
  6195  000CD4  0E25               	movlw	37
  6196  000CD6  0101               	movlb	1	; () banked
  6197  000CD8  25DD               	addwf	_pInspOS3& (0+255),w,b
  6198  000CDA  6FDD               	movwf	_pInspOS3& (0+255),b
  6199  000CDC  0E00               	movlw	0
  6200  000CDE  21DE               	addwfc	(_pInspOS3+1)& (0+255),w,b
  6201  000CE0  6FDE               	movwf	(_pInspOS3+1)& (0+255),b
  6202  000CE2                     l20699:
  6203                           
  6204                           ;main.c: 533:                             pInspVSet = 1;
  6205  000CE2  0E00               	movlw	0
  6206  000CE4  0101               	movlb	1	; () banked
  6207  000CE6  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  6208  000CE8  0E01               	movlw	1
  6209  000CEA  6FD7               	movwf	_pInspVSet& (0+255),b
  6210                           
  6211                           ; BSR set to: 1
  6212                           ;main.c: 534:                             OSCheckInt = 1;
  6213  000CEC  0E01               	movlw	1
  6214  000CEE  6FC1               	movwf	_OSCheckInt& (0+255),b
  6215                           
  6216                           ; BSR set to: 1
  6217                           ;main.c: 535:                             pPlatMax = pCtrl;
  6218  000CF0  C1E7  F1AB         	movff	_pCtrl,_pPlatMax
  6219  000CF4  C1E8  F1AC         	movff	_pCtrl+1,_pPlatMax+1
  6220                           
  6221                           ; BSR set to: 1
  6222                           ;main.c: 536:                             rVLowActuationTstamp = timeGet();
  6223  000CF8  EC7B  F051         	call	_timeGet	;wreg free
  6224  000CFC  0060  F24C  F0B8   	movff	?_timeGet,_rVLowActuationTstamp
  6225  000D02  0060  F250  F0B9   	movff	?_timeGet+1,_rVLowActuationTstamp+1
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;main.c: 537:                             rValveActuationTstamp = rVLowActuationTstamp;
  6229  000D08  C0B8  F1A1         	movff	_rVLowActuationTstamp,_rValveActuationTstamp
  6230  000D0C  C0B9  F1A2         	movff	_rVLowActuationTstamp+1,_rValveActuationTstamp+1
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;main.c: 538:                             pValveActuation = pCtrl;
  6234  000D10  C1E7  F1E5         	movff	_pCtrl,_pValveActuation
  6235  000D14  C1E8  F1E6         	movff	_pCtrl+1,_pValveActuation+1
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;main.c: 539:                             printf ("PI-LOW T %d - Pi %d Pc %d Vol %d OS %
      +                          d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*
      +                          1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int2
      +                          4_t) pCtrl))>>8)), vValveActuation, ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))
      +                          *((int24_t) pInspOS2))>>8)));
  6239  000D18  0E76               	movlw	low STR_14
  6240  000D1A  0101               	movlb	1	; () banked
  6241  000D1C  6F46               	movwf	printf@fmt& (0+255),b
  6242  000D1E  0EFB               	movlw	high STR_14
  6243  000D20  6F47               	movwf	(printf@fmt+1)& (0+255),b
  6244  000D22  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  6245  000D28  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6246  000D2E  EC7B  F051         	call	_timeGet	;wreg free
  6247  000D32  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  6248  000D38  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  6249  000D3E  EC0D  F04D         	call	_timeDiff	;wreg free
  6250  000D42  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  6251  000D48  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  6252  000D4E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  6253  000D54  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  6254  000D5A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6255  000D5C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6256  000D5E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6257  000D60  0E45               	movlw	69
  6258  000D62  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6259  000D64  0E00               	movlw	0
  6260  000D66  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6261  000D68  0E00               	movlw	0
  6262  000D6A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6263  000D6C  ECC7  F049         	call	___tmul	;wreg free
  6264  000D70  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6265  000D76  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6266  000D7C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6267  000D7E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6268  000D80  698D               	setf	(?___tmul+2)& (0+255),b
  6269  000D82  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  6270  000D88  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  6271  000D8E  0060  F79C  F08B   	movff	_pCtrl,___tmul@multiplier
  6272  000D94  0060  F7A0  F08C   	movff	_pCtrl+1,___tmul@multiplier+1
  6273  000D9A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6274  000D9C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6275  000D9E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6276  000DA0  0E45               	movlw	69
  6277  000DA2  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6278  000DA4  0E00               	movlw	0
  6279  000DA6  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6280  000DA8  0E00               	movlw	0
  6281  000DAA  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6282  000DAC  ECC7  F049         	call	___tmul	;wreg free
  6283  000DB0  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6284  000DB6  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6285  000DBC  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6286  000DBE  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6287  000DC0  698D               	setf	(?___tmul+2)& (0+255),b
  6288  000DC2  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  6289  000DC8  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  6290  000DCE  0060  F69C  F14E   	movff	_vValveActuation,?_printf+8
  6291  000DD4  0060  F6A0  F14F   	movff	_vValveActuation+1,?_printf+9
  6292  000DDA  0060  F76C  F08B   	movff	_pInspOS2,___tmul@multiplier
  6293  000DE0  0060  F770  F08C   	movff	_pInspOS2+1,___tmul@multiplier+1
  6294  000DE6  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6295  000DE8  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6296  000DEA  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6297  000DEC  0E45               	movlw	69
  6298  000DEE  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6299  000DF0  0E00               	movlw	0
  6300  000DF2  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6301  000DF4  0E00               	movlw	0
  6302  000DF6  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6303  000DF8  ECC7  F049         	call	___tmul	;wreg free
  6304  000DFC  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6305  000E02  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6306  000E08  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6307  000E0A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6308  000E0C  698D               	setf	(?___tmul+2)& (0+255),b
  6309  000E0E  0060  F22C  F150   	movff	?___tmul,?_printf+10
  6310  000E14  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  6311  000E1A  ECE9  F04E         	call	_printf	;wreg free
  6312  000E1E                     l20713:
  6313                           
  6314                           ;main.c: 542:                         if (pPlatMax < pCtrl) {
  6315  000E1E  0101               	movlb	1	; () banked
  6316  000E20  51E7               	movf	_pCtrl& (0+255),w,b
  6317  000E22  5DAB               	subwf	_pPlatMax& (0+255),w,b
  6318  000E24  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  6319  000E26  0A80               	xorlw	128
  6320  000E28  0103               	movlb	3	; () banked
  6321  000E2A  6F9F               	movwf	??_main& (0+255),b
  6322  000E2C  0101               	movlb	1	; () banked
  6323  000E2E  51E8               	movf	(_pCtrl+1)& (0+255),w,b
  6324  000E30  0A80               	xorlw	128
  6325  000E32  0103               	movlb	3	; () banked
  6326  000E34  599F               	subwfb	??_main& (0+255),w,b
  6327  000E36  B0D8               	btfsc	status,0,c
  6328  000E38  D004               	goto	l20717
  6329                           
  6330                           ; BSR set to: 3
  6331                           ;main.c: 543:                             pPlatMax = pCtrl;
  6332  000E3A  C1E7  F1AB         	movff	_pCtrl,_pPlatMax
  6333  000E3E  C1E8  F1AC         	movff	_pCtrl+1,_pPlatMax+1
  6334  000E42                     l20717:
  6335                           
  6336                           ; BSR set to: 3
  6337                           ;main.c: 547:                         if (OSCheckInt) {
  6338  000E42  0101               	movlb	1	; () banked
  6339  000E44  51C1               	movf	_OSCheckInt& (0+255),w,b
  6340  000E46  B4D8               	btfsc	status,2,c
  6341  000E48  D0A7               	goto	l20737
  6342                           
  6343                           ; BSR set to: 1
  6344                           ;main.c: 548:                             if (timeElapsed(rValveActuationTstamp, rSV2Val
      +                          veCRT + ((time_t) 15*1))) {
  6345  000E4A  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  6346  000E50  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  6347  000E56  0E0F               	movlw	15
  6348  000E58  259B               	addwf	_rSV2ValveCRT& (0+255),w,b
  6349  000E5A  0100               	movlb	0	; () banked
  6350  000E5C  6F95               	movwf	timeElapsed@duration& (0+255),b
  6351  000E5E  0E00               	movlw	0
  6352  000E60  0101               	movlb	1	; () banked
  6353  000E62  219C               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  6354  000E64  0100               	movlb	0	; () banked
  6355  000E66  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  6356  000E68  EC8A  F04D         	call	_timeElapsed	;wreg free
  6357  000E6C  0900               	iorlw	0
  6358  000E6E  B4D8               	btfsc	status,2,c
  6359  000E70  D05F               	goto	l20731
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;main.c: 549:                                 OSCheckInt = 0;
  6363  000E72  0E00               	movlw	0
  6364  000E74  0101               	movlb	1	; () banked
  6365  000E76  6FC1               	movwf	_OSCheckInt& (0+255),b
  6366                           
  6367                           ; BSR set to: 1
  6368                           ;main.c: 550:                                 if (pInspVSet == 2) {
  6369  000E78  0E02               	movlw	2
  6370  000E7A  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6371  000E7C  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6372  000E7E  A4D8               	btfss	status,2,c
  6373  000E80  D02A               	goto	l20727
  6374                           
  6375                           ; BSR set to: 1
  6376                           ;main.c: 552:                                     pInspOS3 = (3 * pInspOS3 + pPlatMax - 
      +                          pValveActuation) >> 2;
  6377  000E82  0060  F774  F09B   	movff	_pInspOS3,___wmul@multiplier
  6378  000E88  0060  F778  F09C   	movff	_pInspOS3+1,___wmul@multiplier+1
  6379  000E8E  0E00               	movlw	0
  6380  000E90  0100               	movlb	0	; () banked
  6381  000E92  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6382  000E94  0E03               	movlw	3
  6383  000E96  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6384  000E98  ECA2  F04D         	call	___wmul	;wreg free
  6385  000E9C  0101               	movlb	1	; () banked
  6386  000E9E  51E5               	movf	_pValveActuation& (0+255),w,b
  6387  000EA0  0100               	movlb	0	; () banked
  6388  000EA2  5F9B               	subwf	?___wmul& (0+255),f,b
  6389  000EA4  0101               	movlb	1	; () banked
  6390  000EA6  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  6391  000EA8  0100               	movlb	0	; () banked
  6392  000EAA  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
  6393  000EAC  0101               	movlb	1	; () banked
  6394  000EAE  51AB               	movf	_pPlatMax& (0+255),w,b
  6395  000EB0  0100               	movlb	0	; () banked
  6396  000EB2  279B               	addwf	?___wmul& (0+255),f,b
  6397  000EB4  0101               	movlb	1	; () banked
  6398  000EB6  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  6399  000EB8  0100               	movlb	0	; () banked
  6400  000EBA  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  6401  000EBC  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6402  000EBE  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6403  000EC0  339B               	rrcf	?___wmul& (0+255),f,b
  6404  000EC2  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6405  000EC4  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6406  000EC6  339B               	rrcf	?___wmul& (0+255),f,b
  6407  000EC8  0060  F26C  F1DD   	movff	?___wmul,_pInspOS3
  6408  000ECE  0060  F270  F1DE   	movff	?___wmul+1,_pInspOS3+1
  6409                           
  6410                           ;main.c: 553:                                 } else if (pInspVSet == 1) {
  6411  000ED4  D02D               	goto	l20731
  6412  000ED6                     l20727:
  6413                           
  6414                           ; BSR set to: 1
  6415  000ED6  05D7               	decf	_pInspVSet& (0+255),w,b
  6416  000ED8  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6417  000EDA  A4D8               	btfss	status,2,c
  6418  000EDC  D029               	goto	l20731
  6419                           
  6420                           ; BSR set to: 1
  6421                           ;main.c: 555:                                     pInspOS2 = (3 * pInspOS2 + pPlatMax - 
      +                          pValveActuation) >> 2;
  6422  000EDE  0060  F76C  F09B   	movff	_pInspOS2,___wmul@multiplier
  6423  000EE4  0060  F770  F09C   	movff	_pInspOS2+1,___wmul@multiplier+1
  6424  000EEA  0E00               	movlw	0
  6425  000EEC  0100               	movlb	0	; () banked
  6426  000EEE  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6427  000EF0  0E03               	movlw	3
  6428  000EF2  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6429  000EF4  ECA2  F04D         	call	___wmul	;wreg free
  6430  000EF8  0101               	movlb	1	; () banked
  6431  000EFA  51E5               	movf	_pValveActuation& (0+255),w,b
  6432  000EFC  0100               	movlb	0	; () banked
  6433  000EFE  5F9B               	subwf	?___wmul& (0+255),f,b
  6434  000F00  0101               	movlb	1	; () banked
  6435  000F02  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  6436  000F04  0100               	movlb	0	; () banked
  6437  000F06  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
  6438  000F08  0101               	movlb	1	; () banked
  6439  000F0A  51AB               	movf	_pPlatMax& (0+255),w,b
  6440  000F0C  0100               	movlb	0	; () banked
  6441  000F0E  279B               	addwf	?___wmul& (0+255),f,b
  6442  000F10  0101               	movlb	1	; () banked
  6443  000F12  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  6444  000F14  0100               	movlb	0	; () banked
  6445  000F16  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  6446  000F18  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6447  000F1A  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6448  000F1C  339B               	rrcf	?___wmul& (0+255),f,b
  6449  000F1E  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6450  000F20  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6451  000F22  339B               	rrcf	?___wmul& (0+255),f,b
  6452  000F24  0060  F26C  F1DB   	movff	?___wmul,_pInspOS2
  6453  000F2A  0060  F270  F1DC   	movff	?___wmul+1,_pInspOS2+1
  6454  000F30                     l20731:
  6455                           
  6456                           ;main.c: 559:                             pInspOSScale = 0;
  6457  000F30  0E00               	movlw	0
  6458  000F32  0103               	movlb	3	; () banked
  6459  000F34  6FBE               	movwf	(main@pInspOSScale+1)& (0+255),b
  6460  000F36  0E00               	movlw	0
  6461  000F38  6FBD               	movwf	main@pInspOSScale& (0+255),b
  6462                           
  6463                           ; BSR set to: 3
  6464                           ;main.c: 560:                             vInspOSScale = (5 * (1 + pInspVSet) * vInspOS)
      +                           >> 4;
  6465  000F3A  0E01               	movlw	1
  6466  000F3C  0101               	movlb	1	; () banked
  6467  000F3E  25D7               	addwf	_pInspVSet& (0+255),w,b
  6468  000F40  0100               	movlb	0	; () banked
  6469  000F42  6F9B               	movwf	___wmul@multiplier& (0+255),b
  6470  000F44  0E00               	movlw	0
  6471  000F46  0101               	movlb	1	; () banked
  6472  000F48  21D8               	addwfc	(_pInspVSet+1)& (0+255),w,b
  6473  000F4A  0100               	movlb	0	; () banked
  6474  000F4C  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  6475  000F4E  0060  F764  F09D   	movff	_vInspOS,___wmul@multiplicand
  6476  000F54  0060  F768  F09E   	movff	_vInspOS+1,___wmul@multiplicand+1
  6477  000F5A  ECA2  F04D         	call	___wmul	;wreg free
  6478  000F5E  0060  F26C  F3B9   	movff	?___wmul,_main$6102
  6479  000F64  0060  F270  F3BA   	movff	?___wmul+1,_main$6102+1
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;main.c: 560:                             vInspOSScale = (5 * (1 + pInspVSet) * vInspOS)
      +                           >> 4;
  6483  000F6A  0060  FEE4  F09B   	movff	_main$6102,___wmul@multiplier
  6484  000F70  0060  FEE8  F09C   	movff	_main$6102+1,___wmul@multiplier+1
  6485  000F76  0E00               	movlw	0
  6486  000F78  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6487  000F7A  0E05               	movlw	5
  6488  000F7C  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6489  000F7E  ECA2  F04D         	call	___wmul	;wreg free
  6490  000F82  0E04               	movlw	4
  6491  000F84  0103               	movlb	3	; () banked
  6492  000F86  6F9F               	movwf	??_main& (0+255),b
  6493  000F88                     u22355:
  6494  000F88  0100               	movlb	0	; () banked
  6495  000F8A  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6496  000F8C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6497  000F8E  339B               	rrcf	?___wmul& (0+255),f,b
  6498  000F90  0103               	movlb	3	; () banked
  6499  000F92  2F9F               	decfsz	??_main& (0+255),f,b
  6500  000F94  D7F9               	goto	u22355
  6501  000F96  D072               	goto	L1
  6502  000F98                     l20737:
  6503                           
  6504                           ; BSR set to: 1
  6505                           ;main.c: 562:                             if (pInspVSet == 3) {
  6506  000F98  0E03               	movlw	3
  6507  000F9A  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6508  000F9C  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6509  000F9E  A4D8               	btfss	status,2,c
  6510  000FA0  D007               	goto	l20741
  6511                           
  6512                           ; BSR set to: 1
  6513                           ;main.c: 563:                                 pInspOSScale = pInspOS3;
  6514  000FA2  0060  F774  F3BD   	movff	_pInspOS3,main@pInspOSScale
  6515  000FA8  0060  F778  F3BE   	movff	_pInspOS3+1,main@pInspOSScale+1
  6516                           
  6517                           ;main.c: 564:                             } else if (pInspVSet == 2) {
  6518  000FAE  D03C               	goto	l1786
  6519  000FB0                     l20741:
  6520                           
  6521                           ; BSR set to: 1
  6522  000FB0  0E02               	movlw	2
  6523  000FB2  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6524  000FB4  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6525  000FB6  A4D8               	btfss	status,2,c
  6526  000FB8  D007               	goto	l20745
  6527                           
  6528                           ; BSR set to: 1
  6529                           ;main.c: 565:                                 pInspOSScale = pInspOS2;
  6530  000FBA  0060  F76C  F3BD   	movff	_pInspOS2,main@pInspOSScale
  6531  000FC0  0060  F770  F3BE   	movff	_pInspOS2+1,main@pInspOSScale+1
  6532                           
  6533                           ;main.c: 566:                             } else {
  6534  000FC6  D030               	goto	l1786
  6535  000FC8                     l20745:
  6536                           
  6537                           ; BSR set to: 1
  6538                           ;main.c: 567:                                 pInspOSScale = (5 * pInspVSet * pInspOS) >
      +                          > 4;
  6539  000FC8  0060  F75C  F09B   	movff	_pInspVSet,___wmul@multiplier
  6540  000FCE  0060  F760  F09C   	movff	_pInspVSet+1,___wmul@multiplier+1
  6541  000FD4  0060  F340  F09D   	movff	_pInspOS,___wmul@multiplicand
  6542  000FDA  0060  F344  F09E   	movff	_pInspOS+1,___wmul@multiplicand+1
  6543  000FE0  ECA2  F04D         	call	___wmul	;wreg free
  6544  000FE4  0060  F26C  F3B9   	movff	?___wmul,_main$6102
  6545  000FEA  0060  F270  F3BA   	movff	?___wmul+1,_main$6102+1
  6546                           
  6547                           ;main.c: 567:                                 pInspOSScale = (5 * pInspVSet * pInspOS) >
      +                          > 4;
  6548  000FF0  0060  FEE4  F09B   	movff	_main$6102,___wmul@multiplier
  6549  000FF6  0060  FEE8  F09C   	movff	_main$6102+1,___wmul@multiplier+1
  6550  000FFC  0E00               	movlw	0
  6551  000FFE  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6552  001000  0E05               	movlw	5
  6553  001002  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6554  001004  ECA2  F04D         	call	___wmul	;wreg free
  6555  001008  0E04               	movlw	4
  6556  00100A  0103               	movlb	3	; () banked
  6557  00100C  6F9F               	movwf	??_main& (0+255),b
  6558  00100E                     u22385:
  6559  00100E  0100               	movlb	0	; () banked
  6560  001010  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6561  001012  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6562  001014  339B               	rrcf	?___wmul& (0+255),f,b
  6563  001016  0103               	movlb	3	; () banked
  6564  001018  2F9F               	decfsz	??_main& (0+255),f,b
  6565  00101A  D7F9               	goto	u22385
  6566  00101C  0060  F26C  F3BD   	movff	?___wmul,main@pInspOSScale
  6567  001022  0060  F270  F3BE   	movff	?___wmul+1,main@pInspOSScale+1
  6568  001028                     l1786:
  6569                           
  6570                           ;main.c: 569:                             vInspOSScale = (5 * pInspVSet * vInspOS) >> 4;
  6571  001028  0060  F75C  F09B   	movff	_pInspVSet,___wmul@multiplier
  6572  00102E  0060  F760  F09C   	movff	_pInspVSet+1,___wmul@multiplier+1
  6573  001034  0060  F764  F09D   	movff	_vInspOS,___wmul@multiplicand
  6574  00103A  0060  F768  F09E   	movff	_vInspOS+1,___wmul@multiplicand+1
  6575  001040  ECA2  F04D         	call	___wmul	;wreg free
  6576  001044  0060  F26C  F3B9   	movff	?___wmul,_main$6102
  6577  00104A  0060  F270  F3BA   	movff	?___wmul+1,_main$6102+1
  6578                           
  6579                           ;main.c: 569:                             vInspOSScale = (5 * pInspVSet * vInspOS) >> 4;
  6580  001050  0060  FEE4  F09B   	movff	_main$6102,___wmul@multiplier
  6581  001056  0060  FEE8  F09C   	movff	_main$6102+1,___wmul@multiplier+1
  6582  00105C  0E00               	movlw	0
  6583  00105E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6584  001060  0E05               	movlw	5
  6585  001062  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6586  001064  ECA2  F04D         	call	___wmul	;wreg free
  6587  001068  0E04               	movlw	4
  6588  00106A  0103               	movlb	3	; () banked
  6589  00106C  6F9F               	movwf	??_main& (0+255),b
  6590  00106E                     u22395:
  6591  00106E  0100               	movlb	0	; () banked
  6592  001070  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6593  001072  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6594  001074  339B               	rrcf	?___wmul& (0+255),f,b
  6595  001076  0103               	movlb	3	; () banked
  6596  001078  2F9F               	decfsz	??_main& (0+255),f,b
  6597  00107A  D7F9               	goto	u22395
  6598  00107C                     L1:
  6599  00107C  0060  F26C  F3B2   	movff	?___wmul,main@vInspOSScale
  6600  001082  0060  F270  F3B3   	movff	?___wmul+1,main@vInspOSScale+1
  6601                           
  6602                           ; BSR set to: 3
  6603                           ;main.c: 573:                         if (timeElapsed(rCycleTime, intIDuration - rSV2Val
      +                          veCRT - ((time_t) 20*1)) ||
  6604  001088  0060  F73C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  6605  00108E  0060  F740  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  6606  001094  0101               	movlb	1	; () banked
  6607  001096  519B               	movf	_rSV2ValveCRT& (0+255),w,b
  6608  001098  5DAF               	subwf	_intIDuration& (0+255),w,b
  6609  00109A  0103               	movlb	3	; () banked
  6610  00109C  6F9F               	movwf	??_main& (0+255),b
  6611  00109E  0101               	movlb	1	; () banked
  6612  0010A0  519C               	movf	(_rSV2ValveCRT+1)& (0+255),w,b
  6613  0010A2  59B0               	subwfb	(_intIDuration+1)& (0+255),w,b
  6614  0010A4  0103               	movlb	3	; () banked
  6615  0010A6  6FA0               	movwf	(??_main+1)& (0+255),b
  6616  0010A8  0EEC               	movlw	236
  6617  0010AA  259F               	addwf	??_main& (0+255),w,b
  6618  0010AC  0100               	movlb	0	; () banked
  6619  0010AE  6F95               	movwf	timeElapsed@duration& (0+255),b
  6620  0010B0  0EFF               	movlw	255
  6621  0010B2  0103               	movlb	3	; () banked
  6622  0010B4  21A0               	addwfc	(??_main+1)& (0+255),w,b
  6623  0010B6  0100               	movlb	0	; () banked
  6624  0010B8  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  6625  0010BA  EC8A  F04D         	call	_timeElapsed	;wreg free
  6626  0010BE  0900               	iorlw	0
  6627  0010C0  A4D8               	btfss	status,2,c
  6628  0010C2  D08E               	goto	u22480
  6629                           
  6630                           ; BSR set to: 0
  6631  0010C4  0E4A               	movlw	74
  6632  0010C6  0101               	movlb	1	; () banked
  6633  0010C8  25F3               	addwf	_intMaxP& (0+255),w,b
  6634  0010CA  0103               	movlb	3	; () banked
  6635  0010CC  6F9F               	movwf	??_main& (0+255),b
  6636  0010CE  0E00               	movlw	0
  6637  0010D0  0101               	movlb	1	; () banked
  6638  0010D2  21F4               	addwfc	(_intMaxP+1)& (0+255),w,b
  6639  0010D4  0103               	movlb	3	; () banked
  6640  0010D6  6FA0               	movwf	(??_main+1)& (0+255),b
  6641  0010D8  0101               	movlb	1	; () banked
  6642  0010DA  51EF               	movf	_pInst& (0+255),w,b
  6643  0010DC  0103               	movlb	3	; () banked
  6644  0010DE  5D9F               	subwf	??_main& (0+255),w,b
  6645  0010E0  51A0               	movf	(??_main+1)& (0+255),w,b
  6646  0010E2  0A80               	xorlw	128
  6647  0010E4  6FA1               	movwf	(??_main+2)& (0+255),b
  6648  0010E6  0101               	movlb	1	; () banked
  6649  0010E8  51F0               	movf	(_pInst+1)& (0+255),w,b
  6650  0010EA  0A80               	xorlw	128
  6651  0010EC  0103               	movlb	3	; () banked
  6652  0010EE  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6653  0010F0  A0D8               	btfss	status,0,c
  6654  0010F2  D076               	goto	u22480
  6655                           
  6656                           ; BSR set to: 3
  6657  0010F4  0101               	movlb	1	; () banked
  6658  0010F6  51E7               	movf	_pCtrl& (0+255),w,b
  6659  0010F8  5DF3               	subwf	_intMaxP& (0+255),w,b
  6660  0010FA  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6661  0010FC  0A80               	xorlw	128
  6662  0010FE  0103               	movlb	3	; () banked
  6663  001100  6F9F               	movwf	??_main& (0+255),b
  6664  001102  0101               	movlb	1	; () banked
  6665  001104  51E8               	movf	(_pCtrl+1)& (0+255),w,b
  6666  001106  0A80               	xorlw	128
  6667  001108  0103               	movlb	3	; () banked
  6668  00110A  599F               	subwfb	??_main& (0+255),w,b
  6669  00110C  A0D8               	btfss	status,0,c
  6670  00110E  D068               	goto	u22480
  6671                           
  6672                           ; BSR set to: 3
  6673  001110  51BD               	movf	main@pInspOSScale& (0+255),w,b
  6674  001112  0101               	movlb	1	; () banked
  6675  001114  25E7               	addwf	_pCtrl& (0+255),w,b
  6676  001116  0103               	movlb	3	; () banked
  6677  001118  6F9F               	movwf	??_main& (0+255),b
  6678  00111A  51BE               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6679  00111C  0101               	movlb	1	; () banked
  6680  00111E  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6681  001120  0103               	movlb	3	; () banked
  6682  001122  6FA0               	movwf	(??_main+1)& (0+255),b
  6683  001124  519F               	movf	??_main& (0+255),w,b
  6684  001126  0101               	movlb	1	; () banked
  6685  001128  5DF3               	subwf	_intMaxP& (0+255),w,b
  6686  00112A  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6687  00112C  0A80               	xorlw	128
  6688  00112E  0103               	movlb	3	; () banked
  6689  001130  6FA1               	movwf	(??_main+2)& (0+255),b
  6690  001132  51A0               	movf	(??_main+1)& (0+255),w,b
  6691  001134  0A80               	xorlw	128
  6692  001136  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6693  001138  A0D8               	btfss	status,0,c
  6694  00113A  D052               	goto	u22480
  6695                           
  6696                           ; BSR set to: 3
  6697  00113C  0101               	movlb	1	; () banked
  6698  00113E  51CA               	movf	_intVentMode& (0+255),w,b
  6699  001140  A4D8               	btfss	status,2,c
  6700  001142  D02F               	goto	u22460
  6701                           
  6702                           ; BSR set to: 1
  6703  001144  0103               	movlb	3	; () banked
  6704  001146  51BD               	movf	main@pInspOSScale& (0+255),w,b
  6705  001148  0101               	movlb	1	; () banked
  6706  00114A  25E7               	addwf	_pCtrl& (0+255),w,b
  6707  00114C  0103               	movlb	3	; () banked
  6708  00114E  6F9F               	movwf	??_main& (0+255),b
  6709  001150  51BE               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6710  001152  0101               	movlb	1	; () banked
  6711  001154  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6712  001156  0103               	movlb	3	; () banked
  6713  001158  6FA0               	movwf	(??_main+1)& (0+255),b
  6714  00115A  519F               	movf	??_main& (0+255),w,b
  6715  00115C  0101               	movlb	1	; () banked
  6716  00115E  5DB3               	subwf	_intIP& (0+255),w,b
  6717  001160  51B4               	movf	(_intIP+1)& (0+255),w,b
  6718  001162  0A80               	xorlw	128
  6719  001164  0103               	movlb	3	; () banked
  6720  001166  6FA1               	movwf	(??_main+2)& (0+255),b
  6721  001168  51A0               	movf	(??_main+1)& (0+255),w,b
  6722  00116A  0A80               	xorlw	128
  6723  00116C  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6724  00116E  B0D8               	btfsc	status,0,c
  6725  001170  D018               	goto	u22460
  6726                           
  6727                           ; BSR set to: 3
  6728  001172  51B2               	movf	main@vInspOSScale& (0+255),w,b
  6729  001174  0101               	movlb	1	; () banked
  6730  001176  25A7               	addwf	_vValveActuation& (0+255),w,b
  6731  001178  0103               	movlb	3	; () banked
  6732  00117A  6F9F               	movwf	??_main& (0+255),b
  6733  00117C  51B3               	movf	(main@vInspOSScale+1)& (0+255),w,b
  6734  00117E  0101               	movlb	1	; () banked
  6735  001180  21A8               	addwfc	(_vValveActuation+1)& (0+255),w,b
  6736  001182  0103               	movlb	3	; () banked
  6737  001184  6FA0               	movwf	(??_main+1)& (0+255),b
  6738  001186  0101               	movlb	1	; () banked
  6739  001188  51F1               	movf	_intMaxV& (0+255),w,b
  6740  00118A  0103               	movlb	3	; () banked
  6741  00118C  5D9F               	subwf	??_main& (0+255),w,b
  6742  00118E  51A0               	movf	(??_main+1)& (0+255),w,b
  6743  001190  0A80               	xorlw	128
  6744  001192  6FA1               	movwf	(??_main+2)& (0+255),b
  6745  001194  0101               	movlb	1	; () banked
  6746  001196  51F2               	movf	(_intMaxV+1)& (0+255),w,b
  6747  001198  0A80               	xorlw	128
  6748  00119A  0103               	movlb	3	; () banked
  6749  00119C  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6750  00119E  B0D8               	btfsc	status,0,c
  6751  0011A0  D01F               	goto	u22480
  6752  0011A2                     u22460:
  6753  0011A2  0101               	movlb	1	; () banked
  6754  0011A4  05CA               	decf	_intVentMode& (0+255),w,b
  6755  0011A6  A4D8               	btfss	status,2,c
  6756  0011A8  EF59  F00E         	goto	l20947
  6757                           
  6758                           ; BSR set to: 1
  6759  0011AC  0103               	movlb	3	; () banked
  6760  0011AE  51B2               	movf	main@vInspOSScale& (0+255),w,b
  6761  0011B0  0101               	movlb	1	; () banked
  6762  0011B2  25A7               	addwf	_vValveActuation& (0+255),w,b
  6763  0011B4  0103               	movlb	3	; () banked
  6764  0011B6  6F9F               	movwf	??_main& (0+255),b
  6765  0011B8  51B3               	movf	(main@vInspOSScale+1)& (0+255),w,b
  6766  0011BA  0101               	movlb	1	; () banked
  6767  0011BC  21A8               	addwfc	(_vValveActuation+1)& (0+255),w,b
  6768  0011BE  0103               	movlb	3	; () banked
  6769  0011C0  6FA0               	movwf	(??_main+1)& (0+255),b
  6770  0011C2  0101               	movlb	1	; () banked
  6771  0011C4  51F1               	movf	_intMaxV& (0+255),w,b
  6772  0011C6  0103               	movlb	3	; () banked
  6773  0011C8  5D9F               	subwf	??_main& (0+255),w,b
  6774  0011CA  51A0               	movf	(??_main+1)& (0+255),w,b
  6775  0011CC  0A80               	xorlw	128
  6776  0011CE  6FA1               	movwf	(??_main+2)& (0+255),b
  6777  0011D0  0101               	movlb	1	; () banked
  6778  0011D2  51F2               	movf	(_intMaxV+1)& (0+255),w,b
  6779  0011D4  0A80               	xorlw	128
  6780  0011D6  0103               	movlb	3	; () banked
  6781  0011D8  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6782  0011DA  A0D8               	btfss	status,0,c
  6783  0011DC  EF59  F00E         	goto	l20947
  6784  0011E0                     u22480:
  6785                           
  6786                           ;main.c: 578:                                 ((intVentMode == VMODE_VOLUME) && ((vValve
      +                          Actuation + vInspOSScale) >= intMaxV))) {;main.c: 579:                             LATAb
      +                          its.LATA2 = 0;LATCbits.LATC3 = 0;
  6787  0011E0  94BA               	bcf	186,2,c	;volatile
  6788  0011E2  96BC               	bcf	188,3,c	;volatile
  6789                           
  6790                           ;main.c: 580:                             sv2DelayCheck = 1;
  6791  0011E4  0E01               	movlw	1
  6792  0011E6  0101               	movlb	1	; () banked
  6793  0011E8  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;main.c: 581:                             pValveActuation = pCtrl;
  6797  0011EA  C1E7  F1E5         	movff	_pCtrl,_pValveActuation
  6798  0011EE  C1E8  F1E6         	movff	_pCtrl+1,_pValveActuation+1
  6799                           
  6800                           ;main.c: 582:                             initInspSubState = 0;
  6801  0011F2  0E00               	movlw	0
  6802  0011F4  6FC6               	movwf	_initInspSubState& (0+255),b
  6803                           
  6804                           ; BSR set to: 1
  6805                           ;main.c: 583:                             rValveActuationTstamp = timeGet();
  6806  0011F6  EC7B  F051         	call	_timeGet	;wreg free
  6807  0011FA  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  6808  001200  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;main.c: 584:                             rValveDelayStart = rValveActuationTstamp;
  6812  001206  C1A1  F197         	movff	_rValveActuationTstamp,_rValveDelayStart
  6813  00120A  C1A2  F198         	movff	_rValveActuationTstamp+1,_rValveDelayStart+1
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;main.c: 585:                             tInsp = timeDiff(rCycleTime, rValveActuationTs
      +                          tamp);
  6817  00120E  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  6818  001214  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6819  00121A  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  6820  001220  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  6821  001226  EC0D  F04D         	call	_timeDiff	;wreg free
  6822  00122A  0060  F254  F23C   	movff	?_timeDiff,_tInsp
  6823  001230  0060  F258  F23D   	movff	?_timeDiff+1,_tInsp+1
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;main.c: 591:                             OSCheck = 1;
  6827  001236  0E01               	movlw	1
  6828  001238  0101               	movlb	1	; () banked
  6829  00123A  6FC3               	movwf	_OSCheck& (0+255),b
  6830                           
  6831                           ; BSR set to: 1
  6832                           ;main.c: 592:                             pPlatMax = pInst;
  6833  00123C  C1EF  F1AB         	movff	_pInst,_pPlatMax
  6834  001240  C1F0  F1AC         	movff	_pInst+1,_pPlatMax+1
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;main.c: 593:                             if (((pInspVSet != 1) || OSCheckInt) && ((pIns
      +                          t > intMaxP) || ((pCtrl + pInspOSScale) > intMaxP))) {
  6838  001244  05D7               	decf	_pInspVSet& (0+255),w,b
  6839  001246  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6840  001248  A4D8               	btfss	status,2,c
  6841  00124A  D003               	goto	u22500
  6842                           
  6843                           ; BSR set to: 1
  6844  00124C  51C1               	movf	_OSCheckInt& (0+255),w,b
  6845  00124E  B4D8               	btfsc	status,2,c
  6846  001250  D054               	goto	l20799
  6847  001252                     u22500:
  6848                           
  6849                           ; BSR set to: 1
  6850  001252  51EF               	movf	_pInst& (0+255),w,b
  6851  001254  5DF3               	subwf	_intMaxP& (0+255),w,b
  6852  001256  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6853  001258  0A80               	xorlw	128
  6854  00125A  0103               	movlb	3	; () banked
  6855  00125C  6F9F               	movwf	??_main& (0+255),b
  6856  00125E  0101               	movlb	1	; () banked
  6857  001260  51F0               	movf	(_pInst+1)& (0+255),w,b
  6858  001262  0A80               	xorlw	128
  6859  001264  0103               	movlb	3	; () banked
  6860  001266  599F               	subwfb	??_main& (0+255),w,b
  6861  001268  A0D8               	btfss	status,0,c
  6862  00126A  D016               	goto	u22520
  6863                           
  6864                           ; BSR set to: 3
  6865  00126C  51BD               	movf	main@pInspOSScale& (0+255),w,b
  6866  00126E  0101               	movlb	1	; () banked
  6867  001270  25E7               	addwf	_pCtrl& (0+255),w,b
  6868  001272  0103               	movlb	3	; () banked
  6869  001274  6F9F               	movwf	??_main& (0+255),b
  6870  001276  51BE               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6871  001278  0101               	movlb	1	; () banked
  6872  00127A  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6873  00127C  0103               	movlb	3	; () banked
  6874  00127E  6FA0               	movwf	(??_main+1)& (0+255),b
  6875  001280  519F               	movf	??_main& (0+255),w,b
  6876  001282  0101               	movlb	1	; () banked
  6877  001284  5DF3               	subwf	_intMaxP& (0+255),w,b
  6878  001286  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6879  001288  0A80               	xorlw	128
  6880  00128A  0103               	movlb	3	; () banked
  6881  00128C  6FA1               	movwf	(??_main+2)& (0+255),b
  6882  00128E  51A0               	movf	(??_main+1)& (0+255),w,b
  6883  001290  0A80               	xorlw	128
  6884  001292  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6885  001294  B0D8               	btfsc	status,0,c
  6886  001296  D031               	goto	l20799
  6887  001298                     u22520:
  6888                           
  6889                           ; BSR set to: 3
  6890                           ;main.c: 596:                                 if ((pInspOS3 < intMaxP) && ((pInspVSet ==
      +                           2) || (pInspVSet == 3))) {
  6891  001298  0101               	movlb	1	; () banked
  6892  00129A  51F3               	movf	_intMaxP& (0+255),w,b
  6893  00129C  5DDD               	subwf	_pInspOS3& (0+255),w,b
  6894  00129E  51DE               	movf	(_pInspOS3+1)& (0+255),w,b
  6895  0012A0  0A80               	xorlw	128
  6896  0012A2  0103               	movlb	3	; () banked
  6897  0012A4  6F9F               	movwf	??_main& (0+255),b
  6898  0012A6  0101               	movlb	1	; () banked
  6899  0012A8  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6900  0012AA  0A80               	xorlw	128
  6901  0012AC  0103               	movlb	3	; () banked
  6902  0012AE  599F               	subwfb	??_main& (0+255),w,b
  6903  0012B0  B0D8               	btfsc	status,0,c
  6904  0012B2  D010               	goto	l20795
  6905                           
  6906                           ; BSR set to: 3
  6907  0012B4  0E02               	movlw	2
  6908  0012B6  0101               	movlb	1	; () banked
  6909  0012B8  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6910  0012BA  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6911  0012BC  B4D8               	btfsc	status,2,c
  6912  0012BE  D005               	goto	u22550
  6913                           
  6914                           ; BSR set to: 1
  6915  0012C0  0E03               	movlw	3
  6916  0012C2  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6917  0012C4  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6918  0012C6  A4D8               	btfss	status,2,c
  6919  0012C8  D005               	goto	l20795
  6920  0012CA                     u22550:
  6921                           
  6922                           ; BSR set to: 1
  6923                           ;main.c: 597:                                     pInspOS3 += ((int16_t) ((0.045*4096+2)
      +                          /5)*5);
  6924  0012CA  0EB9               	movlw	185
  6925  0012CC  27DD               	addwf	_pInspOS3& (0+255),f,b
  6926  0012CE  0E00               	movlw	0
  6927  0012D0  23DE               	addwfc	(_pInspOS3+1)& (0+255),f,b
  6928                           
  6929                           ;main.c: 598:                                 } else if (pInspOS2 < intMaxP) {
  6930  0012D2  D013               	goto	l20799
  6931  0012D4                     l20795:
  6932  0012D4  0101               	movlb	1	; () banked
  6933  0012D6  51F3               	movf	_intMaxP& (0+255),w,b
  6934  0012D8  5DDB               	subwf	_pInspOS2& (0+255),w,b
  6935  0012DA  51DC               	movf	(_pInspOS2+1)& (0+255),w,b
  6936  0012DC  0A80               	xorlw	128
  6937  0012DE  0103               	movlb	3	; () banked
  6938  0012E0  6F9F               	movwf	??_main& (0+255),b
  6939  0012E2  0101               	movlb	1	; () banked
  6940  0012E4  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6941  0012E6  0A80               	xorlw	128
  6942  0012E8  0103               	movlb	3	; () banked
  6943  0012EA  599F               	subwfb	??_main& (0+255),w,b
  6944  0012EC  B0D8               	btfsc	status,0,c
  6945  0012EE  D005               	goto	l20799
  6946                           
  6947                           ; BSR set to: 3
  6948                           ;main.c: 599:                                     pInspOS2 += ((int16_t) ((0.045*4096+2)
      +                          /5)*5);
  6949  0012F0  0EB9               	movlw	185
  6950  0012F2  0101               	movlb	1	; () banked
  6951  0012F4  27DB               	addwf	_pInspOS2& (0+255),f,b
  6952  0012F6  0E00               	movlw	0
  6953  0012F8  23DC               	addwfc	(_pInspOS2+1)& (0+255),f,b
  6954  0012FA                     l20799:
  6955                           
  6956                           ;main.c: 603:                             if (OSCheckInt) {
  6957  0012FA  0101               	movlb	1	; () banked
  6958  0012FC  51C1               	movf	_OSCheckInt& (0+255),w,b
  6959  0012FE  B4D8               	btfsc	status,2,c
  6960  001300  D00A               	goto	l1804
  6961                           
  6962                           ; BSR set to: 1
  6963                           ;main.c: 604:                                 pInspOSVSet = pInspVSet + 1;
  6964  001302  0E01               	movlw	1
  6965  001304  25D7               	addwf	_pInspVSet& (0+255),w,b
  6966  001306  0102               	movlb	2	; () banked
  6967  001308  6F40               	movwf	_pInspOSVSet& (0+255),b
  6968  00130A  0E00               	movlw	0
  6969  00130C  0101               	movlb	1	; () banked
  6970  00130E  21D8               	addwfc	(_pInspVSet+1)& (0+255),w,b
  6971  001310  0102               	movlb	2	; () banked
  6972  001312  6F41               	movwf	(_pInspOSVSet+1)& (0+255),b
  6973                           
  6974                           ;main.c: 605:                             } else {
  6975  001314  D004               	goto	l20803
  6976  001316                     l1804:
  6977                           
  6978                           ; BSR set to: 1
  6979                           ;main.c: 606:                                 pInspOSVSet = pInspVSet;
  6980  001316  C1D7  F240         	movff	_pInspVSet,_pInspOSVSet
  6981  00131A  C1D8  F241         	movff	_pInspVSet+1,_pInspOSVSet+1
  6982  00131E                     l20803:
  6983                           
  6984                           ;main.c: 609:                             if (pInspVSet == 3) {
  6985  00131E  0E03               	movlw	3
  6986  001320  0101               	movlb	1	; () banked
  6987  001322  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6988  001324  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6989  001326  A4D8               	btfss	status,2,c
  6990  001328  D017               	goto	l20807
  6991                           
  6992                           ; BSR set to: 1
  6993                           ;main.c: 610:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          timeGet());
  6994  00132A  0060  F2E8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  6995  001330  0060  F2EC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  6996  001336  EC7B  F051         	call	_timeGet	;wreg free
  6997  00133A  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  6998  001340  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  6999  001346  EC0D  F04D         	call	_timeDiff	;wreg free
  7000  00134A  0060  F254  F3B7   	movff	?_timeDiff,main@tmpUVal
  7001  001350  0060  F258  F3B8   	movff	?_timeDiff+1,main@tmpUVal+1
  7002                           
  7003                           ;main.c: 611:                             } else if (pInspVSet == 2) {
  7004  001356  D0A4               	goto	l20815
  7005  001358                     l20807:
  7006                           
  7007                           ; BSR set to: 1
  7008  001358  0E02               	movlw	2
  7009  00135A  19D7               	xorwf	_pInspVSet& (0+255),w,b
  7010  00135C  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7011  00135E  A4D8               	btfss	status,2,c
  7012  001360  D03B               	goto	l20811
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;main.c: 612:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          rVMedActuationTstamp) + ((2 * 5 * timeDiff(rVMedActuationTstamp, timeGet())) >> 4);
  7016  001362  0060  F2E8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  7017  001368  0060  F2EC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  7018  00136E  0060  F67C  F097   	movff	_rVMedActuationTstamp,timeDiff@endT
  7019  001374  0060  F680  F098   	movff	_rVMedActuationTstamp+1,timeDiff@endT+1
  7020  00137A  EC0D  F04D         	call	_timeDiff	;wreg free
  7021  00137E  0060  F254  F39F   	movff	?_timeDiff,??_main
  7022  001384  0060  F258  F3A0   	movff	?_timeDiff+1,??_main+1
  7023  00138A  EC7B  F051         	call	_timeGet	;wreg free
  7024  00138E  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7025  001394  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7026  00139A  0060  F67C  F095   	movff	_rVMedActuationTstamp,timeDiff@startT
  7027  0013A0  0060  F680  F096   	movff	_rVMedActuationTstamp+1,timeDiff@startT+1
  7028  0013A6  EC0D  F04D         	call	_timeDiff	;wreg free
  7029  0013AA  0060  F254  F09B   	movff	?_timeDiff,___wmul@multiplier
  7030  0013B0  0060  F258  F09C   	movff	?_timeDiff+1,___wmul@multiplier+1
  7031  0013B6  0E00               	movlw	0
  7032  0013B8  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7033  0013BA  0E0A               	movlw	10
  7034  0013BC  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7035  0013BE  ECA2  F04D         	call	___wmul	;wreg free
  7036  0013C2  0E04               	movlw	4
  7037  0013C4  0103               	movlb	3	; () banked
  7038  0013C6  6FA1               	movwf	(??_main+2)& (0+255),b
  7039  0013C8                     u22605:
  7040  0013C8  0100               	movlb	0	; () banked
  7041  0013CA  90D8               	bcf	status,0,c
  7042  0013CC  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7043  0013CE  339B               	rrcf	?___wmul& (0+255),f,b
  7044  0013D0  0103               	movlb	3	; () banked
  7045  0013D2  2FA1               	decfsz	(??_main+2)& (0+255),f,b
  7046  0013D4  D7F9               	goto	u22605
  7047  0013D6  D05A               	goto	L2
  7048  0013D8                     l20811:
  7049                           
  7050                           ; BSR set to: 1
  7051  0013D8  05D7               	decf	_pInspVSet& (0+255),w,b
  7052  0013DA  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7053  0013DC  A4D8               	btfss	status,2,c
  7054  0013DE  D060               	goto	l20815
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;main.c: 614:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          rVMedActuationTstamp) + ((5 * ((2 * timeDiff(rVMedActuationTstamp, rVLowActuationTstamp)
      +                          ) + timeDiff(rVLowActuationTstamp, timeGet()))) >> 4);
  7058  0013E0  0060  F2E8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  7059  0013E6  0060  F2EC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  7060  0013EC  0060  F67C  F097   	movff	_rVMedActuationTstamp,timeDiff@endT
  7061  0013F2  0060  F680  F098   	movff	_rVMedActuationTstamp+1,timeDiff@endT+1
  7062  0013F8  EC0D  F04D         	call	_timeDiff	;wreg free
  7063  0013FC  0060  F254  F39F   	movff	?_timeDiff,??_main
  7064  001402  0060  F258  F3A0   	movff	?_timeDiff+1,??_main+1
  7065  001408  0060  F2E0  F097   	movff	_rVLowActuationTstamp,timeDiff@endT
  7066  00140E  0060  F2E4  F098   	movff	_rVLowActuationTstamp+1,timeDiff@endT+1
  7067  001414  0060  F67C  F095   	movff	_rVMedActuationTstamp,timeDiff@startT
  7068  00141A  0060  F680  F096   	movff	_rVMedActuationTstamp+1,timeDiff@startT+1
  7069  001420  EC0D  F04D         	call	_timeDiff	;wreg free
  7070  001424  0060  F254  F3A1   	movff	?_timeDiff,??_main+2
  7071  00142A  0060  F258  F3A2   	movff	?_timeDiff+1,??_main+3
  7072  001430  90D8               	bcf	status,0,c
  7073  001432  0103               	movlb	3	; () banked
  7074  001434  37A1               	rlcf	(??_main+2)& (0+255),f,b
  7075  001436  37A2               	rlcf	(??_main+3)& (0+255),f,b
  7076  001438  EC7B  F051         	call	_timeGet	;wreg free
  7077  00143C  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7078  001442  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7079  001448  0060  F2E0  F095   	movff	_rVLowActuationTstamp,timeDiff@startT
  7080  00144E  0060  F2E4  F096   	movff	_rVLowActuationTstamp+1,timeDiff@startT+1
  7081  001454  EC0D  F04D         	call	_timeDiff	;wreg free
  7082  001458  5195               	movf	?_timeDiff& (0+255),w,b
  7083  00145A  0103               	movlb	3	; () banked
  7084  00145C  25A1               	addwf	(??_main+2)& (0+255),w,b
  7085  00145E  0100               	movlb	0	; () banked
  7086  001460  6F9B               	movwf	___wmul@multiplier& (0+255),b
  7087  001462  5196               	movf	(?_timeDiff+1)& (0+255),w,b
  7088  001464  0103               	movlb	3	; () banked
  7089  001466  21A2               	addwfc	(??_main+3)& (0+255),w,b
  7090  001468  0100               	movlb	0	; () banked
  7091  00146A  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  7092  00146C  0E00               	movlw	0
  7093  00146E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7094  001470  0E05               	movlw	5
  7095  001472  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7096  001474  ECA2  F04D         	call	___wmul	;wreg free
  7097  001478  0E04               	movlw	4
  7098  00147A  0103               	movlb	3	; () banked
  7099  00147C  6FA3               	movwf	(??_main+4)& (0+255),b
  7100  00147E                     u22625:
  7101  00147E  0100               	movlb	0	; () banked
  7102  001480  90D8               	bcf	status,0,c
  7103  001482  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7104  001484  339B               	rrcf	?___wmul& (0+255),f,b
  7105  001486  0103               	movlb	3	; () banked
  7106  001488  2FA3               	decfsz	(??_main+4)& (0+255),f,b
  7107  00148A  D7F9               	goto	u22625
  7108  00148C                     L2:
  7109  00148C  0100               	movlb	0	; () banked
  7110  00148E  519B               	movf	?___wmul& (0+255),w,b
  7111  001490  0103               	movlb	3	; () banked
  7112  001492  259F               	addwf	??_main& (0+255),w,b
  7113  001494  6FB7               	movwf	main@tmpUVal& (0+255),b
  7114  001496  0100               	movlb	0	; () banked
  7115  001498  519C               	movf	(?___wmul+1)& (0+255),w,b
  7116  00149A  0103               	movlb	3	; () banked
  7117  00149C  21A0               	addwfc	(??_main+1)& (0+255),w,b
  7118  00149E  6FB8               	movwf	(main@tmpUVal+1)& (0+255),b
  7119  0014A0                     l20815:
  7120                           
  7121                           ;main.c: 617:                             if ((tmpUVal > 50)&&(vValveActuation > 50)) {
  7122  0014A0  0103               	movlb	3	; () banked
  7123  0014A2  51B8               	movf	(main@tmpUVal+1)& (0+255),w,b
  7124  0014A4  E104               	bnz	u22630
  7125  0014A6  0E33               	movlw	51
  7126  0014A8  5DB7               	subwf	main@tmpUVal& (0+255),w,b
  7127  0014AA  A0D8               	btfss	status,0,c
  7128  0014AC  D061               	goto	l20821
  7129  0014AE                     u22630:
  7130                           
  7131                           ; BSR set to: 3
  7132  0014AE  0101               	movlb	1	; () banked
  7133  0014B0  BFA8               	btfsc	(_vValveActuation+1)& (0+255),7,b
  7134  0014B2  D05E               	goto	l20821
  7135  0014B4  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
  7136  0014B6  E104               	bnz	u22640
  7137  0014B8  0E33               	movlw	51
  7138  0014BA  5DA7               	subwf	_vValveActuation& (0+255),w,b
  7139  0014BC  A0D8               	btfss	status,0,c
  7140  0014BE  D058               	goto	l20821
  7141  0014C0                     u22640:
  7142                           
  7143                           ; BSR set to: 1
  7144                           ;main.c: 619:                                 effectiveFlowRateInv = (3 * effectiveFlowR
      +                          ateInv + ((((uint24_t) tmpUVal) << 8) / vValveActuation)) >> 2;
  7145  0014C0  0E02               	movlw	2
  7146  0014C2  0103               	movlb	3	; () banked
  7147  0014C4  6F9F               	movwf	??_main& (0+255),b
  7148  0014C6  0060  F744  F09B   	movff	_effectiveFlowRateInv,___wmul@multiplier
  7149  0014CC  0060  F748  F09C   	movff	_effectiveFlowRateInv+1,___wmul@multiplier+1
  7150  0014D2  0E00               	movlw	0
  7151  0014D4  0100               	movlb	0	; () banked
  7152  0014D6  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7153  0014D8  0E03               	movlw	3
  7154  0014DA  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7155  0014DC  ECA2  F04D         	call	___wmul	;wreg free
  7156  0014E0  0060  F26C  F3A0   	movff	?___wmul,??_main+1
  7157  0014E6  0060  F270  F3A1   	movff	?___wmul+1,??_main+2
  7158  0014EC  0103               	movlb	3	; () banked
  7159  0014EE  6BA2               	clrf	(??_main+3)& (0+255),b
  7160  0014F0  0060  FEDC  F3A3   	movff	main@tmpUVal,??_main+4
  7161  0014F6  0060  FEE0  F3A4   	movff	main@tmpUVal+1,??_main+5
  7162  0014FC  6BA5               	clrf	(??_main+6)& (0+255),b
  7163  0014FE  0060  FE90  F3A5   	movff	??_main+5,??_main+6
  7164  001504  0060  FE8C  F3A4   	movff	??_main+4,??_main+5
  7165  00150A  6BA3               	clrf	(??_main+4)& (0+255),b
  7166  00150C  0060  FE8C  F08B   	movff	??_main+4,___ltdiv@dividend
  7167  001512  0060  FE90  F08C   	movff	??_main+5,___ltdiv@dividend+1
  7168  001518  0060  FE94  F08D   	movff	??_main+6,___ltdiv@dividend+2
  7169  00151E  0060  F69C  F08E   	movff	_vValveActuation,___ltdiv@divisor
  7170  001524  0060  F6A0  F08F   	movff	_vValveActuation+1,___ltdiv@divisor+1
  7171  00152A  0100               	movlb	0	; () banked
  7172  00152C  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  7173  00152E  BF8F               	btfsc	(___ltdiv@divisor+1)& (0+255),7,b
  7174  001530  0790               	decf	(___ltdiv@divisor+2)& (0+255),f,b
  7175  001532  ECF6  F044         	call	___ltdiv	;wreg free
  7176  001536  518B               	movf	?___ltdiv& (0+255),w,b
  7177  001538  0103               	movlb	3	; () banked
  7178  00153A  25A0               	addwf	(??_main+1)& (0+255),w,b
  7179  00153C  6FA6               	movwf	(??_main+7)& (0+255),b
  7180  00153E  0100               	movlb	0	; () banked
  7181  001540  518C               	movf	(?___ltdiv+1)& (0+255),w,b
  7182  001542  0103               	movlb	3	; () banked
  7183  001544  21A1               	addwfc	(??_main+2)& (0+255),w,b
  7184  001546  6FA7               	movwf	(??_main+8)& (0+255),b
  7185  001548  0100               	movlb	0	; () banked
  7186  00154A  518D               	movf	(?___ltdiv+2)& (0+255),w,b
  7187  00154C  0103               	movlb	3	; () banked
  7188  00154E  21A2               	addwfc	(??_main+3)& (0+255),w,b
  7189  001550  6FA8               	movwf	(??_main+9)& (0+255),b
  7190  001552  299F               	incf	??_main& (0+255),w,b
  7191  001554  6FA9               	movwf	(??_main+10)& (0+255),b
  7192  001556  D004               	goto	u22650
  7193  001558                     u22655:
  7194  001558  90D8               	bcf	status,0,c
  7195  00155A  33A8               	rrcf	(??_main+9)& (0+255),f,b
  7196  00155C  33A7               	rrcf	(??_main+8)& (0+255),f,b
  7197  00155E  33A6               	rrcf	(??_main+7)& (0+255),f,b
  7198  001560                     u22650:
  7199  001560  2FA9               	decfsz	(??_main+10)& (0+255),f,b
  7200  001562  D7FA               	goto	u22655
  7201  001564  0060  FE98  F1D1   	movff	??_main+7,_effectiveFlowRateInv
  7202  00156A  0060  FE9C  F1D2   	movff	??_main+8,_effectiveFlowRateInv+1
  7203  001570                     l20821:
  7204                           
  7205                           ;main.c: 628:                             if (effectiveFlowRateInv > 2621) {
  7206  001570  0E3E               	movlw	62
  7207  001572  0101               	movlb	1	; () banked
  7208  001574  5DD1               	subwf	_effectiveFlowRateInv& (0+255),w,b
  7209  001576  0E0A               	movlw	10
  7210  001578  59D2               	subwfb	(_effectiveFlowRateInv+1)& (0+255),w,b
  7211  00157A  A0D8               	btfss	status,0,c
  7212  00157C  D004               	goto	l20825
  7213                           
  7214                           ; BSR set to: 1
  7215                           ;main.c: 629:                                 effectiveFlowRateInv = 2621;
  7216  00157E  0E0A               	movlw	10
  7217  001580  6FD2               	movwf	(_effectiveFlowRateInv+1)& (0+255),b
  7218  001582  0E3D               	movlw	61
  7219  001584  D009               	goto	L3
  7220  001586                     l20825:
  7221                           
  7222                           ; BSR set to: 1
  7223  001586  51D2               	movf	(_effectiveFlowRateInv+1)& (0+255),w,b
  7224  001588  E108               	bnz	l20829
  7225  00158A  0E83               	movlw	131
  7226  00158C  5DD1               	subwf	_effectiveFlowRateInv& (0+255),w,b
  7227  00158E  B0D8               	btfsc	status,0,c
  7228  001590  D004               	goto	l20829
  7229                           
  7230                           ; BSR set to: 1
  7231                           ;main.c: 631:                                 effectiveFlowRateInv = 131;
  7232  001592  0E00               	movlw	0
  7233  001594  6FD2               	movwf	(_effectiveFlowRateInv+1)& (0+255),b
  7234  001596  0E83               	movlw	131
  7235  001598                     L3:
  7236  001598  6FD1               	movwf	_effectiveFlowRateInv& (0+255),b
  7237  00159A                     l20829:
  7238                           
  7239                           ; BSR set to: 1
  7240                           ;main.c: 634:                             printf ("PI-END T %d - Pi %d Pc %d Vol %d PMax
      +                           %d VL %d VOS %d POS %d FR %d UV %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2
      +                          560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int1
      +                          6_t) ((0.045*4096+2)/5)*1))*((int24_t) pValveActuation))>>8)), vValveActuation, ((int16_
      +                          t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) intMaxP))>>8)), intMaxV, vInspOS
      +                          , ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInspOSScale))>>8)), e
      +                          ffectiveFlowRateInv, tmpUVal);
  7241  00159A  0E95               	movlw	low STR_15
  7242  00159C  6F46               	movwf	printf@fmt& (0+255),b
  7243  00159E  0EFA               	movlw	high STR_15
  7244  0015A0  6F47               	movwf	(printf@fmt+1)& (0+255),b
  7245  0015A2  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  7246  0015A8  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  7247  0015AE  EC7B  F051         	call	_timeGet	;wreg free
  7248  0015B2  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7249  0015B8  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7250  0015BE  EC0D  F04D         	call	_timeDiff	;wreg free
  7251  0015C2  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  7252  0015C8  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  7253  0015CE  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  7254  0015D4  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  7255  0015DA  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7256  0015DC  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7257  0015DE  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7258  0015E0  0E45               	movlw	69
  7259  0015E2  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7260  0015E4  0E00               	movlw	0
  7261  0015E6  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7262  0015E8  0E00               	movlw	0
  7263  0015EA  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7264  0015EC  ECC7  F049         	call	___tmul	;wreg free
  7265  0015F0  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7266  0015F6  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7267  0015FC  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7268  0015FE  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7269  001600  698D               	setf	(?___tmul+2)& (0+255),b
  7270  001602  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  7271  001608  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  7272  00160E  0060  F794  F08B   	movff	_pValveActuation,___tmul@multiplier
  7273  001614  0060  F798  F08C   	movff	_pValveActuation+1,___tmul@multiplier+1
  7274  00161A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7275  00161C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7276  00161E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7277  001620  0E45               	movlw	69
  7278  001622  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7279  001624  0E00               	movlw	0
  7280  001626  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7281  001628  0E00               	movlw	0
  7282  00162A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7283  00162C  ECC7  F049         	call	___tmul	;wreg free
  7284  001630  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7285  001636  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7286  00163C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7287  00163E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7288  001640  698D               	setf	(?___tmul+2)& (0+255),b
  7289  001642  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  7290  001648  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  7291  00164E  0060  F69C  F14E   	movff	_vValveActuation,?_printf+8
  7292  001654  0060  F6A0  F14F   	movff	_vValveActuation+1,?_printf+9
  7293  00165A  0060  F7CC  F08B   	movff	_intMaxP,___tmul@multiplier
  7294  001660  0060  F7D0  F08C   	movff	_intMaxP+1,___tmul@multiplier+1
  7295  001666  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7296  001668  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7297  00166A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7298  00166C  0E45               	movlw	69
  7299  00166E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7300  001670  0E00               	movlw	0
  7301  001672  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7302  001674  0E00               	movlw	0
  7303  001676  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7304  001678  ECC7  F049         	call	___tmul	;wreg free
  7305  00167C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7306  001682  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7307  001688  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7308  00168A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7309  00168C  698D               	setf	(?___tmul+2)& (0+255),b
  7310  00168E  0060  F22C  F150   	movff	?___tmul,?_printf+10
  7311  001694  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  7312  00169A  0060  F7C4  F152   	movff	_intMaxV,?_printf+12
  7313  0016A0  0060  F7C8  F153   	movff	_intMaxV+1,?_printf+13
  7314  0016A6  0060  F764  F154   	movff	_vInspOS,?_printf+14
  7315  0016AC  0060  F768  F155   	movff	_vInspOS+1,?_printf+15
  7316  0016B2  0060  FEF4  F08B   	movff	main@pInspOSScale,___tmul@multiplier
  7317  0016B8  0060  FEF8  F08C   	movff	main@pInspOSScale+1,___tmul@multiplier+1
  7318  0016BE  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7319  0016C0  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7320  0016C2  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7321  0016C4  0E45               	movlw	69
  7322  0016C6  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7323  0016C8  0E00               	movlw	0
  7324  0016CA  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7325  0016CC  0E00               	movlw	0
  7326  0016CE  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7327  0016D0  ECC7  F049         	call	___tmul	;wreg free
  7328  0016D4  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7329  0016DA  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7330  0016E0  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7331  0016E2  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7332  0016E4  698D               	setf	(?___tmul+2)& (0+255),b
  7333  0016E6  0060  F22C  F156   	movff	?___tmul,?_printf+16
  7334  0016EC  0060  F230  F157   	movff	?___tmul+1,?_printf+17
  7335  0016F2  0060  F744  F158   	movff	_effectiveFlowRateInv,?_printf+18
  7336  0016F8  0060  F748  F159   	movff	_effectiveFlowRateInv+1,?_printf+19
  7337  0016FE  0060  FEDC  F15A   	movff	main@tmpUVal,?_printf+20
  7338  001704  0060  FEE0  F15B   	movff	main@tmpUVal+1,?_printf+21
  7339  00170A  ECE9  F04E         	call	_printf	;wreg free
  7340                           
  7341                           ; BSR set to: 3
  7342                           ;main.c: 639:                     } else {
  7343                           
  7344                           ;main.c: 638:                         }
  7345  00170E  D2D1               	goto	l20947
  7346  001710                     l20831:
  7347                           
  7348                           ; BSR set to: 1
  7349                           ;main.c: 641:                         if (sv2DelayCheck) {
  7350  001710  51C5               	movf	_sv2DelayCheck& (0+255),w,b
  7351  001712  B4D8               	btfsc	status,2,c
  7352  001714  D049               	goto	l20849
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;main.c: 642:                             aCaptGetResult(VolPSensor, &tmpVal);
  7356  001716  0EBF               	movlw	low main@tmpVal
  7357  001718  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7358  00171A  0E03               	movlw	high main@tmpVal
  7359  00171C  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7360  00171E  0E01               	movlw	1
  7361  001720  EC04  F032         	call	_aCaptGetResult
  7362                           
  7363                           ;main.c: 643:                             if (tmpVal < (20 << 1)) {
  7364  001724  0103               	movlb	3	; () banked
  7365  001726  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7366  001728  D006               	goto	u22690
  7367  00172A  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  7368  00172C  E13D               	bnz	l20849
  7369  00172E  0E28               	movlw	40
  7370  001730  5DBF               	subwf	main@tmpVal& (0+255),w,b
  7371  001732  B0D8               	btfsc	status,0,c
  7372  001734  D039               	goto	l20849
  7373  001736                     u22690:
  7374                           
  7375                           ; BSR set to: 3
  7376                           ;main.c: 644:                                 sv2DelayCheck = 0;
  7377  001736  0E00               	movlw	0
  7378  001738  0101               	movlb	1	; () banked
  7379  00173A  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;main.c: 646:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  7383  00173C  0060  F65C  F095   	movff	_rValveDelayStart,timeDiff@startT
  7384  001742  0060  F660  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  7385  001748  EC7B  F051         	call	_timeGet	;wreg free
  7386  00174C  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7387  001752  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7388  001758  EC0D  F04D         	call	_timeDiff	;wreg free
  7389  00175C  0060  F254  F195   	movff	?_timeDiff,_rTimeTmp
  7390  001762  0060  F258  F196   	movff	?_timeDiff+1,_rTimeTmp+1
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;main.c: 647:                                 if (rTimeTmp < ((time_t) 150*1)) {
  7394  001768  0101               	movlb	1	; () banked
  7395  00176A  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  7396  00176C  E11A               	bnz	l20847
  7397  00176E  0E96               	movlw	150
  7398  001770  5D95               	subwf	_rTimeTmp& (0+255),w,b
  7399  001772  B0D8               	btfsc	status,0,c
  7400  001774  D016               	goto	l20847
  7401                           
  7402                           ; BSR set to: 1
  7403                           ;main.c: 649:                                     rSV2ValveCRT = (rSV2ValveCRT + rTimeTm
      +                          p) >> 1;
  7404  001776  5195               	movf	_rTimeTmp& (0+255),w,b
  7405  001778  259B               	addwf	_rSV2ValveCRT& (0+255),w,b
  7406  00177A  0103               	movlb	3	; () banked
  7407  00177C  6F9F               	movwf	??_main& (0+255),b
  7408  00177E  0101               	movlb	1	; () banked
  7409  001780  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  7410  001782  219C               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  7411  001784  0103               	movlb	3	; () banked
  7412  001786  6FA0               	movwf	(??_main+1)& (0+255),b
  7413  001788  90D8               	bcf	status,0,c
  7414  00178A  31A0               	rrcf	(??_main+1)& (0+255),w,b
  7415  00178C  6FA1               	movwf	(??_main+2)& (0+255),b
  7416  00178E  319F               	rrcf	??_main& (0+255),w,b
  7417  001790  0101               	movlb	1	; () banked
  7418  001792  6F9B               	movwf	_rSV2ValveCRT& (0+255),b
  7419  001794  0060  FE84  F19C   	movff	??_main+2,_rSV2ValveCRT+1
  7420                           
  7421                           ; BSR set to: 1
  7422                           ;main.c: 651:                                     MonitorErrorClr(MON_SV2E);
  7423  00179A  0E08               	movlw	8
  7424  00179C  EC8D  F051         	call	_MonitorErrorClr
  7425                           
  7426                           ;main.c: 652:                                 } else {
  7427  0017A0  D003               	goto	l20849
  7428  0017A2                     l20847:
  7429                           
  7430                           ; BSR set to: 1
  7431                           ;main.c: 654:                                     MonitorErrorSet(MON_SV2E);
  7432  0017A2  0E08               	movlw	8
  7433  0017A4  EC84  F051         	call	_MonitorErrorSet
  7434  0017A8                     l20849:
  7435                           
  7436                           ;main.c: 659:                         aCaptGetResult(MainPSensor, &pInst);
  7437  0017A8  0EEF               	movlw	low _pInst
  7438  0017AA  0101               	movlb	1	; () banked
  7439  0017AC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7440  0017AE  0E01               	movlw	high _pInst
  7441  0017B0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7442  0017B2  0E00               	movlw	0
  7443  0017B4  EC04  F032         	call	_aCaptGetResult
  7444                           
  7445                           ;main.c: 660:                         MonitorErrorClr(MON_IPE);
  7446  0017B8  0E20               	movlw	32
  7447  0017BA  EC8D  F051         	call	_MonitorErrorClr
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;main.c: 661:                         if ((LATAbits.LATA2|LATCbits.LATC3) && (timeElapse
      +                          d(rValveActuationTstamp, ((time_t) 15*1)) || (pInst > intMaxP))) {
  7451  0017BE  0E00               	movlw	0
  7452  0017C0  B4BA               	btfsc	186,2,c	;volatile
  7453  0017C2  0E01               	movlw	1
  7454  0017C4  B6BC               	btfsc	188,3,c	;volatile
  7455  0017C6  0E01               	movlw	1
  7456  0017C8  A0E8               	btfss	wreg,0,c
  7457  0017CA  D004               	goto	u22710
  7458  0017CC  0103               	movlb	3	; () banked
  7459  0017CE  6B9F               	clrf	??_main& (0+255),b
  7460  0017D0  2B9F               	incf	??_main& (0+255),f,b
  7461  0017D2  D002               	goto	u22718
  7462  0017D4                     u22710:
  7463  0017D4  0103               	movlb	3	; () banked
  7464  0017D6  6B9F               	clrf	??_main& (0+255),b
  7465  0017D8                     u22718:
  7466  0017D8  519F               	movf	??_main& (0+255),w,b
  7467  0017DA  B4D8               	btfsc	status,2,c
  7468  0017DC  D06C               	goto	l20865
  7469                           
  7470                           ; BSR set to: 3
  7471  0017DE  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7472  0017E4  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7473  0017EA  0E00               	movlw	0
  7474  0017EC  0100               	movlb	0	; () banked
  7475  0017EE  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  7476  0017F0  0E0F               	movlw	15
  7477  0017F2  6F95               	movwf	timeElapsed@duration& (0+255),b
  7478  0017F4  EC8A  F04D         	call	_timeElapsed	;wreg free
  7479  0017F8  0900               	iorlw	0
  7480  0017FA  A4D8               	btfss	status,2,c
  7481  0017FC  D00E               	goto	u22740
  7482                           
  7483                           ; BSR set to: 0
  7484  0017FE  0101               	movlb	1	; () banked
  7485  001800  51EF               	movf	_pInst& (0+255),w,b
  7486  001802  5DF3               	subwf	_intMaxP& (0+255),w,b
  7487  001804  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  7488  001806  0A80               	xorlw	128
  7489  001808  0103               	movlb	3	; () banked
  7490  00180A  6F9F               	movwf	??_main& (0+255),b
  7491  00180C  0101               	movlb	1	; () banked
  7492  00180E  51F0               	movf	(_pInst+1)& (0+255),w,b
  7493  001810  0A80               	xorlw	128
  7494  001812  0103               	movlb	3	; () banked
  7495  001814  599F               	subwfb	??_main& (0+255),w,b
  7496  001816  B0D8               	btfsc	status,0,c
  7497  001818  D04E               	goto	l20865
  7498  00181A                     u22740:
  7499                           
  7500                           ;main.c: 662:                             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  7501  00181A  94BA               	bcf	186,2,c	;volatile
  7502  00181C  96BC               	bcf	188,3,c	;volatile
  7503                           
  7504                           ;main.c: 663:                             rValveActuationTstamp = timeGet();
  7505  00181E  EC7B  F051         	call	_timeGet	;wreg free
  7506  001822  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  7507  001828  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;main.c: 664:                             aCaptGetResult(MainPSensor, &pInst);
  7511  00182E  0EEF               	movlw	low _pInst
  7512  001830  0101               	movlb	1	; () banked
  7513  001832  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7514  001834  0E01               	movlw	high _pInst
  7515  001836  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7516  001838  0E00               	movlw	0
  7517  00183A  EC04  F032         	call	_aCaptGetResult
  7518                           
  7519                           ;main.c: 665:                             printf ("PI-VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((in
      +                          t24_t) pInst))>>8)));
  7520  00183E  0EE0               	movlw	low STR_16
  7521  001840  0101               	movlb	1	; () banked
  7522  001842  6F46               	movwf	printf@fmt& (0+255),b
  7523  001844  0EFC               	movlw	high STR_16
  7524  001846  6F47               	movwf	(printf@fmt+1)& (0+255),b
  7525  001848  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  7526  00184E  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  7527  001854  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  7528  00185A  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  7529  001860  EC0D  F04D         	call	_timeDiff	;wreg free
  7530  001864  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  7531  00186A  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  7532  001870  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  7533  001876  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  7534  00187C  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7535  00187E  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7536  001880  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7537  001882  0E45               	movlw	69
  7538  001884  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7539  001886  0E00               	movlw	0
  7540  001888  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7541  00188A  0E00               	movlw	0
  7542  00188C  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7543  00188E  ECC7  F049         	call	___tmul	;wreg free
  7544  001892  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7545  001898  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7546  00189E  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7547  0018A0  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7548  0018A2  698D               	setf	(?___tmul+2)& (0+255),b
  7549  0018A4  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  7550  0018AA  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  7551  0018B0  ECE9  F04E         	call	_printf	;wreg free
  7552                           
  7553                           ;main.c: 666:                         } else {
  7554  0018B4  D1FE               	goto	l20947
  7555  0018B6                     l20865:
  7556                           
  7557                           ; BSR set to: 3
  7558                           ;main.c: 667:                             if (OSCheck) {
  7559  0018B6  0101               	movlb	1	; () banked
  7560  0018B8  51C3               	movf	_OSCheck& (0+255),w,b
  7561  0018BA  B4D8               	btfsc	status,2,c
  7562  0018BC  D038               	goto	l20881
  7563                           
  7564                           ; BSR set to: 1
  7565                           ;main.c: 669:                                 aCaptGetResult(Flt1PSensor, &pAvgUShort);
  7566  0018BE  0EEB               	movlw	low _pAvgUShort
  7567  0018C0  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7568  0018C2  0E01               	movlw	high _pAvgUShort
  7569  0018C4  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7570  0018C6  0E04               	movlw	4
  7571  0018C8  EC04  F032         	call	_aCaptGetResult
  7572                           
  7573                           ;main.c: 670:                                 pPlatInsp = pAvgUShort;
  7574  0018CC  C1EB  F1E3         	movff	_pAvgUShort,_pPlatInsp
  7575  0018D0  C1EC  F1E4         	movff	_pAvgUShort+1,_pPlatInsp+1
  7576                           
  7577                           ;main.c: 671:                                 if (pPlatMax < pAvgUShort) {
  7578  0018D4  0101               	movlb	1	; () banked
  7579  0018D6  51EB               	movf	_pAvgUShort& (0+255),w,b
  7580  0018D8  5DAB               	subwf	_pPlatMax& (0+255),w,b
  7581  0018DA  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  7582  0018DC  0A80               	xorlw	128
  7583  0018DE  0103               	movlb	3	; () banked
  7584  0018E0  6F9F               	movwf	??_main& (0+255),b
  7585  0018E2  0101               	movlb	1	; () banked
  7586  0018E4  51EC               	movf	(_pAvgUShort+1)& (0+255),w,b
  7587  0018E6  0A80               	xorlw	128
  7588  0018E8  0103               	movlb	3	; () banked
  7589  0018EA  599F               	subwfb	??_main& (0+255),w,b
  7590  0018EC  B0D8               	btfsc	status,0,c
  7591  0018EE  D004               	goto	l20875
  7592                           
  7593                           ; BSR set to: 3
  7594                           ;main.c: 672:                                     pPlatMax = pAvgUShort;
  7595  0018F0  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  7596  0018F4  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  7597  0018F8                     l20875:
  7598                           
  7599                           ; BSR set to: 3
  7600                           ;main.c: 675:                                 if (timeElapsed(rValveActuationTstamp, ((t
      +                          ime_t) 150*1) + rSV2ValveCRT)) {
  7601  0018F8  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7602  0018FE  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7603  001904  0E96               	movlw	150
  7604  001906  0101               	movlb	1	; () banked
  7605  001908  259B               	addwf	_rSV2ValveCRT& (0+255),w,b
  7606  00190A  0100               	movlb	0	; () banked
  7607  00190C  6F95               	movwf	timeElapsed@duration& (0+255),b
  7608  00190E  0E00               	movlw	0
  7609  001910  0101               	movlb	1	; () banked
  7610  001912  219C               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  7611  001914  0100               	movlb	0	; () banked
  7612  001916  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  7613  001918  EC8A  F04D         	call	_timeElapsed	;wreg free
  7614  00191C  0900               	iorlw	0
  7615  00191E  B4D8               	btfsc	status,2,c
  7616  001920  D1C8               	goto	l20947
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;main.c: 676:                                     OSCheck = 0;
  7620  001922  0E00               	movlw	0
  7621  001924  0101               	movlb	1	; () banked
  7622  001926  6FC3               	movwf	_OSCheck& (0+255),b
  7623                           
  7624                           ; BSR set to: 1
  7625                           ;main.c: 677:                                     inspOSMeasure();
  7626  001928  ECFE  F026         	call	_inspOSMeasure	;wreg free
  7627  00192C  D1C2               	goto	l20947
  7628  00192E                     l20881:
  7629                           
  7630                           ; BSR set to: 1
  7631                           ;main.c: 680:                                 if (QuantaCheck) {
  7632  00192E  51C2               	movf	_QuantaCheck& (0+255),w,b
  7633  001930  B4D8               	btfsc	status,2,c
  7634  001932  D019               	goto	l20889
  7635                           
  7636                           ; BSR set to: 1
  7637                           ;main.c: 681:                                     aCaptGetResult(Flt1PSensor, &pAvgUShor
      +                          t);
  7638  001934  0EEB               	movlw	low _pAvgUShort
  7639  001936  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7640  001938  0E01               	movlw	high _pAvgUShort
  7641  00193A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7642  00193C  0E04               	movlw	4
  7643  00193E  EC04  F032         	call	_aCaptGetResult
  7644                           
  7645                           ;main.c: 682:                                     if (pPlatMax < pAvgUShort) {
  7646  001942  0101               	movlb	1	; () banked
  7647  001944  51EB               	movf	_pAvgUShort& (0+255),w,b
  7648  001946  5DAB               	subwf	_pPlatMax& (0+255),w,b
  7649  001948  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  7650  00194A  0A80               	xorlw	128
  7651  00194C  0103               	movlb	3	; () banked
  7652  00194E  6F9F               	movwf	??_main& (0+255),b
  7653  001950  0101               	movlb	1	; () banked
  7654  001952  51EC               	movf	(_pAvgUShort+1)& (0+255),w,b
  7655  001954  0A80               	xorlw	128
  7656  001956  0103               	movlb	3	; () banked
  7657  001958  599F               	subwfb	??_main& (0+255),w,b
  7658  00195A  B0D8               	btfsc	status,0,c
  7659  00195C  D004               	goto	l20889
  7660                           
  7661                           ; BSR set to: 3
  7662                           ;main.c: 683:                                         pPlatMax = pAvgUShort;
  7663  00195E  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  7664  001962  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  7665  001966                     l20889:
  7666                           
  7667                           ;main.c: 686:                                 if (timeElapsed(rValveActuationTstamp, rSV
      +                          2ValveCRT << 2)) {
  7668  001966  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7669  00196C  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7670  001972  0060  F66C  F39F   	movff	_rSV2ValveCRT,??_main
  7671  001978  0060  F670  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  7672  00197E  0103               	movlb	3	; () banked
  7673  001980  90D8               	bcf	status,0,c
  7674  001982  379F               	rlcf	??_main& (0+255),f,b
  7675  001984  37A0               	rlcf	(??_main+1)& (0+255),f,b
  7676  001986  90D8               	bcf	status,0,c
  7677  001988  379F               	rlcf	??_main& (0+255),f,b
  7678  00198A  37A0               	rlcf	(??_main+1)& (0+255),f,b
  7679  00198C  0060  FE7C  F095   	movff	??_main,timeElapsed@duration
  7680  001992  0060  FE80  F096   	movff	??_main+1,timeElapsed@duration+1
  7681  001998  EC8A  F04D         	call	_timeElapsed	;wreg free
  7682  00199C  0900               	iorlw	0
  7683  00199E  B4D8               	btfsc	status,2,c
  7684  0019A0  D188               	goto	l20947
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;main.c: 687:                                     if (QuantaCheck) {
  7688  0019A2  0101               	movlb	1	; () banked
  7689  0019A4  51C2               	movf	_QuantaCheck& (0+255),w,b
  7690  0019A6  B4D8               	btfsc	status,2,c
  7691  0019A8  D085               	goto	l20919
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;main.c: 688:                                         QuantaCheck = 0;
  7695  0019AA  0E00               	movlw	0
  7696  0019AC  6FC2               	movwf	_QuantaCheck& (0+255),b
  7697                           
  7698                           ; BSR set to: 1
  7699                           ;main.c: 689:                                         tmpVal = vMeasureGet() - vValveAct
      +                          uation;
  7700  0019AE  EC7F  F047         	call	_vMeasureGet	;wreg free
  7701  0019B2  0101               	movlb	1	; () banked
  7702  0019B4  51A7               	movf	_vValveActuation& (0+255),w,b
  7703  0019B6  0100               	movlb	0	; () banked
  7704  0019B8  5DA4               	subwf	?_vMeasureGet& (0+255),w,b
  7705  0019BA  0103               	movlb	3	; () banked
  7706  0019BC  6FBF               	movwf	main@tmpVal& (0+255),b
  7707  0019BE  0101               	movlb	1	; () banked
  7708  0019C0  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
  7709  0019C2  0100               	movlb	0	; () banked
  7710  0019C4  59A5               	subwfb	(?_vMeasureGet+1)& (0+255),w,b
  7711  0019C6  0103               	movlb	3	; () banked
  7712  0019C8  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7713                           
  7714                           ; BSR set to: 3
  7715                           ;main.c: 690:                                         if (tmpVal > 90) {
  7716  0019CA  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7717  0019CC  D00A               	goto	l20901
  7718  0019CE  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  7719  0019D0  E104               	bnz	u22820
  7720  0019D2  0E5B               	movlw	91
  7721  0019D4  5DBF               	subwf	main@tmpVal& (0+255),w,b
  7722  0019D6  A0D8               	btfss	status,0,c
  7723  0019D8  D004               	goto	l20901
  7724  0019DA                     u22820:
  7725                           
  7726                           ; BSR set to: 3
  7727                           ;main.c: 691:                                             tmpVal = 90;
  7728  0019DA  0E00               	movlw	0
  7729  0019DC  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7730  0019DE  0E5A               	movlw	90
  7731  0019E0  6FBF               	movwf	main@tmpVal& (0+255),b
  7732  0019E2                     l20901:
  7733                           
  7734                           ; BSR set to: 3
  7735                           ;main.c: 693:                                         vQuanta = (3 * tmpVal + vQuanta) /
      +                           4;
  7736  0019E2  0060  FEFC  F09B   	movff	main@tmpVal,___wmul@multiplier
  7737  0019E8  0060  FF00  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  7738  0019EE  0E00               	movlw	0
  7739  0019F0  0100               	movlb	0	; () banked
  7740  0019F2  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7741  0019F4  0E03               	movlw	3
  7742  0019F6  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7743  0019F8  ECA2  F04D         	call	___wmul	;wreg free
  7744  0019FC  0101               	movlb	1	; () banked
  7745  0019FE  51A5               	movf	_vQuanta& (0+255),w,b
  7746  001A00  0100               	movlb	0	; () banked
  7747  001A02  259B               	addwf	?___wmul& (0+255),w,b
  7748  001A04  6FA1               	movwf	___awdiv@dividend& (0+255),b
  7749  001A06  0101               	movlb	1	; () banked
  7750  001A08  51A6               	movf	(_vQuanta+1)& (0+255),w,b
  7751  001A0A  0100               	movlb	0	; () banked
  7752  001A0C  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  7753  001A0E  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  7754  001A10  0E00               	movlw	0
  7755  001A12  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  7756  001A14  0E04               	movlw	4
  7757  001A16  6FA3               	movwf	___awdiv@divisor& (0+255),b
  7758  001A18  ECF9  F042         	call	___awdiv	;wreg free
  7759  001A1C  0060  F284  F1A5   	movff	?___awdiv,_vQuanta
  7760  001A22  0060  F288  F1A6   	movff	?___awdiv+1,_vQuanta+1
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;main.c: 694:                                         tmpVal = (pPlatMax - pValveActuati
      +                          on);
  7764  001A28  0101               	movlb	1	; () banked
  7765  001A2A  51E5               	movf	_pValveActuation& (0+255),w,b
  7766  001A2C  5DAB               	subwf	_pPlatMax& (0+255),w,b
  7767  001A2E  0103               	movlb	3	; () banked
  7768  001A30  6FBF               	movwf	main@tmpVal& (0+255),b
  7769  001A32  0101               	movlb	1	; () banked
  7770  001A34  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  7771  001A36  59AC               	subwfb	(_pPlatMax+1)& (0+255),w,b
  7772  001A38  0103               	movlb	3	; () banked
  7773  001A3A  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7774                           
  7775                           ; BSR set to: 3
  7776                           ;main.c: 695:                                         if (tmpVal > ((int16_t) ((0.045*40
      +                          96+2)/5)*8)) {
  7777  001A3C  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7778  001A3E  D00A               	goto	l20909
  7779  001A40  0E29               	movlw	41
  7780  001A42  5DBF               	subwf	main@tmpVal& (0+255),w,b
  7781  001A44  0E01               	movlw	1
  7782  001A46  59C0               	subwfb	(main@tmpVal+1)& (0+255),w,b
  7783  001A48  A0D8               	btfss	status,0,c
  7784  001A4A  D004               	goto	l20909
  7785                           
  7786                           ; BSR set to: 3
  7787                           ;main.c: 696:                                             tmpVal = ((int16_t) ((0.045*40
      +                          96+2)/5)*8);
  7788  001A4C  0E01               	movlw	1
  7789  001A4E  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7790  001A50  0E28               	movlw	40
  7791  001A52  6FBF               	movwf	main@tmpVal& (0+255),b
  7792  001A54                     l20909:
  7793                           
  7794                           ; BSR set to: 3
  7795                           ;main.c: 698:                                         pQuantaInsp = (3 * tmpVal + pQuant
      +                          aInsp) / 4;
  7796  001A54  0060  FEFC  F09B   	movff	main@tmpVal,___wmul@multiplier
  7797  001A5A  0060  FF00  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  7798  001A60  0E00               	movlw	0
  7799  001A62  0100               	movlb	0	; () banked
  7800  001A64  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7801  001A66  0E03               	movlw	3
  7802  001A68  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7803  001A6A  ECA2  F04D         	call	___wmul	;wreg free
  7804  001A6E  0101               	movlb	1	; () banked
  7805  001A70  51D5               	movf	_pQuantaInsp& (0+255),w,b
  7806  001A72  0100               	movlb	0	; () banked
  7807  001A74  259B               	addwf	?___wmul& (0+255),w,b
  7808  001A76  6FA1               	movwf	___awdiv@dividend& (0+255),b
  7809  001A78  0101               	movlb	1	; () banked
  7810  001A7A  51D6               	movf	(_pQuantaInsp+1)& (0+255),w,b
  7811  001A7C  0100               	movlb	0	; () banked
  7812  001A7E  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  7813  001A80  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  7814  001A82  0E00               	movlw	0
  7815  001A84  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  7816  001A86  0E04               	movlw	4
  7817  001A88  6FA3               	movwf	___awdiv@divisor& (0+255),b
  7818  001A8A  ECF9  F042         	call	___awdiv	;wreg free
  7819  001A8E  0060  F284  F1D5   	movff	?___awdiv,_pQuantaInsp
  7820  001A94  0060  F288  F1D6   	movff	?___awdiv+1,_pQuantaInsp+1
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;main.c: 699:                                         if (vQuanta < 0) {
  7824  001A9A  0101               	movlb	1	; () banked
  7825  001A9C  AFA6               	btfss	(_vQuanta+1)& (0+255),7,b
  7826  001A9E  D004               	goto	l20915
  7827                           
  7828                           ; BSR set to: 1
  7829                           ;main.c: 700:                                             vQuanta = 0;
  7830  001AA0  0E00               	movlw	0
  7831  001AA2  6FA6               	movwf	(_vQuanta+1)& (0+255),b
  7832  001AA4  0E00               	movlw	0
  7833  001AA6  6FA5               	movwf	_vQuanta& (0+255),b
  7834  001AA8                     l20915:
  7835                           
  7836                           ; BSR set to: 1
  7837                           ;main.c: 702:                                         if (pQuantaInsp < 0) {
  7838  001AA8  AFD6               	btfss	(_pQuantaInsp+1)& (0+255),7,b
  7839  001AAA  D004               	goto	l20919
  7840                           
  7841                           ; BSR set to: 1
  7842                           ;main.c: 703:                                             pQuantaInsp = 0;
  7843  001AAC  0E00               	movlw	0
  7844  001AAE  6FD6               	movwf	(_pQuantaInsp+1)& (0+255),b
  7845  001AB0  0E00               	movlw	0
  7846  001AB2  6FD5               	movwf	_pQuantaInsp& (0+255),b
  7847  001AB4                     l20919:
  7848                           
  7849                           ; BSR set to: 1
  7850                           ;main.c: 706:                                     pAdj = pInst;
  7851  001AB4  C1EF  F1A3         	movff	_pInst,_pAdj
  7852  001AB8  C1F0  F1A4         	movff	_pInst+1,_pAdj+1
  7853                           
  7854                           ; BSR set to: 1
  7855                           ;main.c: 707:                                     vAdj = vMeasureGet();
  7856  001ABC  EC7F  F047         	call	_vMeasureGet	;wreg free
  7857  001AC0  0060  F290  F23E   	movff	?_vMeasureGet,_vAdj
  7858  001AC6  0060  F294  F23F   	movff	?_vMeasureGet+1,_vAdj+1
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;main.c: 709:                                     vValveActuation = vAdj;
  7862  001ACC  C23E  F1A7         	movff	_vAdj,_vValveActuation
  7863  001AD0  C23F  F1A8         	movff	_vAdj+1,_vValveActuation+1
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;main.c: 710:                                     pValveActuation = pAdj;
  7867  001AD4  C1A3  F1E5         	movff	_pAdj,_pValveActuation
  7868  001AD8  C1A4  F1E6         	movff	_pAdj+1,_pValveActuation+1
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;main.c: 714:                                     pAdj = pAdj + (pQuantaInsp >> 1);
  7872  001ADC  0101               	movlb	1	; () banked
  7873  001ADE  35D6               	rlcf	(_pQuantaInsp+1)& (0+255),w,b
  7874  001AE0  31D6               	rrcf	(_pQuantaInsp+1)& (0+255),w,b
  7875  001AE2  0103               	movlb	3	; () banked
  7876  001AE4  6FA0               	movwf	(??_main+1)& (0+255),b
  7877  001AE6  0101               	movlb	1	; () banked
  7878  001AE8  31D5               	rrcf	_pQuantaInsp& (0+255),w,b
  7879  001AEA  0103               	movlb	3	; () banked
  7880  001AEC  6F9F               	movwf	??_main& (0+255),b
  7881  001AEE  0101               	movlb	1	; () banked
  7882  001AF0  51A3               	movf	_pAdj& (0+255),w,b
  7883  001AF2  0103               	movlb	3	; () banked
  7884  001AF4  259F               	addwf	??_main& (0+255),w,b
  7885  001AF6  0101               	movlb	1	; () banked
  7886  001AF8  6FA3               	movwf	_pAdj& (0+255),b
  7887  001AFA  51A4               	movf	(_pAdj+1)& (0+255),w,b
  7888  001AFC  0103               	movlb	3	; () banked
  7889  001AFE  21A0               	addwfc	(??_main+1)& (0+255),w,b
  7890  001B00  0101               	movlb	1	; () banked
  7891  001B02  6FA4               	movwf	(_pAdj+1)& (0+255),b
  7892                           
  7893                           ; BSR set to: 1
  7894                           ;main.c: 715:                                     vAdj = vAdj + (vQuanta >> 1);
  7895  001B04  35A6               	rlcf	(_vQuanta+1)& (0+255),w,b
  7896  001B06  31A6               	rrcf	(_vQuanta+1)& (0+255),w,b
  7897  001B08  0103               	movlb	3	; () banked
  7898  001B0A  6FA0               	movwf	(??_main+1)& (0+255),b
  7899  001B0C  0101               	movlb	1	; () banked
  7900  001B0E  31A5               	rrcf	_vQuanta& (0+255),w,b
  7901  001B10  0103               	movlb	3	; () banked
  7902  001B12  6F9F               	movwf	??_main& (0+255),b
  7903  001B14  0102               	movlb	2	; () banked
  7904  001B16  513E               	movf	_vAdj& (0+255),w,b
  7905  001B18  0103               	movlb	3	; () banked
  7906  001B1A  259F               	addwf	??_main& (0+255),w,b
  7907  001B1C  0102               	movlb	2	; () banked
  7908  001B1E  6F3E               	movwf	_vAdj& (0+255),b
  7909  001B20  513F               	movf	(_vAdj+1)& (0+255),w,b
  7910  001B22  0103               	movlb	3	; () banked
  7911  001B24  21A0               	addwfc	(??_main+1)& (0+255),w,b
  7912  001B26  0102               	movlb	2	; () banked
  7913  001B28  6F3F               	movwf	(_vAdj+1)& (0+255),b
  7914                           
  7915                           ; BSR set to: 2
  7916                           ;main.c: 719:                                     if (((pInst + pQuantaInsp) < intMaxP) 
      +                          &&
  7917  001B2A  0101               	movlb	1	; () banked
  7918  001B2C  51D5               	movf	_pQuantaInsp& (0+255),w,b
  7919  001B2E  25EF               	addwf	_pInst& (0+255),w,b
  7920  001B30  0103               	movlb	3	; () banked
  7921  001B32  6F9F               	movwf	??_main& (0+255),b
  7922  001B34  0101               	movlb	1	; () banked
  7923  001B36  51D6               	movf	(_pQuantaInsp+1)& (0+255),w,b
  7924  001B38  21F0               	addwfc	(_pInst+1)& (0+255),w,b
  7925  001B3A  0103               	movlb	3	; () banked
  7926  001B3C  6FA0               	movwf	(??_main+1)& (0+255),b
  7927  001B3E  0101               	movlb	1	; () banked
  7928  001B40  51F3               	movf	_intMaxP& (0+255),w,b
  7929  001B42  0103               	movlb	3	; () banked
  7930  001B44  5D9F               	subwf	??_main& (0+255),w,b
  7931  001B46  51A0               	movf	(??_main+1)& (0+255),w,b
  7932  001B48  0A80               	xorlw	128
  7933  001B4A  6FA1               	movwf	(??_main+2)& (0+255),b
  7934  001B4C  0101               	movlb	1	; () banked
  7935  001B4E  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  7936  001B50  0A80               	xorlw	128
  7937  001B52  0103               	movlb	3	; () banked
  7938  001B54  59A1               	subwfb	(??_main+2)& (0+255),w,b
  7939  001B56  B0D8               	btfsc	status,0,c
  7940  001B58  D0AC               	goto	l20947
  7941                           
  7942                           ; BSR set to: 3
  7943  001B5A  0EB6               	movlw	182
  7944  001B5C  6F9F               	movwf	??_main& (0+255),b
  7945  001B5E  0EFF               	movlw	255
  7946  001B60  6FA0               	movwf	(??_main+1)& (0+255),b
  7947  001B62  0060  F78C  F3A1   	movff	_pPlatInsp,??_main+2
  7948  001B68  0060  F790  F3A2   	movff	_pPlatInsp+1,??_main+3
  7949  001B6E  519F               	movf	??_main& (0+255),w,b
  7950  001B70  27A1               	addwf	(??_main+2)& (0+255),f,b
  7951  001B72  51A0               	movf	(??_main+1)& (0+255),w,b
  7952  001B74  23A2               	addwfc	(??_main+3)& (0+255),f,b
  7953  001B76  51A1               	movf	(??_main+2)& (0+255),w,b
  7954  001B78  0101               	movlb	1	; () banked
  7955  001B7A  5DA3               	subwf	_pAdj& (0+255),w,b
  7956  001B7C  51A4               	movf	(_pAdj+1)& (0+255),w,b
  7957  001B7E  0A80               	xorlw	128
  7958  001B80  0103               	movlb	3	; () banked
  7959  001B82  6FA3               	movwf	(??_main+4)& (0+255),b
  7960  001B84  51A2               	movf	(??_main+3)& (0+255),w,b
  7961  001B86  0A80               	xorlw	128
  7962  001B88  59A3               	subwfb	(??_main+4)& (0+255),w,b
  7963  001B8A  B0D8               	btfsc	status,0,c
  7964  001B8C  D092               	goto	l20947
  7965                           
  7966                           ; BSR set to: 3
  7967  001B8E  0101               	movlb	1	; () banked
  7968  001B90  05CA               	decf	_intVentMode& (0+255),w,b
  7969  001B92  B4D8               	btfsc	status,2,c
  7970  001B94  D01B               	goto	u22890
  7971                           
  7972                           ; BSR set to: 1
  7973  001B96  0EB6               	movlw	182
  7974  001B98  0103               	movlb	3	; () banked
  7975  001B9A  6F9F               	movwf	??_main& (0+255),b
  7976  001B9C  0EFF               	movlw	255
  7977  001B9E  6FA0               	movwf	(??_main+1)& (0+255),b
  7978  001BA0  0060  F6CC  F3A1   	movff	_intIP,??_main+2
  7979  001BA6  0060  F6D0  F3A2   	movff	_intIP+1,??_main+3
  7980  001BAC  519F               	movf	??_main& (0+255),w,b
  7981  001BAE  27A1               	addwf	(??_main+2)& (0+255),f,b
  7982  001BB0  51A0               	movf	(??_main+1)& (0+255),w,b
  7983  001BB2  23A2               	addwfc	(??_main+3)& (0+255),f,b
  7984  001BB4  51A1               	movf	(??_main+2)& (0+255),w,b
  7985  001BB6  0101               	movlb	1	; () banked
  7986  001BB8  5DA3               	subwf	_pAdj& (0+255),w,b
  7987  001BBA  51A4               	movf	(_pAdj+1)& (0+255),w,b
  7988  001BBC  0A80               	xorlw	128
  7989  001BBE  0103               	movlb	3	; () banked
  7990  001BC0  6FA3               	movwf	(??_main+4)& (0+255),b
  7991  001BC2  51A2               	movf	(??_main+3)& (0+255),w,b
  7992  001BC4  0A80               	xorlw	128
  7993  001BC6  59A3               	subwfb	(??_main+4)& (0+255),w,b
  7994  001BC8  B0D8               	btfsc	status,0,c
  7995  001BCA  D073               	goto	l20947
  7996  001BCC                     u22890:
  7997                           
  7998                           ;main.c: 721:                                          ((intVentMode == VMODE_VOLUME) ||
      +                           (pAdj < (intIP - ((int16_t) ((0.045*4096+2)/5)*2))))) {;main.c: 722:                   
      +                                                LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  7999  001BCC  94BA               	bcf	186,2,c	;volatile
  8000  001BCE  86BC               	bsf	188,3,c	;volatile
  8001                           
  8002                           ;main.c: 723:                                         rValveActuationTstamp = timeGet();
  8003  001BD0  EC7B  F051         	call	_timeGet	;wreg free
  8004  001BD4  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  8005  001BDA  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;main.c: 724:                                         QuantaCheck = 1;
  8009  001BE0  0E01               	movlw	1
  8010  001BE2  0101               	movlb	1	; () banked
  8011  001BE4  6FC2               	movwf	_QuantaCheck& (0+255),b
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;main.c: 725:                                         pPlatMax = pAvgUShort;
  8015  001BE6  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  8016  001BEA  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  8017                           
  8018                           ; BSR set to: 1
  8019                           ;main.c: 726:                                         printf ("PI-VO T %d - Pi %d Pq %d 
      +                          VOL %d\n", timeDiff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((
      +                          0.045*4096+2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pQuantaInsp))>>8)), vMeasureGet());
  8020  001BEE  0E0D               	movlw	low STR_17
  8021  001BF0  6F46               	movwf	printf@fmt& (0+255),b
  8022  001BF2  0EFC               	movlw	high STR_17
  8023  001BF4  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8024  001BF6  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8025  001BFC  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8026  001C02  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  8027  001C08  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  8028  001C0E  EC0D  F04D         	call	_timeDiff	;wreg free
  8029  001C12  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8030  001C18  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8031  001C1E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8032  001C24  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8033  001C2A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8034  001C2C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8035  001C2E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8036  001C30  0E45               	movlw	69
  8037  001C32  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8038  001C34  0E00               	movlw	0
  8039  001C36  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8040  001C38  0E00               	movlw	0
  8041  001C3A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8042  001C3C  ECC7  F049         	call	___tmul	;wreg free
  8043  001C40  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8044  001C46  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8045  001C4C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8046  001C4E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8047  001C50  698D               	setf	(?___tmul+2)& (0+255),b
  8048  001C52  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8049  001C58  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8050  001C5E  0060  F754  F08B   	movff	_pQuantaInsp,___tmul@multiplier
  8051  001C64  0060  F758  F08C   	movff	_pQuantaInsp+1,___tmul@multiplier+1
  8052  001C6A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8053  001C6C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8054  001C6E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8055  001C70  0E45               	movlw	69
  8056  001C72  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8057  001C74  0E00               	movlw	0
  8058  001C76  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8059  001C78  0E00               	movlw	0
  8060  001C7A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8061  001C7C  ECC7  F049         	call	___tmul	;wreg free
  8062  001C80  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8063  001C86  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8064  001C8C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8065  001C8E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8066  001C90  698D               	setf	(?___tmul+2)& (0+255),b
  8067  001C92  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8068  001C98  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8069  001C9E  EC7F  F047         	call	_vMeasureGet	;wreg free
  8070  001CA2  0060  F290  F14E   	movff	?_vMeasureGet,?_printf+8
  8071  001CA8  0060  F294  F14F   	movff	?_vMeasureGet+1,?_printf+9
  8072  001CAE  ECE9  F04E         	call	_printf	;wreg free
  8073  001CB2                     l20947:
  8074                           
  8075                           ;main.c: 733:                     screenMng();
  8076  001CB2  ECD7  F018         	call	_screenMng	;wreg free
  8077                           
  8078                           ;main.c: 734:                     MenuMng();
  8079  001CB6  ECD8  F014         	call	_MenuMng	;wreg free
  8080                           
  8081                           ;main.c: 738:                 if ((LATAbits.LATA3) && (rSV3ValveORT > ((time_t) 50*1)) &
      +                          &
  8082  001CBA  A6BA               	btfss	186,3,c	;volatile
  8083  001CBC  D063               	goto	l20967
  8084  001CBE  0101               	movlb	1	; () banked
  8085  001CC0  519A               	movf	(_rSV3ValveORT+1)& (0+255),w,b
  8086  001CC2  E104               	bnz	u22910
  8087  001CC4  0E33               	movlw	51
  8088  001CC6  5D99               	subwf	_rSV3ValveORT& (0+255),w,b
  8089  001CC8  A0D8               	btfss	status,0,c
  8090  001CCA  D05C               	goto	l20967
  8091  001CCC                     u22910:
  8092                           
  8093                           ; BSR set to: 1
  8094  001CCC  0ECE               	movlw	206
  8095  001CCE  0103               	movlb	3	; () banked
  8096  001CD0  6F9F               	movwf	??_main& (0+255),b
  8097  001CD2  0EFF               	movlw	255
  8098  001CD4  6FA0               	movwf	(??_main+1)& (0+255),b
  8099  001CD6  0060  F664  F3A1   	movff	_rSV3ValveORT,??_main+2
  8100  001CDC  0060  F668  F3A2   	movff	_rSV3ValveORT+1,??_main+3
  8101  001CE2  519F               	movf	??_main& (0+255),w,b
  8102  001CE4  27A1               	addwf	(??_main+2)& (0+255),f,b
  8103  001CE6  51A0               	movf	(??_main+1)& (0+255),w,b
  8104  001CE8  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8105  001CEA  51A1               	movf	(??_main+2)& (0+255),w,b
  8106  001CEC  0101               	movlb	1	; () banked
  8107  001CEE  5DAF               	subwf	_intIDuration& (0+255),w,b
  8108  001CF0  0103               	movlb	3	; () banked
  8109  001CF2  51A2               	movf	(??_main+3)& (0+255),w,b
  8110  001CF4  0101               	movlb	1	; () banked
  8111  001CF6  59B0               	subwfb	(_intIDuration+1)& (0+255),w,b
  8112  001CF8  A0D8               	btfss	status,0,c
  8113  001CFA  D01D               	goto	u22930
  8114                           
  8115                           ; BSR set to: 1
  8116  001CFC  0060  F73C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  8117  001D02  0060  F740  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  8118  001D08  5199               	movf	_rSV3ValveORT& (0+255),w,b
  8119  001D0A  5DAF               	subwf	_intIDuration& (0+255),w,b
  8120  001D0C  0103               	movlb	3	; () banked
  8121  001D0E  6F9F               	movwf	??_main& (0+255),b
  8122  001D10  0101               	movlb	1	; () banked
  8123  001D12  519A               	movf	(_rSV3ValveORT+1)& (0+255),w,b
  8124  001D14  59B0               	subwfb	(_intIDuration+1)& (0+255),w,b
  8125  001D16  0103               	movlb	3	; () banked
  8126  001D18  6FA0               	movwf	(??_main+1)& (0+255),b
  8127  001D1A  0E32               	movlw	50
  8128  001D1C  259F               	addwf	??_main& (0+255),w,b
  8129  001D1E  0100               	movlb	0	; () banked
  8130  001D20  6F95               	movwf	timeElapsed@duration& (0+255),b
  8131  001D22  0E00               	movlw	0
  8132  001D24  0103               	movlb	3	; () banked
  8133  001D26  21A0               	addwfc	(??_main+1)& (0+255),w,b
  8134  001D28  0100               	movlb	0	; () banked
  8135  001D2A  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8136  001D2C  EC8A  F04D         	call	_timeElapsed	;wreg free
  8137  001D30  0900               	iorlw	0
  8138  001D32  B4D8               	btfsc	status,2,c
  8139  001D34  D027               	goto	l20967
  8140  001D36                     u22930:
  8141                           
  8142                           ;main.c: 739:                         ((intIDuration < (rSV3ValveORT - ((time_t) 50*1)))
      +                           || timeElapsed(rCycleTime, intIDuration - (rSV3ValveORT - ((time_t) 50*1))))) {;main.c:
      +                           740:                     sv3DelayCheck = 1;
  8143  001D36  0E01               	movlw	1
  8144  001D38  0101               	movlb	1	; () banked
  8145  001D3A  6FC4               	movwf	_sv3DelayCheck& (0+255),b
  8146                           
  8147                           ; BSR set to: 1
  8148                           ;main.c: 741:                     rValveDelayStart = timeGet();
  8149  001D3C  EC7B  F051         	call	_timeGet	;wreg free
  8150  001D40  0060  F24C  F197   	movff	?_timeGet,_rValveDelayStart
  8151  001D46  0060  F250  F198   	movff	?_timeGet+1,_rValveDelayStart+1
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;main.c: 742:                     LATAbits.LATA3 = 0;
  8155  001D4C  96BA               	bcf	186,3,c	;volatile
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;main.c: 743:                     printf ("PI-OSV3 T %d\n", timeDiff(rCycleTime, rValveD
      +                          elayStart));
  8159  001D4E  0E23               	movlw	low STR_18
  8160  001D50  0101               	movlb	1	; () banked
  8161  001D52  6F46               	movwf	printf@fmt& (0+255),b
  8162  001D54  0EFF               	movlw	high STR_18
  8163  001D56  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8164  001D58  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8165  001D5E  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8166  001D64  0060  F65C  F097   	movff	_rValveDelayStart,timeDiff@endT
  8167  001D6A  0060  F660  F098   	movff	_rValveDelayStart+1,timeDiff@endT+1
  8168  001D70  EC0D  F04D         	call	_timeDiff	;wreg free
  8169  001D74  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8170  001D7A  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8171  001D80  ECE9  F04E         	call	_printf	;wreg free
  8172  001D84                     l20967:
  8173                           
  8174                           ;main.c: 746:                 if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  8175  001D84  0EB4               	movlw	low main@printTime
  8176  001D86  0100               	movlb	0	; () banked
  8177  001D88  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  8178  001D8A  0E03               	movlw	high main@printTime
  8179  001D8C  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  8180  001D8E  0E00               	movlw	0
  8181  001D90  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
  8182  001D92  0E14               	movlw	20
  8183  001D94  6F95               	movwf	timeElapsedR@duration& (0+255),b
  8184  001D96  EC66  F046         	call	_timeElapsedR	;wreg free
  8185  001D9A  0900               	iorlw	0
  8186  001D9C  B4D8               	btfsc	status,2,c
  8187  001D9E  EFE7  F003         	goto	l20585
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;main.c: 747:                     printf ("-: %d %d %d %d\n", timeGet(), (LATAbits.LATA2
      +                           ? 1 : 0) + (LATCbits.LATC3 ? 2 : 0) + (LATAbits.LATA3 ? 4 : 0), pInst, pAvgShort, vMeas
      +                          ureGet());
  8191  001DA2  B6BA               	btfsc	186,3,c	;volatile
  8192  001DA4  D005               	goto	l20973
  8193                           
  8194                           ; BSR set to: 0
  8195  001DA6  0E00               	movlw	0
  8196  001DA8  0103               	movlb	3	; () banked
  8197  001DAA  6FAB               	movwf	(_main$3847+1)& (0+255),b
  8198  001DAC  0E00               	movlw	0
  8199  001DAE  D004               	goto	L4
  8200  001DB0                     l20973:
  8201                           
  8202                           ; BSR set to: 0
  8203  001DB0  0E00               	movlw	0
  8204  001DB2  0103               	movlb	3	; () banked
  8205  001DB4  6FAB               	movwf	(_main$3847+1)& (0+255),b
  8206  001DB6  0E04               	movlw	4
  8207  001DB8                     L4:
  8208  001DB8  6FAA               	movwf	_main$3847& (0+255),b
  8209                           
  8210                           ; BSR set to: 3
  8211  001DBA  B6BC               	btfsc	188,3,c	;volatile
  8212  001DBC  D004               	goto	l20979
  8213                           
  8214                           ; BSR set to: 3
  8215  001DBE  0E00               	movlw	0
  8216  001DC0  6FAD               	movwf	(_main$3848+1)& (0+255),b
  8217  001DC2  0E00               	movlw	0
  8218  001DC4  D003               	goto	L5
  8219  001DC6                     l20979:
  8220                           
  8221                           ; BSR set to: 3
  8222  001DC6  0E00               	movlw	0
  8223  001DC8  6FAD               	movwf	(_main$3848+1)& (0+255),b
  8224  001DCA  0E02               	movlw	2
  8225  001DCC                     L5:
  8226  001DCC  6FAC               	movwf	_main$3848& (0+255),b
  8227                           
  8228                           ; BSR set to: 3
  8229  001DCE  0E05               	movlw	low STR_19
  8230  001DD0  0101               	movlb	1	; () banked
  8231  001DD2  6F46               	movwf	printf@fmt& (0+255),b
  8232  001DD4  0EFF               	movlw	high STR_19
  8233  001DD6  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8234  001DD8  EC7B  F051         	call	_timeGet	;wreg free
  8235  001DDC  0060  F24C  F148   	movff	?_timeGet,?_printf+2
  8236  001DE2  0060  F250  F149   	movff	?_timeGet+1,?_printf+3
  8237  001DE8  A4BA               	btfss	186,2,c	;volatile
  8238  001DEA  D004               	goto	u22970
  8239  001DEC  0103               	movlb	3	; () banked
  8240  001DEE  6B9F               	clrf	??_main& (0+255),b
  8241  001DF0  2B9F               	incf	??_main& (0+255),f,b
  8242  001DF2  D002               	goto	u22978
  8243  001DF4                     u22970:
  8244  001DF4  0103               	movlb	3	; () banked
  8245  001DF6  6B9F               	clrf	??_main& (0+255),b
  8246  001DF8                     u22978:
  8247  001DF8  519F               	movf	??_main& (0+255),w,b
  8248  001DFA  25AC               	addwf	_main$3848& (0+255),w,b
  8249  001DFC  6FA0               	movwf	(??_main+1)& (0+255),b
  8250  001DFE  0E00               	movlw	0
  8251  001E00  21AD               	addwfc	(_main$3848+1)& (0+255),w,b
  8252  001E02  6FA1               	movwf	(??_main+2)& (0+255),b
  8253  001E04  51AA               	movf	_main$3847& (0+255),w,b
  8254  001E06  25A0               	addwf	(??_main+1)& (0+255),w,b
  8255  001E08  0101               	movlb	1	; () banked
  8256  001E0A  6F4A               	movwf	(?_printf+4)& (0+255),b
  8257  001E0C  0103               	movlb	3	; () banked
  8258  001E0E  51AB               	movf	(_main$3847+1)& (0+255),w,b
  8259  001E10  21A1               	addwfc	(??_main+2)& (0+255),w,b
  8260  001E12  0101               	movlb	1	; () banked
  8261  001E14  6F4B               	movwf	(?_printf+5)& (0+255),b
  8262  001E16  0060  F7BC  F14C   	movff	_pInst,?_printf+6
  8263  001E1C  0060  F7C0  F14D   	movff	_pInst+1,?_printf+7
  8264  001E22  0060  F7B4  F14E   	movff	_pAvgShort,?_printf+8
  8265  001E28  0060  F7B8  F14F   	movff	_pAvgShort+1,?_printf+9
  8266  001E2E  EC7F  F047         	call	_vMeasureGet	;wreg free
  8267  001E32  0060  F290  F150   	movff	?_vMeasureGet,?_printf+10
  8268  001E38  0060  F294  F151   	movff	?_vMeasureGet+1,?_printf+11
  8269  001E3E  ECE9  F04E         	call	_printf	;wreg free
  8270  001E42  EFE7  F003         	goto	l20585
  8271  001E46                     l20983:
  8272                           
  8273                           ; BSR set to: 1
  8274                           ;main.c: 756:             lastCycleVol = vMeasureGet();
  8275  001E46  EC7F  F047         	call	_vMeasureGet	;wreg free
  8276  001E4A  0060  F290  F244   	movff	?_vMeasureGet,_lastCycleVol
  8277  001E50  0060  F294  F245   	movff	?_vMeasureGet+1,_lastCycleVol+1
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;main.c: 757:             sprintf(lcdBtnRRow, "V% 4d", lastCycleVol);
  8281  001E56  0EC1               	movlw	low _lcdBtnRRow
  8282  001E58  0101               	movlb	1	; () banked
  8283  001E5A  6F46               	movwf	sprintf@s& (0+255),b
  8284  001E5C  0E02               	movlw	high _lcdBtnRRow
  8285  001E5E  6F47               	movwf	(sprintf@s+1)& (0+255),b
  8286  001E60  0EF4               	movlw	low STR_20
  8287  001E62  6F48               	movwf	sprintf@fmt& (0+255),b
  8288  001E64  0EFF               	movlw	high STR_20
  8289  001E66  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
  8290  001E68  0060  F910  F14A   	movff	_lastCycleVol,?_sprintf+4
  8291  001E6E  0060  F914  F14B   	movff	_lastCycleVol+1,?_sprintf+5
  8292  001E74  ECD9  F047         	call	_sprintf	;wreg free
  8293                           
  8294                           ; BSR set to: 1
  8295                           ;main.c: 758:             lcdPrintBRR = 1;
  8296  001E78  0E01               	movlw	1
  8297  001E7A  6FCC               	movwf	_lcdPrintBRR& (0+255),b
  8298                           
  8299                           ; BSR set to: 1
  8300                           ;main.c: 763:             printf ("\nEP\n");
  8301  001E7C  0EFA               	movlw	low STR_21
  8302  001E7E  6F46               	movwf	printf@fmt& (0+255),b
  8303  001E80  0EFF               	movlw	high STR_21
  8304  001E82  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8305  001E84  ECE9  F04E         	call	_printf	;wreg free
  8306                           
  8307                           ; BSR set to: 2
  8308                           ;main.c: 765:             aCaptRstFlt(Flt0PSensor);
  8309  001E88  0E03               	movlw	3
  8310  001E8A  ECED  F03B         	call	_aCaptRstFlt
  8311                           
  8312                           ; BSR set to: 57
  8313                           ;main.c: 766:             aCaptRstFlt(Flt1PSensor);
  8314  001E8E  0E04               	movlw	4
  8315  001E90  ECED  F03B         	call	_aCaptRstFlt
  8316                           
  8317                           ; BSR set to: 57
  8318                           ;main.c: 767:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  8319  001E94  94BA               	bcf	186,2,c	;volatile
  8320                           
  8321                           ; BSR set to: 57
  8322  001E96  96BC               	bcf	188,3,c	;volatile
  8323                           
  8324                           ; BSR set to: 57
  8325                           ;main.c: 768:             if (LATAbits.LATA3) {
  8326  001E98  A6BA               	btfss	186,3,c	;volatile
  8327  001E9A  D00C               	goto	l21007
  8328                           
  8329                           ; BSR set to: 57
  8330                           ;main.c: 769:                 LATAbits.LATA3 = 0;
  8331  001E9C  96BA               	bcf	186,3,c	;volatile
  8332                           
  8333                           ; BSR set to: 57
  8334                           ;main.c: 770:                 sv3DelayCheck = 1;
  8335  001E9E  0E01               	movlw	1
  8336  001EA0  0101               	movlb	1	; () banked
  8337  001EA2  6FC4               	movwf	_sv3DelayCheck& (0+255),b
  8338                           
  8339                           ; BSR set to: 1
  8340                           ;main.c: 771:                 rValveDelayStart = timeGet();
  8341  001EA4  EC7B  F051         	call	_timeGet	;wreg free
  8342  001EA8  0060  F24C  F197   	movff	?_timeGet,_rValveDelayStart
  8343  001EAE  0060  F250  F198   	movff	?_timeGet+1,_rValveDelayStart+1
  8344  001EB4                     l21007:
  8345                           
  8346                           ;main.c: 774:             initExpSubState = 1;
  8347  001EB4  0E01               	movlw	1
  8348  001EB6  0101               	movlb	1	; () banked
  8349  001EB8  6FC7               	movwf	_initExpSubState& (0+255),b
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;main.c: 775:             OSCheck = 0;
  8353  001EBA  0E00               	movlw	0
  8354  001EBC  6FC3               	movwf	_OSCheck& (0+255),b
  8355                           
  8356                           ; BSR set to: 1
  8357                           ;main.c: 776:             QuantaCheck = 0;
  8358  001EBE  0E00               	movlw	0
  8359  001EC0  6FC2               	movwf	_QuantaCheck& (0+255),b
  8360  001EC2                     l21013:
  8361                           
  8362                           ;main.c: 779:                 if (intVentMode == VMODE_PRESSURE) {
  8363  001EC2  0101               	movlb	1	; () banked
  8364  001EC4  51CA               	movf	_intVentMode& (0+255),w,b
  8365  001EC6  A4D8               	btfss	status,2,c
  8366  001EC8  D004               	goto	l21017
  8367                           
  8368                           ; BSR set to: 1
  8369                           ;main.c: 780:                     MonitorMsgSend(MONSTATE_RUNP);
  8370  001ECA  0E10               	movlw	16
  8371  001ECC  ECFF  F04E         	call	_MonitorMsgSend
  8372                           
  8373                           ;main.c: 781:                 } else {
  8374  001ED0  D003               	goto	l21019
  8375  001ED2                     l21017:
  8376                           
  8377                           ; BSR set to: 1
  8378                           ;main.c: 782:                     MonitorMsgSend(MONSTATE_RUNV);
  8379  001ED2  0E14               	movlw	20
  8380  001ED4  ECFF  F04E         	call	_MonitorMsgSend
  8381  001ED8                     l21019:
  8382                           
  8383                           ;main.c: 785:                 if (timeElapsedR(&rCycleTime, intEDuration)) {
  8384  001ED8  0ECF               	movlw	low _rCycleTime
  8385  001EDA  0100               	movlb	0	; () banked
  8386  001EDC  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  8387  001EDE  0E01               	movlw	high _rCycleTime
  8388  001EE0  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  8389  001EE2  0060  F920  F095   	movff	_intEDuration,timeElapsedR@duration
  8390  001EE8  0060  F924  F096   	movff	_intEDuration+1,timeElapsedR@duration+1
  8391  001EEE  EC66  F046         	call	_timeElapsedR	;wreg free
  8392  001EF2  0900               	iorlw	0
  8393  001EF4  B4D8               	btfsc	status,2,c
  8394  001EF6  D02C               	goto	l21035
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;main.c: 787:                     sBreath = 0;
  8398  001EF8  0E00               	movlw	0
  8399  001EFA  0101               	movlb	1	; () banked
  8400  001EFC  6FC9               	movwf	_sBreath& (0+255),b
  8401                           
  8402                           ; BSR set to: 1
  8403                           ;main.c: 788:                     bRateUpdt(0);
  8404  001EFE  0E00               	movlw	0
  8405  001F00  ECAE  F03E         	call	_bRateUpdt
  8406                           
  8407                           ; BSR set to: 2
  8408                           ;main.c: 789:                     if (initExpSubState) {
  8409  001F04  0101               	movlb	1	; () banked
  8410  001F06  51C7               	movf	_initExpSubState& (0+255),w,b
  8411  001F08  B4D8               	btfsc	status,2,c
  8412  001F0A  D003               	goto	l21029
  8413                           
  8414                           ; BSR set to: 1
  8415                           ;main.c: 791:                         MonitorErrorSet(MON_EPE);
  8416  001F0C  0E10               	movlw	16
  8417  001F0E  EC84  F051         	call	_MonitorErrorSet
  8418  001F12                     l21029:
  8419                           
  8420                           ; BSR set to: 1
  8421                           ;main.c: 793:                     if (OSCheck) {
  8422  001F12  51C3               	movf	_OSCheck& (0+255),w,b
  8423  001F14  B4D8               	btfsc	status,2,c
  8424  001F16  EFCE  F014         	goto	l21171
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;main.c: 795:                         pExpOS = (3 * pExpOS) >> 2;
  8428  001F1A  0060  F784  F09B   	movff	_pExpOS,___wmul@multiplier
  8429  001F20  0060  F788  F09C   	movff	_pExpOS+1,___wmul@multiplier+1
  8430  001F26  0E00               	movlw	0
  8431  001F28  0100               	movlb	0	; () banked
  8432  001F2A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8433  001F2C  0E03               	movlw	3
  8434  001F2E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  8435  001F30  ECA2  F04D         	call	___wmul	;wreg free
  8436  001F34  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  8437  001F36  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  8438  001F38  339B               	rrcf	?___wmul& (0+255),f,b
  8439  001F3A  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  8440  001F3C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  8441  001F3E  339B               	rrcf	?___wmul& (0+255),f,b
  8442  001F40  0060  F26C  F1E1   	movff	?___wmul,_pExpOS
  8443  001F46  0060  F270  F1E2   	movff	?___wmul+1,_pExpOS+1
  8444  001F4C  EFCE  F014         	goto	l21171
  8445  001F50                     l21035:
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;main.c: 799:                     aCaptGetResult(MainPSensor, &pInst);
  8449  001F50  0EEF               	movlw	low _pInst
  8450  001F52  0101               	movlb	1	; () banked
  8451  001F54  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8452  001F56  0E01               	movlw	high _pInst
  8453  001F58  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8454  001F5A  0E00               	movlw	0
  8455  001F5C  EC04  F032         	call	_aCaptGetResult
  8456                           
  8457                           ;main.c: 800:                     pPeepActual = pInst;
  8458  001F60  C1EF  F1A9         	movff	_pInst,_pPeepActual
  8459  001F64  C1F0  F1AA         	movff	_pInst+1,_pPeepActual+1
  8460                           
  8461                           ;main.c: 801:                     if (initExpSubState) {
  8462  001F68  0101               	movlb	1	; () banked
  8463  001F6A  51C7               	movf	_initExpSubState& (0+255),w,b
  8464  001F6C  B4D8               	btfsc	status,2,c
  8465  001F6E  D10A               	goto	l21081
  8466                           
  8467                           ; BSR set to: 1
  8468                           ;main.c: 807:                         aCaptGetResult(Flt1PSensor, &pAvgShort);
  8469  001F70  0EED               	movlw	low _pAvgShort
  8470  001F72  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8471  001F74  0E01               	movlw	high _pAvgShort
  8472  001F76  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8473  001F78  0E04               	movlw	4
  8474  001F7A  EC04  F032         	call	_aCaptGetResult
  8475                           
  8476                           ;main.c: 811:                         tmpVal = intPEEP - pExpOS;
  8477  001F7E  0101               	movlb	1	; () banked
  8478  001F80  51E1               	movf	_pExpOS& (0+255),w,b
  8479  001F82  5DB1               	subwf	_intPEEP& (0+255),w,b
  8480  001F84  0103               	movlb	3	; () banked
  8481  001F86  6FBF               	movwf	main@tmpVal& (0+255),b
  8482  001F88  0101               	movlb	1	; () banked
  8483  001F8A  51E2               	movf	(_pExpOS+1)& (0+255),w,b
  8484  001F8C  59B2               	subwfb	(_intPEEP+1)& (0+255),w,b
  8485  001F8E  0103               	movlb	3	; () banked
  8486  001F90  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  8487                           
  8488                           ; BSR set to: 3
  8489                           ;main.c: 812:                         if (tmpVal <= ((int16_t) ((0.045*4096+2)/5)*1)) {
  8490  001F92  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  8491  001F94  D006               	goto	u23040
  8492  001F96  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  8493  001F98  E108               	bnz	l21049
  8494  001F9A  0E26               	movlw	38
  8495  001F9C  5DBF               	subwf	main@tmpVal& (0+255),w,b
  8496  001F9E  B0D8               	btfsc	status,0,c
  8497  001FA0  D004               	goto	l21049
  8498  001FA2                     u23040:
  8499                           
  8500                           ; BSR set to: 3
  8501                           ;main.c: 813:                             tmpVal = ((int16_t) ((0.045*4096+2)/5)*1);
  8502  001FA2  0E00               	movlw	0
  8503  001FA4  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  8504  001FA6  0E25               	movlw	37
  8505  001FA8  6FBF               	movwf	main@tmpVal& (0+255),b
  8506  001FAA                     l21049:
  8507                           
  8508                           ; BSR set to: 3
  8509                           ;main.c: 815:                         if (pAvgShort < tmpVal) {
  8510  001FAA  51BF               	movf	main@tmpVal& (0+255),w,b
  8511  001FAC  0101               	movlb	1	; () banked
  8512  001FAE  5DED               	subwf	_pAvgShort& (0+255),w,b
  8513  001FB0  51EE               	movf	(_pAvgShort+1)& (0+255),w,b
  8514  001FB2  0A80               	xorlw	128
  8515  001FB4  0103               	movlb	3	; () banked
  8516  001FB6  6F9F               	movwf	??_main& (0+255),b
  8517  001FB8  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  8518  001FBA  0A80               	xorlw	128
  8519  001FBC  599F               	subwfb	??_main& (0+255),w,b
  8520  001FBE  B0D8               	btfsc	status,0,c
  8521  001FC0  D06D               	goto	l21063
  8522                           
  8523                           ; BSR set to: 3
  8524                           ;main.c: 816:                             LATAbits.LATA3 = 1;
  8525  001FC2  86BA               	bsf	186,3,c	;volatile
  8526                           
  8527                           ; BSR set to: 3
  8528                           ;main.c: 817:                             initExpSubState = 0;
  8529  001FC4  0E00               	movlw	0
  8530  001FC6  0101               	movlb	1	; () banked
  8531  001FC8  6FC7               	movwf	_initExpSubState& (0+255),b
  8532                           
  8533                           ; BSR set to: 1
  8534                           ;main.c: 818:                             rValveActuationTstamp = timeGet();
  8535  001FCA  EC7B  F051         	call	_timeGet	;wreg free
  8536  001FCE  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  8537  001FD4  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;main.c: 819:                             pValveActuation = pInst;
  8541  001FDA  C1EF  F1E5         	movff	_pInst,_pValveActuation
  8542  001FDE  C1F0  F1E6         	movff	_pInst+1,_pValveActuation+1
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;main.c: 820:                             OSCheck = 1;
  8546  001FE2  0E01               	movlw	1
  8547  001FE4  0101               	movlb	1	; () banked
  8548  001FE6  6FC3               	movwf	_OSCheck& (0+255),b
  8549                           
  8550                           ; BSR set to: 1
  8551                           ;main.c: 821:                             printf ("PEI end T %d - Pi %d OS %d\n", timeDi
      +                          ff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*
      +                          1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int2
      +                          4_t) pExpOS))>>8)));
  8552  001FE8  0E4A               	movlw	low STR_22
  8553  001FEA  6F46               	movwf	printf@fmt& (0+255),b
  8554  001FEC  0EFC               	movlw	high STR_22
  8555  001FEE  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8556  001FF0  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8557  001FF6  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8558  001FFC  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  8559  002002  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  8560  002008  EC0D  F04D         	call	_timeDiff	;wreg free
  8561  00200C  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8562  002012  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8563  002018  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8564  00201E  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8565  002024  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8566  002026  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8567  002028  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8568  00202A  0E45               	movlw	69
  8569  00202C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8570  00202E  0E00               	movlw	0
  8571  002030  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8572  002032  0E00               	movlw	0
  8573  002034  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8574  002036  ECC7  F049         	call	___tmul	;wreg free
  8575  00203A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8576  002040  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8577  002046  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8578  002048  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8579  00204A  698D               	setf	(?___tmul+2)& (0+255),b
  8580  00204C  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8581  002052  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8582  002058  0060  F784  F08B   	movff	_pExpOS,___tmul@multiplier
  8583  00205E  0060  F788  F08C   	movff	_pExpOS+1,___tmul@multiplier+1
  8584  002064  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8585  002066  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8586  002068  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8587  00206A  0E45               	movlw	69
  8588  00206C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8589  00206E  0E00               	movlw	0
  8590  002070  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8591  002072  0E00               	movlw	0
  8592  002074  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8593  002076  ECC7  F049         	call	___tmul	;wreg free
  8594  00207A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8595  002080  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8596  002086  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8597  002088  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8598  00208A  698D               	setf	(?___tmul+2)& (0+255),b
  8599  00208C  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8600  002092  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8601  002098  ECE9  F04E         	call	_printf	;wreg free
  8602  00209C                     l21063:
  8603                           
  8604                           ;main.c: 826:                         if (sv3DelayCheck) {
  8605  00209C  0101               	movlb	1	; () banked
  8606  00209E  51C4               	movf	_sv3DelayCheck& (0+255),w,b
  8607  0020A0  B4D8               	btfsc	status,2,c
  8608  0020A2  D383               	goto	l21167
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;main.c: 829:                             if ((pInst <= ((intPEEP + pPlatInsp) >> 1)) ||
      +                           (pInst < (pAvgShort - ((int16_t) ((0.045*4096+2)/5)*3)))) {
  8612  0020A4  51E3               	movf	_pPlatInsp& (0+255),w,b
  8613  0020A6  25B1               	addwf	_intPEEP& (0+255),w,b
  8614  0020A8  0103               	movlb	3	; () banked
  8615  0020AA  6F9F               	movwf	??_main& (0+255),b
  8616  0020AC  0101               	movlb	1	; () banked
  8617  0020AE  51E4               	movf	(_pPlatInsp+1)& (0+255),w,b
  8618  0020B0  21B2               	addwfc	(_intPEEP+1)& (0+255),w,b
  8619  0020B2  0103               	movlb	3	; () banked
  8620  0020B4  6FA0               	movwf	(??_main+1)& (0+255),b
  8621  0020B6  35A0               	rlcf	(??_main+1)& (0+255),w,b
  8622  0020B8  31A0               	rrcf	(??_main+1)& (0+255),w,b
  8623  0020BA  6FA2               	movwf	(??_main+3)& (0+255),b
  8624  0020BC  319F               	rrcf	??_main& (0+255),w,b
  8625  0020BE  6FA1               	movwf	(??_main+2)& (0+255),b
  8626  0020C0  0101               	movlb	1	; () banked
  8627  0020C2  51EF               	movf	_pInst& (0+255),w,b
  8628  0020C4  0103               	movlb	3	; () banked
  8629  0020C6  5DA1               	subwf	(??_main+2)& (0+255),w,b
  8630  0020C8  51A2               	movf	(??_main+3)& (0+255),w,b
  8631  0020CA  0A80               	xorlw	128
  8632  0020CC  6FA3               	movwf	(??_main+4)& (0+255),b
  8633  0020CE  0101               	movlb	1	; () banked
  8634  0020D0  51F0               	movf	(_pInst+1)& (0+255),w,b
  8635  0020D2  0A80               	xorlw	128
  8636  0020D4  0103               	movlb	3	; () banked
  8637  0020D6  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8638  0020D8  B0D8               	btfsc	status,0,c
  8639  0020DA  D01A               	goto	u23080
  8640                           
  8641                           ; BSR set to: 3
  8642  0020DC  0E91               	movlw	145
  8643  0020DE  6F9F               	movwf	??_main& (0+255),b
  8644  0020E0  0EFF               	movlw	255
  8645  0020E2  6FA0               	movwf	(??_main+1)& (0+255),b
  8646  0020E4  0060  F7B4  F3A1   	movff	_pAvgShort,??_main+2
  8647  0020EA  0060  F7B8  F3A2   	movff	_pAvgShort+1,??_main+3
  8648  0020F0  519F               	movf	??_main& (0+255),w,b
  8649  0020F2  27A1               	addwf	(??_main+2)& (0+255),f,b
  8650  0020F4  51A0               	movf	(??_main+1)& (0+255),w,b
  8651  0020F6  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8652  0020F8  51A1               	movf	(??_main+2)& (0+255),w,b
  8653  0020FA  0101               	movlb	1	; () banked
  8654  0020FC  5DEF               	subwf	_pInst& (0+255),w,b
  8655  0020FE  51F0               	movf	(_pInst+1)& (0+255),w,b
  8656  002100  0A80               	xorlw	128
  8657  002102  0103               	movlb	3	; () banked
  8658  002104  6FA3               	movwf	(??_main+4)& (0+255),b
  8659  002106  51A2               	movf	(??_main+3)& (0+255),w,b
  8660  002108  0A80               	xorlw	128
  8661  00210A  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8662  00210C  B0D8               	btfsc	status,0,c
  8663  00210E  D34D               	goto	l21167
  8664  002110                     u23080:
  8665                           
  8666                           ; BSR set to: 3
  8667                           ;main.c: 830:                                 sv3DelayCheck = 0;
  8668  002110  0E00               	movlw	0
  8669  002112  0101               	movlb	1	; () banked
  8670  002114  6FC4               	movwf	_sv3DelayCheck& (0+255),b
  8671                           
  8672                           ; BSR set to: 1
  8673                           ;main.c: 832:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  8674  002116  0060  F65C  F095   	movff	_rValveDelayStart,timeDiff@startT
  8675  00211C  0060  F660  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  8676  002122  EC7B  F051         	call	_timeGet	;wreg free
  8677  002126  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8678  00212C  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8679  002132  EC0D  F04D         	call	_timeDiff	;wreg free
  8680  002136  0060  F254  F195   	movff	?_timeDiff,_rTimeTmp
  8681  00213C  0060  F258  F196   	movff	?_timeDiff+1,_rTimeTmp+1
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;main.c: 833:                                 if (rTimeTmp < ((time_t) 600*1)) {
  8685  002142  0E58               	movlw	88
  8686  002144  0101               	movlb	1	; () banked
  8687  002146  5D95               	subwf	_rTimeTmp& (0+255),w,b
  8688  002148  0E02               	movlw	2
  8689  00214A  5996               	subwfb	(_rTimeTmp+1)& (0+255),w,b
  8690  00214C  B0D8               	btfsc	status,0,c
  8691  00214E  D016               	goto	l21079
  8692                           
  8693                           ; BSR set to: 1
  8694                           ;main.c: 835:                                     rSV3ValveORT = (rSV3ValveORT + rTimeTm
      +                          p) >> 1;
  8695  002150  5195               	movf	_rTimeTmp& (0+255),w,b
  8696  002152  2599               	addwf	_rSV3ValveORT& (0+255),w,b
  8697  002154  0103               	movlb	3	; () banked
  8698  002156  6F9F               	movwf	??_main& (0+255),b
  8699  002158  0101               	movlb	1	; () banked
  8700  00215A  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  8701  00215C  219A               	addwfc	(_rSV3ValveORT+1)& (0+255),w,b
  8702  00215E  0103               	movlb	3	; () banked
  8703  002160  6FA0               	movwf	(??_main+1)& (0+255),b
  8704  002162  90D8               	bcf	status,0,c
  8705  002164  31A0               	rrcf	(??_main+1)& (0+255),w,b
  8706  002166  6FA1               	movwf	(??_main+2)& (0+255),b
  8707  002168  319F               	rrcf	??_main& (0+255),w,b
  8708  00216A  0101               	movlb	1	; () banked
  8709  00216C  6F99               	movwf	_rSV3ValveORT& (0+255),b
  8710  00216E  0060  FE84  F19A   	movff	??_main+2,_rSV3ValveORT+1
  8711                           
  8712                           ; BSR set to: 1
  8713                           ;main.c: 837:                                     MonitorErrorClr(MON_SV3E);
  8714  002174  0E40               	movlw	64
  8715  002176  EC8D  F051         	call	_MonitorErrorClr
  8716                           
  8717                           ;main.c: 838:                                 } else {
  8718  00217A  D317               	goto	l21167
  8719  00217C                     l21079:
  8720                           
  8721                           ; BSR set to: 1
  8722                           ;main.c: 840:                                     MonitorErrorSet(MON_SV3E);
  8723  00217C  0E40               	movlw	64
  8724  00217E  EC84  F051         	call	_MonitorErrorSet
  8725  002182  D313               	goto	l21167
  8726  002184                     l21081:
  8727                           
  8728                           ; BSR set to: 1
  8729                           ;main.c: 846:                         MonitorErrorClr(MON_EPE);
  8730  002184  0E10               	movlw	16
  8731  002186  EC8D  F051         	call	_MonitorErrorClr
  8732                           
  8733                           ; BSR set to: 1
  8734                           ;main.c: 847:                         if ((LATAbits.LATA2|LATCbits.LATC3) && (timeElapse
      +                          d(rValveActuationTstamp, ((time_t) 15*1)) || (pInst > intMaxP))) {
  8735  00218A  0E00               	movlw	0
  8736  00218C  B4BA               	btfsc	186,2,c	;volatile
  8737  00218E  0E01               	movlw	1
  8738  002190  B6BC               	btfsc	188,3,c	;volatile
  8739  002192  0E01               	movlw	1
  8740  002194  A0E8               	btfss	wreg,0,c
  8741  002196  D004               	goto	u23100
  8742  002198  0103               	movlb	3	; () banked
  8743  00219A  6B9F               	clrf	??_main& (0+255),b
  8744  00219C  2B9F               	incf	??_main& (0+255),f,b
  8745  00219E  D002               	goto	u23108
  8746  0021A0                     u23100:
  8747  0021A0  0103               	movlb	3	; () banked
  8748  0021A2  6B9F               	clrf	??_main& (0+255),b
  8749  0021A4                     u23108:
  8750  0021A4  519F               	movf	??_main& (0+255),w,b
  8751  0021A6  B4D8               	btfsc	status,2,c
  8752  0021A8  D06E               	goto	l21095
  8753                           
  8754                           ; BSR set to: 3
  8755  0021AA  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  8756  0021B0  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  8757  0021B6  0E00               	movlw	0
  8758  0021B8  0100               	movlb	0	; () banked
  8759  0021BA  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8760  0021BC  0E0F               	movlw	15
  8761  0021BE  6F95               	movwf	timeElapsed@duration& (0+255),b
  8762  0021C0  EC8A  F04D         	call	_timeElapsed	;wreg free
  8763  0021C4  0900               	iorlw	0
  8764  0021C6  A4D8               	btfss	status,2,c
  8765  0021C8  D00E               	goto	u23130
  8766                           
  8767                           ; BSR set to: 0
  8768  0021CA  0101               	movlb	1	; () banked
  8769  0021CC  51EF               	movf	_pInst& (0+255),w,b
  8770  0021CE  5DF3               	subwf	_intMaxP& (0+255),w,b
  8771  0021D0  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  8772  0021D2  0A80               	xorlw	128
  8773  0021D4  0103               	movlb	3	; () banked
  8774  0021D6  6F9F               	movwf	??_main& (0+255),b
  8775  0021D8  0101               	movlb	1	; () banked
  8776  0021DA  51F0               	movf	(_pInst+1)& (0+255),w,b
  8777  0021DC  0A80               	xorlw	128
  8778  0021DE  0103               	movlb	3	; () banked
  8779  0021E0  599F               	subwfb	??_main& (0+255),w,b
  8780  0021E2  B0D8               	btfsc	status,0,c
  8781  0021E4  D050               	goto	l21095
  8782  0021E6                     u23130:
  8783                           
  8784                           ;main.c: 848:                             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  8785  0021E6  94BA               	bcf	186,2,c	;volatile
  8786  0021E8  96BC               	bcf	188,3,c	;volatile
  8787                           
  8788                           ;main.c: 849:                             rValveActuationTstamp = timeGet();
  8789  0021EA  EC7B  F051         	call	_timeGet	;wreg free
  8790  0021EE  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  8791  0021F4  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;main.c: 850:                             aCaptGetResult(MainPSensor, &pInst);
  8795  0021FA  0EEF               	movlw	low _pInst
  8796  0021FC  0101               	movlb	1	; () banked
  8797  0021FE  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8798  002200  0E01               	movlw	high _pInst
  8799  002202  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8800  002204  0E00               	movlw	0
  8801  002206  EC04  F032         	call	_aCaptGetResult
  8802                           
  8803                           ;main.c: 851:                             printf ("PE VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInst
      +                          ))>>8)));
  8804  00220A  0ECC               	movlw	low STR_23
  8805  00220C  0101               	movlb	1	; () banked
  8806  00220E  6F46               	movwf	printf@fmt& (0+255),b
  8807  002210  0EFC               	movlw	high STR_23
  8808  002212  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8809  002214  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8810  00221A  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8811  002220  EC7B  F051         	call	_timeGet	;wreg free
  8812  002224  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8813  00222A  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8814  002230  EC0D  F04D         	call	_timeDiff	;wreg free
  8815  002234  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8816  00223A  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8817  002240  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8818  002246  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8819  00224C  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8820  00224E  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8821  002250  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8822  002252  0E45               	movlw	69
  8823  002254  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8824  002256  0E00               	movlw	0
  8825  002258  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8826  00225A  0E00               	movlw	0
  8827  00225C  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8828  00225E  ECC7  F049         	call	___tmul	;wreg free
  8829  002262  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8830  002268  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8831  00226E  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8832  002270  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8833  002272  698D               	setf	(?___tmul+2)& (0+255),b
  8834  002274  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8835  00227A  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8836  002280  ECE9  F04E         	call	_printf	;wreg free
  8837                           
  8838                           ;main.c: 852:                         } else {
  8839  002284  D28E               	goto	l1877
  8840  002286                     l21095:
  8841                           
  8842                           ; BSR set to: 3
  8843                           ;main.c: 853:                             if (OSCheck) {
  8844  002286  0101               	movlb	1	; () banked
  8845  002288  51C3               	movf	_OSCheck& (0+255),w,b
  8846  00228A  B4D8               	btfsc	status,2,c
  8847  00228C  D0BF               	goto	l21115
  8848                           
  8849                           ; BSR set to: 1
  8850                           ;main.c: 854:                                 if (timeElapsed(rValveActuationTstamp, ((t
      +                          ime_t) 350*1) + (rSV2ValveCRT << 1))) {
  8851  00228E  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  8852  002294  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  8853  00229A  0060  F66C  F39F   	movff	_rSV2ValveCRT,??_main
  8854  0022A0  0060  F670  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  8855  0022A6  90D8               	bcf	status,0,c
  8856  0022A8  0103               	movlb	3	; () banked
  8857  0022AA  379F               	rlcf	??_main& (0+255),f,b
  8858  0022AC  37A0               	rlcf	(??_main+1)& (0+255),f,b
  8859  0022AE  0E5E               	movlw	94
  8860  0022B0  259F               	addwf	??_main& (0+255),w,b
  8861  0022B2  0100               	movlb	0	; () banked
  8862  0022B4  6F95               	movwf	timeElapsed@duration& (0+255),b
  8863  0022B6  0E01               	movlw	1
  8864  0022B8  0103               	movlb	3	; () banked
  8865  0022BA  21A0               	addwfc	(??_main+1)& (0+255),w,b
  8866  0022BC  0100               	movlb	0	; () banked
  8867  0022BE  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8868  0022C0  EC8A  F04D         	call	_timeElapsed	;wreg free
  8869  0022C4  0900               	iorlw	0
  8870  0022C6  B4D8               	btfsc	status,2,c
  8871  0022C8  D26C               	goto	l1877
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;main.c: 856:                                     aCaptGetResult(Flt0PSensor, &pAvgUShor
      +                          t);
  8875  0022CA  0EEB               	movlw	low _pAvgUShort
  8876  0022CC  0101               	movlb	1	; () banked
  8877  0022CE  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8878  0022D0  0E01               	movlw	high _pAvgUShort
  8879  0022D2  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8880  0022D4  0E03               	movlw	3
  8881  0022D6  EC04  F032         	call	_aCaptGetResult
  8882                           
  8883                           ;main.c: 857:                                     pPlatExp = pAvgUShort;
  8884  0022DA  C1EB  F2CF         	movff	_pAvgUShort,_pPlatExp
  8885  0022DE  C1EC  F2D0         	movff	_pAvgUShort+1,_pPlatExp+1
  8886                           
  8887                           ;main.c: 859:                                     tmpVal = pPlatExp - pValveActuation;
  8888  0022E2  0101               	movlb	1	; () banked
  8889  0022E4  51E5               	movf	_pValveActuation& (0+255),w,b
  8890  0022E6  0102               	movlb	2	; () banked
  8891  0022E8  5DCF               	subwf	_pPlatExp& (0+255),w,b
  8892  0022EA  0103               	movlb	3	; () banked
  8893  0022EC  6FBF               	movwf	main@tmpVal& (0+255),b
  8894  0022EE  0101               	movlb	1	; () banked
  8895  0022F0  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  8896  0022F2  0102               	movlb	2	; () banked
  8897  0022F4  59D0               	subwfb	(_pPlatExp+1)& (0+255),w,b
  8898  0022F6  0103               	movlb	3	; () banked
  8899  0022F8  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  8900                           
  8901                           ; BSR set to: 3
  8902                           ;main.c: 860:                                     pExpOS = (3 * pExpOS + tmpVal) / 4;
  8903  0022FA  0060  F784  F09B   	movff	_pExpOS,___wmul@multiplier
  8904  002300  0060  F788  F09C   	movff	_pExpOS+1,___wmul@multiplier+1
  8905  002306  0E00               	movlw	0
  8906  002308  0100               	movlb	0	; () banked
  8907  00230A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8908  00230C  0E03               	movlw	3
  8909  00230E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  8910  002310  ECA2  F04D         	call	___wmul	;wreg free
  8911  002314  0103               	movlb	3	; () banked
  8912  002316  51BF               	movf	main@tmpVal& (0+255),w,b
  8913  002318  0100               	movlb	0	; () banked
  8914  00231A  259B               	addwf	?___wmul& (0+255),w,b
  8915  00231C  6FA1               	movwf	___awdiv@dividend& (0+255),b
  8916  00231E  0103               	movlb	3	; () banked
  8917  002320  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  8918  002322  0100               	movlb	0	; () banked
  8919  002324  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  8920  002326  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  8921  002328  0E00               	movlw	0
  8922  00232A  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  8923  00232C  0E04               	movlw	4
  8924  00232E  6FA3               	movwf	___awdiv@divisor& (0+255),b
  8925  002330  ECF9  F042         	call	___awdiv	;wreg free
  8926  002334  0060  F284  F1E1   	movff	?___awdiv,_pExpOS
  8927  00233A  0060  F288  F1E2   	movff	?___awdiv+1,_pExpOS+1
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;main.c: 862:                                     aCaptRstFlt(Flt2PSensor);
  8931  002340  0E05               	movlw	5
  8932  002342  ECED  F03B         	call	_aCaptRstFlt
  8933                           
  8934                           ; BSR set to: 57
  8935                           ;main.c: 863:                                     aCaptRstFlt(Flt3PSensor);
  8936  002346  0E06               	movlw	6
  8937  002348  ECED  F03B         	call	_aCaptRstFlt
  8938                           
  8939                           ; BSR set to: 57
  8940                           ;main.c: 864:                                     OSCheck = 0;
  8941  00234C  0E00               	movlw	0
  8942  00234E  0101               	movlb	1	; () banked
  8943  002350  6FC3               	movwf	_OSCheck& (0+255),b
  8944                           
  8945                           ; BSR set to: 1
  8946                           ;main.c: 865:                                     printf ("PE OSC T %d - Pi %d P0 %d\n",
      +                           timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*(
      +                          (int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) 
      +                          pAvgUShort))>>8)));
  8947  002352  0E81               	movlw	low STR_24
  8948  002354  6F46               	movwf	printf@fmt& (0+255),b
  8949  002356  0EFC               	movlw	high STR_24
  8950  002358  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8951  00235A  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8952  002360  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8953  002366  EC7B  F051         	call	_timeGet	;wreg free
  8954  00236A  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8955  002370  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8956  002376  EC0D  F04D         	call	_timeDiff	;wreg free
  8957  00237A  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8958  002380  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8959  002386  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8960  00238C  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8961  002392  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8962  002394  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8963  002396  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8964  002398  0E45               	movlw	69
  8965  00239A  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8966  00239C  0E00               	movlw	0
  8967  00239E  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8968  0023A0  0E00               	movlw	0
  8969  0023A2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8970  0023A4  ECC7  F049         	call	___tmul	;wreg free
  8971  0023A8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8972  0023AE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8973  0023B4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8974  0023B6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8975  0023B8  698D               	setf	(?___tmul+2)& (0+255),b
  8976  0023BA  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8977  0023C0  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8978  0023C6  0060  F7AC  F08B   	movff	_pAvgUShort,___tmul@multiplier
  8979  0023CC  0060  F7B0  F08C   	movff	_pAvgUShort+1,___tmul@multiplier+1
  8980  0023D2  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8981  0023D4  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8982  0023D6  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8983  0023D8  0E45               	movlw	69
  8984  0023DA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8985  0023DC  0E00               	movlw	0
  8986  0023DE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8987  0023E0  0E00               	movlw	0
  8988  0023E2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8989  0023E4  ECC7  F049         	call	___tmul	;wreg free
  8990  0023E8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8991  0023EE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8992  0023F4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8993  0023F6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8994  0023F8  698D               	setf	(?___tmul+2)& (0+255),b
  8995  0023FA  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8996  002400  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8997  002406  ECE9  F04E         	call	_printf	;wreg free
  8998  00240A  D1CB               	goto	l1877
  8999  00240C                     l21115:
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;main.c: 871:                                 aCaptGetResult(Flt2PSensor, &bdP1);
  9003  00240C  0EE9               	movlw	low _bdP1
  9004  00240E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9005  002410  0E01               	movlw	high _bdP1
  9006  002412  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9007  002414  0E05               	movlw	5
  9008  002416  EC04  F032         	call	_aCaptGetResult
  9009                           
  9010                           ;main.c: 872:                                 aCaptGetResult(Flt3PSensor, &bdP2);
  9011  00241A  0ED2               	movlw	low _bdP2
  9012  00241C  0101               	movlb	1	; () banked
  9013  00241E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9014  002420  6B61               	clrf	(aCaptGetResult@outVal+1)& (0+255),b
  9015  002422  0E06               	movlw	6
  9016  002424  EC04  F032         	call	_aCaptGetResult
  9017                           
  9018                           ;main.c: 873:                                 if (((bdP1 + intBdTrig) < bdP2) || (keyPee
      +                          k() == 4)) {
  9019  002428  0102               	movlb	2	; () banked
  9020  00242A  514A               	movf	_intBdTrig& (0+255),w,b
  9021  00242C  0101               	movlb	1	; () banked
  9022  00242E  25E9               	addwf	_bdP1& (0+255),w,b
  9023  002430  0103               	movlb	3	; () banked
  9024  002432  6F9F               	movwf	??_main& (0+255),b
  9025  002434  0102               	movlb	2	; () banked
  9026  002436  514B               	movf	(_intBdTrig+1)& (0+255),w,b
  9027  002438  0101               	movlb	1	; () banked
  9028  00243A  21EA               	addwfc	(_bdP1+1)& (0+255),w,b
  9029  00243C  0103               	movlb	3	; () banked
  9030  00243E  6FA0               	movwf	(??_main+1)& (0+255),b
  9031  002440  0100               	movlb	0	; () banked
  9032  002442  51D2               	movf	_bdP2& (0+255),w,b
  9033  002444  0103               	movlb	3	; () banked
  9034  002446  5D9F               	subwf	??_main& (0+255),w,b
  9035  002448  51A0               	movf	(??_main+1)& (0+255),w,b
  9036  00244A  0A80               	xorlw	128
  9037  00244C  6FA1               	movwf	(??_main+2)& (0+255),b
  9038  00244E  0100               	movlb	0	; () banked
  9039  002450  51D3               	movf	(_bdP2+1)& (0+255),w,b
  9040  002452  0A80               	xorlw	128
  9041  002454  0103               	movlb	3	; () banked
  9042  002456  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9043  002458  A0D8               	btfss	status,0,c
  9044  00245A  D005               	goto	u23170
  9045                           
  9046                           ; BSR set to: 3
  9047  00245C  EC96  F046         	call	_keyPeek	;wreg free
  9048  002460  0A04               	xorlw	4
  9049  002462  A4D8               	btfss	status,2,c
  9050  002464  D0A6               	goto	l21133
  9051  002466                     u23170:
  9052                           
  9053                           ;main.c: 875:                                     printf ("BD VO T %d - Pi %d P50 %d P20
      +                          00 %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((
      +                          int24_t) bdP1))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) bd
      +                          P1))>>8)));
  9054  002466  0EE9               	movlw	low STR_25
  9055  002468  0101               	movlb	1	; () banked
  9056  00246A  6F46               	movwf	printf@fmt& (0+255),b
  9057  00246C  0EFB               	movlw	high STR_25
  9058  00246E  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9059  002470  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  9060  002476  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9061  00247C  EC7B  F051         	call	_timeGet	;wreg free
  9062  002480  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  9063  002486  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  9064  00248C  EC0D  F04D         	call	_timeDiff	;wreg free
  9065  002490  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9066  002496  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9067  00249C  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  9068  0024A2  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9069  0024A8  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9070  0024AA  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9071  0024AC  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9072  0024AE  0E45               	movlw	69
  9073  0024B0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9074  0024B2  0E00               	movlw	0
  9075  0024B4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9076  0024B6  0E00               	movlw	0
  9077  0024B8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9078  0024BA  ECC7  F049         	call	___tmul	;wreg free
  9079  0024BE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9080  0024C4  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9081  0024CA  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9082  0024CC  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9083  0024CE  698D               	setf	(?___tmul+2)& (0+255),b
  9084  0024D0  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9085  0024D6  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9086  0024DC  0060  F7A4  F08B   	movff	_bdP1,___tmul@multiplier
  9087  0024E2  0060  F7A8  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9088  0024E8  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9089  0024EA  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9090  0024EC  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9091  0024EE  0E45               	movlw	69
  9092  0024F0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9093  0024F2  0E00               	movlw	0
  9094  0024F4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9095  0024F6  0E00               	movlw	0
  9096  0024F8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9097  0024FA  ECC7  F049         	call	___tmul	;wreg free
  9098  0024FE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9099  002504  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9100  00250A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9101  00250C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9102  00250E  698D               	setf	(?___tmul+2)& (0+255),b
  9103  002510  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9104  002516  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9105  00251C  0060  F7A4  F08B   	movff	_bdP1,___tmul@multiplier
  9106  002522  0060  F7A8  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9107  002528  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9108  00252A  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9109  00252C  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9110  00252E  0E45               	movlw	69
  9111  002530  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9112  002532  0E00               	movlw	0
  9113  002534  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9114  002536  0E00               	movlw	0
  9115  002538  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9116  00253A  ECC7  F049         	call	___tmul	;wreg free
  9117  00253E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9118  002544  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9119  00254A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9120  00254C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9121  00254E  698D               	setf	(?___tmul+2)& (0+255),b
  9122  002550  0060  F22C  F14E   	movff	?___tmul,?_printf+8
  9123  002556  0060  F230  F14F   	movff	?___tmul+1,?_printf+9
  9124  00255C  ECE9  F04E         	call	_printf	;wreg free
  9125                           
  9126                           ; BSR set to: 2
  9127                           ;main.c: 876:                                     LATDbits.LATD6 = 1;
  9128  002560  8CBD               	bsf	189,6,c	;volatile
  9129                           
  9130                           ; BSR set to: 2
  9131                           ;main.c: 877:                                     if ((bdP1 + intBdTrig) < bdP2) {
  9132  002562  514A               	movf	_intBdTrig& (0+255),w,b
  9133  002564  0101               	movlb	1	; () banked
  9134  002566  25E9               	addwf	_bdP1& (0+255),w,b
  9135  002568  0103               	movlb	3	; () banked
  9136  00256A  6F9F               	movwf	??_main& (0+255),b
  9137  00256C  0102               	movlb	2	; () banked
  9138  00256E  514B               	movf	(_intBdTrig+1)& (0+255),w,b
  9139  002570  0101               	movlb	1	; () banked
  9140  002572  21EA               	addwfc	(_bdP1+1)& (0+255),w,b
  9141  002574  0103               	movlb	3	; () banked
  9142  002576  6FA0               	movwf	(??_main+1)& (0+255),b
  9143  002578  0100               	movlb	0	; () banked
  9144  00257A  51D2               	movf	_bdP2& (0+255),w,b
  9145  00257C  0103               	movlb	3	; () banked
  9146  00257E  5D9F               	subwf	??_main& (0+255),w,b
  9147  002580  51A0               	movf	(??_main+1)& (0+255),w,b
  9148  002582  0A80               	xorlw	128
  9149  002584  6FA1               	movwf	(??_main+2)& (0+255),b
  9150  002586  0100               	movlb	0	; () banked
  9151  002588  51D3               	movf	(_bdP2+1)& (0+255),w,b
  9152  00258A  0A80               	xorlw	128
  9153  00258C  0103               	movlb	3	; () banked
  9154  00258E  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9155  002590  B0D8               	btfsc	status,0,c
  9156  002592  D204               	goto	l21171
  9157                           
  9158                           ; BSR set to: 3
  9159                           ;main.c: 878:                                         sBreath = 1;
  9160  002594  0E01               	movlw	1
  9161  002596  0101               	movlb	1	; () banked
  9162  002598  6FC9               	movwf	_sBreath& (0+255),b
  9163                           
  9164                           ; BSR set to: 1
  9165                           ;main.c: 879:                                         rCycleTime = timeGet();
  9166  00259A  EC7B  F051         	call	_timeGet	;wreg free
  9167  00259E  0060  F24C  F1CF   	movff	?_timeGet,_rCycleTime
  9168  0025A4  0060  F250  F1D0   	movff	?_timeGet+1,_rCycleTime+1
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;main.c: 880:                                         bRateUpdt(1);
  9172  0025AA  0E01               	movlw	1
  9173  0025AC  ECAE  F03E         	call	_bRateUpdt
  9174  0025B0  D1F5               	goto	l21171
  9175  0025B2                     l21133:
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;main.c: 886:                                 if (timeElapsed(rValveActuationTstamp, rSV
      +                          2ValveCRT << 2)) {
  9179  0025B2  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  9180  0025B8  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  9181  0025BE  0060  F66C  F39F   	movff	_rSV2ValveCRT,??_main
  9182  0025C4  0060  F670  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  9183  0025CA  0103               	movlb	3	; () banked
  9184  0025CC  90D8               	bcf	status,0,c
  9185  0025CE  379F               	rlcf	??_main& (0+255),f,b
  9186  0025D0  37A0               	rlcf	(??_main+1)& (0+255),f,b
  9187  0025D2  90D8               	bcf	status,0,c
  9188  0025D4  379F               	rlcf	??_main& (0+255),f,b
  9189  0025D6  37A0               	rlcf	(??_main+1)& (0+255),f,b
  9190  0025D8  0060  FE7C  F095   	movff	??_main,timeElapsed@duration
  9191  0025DE  0060  FE80  F096   	movff	??_main+1,timeElapsed@duration+1
  9192  0025E4  EC8A  F04D         	call	_timeElapsed	;wreg free
  9193  0025E8  0900               	iorlw	0
  9194  0025EA  B4D8               	btfsc	status,2,c
  9195  0025EC  D0DA               	goto	l1877
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;main.c: 887:                                     if (QuantaCheck) {
  9199  0025EE  0101               	movlb	1	; () banked
  9200  0025F0  51C2               	movf	_QuantaCheck& (0+255),w,b
  9201  0025F2  B4D8               	btfsc	status,2,c
  9202  0025F4  D041               	goto	l21151
  9203                           
  9204                           ; BSR set to: 1
  9205                           ;main.c: 888:                                         QuantaCheck = 0;
  9206  0025F6  0E00               	movlw	0
  9207  0025F8  6FC2               	movwf	_QuantaCheck& (0+255),b
  9208                           
  9209                           ; BSR set to: 1
  9210                           ;main.c: 889:                                         tmpVal = (bdP1 - pValveActuation);
  9211  0025FA  51E5               	movf	_pValveActuation& (0+255),w,b
  9212  0025FC  5DE9               	subwf	_bdP1& (0+255),w,b
  9213  0025FE  0103               	movlb	3	; () banked
  9214  002600  6FBF               	movwf	main@tmpVal& (0+255),b
  9215  002602  0101               	movlb	1	; () banked
  9216  002604  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  9217  002606  59EA               	subwfb	(_bdP1+1)& (0+255),w,b
  9218  002608  0103               	movlb	3	; () banked
  9219  00260A  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  9220                           
  9221                           ; BSR set to: 3
  9222                           ;main.c: 890:                                         if (tmpVal > ((int16_t) ((0.045*40
      +                          96+2)/5)*8)) {
  9223  00260C  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  9224  00260E  D00A               	goto	l21145
  9225  002610  0E29               	movlw	41
  9226  002612  5DBF               	subwf	main@tmpVal& (0+255),w,b
  9227  002614  0E01               	movlw	1
  9228  002616  59C0               	subwfb	(main@tmpVal+1)& (0+255),w,b
  9229  002618  A0D8               	btfss	status,0,c
  9230  00261A  D004               	goto	l21145
  9231                           
  9232                           ; BSR set to: 3
  9233                           ;main.c: 891:                                             tmpVal = ((int16_t) ((0.045*40
      +                          96+2)/5)*8);
  9234  00261C  0E01               	movlw	1
  9235  00261E  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  9236  002620  0E28               	movlw	40
  9237  002622  6FBF               	movwf	main@tmpVal& (0+255),b
  9238  002624                     l21145:
  9239                           
  9240                           ; BSR set to: 3
  9241                           ;main.c: 894:                                         pQuantaExp = (3 * tmpVal + pQuanta
      +                          Exp) / 4;
  9242  002624  0060  FEFC  F09B   	movff	main@tmpVal,___wmul@multiplier
  9243  00262A  0060  FF00  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  9244  002630  0E00               	movlw	0
  9245  002632  0100               	movlb	0	; () banked
  9246  002634  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9247  002636  0E03               	movlw	3
  9248  002638  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  9249  00263A  ECA2  F04D         	call	___wmul	;wreg free
  9250  00263E  0101               	movlb	1	; () banked
  9251  002640  51D3               	movf	_pQuantaExp& (0+255),w,b
  9252  002642  0100               	movlb	0	; () banked
  9253  002644  259B               	addwf	?___wmul& (0+255),w,b
  9254  002646  6FA1               	movwf	___awdiv@dividend& (0+255),b
  9255  002648  0101               	movlb	1	; () banked
  9256  00264A  51D4               	movf	(_pQuantaExp+1)& (0+255),w,b
  9257  00264C  0100               	movlb	0	; () banked
  9258  00264E  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  9259  002650  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  9260  002652  0E00               	movlw	0
  9261  002654  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  9262  002656  0E04               	movlw	4
  9263  002658  6FA3               	movwf	___awdiv@divisor& (0+255),b
  9264  00265A  ECF9  F042         	call	___awdiv	;wreg free
  9265  00265E  0060  F284  F1D3   	movff	?___awdiv,_pQuantaExp
  9266  002664  0060  F288  F1D4   	movff	?___awdiv+1,_pQuantaExp+1
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;main.c: 895:                                         if (pQuantaExp < 0) {
  9270  00266A  0101               	movlb	1	; () banked
  9271  00266C  AFD4               	btfss	(_pQuantaExp+1)& (0+255),7,b
  9272  00266E  D004               	goto	l21151
  9273                           
  9274                           ; BSR set to: 1
  9275                           ;main.c: 896:                                             pQuantaExp = 0;
  9276  002670  0E00               	movlw	0
  9277  002672  6FD4               	movwf	(_pQuantaExp+1)& (0+255),b
  9278  002674  0E00               	movlw	0
  9279  002676  6FD3               	movwf	_pQuantaExp& (0+255),b
  9280  002678                     l21151:
  9281                           
  9282                           ; BSR set to: 1
  9283                           ;main.c: 899:                                     if ((bdP1 + (pQuantaExp >> 1)) < (intP
      +                          EEP - ((int16_t) ((0.045*4096+2)/5)*1))) {
  9284  002678  0EDB               	movlw	219
  9285  00267A  0103               	movlb	3	; () banked
  9286  00267C  6F9F               	movwf	??_main& (0+255),b
  9287  00267E  0EFF               	movlw	255
  9288  002680  6FA0               	movwf	(??_main+1)& (0+255),b
  9289  002682  0060  F6C4  F3A1   	movff	_intPEEP,??_main+2
  9290  002688  0060  F6C8  F3A2   	movff	_intPEEP+1,??_main+3
  9291  00268E  519F               	movf	??_main& (0+255),w,b
  9292  002690  27A1               	addwf	(??_main+2)& (0+255),f,b
  9293  002692  51A0               	movf	(??_main+1)& (0+255),w,b
  9294  002694  23A2               	addwfc	(??_main+3)& (0+255),f,b
  9295  002696  0101               	movlb	1	; () banked
  9296  002698  35D4               	rlcf	(_pQuantaExp+1)& (0+255),w,b
  9297  00269A  31D4               	rrcf	(_pQuantaExp+1)& (0+255),w,b
  9298  00269C  0103               	movlb	3	; () banked
  9299  00269E  6FA4               	movwf	(??_main+5)& (0+255),b
  9300  0026A0  0101               	movlb	1	; () banked
  9301  0026A2  31D3               	rrcf	_pQuantaExp& (0+255),w,b
  9302  0026A4  0103               	movlb	3	; () banked
  9303  0026A6  6FA3               	movwf	(??_main+4)& (0+255),b
  9304  0026A8  0101               	movlb	1	; () banked
  9305  0026AA  51E9               	movf	_bdP1& (0+255),w,b
  9306  0026AC  0103               	movlb	3	; () banked
  9307  0026AE  27A3               	addwf	(??_main+4)& (0+255),f,b
  9308  0026B0  0101               	movlb	1	; () banked
  9309  0026B2  51EA               	movf	(_bdP1+1)& (0+255),w,b
  9310  0026B4  0103               	movlb	3	; () banked
  9311  0026B6  23A4               	addwfc	(??_main+5)& (0+255),f,b
  9312  0026B8  51A1               	movf	(??_main+2)& (0+255),w,b
  9313  0026BA  5DA3               	subwf	(??_main+4)& (0+255),w,b
  9314  0026BC  51A4               	movf	(??_main+5)& (0+255),w,b
  9315  0026BE  0A80               	xorlw	128
  9316  0026C0  6FA5               	movwf	(??_main+6)& (0+255),b
  9317  0026C2  51A2               	movf	(??_main+3)& (0+255),w,b
  9318  0026C4  0A80               	xorlw	128
  9319  0026C6  59A5               	subwfb	(??_main+6)& (0+255),w,b
  9320  0026C8  B0D8               	btfsc	status,0,c
  9321  0026CA  D06B               	goto	l1877
  9322                           
  9323                           ; BSR set to: 3
  9324                           ;main.c: 900:                                         LATAbits.LATA2 = 0;LATCbits.LATC3 
      +                          = 1;
  9325  0026CC  94BA               	bcf	186,2,c	;volatile
  9326  0026CE  86BC               	bsf	188,3,c	;volatile
  9327                           
  9328                           ; BSR set to: 3
  9329                           ;main.c: 901:                                         rValveActuationTstamp = timeGet();
  9330  0026D0  EC7B  F051         	call	_timeGet	;wreg free
  9331  0026D4  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  9332  0026DA  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;main.c: 902:                                         QuantaCheck = 1;
  9336  0026E0  0E01               	movlw	1
  9337  0026E2  0101               	movlb	1	; () banked
  9338  0026E4  6FC2               	movwf	_QuantaCheck& (0+255),b
  9339                           
  9340                           ; BSR set to: 1
  9341                           ;main.c: 903:                                         pValveActuation = pInst;
  9342  0026E6  C1EF  F1E5         	movff	_pInst,_pValveActuation
  9343  0026EA  C1F0  F1E6         	movff	_pInst+1,_pValveActuation+1
  9344                           
  9345                           ; BSR set to: 1
  9346                           ;main.c: 904:                                         printf ("PE VO T %d - Pi %d\n", ti
      +                          meDiff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((
      +                          int24_t) bdP1))>>8)));
  9347  0026EE  0EF4               	movlw	low STR_26
  9348  0026F0  6F46               	movwf	printf@fmt& (0+255),b
  9349  0026F2  0EFC               	movlw	high STR_26
  9350  0026F4  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9351  0026F6  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  9352  0026FC  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9353  002702  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  9354  002708  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  9355  00270E  EC0D  F04D         	call	_timeDiff	;wreg free
  9356  002712  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9357  002718  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9358  00271E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  9359  002724  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9360  00272A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9361  00272C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9362  00272E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9363  002730  0E45               	movlw	69
  9364  002732  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9365  002734  0E00               	movlw	0
  9366  002736  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9367  002738  0E00               	movlw	0
  9368  00273A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9369  00273C  ECC7  F049         	call	___tmul	;wreg free
  9370  002740  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9371  002746  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9372  00274C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9373  00274E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9374  002750  698D               	setf	(?___tmul+2)& (0+255),b
  9375  002752  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9376  002758  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9377  00275E  0060  F7A4  F08B   	movff	_bdP1,___tmul@multiplier
  9378  002764  0060  F7A8  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9379  00276A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9380  00276C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9381  00276E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9382  002770  0E45               	movlw	69
  9383  002772  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9384  002774  0E00               	movlw	0
  9385  002776  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9386  002778  0E00               	movlw	0
  9387  00277A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9388  00277C  ECC7  F049         	call	___tmul	;wreg free
  9389  002780  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9390  002786  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9391  00278C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9392  00278E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9393  002790  698D               	setf	(?___tmul+2)& (0+255),b
  9394  002792  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9395  002798  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9396  00279E  ECE9  F04E         	call	_printf	;wreg free
  9397  0027A2                     l1877:
  9398                           
  9399                           ;main.c: 912:                         screenMng();
  9400                           
  9401                           ; BSR set to: 3
  9402  0027A2  ECD7  F018         	call	_screenMng	;wreg free
  9403                           
  9404                           ;main.c: 913:                         MenuMng();
  9405  0027A6  ECD8  F014         	call	_MenuMng	;wreg free
  9406  0027AA                     l21167:
  9407                           
  9408                           ;main.c: 917:                 if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  9409  0027AA  0EB4               	movlw	low main@printTime
  9410  0027AC  0100               	movlb	0	; () banked
  9411  0027AE  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  9412  0027B0  0E03               	movlw	high main@printTime
  9413  0027B2  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  9414  0027B4  0E00               	movlw	0
  9415  0027B6  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
  9416  0027B8  0E14               	movlw	20
  9417  0027BA  6F95               	movwf	timeElapsedR@duration& (0+255),b
  9418  0027BC  EC66  F046         	call	_timeElapsedR	;wreg free
  9419  0027C0  0900               	iorlw	0
  9420  0027C2  B4D8               	btfsc	status,2,c
  9421  0027C4  EF61  F00F         	goto	l21013
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;main.c: 918:                     aCaptGetResult(MainPSensor, &pInst);
  9425  0027C8  0EEF               	movlw	low _pInst
  9426  0027CA  0101               	movlb	1	; () banked
  9427  0027CC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9428  0027CE  0E01               	movlw	high _pInst
  9429  0027D0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9430  0027D2  0E00               	movlw	0
  9431  0027D4  EC04  F032         	call	_aCaptGetResult
  9432                           
  9433                           ;main.c: 919:                     aCaptGetResult(Flt1PSensor, &pAvgShort);
  9434  0027D8  0EED               	movlw	low _pAvgShort
  9435  0027DA  0101               	movlb	1	; () banked
  9436  0027DC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9437  0027DE  0E01               	movlw	high _pAvgShort
  9438  0027E0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9439  0027E2  0E04               	movlw	4
  9440  0027E4  EC04  F032         	call	_aCaptGetResult
  9441                           
  9442                           ;main.c: 920:                     printf ("PE T %d - Pi %d Pd %d. R %d Pep %d POS %d PQ 
      +                          %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)
      +                          *1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int
      +                          24_t) pInst - pAvgShort))>>8)), rSV3ValveORT, ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pPlatExp))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*
      +                          1))*((int24_t) pExpOS))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int
      +                          24_t) pQuantaExp))>>8)) );
  9443  0027E8  0E16               	movlw	low STR_27
  9444  0027EA  0101               	movlb	1	; () banked
  9445  0027EC  6F46               	movwf	printf@fmt& (0+255),b
  9446  0027EE  0EFB               	movlw	high STR_27
  9447  0027F0  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9448  0027F2  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  9449  0027F8  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9450  0027FE  EC7B  F051         	call	_timeGet	;wreg free
  9451  002802  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  9452  002808  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  9453  00280E  EC0D  F04D         	call	_timeDiff	;wreg free
  9454  002812  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9455  002818  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9456  00281E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  9457  002824  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9458  00282A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9459  00282C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9460  00282E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9461  002830  0E45               	movlw	69
  9462  002832  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9463  002834  0E00               	movlw	0
  9464  002836  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9465  002838  0E00               	movlw	0
  9466  00283A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9467  00283C  ECC7  F049         	call	___tmul	;wreg free
  9468  002840  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9469  002846  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9470  00284C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9471  00284E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9472  002850  698D               	setf	(?___tmul+2)& (0+255),b
  9473  002852  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9474  002858  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9475  00285E  0060  F7BC  F39F   	movff	_pInst,??_main
  9476  002864  0060  F7C0  F3A0   	movff	_pInst+1,??_main+1
  9477  00286A  0103               	movlb	3	; () banked
  9478  00286C  6BA1               	clrf	(??_main+2)& (0+255),b
  9479  00286E  BFA0               	btfsc	(??_main+1)& (0+255),7,b
  9480  002870  69A1               	setf	(??_main+2)& (0+255),b
  9481  002872  0101               	movlb	1	; () banked
  9482  002874  51ED               	movf	_pAvgShort& (0+255),w,b
  9483  002876  0103               	movlb	3	; () banked
  9484  002878  5D9F               	subwf	??_main& (0+255),w,b
  9485  00287A  0100               	movlb	0	; () banked
  9486  00287C  6F8B               	movwf	___tmul@multiplier& (0+255),b
  9487  00287E  0101               	movlb	1	; () banked
  9488  002880  51EE               	movf	(_pAvgShort+1)& (0+255),w,b
  9489  002882  0103               	movlb	3	; () banked
  9490  002884  59A0               	subwfb	(??_main+1)& (0+255),w,b
  9491  002886  0100               	movlb	0	; () banked
  9492  002888  6F8C               	movwf	(___tmul@multiplier+1)& (0+255),b
  9493  00288A  0E00               	movlw	0
  9494  00288C  0101               	movlb	1	; () banked
  9495  00288E  BFEE               	btfsc	(_pAvgShort+1)& (0+255),7,b
  9496  002890  0EFF               	movlw	255
  9497  002892  0103               	movlb	3	; () banked
  9498  002894  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9499  002896  0100               	movlb	0	; () banked
  9500  002898  6F8D               	movwf	(___tmul@multiplier+2)& (0+255),b
  9501  00289A  0E45               	movlw	69
  9502  00289C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9503  00289E  0E00               	movlw	0
  9504  0028A0  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9505  0028A2  0E00               	movlw	0
  9506  0028A4  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9507  0028A6  ECC7  F049         	call	___tmul	;wreg free
  9508  0028AA  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9509  0028B0  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9510  0028B6  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9511  0028B8  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9512  0028BA  698D               	setf	(?___tmul+2)& (0+255),b
  9513  0028BC  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9514  0028C2  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9515  0028C8  0060  F664  F14E   	movff	_rSV3ValveORT,?_printf+8
  9516  0028CE  0060  F668  F14F   	movff	_rSV3ValveORT+1,?_printf+9
  9517  0028D4  0060  FB3C  F08B   	movff	_pPlatExp,___tmul@multiplier
  9518  0028DA  0060  FB40  F08C   	movff	_pPlatExp+1,___tmul@multiplier+1
  9519  0028E0  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9520  0028E2  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9521  0028E4  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9522  0028E6  0E45               	movlw	69
  9523  0028E8  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9524  0028EA  0E00               	movlw	0
  9525  0028EC  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9526  0028EE  0E00               	movlw	0
  9527  0028F0  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9528  0028F2  ECC7  F049         	call	___tmul	;wreg free
  9529  0028F6  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9530  0028FC  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9531  002902  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9532  002904  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9533  002906  698D               	setf	(?___tmul+2)& (0+255),b
  9534  002908  0060  F22C  F150   	movff	?___tmul,?_printf+10
  9535  00290E  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  9536  002914  0060  F784  F08B   	movff	_pExpOS,___tmul@multiplier
  9537  00291A  0060  F788  F08C   	movff	_pExpOS+1,___tmul@multiplier+1
  9538  002920  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9539  002922  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9540  002924  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9541  002926  0E45               	movlw	69
  9542  002928  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9543  00292A  0E00               	movlw	0
  9544  00292C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9545  00292E  0E00               	movlw	0
  9546  002930  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9547  002932  ECC7  F049         	call	___tmul	;wreg free
  9548  002936  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9549  00293C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9550  002942  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9551  002944  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9552  002946  698D               	setf	(?___tmul+2)& (0+255),b
  9553  002948  0060  F22C  F152   	movff	?___tmul,?_printf+12
  9554  00294E  0060  F230  F153   	movff	?___tmul+1,?_printf+13
  9555  002954  0060  F74C  F08B   	movff	_pQuantaExp,___tmul@multiplier
  9556  00295A  0060  F750  F08C   	movff	_pQuantaExp+1,___tmul@multiplier+1
  9557  002960  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9558  002962  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9559  002964  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9560  002966  0E45               	movlw	69
  9561  002968  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9562  00296A  0E00               	movlw	0
  9563  00296C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9564  00296E  0E00               	movlw	0
  9565  002970  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9566  002972  ECC7  F049         	call	___tmul	;wreg free
  9567  002976  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9568  00297C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9569  002982  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9570  002984  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9571  002986  698D               	setf	(?___tmul+2)& (0+255),b
  9572  002988  0060  F22C  F154   	movff	?___tmul,?_printf+14
  9573  00298E  0060  F230  F155   	movff	?___tmul+1,?_printf+15
  9574  002994  ECE9  F04E         	call	_printf	;wreg free
  9575  002998  EF61  F00F         	goto	l21013
  9576  00299C                     l21171:
  9577                           
  9578                           ;main.c: 352:         while (ctrlStatus != CTRL_SLEEP) {
  9579  00299C  0E03               	movlw	3
  9580  00299E  0101               	movlb	1	; () banked
  9581  0029A0  19C8               	xorwf	_ctrlStatus& (0+255),w,b
  9582  0029A2  A4D8               	btfss	status,2,c
  9583  0029A4  EF9E  F001         	goto	l1739
  9584                           
  9585                           ; BSR set to: 1
  9586                           ;main.c: 964:         CtrlPowerOff();
  9587  0029A8  EC29  F041         	call	_CtrlPowerOff	;wreg free
  9588  0029AC  EF7F  F000         	goto	l20425
  9589  0029B0                     __end_of_main:
  9590                           	opt callstack 0
  9591                           
  9592 ;; *************** function _vMeasureInit *****************
  9593 ;; Defined at:
  9594 ;;		line 35 in file "vMeasure.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 3F/1
  9605 ;;		On exit  : 3F/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;Total ram usage:        0 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:   18
  9615 ;; This function calls:
  9616 ;;		_TMR2_SetInterruptHandler
  9617 ;;		_TMR2_Start
  9618 ;; This function is called by:
  9619 ;;		_main
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text1
  9624  009E50                     __ptext1:
  9625                           	opt callstack 0
  9626  009E50                     _vMeasureInit:
  9627                           	opt callstack 12
  9628                           
  9629                           ; BSR set to: 1
  9630                           ;vMeasure.c: 36:     volume = 0;
  9631                           
  9632                           ; BSR set to: 1
  9633                           ;incstack = 0
  9634  009E50  0E00               	movlw	0
  9635  009E52  0102               	movlb	2	; () banked
  9636  009E54  6F2B               	movwf	_volume& (0+255),b
  9637  009E56  0E00               	movlw	0
  9638  009E58  6F2C               	movwf	(_volume+1)& (0+255),b
  9639  009E5A  0E00               	movlw	0
  9640  009E5C  6F2D               	movwf	(_volume+2)& (0+255),b
  9641  009E5E  0E00               	movlw	0
  9642  009E60  6F2E               	movwf	(_volume+3)& (0+255),b
  9643                           
  9644                           ; BSR set to: 2
  9645                           ;vMeasure.c: 37:     TMR2_SetInterruptHandler(vMeasureIsr);
  9646  009E62  0E40               	movlw	low _vMeasureIsr
  9647  009E64  0100               	movlb	0	; () banked
  9648  009E66  6F8B               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9649  009E68  0E84               	movlw	high _vMeasureIsr
  9650  009E6A  6F8C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9651  009E6C  EC08  F052         	call	_TMR2_SetInterruptHandler	;wreg free
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;vMeasure.c: 38:     TMR2_Start();
  9655  009E70  ECDF  F052         	call	_TMR2_Start	;wreg free
  9656                           
  9657                           ; BSR set to: 0
  9658  009E74  0012               	return		;funcret
  9659  009E76                     __end_of_vMeasureInit:
  9660                           	opt callstack 0
  9661                           
  9662 ;; *************** function _TMR2_Start *****************
  9663 ;; Defined at:
  9664 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;		None
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;		None
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      void 
  9671 ;; Registers used:
  9672 ;;		None
  9673 ;; Tracked objects:
  9674 ;;		On entry : 3F/0
  9675 ;;		On exit  : 3F/0
  9676 ;;		Unchanged: 3F/0
  9677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9682 ;;Total ram usage:        0 bytes
  9683 ;; Hardware stack levels used:    1
  9684 ;; Hardware stack levels required when called:   17
  9685 ;; This function calls:
  9686 ;;		Nothing
  9687 ;; This function is called by:
  9688 ;;		_vMeasureInit
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text2
  9693  00A5BE                     __ptext2:
  9694                           	opt callstack 0
  9695  00A5BE                     _TMR2_Start:
  9696                           	opt callstack 12
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;incstack = 0
  9703  00A5BE  8EAC               	bsf	172,7,c	;volatile
  9704                           
  9705                           ; BSR set to: 0
  9706  00A5C0  0012               	return		;funcret
  9707  00A5C2                     __end_of_TMR2_Start:
  9708                           	opt callstack 0
  9709                           
  9710 ;; *************** function _timeInit *****************
  9711 ;; Defined at:
  9712 ;;		line 7 in file "time.c"
  9713 ;; Parameters:    Size  Location     Type
  9714 ;;		None
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;		None
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  1    wreg      void 
  9719 ;; Registers used:
  9720 ;;		cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 3F/39
  9723 ;;		On exit  : 3F/39
  9724 ;;		Unchanged: 3E/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;Total ram usage:        0 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; Hardware stack levels required when called:   18
  9733 ;; This function calls:
  9734 ;;		_TMR0_StartTimer
  9735 ;;		_TMR1_StartTimer
  9736 ;; This function is called by:
  9737 ;;		_main
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text3
  9742  00A506                     __ptext3:
  9743                           	opt callstack 0
  9744  00A506                     _timeInit:
  9745                           	opt callstack 12
  9746                           
  9747                           ; BSR set to: 57
  9748                           ;time.c: 8:     TMR0_StartTimer();
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;incstack = 0
  9752  00A506  ECE3  F052         	call	_TMR0_StartTimer	;wreg free
  9753                           
  9754                           ;time.c: 9:     TMR1_StartTimer();
  9755  00A50A  ECE1  F052         	call	_TMR1_StartTimer	;wreg free
  9756                           
  9757                           ; BSR set to: 57
  9758  00A50E  0012               	return		;funcret
  9759  00A510                     __end_of_timeInit:
  9760                           	opt callstack 0
  9761                           
  9762 ;; *************** function _TMR1_StartTimer *****************
  9763 ;; Defined at:
  9764 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		None
  9773 ;; Tracked objects:
  9774 ;;		On entry : 3F/39
  9775 ;;		On exit  : 3F/39
  9776 ;;		Unchanged: 3E/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:   17
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_timeInit
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text4
  9793  00A5C2                     __ptext4:
  9794                           	opt callstack 0
  9795  00A5C2                     _TMR1_StartTimer:
  9796                           	opt callstack 12
  9797                           
  9798                           ; BSR set to: 57
  9799                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
  9800                           
  9801                           ; BSR set to: 57
  9802                           ;incstack = 0
  9803  00A5C2  80B2               	bsf	178,0,c	;volatile
  9804                           
  9805                           ; BSR set to: 57
  9806  00A5C4  0012               	return		;funcret
  9807  00A5C6                     __end_of_TMR1_StartTimer:
  9808                           	opt callstack 0
  9809                           
  9810 ;; *************** function _TMR0_StartTimer *****************
  9811 ;; Defined at:
  9812 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		None
  9821 ;; Tracked objects:
  9822 ;;		On entry : 3F/39
  9823 ;;		On exit  : 3F/39
  9824 ;;		Unchanged: 3E/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:   17
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		_timeInit
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text5
  9841  00A5C6                     __ptext5:
  9842                           	opt callstack 0
  9843  00A5C6                     _TMR0_StartTimer:
  9844                           	opt callstack 12
  9845                           
  9846                           ; BSR set to: 57
  9847                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
  9848                           
  9849                           ; BSR set to: 57
  9850                           ;incstack = 0
  9851  00A5C6  8EB8               	bsf	184,7,c	;volatile
  9852                           
  9853                           ; BSR set to: 57
  9854  00A5C8  0012               	return		;funcret
  9855  00A5CA                     __end_of_TMR0_StartTimer:
  9856                           	opt callstack 0
  9857                           
  9858 ;; *************** function _screenInit *****************
  9859 ;; Defined at:
  9860 ;;		line 361 in file "menu.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;		None
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 3F/0
  9871 ;;		On exit  : 6/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;Total ram usage:        0 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:   23
  9881 ;; This function calls:
  9882 ;;		_LcdI2CInit
  9883 ;;		_blink
  9884 ;;		_clear
  9885 ;;		_printstrblock
  9886 ;;		_setCursor
  9887 ;;		_timeDelayMs
  9888 ;; This function is called by:
  9889 ;;		_main
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text6
  9894  008EA4                     __ptext6:
  9895                           	opt callstack 0
  9896  008EA4                     _screenInit:
  9897                           	opt callstack 7
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;menu.c: 362:     LcdI2CInit(0x27, 16, 2);
  9901                           
  9902                           ; BSR set to: 57
  9903                           ;incstack = 0
  9904  008EA4  0E10               	movlw	16
  9905  008EA6  6F9F               	movwf	LcdI2CInit@lcd_cols& (0+255),b
  9906  008EA8  0E02               	movlw	2
  9907  008EAA  6FA0               	movwf	LcdI2CInit@lcd_rows& (0+255),b
  9908  008EAC  0E27               	movlw	39
  9909  008EAE  EC5B  F03B         	call	_LcdI2CInit
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;menu.c: 363:     setCursor(0, 0);
  9913  008EB2  0E00               	movlw	0
  9914  008EB4  6F92               	movwf	setCursor@row& (0+255),b
  9915  008EB6  0E00               	movlw	0
  9916  008EB8  EC55  F04B         	call	_setCursor
  9917                           
  9918                           ;menu.c: 364:     printstrblock("OxyVitaEmergency");
  9919  008EBC  0ED2               	movlw	low STR_35
  9920  008EBE  0100               	movlb	0	; () banked
  9921  008EC0  6F8F               	movwf	printstrblock@c& (0+255),b
  9922  008EC2  0EFE               	movlw	high STR_35
  9923  008EC4  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  9924  008EC6  EC4E  F04F         	call	_printstrblock	;wreg free
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;menu.c: 365:     setCursor(0, 1);
  9928  008ECA  0E01               	movlw	1
  9929  008ECC  6F92               	movwf	setCursor@row& (0+255),b
  9930  008ECE  0E00               	movlw	0
  9931  008ED0  EC55  F04B         	call	_setCursor
  9932                           
  9933                           ;menu.c: 366:     printstrblock("Ventilator V1.0 ");
  9934  008ED4  0EB0               	movlw	low STR_36
  9935  008ED6  0100               	movlb	0	; () banked
  9936  008ED8  6F8F               	movwf	printstrblock@c& (0+255),b
  9937  008EDA  0EFE               	movlw	high STR_36
  9938  008EDC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  9939  008EDE  EC4E  F04F         	call	_printstrblock	;wreg free
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;menu.c: 367:     timeDelayMs(((time_t) 2000*1));
  9943  008EE2  0E07               	movlw	7
  9944  008EE4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  9945  008EE6  0ED0               	movlw	208
  9946  008EE8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  9947  008EEA  EC8B  F04C         	call	_timeDelayMs	;wreg free
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;menu.c: 368:     clear();
  9951  008EEE  EC13  F051         	call	_clear	;wreg free
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;menu.c: 369:     lcdPrintTR = 1;
  9955  008EF2  0E01               	movlw	1
  9956  008EF4  0101               	movlb	1	; () banked
  9957  008EF6  6FCE               	movwf	_lcdPrintTR& (0+255),b
  9958                           
  9959                           ; BSR set to: 1
  9960                           ;menu.c: 370:     blink();
  9961  008EF8  ECD7  F051         	call	_blink	;wreg free
  9962  008EFC  0012               	return		;funcret
  9963  008EFE                     __end_of_screenInit:
  9964                           	opt callstack 0
  9965                           
  9966 ;; *************** function _blink *****************
  9967 ;; Defined at:
  9968 ;;		line 266 in file "LiquidCrystal_I2C.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;		None
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;		None
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 3F/1
  9979 ;;		On exit  : 6/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;Total ram usage:        0 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:   21
  9989 ;; This function calls:
  9990 ;;		_command
  9991 ;; This function is called by:
  9992 ;;		_screenInit
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text7
  9997  00A3AE                     __ptext7:
  9998                           	opt callstack 0
  9999  00A3AE                     _blink:
 10000                           	opt callstack 8
 10001                           
 10002                           ; BSR set to: 1
 10003                           ;LiquidCrystal_I2C.c: 267:  _displaycontrol |= 0x01;
 10004                           
 10005                           ;incstack = 0
 10006  00A3AE  0100               	movlb	0	; () banked
 10007  00A3B0  81C7               	bsf	__displaycontrol& (0+255),0,b
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;LiquidCrystal_I2C.c: 268:  command(0x08 | _displaycontrol);
 10011  00A3B2  51C7               	movf	__displaycontrol& (0+255),w,b
 10012  00A3B4  0908               	iorlw	8
 10013  00A3B6  ECA7  F051         	call	_command
 10014  00A3BA  0012               	return		;funcret
 10015  00A3BC                     __end_of_blink:
 10016                           	opt callstack 0
 10017                           
 10018 ;; *************** function _LcdI2CInit *****************
 10019 ;; Defined at:
 10020 ;;		line 159 in file "LiquidCrystal_I2C.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  lcd_Addr        1    wreg     unsigned char 
 10023 ;;  lcd_cols        1   63[BANK0 ] unsigned char 
 10024 ;;  lcd_rows        1   64[BANK0 ] unsigned char 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  lcd_Addr        1   65[BANK0 ] unsigned char 
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      void 
 10029 ;; Registers used:
 10030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 3F/0
 10033 ;;		On exit  : 3F/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10036 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;Total ram usage:        3 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:   22
 10043 ;; This function calls:
 10044 ;;		_TMR6_SetInterruptHandler
 10045 ;;		_clear
 10046 ;;		_command
 10047 ;;		_display
 10048 ;;		_expanderWriteBlock
 10049 ;;		_home
 10050 ;;		_send4bits
 10051 ;;		_timeDelayMs
 10052 ;; This function is called by:
 10053 ;;		_screenInit
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text8
 10058  0076B6                     __ptext8:
 10059                           	opt callstack 0
 10060  0076B6                     _LcdI2CInit:
 10061                           	opt callstack 7
 10062                           
 10063                           ;incstack = 0
 10064                           ;LcdI2CInit@lcd_Addr stored from wreg
 10065  0076B6  6FA1               	movwf	LcdI2CInit@lcd_Addr& (0+255),b
 10066                           
 10067                           ;LiquidCrystal_I2C.c: 160:     _Addr = lcd_Addr;
 10068  0076B8  0060  F284  F1C0   	movff	LcdI2CInit@lcd_Addr,__Addr
 10069                           
 10070                           ;LiquidCrystal_I2C.c: 161:     _cols = lcd_cols;
 10071  0076BE  0060  F27C  F252   	movff	LcdI2CInit@lcd_cols,__cols
 10072                           
 10073                           ;LiquidCrystal_I2C.c: 162:     _rows = lcd_rows;
 10074  0076C4  0060  F280  F251   	movff	LcdI2CInit@lcd_rows,__rows
 10075                           
 10076                           ;LiquidCrystal_I2C.c: 163:     _backlightval = 0x08;
 10077  0076CA  0E08               	movlw	8
 10078  0076CC  0100               	movlb	0	; () banked
 10079  0076CE  6FC4               	movwf	__backlightval& (0+255),b	;volatile
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;LiquidCrystal_I2C.c: 164:     _numlines = 2;
 10083  0076D0  0E02               	movlw	2
 10084  0076D2  6FC5               	movwf	__numlines& (0+255),b
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;LiquidCrystal_I2C.c: 166:     _displayfunction = 0x00 | 0x08 | 0x00;
 10088  0076D4  0E08               	movlw	8
 10089  0076D6  6FC8               	movwf	__displayfunction& (0+255),b
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;LiquidCrystal_I2C.c: 168:     parBuffPtr = 0;
 10093  0076D8  0E00               	movlw	0
 10094  0076DA  6FC3               	movwf	_parBuffPtr& (0+255),b	;volatile
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;LiquidCrystal_I2C.c: 169:     parBuffLen = 0;
 10098  0076DC  0E00               	movlw	0
 10099  0076DE  6FC2               	movwf	_parBuffLen& (0+255),b	;volatile
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;LiquidCrystal_I2C.c: 170:     lcdBusy = 0;
 10103  0076E0  0E00               	movlw	0
 10104  0076E2  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;LiquidCrystal_I2C.c: 171:     TMR6_SetInterruptHandler(lcdIrqHandler);
 10108  0076E4  0E02               	movlw	low _lcdIrqHandler
 10109  0076E6  6F8B               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 10110  0076E8  0E7A               	movlw	high _lcdIrqHandler
 10111  0076EA  6F8C               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10112  0076EC  ECFA  F051         	call	_TMR6_SetInterruptHandler	;wreg free
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;LiquidCrystal_I2C.c: 176:     timeDelayMs(50);
 10116  0076F0  0E00               	movlw	0
 10117  0076F2  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10118  0076F4  0E32               	movlw	50
 10119  0076F6  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10120  0076F8  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;LiquidCrystal_I2C.c: 179:     expanderWriteBlock(_backlightval);
 10124  0076FC  51C4               	movf	__backlightval& (0+255),w,b	;volatile
 10125  0076FE  EC9F  F051         	call	_expanderWriteBlock
 10126                           
 10127                           ;LiquidCrystal_I2C.c: 180:     timeDelayMs(20);
 10128  007702  0E00               	movlw	0
 10129  007704  0100               	movlb	0	; () banked
 10130  007706  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10131  007708  0E14               	movlw	20
 10132  00770A  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10133  00770C  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;LiquidCrystal_I2C.c: 183:     send4bits(0x03 << 4, 0x4);
 10137  007710  0E04               	movlw	4
 10138  007712  6F8B               	movwf	send4bits@mode& (0+255),b
 10139  007714  0E30               	movlw	48
 10140  007716  ECAC  F047         	call	_send4bits
 10141  00771A                     l18877:
 10142  00771A  0100               	movlb	0	; () banked
 10143  00771C  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10144  00771E  A4D8               	btfss	status,2,c
 10145  007720  D7FC               	goto	l18877
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;LiquidCrystal_I2C.c: 185:     timeDelayMs(20);
 10149  007722  0E00               	movlw	0
 10150  007724  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10151  007726  0E14               	movlw	20
 10152  007728  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10153  00772A  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;LiquidCrystal_I2C.c: 186:     send4bits(0x03 << 4, 0x4);
 10157  00772E  0E04               	movlw	4
 10158  007730  6F8B               	movwf	send4bits@mode& (0+255),b
 10159  007732  0E30               	movlw	48
 10160  007734  ECAC  F047         	call	_send4bits
 10161  007738                     l18883:
 10162  007738  0100               	movlb	0	; () banked
 10163  00773A  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10164  00773C  A4D8               	btfss	status,2,c
 10165  00773E  D7FC               	goto	l18883
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;LiquidCrystal_I2C.c: 188:     timeDelayMs(20);
 10169  007740  0E00               	movlw	0
 10170  007742  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10171  007744  0E14               	movlw	20
 10172  007746  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10173  007748  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;LiquidCrystal_I2C.c: 189:     send4bits(0x03 << 4, 0x4);
 10177  00774C  0E04               	movlw	4
 10178  00774E  6F8B               	movwf	send4bits@mode& (0+255),b
 10179  007750  0E30               	movlw	48
 10180  007752  ECAC  F047         	call	_send4bits
 10181  007756                     l18889:
 10182  007756  0100               	movlb	0	; () banked
 10183  007758  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10184  00775A  A4D8               	btfss	status,2,c
 10185  00775C  D7FC               	goto	l18889
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;LiquidCrystal_I2C.c: 191:     timeDelayMs(20);
 10189  00775E  0E00               	movlw	0
 10190  007760  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10191  007762  0E14               	movlw	20
 10192  007764  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10193  007766  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;LiquidCrystal_I2C.c: 194:     send4bits(0x02 << 4, 0x4);
 10197  00776A  0E04               	movlw	4
 10198  00776C  6F8B               	movwf	send4bits@mode& (0+255),b
 10199  00776E  0E20               	movlw	32
 10200  007770  ECAC  F047         	call	_send4bits
 10201  007774                     l18895:
 10202  007774  0100               	movlb	0	; () banked
 10203  007776  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10204  007778  A4D8               	btfss	status,2,c
 10205  00777A  D7FC               	goto	l18895
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;LiquidCrystal_I2C.c: 196:     timeDelayMs(20);
 10209  00777C  0E00               	movlw	0
 10210  00777E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10211  007780  0E14               	movlw	20
 10212  007782  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10213  007784  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;LiquidCrystal_I2C.c: 199:     command(0x20 | _displayfunction);
 10217  007788  0E28               	movlw	40
 10218  00778A  ECA7  F051         	call	_command
 10219  00778E                     l18901:
 10220  00778E  0100               	movlb	0	; () banked
 10221  007790  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10222  007792  A4D8               	btfss	status,2,c
 10223  007794  D7FC               	goto	l18901
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;LiquidCrystal_I2C.c: 201:     timeDelayMs(20);
 10227  007796  0E00               	movlw	0
 10228  007798  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10229  00779A  0E14               	movlw	20
 10230  00779C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10231  00779E  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;LiquidCrystal_I2C.c: 204:     _displaycontrol = 0x04 | 0x00 | 0x00;
 10235  0077A2  0E04               	movlw	4
 10236  0077A4  6FC7               	movwf	__displaycontrol& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;LiquidCrystal_I2C.c: 205:     display();
 10240  0077A6  EC47  F052         	call	_display	;wreg free
 10241  0077AA                     l18909:
 10242  0077AA  0100               	movlb	0	; () banked
 10243  0077AC  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10244  0077AE  A4D8               	btfss	status,2,c
 10245  0077B0  D7FC               	goto	l18909
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;LiquidCrystal_I2C.c: 209:     clear();
 10249  0077B2  EC13  F051         	call	_clear	;wreg free
 10250  0077B6                     l18913:
 10251                           
 10252                           ; BSR set to: 0
 10253  0077B6  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10254  0077B8  A4D8               	btfss	status,2,c
 10255  0077BA  D7FD               	goto	l18913
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;LiquidCrystal_I2C.c: 213:     _displaymode = 0x02 | 0x00;
 10259  0077BC  0E02               	movlw	2
 10260  0077BE  6FC6               	movwf	__displaymode& (0+255),b
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;LiquidCrystal_I2C.c: 216:     command(0x04 | _displaymode);
 10264  0077C0  0E06               	movlw	6
 10265  0077C2  ECA7  F051         	call	_command
 10266  0077C6                     l18919:
 10267  0077C6  0100               	movlb	0	; () banked
 10268  0077C8  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10269  0077CA  A4D8               	btfss	status,2,c
 10270  0077CC  D7FC               	goto	l18919
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;LiquidCrystal_I2C.c: 219:     home();
 10274  0077CE  EC08  F051         	call	_home	;wreg free
 10275  0077D2                     l18923:
 10276                           
 10277                           ; BSR set to: 0
 10278  0077D2  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10279  0077D4  B4D8               	btfsc	status,2,c
 10280  0077D6  0012               	return	
 10281  0077D8  D7FC               	goto	l18923
 10282  0077DA                     __end_of_LcdI2CInit:
 10283                           	opt callstack 0
 10284                           
 10285 ;; *************** function _home *****************
 10286 ;; Defined at:
 10287 ;;		line 228 in file "LiquidCrystal_I2C.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;		None
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;		None
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 3F/0
 10298 ;;		On exit  : 3F/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;Total ram usage:        0 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:   21
 10308 ;; This function calls:
 10309 ;;		_command
 10310 ;;		_timeDelayMs
 10311 ;; This function is called by:
 10312 ;;		_LcdI2CInit
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           	psect	text9
 10317  00A210                     __ptext9:
 10318                           	opt callstack 0
 10319  00A210                     _home:
 10320                           	opt callstack 7
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;LiquidCrystal_I2C.c: 229:  command(0x02);
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;incstack = 0
 10327  00A210  0E02               	movlw	2
 10328  00A212  ECA7  F051         	call	_command
 10329                           
 10330                           ;LiquidCrystal_I2C.c: 230:  timeDelayMs(10);
 10331  00A216  0E00               	movlw	0
 10332  00A218  0100               	movlb	0	; () banked
 10333  00A21A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10334  00A21C  0E0A               	movlw	10
 10335  00A21E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10336  00A220  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10337                           
 10338                           ; BSR set to: 0
 10339  00A224  0012               	return		;funcret
 10340  00A226                     __end_of_home:
 10341                           	opt callstack 0
 10342                           
 10343 ;; *************** function _display *****************
 10344 ;; Defined at:
 10345 ;;		line 246 in file "LiquidCrystal_I2C.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;		None
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 3F/0
 10356 ;;		On exit  : 6/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10363 ;;Total ram usage:        0 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   21
 10366 ;; This function calls:
 10367 ;;		_command
 10368 ;; This function is called by:
 10369 ;;		_LcdI2CInit
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text10
 10374  00A48E                     __ptext10:
 10375                           	opt callstack 0
 10376  00A48E                     _display:
 10377                           	opt callstack 7
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;LiquidCrystal_I2C.c: 247:  _displaycontrol |= 0x04;
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;incstack = 0
 10384  00A48E  85C7               	bsf	__displaycontrol& (0+255),2,b
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;LiquidCrystal_I2C.c: 248:  command(0x08 | _displaycontrol);
 10388  00A490  51C7               	movf	__displaycontrol& (0+255),w,b
 10389  00A492  0908               	iorlw	8
 10390  00A494  ECA7  F051         	call	_command
 10391  00A498  0012               	return		;funcret
 10392  00A49A                     __end_of_display:
 10393                           	opt callstack 0
 10394                           
 10395 ;; *************** function _clear *****************
 10396 ;; Defined at:
 10397 ;;		line 223 in file "LiquidCrystal_I2C.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;		None
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;		None
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      void 
 10404 ;; Registers used:
 10405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10406 ;; Tracked objects:
 10407 ;;		On entry : 3F/0
 10408 ;;		On exit  : 3F/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;Total ram usage:        0 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:   21
 10418 ;; This function calls:
 10419 ;;		_command
 10420 ;;		_timeDelayMs
 10421 ;; This function is called by:
 10422 ;;		_LcdI2CInit
 10423 ;;		_screenInit
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           	psect	text11
 10428  00A226                     __ptext11:
 10429                           	opt callstack 0
 10430  00A226                     _clear:
 10431                           	opt callstack 8
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;LiquidCrystal_I2C.c: 224:  command(0x01);
 10435                           
 10436                           ;incstack = 0
 10437  00A226  0E01               	movlw	1
 10438  00A228  ECA7  F051         	call	_command
 10439                           
 10440                           ;LiquidCrystal_I2C.c: 225:  timeDelayMs(10);
 10441  00A22C  0E00               	movlw	0
 10442  00A22E  0100               	movlb	0	; () banked
 10443  00A230  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10444  00A232  0E0A               	movlw	10
 10445  00A234  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10446  00A236  EC8B  F04C         	call	_timeDelayMs	;wreg free
 10447                           
 10448                           ; BSR set to: 0
 10449  00A23A  0012               	return		;funcret
 10450  00A23C                     __end_of_clear:
 10451                           	opt callstack 0
 10452                           
 10453 ;; *************** function _inspOSMeasure *****************
 10454 ;; Defined at:
 10455 ;;		line 97 in file "main.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;		None
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;  tmpVal          2  107[BANK1 ] short 
 10460 ;;  tmpUVal         2  104[BANK1 ] unsigned short 
 10461 ;;  setScale        1  106[BANK1 ] char 
 10462 ;; Return value:  Size  Location     Type
 10463 ;;                  1    wreg      void 
 10464 ;; Registers used:
 10465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10466 ;; Tracked objects:
 10467 ;;		On entry : 3D/1
 10468 ;;		On exit  : 3F/2
 10469 ;;		Unchanged: 0/0
 10470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10473 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10474 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10475 ;;Total ram usage:       13 bytes
 10476 ;; Hardware stack levels used:    1
 10477 ;; Hardware stack levels required when called:   26
 10478 ;; This function calls:
 10479 ;;		___lmul
 10480 ;;		___ltdiv
 10481 ;;		___tmul
 10482 ;;		___wmul
 10483 ;;		_printf
 10484 ;;		_vMeasureGet
 10485 ;; This function is called by:
 10486 ;;		_main
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           	psect	text12
 10491  004DFC                     __ptext12:
 10492                           	opt callstack 0
 10493  004DFC                     _inspOSMeasure:
 10494                           	opt callstack 4
 10495                           
 10496                           ;main.c: 98:     uint16_t tmpUVal;;main.c: 99:     int16_t tmpVal;;main.c: 100:     int8
      +                          _t setScale;;main.c: 102:     switch (pInspOSVSet) {
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;incstack = 0
 10500  004DFC  D009               	goto	l19241
 10501  004DFE                     l19233:
 10502                           
 10503                           ; BSR set to: 1
 10504                           ;main.c: 104:             setScale = 3*2;
 10505  004DFE  0E06               	movlw	6
 10506  004E00  D005               	goto	L8
 10507  004E02                     l19235:
 10508                           
 10509                           ; BSR set to: 1
 10510                           ;main.c: 107:             setScale = 3*2/2;
 10511  004E02  0E03               	movlw	3
 10512  004E04  D003               	goto	L8
 10513  004E06                     l19237:
 10514                           
 10515                           ; BSR set to: 1
 10516                           ;main.c: 110:             setScale = 3*2/3;
 10517  004E06  0E02               	movlw	2
 10518  004E08  D001               	goto	L8
 10519  004E0A                     l19239:
 10520                           
 10521                           ; BSR set to: 1
 10522                           ;main.c: 113:           setScale = 0;
 10523  004E0A  0E00               	movlw	0
 10524  004E0C                     L8:
 10525  004E0C  6F6A               	movwf	inspOSMeasure@setScale& (0+255),b
 10526                           
 10527                           ;main.c: 114:     }
 10528  004E0E  D016               	goto	l19243
 10529  004E10                     l19241:
 10530  004E10  0060  F900  F160   	movff	_pInspOSVSet,??_inspOSMeasure
 10531  004E16  0060  F904  F161   	movff	_pInspOSVSet+1,??_inspOSMeasure+1
 10532                           
 10533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10534                           ; Switch size 1, requested type "simple"
 10535                           ; Number of cases is 1, Range of values is 0 to 0
 10536                           ; switch strategies available:
 10537                           ; Name         Instructions Cycles
 10538                           ; simple_byte            4     3 (average)
 10539                           ;	Chosen strategy is simple_byte
 10540  004E1C  0101               	movlb	1	; () banked
 10541  004E1E  5161               	movf	(??_inspOSMeasure+1)& (0+255),w,b
 10542  004E20  0A00               	xorlw	0	; case 0
 10543  004E22  A4D8               	btfss	status,2,c
 10544  004E24  D7F2               	goto	l19239
 10545                           
 10546                           ; BSR set to: 1
 10547                           ; Switch size 1, requested type "simple"
 10548                           ; Number of cases is 3, Range of values is 1 to 3
 10549                           ; switch strategies available:
 10550                           ; Name         Instructions Cycles
 10551                           ; simple_byte           10     6 (average)
 10552                           ;	Chosen strategy is simple_byte
 10553  004E26  5160               	movf	??_inspOSMeasure& (0+255),w,b
 10554  004E28  0A01               	xorlw	1	; case 1
 10555  004E2A  B4D8               	btfsc	status,2,c
 10556  004E2C  D7E8               	goto	l19233
 10557  004E2E  0A03               	xorlw	3	; case 2
 10558  004E30  B4D8               	btfsc	status,2,c
 10559  004E32  D7E7               	goto	l19235
 10560  004E34  0A01               	xorlw	1	; case 3
 10561  004E36  B4D8               	btfsc	status,2,c
 10562  004E38  D7E6               	goto	l19237
 10563  004E3A  D7E7               	goto	l19239
 10564  004E3C                     l19243:
 10565                           
 10566                           ; BSR set to: 1
 10567                           ;main.c: 118:     tmpVal = (setScale*(pPlatMax - pValveActuation))>>1;
 10568  004E3C  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10569  004E3E  0100               	movlb	0	; () banked
 10570  004E40  6F9B               	movwf	___wmul@multiplier& (0+255),b
 10571  004E42  6B9C               	clrf	(___wmul@multiplier+1)& (0+255),b
 10572  004E44  BF9B               	btfsc	___wmul@multiplier& (0+255),7,b
 10573  004E46  079C               	decf	(___wmul@multiplier+1)& (0+255),f,b
 10574  004E48  0101               	movlb	1	; () banked
 10575  004E4A  51E5               	movf	_pValveActuation& (0+255),w,b
 10576  004E4C  5DAB               	subwf	_pPlatMax& (0+255),w,b
 10577  004E4E  0100               	movlb	0	; () banked
 10578  004E50  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10579  004E52  0101               	movlb	1	; () banked
 10580  004E54  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
 10581  004E56  59AC               	subwfb	(_pPlatMax+1)& (0+255),w,b
 10582  004E58  0100               	movlb	0	; () banked
 10583  004E5A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10584  004E5C  ECA2  F04D         	call	___wmul	;wreg free
 10585  004E60  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10586  004E62  319C               	rrcf	(?___wmul+1)& (0+255),w,b
 10587  004E64  0101               	movlb	1	; () banked
 10588  004E66  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10589  004E68  0100               	movlb	0	; () banked
 10590  004E6A  319B               	rrcf	?___wmul& (0+255),w,b
 10591  004E6C  0101               	movlb	1	; () banked
 10592  004E6E  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10593  004E70  0060  F580  F16C   	movff	??_inspOSMeasure,inspOSMeasure@tmpVal+1
 10594                           
 10595                           ; BSR set to: 1
 10596                           ;main.c: 119:     if (pInspOS == 0){
 10597  004E76  0100               	movlb	0	; () banked
 10598  004E78  51D0               	movf	_pInspOS& (0+255),w,b
 10599  004E7A  11D1               	iorwf	(_pInspOS+1)& (0+255),w,b
 10600  004E7C  A4D8               	btfss	status,2,c
 10601  004E7E  D00D               	goto	l19249
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;main.c: 120:         pInspOS = (3*tmpVal)>>2;
 10605  004E80  0060  F5AC  F09B   	movff	inspOSMeasure@tmpVal,___wmul@multiplier
 10606  004E86  0060  F5B0  F09C   	movff	inspOSMeasure@tmpVal+1,___wmul@multiplier+1
 10607  004E8C  0E00               	movlw	0
 10608  004E8E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10609  004E90  0E03               	movlw	3
 10610  004E92  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10611  004E94  ECA2  F04D         	call	___wmul	;wreg free
 10612  004E98  D014               	goto	L9
 10613  004E9A                     l19249:
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;main.c: 122:         pInspOS = (3 * pInspOS + tmpVal) >> 2;
 10617  004E9A  0060  F340  F09B   	movff	_pInspOS,___wmul@multiplier
 10618  004EA0  0060  F344  F09C   	movff	_pInspOS+1,___wmul@multiplier+1
 10619  004EA6  0E00               	movlw	0
 10620  004EA8  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10621  004EAA  0E03               	movlw	3
 10622  004EAC  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10623  004EAE  ECA2  F04D         	call	___wmul	;wreg free
 10624  004EB2  0101               	movlb	1	; () banked
 10625  004EB4  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 10626  004EB6  0100               	movlb	0	; () banked
 10627  004EB8  279B               	addwf	?___wmul& (0+255),f,b
 10628  004EBA  0101               	movlb	1	; () banked
 10629  004EBC  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10630  004EBE  0100               	movlb	0	; () banked
 10631  004EC0  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10632  004EC2                     L9:
 10633  004EC2  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10634  004EC4  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10635  004EC6  339B               	rrcf	?___wmul& (0+255),f,b
 10636  004EC8  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10637  004ECA  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10638  004ECC  339B               	rrcf	?___wmul& (0+255),f,b
 10639  004ECE  0060  F26C  F0D0   	movff	?___wmul,_pInspOS
 10640  004ED4  0060  F270  F0D1   	movff	?___wmul+1,_pInspOS+1
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;main.c: 124:     if (vInspOS < 0) {
 10644  004EDA  0101               	movlb	1	; () banked
 10645  004EDC  AFDA               	btfss	(_vInspOS+1)& (0+255),7,b
 10646  004EDE  D004               	goto	l19255
 10647                           
 10648                           ; BSR set to: 1
 10649                           ;main.c: 126:         vInspOS = 0;
 10650  004EE0  0E00               	movlw	0
 10651  004EE2  6FDA               	movwf	(_vInspOS+1)& (0+255),b
 10652  004EE4  0E00               	movlw	0
 10653  004EE6  6FD9               	movwf	_vInspOS& (0+255),b
 10654  004EE8                     l19255:
 10655                           
 10656                           ; BSR set to: 1
 10657                           ;main.c: 129:     tmpVal = vMeasureGet();
 10658  004EE8  EC7F  F047         	call	_vMeasureGet	;wreg free
 10659  004EEC  0060  F290  F16B   	movff	?_vMeasureGet,inspOSMeasure@tmpVal
 10660  004EF2  0060  F294  F16C   	movff	?_vMeasureGet+1,inspOSMeasure@tmpVal+1
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;main.c: 131:     if ((pPlatInsp > ((int16_t) ((0.045*4096+2)/5)*4)) && (tmpVal < 2047))
      +                           {
 10664  004EF8  0101               	movlb	1	; () banked
 10665  004EFA  BFE4               	btfsc	(_pPlatInsp+1)& (0+255),7,b
 10666  004EFC  D07B               	goto	l1684
 10667  004EFE  51E4               	movf	(_pPlatInsp+1)& (0+255),w,b
 10668  004F00  E104               	bnz	u20130
 10669  004F02  0E95               	movlw	149
 10670  004F04  5DE3               	subwf	_pPlatInsp& (0+255),w,b
 10671  004F06  A0D8               	btfss	status,0,c
 10672  004F08  D075               	goto	l1684
 10673  004F0A                     u20130:
 10674                           
 10675                           ; BSR set to: 1
 10676  004F0A  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 10677  004F0C  D005               	goto	u20140
 10678  004F0E  296B               	incf	inspOSMeasure@tmpVal& (0+255),w,b
 10679  004F10  0E07               	movlw	7
 10680  004F12  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10681  004F14  B0D8               	btfsc	status,0,c
 10682  004F16  D06E               	goto	l1684
 10683  004F18                     u20140:
 10684                           
 10685                           ; BSR set to: 1
 10686                           ;main.c: 132:         tmpUVal = (pPlatInsp - pPeepActual) >> 1;
 10687  004F18  51A9               	movf	_pPeepActual& (0+255),w,b
 10688  004F1A  5DE3               	subwf	_pPlatInsp& (0+255),w,b
 10689  004F1C  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10690  004F1E  51AA               	movf	(_pPeepActual+1)& (0+255),w,b
 10691  004F20  59E4               	subwfb	(_pPlatInsp+1)& (0+255),w,b
 10692  004F22  6F61               	movwf	(??_inspOSMeasure+1)& (0+255),b
 10693  004F24  3561               	rlcf	(??_inspOSMeasure+1)& (0+255),w,b
 10694  004F26  3161               	rrcf	(??_inspOSMeasure+1)& (0+255),w,b
 10695  004F28  6F62               	movwf	(??_inspOSMeasure+2)& (0+255),b
 10696  004F2A  3160               	rrcf	??_inspOSMeasure& (0+255),w,b
 10697  004F2C  6F68               	movwf	inspOSMeasure@tmpUVal& (0+255),b
 10698  004F2E  0060  F588  F169   	movff	??_inspOSMeasure+2,inspOSMeasure@tmpUVal+1
 10699                           
 10700                           ; BSR set to: 1
 10701                           ;main.c: 133:         tmpUVal = (((uint24_t) tmpVal) << 6) / tmpUVal;
 10702  004F34  0E06               	movlw	6
 10703  004F36  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10704  004F38  0060  F5AC  F161   	movff	inspOSMeasure@tmpVal,??_inspOSMeasure+1
 10705  004F3E  0060  F5B0  F162   	movff	inspOSMeasure@tmpVal+1,??_inspOSMeasure+2
 10706  004F44  6B63               	clrf	(??_inspOSMeasure+3)& (0+255),b
 10707  004F46  BF62               	btfsc	(??_inspOSMeasure+2)& (0+255),7,b
 10708  004F48  6963               	setf	(??_inspOSMeasure+3)& (0+255),b
 10709  004F4A  2960               	incf	??_inspOSMeasure& (0+255),w,b
 10710  004F4C  D004               	goto	u20150
 10711  004F4E                     u20155:
 10712  004F4E  90D8               	bcf	status,0,c
 10713  004F50  3761               	rlcf	(??_inspOSMeasure+1)& (0+255),f,b
 10714  004F52  3762               	rlcf	(??_inspOSMeasure+2)& (0+255),f,b
 10715  004F54  3763               	rlcf	(??_inspOSMeasure+3)& (0+255),f,b
 10716  004F56                     u20150:
 10717  004F56  2EE8               	decfsz	wreg,f,c
 10718  004F58  D7FA               	goto	u20155
 10719  004F5A  0060  F584  F08B   	movff	??_inspOSMeasure+1,___ltdiv@dividend
 10720  004F60  0060  F588  F08C   	movff	??_inspOSMeasure+2,___ltdiv@dividend+1
 10721  004F66  0060  F58C  F08D   	movff	??_inspOSMeasure+3,___ltdiv@dividend+2
 10722  004F6C  0060  F5A0  F08E   	movff	inspOSMeasure@tmpUVal,___ltdiv@divisor
 10723  004F72  0060  F5A4  F08F   	movff	inspOSMeasure@tmpUVal+1,___ltdiv@divisor+1
 10724  004F78  0100               	movlb	0	; () banked
 10725  004F7A  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
 10726  004F7C  ECF6  F044         	call	___ltdiv	;wreg free
 10727  004F80  0060  F22C  F168   	movff	?___ltdiv,inspOSMeasure@tmpUVal
 10728  004F86  0060  F230  F169   	movff	?___ltdiv+1,inspOSMeasure@tmpUVal+1
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;main.c: 135:         if (lungC == 0){
 10732  004F8C  0101               	movlb	1	; () banked
 10733  004F8E  51DF               	movf	_lungC& (0+255),w,b
 10734  004F90  11E0               	iorwf	(_lungC+1)& (0+255),w,b
 10735  004F92  A4D8               	btfss	status,2,c
 10736  004F94  D00E               	goto	l19269
 10737                           
 10738                           ; BSR set to: 1
 10739                           ;main.c: 136:             lungC = (3*tmpUVal)>>2;
 10740  004F96  0060  F5A0  F09B   	movff	inspOSMeasure@tmpUVal,___wmul@multiplier
 10741  004F9C  0060  F5A4  F09C   	movff	inspOSMeasure@tmpUVal+1,___wmul@multiplier+1
 10742  004FA2  0E00               	movlw	0
 10743  004FA4  0100               	movlb	0	; () banked
 10744  004FA6  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10745  004FA8  0E03               	movlw	3
 10746  004FAA  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10747  004FAC  ECA2  F04D         	call	___wmul	;wreg free
 10748  004FB0  D015               	goto	L10
 10749  004FB2                     l19269:
 10750                           
 10751                           ; BSR set to: 1
 10752                           ;main.c: 138:             lungC = (3 * lungC + tmpUVal) >> 2;
 10753  004FB2  0060  F77C  F09B   	movff	_lungC,___wmul@multiplier
 10754  004FB8  0060  F780  F09C   	movff	_lungC+1,___wmul@multiplier+1
 10755  004FBE  0E00               	movlw	0
 10756  004FC0  0100               	movlb	0	; () banked
 10757  004FC2  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10758  004FC4  0E03               	movlw	3
 10759  004FC6  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10760  004FC8  ECA2  F04D         	call	___wmul	;wreg free
 10761  004FCC  0101               	movlb	1	; () banked
 10762  004FCE  5168               	movf	inspOSMeasure@tmpUVal& (0+255),w,b
 10763  004FD0  0100               	movlb	0	; () banked
 10764  004FD2  279B               	addwf	?___wmul& (0+255),f,b
 10765  004FD4  0101               	movlb	1	; () banked
 10766  004FD6  5169               	movf	(inspOSMeasure@tmpUVal+1)& (0+255),w,b
 10767  004FD8  0100               	movlb	0	; () banked
 10768  004FDA  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10769  004FDC                     L10:
 10770  004FDC  90D8               	bcf	status,0,c
 10771  004FDE  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10772  004FE0  339B               	rrcf	?___wmul& (0+255),f,b
 10773  004FE2  90D8               	bcf	status,0,c
 10774  004FE4  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10775  004FE6  339B               	rrcf	?___wmul& (0+255),f,b
 10776  004FE8  0060  F26C  F1DF   	movff	?___wmul,_lungC
 10777  004FEE  0060  F270  F1E0   	movff	?___wmul+1,_lungC+1
 10778  004FF4                     l1684:
 10779                           
 10780                           ;main.c: 142:     tmpVal = (setScale*(tmpVal - vValveActuation))>>1;
 10781  004FF4  0101               	movlb	1	; () banked
 10782  004FF6  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10783  004FF8  0100               	movlb	0	; () banked
 10784  004FFA  6F9B               	movwf	___wmul@multiplier& (0+255),b
 10785  004FFC  6B9C               	clrf	(___wmul@multiplier+1)& (0+255),b
 10786  004FFE  BF9B               	btfsc	___wmul@multiplier& (0+255),7,b
 10787  005000  079C               	decf	(___wmul@multiplier+1)& (0+255),f,b
 10788  005002  0101               	movlb	1	; () banked
 10789  005004  51A7               	movf	_vValveActuation& (0+255),w,b
 10790  005006  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 10791  005008  0100               	movlb	0	; () banked
 10792  00500A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10793  00500C  0101               	movlb	1	; () banked
 10794  00500E  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
 10795  005010  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10796  005012  0100               	movlb	0	; () banked
 10797  005014  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10798  005016  ECA2  F04D         	call	___wmul	;wreg free
 10799  00501A  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10800  00501C  319C               	rrcf	(?___wmul+1)& (0+255),w,b
 10801  00501E  0101               	movlb	1	; () banked
 10802  005020  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10803  005022  0100               	movlb	0	; () banked
 10804  005024  319B               	rrcf	?___wmul& (0+255),w,b
 10805  005026  0101               	movlb	1	; () banked
 10806  005028  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10807  00502A  0060  F580  F16C   	movff	??_inspOSMeasure,inspOSMeasure@tmpVal+1
 10808                           
 10809                           ; BSR set to: 1
 10810                           ;main.c: 143:     if (vInspOS == 0){
 10811  005030  51D9               	movf	_vInspOS& (0+255),w,b
 10812  005032  11DA               	iorwf	(_vInspOS+1)& (0+255),w,b
 10813  005034  A4D8               	btfss	status,2,c
 10814  005036  D00E               	goto	l19275
 10815                           
 10816                           ; BSR set to: 1
 10817                           ;main.c: 144:         vInspOS = (3*tmpVal)>>2;
 10818  005038  0060  F5AC  F09B   	movff	inspOSMeasure@tmpVal,___wmul@multiplier
 10819  00503E  0060  F5B0  F09C   	movff	inspOSMeasure@tmpVal+1,___wmul@multiplier+1
 10820  005044  0E00               	movlw	0
 10821  005046  0100               	movlb	0	; () banked
 10822  005048  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10823  00504A  0E03               	movlw	3
 10824  00504C  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10825  00504E  ECA2  F04D         	call	___wmul	;wreg free
 10826  005052  D015               	goto	L11
 10827  005054                     l19275:
 10828                           
 10829                           ; BSR set to: 1
 10830                           ;main.c: 146:         vInspOS = (3 * vInspOS + tmpVal) >> 2;
 10831  005054  0060  F764  F09B   	movff	_vInspOS,___wmul@multiplier
 10832  00505A  0060  F768  F09C   	movff	_vInspOS+1,___wmul@multiplier+1
 10833  005060  0E00               	movlw	0
 10834  005062  0100               	movlb	0	; () banked
 10835  005064  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10836  005066  0E03               	movlw	3
 10837  005068  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10838  00506A  ECA2  F04D         	call	___wmul	;wreg free
 10839  00506E  0101               	movlb	1	; () banked
 10840  005070  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 10841  005072  0100               	movlb	0	; () banked
 10842  005074  279B               	addwf	?___wmul& (0+255),f,b
 10843  005076  0101               	movlb	1	; () banked
 10844  005078  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10845  00507A  0100               	movlb	0	; () banked
 10846  00507C  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10847  00507E                     L11:
 10848  00507E  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10849  005080  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10850  005082  339B               	rrcf	?___wmul& (0+255),f,b
 10851  005084  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10852  005086  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10853  005088  339B               	rrcf	?___wmul& (0+255),f,b
 10854  00508A  0060  F26C  F1D9   	movff	?___wmul,_vInspOS
 10855  005090  0060  F270  F1DA   	movff	?___wmul+1,_vInspOS+1
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;main.c: 151:     tmpVal = pPlatMax - pPlatInsp;
 10859  005096  0101               	movlb	1	; () banked
 10860  005098  51E3               	movf	_pPlatInsp& (0+255),w,b
 10861  00509A  5DAB               	subwf	_pPlatMax& (0+255),w,b
 10862  00509C  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10863  00509E  51E4               	movf	(_pPlatInsp+1)& (0+255),w,b
 10864  0050A0  59AC               	subwfb	(_pPlatMax+1)& (0+255),w,b
 10865  0050A2  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 10866                           
 10867                           ; BSR set to: 1
 10868                           ;main.c: 152:     tmpVal = ((uint32_t) setScale*tmpVal*effectiveFlowRateInv)>>9;
 10869  0050A4  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10870  0050A6  0100               	movlb	0	; () banked
 10871  0050A8  6F8B               	movwf	___lmul@multiplier& (0+255),b
 10872  0050AA  0E00               	movlw	0
 10873  0050AC  BF8B               	btfsc	___lmul@multiplier& (0+255),7,b
 10874  0050AE  0EFF               	movlw	-1
 10875  0050B0  6F8C               	movwf	(___lmul@multiplier+1)& (0+255),b
 10876  0050B2  6F8D               	movwf	(___lmul@multiplier+2)& (0+255),b
 10877  0050B4  6F8E               	movwf	(___lmul@multiplier+3)& (0+255),b
 10878  0050B6  0060  F5AC  F08F   	movff	inspOSMeasure@tmpVal,___lmul@multiplicand
 10879  0050BC  0060  F5B0  F090   	movff	inspOSMeasure@tmpVal+1,___lmul@multiplicand+1
 10880  0050C2  0E00               	movlw	0
 10881  0050C4  BF90               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 10882  0050C6  0EFF               	movlw	-1
 10883  0050C8  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10884  0050CA  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10885  0050CC  ECC6  F046         	call	___lmul	;wreg free
 10886  0050D0  0060  F22C  F164   	movff	?___lmul,_inspOSMeasure$6100
 10887  0050D6  0060  F230  F165   	movff	?___lmul+1,_inspOSMeasure$6100+1
 10888  0050DC  0060  F234  F166   	movff	?___lmul+2,_inspOSMeasure$6100+2
 10889  0050E2  0060  F238  F167   	movff	?___lmul+3,_inspOSMeasure$6100+3
 10890                           
 10891                           ; BSR set to: 0
 10892                           ;main.c: 152:     tmpVal = ((uint32_t) setScale*tmpVal*effectiveFlowRateInv)>>9;
 10893  0050E8  0060  F590  F08B   	movff	_inspOSMeasure$6100,___lmul@multiplier
 10894  0050EE  0060  F594  F08C   	movff	_inspOSMeasure$6100+1,___lmul@multiplier+1
 10895  0050F4  0060  F598  F08D   	movff	_inspOSMeasure$6100+2,___lmul@multiplier+2
 10896  0050FA  0060  F59C  F08E   	movff	_inspOSMeasure$6100+3,___lmul@multiplier+3
 10897  005100  0060  F744  F08F   	movff	_effectiveFlowRateInv,___lmul@multiplicand
 10898  005106  0060  F748  F090   	movff	_effectiveFlowRateInv+1,___lmul@multiplicand+1
 10899  00510C  6B91               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10900  00510E  6B92               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10901  005110  ECC6  F046         	call	___lmul	;wreg free
 10902  005114  0E0A               	movlw	10
 10903  005116  D005               	goto	u20180
 10904  005118                     u20185:
 10905  005118  90D8               	bcf	status,0,c
 10906  00511A  338E               	rrcf	(?___lmul+3)& (0+255),f,b
 10907  00511C  338D               	rrcf	(?___lmul+2)& (0+255),f,b
 10908  00511E  338C               	rrcf	(?___lmul+1)& (0+255),f,b
 10909  005120  338B               	rrcf	?___lmul& (0+255),f,b
 10910  005122                     u20180:
 10911  005122  2EE8               	decfsz	wreg,f,c
 10912  005124  D7F9               	goto	u20185
 10913  005126  0060  F22C  F16B   	movff	?___lmul,inspOSMeasure@tmpVal
 10914  00512C  0060  F230  F16C   	movff	?___lmul+1,inspOSMeasure@tmpVal+1
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;main.c: 153:     if (tmpVal > (200*((int16_t) ((0.045*4096+2)/5)*1))){
 10918  005132  0101               	movlb	1	; () banked
 10919  005134  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 10920  005136  D00A               	goto	l19287
 10921  005138  0EE9               	movlw	233
 10922  00513A  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 10923  00513C  0E1C               	movlw	28
 10924  00513E  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10925  005140  A0D8               	btfss	status,0,c
 10926  005142  D004               	goto	l19287
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;main.c: 154:         tmpVal = 200;
 10930  005144  0E00               	movlw	0
 10931  005146  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 10932  005148  0EC8               	movlw	200
 10933  00514A  D00B               	goto	L12
 10934  00514C                     l19287:
 10935                           
 10936                           ; BSR set to: 1
 10937  00514C  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 10938  00514E  D006               	goto	u20200
 10939  005150  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10940  005152  E108               	bnz	l19291
 10941  005154  0E4A               	movlw	74
 10942  005156  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 10943  005158  B0D8               	btfsc	status,0,c
 10944  00515A  D004               	goto	l19291
 10945  00515C                     u20200:
 10946                           
 10947                           ; BSR set to: 1
 10948                           ;main.c: 156:         tmpVal = 2;
 10949  00515C  0E00               	movlw	0
 10950  00515E  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 10951  005160  0E02               	movlw	2
 10952  005162                     L12:
 10953  005162  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10954  005164                     l19291:
 10955                           
 10956                           ; BSR set to: 1
 10957                           ;main.c: 158:     lungR = (3*lungR + tmpVal)>>2;
 10958  005164  0060  FB34  F09B   	movff	_lungR,___wmul@multiplier
 10959  00516A  0060  FB38  F09C   	movff	_lungR+1,___wmul@multiplier+1
 10960  005170  0E00               	movlw	0
 10961  005172  0100               	movlb	0	; () banked
 10962  005174  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10963  005176  0E03               	movlw	3
 10964  005178  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10965  00517A  ECA2  F04D         	call	___wmul	;wreg free
 10966  00517E  0101               	movlb	1	; () banked
 10967  005180  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 10968  005182  0100               	movlb	0	; () banked
 10969  005184  279B               	addwf	?___wmul& (0+255),f,b
 10970  005186  0101               	movlb	1	; () banked
 10971  005188  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10972  00518A  0100               	movlb	0	; () banked
 10973  00518C  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10974  00518E  90D8               	bcf	status,0,c
 10975  005190  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10976  005192  339B               	rrcf	?___wmul& (0+255),f,b
 10977  005194  90D8               	bcf	status,0,c
 10978  005196  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10979  005198  339B               	rrcf	?___wmul& (0+255),f,b
 10980  00519A  0060  F26C  F2CD   	movff	?___wmul,_lungR
 10981  0051A0  0060  F270  F2CE   	movff	?___wmul+1,_lungR+1
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;main.c: 160:     printf ("\nIPOS LC %d Plat %d FI %d\n", lungC,((int16_t) (((2560/((int
      +                          16_t) ((0.045*4096+2)/5)*1))*((int24_t) pPlatInsp))>>8)), effectiveFlowRateInv);
 10985  0051A6  0E9C               	movlw	low STR_1
 10986  0051A8  0101               	movlb	1	; () banked
 10987  0051AA  6F46               	movwf	printf@fmt& (0+255),b
 10988  0051AC  0EFC               	movlw	high STR_1
 10989  0051AE  6F47               	movwf	(printf@fmt+1)& (0+255),b
 10990  0051B0  0060  F77C  F148   	movff	_lungC,?_printf+2
 10991  0051B6  0060  F780  F149   	movff	_lungC+1,?_printf+3
 10992  0051BC  0060  F78C  F08B   	movff	_pPlatInsp,___tmul@multiplier
 10993  0051C2  0060  F790  F08C   	movff	_pPlatInsp+1,___tmul@multiplier+1
 10994  0051C8  0100               	movlb	0	; () banked
 10995  0051CA  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
 10996  0051CC  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
 10997  0051CE  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
 10998  0051D0  0E45               	movlw	69
 10999  0051D2  6F8E               	movwf	___tmul@multiplicand& (0+255),b
 11000  0051D4  0E00               	movlw	0
 11001  0051D6  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
 11002  0051D8  0E00               	movlw	0
 11003  0051DA  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
 11004  0051DC  ECC7  F049         	call	___tmul	;wreg free
 11005  0051E0  0060  F230  F08B   	movff	?___tmul+1,?___tmul
 11006  0051E6  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
 11007  0051EC  6B8D               	clrf	(?___tmul+2)& (0+255),b
 11008  0051EE  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
 11009  0051F0  698D               	setf	(?___tmul+2)& (0+255),b
 11010  0051F2  0060  F22C  F14A   	movff	?___tmul,?_printf+4
 11011  0051F8  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
 11012  0051FE  0060  F744  F14C   	movff	_effectiveFlowRateInv,?_printf+6
 11013  005204  0060  F748  F14D   	movff	_effectiveFlowRateInv+1,?_printf+7
 11014  00520A  ECE9  F04E         	call	_printf	;wreg free
 11015                           
 11016                           ; BSR set to: 2
 11017  00520E  0012               	return		;funcret
 11018  005210                     __end_of_inspOSMeasure:
 11019                           	opt callstack 0
 11020                           
 11021 ;; *************** function ___ltdiv *****************
 11022 ;; Defined at:
 11023 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\ltdiv.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;  dividend        3   43[BANK0 ] unsigned um
 11026 ;;  divisor         3   46[BANK0 ] unsigned um
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;  quotient        3   49[BANK0 ] unsigned um
 11029 ;;  counter         1   52[BANK0 ] unsigned char 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  3   43[BANK0 ] unsigned um
 11032 ;; Registers used:
 11033 ;;		wreg, status,2, status,0
 11034 ;; Tracked objects:
 11035 ;;		On entry : 3F/0
 11036 ;;		On exit  : 3F/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11042 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11043 ;;Total ram usage:       10 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:   17
 11046 ;; This function calls:
 11047 ;;		Nothing
 11048 ;; This function is called by:
 11049 ;;		_inspOSMeasure
 11050 ;;		_main
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054                           	psect	text13
 11055  0089EC                     __ptext13:
 11056                           	opt callstack 0
 11057  0089EC                     ___ltdiv:
 11058                           	opt callstack 12
 11059                           
 11060                           ; BSR set to: 0
 11061                           
 11062                           ; BSR set to: 2
 11063                           ;incstack = 0
 11064  0089EC  0E00               	movlw	0
 11065  0089EE  6F91               	movwf	___ltdiv@quotient& (0+255),b
 11066  0089F0  0E00               	movlw	0
 11067  0089F2  6F92               	movwf	(___ltdiv@quotient+1)& (0+255),b
 11068  0089F4  0E00               	movlw	0
 11069  0089F6  6F93               	movwf	(___ltdiv@quotient+2)& (0+255),b
 11070                           
 11071                           ; BSR set to: 0
 11072  0089F8  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11073  0089FA  118F               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
 11074  0089FC  1190               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
 11075  0089FE  B4D8               	btfsc	status,2,c
 11076  008A00  D023               	goto	l3643
 11077                           
 11078                           ; BSR set to: 0
 11079  008A02  0E01               	movlw	1
 11080  008A04  6F94               	movwf	___ltdiv@counter& (0+255),b
 11081  008A06  D005               	goto	l19177
 11082  008A08                     l19175:
 11083                           
 11084                           ; BSR set to: 0
 11085  008A08  90D8               	bcf	status,0,c
 11086  008A0A  378E               	rlcf	___ltdiv@divisor& (0+255),f,b
 11087  008A0C  378F               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
 11088  008A0E  3790               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
 11089  008A10  2B94               	incf	___ltdiv@counter& (0+255),f,b
 11090  008A12                     l19177:
 11091                           
 11092                           ; BSR set to: 0
 11093  008A12  AF90               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
 11094  008A14  D7F9               	goto	l19175
 11095  008A16                     u20050:
 11096                           
 11097                           ; BSR set to: 0
 11098  008A16  90D8               	bcf	status,0,c
 11099  008A18  3791               	rlcf	___ltdiv@quotient& (0+255),f,b
 11100  008A1A  3792               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
 11101  008A1C  3793               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
 11102                           
 11103                           ; BSR set to: 0
 11104  008A1E  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11105  008A20  5D8B               	subwf	___ltdiv@dividend& (0+255),w,b
 11106  008A22  518F               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 11107  008A24  598C               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
 11108  008A26  5190               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 11109  008A28  598D               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
 11110  008A2A  A0D8               	btfss	status,0,c
 11111  008A2C  D007               	goto	l3648
 11112                           
 11113                           ; BSR set to: 0
 11114  008A2E  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11115  008A30  5F8B               	subwf	___ltdiv@dividend& (0+255),f,b
 11116  008A32  518F               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 11117  008A34  5B8C               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
 11118  008A36  5190               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 11119  008A38  5B8D               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
 11120                           
 11121                           ; BSR set to: 0
 11122  008A3A  8191               	bsf	___ltdiv@quotient& (0+255),0,b
 11123  008A3C                     l3648:
 11124                           
 11125                           ; BSR set to: 0
 11126  008A3C  90D8               	bcf	status,0,c
 11127  008A3E  3390               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
 11128  008A40  338F               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
 11129  008A42  338E               	rrcf	___ltdiv@divisor& (0+255),f,b
 11130                           
 11131                           ; BSR set to: 0
 11132  008A44  2F94               	decfsz	___ltdiv@counter& (0+255),f,b
 11133  008A46  D7E7               	goto	u20050
 11134  008A48                     l3643:
 11135                           
 11136                           ; BSR set to: 0
 11137  008A48  0060  F244  F08B   	movff	___ltdiv@quotient,?___ltdiv
 11138  008A4E  0060  F248  F08C   	movff	___ltdiv@quotient+1,?___ltdiv+1
 11139  008A54  0060  F24C  F08D   	movff	___ltdiv@quotient+2,?___ltdiv+2
 11140                           
 11141                           ; BSR set to: 0
 11142  008A5A  0012               	return		;funcret
 11143  008A5C                     __end_of___ltdiv:
 11144                           	opt callstack 0
 11145                           
 11146 ;; *************** function _bRateUpdt *****************
 11147 ;; Defined at:
 11148 ;;		line 22 in file "brate.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  triggered       1    wreg     _Bool 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;  triggered       1   46[BANK0 ] _Bool 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1    wreg      void 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0
 11157 ;; Tracked objects:
 11158 ;;		On entry : 3E/1
 11159 ;;		On exit  : 3F/2
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11164 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;Total ram usage:        4 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:   17
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_main
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text14
 11177  007D5C                     __ptext14:
 11178                           	opt callstack 0
 11179  007D5C                     _bRateUpdt:
 11180                           	opt callstack 13
 11181                           
 11182                           ; BSR set to: 0
 11183                           ;incstack = 0
 11184                           ;bRateUpdt@triggered stored from wreg
 11185  007D5C  0100               	movlb	0	; () banked
 11186  007D5E  6F8E               	movwf	bRateUpdt@triggered& (0+255),b
 11187                           
 11188                           ;brate.c: 23:     bRatePtr = bRatePtr << 1;
 11189  007D60  0060  F2BC  F08B   	movff	_bRatePtr,??_bRateUpdt
 11190  007D66  0060  F2C0  F08C   	movff	_bRatePtr+1,??_bRateUpdt+1
 11191  007D6C  0060  F2C4  F08D   	movff	_bRatePtr+2,??_bRateUpdt+2
 11192  007D72  0100               	movlb	0	; () banked
 11193  007D74  90D8               	bcf	status,0,c
 11194  007D76  378B               	rlcf	??_bRateUpdt& (0+255),f,b
 11195  007D78  378C               	rlcf	(??_bRateUpdt+1)& (0+255),f,b
 11196  007D7A  378D               	rlcf	(??_bRateUpdt+2)& (0+255),f,b
 11197  007D7C  0060  F22C  F0AF   	movff	??_bRateUpdt,_bRatePtr
 11198  007D82  0060  F230  F0B0   	movff	??_bRateUpdt+1,_bRatePtr+1
 11199  007D88  0060  F234  F0B1   	movff	??_bRateUpdt+2,_bRatePtr+2
 11200                           
 11201                           ;brate.c: 24:     bRateCnt++;
 11202  007D8E  2BBE               	incf	_bRateCnt& (0+255),f,b
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;brate.c: 25:     if (bRateCnt > 20){
 11206  007D90  0E14               	movlw	20
 11207  007D92  65BE               	cpfsgt	_bRateCnt& (0+255),b
 11208  007D94  D002               	goto	l20065
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;brate.c: 26:         bRateCnt = 20;
 11212  007D96  0E14               	movlw	20
 11213  007D98  6FBE               	movwf	_bRateCnt& (0+255),b
 11214  007D9A                     l20065:
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;brate.c: 28:     if (bRatePtr == (0x1L << 20)) {
 11218  007D9A  0E10               	movlw	16
 11219  007D9C  19B1               	xorwf	(_bRatePtr+2)& (0+255),w,b
 11220  007D9E  11AF               	iorwf	_bRatePtr& (0+255),w,b
 11221  007DA0  11B0               	iorwf	(_bRatePtr+1)& (0+255),w,b
 11222  007DA2  A4D8               	btfss	status,2,c
 11223  007DA4  D006               	goto	l20069
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;brate.c: 29:         bRatePtr = 1;
 11227  007DA6  0E01               	movlw	1
 11228  007DA8  6FAF               	movwf	_bRatePtr& (0+255),b
 11229  007DAA  0E00               	movlw	0
 11230  007DAC  6FB0               	movwf	(_bRatePtr+1)& (0+255),b
 11231  007DAE  0E00               	movlw	0
 11232  007DB0  6FB1               	movwf	(_bRatePtr+2)& (0+255),b
 11233  007DB2                     l20069:
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;brate.c: 32:     if (bRateHist & bRatePtr) {
 11237  007DB2  51AF               	movf	_bRatePtr& (0+255),w,b
 11238  007DB4  0102               	movlb	2	; () banked
 11239  007DB6  152F               	andwf	_bRateHist& (0+255),w,b
 11240  007DB8  0100               	movlb	0	; () banked
 11241  007DBA  6F8B               	movwf	??_bRateUpdt& (0+255),b
 11242  007DBC  51B0               	movf	(_bRatePtr+1)& (0+255),w,b
 11243  007DBE  0102               	movlb	2	; () banked
 11244  007DC0  1530               	andwf	(_bRateHist+1)& (0+255),w,b
 11245  007DC2  0100               	movlb	0	; () banked
 11246  007DC4  6F8C               	movwf	(??_bRateUpdt+1)& (0+255),b
 11247  007DC6  51B1               	movf	(_bRatePtr+2)& (0+255),w,b
 11248  007DC8  0102               	movlb	2	; () banked
 11249  007DCA  1531               	andwf	(_bRateHist+2)& (0+255),w,b
 11250  007DCC  0100               	movlb	0	; () banked
 11251  007DCE  6F8D               	movwf	(??_bRateUpdt+2)& (0+255),b
 11252  007DD0  518B               	movf	??_bRateUpdt& (0+255),w,b
 11253  007DD2  118C               	iorwf	(??_bRateUpdt+1)& (0+255),w,b
 11254  007DD4  118D               	iorwf	(??_bRateUpdt+2)& (0+255),w,b
 11255  007DD6  B4D8               	btfsc	status,2,c
 11256  007DD8  D002               	goto	l20073
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;brate.c: 33:         eBRate -= 5;
 11260  007DDA  0E05               	movlw	5
 11261  007DDC  5FBF               	subwf	_eBRate& (0+255),f,b
 11262  007DDE                     l20073:
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;brate.c: 35:     if (triggered) {
 11266  007DDE  518E               	movf	bRateUpdt@triggered& (0+255),w,b
 11267  007DE0  B4D8               	btfsc	status,2,c
 11268  007DE2  D00E               	goto	l20079
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;brate.c: 36:         eBRate += 5;
 11272  007DE4  0E05               	movlw	5
 11273  007DE6  27BF               	addwf	_eBRate& (0+255),f,b
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;brate.c: 37:         bRateHist |= bRatePtr;
 11277  007DE8  51AF               	movf	_bRatePtr& (0+255),w,b
 11278  007DEA  0102               	movlb	2	; () banked
 11279  007DEC  132F               	iorwf	_bRateHist& (0+255),f,b
 11280  007DEE  0100               	movlb	0	; () banked
 11281  007DF0  51B0               	movf	(_bRatePtr+1)& (0+255),w,b
 11282  007DF2  0102               	movlb	2	; () banked
 11283  007DF4  1330               	iorwf	(_bRateHist+1)& (0+255),f,b
 11284  007DF6  0100               	movlb	0	; () banked
 11285  007DF8  51B1               	movf	(_bRatePtr+2)& (0+255),w,b
 11286  007DFA  0102               	movlb	2	; () banked
 11287  007DFC  1331               	iorwf	(_bRateHist+2)& (0+255),f,b
 11288                           
 11289                           ;brate.c: 38:     } else {
 11290  007DFE  0012               	return	
 11291  007E00                     l20079:
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;brate.c: 39:         bRateHist &= ~bRatePtr;
 11295  007E00  1DAF               	comf	_bRatePtr& (0+255),w,b
 11296  007E02  6F8B               	movwf	??_bRateUpdt& (0+255),b
 11297  007E04  1DB0               	comf	(_bRatePtr+1)& (0+255),w,b
 11298  007E06  6F8C               	movwf	(??_bRateUpdt+1)& (0+255),b
 11299  007E08  1DB1               	comf	(_bRatePtr+2)& (0+255),w,b
 11300  007E0A  6F8D               	movwf	(??_bRateUpdt+2)& (0+255),b
 11301  007E0C  518B               	movf	??_bRateUpdt& (0+255),w,b
 11302  007E0E  0102               	movlb	2	; () banked
 11303  007E10  172F               	andwf	_bRateHist& (0+255),f,b
 11304  007E12  0100               	movlb	0	; () banked
 11305  007E14  518C               	movf	(??_bRateUpdt+1)& (0+255),w,b
 11306  007E16  0102               	movlb	2	; () banked
 11307  007E18  1730               	andwf	(_bRateHist+1)& (0+255),f,b
 11308  007E1A  0100               	movlb	0	; () banked
 11309  007E1C  518D               	movf	(??_bRateUpdt+2)& (0+255),w,b
 11310  007E1E  0102               	movlb	2	; () banked
 11311  007E20  1731               	andwf	(_bRateHist+2)& (0+255),f,b
 11312                           
 11313                           ; BSR set to: 2
 11314  007E22  0012               	return		;funcret
 11315  007E24                     __end_of_bRateUpdt:
 11316                           	opt callstack 0
 11317                           
 11318 ;; *************** function _bRateInit *****************
 11319 ;; Defined at:
 11320 ;;		line 15 in file "brate.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;		None
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      void 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2
 11329 ;; Tracked objects:
 11330 ;;		On entry : 3F/2
 11331 ;;		On exit  : 3F/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11338 ;;Total ram usage:        0 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:   17
 11341 ;; This function calls:
 11342 ;;		Nothing
 11343 ;; This function is called by:
 11344 ;;		_main
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text15
 11349  009F34                     __ptext15:
 11350                           	opt callstack 0
 11351  009F34                     _bRateInit:
 11352                           	opt callstack 13
 11353                           
 11354                           ; BSR set to: 2
 11355                           ;brate.c: 16:     bRateHist = 0;
 11356                           
 11357                           ; BSR set to: 2
 11358                           ;incstack = 0
 11359  009F34  0E00               	movlw	0
 11360  009F36  6F2F               	movwf	_bRateHist& (0+255),b
 11361  009F38  0E00               	movlw	0
 11362  009F3A  6F30               	movwf	(_bRateHist+1)& (0+255),b
 11363  009F3C  0E00               	movlw	0
 11364  009F3E  6F31               	movwf	(_bRateHist+2)& (0+255),b
 11365                           
 11366                           ;brate.c: 17:     bRatePtr = 1;
 11367  009F40  0E01               	movlw	1
 11368  009F42  0100               	movlb	0	; () banked
 11369  009F44  6FAF               	movwf	_bRatePtr& (0+255),b
 11370  009F46  0E00               	movlw	0
 11371  009F48  6FB0               	movwf	(_bRatePtr+1)& (0+255),b
 11372  009F4A  0E00               	movlw	0
 11373  009F4C  6FB1               	movwf	(_bRatePtr+2)& (0+255),b
 11374                           
 11375                           ;brate.c: 18:     eBRate = 0;
 11376  009F4E  0E00               	movlw	0
 11377  009F50  6FBF               	movwf	_eBRate& (0+255),b
 11378                           
 11379                           ;brate.c: 19:     bRateCnt = 0;
 11380  009F52  0E00               	movlw	0
 11381  009F54  6FBE               	movwf	_bRateCnt& (0+255),b
 11382                           
 11383                           ; BSR set to: 0
 11384  009F56  0012               	return		;funcret
 11385  009F58                     __end_of_bRateInit:
 11386                           	opt callstack 0
 11387                           
 11388 ;; *************** function _aCaptureInit *****************
 11389 ;; Defined at:
 11390 ;;		line 101 in file "aCapture.c"
 11391 ;; Parameters:    Size  Location     Type
 11392 ;;		None
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  idx             2   99[BANK1 ] int 
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  1    wreg      void 
 11397 ;; Registers used:
 11398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11399 ;; Tracked objects:
 11400 ;;		On entry : 3F/0
 11401 ;;		On exit  : 3F/39
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;Total ram usage:        2 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; Hardware stack levels required when called:   27
 11411 ;; This function calls:
 11412 ;;		_ADCC_SetADTIInterruptHandler
 11413 ;;		_ADCC_StartConversion
 11414 ;;		_adcGetCh
 11415 ;; This function is called by:
 11416 ;;		_main
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text16
 11421  00925E                     __ptext16:
 11422                           	opt callstack 0
 11423  00925E                     _aCaptureInit:
 11424                           	opt callstack 3
 11425                           
 11426                           ; BSR set to: 0
 11427                           ;aCapture.c: 102:     int idx;;aCapture.c: 103:     curASrc=MainPSensor;
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;incstack = 0
 11431  00925E  0E00               	movlw	0
 11432  009260  6FCC               	movwf	_curASrc& (0+255),b
 11433                           
 11434                           ;aCapture.c: 105:     for (idx=0;idx<3;idx++)
 11435  009262  0E00               	movlw	0
 11436  009264  0101               	movlb	1	; () banked
 11437  009266  6F64               	movwf	(aCaptureInit@idx+1)& (0+255),b
 11438  009268  0E00               	movlw	0
 11439  00926A  6F63               	movwf	aCaptureInit@idx& (0+255),b
 11440  00926C                     l19347:
 11441                           
 11442                           ; BSR set to: 1
 11443                           ;aCapture.c: 106:         resultTblVal[idx]=0;
 11444  00926C  0E24               	movlw	low _resultTblVal
 11445  00926E  2563               	addwf	aCaptureInit@idx& (0+255),w,b
 11446  009270  6ED9               	movwf	fsr2l,c
 11447  009272  0E02               	movlw	high _resultTblVal
 11448  009274  2164               	addwfc	(aCaptureInit@idx+1)& (0+255),w,b
 11449  009276  6EDA               	movwf	fsr2h,c
 11450  009278  0E00               	movlw	0
 11451  00927A  6EDF               	movwf	indf2,c
 11452                           
 11453                           ; BSR set to: 1
 11454  00927C  4B63               	infsnz	aCaptureInit@idx& (0+255),f,b
 11455  00927E  2B64               	incf	(aCaptureInit@idx+1)& (0+255),f,b
 11456                           
 11457                           ; BSR set to: 1
 11458  009280  BF64               	btfsc	(aCaptureInit@idx+1)& (0+255),7,b
 11459  009282  D7F4               	goto	l19347
 11460  009284  5164               	movf	(aCaptureInit@idx+1)& (0+255),w,b
 11461  009286  E104               	bnz	u20230
 11462  009288  0E03               	movlw	3
 11463  00928A  5D63               	subwf	aCaptureInit@idx& (0+255),w,b
 11464  00928C  A0D8               	btfss	status,0,c
 11465  00928E  D7EE               	goto	l19347
 11466  009290                     u20230:
 11467                           
 11468                           ; BSR set to: 1
 11469                           ;aCapture.c: 108:     ADCC_SetADTIInterruptHandler(adcCaptureIsr);
 11470  009290  0EB4               	movlw	low _adcCaptureIsr
 11471  009292  0100               	movlb	0	; () banked
 11472  009294  6F8B               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 11473  009296  0E58               	movlw	high _adcCaptureIsr
 11474  009298  6F8C               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 11475  00929A  EC0F  F052         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;aCapture.c: 111:     ADCC_StartConversion(adcGetCh(curASrc));
 11479  00929E  51CC               	movf	_curASrc& (0+255),w,b
 11480  0092A0  EC32  F048         	call	_adcGetCh
 11481  0092A4  EC72  F051         	call	_ADCC_StartConversion
 11482                           
 11483                           ; BSR set to: 62
 11484                           ;aCapture.c: 113:     PIE1bits.ADTIE = 1;
 11485  0092A8  0139               	movlb	57	; () banked
 11486  0092AA  8791               	bsf	145,3,b	;volatile
 11487                           
 11488                           ; BSR set to: 57
 11489  0092AC  0012               	return		;funcret
 11490  0092AE                     __end_of_aCaptureInit:
 11491                           	opt callstack 0
 11492                           
 11493 ;; *************** function _adcGetCh *****************
 11494 ;; Defined at:
 11495 ;;		line 25 in file "aCapture.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  sel             1    wreg     enum E16104
 11498 ;; Auto vars:     Size  Location     Type
 11499 ;;  sel             1   98[BANK1 ] enum E16104
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  1    wreg      enum E16053
 11502 ;; Registers used:
 11503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11504 ;; Tracked objects:
 11505 ;;		On entry : 3F/0
 11506 ;;		On exit  : 3C/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;Total ram usage:        3 bytes
 11514 ;; Hardware stack levels used:    1
 11515 ;; Hardware stack levels required when called:   26
 11516 ;; This function calls:
 11517 ;;		_printf
 11518 ;; This function is called by:
 11519 ;;		_aCaptureInit
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text17
 11524  009064                     __ptext17:
 11525                           	opt callstack 0
 11526  009064                     _adcGetCh:
 11527                           	opt callstack 3
 11528                           
 11529                           ; BSR set to: 57
 11530                           ;incstack = 0
 11531                           ;adcGetCh@sel stored from wreg
 11532  009064  0101               	movlb	1	; () banked
 11533  009066  6F62               	movwf	adcGetCh@sel& (0+255),b
 11534                           
 11535                           ;aCapture.c: 26:     switch (sel){
 11536  009068  D015               	goto	l18797
 11537  00906A                     l18771:
 11538                           
 11539                           ; BSR set to: 1
 11540                           ;aCapture.c: 28:             return channel_ANE1;
 11541  00906A  0E21               	movlw	33
 11542  00906C  0012               	return	
 11543  00906E                     l18777:
 11544                           
 11545                           ; BSR set to: 1
 11546                           ;aCapture.c: 31:             return channel_ANE2;
 11547  00906E  0E22               	movlw	34
 11548  009070  0012               	return	
 11549  009072                     l18783:
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;aCapture.c: 34:             return channel_ANE0;
 11553  009072  0E20               	movlw	32
 11554  009074  0012               	return	
 11555  009076                     l1935:
 11556                           
 11557                           ; BSR set to: 1
 11558                           ;aCapture.c: 38:            LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pri
      +                          ntf("Fatal %d",100);
 11559  009076  94BA               	bcf	186,2,c	;volatile
 11560  009078  96BC               	bcf	188,3,c	;volatile
 11561  00907A  96BA               	bcf	186,3,c	;volatile
 11562                           
 11563                           ; BSR set to: 1
 11564  00907C  0EB1               	movlw	low STR_28
 11565  00907E  6F46               	movwf	printf@fmt& (0+255),b
 11566  009080  0EFF               	movlw	high STR_28
 11567  009082  6F47               	movwf	(printf@fmt+1)& (0+255),b
 11568  009084  0E00               	movlw	0
 11569  009086  6F49               	movwf	(?_printf+3)& (0+255),b
 11570  009088  0E64               	movlw	100
 11571  00908A  6F48               	movwf	(?_printf+2)& (0+255),b
 11572  00908C  ECE9  F04E         	call	_printf	;wreg free
 11573                           
 11574                           ; BSR set to: 2
 11575                           ;aCapture.c: 39:            return -1;
 11576  009090  0EFF               	movlw	255
 11577  009092  0012               	return	
 11578  009094                     l18797:
 11579  009094  0101               	movlb	1	; () banked
 11580  009096  5162               	movf	adcGetCh@sel& (0+255),w,b
 11581  009098  6F60               	movwf	??_adcGetCh& (0+255),b
 11582  00909A  6B61               	clrf	(??_adcGetCh+1)& (0+255),b
 11583                           
 11584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11585                           ; Switch size 1, requested type "simple"
 11586                           ; Number of cases is 1, Range of values is 0 to 0
 11587                           ; switch strategies available:
 11588                           ; Name         Instructions Cycles
 11589                           ; simple_byte            4     3 (average)
 11590                           ;	Chosen strategy is simple_byte
 11591  00909C  5161               	movf	(??_adcGetCh+1)& (0+255),w,b
 11592  00909E  0A00               	xorlw	0	; case 0
 11593  0090A0  A4D8               	btfss	status,2,c
 11594  0090A2  D7E9               	goto	l1935
 11595                           
 11596                           ; BSR set to: 1
 11597                           ; Switch size 1, requested type "simple"
 11598                           ; Number of cases is 3, Range of values is 0 to 2
 11599                           ; switch strategies available:
 11600                           ; Name         Instructions Cycles
 11601                           ; simple_byte           10     6 (average)
 11602                           ;	Chosen strategy is simple_byte
 11603  0090A4  5160               	movf	??_adcGetCh& (0+255),w,b
 11604  0090A6  0A00               	xorlw	0	; case 0
 11605  0090A8  B4D8               	btfsc	status,2,c
 11606  0090AA  D7DF               	goto	l18771
 11607  0090AC  0A01               	xorlw	1	; case 1
 11608  0090AE  B4D8               	btfsc	status,2,c
 11609  0090B0  D7DE               	goto	l18777
 11610  0090B2  0A03               	xorlw	3	; case 2
 11611  0090B4  B4D8               	btfsc	status,2,c
 11612  0090B6  D7DD               	goto	l18783
 11613  0090B8  D7DE               	goto	l1935
 11614  0090BA                     __end_of_adcGetCh:
 11615                           	opt callstack 0
 11616                           
 11617 ;; *************** function _ADCC_StartConversion *****************
 11618 ;; Defined at:
 11619 ;;		line 120 in file "mcc_generated_files/adcc.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;  channel         1    wreg     enum E16053
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;  channel         1   43[BANK0 ] enum E16053
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  1    wreg      void 
 11626 ;; Registers used:
 11627 ;;		wreg
 11628 ;; Tracked objects:
 11629 ;;		On entry : 3C/0
 11630 ;;		On exit  : 3F/3E
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;Total ram usage:        1 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:   17
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_aCaptureInit
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text18
 11648  00A2E4                     __ptext18:
 11649                           	opt callstack 0
 11650  00A2E4                     _ADCC_StartConversion:
 11651                           	opt callstack 12
 11652                           
 11653                           ;incstack = 0
 11654                           ;ADCC_StartConversion@channel stored from wreg
 11655  00A2E4  0100               	movlb	0	; () banked
 11656  00A2E6  6F8B               	movwf	ADCC_StartConversion@channel& (0+255),b
 11657                           
 11658                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 11659  00A2E8  0060  F22F  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 11660                           
 11661                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 11662  00A2EE  013E               	movlb	62	; () banked
 11663  00A2F0  8FF8               	bsf	248,7,b	;volatile
 11664                           
 11665                           ; BSR set to: 62
 11666                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 11667  00A2F2  81F8               	bsf	248,0,b	;volatile
 11668                           
 11669                           ; BSR set to: 62
 11670  00A2F4  0012               	return		;funcret
 11671  00A2F6                     __end_of_ADCC_StartConversion:
 11672                           	opt callstack 0
 11673                           
 11674 ;; *************** function ___fltol *****************
 11675 ;; Defined at:
 11676 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  f1              4   73[BANK0 ] void 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  exp1            1   78[BANK0 ] unsigned char 
 11681 ;;  sign1           1   77[BANK0 ] unsigned char 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  4   73[BANK0 ] long 
 11684 ;; Registers used:
 11685 ;;		wreg, status,2, status,0
 11686 ;; Tracked objects:
 11687 ;;		On entry : 3F/0
 11688 ;;		On exit  : 3F/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11694 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11695 ;;Total ram usage:       10 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:   17
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_main
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text19
 11706  007C8E                     __ptext19:
 11707                           	opt callstack 0
 11708  007C8E                     ___fltol:
 11709                           	opt callstack 13
 11710                           
 11711                           ; BSR set to: 0
 11712                           
 11713                           ; BSR set to: 62
 11714                           ;incstack = 0
 11715  007C8E  35AB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11716  007C90  35AC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11717  007C92  6FAE               	movwf	___fltol@exp1& (0+255),b
 11718  007C94  51AE               	movf	___fltol@exp1& (0+255),w,b
 11719  007C96  A4D8               	btfss	status,2,c
 11720  007C98  D009               	goto	l20289
 11721  007C9A                     u21620:
 11722                           
 11723                           ; BSR set to: 0
 11724  007C9A  0E00               	movlw	0
 11725  007C9C  6FA9               	movwf	?___fltol& (0+255),b
 11726  007C9E  0E00               	movlw	0
 11727  007CA0  6FAA               	movwf	(?___fltol+1)& (0+255),b
 11728  007CA2  0E00               	movlw	0
 11729  007CA4  6FAB               	movwf	(?___fltol+2)& (0+255),b
 11730  007CA6  0E00               	movlw	0
 11731  007CA8  6FAC               	movwf	(?___fltol+3)& (0+255),b
 11732  007CAA  0012               	return	
 11733  007CAC                     l20289:
 11734                           
 11735                           ; BSR set to: 0
 11736  007CAC  0060  F2A4  F100   	movff	___fltol@f1,??___fltol
 11737  007CB2  0060  F2A8  F101   	movff	___fltol@f1+1,??___fltol+1
 11738  007CB8  0060  F2AC  F102   	movff	___fltol@f1+2,??___fltol+2
 11739  007CBE  0060  F2B0  F103   	movff	___fltol@f1+3,??___fltol+3
 11740  007CC4  0E20               	movlw	32
 11741  007CC6  D006               	goto	u21630
 11742  007CC8                     u21635:
 11743  007CC8  0101               	movlb	1	; () banked
 11744  007CCA  90D8               	bcf	status,0,c
 11745  007CCC  3303               	rrcf	(??___fltol+3)& (0+255),f,b
 11746  007CCE  3302               	rrcf	(??___fltol+2)& (0+255),f,b
 11747  007CD0  3301               	rrcf	(??___fltol+1)& (0+255),f,b
 11748  007CD2  3300               	rrcf	??___fltol& (0+255),f,b
 11749  007CD4                     u21630:
 11750  007CD4  2EE8               	decfsz	wreg,f,c
 11751  007CD6  D7F8               	goto	u21635
 11752  007CD8  5100               	movf	??___fltol& (0+255),w,b
 11753  007CDA  0100               	movlb	0	; () banked
 11754  007CDC  6FAD               	movwf	___fltol@sign1& (0+255),b
 11755                           
 11756                           ; BSR set to: 0
 11757  007CDE  8FAB               	bsf	(___fltol@f1+2)& (0+255),7,b
 11758                           
 11759                           ; BSR set to: 0
 11760  007CE0  0EFF               	movlw	255
 11761  007CE2  17A9               	andwf	___fltol@f1& (0+255),f,b
 11762  007CE4  0EFF               	movlw	255
 11763  007CE6  17AA               	andwf	(___fltol@f1+1)& (0+255),f,b
 11764  007CE8  0EFF               	movlw	255
 11765  007CEA  17AB               	andwf	(___fltol@f1+2)& (0+255),f,b
 11766  007CEC  0E00               	movlw	0
 11767  007CEE  17AC               	andwf	(___fltol@f1+3)& (0+255),f,b
 11768                           
 11769                           ; BSR set to: 0
 11770  007CF0  0E96               	movlw	150
 11771  007CF2  5FAE               	subwf	___fltol@exp1& (0+255),f,b
 11772                           
 11773                           ; BSR set to: 0
 11774  007CF4  AFAE               	btfss	___fltol@exp1& (0+255),7,b
 11775  007CF6  D00D               	goto	l20309
 11776                           
 11777                           ; BSR set to: 0
 11778  007CF8  51AE               	movf	___fltol@exp1& (0+255),w,b
 11779  007CFA  0A80               	xorlw	128
 11780  007CFC  0F97               	addlw	151
 11781  007CFE  A0D8               	btfss	status,0,c
 11782  007D00  D7CC               	goto	u21620
 11783  007D02                     l20305:
 11784                           
 11785                           ; BSR set to: 0
 11786  007D02  90D8               	bcf	status,0,c
 11787  007D04  33AC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11788  007D06  33AB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11789  007D08  33AA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11790  007D0A  33A9               	rrcf	___fltol@f1& (0+255),f,b
 11791                           
 11792                           ; BSR set to: 0
 11793  007D0C  3FAE               	incfsz	___fltol@exp1& (0+255),f,b
 11794  007D0E  D7F9               	goto	l20305
 11795  007D10  D00D               	goto	u21670
 11796  007D12                     l20309:
 11797                           
 11798                           ; BSR set to: 0
 11799  007D12  0E1F               	movlw	31
 11800  007D14  65AE               	cpfsgt	___fltol@exp1& (0+255),b
 11801  007D16  D007               	goto	l20317
 11802  007D18  D7C0               	goto	u21620
 11803  007D1A                     l20315:
 11804                           
 11805                           ; BSR set to: 0
 11806  007D1A  90D8               	bcf	status,0,c
 11807  007D1C  37A9               	rlcf	___fltol@f1& (0+255),f,b
 11808  007D1E  37AA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11809  007D20  37AB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11810  007D22  37AC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11811  007D24  07AE               	decf	___fltol@exp1& (0+255),f,b
 11812  007D26                     l20317:
 11813                           
 11814                           ; BSR set to: 0
 11815  007D26  51AE               	movf	___fltol@exp1& (0+255),w,b
 11816  007D28  A4D8               	btfss	status,2,c
 11817  007D2A  D7F7               	goto	l20315
 11818  007D2C                     u21670:
 11819                           
 11820                           ; BSR set to: 0
 11821  007D2C  51AD               	movf	___fltol@sign1& (0+255),w,b
 11822  007D2E  B4D8               	btfsc	status,2,c
 11823  007D30  D008               	goto	l20323
 11824                           
 11825                           ; BSR set to: 0
 11826  007D32  1FAC               	comf	(___fltol@f1+3)& (0+255),f,b
 11827  007D34  1FAB               	comf	(___fltol@f1+2)& (0+255),f,b
 11828  007D36  1FAA               	comf	(___fltol@f1+1)& (0+255),f,b
 11829  007D38  6DA9               	negf	___fltol@f1& (0+255),b
 11830  007D3A  0E00               	movlw	0
 11831  007D3C  23AA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11832  007D3E  23AB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11833  007D40  23AC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11834  007D42                     l20323:
 11835                           
 11836                           ; BSR set to: 0
 11837  007D42  0060  F2A4  F0A9   	movff	___fltol@f1,?___fltol
 11838  007D48  0060  F2A8  F0AA   	movff	___fltol@f1+1,?___fltol+1
 11839  007D4E  0060  F2AC  F0AB   	movff	___fltol@f1+2,?___fltol+2
 11840  007D54  0060  F2B0  F0AC   	movff	___fltol@f1+3,?___fltol+3
 11841                           
 11842                           ; BSR set to: 0
 11843  007D5A  0012               	return		;funcret
 11844  007D5C                     __end_of___fltol:
 11845                           	opt callstack 0
 11846                           
 11847 ;; *************** function ___fladd *****************
 11848 ;; Defined at:
 11849 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;  b               4   57[BANK0 ] long 
 11852 ;;  a               4   61[BANK0 ] long 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;  grs             1   72[BANK0 ] unsigned char 
 11855 ;;  bexp            1   71[BANK0 ] unsigned char 
 11856 ;;  aexp            1   70[BANK0 ] unsigned char 
 11857 ;;  signs           1   69[BANK0 ] unsigned char 
 11858 ;; Return value:  Size  Location     Type
 11859 ;;                  4   57[BANK0 ] unsigned char 
 11860 ;; Registers used:
 11861 ;;		wreg, status,2, status,0
 11862 ;; Tracked objects:
 11863 ;;		On entry : 3F/0
 11864 ;;		On exit  : 3F/0
 11865 ;;		Unchanged: 0/0
 11866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11867 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11869 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11870 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;Total ram usage:       16 bytes
 11872 ;; Hardware stack levels used:    1
 11873 ;; Hardware stack levels required when called:   17
 11874 ;; This function calls:
 11875 ;;		Nothing
 11876 ;; This function is called by:
 11877 ;;		_main
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           	psect	text20
 11882  00556C                     __ptext20:
 11883                           	opt callstack 0
 11884  00556C                     ___fladd:
 11885                           	opt callstack 13
 11886                           
 11887                           ; BSR set to: 0
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;incstack = 0
 11891  00556C  519C               	movf	(___fladd@b+3)& (0+255),w,b
 11892  00556E  0B80               	andlw	128
 11893  005570  6FA5               	movwf	___fladd@signs& (0+255),b
 11894  005572  519C               	movf	(___fladd@b+3)& (0+255),w,b
 11895  005574  259C               	addwf	(___fladd@b+3)& (0+255),w,b
 11896  005576  6FA7               	movwf	___fladd@bexp& (0+255),b
 11897                           
 11898                           ; BSR set to: 0
 11899  005578  BF9B               	btfsc	(___fladd@b+2)& (0+255),7,b
 11900                           
 11901                           ; BSR set to: 0
 11902  00557A  81A7               	bsf	___fladd@bexp& (0+255),0,b
 11903                           
 11904                           ; BSR set to: 0
 11905  00557C  51A7               	movf	___fladd@bexp& (0+255),w,b
 11906  00557E  B4D8               	btfsc	status,2,c
 11907  005580  D00D               	goto	l20097
 11908                           
 11909                           ; BSR set to: 0
 11910  005582  29A7               	incf	___fladd@bexp& (0+255),w,b
 11911  005584  A4D8               	btfss	status,2,c
 11912  005586  D008               	goto	l20093
 11913                           
 11914                           ; BSR set to: 0
 11915  005588  0E00               	movlw	0
 11916  00558A  6F99               	movwf	___fladd@b& (0+255),b
 11917  00558C  0E00               	movlw	0
 11918  00558E  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 11919  005590  0E00               	movlw	0
 11920  005592  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 11921  005594  0E00               	movlw	0
 11922  005596  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 11923  005598                     l20093:
 11924                           
 11925                           ; BSR set to: 0
 11926  005598  8F9B               	bsf	(___fladd@b+2)& (0+255),7,b
 11927  00559A  D006               	goto	L13
 11928  00559C                     l20097:
 11929                           
 11930                           ; BSR set to: 0
 11931  00559C  0E00               	movlw	0
 11932  00559E  6F99               	movwf	___fladd@b& (0+255),b
 11933  0055A0  0E00               	movlw	0
 11934  0055A2  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 11935  0055A4  0E00               	movlw	0
 11936  0055A6  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 11937  0055A8                     L13:
 11938  0055A8  0E00               	movlw	0
 11939  0055AA  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 11940                           
 11941                           ; BSR set to: 0
 11942  0055AC  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 11943  0055AE  0B80               	andlw	128
 11944  0055B0  6FA6               	movwf	___fladd@aexp& (0+255),b
 11945                           
 11946                           ; BSR set to: 0
 11947  0055B2  51A5               	movf	___fladd@signs& (0+255),w,b
 11948  0055B4  19A6               	xorwf	___fladd@aexp& (0+255),w,b
 11949  0055B6  A4D8               	btfss	status,2,c
 11950                           
 11951                           ; BSR set to: 0
 11952  0055B8  8DA5               	bsf	___fladd@signs& (0+255),6,b
 11953                           
 11954                           ; BSR set to: 0
 11955  0055BA  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 11956  0055BC  25A0               	addwf	(___fladd@a+3)& (0+255),w,b
 11957  0055BE  6FA6               	movwf	___fladd@aexp& (0+255),b
 11958                           
 11959                           ; BSR set to: 0
 11960  0055C0  BF9F               	btfsc	(___fladd@a+2)& (0+255),7,b
 11961                           
 11962                           ; BSR set to: 0
 11963  0055C2  81A6               	bsf	___fladd@aexp& (0+255),0,b
 11964                           
 11965                           ; BSR set to: 0
 11966  0055C4  51A6               	movf	___fladd@aexp& (0+255),w,b
 11967  0055C6  B4D8               	btfsc	status,2,c
 11968  0055C8  D00D               	goto	l20121
 11969                           
 11970                           ; BSR set to: 0
 11971  0055CA  29A6               	incf	___fladd@aexp& (0+255),w,b
 11972  0055CC  A4D8               	btfss	status,2,c
 11973  0055CE  D008               	goto	l20117
 11974                           
 11975                           ; BSR set to: 0
 11976  0055D0  0E00               	movlw	0
 11977  0055D2  6F9D               	movwf	___fladd@a& (0+255),b
 11978  0055D4  0E00               	movlw	0
 11979  0055D6  6F9E               	movwf	(___fladd@a+1)& (0+255),b
 11980  0055D8  0E00               	movlw	0
 11981  0055DA  6F9F               	movwf	(___fladd@a+2)& (0+255),b
 11982  0055DC  0E00               	movlw	0
 11983  0055DE  6FA0               	movwf	(___fladd@a+3)& (0+255),b
 11984  0055E0                     l20117:
 11985                           
 11986                           ; BSR set to: 0
 11987  0055E0  8F9F               	bsf	(___fladd@a+2)& (0+255),7,b
 11988  0055E2  D006               	goto	L14
 11989  0055E4                     l20121:
 11990                           
 11991                           ; BSR set to: 0
 11992  0055E4  0E00               	movlw	0
 11993  0055E6  6F9D               	movwf	___fladd@a& (0+255),b
 11994  0055E8  0E00               	movlw	0
 11995  0055EA  6F9E               	movwf	(___fladd@a+1)& (0+255),b
 11996  0055EC  0E00               	movlw	0
 11997  0055EE  6F9F               	movwf	(___fladd@a+2)& (0+255),b
 11998  0055F0                     L14:
 11999  0055F0  0E00               	movlw	0
 12000  0055F2  6FA0               	movwf	(___fladd@a+3)& (0+255),b
 12001                           
 12002                           ; BSR set to: 0
 12003  0055F4  51A7               	movf	___fladd@bexp& (0+255),w,b
 12004  0055F6  5DA6               	subwf	___fladd@aexp& (0+255),w,b
 12005  0055F8  B0D8               	btfsc	status,0,c
 12006  0055FA  D031               	goto	l20159
 12007                           
 12008                           ; BSR set to: 0
 12009  0055FC  ADA5               	btfss	___fladd@signs& (0+255),6,b
 12010  0055FE  D002               	goto	l20129
 12011                           
 12012                           ; BSR set to: 0
 12013  005600  0E80               	movlw	128
 12014  005602  1BA5               	xorwf	___fladd@signs& (0+255),f,b
 12015  005604                     l20129:
 12016                           
 12017                           ; BSR set to: 0
 12018  005604  0060  F29C  F0A8   	movff	___fladd@bexp,___fladd@grs
 12019                           
 12020                           ; BSR set to: 0
 12021  00560A  0060  F298  F0A7   	movff	___fladd@aexp,___fladd@bexp
 12022                           
 12023                           ; BSR set to: 0
 12024  005610  0060  F2A0  F0A6   	movff	___fladd@grs,___fladd@aexp
 12025                           
 12026                           ; BSR set to: 0
 12027  005616  0060  F264  F0A8   	movff	___fladd@b,___fladd@grs
 12028                           
 12029                           ; BSR set to: 0
 12030  00561C  0060  F274  F099   	movff	___fladd@a,___fladd@b
 12031                           
 12032                           ; BSR set to: 0
 12033  005622  0060  F2A0  F09D   	movff	___fladd@grs,___fladd@a
 12034                           
 12035                           ; BSR set to: 0
 12036  005628  0060  F268  F0A8   	movff	___fladd@b+1,___fladd@grs
 12037                           
 12038                           ; BSR set to: 0
 12039  00562E  0060  F278  F09A   	movff	___fladd@a+1,___fladd@b+1
 12040                           
 12041                           ; BSR set to: 0
 12042  005634  0060  F2A0  F09E   	movff	___fladd@grs,___fladd@a+1
 12043                           
 12044                           ; BSR set to: 0
 12045  00563A  0060  F26C  F0A8   	movff	___fladd@b+2,___fladd@grs
 12046                           
 12047                           ; BSR set to: 0
 12048  005640  0060  F27C  F09B   	movff	___fladd@a+2,___fladd@b+2
 12049                           
 12050                           ; BSR set to: 0
 12051  005646  0060  F2A0  F09F   	movff	___fladd@grs,___fladd@a+2
 12052                           
 12053                           ; BSR set to: 0
 12054  00564C  0060  F270  F0A8   	movff	___fladd@b+3,___fladd@grs
 12055                           
 12056                           ; BSR set to: 0
 12057  005652  0060  F280  F09C   	movff	___fladd@a+3,___fladd@b+3
 12058                           
 12059                           ; BSR set to: 0
 12060  005658  0060  F2A0  F0A0   	movff	___fladd@grs,___fladd@a+3
 12061  00565E                     l20159:
 12062                           
 12063                           ; BSR set to: 0
 12064  00565E  0E00               	movlw	0
 12065  005660  6FA8               	movwf	___fladd@grs& (0+255),b
 12066                           
 12067                           ; BSR set to: 0
 12068  005662  51A7               	movf	___fladd@bexp& (0+255),w,b
 12069  005664  0060  F298  F0A1   	movff	___fladd@aexp,??___fladd
 12070  00566A  6BA2               	clrf	(??___fladd+1)& (0+255),b
 12071  00566C  5FA1               	subwf	??___fladd& (0+255),f,b
 12072  00566E  0E00               	movlw	0
 12073  005670  5BA2               	subwfb	(??___fladd+1)& (0+255),f,b
 12074  005672  BFA2               	btfsc	(??___fladd+1)& (0+255),7,b
 12075  005674  D02D               	goto	l3706
 12076  005676  51A2               	movf	(??___fladd+1)& (0+255),w,b
 12077  005678  E104               	bnz	u21320
 12078  00567A  0E1A               	movlw	26
 12079  00567C  5DA1               	subwf	??___fladd& (0+255),w,b
 12080  00567E  A0D8               	btfss	status,0,c
 12081  005680  D027               	goto	l3706
 12082  005682                     u21320:
 12083                           
 12084                           ; BSR set to: 0
 12085  005682  5199               	movf	___fladd@b& (0+255),w,b
 12086  005684  119A               	iorwf	(___fladd@b+1)& (0+255),w,b
 12087  005686  119B               	iorwf	(___fladd@b+2)& (0+255),w,b
 12088  005688  119C               	iorwf	(___fladd@b+3)& (0+255),w,b
 12089  00568A  B4D8               	btfsc	status,2,c
 12090  00568C  D002               	goto	u21330
 12091  00568E  0E01               	movlw	1
 12092  005690  D001               	goto	u21340
 12093  005692                     u21330:
 12094  005692  0E00               	movlw	0
 12095  005694                     u21340:
 12096  005694  6FA8               	movwf	___fladd@grs& (0+255),b
 12097                           
 12098                           ; BSR set to: 0
 12099  005696  0E00               	movlw	0
 12100  005698  6F99               	movwf	___fladd@b& (0+255),b
 12101  00569A  0E00               	movlw	0
 12102  00569C  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12103  00569E  0E00               	movlw	0
 12104  0056A0  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12105  0056A2  0E00               	movlw	0
 12106  0056A4  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12107                           
 12108                           ; BSR set to: 0
 12109  0056A6  0060  F298  F0A7   	movff	___fladd@aexp,___fladd@bexp
 12110  0056AC  D015               	goto	u21370
 12111  0056AE                     l3707:
 12112                           
 12113                           ; BSR set to: 0
 12114  0056AE  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12115  0056B0  D005               	goto	l20171
 12116                           
 12117                           ; BSR set to: 0
 12118  0056B2  90D8               	bcf	status,0,c
 12119  0056B4  31A8               	rrcf	___fladd@grs& (0+255),w,b
 12120  0056B6  0901               	iorlw	1
 12121  0056B8  6FA8               	movwf	___fladd@grs& (0+255),b
 12122  0056BA  D002               	goto	l20173
 12123  0056BC                     l20171:
 12124                           
 12125                           ; BSR set to: 0
 12126  0056BC  90D8               	bcf	status,0,c
 12127  0056BE  33A8               	rrcf	___fladd@grs& (0+255),f,b
 12128  0056C0                     l20173:
 12129                           
 12130                           ; BSR set to: 0
 12131  0056C0  B199               	btfsc	___fladd@b& (0+255),0,b
 12132                           
 12133                           ; BSR set to: 0
 12134  0056C2  8FA8               	bsf	___fladd@grs& (0+255),7,b
 12135                           
 12136                           ; BSR set to: 0
 12137  0056C4  359C               	rlcf	(___fladd@b+3)& (0+255),w,b
 12138  0056C6  339C               	rrcf	(___fladd@b+3)& (0+255),f,b
 12139  0056C8  339B               	rrcf	(___fladd@b+2)& (0+255),f,b
 12140  0056CA  339A               	rrcf	(___fladd@b+1)& (0+255),f,b
 12141  0056CC  3399               	rrcf	___fladd@b& (0+255),f,b
 12142                           
 12143                           ; BSR set to: 0
 12144  0056CE  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12145  0056D0                     l3706:
 12146                           
 12147                           ; BSR set to: 0
 12148  0056D0  51A6               	movf	___fladd@aexp& (0+255),w,b
 12149  0056D2  5DA7               	subwf	___fladd@bexp& (0+255),w,b
 12150  0056D4  A0D8               	btfss	status,0,c
 12151  0056D6  D7EB               	goto	l3707
 12152  0056D8                     u21370:
 12153                           
 12154                           ; BSR set to: 0
 12155  0056D8  BDA5               	btfsc	___fladd@signs& (0+255),6,b
 12156  0056DA  D028               	goto	l20205
 12157                           
 12158                           ; BSR set to: 0
 12159  0056DC  51A7               	movf	___fladd@bexp& (0+255),w,b
 12160  0056DE  A4D8               	btfss	status,2,c
 12161  0056E0  D009               	goto	l20187
 12162                           
 12163                           ; BSR set to: 0
 12164  0056E2  0E00               	movlw	0
 12165  0056E4  6F99               	movwf	?___fladd& (0+255),b
 12166  0056E6  0E00               	movlw	0
 12167  0056E8  6F9A               	movwf	(?___fladd+1)& (0+255),b
 12168  0056EA  0E00               	movlw	0
 12169  0056EC  6F9B               	movwf	(?___fladd+2)& (0+255),b
 12170  0056EE  0E00               	movlw	0
 12171  0056F0  6F9C               	movwf	(?___fladd+3)& (0+255),b
 12172  0056F2  0012               	return	
 12173  0056F4                     l20187:
 12174                           
 12175                           ; BSR set to: 0
 12176  0056F4  519D               	movf	___fladd@a& (0+255),w,b
 12177  0056F6  2799               	addwf	___fladd@b& (0+255),f,b
 12178  0056F8  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12179  0056FA  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12180  0056FC  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12181  0056FE  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12182  005700  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12183  005702  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12184                           
 12185                           ; BSR set to: 0
 12186  005704  A19C               	btfss	(___fladd@b+3)& (0+255),0,b
 12187  005706  D071               	goto	u21500
 12188                           
 12189                           ; BSR set to: 0
 12190  005708  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12191  00570A  D005               	goto	l20195
 12192                           
 12193                           ; BSR set to: 0
 12194  00570C  90D8               	bcf	status,0,c
 12195  00570E  31A8               	rrcf	___fladd@grs& (0+255),w,b
 12196  005710  0901               	iorlw	1
 12197  005712  6FA8               	movwf	___fladd@grs& (0+255),b
 12198  005714  D002               	goto	l20197
 12199  005716                     l20195:
 12200                           
 12201                           ; BSR set to: 0
 12202  005716  90D8               	bcf	status,0,c
 12203  005718  33A8               	rrcf	___fladd@grs& (0+255),f,b
 12204  00571A                     l20197:
 12205                           
 12206                           ; BSR set to: 0
 12207  00571A  B199               	btfsc	___fladd@b& (0+255),0,b
 12208                           
 12209                           ; BSR set to: 0
 12210  00571C  8FA8               	bsf	___fladd@grs& (0+255),7,b
 12211                           
 12212                           ; BSR set to: 0
 12213  00571E  359C               	rlcf	(___fladd@b+3)& (0+255),w,b
 12214  005720  339C               	rrcf	(___fladd@b+3)& (0+255),f,b
 12215  005722  339B               	rrcf	(___fladd@b+2)& (0+255),f,b
 12216  005724  339A               	rrcf	(___fladd@b+1)& (0+255),f,b
 12217  005726  3399               	rrcf	___fladd@b& (0+255),f,b
 12218                           
 12219                           ; BSR set to: 0
 12220  005728  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12221  00572A  D05F               	goto	u21500
 12222  00572C                     l20205:
 12223                           
 12224                           ; BSR set to: 0
 12225  00572C  519D               	movf	___fladd@a& (0+255),w,b
 12226  00572E  5D99               	subwf	___fladd@b& (0+255),w,b
 12227  005730  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12228  005732  599A               	subwfb	(___fladd@b+1)& (0+255),w,b
 12229  005734  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12230  005736  599B               	subwfb	(___fladd@b+2)& (0+255),w,b
 12231  005738  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12232  00573A  0A80               	xorlw	128
 12233  00573C  6FA1               	movwf	??___fladd& (0+255),b
 12234  00573E  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12235  005740  0A80               	xorlw	128
 12236  005742  59A1               	subwfb	??___fladd& (0+255),w,b
 12237  005744  B0D8               	btfsc	status,0,c
 12238  005746  D025               	goto	l20215
 12239                           
 12240                           ; BSR set to: 0
 12241  005748  5199               	movf	___fladd@b& (0+255),w,b
 12242  00574A  5D9D               	subwf	___fladd@a& (0+255),w,b
 12243  00574C  6FA1               	movwf	??___fladd& (0+255),b
 12244  00574E  519A               	movf	(___fladd@b+1)& (0+255),w,b
 12245  005750  599E               	subwfb	(___fladd@a+1)& (0+255),w,b
 12246  005752  6FA2               	movwf	(??___fladd+1)& (0+255),b
 12247  005754  519B               	movf	(___fladd@b+2)& (0+255),w,b
 12248  005756  599F               	subwfb	(___fladd@a+2)& (0+255),w,b
 12249  005758  6FA3               	movwf	(??___fladd+2)& (0+255),b
 12250  00575A  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12251  00575C  59A0               	subwfb	(___fladd@a+3)& (0+255),w,b
 12252  00575E  6FA4               	movwf	(??___fladd+3)& (0+255),b
 12253  005760  0EFF               	movlw	255
 12254  005762  25A1               	addwf	??___fladd& (0+255),w,b
 12255  005764  6F99               	movwf	___fladd@b& (0+255),b
 12256  005766  0EFF               	movlw	255
 12257  005768  21A2               	addwfc	(??___fladd+1)& (0+255),w,b
 12258  00576A  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12259  00576C  0EFF               	movlw	255
 12260  00576E  21A3               	addwfc	(??___fladd+2)& (0+255),w,b
 12261  005770  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12262  005772  0EFF               	movlw	255
 12263  005774  21A4               	addwfc	(??___fladd+3)& (0+255),w,b
 12264  005776  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12265  005778  0E80               	movlw	128
 12266  00577A  1BA5               	xorwf	___fladd@signs& (0+255),f,b
 12267                           
 12268                           ; BSR set to: 0
 12269  00577C  6DA8               	negf	___fladd@grs& (0+255),b
 12270                           
 12271                           ; BSR set to: 0
 12272  00577E  51A8               	movf	___fladd@grs& (0+255),w,b
 12273  005780  A4D8               	btfss	status,2,c
 12274  005782  D00F               	goto	l3722
 12275                           
 12276                           ; BSR set to: 0
 12277  005784  0E01               	movlw	1
 12278  005786  2799               	addwf	___fladd@b& (0+255),f,b
 12279  005788  0E00               	movlw	0
 12280  00578A  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12281  00578C  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12282  00578E  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12283  005790  D008               	goto	l3722
 12284  005792                     l20215:
 12285                           
 12286                           ; BSR set to: 0
 12287  005792  519D               	movf	___fladd@a& (0+255),w,b
 12288  005794  5F99               	subwf	___fladd@b& (0+255),f,b
 12289  005796  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12290  005798  5B9A               	subwfb	(___fladd@b+1)& (0+255),f,b
 12291  00579A  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12292  00579C  5B9B               	subwfb	(___fladd@b+2)& (0+255),f,b
 12293  00579E  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12294  0057A0  5B9C               	subwfb	(___fladd@b+3)& (0+255),f,b
 12295  0057A2                     l3722:
 12296                           
 12297                           ; BSR set to: 0
 12298  0057A2  5199               	movf	___fladd@b& (0+255),w,b
 12299  0057A4  119A               	iorwf	(___fladd@b+1)& (0+255),w,b
 12300  0057A6  119B               	iorwf	(___fladd@b+2)& (0+255),w,b
 12301  0057A8  119C               	iorwf	(___fladd@b+3)& (0+255),w,b
 12302  0057AA  A4D8               	btfss	status,2,c
 12303  0057AC  D01C               	goto	l20239
 12304                           
 12305                           ; BSR set to: 0
 12306  0057AE  51A8               	movf	___fladd@grs& (0+255),w,b
 12307  0057B0  A4D8               	btfss	status,2,c
 12308  0057B2  D019               	goto	l20239
 12309                           
 12310                           ; BSR set to: 0
 12311  0057B4  0E00               	movlw	0
 12312  0057B6  6F99               	movwf	?___fladd& (0+255),b
 12313  0057B8  0E00               	movlw	0
 12314  0057BA  6F9A               	movwf	(?___fladd+1)& (0+255),b
 12315  0057BC  0E00               	movlw	0
 12316  0057BE  6F9B               	movwf	(?___fladd+2)& (0+255),b
 12317  0057C0  0E00               	movlw	0
 12318  0057C2  6F9C               	movwf	(?___fladd+3)& (0+255),b
 12319  0057C4  0012               	return	
 12320  0057C6                     l20223:
 12321                           
 12322                           ; BSR set to: 0
 12323  0057C6  90D8               	bcf	status,0,c
 12324  0057C8  3799               	rlcf	___fladd@b& (0+255),f,b
 12325  0057CA  379A               	rlcf	(___fladd@b+1)& (0+255),f,b
 12326  0057CC  379B               	rlcf	(___fladd@b+2)& (0+255),f,b
 12327  0057CE  379C               	rlcf	(___fladd@b+3)& (0+255),f,b
 12328                           
 12329                           ; BSR set to: 0
 12330  0057D0  BFA8               	btfsc	___fladd@grs& (0+255),7,b
 12331                           
 12332                           ; BSR set to: 0
 12333  0057D2  8199               	bsf	___fladd@b& (0+255),0,b
 12334                           
 12335                           ; BSR set to: 0
 12336  0057D4  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12337  0057D6  D002               	goto	l20233
 12338                           
 12339                           ; BSR set to: 0
 12340  0057D8  80D8               	bsf	status,0,c
 12341  0057DA  D001               	goto	L15
 12342  0057DC                     l20233:
 12343                           
 12344                           ; BSR set to: 0
 12345  0057DC  90D8               	bcf	status,0,c
 12346  0057DE                     L15:
 12347  0057DE  37A8               	rlcf	___fladd@grs& (0+255),f,b
 12348                           
 12349                           ; BSR set to: 0
 12350  0057E0  51A7               	movf	___fladd@bexp& (0+255),w,b
 12351  0057E2  A4D8               	btfss	status,2,c
 12352                           
 12353                           ; BSR set to: 0
 12354  0057E4  07A7               	decf	___fladd@bexp& (0+255),f,b
 12355  0057E6                     l20239:
 12356                           
 12357                           ; BSR set to: 0
 12358  0057E6  AF9B               	btfss	(___fladd@b+2)& (0+255),7,b
 12359  0057E8  D7EE               	goto	l20223
 12360  0057EA                     u21500:
 12361                           
 12362                           ; BSR set to: 0
 12363  0057EA  0E00               	movlw	0
 12364  0057EC  6FA6               	movwf	___fladd@aexp& (0+255),b
 12365                           
 12366                           ; BSR set to: 0
 12367  0057EE  AFA8               	btfss	___fladd@grs& (0+255),7,b
 12368  0057F0  D00C               	goto	l3731
 12369                           
 12370                           ; BSR set to: 0
 12371  0057F2  0060  F2A0  F0A1   	movff	___fladd@grs,??___fladd
 12372  0057F8  0E7F               	movlw	127
 12373  0057FA  17A1               	andwf	??___fladd& (0+255),f,b
 12374  0057FC  B4D8               	btfsc	status,2,c
 12375  0057FE  D003               	goto	l3732
 12376  005800                     u21520:
 12377                           
 12378                           ; BSR set to: 0
 12379  005800  0E01               	movlw	1
 12380  005802  6FA6               	movwf	___fladd@aexp& (0+255),b
 12381  005804  D002               	goto	l3731
 12382  005806                     l3732:
 12383                           
 12384                           ; BSR set to: 0
 12385  005806  B199               	btfsc	___fladd@b& (0+255),0,b
 12386  005808  D7FB               	goto	u21520
 12387  00580A                     l3731:
 12388                           
 12389                           ; BSR set to: 0
 12390  00580A  51A6               	movf	___fladd@aexp& (0+255),w,b
 12391  00580C  B4D8               	btfsc	status,2,c
 12392  00580E  D028               	goto	l20259
 12393                           
 12394                           ; BSR set to: 0
 12395  005810  0E01               	movlw	1
 12396  005812  2799               	addwf	___fladd@b& (0+255),f,b
 12397  005814  0E00               	movlw	0
 12398  005816  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12399  005818  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12400  00581A  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12401                           
 12402                           ; BSR set to: 0
 12403  00581C  A19C               	btfss	(___fladd@b+3)& (0+255),0,b
 12404  00581E  D020               	goto	l20259
 12405                           
 12406                           ; BSR set to: 0
 12407  005820  0060  F264  F0A1   	movff	___fladd@b,??___fladd
 12408  005826  0060  F268  F0A2   	movff	___fladd@b+1,??___fladd+1
 12409  00582C  0060  F26C  F0A3   	movff	___fladd@b+2,??___fladd+2
 12410  005832  0060  F270  F0A4   	movff	___fladd@b+3,??___fladd+3
 12411  005838  35A4               	rlcf	(??___fladd+3)& (0+255),w,b
 12412  00583A  33A4               	rrcf	(??___fladd+3)& (0+255),f,b
 12413  00583C  33A3               	rrcf	(??___fladd+2)& (0+255),f,b
 12414  00583E  33A2               	rrcf	(??___fladd+1)& (0+255),f,b
 12415  005840  33A1               	rrcf	??___fladd& (0+255),f,b
 12416  005842  0060  F284  F099   	movff	??___fladd,___fladd@b
 12417  005848  0060  F288  F09A   	movff	??___fladd+1,___fladd@b+1
 12418  00584E  0060  F28C  F09B   	movff	??___fladd+2,___fladd@b+2
 12419  005854  0060  F290  F09C   	movff	??___fladd+3,___fladd@b+3
 12420  00585A  29A7               	incf	___fladd@bexp& (0+255),w,b
 12421  00585C  A4D8               	btfss	status,2,c
 12422                           
 12423                           ; BSR set to: 0
 12424  00585E  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12425  005860                     l20259:
 12426                           
 12427                           ; BSR set to: 0
 12428  005860  29A7               	incf	___fladd@bexp& (0+255),w,b
 12429  005862  B4D8               	btfsc	status,2,c
 12430  005864  D003               	goto	u21580
 12431                           
 12432                           ; BSR set to: 0
 12433  005866  51A7               	movf	___fladd@bexp& (0+255),w,b
 12434  005868  A4D8               	btfss	status,2,c
 12435  00586A  D00D               	goto	l20267
 12436  00586C                     u21580:
 12437                           
 12438                           ; BSR set to: 0
 12439  00586C  0E00               	movlw	0
 12440  00586E  6F99               	movwf	___fladd@b& (0+255),b
 12441  005870  0E00               	movlw	0
 12442  005872  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12443  005874  0E00               	movlw	0
 12444  005876  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12445  005878  0E00               	movlw	0
 12446  00587A  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12447  00587C  51A7               	movf	___fladd@bexp& (0+255),w,b
 12448  00587E  A4D8               	btfss	status,2,c
 12449  005880  D002               	goto	l20267
 12450                           
 12451                           ; BSR set to: 0
 12452  005882  0E00               	movlw	0
 12453  005884  6FA5               	movwf	___fladd@signs& (0+255),b
 12454  005886                     l20267:
 12455                           
 12456                           ; BSR set to: 0
 12457  005886  A1A7               	btfss	___fladd@bexp& (0+255),0,b
 12458  005888  D002               	goto	l20271
 12459                           
 12460                           ; BSR set to: 0
 12461  00588A  8F9B               	bsf	(___fladd@b+2)& (0+255),7,b
 12462  00588C  D001               	goto	l20273
 12463  00588E                     l20271:
 12464                           
 12465                           ; BSR set to: 0
 12466  00588E  9F9B               	bcf	(___fladd@b+2)& (0+255),7,b
 12467  005890                     l20273:
 12468                           
 12469                           ; BSR set to: 0
 12470  005890  90D8               	bcf	status,0,c
 12471  005892  31A7               	rrcf	___fladd@bexp& (0+255),w,b
 12472  005894  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12473                           
 12474                           ; BSR set to: 0
 12475  005896  BFA5               	btfsc	___fladd@signs& (0+255),7,b
 12476                           
 12477                           ; BSR set to: 0
 12478  005898  8F9C               	bsf	(___fladd@b+3)& (0+255),7,b
 12479                           
 12480                           ; BSR set to: 0
 12481  00589A  0060  F264  F099   	movff	___fladd@b,?___fladd
 12482  0058A0  0060  F268  F09A   	movff	___fladd@b+1,?___fladd+1
 12483  0058A6  0060  F26C  F09B   	movff	___fladd@b+2,?___fladd+2
 12484  0058AC  0060  F270  F09C   	movff	___fladd@b+3,?___fladd+3
 12485                           
 12486                           ; BSR set to: 0
 12487  0058B2  0012               	return		;funcret
 12488  0058B4                     __end_of___fladd:
 12489                           	opt callstack 0
 12490                           
 12491 ;; *************** function _TMR4_Start *****************
 12492 ;; Defined at:
 12493 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;		None
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;		None
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  1    wreg      void 
 12500 ;; Registers used:
 12501 ;;		None
 12502 ;; Tracked objects:
 12503 ;;		On entry : 3F/1
 12504 ;;		On exit  : 3F/1
 12505 ;;		Unchanged: 3F/0
 12506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12511 ;;Total ram usage:        0 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:   17
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_main
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           	psect	text21
 12522  00A5CA                     __ptext21:
 12523                           	opt callstack 0
 12524  00A5CA                     _TMR4_Start:
 12525                           	opt callstack 13
 12526                           
 12527                           ; BSR set to: 1
 12528                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;incstack = 0
 12532  00A5CA  8EA0               	bsf	160,7,c	;volatile
 12533                           
 12534                           ; BSR set to: 1
 12535  00A5CC  0012               	return		;funcret
 12536  00A5CE                     __end_of_TMR4_Start:
 12537                           	opt callstack 0
 12538                           
 12539 ;; *************** function _SelfTest *****************
 12540 ;; Defined at:
 12541 ;;		line 207 in file "selftest.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;  tstScreen       1    wreg     _Bool 
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;  tstScreen       1    0[BANK3 ] _Bool 
 12546 ;;  vddVal          2   12[BANK3 ] short 
 12547 ;;  vddValMin       2   10[BANK3 ] short 
 12548 ;;  vddValMax       2    8[BANK3 ] short 
 12549 ;;  tstamp          2    6[BANK3 ] unsigned short 
 12550 ;;  cIdx            2    4[BANK3 ] int 
 12551 ;;  idx             2    2[BANK3 ] int 
 12552 ;;  aPValMean       2    0        short 
 12553 ;;  aPValMin        2    0        short 
 12554 ;;  aPValMax        2    0        short 
 12555 ;;  aPVal           2    0        short 
 12556 ;;  initOk          1   14[BANK3 ] _Bool 
 12557 ;;  lcdBLight       1    1[BANK3 ] _Bool 
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  1    wreg      _Bool 
 12560 ;; Registers used:
 12561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12562 ;; Tracked objects:
 12563 ;;		On entry : 3F/3
 12564 ;;		On exit  : 3F/3
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Totals:         0       0       0       4      15       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;Total ram usage:       19 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:   33
 12574 ;; This function calls:
 12575 ;;		_MonitorMsgSendBlock
 12576 ;;		_aCaptGetResult
 12577 ;;		_aCaptureOffSet
 12578 ;;		_flowChk
 12579 ;;		_keyPeek
 12580 ;;		_keyReadEC
 12581 ;;		_keyReadInit
 12582 ;;		_pressureSensorChk
 12583 ;;		_printf
 12584 ;;		_printstrblock
 12585 ;;		_setBacklight
 12586 ;;		_setCursor
 12587 ;;		_sprintf
 12588 ;;		_timeDelayMs
 12589 ;;		_timeElapsedR
 12590 ;;		_timeGet
 12591 ;; This function is called by:
 12592 ;;		_main
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text22
 12597  0038D4                     __ptext22:
 12598                           	opt callstack 0
 12599  0038D4                     _SelfTest:
 12600                           	opt callstack 0
 12601                           
 12602                           ; BSR set to: 1
 12603                           ;incstack = 0
 12604 ;; hardware stack exceeded
 12605                           ;SelfTest@tstScreen stored from wreg
 12606  0038D4  6F90               	movwf	SelfTest@tstScreen& (0+255),b
 12607                           
 12608                           ;selftest.c: 208:   int idx, cIdx;;selftest.c: 209:   int16_t vddVal, vddValMax, vddValM
      +                          in;;selftest.c: 210:   int16_t aPVal, aPValMax, aPValMin, aPValMean;;selftest.c: 211:   
      +                          _Bool lcdBLight;;selftest.c: 212:   time_t tstamp;;selftest.c: 213:   _Bool initOk;;self
      +                          test.c: 215:   ctrlStatus = CTRL_UNCAL;
 12609  0038D6  0E00               	movlw	0
 12610  0038D8  0101               	movlb	1	; () banked
 12611  0038DA  6FC8               	movwf	_ctrlStatus& (0+255),b
 12612                           
 12613                           ; BSR set to: 1
 12614                           ;selftest.c: 216:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 12615  0038DC  94BA               	bcf	186,2,c	;volatile
 12616                           
 12617                           ; BSR set to: 1
 12618  0038DE  96BC               	bcf	188,3,c	;volatile
 12619                           
 12620                           ; BSR set to: 1
 12621                           ;selftest.c: 217:   LATAbits.LATA3 = 0;
 12622  0038E0  96BA               	bcf	186,3,c	;volatile
 12623                           
 12624                           ; BSR set to: 1
 12625                           ;selftest.c: 219:     if (tstScreen) {
 12626  0038E2  0103               	movlb	3	; () banked
 12627  0038E4  5190               	movf	SelfTest@tstScreen& (0+255),w,b
 12628  0038E6  B4D8               	btfsc	status,2,c
 12629  0038E8  D065               	goto	u20260
 12630                           
 12631                           ; BSR set to: 3
 12632                           ;selftest.c: 220:         setCursor(0, 1);
 12633  0038EA  0E01               	movlw	1
 12634  0038EC  0100               	movlb	0	; () banked
 12635  0038EE  6F92               	movwf	setCursor@row& (0+255),b
 12636  0038F0  0E00               	movlw	0
 12637  0038F2  EC55  F04B         	call	_setCursor
 12638                           
 12639                           ;selftest.c: 221:         printstrblock("SELF-TEST       ");
 12640  0038F6  0EB1               	movlw	low STR_78
 12641  0038F8  0100               	movlb	0	; () banked
 12642  0038FA  6F8F               	movwf	printstrblock@c& (0+255),b
 12643  0038FC  0EFD               	movlw	high STR_78
 12644  0038FE  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12645  003900  EC4E  F04F         	call	_printstrblock	;wreg free
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;selftest.c: 222:         setCursor(0, 0);
 12649  003904  0E00               	movlw	0
 12650  003906  6F92               	movwf	setCursor@row& (0+255),b
 12651  003908  0E00               	movlw	0
 12652  00390A  EC55  F04B         	call	_setCursor
 12653                           
 12654                           ;selftest.c: 223:         printstrblock("DISPLAY TEST    ");
 12655  00390E  0EE4               	movlw	low STR_79
 12656  003910  0100               	movlb	0	; () banked
 12657  003912  6F8F               	movwf	printstrblock@c& (0+255),b
 12658  003914  0EFD               	movlw	high STR_79
 12659  003916  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12660  003918  EC4E  F04F         	call	_printstrblock	;wreg free
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;selftest.c: 224:         for (idx = 0; idx < 10; idx++) {
 12664  00391C  0E00               	movlw	0
 12665  00391E  0103               	movlb	3	; () banked
 12666  003920  6F93               	movwf	(SelfTest@idx+1)& (0+255),b
 12667  003922  0E00               	movlw	0
 12668  003924  6F92               	movwf	SelfTest@idx& (0+255),b
 12669  003926                     l19409:
 12670                           
 12671                           ; BSR set to: 3
 12672                           ;selftest.c: 225:             setCursor(0, 0);
 12673  003926  0E00               	movlw	0
 12674  003928  0100               	movlb	0	; () banked
 12675  00392A  6F92               	movwf	setCursor@row& (0+255),b
 12676  00392C  0E00               	movlw	0
 12677  00392E  EC55  F04B         	call	_setCursor
 12678                           
 12679                           ;selftest.c: 226:             lcdTopRow[0] = 0x30 + idx;
 12680  003932  0103               	movlb	3	; () banked
 12681  003934  5192               	movf	SelfTest@idx& (0+255),w,b
 12682  003936  0F30               	addlw	48
 12683  003938  0102               	movlb	2	; () banked
 12684  00393A  6FA3               	movwf	_lcdTopRow& (0+255),b
 12685                           
 12686                           ; BSR set to: 2
 12687                           ;selftest.c: 227:             for (cIdx = 1; cIdx < 16; cIdx++) {
 12688  00393C  0E00               	movlw	0
 12689  00393E  0103               	movlb	3	; () banked
 12690  003940  6F95               	movwf	(SelfTest@cIdx+1)& (0+255),b
 12691  003942  0E01               	movlw	1
 12692  003944  6F94               	movwf	SelfTest@cIdx& (0+255),b
 12693  003946                     l19419:
 12694                           
 12695                           ; BSR set to: 3
 12696                           ;selftest.c: 228:                 lcdTopRow[cIdx] = lcdTopRow[0];
 12697  003946  0EA3               	movlw	low _lcdTopRow
 12698  003948  2594               	addwf	SelfTest@cIdx& (0+255),w,b
 12699  00394A  6ED9               	movwf	fsr2l,c
 12700  00394C  0E02               	movlw	high _lcdTopRow
 12701  00394E  2195               	addwfc	(SelfTest@cIdx+1)& (0+255),w,b
 12702  003950  6EDA               	movwf	fsr2h,c
 12703  003952  0060  FA8F  FFDF   	movff	_lcdTopRow,indf2
 12704                           
 12705                           ; BSR set to: 3
 12706                           ;selftest.c: 229:             }
 12707  003958  4B94               	infsnz	SelfTest@cIdx& (0+255),f,b
 12708  00395A  2B95               	incf	(SelfTest@cIdx+1)& (0+255),f,b
 12709                           
 12710                           ; BSR set to: 3
 12711  00395C  BF95               	btfsc	(SelfTest@cIdx+1)& (0+255),7,b
 12712  00395E  D7F3               	goto	l19419
 12713  003960  5195               	movf	(SelfTest@cIdx+1)& (0+255),w,b
 12714  003962  E104               	bnz	u20250
 12715  003964  0E10               	movlw	16
 12716  003966  5D94               	subwf	SelfTest@cIdx& (0+255),w,b
 12717  003968  A0D8               	btfss	status,0,c
 12718  00396A  D7ED               	goto	l19419
 12719  00396C                     u20250:
 12720                           
 12721                           ; BSR set to: 3
 12722                           ;selftest.c: 230:             printstrblock(lcdTopRow);
 12723  00396C  0EA3               	movlw	low _lcdTopRow
 12724  00396E  0100               	movlb	0	; () banked
 12725  003970  6F8F               	movwf	printstrblock@c& (0+255),b
 12726  003972  0E02               	movlw	high _lcdTopRow
 12727  003974  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12728  003976  EC4E  F04F         	call	_printstrblock	;wreg free
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;selftest.c: 231:             setCursor(0, 1);
 12732  00397A  0E01               	movlw	1
 12733  00397C  6F92               	movwf	setCursor@row& (0+255),b
 12734  00397E  0E00               	movlw	0
 12735  003980  EC55  F04B         	call	_setCursor
 12736                           
 12737                           ;selftest.c: 232:             printstrblock(lcdTopRow);
 12738  003984  0EA3               	movlw	low _lcdTopRow
 12739  003986  0100               	movlb	0	; () banked
 12740  003988  6F8F               	movwf	printstrblock@c& (0+255),b
 12741  00398A  0E02               	movlw	high _lcdTopRow
 12742  00398C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12743  00398E  EC4E  F04F         	call	_printstrblock	;wreg free
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;selftest.c: 233:             timeDelayMs(350);
 12747  003992  0E01               	movlw	1
 12748  003994  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12749  003996  0E5E               	movlw	94
 12750  003998  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 12751  00399A  EC8B  F04C         	call	_timeDelayMs	;wreg free
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;selftest.c: 234:         }
 12755  00399E  0103               	movlb	3	; () banked
 12756  0039A0  4B92               	infsnz	SelfTest@idx& (0+255),f,b
 12757  0039A2  2B93               	incf	(SelfTest@idx+1)& (0+255),f,b
 12758                           
 12759                           ; BSR set to: 3
 12760  0039A4  BF93               	btfsc	(SelfTest@idx+1)& (0+255),7,b
 12761  0039A6  D7BF               	goto	l19409
 12762  0039A8  5193               	movf	(SelfTest@idx+1)& (0+255),w,b
 12763  0039AA  E104               	bnz	u20260
 12764  0039AC  0E0A               	movlw	10
 12765  0039AE  5D92               	subwf	SelfTest@idx& (0+255),w,b
 12766  0039B0  A0D8               	btfss	status,0,c
 12767  0039B2  D7B9               	goto	l19409
 12768  0039B4                     u20260:
 12769                           
 12770                           ; BSR set to: 3
 12771                           ;selftest.c: 237:   setCursor(0, 0);
 12772  0039B4  0E00               	movlw	0
 12773  0039B6  0100               	movlb	0	; () banked
 12774  0039B8  6F92               	movwf	setCursor@row& (0+255),b
 12775  0039BA  0E00               	movlw	0
 12776  0039BC  EC55  F04B         	call	_setCursor
 12777                           
 12778                           ;selftest.c: 238:   printstrblock("SELF-TEST. LEAVE");
 12779  0039C0  0E5B               	movlw	low STR_80
 12780  0039C2  0100               	movlb	0	; () banked
 12781  0039C4  6F8F               	movwf	printstrblock@c& (0+255),b
 12782  0039C6  0EFE               	movlw	high STR_80
 12783  0039C8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12784  0039CA  EC4E  F04F         	call	_printstrblock	;wreg free
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;selftest.c: 239:   setCursor(0, 1);
 12788  0039CE  0E01               	movlw	1
 12789  0039D0  6F92               	movwf	setCursor@row& (0+255),b
 12790  0039D2  0E00               	movlw	0
 12791  0039D4  EC55  F04B         	call	_setCursor
 12792                           
 12793                           ;selftest.c: 240:   printstrblock("AIRWAY OPEN     ");
 12794  0039D8  0ED3               	movlw	low STR_81
 12795  0039DA  0100               	movlb	0	; () banked
 12796  0039DC  6F8F               	movwf	printstrblock@c& (0+255),b
 12797  0039DE  0EFD               	movlw	high STR_81
 12798  0039E0  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12799  0039E2  EC4E  F04F         	call	_printstrblock	;wreg free
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;selftest.c: 241:   timeDelayMs(1000);
 12803  0039E6  0E03               	movlw	3
 12804  0039E8  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12805  0039EA  0EE8               	movlw	232
 12806  0039EC  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 12807  0039EE  EC8B  F04C         	call	_timeDelayMs	;wreg free
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;selftest.c: 243:   vddValMin = 8000;
 12811  0039F2  0E1F               	movlw	31
 12812  0039F4  0103               	movlb	3	; () banked
 12813  0039F6  6F9B               	movwf	(SelfTest@vddValMin+1)& (0+255),b
 12814  0039F8  0E40               	movlw	64
 12815  0039FA  6F9A               	movwf	SelfTest@vddValMin& (0+255),b
 12816                           
 12817                           ; BSR set to: 3
 12818                           ;selftest.c: 244:   vddValMax = 0;
 12819  0039FC  0E00               	movlw	0
 12820  0039FE  6F99               	movwf	(SelfTest@vddValMax+1)& (0+255),b
 12821  003A00  0E00               	movlw	0
 12822  003A02  6F98               	movwf	SelfTest@vddValMax& (0+255),b
 12823                           
 12824                           ; BSR set to: 3
 12825                           ;selftest.c: 245:   initOk = 1;
 12826  003A04  0E01               	movlw	1
 12827  003A06  6F9E               	movwf	SelfTest@initOk& (0+255),b
 12828                           
 12829                           ; BSR set to: 3
 12830                           ;selftest.c: 247:   if (!MonitorMsgSendBlock(MONSTATE_INIT)) {
 12831  003A08  0E20               	movlw	32
 12832  003A0A  EC61  F04F         	call	_MonitorMsgSendBlock
 12833  003A0E  0900               	iorlw	0
 12834  003A10  A4D8               	btfss	status,2,c
 12835  003A12  D01D               	goto	l19463
 12836                           
 12837                           ; BSR set to: 1
 12838                           ;selftest.c: 248:     initOk = 0;
 12839  003A14  0E00               	movlw	0
 12840  003A16  0103               	movlb	3	; () banked
 12841  003A18  6F9E               	movwf	SelfTest@initOk& (0+255),b
 12842                           
 12843                           ; BSR set to: 3
 12844                           ;selftest.c: 249:     printf ("Mon error");
 12845  003A1A  0E80               	movlw	low STR_70
 12846  003A1C  0101               	movlb	1	; () banked
 12847  003A1E  6F46               	movwf	printf@fmt& (0+255),b
 12848  003A20  0EFF               	movlw	high STR_70
 12849  003A22  6F47               	movwf	(printf@fmt+1)& (0+255),b
 12850  003A24  ECE9  F04E         	call	_printf	;wreg free
 12851                           
 12852                           ; BSR set to: 2
 12853                           ;selftest.c: 250:     setCursor(0, 0);
 12854  003A28  0E00               	movlw	0
 12855  003A2A  0100               	movlb	0	; () banked
 12856  003A2C  6F92               	movwf	setCursor@row& (0+255),b
 12857  003A2E  0E00               	movlw	0
 12858  003A30  EC55  F04B         	call	_setCursor
 12859                           
 12860                           ;selftest.c: 251:     printstrblock("MONITOR ERROR");
 12861  003A34  0E15               	movlw	low STR_71
 12862  003A36  0100               	movlb	0	; () banked
 12863  003A38  6F8F               	movwf	printstrblock@c& (0+255),b
 12864  003A3A  0EFF               	movlw	high STR_71
 12865  003A3C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12866  003A3E  EC4E  F04F         	call	_printstrblock	;wreg free
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;selftest.c: 252:     timeDelayMs(500);
 12870  003A42  0E01               	movlw	1
 12871  003A44  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12872  003A46  0EF4               	movlw	244
 12873  003A48  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 12874  003A4A  EC8B  F04C         	call	_timeDelayMs	;wreg free
 12875  003A4E                     l19463:
 12876                           
 12877                           ;selftest.c: 255:   aCaptureOffSet(MainPSensor, 0);
 12878  003A4E  0E00               	movlw	0
 12879  003A50  0101               	movlb	1	; () banked
 12880  003A52  6F61               	movwf	(aCaptureOffSet@offVal+1)& (0+255),b
 12881  003A54  0E00               	movlw	0
 12882  003A56  6F60               	movwf	aCaptureOffSet@offVal& (0+255),b
 12883  003A58  0E00               	movlw	0
 12884  003A5A  EC7D  F049         	call	_aCaptureOffSet
 12885                           
 12886                           ;selftest.c: 256:   aCaptureOffSet(VolPSensor, 0);
 12887  003A5E  0E00               	movlw	0
 12888  003A60  0101               	movlb	1	; () banked
 12889  003A62  6F61               	movwf	(aCaptureOffSet@offVal+1)& (0+255),b
 12890  003A64  0E00               	movlw	0
 12891  003A66  6F60               	movwf	aCaptureOffSet@offVal& (0+255),b
 12892  003A68  0E01               	movlw	1
 12893  003A6A  EC7D  F049         	call	_aCaptureOffSet
 12894                           
 12895                           ;selftest.c: 258:   tstamp = timeGet();
 12896  003A6E  EC7B  F051         	call	_timeGet	;wreg free
 12897  003A72  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 12898  003A78  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 12899                           
 12900                           ;selftest.c: 260:   while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12901  003A7E  D045               	goto	l19483
 12902  003A80                     l19469:
 12903                           
 12904                           ; BSR set to: 0
 12905                           ;selftest.c: 261:     if (aCaptGetResult(VddSensor, &vddVal)) {
 12906  003A80  0E9C               	movlw	low SelfTest@vddVal
 12907  003A82  0101               	movlb	1	; () banked
 12908  003A84  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 12909  003A86  0E03               	movlw	high SelfTest@vddVal
 12910  003A88  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 12911  003A8A  0E02               	movlw	2
 12912  003A8C  EC04  F032         	call	_aCaptGetResult
 12913  003A90  0900               	iorlw	0
 12914  003A92  B4D8               	btfsc	status,2,c
 12915  003A94  D029               	goto	l2844
 12916                           
 12917                           ;selftest.c: 262:       if (vddVal > vddValMax) {
 12918  003A96  0103               	movlb	3	; () banked
 12919  003A98  519C               	movf	SelfTest@vddVal& (0+255),w,b
 12920  003A9A  5D98               	subwf	SelfTest@vddValMax& (0+255),w,b
 12921  003A9C  5199               	movf	(SelfTest@vddValMax+1)& (0+255),w,b
 12922  003A9E  0A80               	xorlw	128
 12923  003AA0  0102               	movlb	2	; () banked
 12924  003AA2  6FFA               	movwf	??_SelfTest& (0+255),b
 12925  003AA4  0103               	movlb	3	; () banked
 12926  003AA6  519D               	movf	(SelfTest@vddVal+1)& (0+255),w,b
 12927  003AA8  0A80               	xorlw	128
 12928  003AAA  0102               	movlb	2	; () banked
 12929  003AAC  59FA               	subwfb	??_SelfTest& (0+255),w,b
 12930  003AAE  B0D8               	btfsc	status,0,c
 12931  003AB0  D006               	goto	l19475
 12932                           
 12933                           ; BSR set to: 2
 12934                           ;selftest.c: 263:  vddValMax = vddVal;
 12935  003AB2  0060  FE70  F398   	movff	SelfTest@vddVal,SelfTest@vddValMax
 12936  003AB8  0060  FE74  F399   	movff	SelfTest@vddVal+1,SelfTest@vddValMax+1
 12937  003ABE                     l19475:
 12938                           
 12939                           ; BSR set to: 2
 12940                           ;selftest.c: 265:       if (vddVal < vddValMin) {
 12941  003ABE  0103               	movlb	3	; () banked
 12942  003AC0  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 12943  003AC2  5D9C               	subwf	SelfTest@vddVal& (0+255),w,b
 12944  003AC4  519D               	movf	(SelfTest@vddVal+1)& (0+255),w,b
 12945  003AC6  0A80               	xorlw	128
 12946  003AC8  0102               	movlb	2	; () banked
 12947  003ACA  6FFA               	movwf	??_SelfTest& (0+255),b
 12948  003ACC  0103               	movlb	3	; () banked
 12949  003ACE  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 12950  003AD0  0A80               	xorlw	128
 12951  003AD2  0102               	movlb	2	; () banked
 12952  003AD4  59FA               	subwfb	??_SelfTest& (0+255),w,b
 12953  003AD6  B0D8               	btfsc	status,0,c
 12954  003AD8  D018               	goto	l19483
 12955                           
 12956                           ; BSR set to: 2
 12957                           ;selftest.c: 266:  vddValMin = vddVal;
 12958  003ADA  0060  FE70  F39A   	movff	SelfTest@vddVal,SelfTest@vddValMin
 12959  003AE0  0060  FE74  F39B   	movff	SelfTest@vddVal+1,SelfTest@vddValMin+1
 12960  003AE6  D011               	goto	l19483
 12961  003AE8                     l2844:
 12962                           
 12963                           ;selftest.c: 269:       LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;printf(
      +                          "Fatal %d",22);
 12964  003AE8  94BA               	bcf	186,2,c	;volatile
 12965  003AEA  96BC               	bcf	188,3,c	;volatile
 12966  003AEC  96BA               	bcf	186,3,c	;volatile
 12967  003AEE  0EB1               	movlw	low STR_28
 12968  003AF0  0101               	movlb	1	; () banked
 12969  003AF2  6F46               	movwf	printf@fmt& (0+255),b
 12970  003AF4  0EFF               	movlw	high STR_28
 12971  003AF6  6F47               	movwf	(printf@fmt+1)& (0+255),b
 12972  003AF8  0E00               	movlw	0
 12973  003AFA  6F49               	movwf	(?_printf+3)& (0+255),b
 12974  003AFC  0E16               	movlw	22
 12975  003AFE  6F48               	movwf	(?_printf+2)& (0+255),b
 12976  003B00  ECE9  F04E         	call	_printf	;wreg free
 12977                           
 12978                           ; BSR set to: 2
 12979                           ;selftest.c: 270:             initOk = 0;
 12980  003B04  0E00               	movlw	0
 12981  003B06  0103               	movlb	3	; () banked
 12982  003B08  6F9E               	movwf	SelfTest@initOk& (0+255),b
 12983  003B0A                     l19483:
 12984                           
 12985                           ;selftest.c: 260:   while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12986  003B0A  0E96               	movlw	low SelfTest@tstamp
 12987  003B0C  0100               	movlb	0	; () banked
 12988  003B0E  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 12989  003B10  0E03               	movlw	high SelfTest@tstamp
 12990  003B12  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 12991  003B14  0E01               	movlw	1
 12992  003B16  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 12993  003B18  0EF4               	movlw	244
 12994  003B1A  6F95               	movwf	timeElapsedR@duration& (0+255),b
 12995  003B1C  EC66  F046         	call	_timeElapsedR	;wreg free
 12996  003B20  0900               	iorlw	0
 12997  003B22  B4D8               	btfsc	status,2,c
 12998  003B24  D7AD               	goto	l19469
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;selftest.c: 274:   if (!initOk) {
 13002  003B26  0103               	movlb	3	; () banked
 13003  003B28  519E               	movf	SelfTest@initOk& (0+255),w,b
 13004  003B2A  A4D8               	btfss	status,2,c
 13005  003B2C  D003               	goto	l19491
 13006  003B2E                     u20320:
 13007                           
 13008                           ;selftest.c: 275:     return initOk;
 13009  003B2E  0103               	movlb	3	; () banked
 13010  003B30  519E               	movf	SelfTest@initOk& (0+255),w,b
 13011  003B32  0012               	return	
 13012  003B34                     l19491:
 13013                           
 13014                           ; BSR set to: 3
 13015                           ;selftest.c: 279:   vddValMean = (vddValMax + vddValMin) >> 1;
 13016  003B34  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 13017  003B36  2598               	addwf	SelfTest@vddValMax& (0+255),w,b
 13018  003B38  0102               	movlb	2	; () banked
 13019  003B3A  6FFA               	movwf	??_SelfTest& (0+255),b
 13020  003B3C  0103               	movlb	3	; () banked
 13021  003B3E  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 13022  003B40  2199               	addwfc	(SelfTest@vddValMax+1)& (0+255),w,b
 13023  003B42  0102               	movlb	2	; () banked
 13024  003B44  6FFB               	movwf	(??_SelfTest+1)& (0+255),b
 13025  003B46  35FB               	rlcf	(??_SelfTest+1)& (0+255),w,b
 13026  003B48  31FB               	rrcf	(??_SelfTest+1)& (0+255),w,b
 13027  003B4A  6FFC               	movwf	(??_SelfTest+2)& (0+255),b
 13028  003B4C  31FA               	rrcf	??_SelfTest& (0+255),w,b
 13029  003B4E  0101               	movlb	1	; () banked
 13030  003B50  6F91               	movwf	_vddValMean& (0+255),b
 13031  003B52  0060  FBF0  F192   	movff	??_SelfTest+2,_vddValMean+1
 13032                           
 13033                           ; BSR set to: 1
 13034                           ;selftest.c: 280:   printf ("VDD Min %d Max %d MEAN %d\n", vddValMin, vddValMax, vddValM
      +                          ean);
 13035  003B58  0E66               	movlw	low STR_85
 13036  003B5A  6F46               	movwf	printf@fmt& (0+255),b
 13037  003B5C  0EFC               	movlw	high STR_85
 13038  003B5E  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13039  003B60  0060  FE68  F148   	movff	SelfTest@vddValMin,?_printf+2
 13040  003B66  0060  FE6C  F149   	movff	SelfTest@vddValMin+1,?_printf+3
 13041  003B6C  0060  FE60  F14A   	movff	SelfTest@vddValMax,?_printf+4
 13042  003B72  0060  FE64  F14B   	movff	SelfTest@vddValMax+1,?_printf+5
 13043  003B78  0060  F644  F14C   	movff	_vddValMean,?_printf+6
 13044  003B7E  0060  F648  F14D   	movff	_vddValMean+1,?_printf+7
 13045  003B84  ECE9  F04E         	call	_printf	;wreg free
 13046                           
 13047                           ; BSR set to: 2
 13048                           ;selftest.c: 282:   if ((vddValMean > 5250) || (vddValMean < 4750)) {
 13049  003B88  0101               	movlb	1	; () banked
 13050  003B8A  BF92               	btfsc	(_vddValMean+1)& (0+255),7,b
 13051  003B8C  D006               	goto	u20330
 13052  003B8E  0E83               	movlw	131
 13053  003B90  5D91               	subwf	_vddValMean& (0+255),w,b
 13054  003B92  0E14               	movlw	20
 13055  003B94  5992               	subwfb	(_vddValMean+1)& (0+255),w,b
 13056  003B96  B0D8               	btfsc	status,0,c
 13057  003B98  D008               	goto	u20340
 13058  003B9A                     u20330:
 13059                           
 13060                           ; BSR set to: 1
 13061  003B9A  BF92               	btfsc	(_vddValMean+1)& (0+255),7,b
 13062  003B9C  D006               	goto	u20340
 13063  003B9E  0E8E               	movlw	142
 13064  003BA0  5D91               	subwf	_vddValMean& (0+255),w,b
 13065  003BA2  0E12               	movlw	18
 13066  003BA4  5992               	subwfb	(_vddValMean+1)& (0+255),w,b
 13067  003BA6  B0D8               	btfsc	status,0,c
 13068  003BA8  D02E               	goto	l19511
 13069  003BAA                     u20340:
 13070                           
 13071                           ; BSR set to: 1
 13072                           ;selftest.c: 284:     setCursor(0, 0);
 13073  003BAA  0E00               	movlw	0
 13074  003BAC  0100               	movlb	0	; () banked
 13075  003BAE  6F92               	movwf	setCursor@row& (0+255),b
 13076  003BB0  0E00               	movlw	0
 13077  003BB2  EC55  F04B         	call	_setCursor
 13078                           
 13079                           ;selftest.c: 285:     printstrblock("INTERNAL ERROR  ");
 13080  003BB6  0E28               	movlw	low STR_86
 13081  003BB8  0100               	movlb	0	; () banked
 13082  003BBA  6F8F               	movwf	printstrblock@c& (0+255),b
 13083  003BBC  0EFE               	movlw	high STR_86
 13084  003BBE  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13085  003BC0  EC4E  F04F         	call	_printstrblock	;wreg free
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;selftest.c: 286:     setCursor(0, 1);
 13089  003BC4  0E01               	movlw	1
 13090  003BC6  6F92               	movwf	setCursor@row& (0+255),b
 13091  003BC8  0E00               	movlw	0
 13092  003BCA  EC55  F04B         	call	_setCursor
 13093                           
 13094                           ;selftest.c: 287:     sprintf(lcdTopRow, "VDD OOL: % 3d mV", vddValMean);
 13095  003BCE  0EA3               	movlw	low _lcdTopRow
 13096  003BD0  0101               	movlb	1	; () banked
 13097  003BD2  6F46               	movwf	sprintf@s& (0+255),b
 13098  003BD4  0E02               	movlw	high _lcdTopRow
 13099  003BD6  6F47               	movwf	(sprintf@s+1)& (0+255),b
 13100  003BD8  0E7D               	movlw	low STR_87
 13101  003BDA  6F48               	movwf	sprintf@fmt& (0+255),b
 13102  003BDC  0EFE               	movlw	high STR_87
 13103  003BDE  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 13104  003BE0  0060  F644  F14A   	movff	_vddValMean,?_sprintf+4
 13105  003BE6  0060  F648  F14B   	movff	_vddValMean+1,?_sprintf+5
 13106  003BEC  ECD9  F047         	call	_sprintf	;wreg free
 13107                           
 13108                           ; BSR set to: 1
 13109                           ;selftest.c: 288:     printstrblock(lcdTopRow);
 13110  003BF0  0EA3               	movlw	low _lcdTopRow
 13111  003BF2  0100               	movlb	0	; () banked
 13112  003BF4  6F8F               	movwf	printstrblock@c& (0+255),b
 13113  003BF6  0E02               	movlw	high _lcdTopRow
 13114  003BF8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13115  003BFA  EC4E  F04F         	call	_printstrblock	;wreg free
 13116  003BFE                     l19509:
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;selftest.c: 289:     initOk = 0;
 13120  003BFE  0E00               	movlw	0
 13121  003C00  0103               	movlb	3	; () banked
 13122  003C02  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13123                           
 13124                           ;selftest.c: 290:   } else if ((vddValMax - vddValMin) > 100) {
 13125  003C04  D02C               	goto	l19521
 13126  003C06                     l19511:
 13127                           
 13128                           ; BSR set to: 1
 13129  003C06  0103               	movlb	3	; () banked
 13130  003C08  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 13131  003C0A  5D98               	subwf	SelfTest@vddValMax& (0+255),w,b
 13132  003C0C  0102               	movlb	2	; () banked
 13133  003C0E  6FFA               	movwf	??_SelfTest& (0+255),b
 13134  003C10  0103               	movlb	3	; () banked
 13135  003C12  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 13136  003C14  5999               	subwfb	(SelfTest@vddValMax+1)& (0+255),w,b
 13137  003C16  0102               	movlb	2	; () banked
 13138  003C18  6FFB               	movwf	(??_SelfTest+1)& (0+255),b
 13139  003C1A  BFFB               	btfsc	(??_SelfTest+1)& (0+255),7,b
 13140  003C1C  D020               	goto	l19521
 13141  003C1E  51FB               	movf	(??_SelfTest+1)& (0+255),w,b
 13142  003C20  E104               	bnz	u20350
 13143  003C22  0E65               	movlw	101
 13144  003C24  5DFA               	subwf	??_SelfTest& (0+255),w,b
 13145  003C26  A0D8               	btfss	status,0,c
 13146  003C28  D01A               	goto	l19521
 13147  003C2A                     u20350:
 13148                           
 13149                           ; BSR set to: 2
 13150                           ;selftest.c: 292:     setCursor(0, 0);
 13151  003C2A  0E00               	movlw	0
 13152  003C2C  0100               	movlb	0	; () banked
 13153  003C2E  6F92               	movwf	setCursor@row& (0+255),b
 13154  003C30  0E00               	movlw	0
 13155  003C32  EC55  F04B         	call	_setCursor
 13156                           
 13157                           ;selftest.c: 293:     printstrblock("INTERNAL ERROR  ");
 13158  003C36  0E28               	movlw	low STR_86
 13159  003C38  0100               	movlb	0	; () banked
 13160  003C3A  6F8F               	movwf	printstrblock@c& (0+255),b
 13161  003C3C  0EFE               	movlw	high STR_86
 13162  003C3E  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13163  003C40  EC4E  F04F         	call	_printstrblock	;wreg free
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;selftest.c: 294:     setCursor(0, 1);
 13167  003C44  0E01               	movlw	1
 13168  003C46  6F92               	movwf	setCursor@row& (0+255),b
 13169  003C48  0E00               	movlw	0
 13170  003C4A  EC55  F04B         	call	_setCursor
 13171                           
 13172                           ;selftest.c: 295:     printstrblock("VDD NOISY       ");
 13173  003C4E  0EC2               	movlw	low STR_89
 13174  003C50  0100               	movlb	0	; () banked
 13175  003C52  6F8F               	movwf	printstrblock@c& (0+255),b
 13176  003C54  0EFD               	movlw	high STR_89
 13177  003C56  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13178  003C58  EC4E  F04F         	call	_printstrblock	;wreg free
 13179  003C5C  D7D0               	goto	l19509
 13180  003C5E                     l19521:
 13181                           
 13182                           ;selftest.c: 299:   if (!initOk) {
 13183  003C5E  0103               	movlb	3	; () banked
 13184  003C60  519E               	movf	SelfTest@initOk& (0+255),w,b
 13185  003C62  B4D8               	btfsc	status,2,c
 13186  003C64  D764               	goto	u20320
 13187  003C66  D0A9               	goto	l19581
 13188  003C68                     l2858:
 13189                           
 13190                           ; BSR set to: 1
 13191                           ;selftest.c: 304:     LATDbits.LATD6 = 0;
 13192  003C68  9CBD               	bcf	189,6,c	;volatile
 13193                           
 13194                           ;selftest.c: 306:     while (keyPeek() != -1)
 13195  003C6A  D00E               	goto	l19529
 13196  003C6C                     l19527:
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;selftest.c: 307:       printf ("KP %d\n", keyPeek());
 13200  003C6C  0ED9               	movlw	low STR_90
 13201  003C6E  0101               	movlb	1	; () banked
 13202  003C70  6F46               	movwf	printf@fmt& (0+255),b
 13203  003C72  0EFF               	movlw	high STR_90
 13204  003C74  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13205  003C76  EC96  F046         	call	_keyPeek	;wreg free
 13206  003C7A  0101               	movlb	1	; () banked
 13207  003C7C  6F48               	movwf	(?_printf+2)& (0+255),b
 13208  003C7E  6B49               	clrf	(?_printf+3)& (0+255),b
 13209  003C80  BF48               	btfsc	(?_printf+2)& (0+255),7,b
 13210  003C82  0749               	decf	(?_printf+3)& (0+255),f,b
 13211  003C84  ECE9  F04E         	call	_printf	;wreg free
 13212  003C88                     l19529:
 13213                           
 13214                           ;selftest.c: 306:     while (keyPeek() != -1)
 13215  003C88  EC96  F046         	call	_keyPeek	;wreg free
 13216  003C8C  0AFF               	xorlw	255
 13217  003C8E  A4D8               	btfss	status,2,c
 13218  003C90  D7ED               	goto	l19527
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;selftest.c: 309:     keyReadInit();
 13222  003C92  EC4A  F051         	call	_keyReadInit	;wreg free
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;selftest.c: 313:     LATDbits.LATD6 = 1;
 13226  003C96  8CBD               	bsf	189,6,c	;volatile
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;selftest.c: 314:     setCursor(0, 0);
 13230  003C98  0E00               	movlw	0
 13231  003C9A  6F92               	movwf	setCursor@row& (0+255),b
 13232  003C9C  0E00               	movlw	0
 13233  003C9E  EC55  F04B         	call	_setCursor
 13234                           
 13235                           ;selftest.c: 315:     printstrblock("CAL PRESS BREATH");
 13236  003CA2  0E6C               	movlw	low STR_91
 13237  003CA4  0100               	movlb	0	; () banked
 13238  003CA6  6F8F               	movwf	printstrblock@c& (0+255),b
 13239  003CA8  0EFE               	movlw	high STR_91
 13240  003CAA  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13241  003CAC  EC4E  F04F         	call	_printstrblock	;wreg free
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;selftest.c: 316:     tstamp = timeGet();
 13245  003CB0  EC7B  F051         	call	_timeGet	;wreg free
 13246  003CB4  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13247  003CBA  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;selftest.c: 317:     lcdBLight = 1;
 13251  003CC0  0E01               	movlw	1
 13252  003CC2  0103               	movlb	3	; () banked
 13253  003CC4  6F91               	movwf	SelfTest@lcdBLight& (0+255),b
 13254                           
 13255                           ; BSR set to: 3
 13256                           ;selftest.c: 319:     tstamp = timeGet();
 13257  003CC6  EC7B  F051         	call	_timeGet	;wreg free
 13258  003CCA  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13259  003CD0  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13260  003CD6                     l19545:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;selftest.c: 321:       if (timeElapsedR(&tstamp, ((time_t) 500*1))) {
 13264  003CD6  0E96               	movlw	low SelfTest@tstamp
 13265  003CD8  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 13266  003CDA  0E03               	movlw	high SelfTest@tstamp
 13267  003CDC  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 13268  003CDE  0E01               	movlw	1
 13269  003CE0  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 13270  003CE2  0EF4               	movlw	244
 13271  003CE4  6F95               	movwf	timeElapsedR@duration& (0+255),b
 13272  003CE6  EC66  F046         	call	_timeElapsedR	;wreg free
 13273  003CEA  0900               	iorlw	0
 13274  003CEC  B4D8               	btfsc	status,2,c
 13275  003CEE  D00C               	goto	l19551
 13276                           
 13277                           ; BSR set to: 0
 13278                           ;selftest.c: 322:  setBacklight(lcdBLight);
 13279  003CF0  0103               	movlb	3	; () banked
 13280  003CF2  5191               	movf	SelfTest@lcdBLight& (0+255),w,b
 13281  003CF4  ECFC  F050         	call	_setBacklight
 13282                           
 13283                           ;selftest.c: 323:  lcdBLight = !lcdBLight;
 13284  003CF8  0103               	movlb	3	; () banked
 13285  003CFA  5191               	movf	SelfTest@lcdBLight& (0+255),w,b
 13286  003CFC  A4D8               	btfss	status,2,c
 13287  003CFE  D002               	goto	u20390
 13288  003D00  0E01               	movlw	1
 13289  003D02  D001               	goto	u20400
 13290  003D04                     u20390:
 13291  003D04  0E00               	movlw	0
 13292  003D06                     u20400:
 13293  003D06  6F91               	movwf	SelfTest@lcdBLight& (0+255),b
 13294  003D08                     l19551:
 13295                           
 13296                           ;selftest.c: 327:       if (keyReadEC() == -100) {
 13297  003D08  ECB5  F042         	call	_keyReadEC	;wreg free
 13298  003D0C  0A9C               	xorlw	156
 13299  003D0E  A4D8               	btfss	status,2,c
 13300  003D10  D7E2               	goto	l19545
 13301                           
 13302                           ; BSR set to: 0
 13303                           ;selftest.c: 328:  if (keyPeek() == 4) {
 13304  003D12  EC96  F046         	call	_keyPeek	;wreg free
 13305  003D16  0A04               	xorlw	4
 13306  003D18  A4D8               	btfss	status,2,c
 13307  003D1A  D7DD               	goto	l19545
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;selftest.c: 330:    setBacklight(1);
 13311  003D1C  0E01               	movlw	1
 13312  003D1E  ECFC  F050         	call	_setBacklight
 13313                           
 13314                           ;selftest.c: 336:     LATDbits.LATD6 = 0;
 13315                           
 13316                           ;selftest.c: 331:    break;
 13317  003D22  9CBD               	bcf	189,6,c	;volatile
 13318                           
 13319                           ;selftest.c: 337:     printf ("CALP\n");
 13320  003D24  0EEE               	movlw	low STR_92
 13321  003D26  0101               	movlb	1	; () banked
 13322  003D28  6F46               	movwf	printf@fmt& (0+255),b
 13323  003D2A  0EFF               	movlw	high STR_92
 13324  003D2C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13325  003D2E  ECE9  F04E         	call	_printf	;wreg free
 13326                           
 13327                           ; BSR set to: 2
 13328                           ;selftest.c: 338:     if (!MonitorMsgSendBlock(MONSTATE_CALP)){
 13329  003D32  0E40               	movlw	64
 13330  003D34  EC61  F04F         	call	_MonitorMsgSendBlock
 13331  003D38  0900               	iorlw	0
 13332  003D3A  A4D8               	btfss	status,2,c
 13333  003D3C  D01D               	goto	l19571
 13334                           
 13335                           ; BSR set to: 1
 13336                           ;selftest.c: 339:       initOk=0;
 13337  003D3E  0E00               	movlw	0
 13338  003D40  0103               	movlb	3	; () banked
 13339  003D42  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13340                           
 13341                           ; BSR set to: 3
 13342                           ;selftest.c: 340:       printf ("Mon error");
 13343  003D44  0E80               	movlw	low STR_70
 13344  003D46  0101               	movlb	1	; () banked
 13345  003D48  6F46               	movwf	printf@fmt& (0+255),b
 13346  003D4A  0EFF               	movlw	high STR_70
 13347  003D4C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13348  003D4E  ECE9  F04E         	call	_printf	;wreg free
 13349                           
 13350                           ; BSR set to: 2
 13351                           ;selftest.c: 341:       setCursor(0, 0);
 13352  003D52  0E00               	movlw	0
 13353  003D54  0100               	movlb	0	; () banked
 13354  003D56  6F92               	movwf	setCursor@row& (0+255),b
 13355  003D58  0E00               	movlw	0
 13356  003D5A  EC55  F04B         	call	_setCursor
 13357                           
 13358                           ;selftest.c: 342:       printstrblock("MONITOR ERROR   ");
 13359  003D5E  0E17               	movlw	low STR_94
 13360  003D60  0100               	movlb	0	; () banked
 13361  003D62  6F8F               	movwf	printstrblock@c& (0+255),b
 13362  003D64  0EFE               	movlw	high STR_94
 13363  003D66  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13364  003D68  EC4E  F04F         	call	_printstrblock	;wreg free
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;selftest.c: 343:       timeDelayMs(500);
 13368  003D6C  0E01               	movlw	1
 13369  003D6E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13370  003D70  0EF4               	movlw	244
 13371  003D72  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13372  003D74  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13373  003D78                     l19571:
 13374                           
 13375                           ;selftest.c: 346:     if (pressureSensorChk(1, 500)) {
 13376  003D78  0E01               	movlw	1
 13377  003D7A  0101               	movlb	1	; () banked
 13378  003D7C  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13379  003D7E  0EF4               	movlw	244
 13380  003D80  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13381  003D82  0E01               	movlw	1
 13382  003D84  ECC7  F01F         	call	_pressureSensorChk
 13383  003D88  0900               	iorlw	0
 13384  003D8A  B4D8               	btfsc	status,2,c
 13385  003D8C  D003               	goto	l19575
 13386                           
 13387                           ; BSR set to: 1
 13388                           ;selftest.c: 348:       ctrlStatus = CTRL_STOP;
 13389  003D8E  0E01               	movlw	1
 13390  003D90  6FC8               	movwf	_ctrlStatus& (0+255),b
 13391                           
 13392                           ;selftest.c: 349:     } else {
 13393  003D92  D013               	goto	l19581
 13394  003D94                     l19575:
 13395                           
 13396                           ; BSR set to: 1
 13397                           ;selftest.c: 350:       setCursor(0, 0);
 13398  003D94  0E00               	movlw	0
 13399  003D96  0100               	movlb	0	; () banked
 13400  003D98  6F92               	movwf	setCursor@row& (0+255),b
 13401  003D9A  0E00               	movlw	0
 13402  003D9C  EC55  F04B         	call	_setCursor
 13403                           
 13404                           ;selftest.c: 351:       printstrblock("CAL ERROR. RETRY ");
 13405  003DA0  0E8D               	movlw	low STR_95
 13406  003DA2  0100               	movlb	0	; () banked
 13407  003DA4  6F8F               	movwf	printstrblock@c& (0+255),b
 13408  003DA6  0EFD               	movlw	high STR_95
 13409  003DA8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13410  003DAA  EC4E  F04F         	call	_printstrblock	;wreg free
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;selftest.c: 352:       timeDelayMs(500);
 13414  003DAE  0E01               	movlw	1
 13415  003DB0  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13416  003DB2  0EF4               	movlw	244
 13417  003DB4  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13418  003DB6  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13419  003DBA                     l19581:
 13420                           
 13421                           ;selftest.c: 303:   while (ctrlStatus == CTRL_UNCAL) {
 13422  003DBA  0101               	movlb	1	; () banked
 13423  003DBC  51C8               	movf	_ctrlStatus& (0+255),w,b
 13424  003DBE  B4D8               	btfsc	status,2,c
 13425  003DC0  D753               	goto	l2858
 13426                           
 13427                           ; BSR set to: 1
 13428                           ;selftest.c: 356:   if (!initOk) {
 13429  003DC2  0103               	movlb	3	; () banked
 13430  003DC4  519E               	movf	SelfTest@initOk& (0+255),w,b
 13431  003DC6  B4D8               	btfsc	status,2,c
 13432  003DC8  D6B2               	goto	u20320
 13433                           
 13434                           ; BSR set to: 3
 13435                           ;selftest.c: 361:   printf ("CHKSV2\n");
 13436  003DCA  0EC2               	movlw	low STR_96
 13437  003DCC  0101               	movlb	1	; () banked
 13438  003DCE  6F46               	movwf	printf@fmt& (0+255),b
 13439  003DD0  0EFF               	movlw	high STR_96
 13440  003DD2  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13441  003DD4  ECE9  F04E         	call	_printf	;wreg free
 13442                           
 13443                           ; BSR set to: 2
 13444                           ;selftest.c: 363:   if (!MonitorMsgSendBlock(MONSTATE_SV2CHK)) {
 13445  003DD8  0E60               	movlw	96
 13446  003DDA  EC61  F04F         	call	_MonitorMsgSendBlock
 13447  003DDE  0900               	iorlw	0
 13448  003DE0  A4D8               	btfss	status,2,c
 13449  003DE2  D01D               	goto	l19603
 13450                           
 13451                           ; BSR set to: 1
 13452                           ;selftest.c: 364:         initOk = 0;
 13453  003DE4  0E00               	movlw	0
 13454  003DE6  0103               	movlb	3	; () banked
 13455  003DE8  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13456                           
 13457                           ; BSR set to: 3
 13458                           ;selftest.c: 365:         printf ("Mon error");
 13459  003DEA  0E80               	movlw	low STR_70
 13460  003DEC  0101               	movlb	1	; () banked
 13461  003DEE  6F46               	movwf	printf@fmt& (0+255),b
 13462  003DF0  0EFF               	movlw	high STR_70
 13463  003DF2  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13464  003DF4  ECE9  F04E         	call	_printf	;wreg free
 13465                           
 13466                           ; BSR set to: 2
 13467                           ;selftest.c: 366:         setCursor(0, 0);
 13468  003DF8  0E00               	movlw	0
 13469  003DFA  0100               	movlb	0	; () banked
 13470  003DFC  6F92               	movwf	setCursor@row& (0+255),b
 13471  003DFE  0E00               	movlw	0
 13472  003E00  EC55  F04B         	call	_setCursor
 13473                           
 13474                           ;selftest.c: 367:         printstrblock("MONITOR ERROR   ");
 13475  003E04  0E17               	movlw	low STR_94
 13476  003E06  0100               	movlb	0	; () banked
 13477  003E08  6F8F               	movwf	printstrblock@c& (0+255),b
 13478  003E0A  0EFE               	movlw	high STR_94
 13479  003E0C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13480  003E0E  EC4E  F04F         	call	_printstrblock	;wreg free
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;selftest.c: 368:         timeDelayMs(500);
 13484  003E12  0E01               	movlw	1
 13485  003E14  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13486  003E16  0EF4               	movlw	244
 13487  003E18  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13488  003E1A  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13489  003E1E                     l19603:
 13490                           
 13491                           ;selftest.c: 371:   LATDbits.LATD0 = 1;
 13492  003E1E  80BD               	bsf	189,0,c	;volatile
 13493                           
 13494                           ;selftest.c: 373:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 13495  003E20  94BA               	bcf	186,2,c	;volatile
 13496  003E22  96BC               	bcf	188,3,c	;volatile
 13497                           
 13498                           ;selftest.c: 374:   timeDelayMs(200);
 13499  003E24  0E00               	movlw	0
 13500  003E26  0100               	movlb	0	; () banked
 13501  003E28  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13502  003E2A  0EC8               	movlw	200
 13503  003E2C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13504  003E2E  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;selftest.c: 375:   if (!pressureSensorChk(0, 100)) {
 13508  003E32  0E00               	movlw	0
 13509  003E34  0101               	movlb	1	; () banked
 13510  003E36  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13511  003E38  0E64               	movlw	100
 13512  003E3A  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13513  003E3C  0E00               	movlw	0
 13514  003E3E  ECC7  F01F         	call	_pressureSensorChk
 13515  003E42  0900               	iorlw	0
 13516  003E44  A4D8               	btfss	status,2,c
 13517  003E46  D016               	goto	l19621
 13518                           
 13519                           ; BSR set to: 1
 13520                           ;selftest.c: 376:     initOk=0;
 13521  003E48  0E00               	movlw	0
 13522  003E4A  0103               	movlb	3	; () banked
 13523  003E4C  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13524                           
 13525                           ; BSR set to: 3
 13526                           ;selftest.c: 377:  setCursor(0, 0);
 13527  003E4E  0E00               	movlw	0
 13528  003E50  0100               	movlb	0	; () banked
 13529  003E52  6F92               	movwf	setCursor@row& (0+255),b
 13530  003E54  0E00               	movlw	0
 13531  003E56  EC55  F04B         	call	_setCursor
 13532                           
 13533                           ;selftest.c: 378:     printstrblock("SV2 Valve error ");
 13534  003E5A  0E4A               	movlw	low STR_99
 13535  003E5C  0100               	movlb	0	; () banked
 13536  003E5E  6F8F               	movwf	printstrblock@c& (0+255),b
 13537  003E60  0EFE               	movlw	high STR_99
 13538  003E62  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13539  003E64  EC4E  F04F         	call	_printstrblock	;wreg free
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;selftest.c: 379:     timeDelayMs(500);
 13543  003E68  0E01               	movlw	1
 13544  003E6A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13545  003E6C  0EF4               	movlw	244
 13546  003E6E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13547  003E70  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13548  003E74                     l19621:
 13549                           
 13550                           ;selftest.c: 383:   LATDbits.LATD0 = 0;
 13551  003E74  90BD               	bcf	189,0,c	;volatile
 13552                           
 13553                           ;selftest.c: 384:   printf ("CHKSV1\n");
 13554  003E76  0EBA               	movlw	low STR_100
 13555  003E78  0101               	movlb	1	; () banked
 13556  003E7A  6F46               	movwf	printf@fmt& (0+255),b
 13557  003E7C  0EFF               	movlw	high STR_100
 13558  003E7E  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13559  003E80  ECE9  F04E         	call	_printf	;wreg free
 13560                           
 13561                           ; BSR set to: 2
 13562                           ;selftest.c: 385:     if (!MonitorMsgSendBlock(MONSTATE_SV1CHK)) {
 13563  003E84  0E80               	movlw	128
 13564  003E86  EC61  F04F         	call	_MonitorMsgSendBlock
 13565  003E8A  0900               	iorlw	0
 13566  003E8C  A4D8               	btfss	status,2,c
 13567  003E8E  D01D               	goto	l19637
 13568                           
 13569                           ; BSR set to: 1
 13570                           ;selftest.c: 386:         initOk = 0;
 13571  003E90  0E00               	movlw	0
 13572  003E92  0103               	movlb	3	; () banked
 13573  003E94  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13574                           
 13575                           ; BSR set to: 3
 13576                           ;selftest.c: 387:         printf ("Mon error");
 13577  003E96  0E80               	movlw	low STR_70
 13578  003E98  0101               	movlb	1	; () banked
 13579  003E9A  6F46               	movwf	printf@fmt& (0+255),b
 13580  003E9C  0EFF               	movlw	high STR_70
 13581  003E9E  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13582  003EA0  ECE9  F04E         	call	_printf	;wreg free
 13583                           
 13584                           ; BSR set to: 2
 13585                           ;selftest.c: 388:         setCursor(0, 0);
 13586  003EA4  0E00               	movlw	0
 13587  003EA6  0100               	movlb	0	; () banked
 13588  003EA8  6F92               	movwf	setCursor@row& (0+255),b
 13589  003EAA  0E00               	movlw	0
 13590  003EAC  EC55  F04B         	call	_setCursor
 13591                           
 13592                           ;selftest.c: 389:         printstrblock("MONITOR ERROR   ");
 13593  003EB0  0E17               	movlw	low STR_94
 13594  003EB2  0100               	movlb	0	; () banked
 13595  003EB4  6F8F               	movwf	printstrblock@c& (0+255),b
 13596  003EB6  0EFE               	movlw	high STR_94
 13597  003EB8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13598  003EBA  EC4E  F04F         	call	_printstrblock	;wreg free
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;selftest.c: 390:         timeDelayMs(500);
 13602  003EBE  0E01               	movlw	1
 13603  003EC0  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13604  003EC2  0EF4               	movlw	244
 13605  003EC4  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13606  003EC6  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13607  003ECA                     l19637:
 13608                           
 13609                           ;selftest.c: 392:   timeDelayMs(100);
 13610  003ECA  0E00               	movlw	0
 13611  003ECC  0100               	movlb	0	; () banked
 13612  003ECE  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13613  003ED0  0E64               	movlw	100
 13614  003ED2  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13615  003ED4  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;selftest.c: 393:   LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
 13619  003ED8  84BA               	bsf	186,2,c	;volatile
 13620                           
 13621                           ; BSR set to: 0
 13622  003EDA  86BC               	bsf	188,3,c	;volatile
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;selftest.c: 394:   timeDelayMs(300);
 13626  003EDC  0E01               	movlw	1
 13627  003EDE  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13628  003EE0  0E2C               	movlw	44
 13629  003EE2  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13630  003EE4  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;selftest.c: 395:   if (!pressureSensorChk(0, 100)) {
 13634  003EE8  0E00               	movlw	0
 13635  003EEA  0101               	movlb	1	; () banked
 13636  003EEC  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13637  003EEE  0E64               	movlw	100
 13638  003EF0  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13639  003EF2  0E00               	movlw	0
 13640  003EF4  ECC7  F01F         	call	_pressureSensorChk
 13641  003EF8  0900               	iorlw	0
 13642  003EFA  A4D8               	btfss	status,2,c
 13643  003EFC  D016               	goto	l19655
 13644                           
 13645                           ; BSR set to: 1
 13646                           ;selftest.c: 396:     initOk=0;
 13647  003EFE  0E00               	movlw	0
 13648  003F00  0103               	movlb	3	; () banked
 13649  003F02  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13650                           
 13651                           ; BSR set to: 3
 13652                           ;selftest.c: 397:  setCursor(0, 0);
 13653  003F04  0E00               	movlw	0
 13654  003F06  0100               	movlb	0	; () banked
 13655  003F08  6F92               	movwf	setCursor@row& (0+255),b
 13656  003F0A  0E00               	movlw	0
 13657  003F0C  EC55  F04B         	call	_setCursor
 13658                           
 13659                           ;selftest.c: 398:     printstrblock("SV1 Valve error ");
 13660  003F10  0E39               	movlw	low STR_103
 13661  003F12  0100               	movlb	0	; () banked
 13662  003F14  6F8F               	movwf	printstrblock@c& (0+255),b
 13663  003F16  0EFE               	movlw	high STR_103
 13664  003F18  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13665  003F1A  EC4E  F04F         	call	_printstrblock	;wreg free
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;selftest.c: 399:     timeDelayMs(500);
 13669  003F1E  0E01               	movlw	1
 13670  003F20  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13671  003F22  0EF4               	movlw	244
 13672  003F24  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13673  003F26  EC8B  F04C         	call	_timeDelayMs	;wreg free
 13674  003F2A                     l19655:
 13675                           
 13676                           ;selftest.c: 403:   printf ("CHK FLOW\n");
 13677  003F2A  0E76               	movlw	low STR_104
 13678  003F2C  0101               	movlb	1	; () banked
 13679  003F2E  6F46               	movwf	printf@fmt& (0+255),b
 13680  003F30  0EFF               	movlw	high STR_104
 13681  003F32  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13682  003F34  ECE9  F04E         	call	_printf	;wreg free
 13683                           
 13684                           ; BSR set to: 2
 13685                           ;selftest.c: 404:   tstamp = timeGet();
 13686  003F38  EC7B  F051         	call	_timeGet	;wreg free
 13687  003F3C  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13688  003F42  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;selftest.c: 407:   initOk &= flowChk(FCHK_LOW);
 13692  003F48  0E00               	movlw	0
 13693  003F4A  EC08  F029         	call	_flowChk
 13694  003F4E  0102               	movlb	2	; () banked
 13695  003F50  6FFA               	movwf	??_SelfTest& (0+255),b
 13696  003F52  6BFB               	clrf	(??_SelfTest+1)& (0+255),b
 13697  003F54  51FA               	movf	??_SelfTest& (0+255),w,b
 13698  003F56  0103               	movlb	3	; () banked
 13699  003F58  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13700                           
 13701                           ; BSR set to: 3
 13702                           ;selftest.c: 408:   initOk &= flowChk(FCHK_MED);
 13703  003F5A  0E01               	movlw	1
 13704  003F5C  EC08  F029         	call	_flowChk
 13705  003F60  0102               	movlb	2	; () banked
 13706  003F62  6FFA               	movwf	??_SelfTest& (0+255),b
 13707  003F64  6BFB               	clrf	(??_SelfTest+1)& (0+255),b
 13708  003F66  51FA               	movf	??_SelfTest& (0+255),w,b
 13709  003F68  0103               	movlb	3	; () banked
 13710  003F6A  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13711                           
 13712                           ; BSR set to: 3
 13713                           ;selftest.c: 409:   initOk &= flowChk(FCHK_HIGH);
 13714  003F6C  0E02               	movlw	2
 13715  003F6E  EC08  F029         	call	_flowChk
 13716  003F72  0102               	movlb	2	; () banked
 13717  003F74  6FFA               	movwf	??_SelfTest& (0+255),b
 13718  003F76  6BFB               	clrf	(??_SelfTest+1)& (0+255),b
 13719  003F78  51FA               	movf	??_SelfTest& (0+255),w,b
 13720  003F7A  0103               	movlb	3	; () banked
 13721  003F7C  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13722  003F7E                     l19665:
 13723                           
 13724                           ;selftest.c: 412:   while (keyPeek() != -1)
 13725  003F7E  EC96  F046         	call	_keyPeek	;wreg free
 13726  003F82  0AFF               	xorlw	255
 13727  003F84  A4D8               	btfss	status,2,c
 13728  003F86  D7FB               	goto	l19665
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;selftest.c: 414:   keyReadInit();
 13732  003F88  EC4A  F051         	call	_keyReadInit	;wreg free
 13733  003F8C  D5D0               	goto	u20320
 13734  003F8E                     __end_of_SelfTest:
 13735                           	opt callstack 0
 13736                           
 13737 ;; *************** function _pressureSensorChk *****************
 13738 ;; Defined at:
 13739 ;;		line 27 in file "selftest.c"
 13740 ;; Parameters:    Size  Location     Type
 13741 ;;  offsetCal       1    wreg     _Bool 
 13742 ;;  time            2  108[BANK1 ] unsigned short 
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;  offsetCal       1  121[BANK1 ] _Bool 
 13745 ;;  aPValMean       4  137[BANK1 ] long 
 13746 ;;  mPValMean       4  133[BANK1 ] long 
 13747 ;;  aPVal           2  143[BANK1 ] short 
 13748 ;;  mPVal           2  141[BANK1 ] short 
 13749 ;;  aPValMin        2  131[BANK1 ] short 
 13750 ;;  aPValMax        2  129[BANK1 ] short 
 13751 ;;  mPValMin        2  127[BANK1 ] short 
 13752 ;;  mPValMax        2  125[BANK1 ] short 
 13753 ;;  tstamp          2  122[BANK1 ] unsigned short 
 13754 ;;  chkResult       1  124[BANK1 ] _Bool 
 13755 ;; Return value:  Size  Location     Type
 13756 ;;                  1    wreg      _Bool 
 13757 ;; Registers used:
 13758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13759 ;; Tracked objects:
 13760 ;;		On entry : 3F/1
 13761 ;;		On exit  : 3F/1
 13762 ;;		Unchanged: 0/0
 13763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13764 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13767 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;Total ram usage:       37 bytes
 13769 ;; Hardware stack levels used:    1
 13770 ;; Hardware stack levels required when called:   27
 13771 ;; This function calls:
 13772 ;;		___lmul
 13773 ;;		_aCaptGetResult
 13774 ;;		_aCaptRstFlt
 13775 ;;		_aCaptureOffSet
 13776 ;;		_printf
 13777 ;;		_printstrblock
 13778 ;;		_setCursor
 13779 ;;		_sprintf
 13780 ;;		_timeDelayMs
 13781 ;;		_timeElapsedR
 13782 ;;		_timeGet
 13783 ;; This function is called by:
 13784 ;;		_SelfTest
 13785 ;; This function uses a non-reentrant model
 13786 ;;
 13787                           
 13788                           	psect	text23
 13789  003F8E                     __ptext23:
 13790                           	opt callstack 0
 13791  003F8E                     _pressureSensorChk:
 13792                           	opt callstack 2
 13793                           
 13794                           ; BSR set to: 3
 13795                           ;incstack = 0
 13796                           ;pressureSensorChk@offsetCal stored from wreg
 13797  003F8E  6F79               	movwf	pressureSensorChk@offsetCal& (0+255),b
 13798                           
 13799                           ;selftest.c: 28:     int16_t mPVal, mPValMax, mPValMin;;selftest.c: 29:     int32_t mPVa
      +                          lMean, aPValMean;;selftest.c: 30:     int16_t aPVal, aPValMax, aPValMin;;selftest.c: 31:
      +                               time_t tstamp;;selftest.c: 32:     _Bool chkResult;;selftest.c: 34:     chkResult =
      +                           1;
 13800  003F90  0E01               	movlw	1
 13801  003F92  0101               	movlb	1	; () banked
 13802  003F94  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 13803                           
 13804                           ;selftest.c: 37:     mPValMin = 4096;
 13805  003F96  0E10               	movlw	16
 13806  003F98  6F80               	movwf	(pressureSensorChk@mPValMin+1)& (0+255),b
 13807  003F9A  0E00               	movlw	0
 13808  003F9C  6F7F               	movwf	pressureSensorChk@mPValMin& (0+255),b
 13809                           
 13810                           ;selftest.c: 38:     aPValMin = 4096;
 13811  003F9E  0E10               	movlw	16
 13812  003FA0  6F84               	movwf	(pressureSensorChk@aPValMin+1)& (0+255),b
 13813  003FA2  0E00               	movlw	0
 13814  003FA4  6F83               	movwf	pressureSensorChk@aPValMin& (0+255),b
 13815                           
 13816                           ;selftest.c: 39:     mPValMax = 0;
 13817  003FA6  0E00               	movlw	0
 13818  003FA8  6F7E               	movwf	(pressureSensorChk@mPValMax+1)& (0+255),b
 13819  003FAA  0E00               	movlw	0
 13820  003FAC  6F7D               	movwf	pressureSensorChk@mPValMax& (0+255),b
 13821                           
 13822                           ;selftest.c: 40:     aPValMax = 0;
 13823  003FAE  0E00               	movlw	0
 13824  003FB0  6F82               	movwf	(pressureSensorChk@aPValMax+1)& (0+255),b
 13825  003FB2  0E00               	movlw	0
 13826  003FB4  6F81               	movwf	pressureSensorChk@aPValMax& (0+255),b
 13827                           
 13828                           ; BSR set to: 1
 13829                           ;selftest.c: 41:     tstamp = timeGet();
 13830  003FB6  EC7B  F051         	call	_timeGet	;wreg free
 13831  003FBA  0060  F24C  F17A   	movff	?_timeGet,pressureSensorChk@tstamp
 13832  003FC0  0060  F250  F17B   	movff	?_timeGet+1,pressureSensorChk@tstamp+1
 13833                           
 13834                           ;selftest.c: 43:     while (!timeElapsedR(&tstamp, ((time_t) time*1))) {
 13835  003FC6  D131               	goto	l18985
 13836  003FC8                     l18947:
 13837                           
 13838                           ; BSR set to: 0
 13839                           ;selftest.c: 44:         if (aCaptGetResult(MainPSensor, &mPVal)) {
 13840  003FC8  0E8D               	movlw	low pressureSensorChk@mPVal
 13841  003FCA  0101               	movlb	1	; () banked
 13842  003FCC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 13843  003FCE  0E01               	movlw	high pressureSensorChk@mPVal
 13844  003FD0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 13845  003FD2  0E00               	movlw	0
 13846  003FD4  EC04  F032         	call	_aCaptGetResult
 13847  003FD8  0900               	iorlw	0
 13848  003FDA  B4D8               	btfsc	status,2,c
 13849  003FDC  D07D               	goto	l2795
 13850                           
 13851                           ;selftest.c: 45:             if (mPVal > mPValMax) {
 13852  003FDE  0101               	movlb	1	; () banked
 13853  003FE0  518D               	movf	pressureSensorChk@mPVal& (0+255),w,b
 13854  003FE2  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 13855  003FE4  517E               	movf	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 13856  003FE6  0A80               	xorlw	128
 13857  003FE8  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 13858  003FEA  518E               	movf	(pressureSensorChk@mPVal+1)& (0+255),w,b
 13859  003FEC  0A80               	xorlw	128
 13860  003FEE  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 13861  003FF0  B0D8               	btfsc	status,0,c
 13862  003FF2  D006               	goto	l18953
 13863                           
 13864                           ; BSR set to: 1
 13865                           ;selftest.c: 46:                 mPValMax = mPVal;
 13866  003FF4  0060  F634  F17D   	movff	pressureSensorChk@mPVal,pressureSensorChk@mPValMax
 13867  003FFA  0060  F638  F17E   	movff	pressureSensorChk@mPVal+1,pressureSensorChk@mPValMax+1
 13868  004000                     l18953:
 13869                           
 13870                           ; BSR set to: 1
 13871                           ;selftest.c: 48:             if (mPVal < mPValMin) {
 13872  004000  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 13873  004002  5D8D               	subwf	pressureSensorChk@mPVal& (0+255),w,b
 13874  004004  518E               	movf	(pressureSensorChk@mPVal+1)& (0+255),w,b
 13875  004006  0A80               	xorlw	128
 13876  004008  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 13877  00400A  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 13878  00400C  0A80               	xorlw	128
 13879  00400E  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 13880  004010  B0D8               	btfsc	status,0,c
 13881  004012  D006               	goto	l18957
 13882                           
 13883                           ; BSR set to: 1
 13884                           ;selftest.c: 49:                 mPValMin = mPVal;
 13885  004014  0060  F634  F17F   	movff	pressureSensorChk@mPVal,pressureSensorChk@mPValMin
 13886  00401A  0060  F638  F180   	movff	pressureSensorChk@mPVal+1,pressureSensorChk@mPValMin+1
 13887  004020                     l18957:
 13888                           
 13889                           ; BSR set to: 1
 13890                           ;selftest.c: 51:             mPValMean = (31*mPValMean + 32*mPVal)>>5;
 13891  004020  0E05               	movlw	5
 13892  004022  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 13893  004024  0060  F634  F16F   	movff	pressureSensorChk@mPVal,??_pressureSensorChk+1
 13894  00402A  0060  F638  F170   	movff	pressureSensorChk@mPVal+1,??_pressureSensorChk+2
 13895  004030  0E05               	movlw	5
 13896  004032                     u19735:
 13897  004032  90D8               	bcf	status,0,c
 13898  004034  376F               	rlcf	(??_pressureSensorChk+1)& (0+255),f,b
 13899  004036  3770               	rlcf	(??_pressureSensorChk+2)& (0+255),f,b
 13900  004038  2EE8               	decfsz	wreg,f,c
 13901  00403A  D7FB               	goto	u19735
 13902  00403C  0060  F5BC  F171   	movff	??_pressureSensorChk+1,??_pressureSensorChk+3
 13903  004042  0060  F5C0  F172   	movff	??_pressureSensorChk+2,??_pressureSensorChk+4
 13904  004048  0E00               	movlw	0
 13905  00404A  BF72               	btfsc	(??_pressureSensorChk+4)& (0+255),7,b
 13906  00404C  0EFF               	movlw	255
 13907  00404E  6F73               	movwf	(??_pressureSensorChk+5)& (0+255),b
 13908  004050  6F74               	movwf	(??_pressureSensorChk+6)& (0+255),b
 13909  004052  0060  F614  F08B   	movff	pressureSensorChk@mPValMean,___lmul@multiplier
 13910  004058  0060  F618  F08C   	movff	pressureSensorChk@mPValMean+1,___lmul@multiplier+1
 13911  00405E  0060  F61C  F08D   	movff	pressureSensorChk@mPValMean+2,___lmul@multiplier+2
 13912  004064  0060  F620  F08E   	movff	pressureSensorChk@mPValMean+3,___lmul@multiplier+3
 13913  00406A  0E1F               	movlw	31
 13914  00406C  0100               	movlb	0	; () banked
 13915  00406E  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 13916  004070  0E00               	movlw	0
 13917  004072  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13918  004074  0E00               	movlw	0
 13919  004076  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13920  004078  0E00               	movlw	0
 13921  00407A  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13922  00407C  ECC6  F046         	call	___lmul	;wreg free
 13923  004080  0101               	movlb	1	; () banked
 13924  004082  5171               	movf	(??_pressureSensorChk+3)& (0+255),w,b
 13925  004084  0100               	movlb	0	; () banked
 13926  004086  258B               	addwf	?___lmul& (0+255),w,b
 13927  004088  0101               	movlb	1	; () banked
 13928  00408A  6F75               	movwf	(??_pressureSensorChk+7)& (0+255),b
 13929  00408C  5172               	movf	(??_pressureSensorChk+4)& (0+255),w,b
 13930  00408E  0100               	movlb	0	; () banked
 13931  004090  218C               	addwfc	(?___lmul+1)& (0+255),w,b
 13932  004092  0101               	movlb	1	; () banked
 13933  004094  6F76               	movwf	(??_pressureSensorChk+8)& (0+255),b
 13934  004096  5173               	movf	(??_pressureSensorChk+5)& (0+255),w,b
 13935  004098  0100               	movlb	0	; () banked
 13936  00409A  218D               	addwfc	(?___lmul+2)& (0+255),w,b
 13937  00409C  0101               	movlb	1	; () banked
 13938  00409E  6F77               	movwf	(??_pressureSensorChk+9)& (0+255),b
 13939  0040A0  5174               	movf	(??_pressureSensorChk+6)& (0+255),w,b
 13940  0040A2  0100               	movlb	0	; () banked
 13941  0040A4  218E               	addwfc	(?___lmul+3)& (0+255),w,b
 13942  0040A6  0101               	movlb	1	; () banked
 13943  0040A8  6F78               	movwf	(??_pressureSensorChk+10)& (0+255),b
 13944  0040AA                     u19745:
 13945  0040AA  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 13946  0040AC  D001               	goto	u19746
 13947  0040AE  D007               	goto	u19747
 13948  0040B0                     u19746:
 13949  0040B0  3578               	rlcf	(??_pressureSensorChk+10)& (0+255),w,b
 13950  0040B2  3378               	rrcf	(??_pressureSensorChk+10)& (0+255),f,b
 13951  0040B4  3377               	rrcf	(??_pressureSensorChk+9)& (0+255),f,b
 13952  0040B6  3376               	rrcf	(??_pressureSensorChk+8)& (0+255),f,b
 13953  0040B8  3375               	rrcf	(??_pressureSensorChk+7)& (0+255),f,b
 13954  0040BA  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 13955  0040BC  D7F6               	goto	u19745
 13956  0040BE                     u19747:
 13957  0040BE  0060  F5D4  F185   	movff	??_pressureSensorChk+7,pressureSensorChk@mPValMean
 13958  0040C4  0060  F5D8  F186   	movff	??_pressureSensorChk+8,pressureSensorChk@mPValMean+1
 13959  0040CA  0060  F5DC  F187   	movff	??_pressureSensorChk+9,pressureSensorChk@mPValMean+2
 13960  0040D0  0060  F5E0  F188   	movff	??_pressureSensorChk+10,pressureSensorChk@mPValMean+3
 13961                           
 13962                           ;selftest.c: 52:         } else {
 13963  0040D6  D011               	goto	l18963
 13964  0040D8                     l2795:
 13965                           
 13966                           ;selftest.c: 53:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pr
      +                          intf("Fatal %d",20);
 13967  0040D8  94BA               	bcf	186,2,c	;volatile
 13968  0040DA  96BC               	bcf	188,3,c	;volatile
 13969  0040DC  96BA               	bcf	186,3,c	;volatile
 13970  0040DE  0EB1               	movlw	low STR_28
 13971  0040E0  0101               	movlb	1	; () banked
 13972  0040E2  6F46               	movwf	printf@fmt& (0+255),b
 13973  0040E4  0EFF               	movlw	high STR_28
 13974  0040E6  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13975  0040E8  0E00               	movlw	0
 13976  0040EA  6F49               	movwf	(?_printf+3)& (0+255),b
 13977  0040EC  0E14               	movlw	20
 13978  0040EE  6F48               	movwf	(?_printf+2)& (0+255),b
 13979  0040F0  ECE9  F04E         	call	_printf	;wreg free
 13980                           
 13981                           ; BSR set to: 2
 13982                           ;selftest.c: 54:             chkResult = 0;
 13983  0040F4  0E00               	movlw	0
 13984  0040F6  0101               	movlb	1	; () banked
 13985  0040F8  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 13986  0040FA                     l18963:
 13987                           
 13988                           ;selftest.c: 57:         if (aCaptGetResult(VolPSensor, &aPVal)) {
 13989  0040FA  0E8F               	movlw	low pressureSensorChk@aPVal
 13990  0040FC  0101               	movlb	1	; () banked
 13991  0040FE  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 13992  004100  0E01               	movlw	high pressureSensorChk@aPVal
 13993  004102  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 13994  004104  0E01               	movlw	1
 13995  004106  EC04  F032         	call	_aCaptGetResult
 13996  00410A  0900               	iorlw	0
 13997  00410C  B4D8               	btfsc	status,2,c
 13998  00410E  D07D               	goto	l18975
 13999                           
 14000                           ;selftest.c: 58:             if (aPVal > aPValMax) {
 14001  004110  0101               	movlb	1	; () banked
 14002  004112  518F               	movf	pressureSensorChk@aPVal& (0+255),w,b
 14003  004114  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14004  004116  5182               	movf	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14005  004118  0A80               	xorlw	128
 14006  00411A  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14007  00411C  5190               	movf	(pressureSensorChk@aPVal+1)& (0+255),w,b
 14008  00411E  0A80               	xorlw	128
 14009  004120  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14010  004122  B0D8               	btfsc	status,0,c
 14011  004124  D006               	goto	l18969
 14012                           
 14013                           ; BSR set to: 1
 14014                           ;selftest.c: 59:                 aPValMax = aPVal;
 14015  004126  0060  F63C  F181   	movff	pressureSensorChk@aPVal,pressureSensorChk@aPValMax
 14016  00412C  0060  F640  F182   	movff	pressureSensorChk@aPVal+1,pressureSensorChk@aPValMax+1
 14017  004132                     l18969:
 14018                           
 14019                           ; BSR set to: 1
 14020                           ;selftest.c: 61:             if (aPVal < aPValMin) {
 14021  004132  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14022  004134  5D8F               	subwf	pressureSensorChk@aPVal& (0+255),w,b
 14023  004136  5190               	movf	(pressureSensorChk@aPVal+1)& (0+255),w,b
 14024  004138  0A80               	xorlw	128
 14025  00413A  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14026  00413C  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14027  00413E  0A80               	xorlw	128
 14028  004140  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14029  004142  B0D8               	btfsc	status,0,c
 14030  004144  D006               	goto	l18973
 14031                           
 14032                           ; BSR set to: 1
 14033                           ;selftest.c: 62:                 aPValMin = aPVal;
 14034  004146  0060  F63C  F183   	movff	pressureSensorChk@aPVal,pressureSensorChk@aPValMin
 14035  00414C  0060  F640  F184   	movff	pressureSensorChk@aPVal+1,pressureSensorChk@aPValMin+1
 14036  004152                     l18973:
 14037                           
 14038                           ; BSR set to: 1
 14039                           ;selftest.c: 64:             aPValMean = (31*aPValMean + 32*aPVal)>>5;
 14040  004152  0E05               	movlw	5
 14041  004154  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14042  004156  0060  F63C  F16F   	movff	pressureSensorChk@aPVal,??_pressureSensorChk+1
 14043  00415C  0060  F640  F170   	movff	pressureSensorChk@aPVal+1,??_pressureSensorChk+2
 14044  004162  0E05               	movlw	5
 14045  004164                     u19785:
 14046  004164  90D8               	bcf	status,0,c
 14047  004166  376F               	rlcf	(??_pressureSensorChk+1)& (0+255),f,b
 14048  004168  3770               	rlcf	(??_pressureSensorChk+2)& (0+255),f,b
 14049  00416A  2EE8               	decfsz	wreg,f,c
 14050  00416C  D7FB               	goto	u19785
 14051  00416E  0060  F5BC  F171   	movff	??_pressureSensorChk+1,??_pressureSensorChk+3
 14052  004174  0060  F5C0  F172   	movff	??_pressureSensorChk+2,??_pressureSensorChk+4
 14053  00417A  0E00               	movlw	0
 14054  00417C  BF72               	btfsc	(??_pressureSensorChk+4)& (0+255),7,b
 14055  00417E  0EFF               	movlw	255
 14056  004180  6F73               	movwf	(??_pressureSensorChk+5)& (0+255),b
 14057  004182  6F74               	movwf	(??_pressureSensorChk+6)& (0+255),b
 14058  004184  0060  F624  F08B   	movff	pressureSensorChk@aPValMean,___lmul@multiplier
 14059  00418A  0060  F628  F08C   	movff	pressureSensorChk@aPValMean+1,___lmul@multiplier+1
 14060  004190  0060  F62C  F08D   	movff	pressureSensorChk@aPValMean+2,___lmul@multiplier+2
 14061  004196  0060  F630  F08E   	movff	pressureSensorChk@aPValMean+3,___lmul@multiplier+3
 14062  00419C  0E1F               	movlw	31
 14063  00419E  0100               	movlb	0	; () banked
 14064  0041A0  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 14065  0041A2  0E00               	movlw	0
 14066  0041A4  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14067  0041A6  0E00               	movlw	0
 14068  0041A8  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14069  0041AA  0E00               	movlw	0
 14070  0041AC  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14071  0041AE  ECC6  F046         	call	___lmul	;wreg free
 14072  0041B2  0101               	movlb	1	; () banked
 14073  0041B4  5171               	movf	(??_pressureSensorChk+3)& (0+255),w,b
 14074  0041B6  0100               	movlb	0	; () banked
 14075  0041B8  258B               	addwf	?___lmul& (0+255),w,b
 14076  0041BA  0101               	movlb	1	; () banked
 14077  0041BC  6F75               	movwf	(??_pressureSensorChk+7)& (0+255),b
 14078  0041BE  5172               	movf	(??_pressureSensorChk+4)& (0+255),w,b
 14079  0041C0  0100               	movlb	0	; () banked
 14080  0041C2  218C               	addwfc	(?___lmul+1)& (0+255),w,b
 14081  0041C4  0101               	movlb	1	; () banked
 14082  0041C6  6F76               	movwf	(??_pressureSensorChk+8)& (0+255),b
 14083  0041C8  5173               	movf	(??_pressureSensorChk+5)& (0+255),w,b
 14084  0041CA  0100               	movlb	0	; () banked
 14085  0041CC  218D               	addwfc	(?___lmul+2)& (0+255),w,b
 14086  0041CE  0101               	movlb	1	; () banked
 14087  0041D0  6F77               	movwf	(??_pressureSensorChk+9)& (0+255),b
 14088  0041D2  5174               	movf	(??_pressureSensorChk+6)& (0+255),w,b
 14089  0041D4  0100               	movlb	0	; () banked
 14090  0041D6  218E               	addwfc	(?___lmul+3)& (0+255),w,b
 14091  0041D8  0101               	movlb	1	; () banked
 14092  0041DA  6F78               	movwf	(??_pressureSensorChk+10)& (0+255),b
 14093  0041DC                     u19795:
 14094  0041DC  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14095  0041DE  D001               	goto	u19796
 14096  0041E0  D007               	goto	u19797
 14097  0041E2                     u19796:
 14098  0041E2  3578               	rlcf	(??_pressureSensorChk+10)& (0+255),w,b
 14099  0041E4  3378               	rrcf	(??_pressureSensorChk+10)& (0+255),f,b
 14100  0041E6  3377               	rrcf	(??_pressureSensorChk+9)& (0+255),f,b
 14101  0041E8  3376               	rrcf	(??_pressureSensorChk+8)& (0+255),f,b
 14102  0041EA  3375               	rrcf	(??_pressureSensorChk+7)& (0+255),f,b
 14103  0041EC  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14104  0041EE  D7F6               	goto	u19795
 14105  0041F0                     u19797:
 14106  0041F0  0060  F5D4  F189   	movff	??_pressureSensorChk+7,pressureSensorChk@aPValMean
 14107  0041F6  0060  F5D8  F18A   	movff	??_pressureSensorChk+8,pressureSensorChk@aPValMean+1
 14108  0041FC  0060  F5DC  F18B   	movff	??_pressureSensorChk+9,pressureSensorChk@aPValMean+2
 14109  004202  0060  F5E0  F18C   	movff	??_pressureSensorChk+10,pressureSensorChk@aPValMean+3
 14110                           
 14111                           ;selftest.c: 65:         } else {
 14112  004208  D010               	goto	l18985
 14113  00420A                     l18975:
 14114                           
 14115                           ;selftest.c: 66:             chkResult = 0;
 14116  00420A  0E00               	movlw	0
 14117  00420C  0101               	movlb	1	; () banked
 14118  00420E  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14119                           
 14120                           ; BSR set to: 1
 14121                           ;selftest.c: 67:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pr
      +                          intf("Fatal %d",21);
 14122  004210  94BA               	bcf	186,2,c	;volatile
 14123                           
 14124                           ; BSR set to: 1
 14125  004212  96BC               	bcf	188,3,c	;volatile
 14126                           
 14127                           ; BSR set to: 1
 14128  004214  96BA               	bcf	186,3,c	;volatile
 14129                           
 14130                           ; BSR set to: 1
 14131  004216  0EB1               	movlw	low STR_28
 14132  004218  6F46               	movwf	printf@fmt& (0+255),b
 14133  00421A  0EFF               	movlw	high STR_28
 14134  00421C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14135  00421E  0E00               	movlw	0
 14136  004220  6F49               	movwf	(?_printf+3)& (0+255),b
 14137  004222  0E15               	movlw	21
 14138  004224  6F48               	movwf	(?_printf+2)& (0+255),b
 14139  004226  ECE9  F04E         	call	_printf	;wreg free
 14140  00422A                     l18985:
 14141                           
 14142                           ;selftest.c: 43:     while (!timeElapsedR(&tstamp, ((time_t) time*1))) {
 14143  00422A  0E7A               	movlw	low pressureSensorChk@tstamp
 14144  00422C  0100               	movlb	0	; () banked
 14145  00422E  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 14146  004230  0E01               	movlw	high pressureSensorChk@tstamp
 14147  004232  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 14148  004234  0060  F5B0  F095   	movff	pressureSensorChk@time,timeElapsedR@duration
 14149  00423A  0060  F5B4  F096   	movff	pressureSensorChk@time+1,timeElapsedR@duration+1
 14150  004240  EC66  F046         	call	_timeElapsedR	;wreg free
 14151  004244  0900               	iorlw	0
 14152  004246  B4D8               	btfsc	status,2,c
 14153  004248  D6BF               	goto	l18947
 14154                           
 14155                           ; BSR set to: 0
 14156                           ;selftest.c: 72:     mPValMean = mPValMean>>5;
 14157  00424A  0E05               	movlw	5
 14158  00424C  0101               	movlb	1	; () banked
 14159  00424E  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14160  004250  0060  F614  F16F   	movff	pressureSensorChk@mPValMean,??_pressureSensorChk+1
 14161  004256  0060  F618  F170   	movff	pressureSensorChk@mPValMean+1,??_pressureSensorChk+2
 14162  00425C  0060  F61C  F171   	movff	pressureSensorChk@mPValMean+2,??_pressureSensorChk+3
 14163  004262  0060  F620  F172   	movff	pressureSensorChk@mPValMean+3,??_pressureSensorChk+4
 14164  004268                     u19815:
 14165  004268  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14166  00426A  D001               	goto	u19816
 14167  00426C  D007               	goto	u19817
 14168  00426E                     u19816:
 14169  00426E  3572               	rlcf	(??_pressureSensorChk+4)& (0+255),w,b
 14170  004270  3372               	rrcf	(??_pressureSensorChk+4)& (0+255),f,b
 14171  004272  3371               	rrcf	(??_pressureSensorChk+3)& (0+255),f,b
 14172  004274  3370               	rrcf	(??_pressureSensorChk+2)& (0+255),f,b
 14173  004276  336F               	rrcf	(??_pressureSensorChk+1)& (0+255),f,b
 14174  004278  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14175  00427A  D7F6               	goto	u19815
 14176  00427C                     u19817:
 14177  00427C  0060  F5BC  F185   	movff	??_pressureSensorChk+1,pressureSensorChk@mPValMean
 14178  004282  0060  F5C0  F186   	movff	??_pressureSensorChk+2,pressureSensorChk@mPValMean+1
 14179  004288  0060  F5C4  F187   	movff	??_pressureSensorChk+3,pressureSensorChk@mPValMean+2
 14180  00428E  0060  F5C8  F188   	movff	??_pressureSensorChk+4,pressureSensorChk@mPValMean+3
 14181                           
 14182                           ;selftest.c: 73:     aPValMean = aPValMean>>5;
 14183  004294  0E05               	movlw	5
 14184  004296  0101               	movlb	1	; () banked
 14185  004298  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14186  00429A  0060  F624  F16F   	movff	pressureSensorChk@aPValMean,??_pressureSensorChk+1
 14187  0042A0  0060  F628  F170   	movff	pressureSensorChk@aPValMean+1,??_pressureSensorChk+2
 14188  0042A6  0060  F62C  F171   	movff	pressureSensorChk@aPValMean+2,??_pressureSensorChk+3
 14189  0042AC  0060  F630  F172   	movff	pressureSensorChk@aPValMean+3,??_pressureSensorChk+4
 14190  0042B2                     u19825:
 14191  0042B2  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14192  0042B4  D001               	goto	u19826
 14193  0042B6  D007               	goto	u19827
 14194  0042B8                     u19826:
 14195  0042B8  3572               	rlcf	(??_pressureSensorChk+4)& (0+255),w,b
 14196  0042BA  3372               	rrcf	(??_pressureSensorChk+4)& (0+255),f,b
 14197  0042BC  3371               	rrcf	(??_pressureSensorChk+3)& (0+255),f,b
 14198  0042BE  3370               	rrcf	(??_pressureSensorChk+2)& (0+255),f,b
 14199  0042C0  336F               	rrcf	(??_pressureSensorChk+1)& (0+255),f,b
 14200  0042C2  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14201  0042C4  D7F6               	goto	u19825
 14202  0042C6                     u19827:
 14203  0042C6  0060  F5BC  F189   	movff	??_pressureSensorChk+1,pressureSensorChk@aPValMean
 14204  0042CC  0060  F5C0  F18A   	movff	??_pressureSensorChk+2,pressureSensorChk@aPValMean+1
 14205  0042D2  0060  F5C4  F18B   	movff	??_pressureSensorChk+3,pressureSensorChk@aPValMean+2
 14206  0042D8  0060  F5C8  F18C   	movff	??_pressureSensorChk+4,pressureSensorChk@aPValMean+3
 14207                           
 14208                           ;selftest.c: 74:     sprintf(lcdTopRow, "MS: % 3d AS: % 3d ", mPValMean, aPValMean);
 14209  0042DE  0EA3               	movlw	low _lcdTopRow
 14210  0042E0  0101               	movlb	1	; () banked
 14211  0042E2  6F46               	movwf	sprintf@s& (0+255),b
 14212  0042E4  0E02               	movlw	high _lcdTopRow
 14213  0042E6  6F47               	movwf	(sprintf@s+1)& (0+255),b
 14214  0042E8  0E2F               	movlw	low STR_64
 14215  0042EA  6F48               	movwf	sprintf@fmt& (0+255),b
 14216  0042EC  0EFD               	movlw	high STR_64
 14217  0042EE  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 14218  0042F0  0060  F614  F14A   	movff	pressureSensorChk@mPValMean,?_sprintf+4
 14219  0042F6  0060  F618  F14B   	movff	pressureSensorChk@mPValMean+1,?_sprintf+5
 14220  0042FC  0060  F61C  F14C   	movff	pressureSensorChk@mPValMean+2,?_sprintf+6
 14221  004302  0060  F620  F14D   	movff	pressureSensorChk@mPValMean+3,?_sprintf+7
 14222  004308  0060  F624  F14E   	movff	pressureSensorChk@aPValMean,?_sprintf+8
 14223  00430E  0060  F628  F14F   	movff	pressureSensorChk@aPValMean+1,?_sprintf+9
 14224  004314  0060  F62C  F150   	movff	pressureSensorChk@aPValMean+2,?_sprintf+10
 14225  00431A  0060  F630  F151   	movff	pressureSensorChk@aPValMean+3,?_sprintf+11
 14226  004320  ECD9  F047         	call	_sprintf	;wreg free
 14227                           
 14228                           ; BSR set to: 1
 14229                           ;selftest.c: 75:     printf ("MAIN PRESSURE. Min %d Max %d MEAN %d\n", mPValMin, mPValMa
      +                          x, mPValMean);
 14230  004324  0E9E               	movlw	low STR_65
 14231  004326  6F46               	movwf	printf@fmt& (0+255),b
 14232  004328  0EFB               	movlw	high STR_65
 14233  00432A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14234  00432C  0060  F5FC  F148   	movff	pressureSensorChk@mPValMin,?_printf+2
 14235  004332  0060  F600  F149   	movff	pressureSensorChk@mPValMin+1,?_printf+3
 14236  004338  0060  F5F4  F14A   	movff	pressureSensorChk@mPValMax,?_printf+4
 14237  00433E  0060  F5F8  F14B   	movff	pressureSensorChk@mPValMax+1,?_printf+5
 14238  004344  0060  F614  F14C   	movff	pressureSensorChk@mPValMean,?_printf+6
 14239  00434A  0060  F618  F14D   	movff	pressureSensorChk@mPValMean+1,?_printf+7
 14240  004350  0060  F61C  F14E   	movff	pressureSensorChk@mPValMean+2,?_printf+8
 14241  004356  0060  F620  F14F   	movff	pressureSensorChk@mPValMean+3,?_printf+9
 14242  00435C  ECE9  F04E         	call	_printf	;wreg free
 14243                           
 14244                           ; BSR set to: 2
 14245                           ;selftest.c: 76:     printf ("AUX PRESSURE. Min %d Max %d MEAN %d\n", aPValMin, aPValMax
      +                          , aPValMean);
 14246  004360  0EC4               	movlw	low STR_66
 14247  004362  0101               	movlb	1	; () banked
 14248  004364  6F46               	movwf	printf@fmt& (0+255),b
 14249  004366  0EFB               	movlw	high STR_66
 14250  004368  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14251  00436A  0060  F60C  F148   	movff	pressureSensorChk@aPValMin,?_printf+2
 14252  004370  0060  F610  F149   	movff	pressureSensorChk@aPValMin+1,?_printf+3
 14253  004376  0060  F604  F14A   	movff	pressureSensorChk@aPValMax,?_printf+4
 14254  00437C  0060  F608  F14B   	movff	pressureSensorChk@aPValMax+1,?_printf+5
 14255  004382  0060  F624  F14C   	movff	pressureSensorChk@aPValMean,?_printf+6
 14256  004388  0060  F628  F14D   	movff	pressureSensorChk@aPValMean+1,?_printf+7
 14257  00438E  0060  F62C  F14E   	movff	pressureSensorChk@aPValMean+2,?_printf+8
 14258  004394  0060  F630  F14F   	movff	pressureSensorChk@aPValMean+3,?_printf+9
 14259  00439A  ECE9  F04E         	call	_printf	;wreg free
 14260                           
 14261                           ; BSR set to: 2
 14262                           ;selftest.c: 77:     setCursor(0, 0);
 14263  00439E  0E00               	movlw	0
 14264  0043A0  0100               	movlb	0	; () banked
 14265  0043A2  6F92               	movwf	setCursor@row& (0+255),b
 14266  0043A4  0E00               	movlw	0
 14267  0043A6  EC55  F04B         	call	_setCursor
 14268                           
 14269                           ;selftest.c: 78:     printstrblock(lcdTopRow);
 14270  0043AA  0EA3               	movlw	low _lcdTopRow
 14271  0043AC  0100               	movlb	0	; () banked
 14272  0043AE  6F8F               	movwf	printstrblock@c& (0+255),b
 14273  0043B0  0E02               	movlw	high _lcdTopRow
 14274  0043B2  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 14275  0043B4  EC4E  F04F         	call	_printstrblock	;wreg free
 14276                           
 14277                           ; BSR set to: 0
 14278                           ;selftest.c: 79:     timeDelayMs(1000);
 14279  0043B8  0E03               	movlw	3
 14280  0043BA  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 14281  0043BC  0EE8               	movlw	232
 14282  0043BE  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 14283  0043C0  EC8B  F04C         	call	_timeDelayMs	;wreg free
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;selftest.c: 82:     if (offsetCal) {
 14287  0043C4  0101               	movlb	1	; () banked
 14288  0043C6  5179               	movf	pressureSensorChk@offsetCal& (0+255),w,b
 14289  0043C8  B4D8               	btfsc	status,2,c
 14290  0043CA  D07D               	goto	l19025
 14291                           
 14292                           ; BSR set to: 1
 14293                           ;selftest.c: 83:         if (((aPValMax - aPValMin) > 16) || ((mPValMax - mPValMin) > 16
      +                          ) || (mPValMean > 350) || (mPValMean < 40) || (aPValMean < 600) || (aPValMean > 1030)) {
 14294  0043CC  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14295  0043CE  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14296  0043D0  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14297  0043D2  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14298  0043D4  5982               	subwfb	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14299  0043D6  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14300  0043D8  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14301  0043DA  D006               	goto	u19840
 14302  0043DC  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14303  0043DE  E13D               	bnz	l19015
 14304  0043E0  0E11               	movlw	17
 14305  0043E2  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14306  0043E4  B0D8               	btfsc	status,0,c
 14307  0043E6  D039               	goto	u19890
 14308  0043E8                     u19840:
 14309                           
 14310                           ; BSR set to: 1
 14311  0043E8  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 14312  0043EA  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 14313  0043EC  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14314  0043EE  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 14315  0043F0  597E               	subwfb	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 14316  0043F2  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14317  0043F4  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14318  0043F6  D006               	goto	u19850
 14319  0043F8  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14320  0043FA  E12F               	bnz	l19015
 14321  0043FC  0E11               	movlw	17
 14322  0043FE  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14323  004400  B0D8               	btfsc	status,0,c
 14324  004402  D02B               	goto	u19890
 14325  004404                     u19850:
 14326                           
 14327                           ; BSR set to: 1
 14328  004404  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14329  004406  D009               	goto	u19860
 14330  004408  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14331  00440A  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14332  00440C  E126               	bnz	l19015
 14333  00440E  0E5F               	movlw	95
 14334  004410  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14335  004412  0E01               	movlw	1
 14336  004414  5986               	subwfb	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14337  004416  B0D8               	btfsc	status,0,c
 14338  004418  D020               	goto	u19890
 14339  00441A                     u19860:
 14340                           
 14341                           ; BSR set to: 1
 14342  00441A  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14343  00441C  D01E               	goto	u19890
 14344  00441E  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14345  004420  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14346  004422  1186               	iorwf	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14347  004424  E104               	bnz	u19870
 14348  004426  0E28               	movlw	40
 14349  004428  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14350  00442A  A0D8               	btfss	status,0,c
 14351  00442C  D016               	goto	u19890
 14352  00442E                     u19870:
 14353                           
 14354                           ; BSR set to: 1
 14355  00442E  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14356  004430  D014               	goto	u19890
 14357  004432  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14358  004434  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14359  004436  E106               	bnz	u19880
 14360  004438  0E58               	movlw	88
 14361  00443A  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14362  00443C  0E02               	movlw	2
 14363  00443E  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14364  004440  A0D8               	btfss	status,0,c
 14365  004442  D00B               	goto	u19890
 14366  004444                     u19880:
 14367                           
 14368                           ; BSR set to: 1
 14369  004444  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14370  004446  D019               	goto	l19021
 14371  004448  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14372  00444A  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14373  00444C  E106               	bnz	u19890
 14374  00444E  0E07               	movlw	7
 14375  004450  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14376  004452  0E04               	movlw	4
 14377  004454  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14378  004456  A0D8               	btfss	status,0,c
 14379  004458  D010               	goto	l19021
 14380  00445A                     u19890:
 14381  00445A                     l19015:
 14382                           
 14383                           ; BSR set to: 1
 14384                           ;selftest.c: 85:             setCursor(0, 0);
 14385  00445A  0E00               	movlw	0
 14386  00445C  0100               	movlb	0	; () banked
 14387  00445E  6F92               	movwf	setCursor@row& (0+255),b
 14388  004460  0E00               	movlw	0
 14389  004462  EC55  F04B         	call	_setCursor
 14390                           
 14391                           ;selftest.c: 86:             chkResult = 0;
 14392  004466  0E00               	movlw	0
 14393  004468  0101               	movlb	1	; () banked
 14394  00446A  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14395                           
 14396                           ; BSR set to: 1
 14397                           ;selftest.c: 87:             printf ("PRESSURE CALIBRATION ERROR\n");
 14398  00446C  0E2E               	movlw	low STR_67
 14399  00446E  6F46               	movwf	printf@fmt& (0+255),b
 14400  004470  0EFC               	movlw	high STR_67
 14401  004472  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14402  004474  ECE9  F04E         	call	_printf	;wreg free
 14403                           
 14404                           ;selftest.c: 88:         } else {
 14405  004478  D077               	goto	l19041
 14406  00447A                     l19021:
 14407                           
 14408                           ; BSR set to: 1
 14409                           ;selftest.c: 90:             aCaptureOffSet(MainPSensor, mPValMean);
 14410  00447A  0060  F614  F160   	movff	pressureSensorChk@mPValMean,aCaptureOffSet@offVal
 14411  004480  0060  F618  F161   	movff	pressureSensorChk@mPValMean+1,aCaptureOffSet@offVal+1
 14412  004486  0E00               	movlw	0
 14413  004488  EC7D  F049         	call	_aCaptureOffSet
 14414                           
 14415                           ;selftest.c: 91:             aCaptureOffSet(VolPSensor, aPValMean);
 14416  00448C  0060  F624  F160   	movff	pressureSensorChk@aPValMean,aCaptureOffSet@offVal
 14417  004492  0060  F628  F161   	movff	pressureSensorChk@aPValMean+1,aCaptureOffSet@offVal+1
 14418  004498  0E01               	movlw	1
 14419  00449A  EC7D  F049         	call	_aCaptureOffSet
 14420                           
 14421                           ;selftest.c: 93:             aCaptRstFlt(Flt0PSensor);
 14422  00449E  0E03               	movlw	3
 14423  0044A0  ECED  F03B         	call	_aCaptRstFlt
 14424                           
 14425                           ;selftest.c: 94:             aCaptRstFlt(Flt1PSensor);
 14426  0044A4  0E04               	movlw	4
 14427  0044A6  ECED  F03B         	call	_aCaptRstFlt
 14428                           
 14429                           ;selftest.c: 95:             aCaptRstFlt(Flt2PSensor);
 14430  0044AA  0E05               	movlw	5
 14431  0044AC  ECED  F03B         	call	_aCaptRstFlt
 14432                           
 14433                           ;selftest.c: 96:             aCaptRstFlt(Flt3PSensor);
 14434  0044B0  0E06               	movlw	6
 14435  0044B2  ECED  F03B         	call	_aCaptRstFlt
 14436                           
 14437                           ; BSR set to: 57
 14438                           ;selftest.c: 97:             timeDelayMs(50);
 14439  0044B6  0E00               	movlw	0
 14440  0044B8  0100               	movlb	0	; () banked
 14441  0044BA  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 14442  0044BC  0E32               	movlw	50
 14443  0044BE  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 14444  0044C0  EC8B  F04C         	call	_timeDelayMs	;wreg free
 14445  0044C4  D051               	goto	l19041
 14446  0044C6                     l19025:
 14447                           
 14448                           ; BSR set to: 1
 14449                           ;selftest.c: 100:         if (((aPValMax - aPValMin) > 16) || ((mPValMax - mPValMin) > 1
      +                          6) || (mPValMean > 10) || (mPValMean < -10) || (aPValMean < -10) || (aPValMean > 10)) {
 14450  0044C6  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14451  0044C8  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14452  0044CA  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14453  0044CC  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14454  0044CE  5982               	subwfb	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14455  0044D0  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14456  0044D2  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14457  0044D4  D006               	goto	u19900
 14458  0044D6  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14459  0044D8  E13E               	bnz	l19037
 14460  0044DA  0E11               	movlw	17
 14461  0044DC  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14462  0044DE  B0D8               	btfsc	status,0,c
 14463  0044E0  D03A               	goto	u19950
 14464  0044E2                     u19900:
 14465                           
 14466                           ; BSR set to: 1
 14467  0044E2  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 14468  0044E4  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 14469  0044E6  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14470  0044E8  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 14471  0044EA  597E               	subwfb	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 14472  0044EC  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14473  0044EE  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14474  0044F0  D006               	goto	u19910
 14475  0044F2  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14476  0044F4  E130               	bnz	l19037
 14477  0044F6  0E11               	movlw	17
 14478  0044F8  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14479  0044FA  B0D8               	btfsc	status,0,c
 14480  0044FC  D02C               	goto	u19950
 14481  0044FE                     u19910:
 14482                           
 14483                           ; BSR set to: 1
 14484  0044FE  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14485  004500  D008               	goto	u19920
 14486  004502  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14487  004504  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14488  004506  1186               	iorwf	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14489  004508  E126               	bnz	l19037
 14490  00450A  0E0B               	movlw	11
 14491  00450C  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14492  00450E  B0D8               	btfsc	status,0,c
 14493  004510  D022               	goto	u19950
 14494  004512                     u19920:
 14495                           
 14496                           ; BSR set to: 1
 14497  004512  AF88               	btfss	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14498  004514  D00A               	goto	u19930
 14499  004516  0EF6               	movlw	246
 14500  004518  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14501  00451A  0EFF               	movlw	255
 14502  00451C  5986               	subwfb	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14503  00451E  0EFF               	movlw	255
 14504  004520  5987               	subwfb	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14505  004522  0EFF               	movlw	255
 14506  004524  5988               	subwfb	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14507  004526  A0D8               	btfss	status,0,c
 14508  004528  D016               	goto	u19950
 14509  00452A                     u19930:
 14510                           
 14511                           ; BSR set to: 1
 14512  00452A  AF8C               	btfss	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14513  00452C  D00A               	goto	u19940
 14514  00452E  0EF6               	movlw	246
 14515  004530  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14516  004532  0EFF               	movlw	255
 14517  004534  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14518  004536  0EFF               	movlw	255
 14519  004538  598B               	subwfb	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14520  00453A  0EFF               	movlw	255
 14521  00453C  598C               	subwfb	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14522  00453E  A0D8               	btfss	status,0,c
 14523  004540  D00A               	goto	u19950
 14524  004542                     u19940:
 14525                           
 14526                           ; BSR set to: 1
 14527  004542  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14528  004544  D011               	goto	l19041
 14529  004546  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14530  004548  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14531  00454A  118A               	iorwf	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14532  00454C  E104               	bnz	u19950
 14533  00454E  0E0B               	movlw	11
 14534  004550  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14535  004552  A0D8               	btfss	status,0,c
 14536  004554  D009               	goto	l19041
 14537  004556                     u19950:
 14538  004556                     l19037:
 14539                           
 14540                           ; BSR set to: 1
 14541                           ;selftest.c: 101:             printf ("VALVE CHECK ERROR\n");
 14542  004556  0E1C               	movlw	low STR_68
 14543  004558  6F46               	movwf	printf@fmt& (0+255),b
 14544  00455A  0EFD               	movlw	high STR_68
 14545  00455C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14546  00455E  ECE9  F04E         	call	_printf	;wreg free
 14547                           
 14548                           ; BSR set to: 2
 14549                           ;selftest.c: 102:             chkResult = 0;
 14550  004562  0E00               	movlw	0
 14551  004564  0101               	movlb	1	; () banked
 14552  004566  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14553  004568                     l19041:
 14554                           
 14555                           ;selftest.c: 105:     return chkResult;
 14556  004568  0101               	movlb	1	; () banked
 14557  00456A  517C               	movf	pressureSensorChk@chkResult& (0+255),w,b
 14558                           
 14559                           ; BSR set to: 1
 14560  00456C  0012               	return		;funcret
 14561  00456E                     __end_of_pressureSensorChk:
 14562                           	opt callstack 0
 14563                           
 14564 ;; *************** function _aCaptureOffSet *****************
 14565 ;; Defined at:
 14566 ;;		line 116 in file "aCapture.c"
 14567 ;; Parameters:    Size  Location     Type
 14568 ;;  sel             1    wreg     enum E16104
 14569 ;;  offVal          2   96[BANK1 ] short 
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  sel             1   98[BANK1 ] enum E16104
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  1    wreg      void 
 14574 ;; Registers used:
 14575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14576 ;; Tracked objects:
 14577 ;;		On entry : 3C/1
 14578 ;;		On exit  : 3C/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14581 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14582 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14584 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14585 ;;Total ram usage:        3 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; Hardware stack levels required when called:   26
 14588 ;; This function calls:
 14589 ;;		_printf
 14590 ;; This function is called by:
 14591 ;;		_pressureSensorChk
 14592 ;;		_SelfTest
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text24
 14597  0092FA                     __ptext24:
 14598                           	opt callstack 0
 14599  0092FA                     _aCaptureOffSet:
 14600                           	opt callstack 2
 14601                           
 14602                           ; BSR set to: 1
 14603                           ;incstack = 0
 14604                           ;aCaptureOffSet@sel stored from wreg
 14605  0092FA  0101               	movlb	1	; () banked
 14606  0092FC  6F62               	movwf	aCaptureOffSet@sel& (0+255),b
 14607                           
 14608                           ;aCapture.c: 117:     if (sel == MainPSensor) {
 14609  0092FE  0101               	movlb	1	; () banked
 14610  009300  5162               	movf	aCaptureOffSet@sel& (0+255),w,b
 14611  009302  A4D8               	btfss	status,2,c
 14612  009304  D007               	goto	l18115
 14613                           
 14614                           ; BSR set to: 1
 14615                           ;aCapture.c: 118:         mainPSensCal = offVal;
 14616  009306  0060  F580  F1F5   	movff	aCaptureOffSet@offVal,_mainPSensCal
 14617  00930C  0060  F584  F1F6   	movff	aCaptureOffSet@offVal+1,_mainPSensCal+1
 14618                           
 14619                           ;aCapture.c: 119:     } else if (sel == VolPSensor) {
 14620  009312  0012               	return	
 14621  009314                     l18115:
 14622                           
 14623                           ; BSR set to: 1
 14624  009314  0562               	decf	aCaptureOffSet@sel& (0+255),w,b
 14625  009316  A4D8               	btfss	status,2,c
 14626  009318  D007               	goto	l1955
 14627                           
 14628                           ; BSR set to: 1
 14629                           ;aCapture.c: 120:         auxPSensCal = offVal;
 14630  00931A  0060  F580  F2E6   	movff	aCaptureOffSet@offVal,_auxPSensCal
 14631  009320  0060  F584  F2E7   	movff	aCaptureOffSet@offVal+1,_auxPSensCal+1
 14632                           
 14633                           ;aCapture.c: 121:     } else {
 14634  009326  0012               	return	
 14635  009328                     l1955:
 14636                           
 14637                           ; BSR set to: 1
 14638                           ;aCapture.c: 122:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;print
      +                          f("Fatal %d",102);
 14639  009328  94BA               	bcf	186,2,c	;volatile
 14640  00932A  96BC               	bcf	188,3,c	;volatile
 14641  00932C  96BA               	bcf	186,3,c	;volatile
 14642                           
 14643                           ; BSR set to: 1
 14644  00932E  0EB1               	movlw	low STR_28
 14645  009330  6F46               	movwf	printf@fmt& (0+255),b
 14646  009332  0EFF               	movlw	high STR_28
 14647  009334  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14648  009336  0E00               	movlw	0
 14649  009338  6F49               	movwf	(?_printf+3)& (0+255),b
 14650  00933A  0E66               	movlw	102
 14651  00933C  6F48               	movwf	(?_printf+2)& (0+255),b
 14652  00933E  ECE9  F04E         	call	_printf	;wreg free
 14653  009342  0012               	return		;funcret
 14654  009344                     __end_of_aCaptureOffSet:
 14655                           	opt callstack 0
 14656                           
 14657 ;; *************** function _aCaptRstFlt *****************
 14658 ;; Defined at:
 14659 ;;		line 136 in file "aCapture.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;  sel             1    wreg     enum E16104
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;  sel             1  100[BANK1 ] enum E16104
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14668 ;; Tracked objects:
 14669 ;;		On entry : 4/2
 14670 ;;		On exit  : 3F/39
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14674 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14675 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14676 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;Total ram usage:        5 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; Hardware stack levels required when called:   26
 14680 ;; This function calls:
 14681 ;;		_printf
 14682 ;; This function is called by:
 14683 ;;		_main
 14684 ;;		_pressureSensorChk
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           	psect	text25
 14689  0077DA                     __ptext25:
 14690                           	opt callstack 0
 14691  0077DA                     _aCaptRstFlt:
 14692                           	opt callstack 4
 14693                           
 14694                           ;incstack = 0
 14695                           ;aCaptRstFlt@sel stored from wreg
 14696  0077DA  0101               	movlb	1	; () banked
 14697  0077DC  6F64               	movwf	aCaptRstFlt@sel& (0+255),b
 14698                           
 14699                           ;aCapture.c: 137:     switch (sel) {
 14700  0077DE  D076               	goto	l18103
 14701  0077E0                     l18093:
 14702                           
 14703                           ; BSR set to: 1
 14704                           ;aCapture.c: 140:             resultTbl[sel] = resultTbl[MainPSensor]<<9;
 14705  0077E0  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14706  0077E6  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14707  0077EC  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14708  0077F2  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14709  0077F8  0E09               	movlw	9
 14710  0077FA                     u18595:
 14711  0077FA  90D8               	bcf	status,0,c
 14712  0077FC  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14713  0077FE  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14714  007800  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14715  007802  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14716  007804  2EE8               	decfsz	wreg,f,c
 14717  007806  D7F9               	goto	u18595
 14718  007808  D03E               	goto	L18
 14719  00780A                     l18095:
 14720                           
 14721                           ; BSR set to: 1
 14722                           ;aCapture.c: 143:             resultTbl[sel] = resultTbl[MainPSensor]<<6;
 14723  00780A  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14724  007810  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14725  007816  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14726  00781C  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14727  007822  0E06               	movlw	6
 14728  007824                     u18605:
 14729  007824  90D8               	bcf	status,0,c
 14730  007826  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14731  007828  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14732  00782A  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14733  00782C  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14734  00782E  2EE8               	decfsz	wreg,f,c
 14735  007830  D7F9               	goto	u18605
 14736  007832  D029               	goto	L18
 14737  007834                     l18097:
 14738                           
 14739                           ; BSR set to: 1
 14740                           ;aCapture.c: 146:             resultTbl[sel] = resultTbl[MainPSensor]<<4;
 14741  007834  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14742  00783A  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14743  007840  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14744  007846  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14745  00784C  0E04               	movlw	4
 14746  00784E                     u18615:
 14747  00784E  90D8               	bcf	status,0,c
 14748  007850  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14749  007852  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14750  007854  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14751  007856  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14752  007858  2EE8               	decfsz	wreg,f,c
 14753  00785A  D7F9               	goto	u18615
 14754  00785C  D014               	goto	L18
 14755  00785E                     l18099:
 14756                           
 14757                           ; BSR set to: 1
 14758                           ;aCapture.c: 149:             resultTbl[sel] = resultTbl[MainPSensor]<<2;
 14759  00785E  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14760  007864  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14761  00786A  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14762  007870  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14763  007876  0E02               	movlw	2
 14764  007878                     u18625:
 14765  007878  90D8               	bcf	status,0,c
 14766  00787A  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14767  00787C  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14768  00787E  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14769  007880  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14770  007882  2EE8               	decfsz	wreg,f,c
 14771  007884  D7F9               	goto	u18625
 14772  007886                     L18:
 14773  007886  5164               	movf	aCaptRstFlt@sel& (0+255),w,b
 14774  007888  0D04               	mullw	4
 14775  00788A  0E73               	movlw	low _resultTbl
 14776  00788C  24F3               	addwf	243,w,c
 14777  00788E  6ED9               	movwf	fsr2l,c
 14778  007890  0E02               	movlw	high _resultTbl
 14779  007892  20F4               	addwfc	prodh,w,c
 14780  007894  6EDA               	movwf	fsr2h,c
 14781  007896  0060  F583  FFDE   	movff	??_aCaptRstFlt,postinc2
 14782  00789C  0060  F587  FFDE   	movff	??_aCaptRstFlt+1,postinc2
 14783  0078A2  0060  F58B  FFDE   	movff	??_aCaptRstFlt+2,postinc2
 14784  0078A8  0060  F58F  FFDE   	movff	??_aCaptRstFlt+3,postinc2
 14785                           
 14786                           ;aCapture.c: 150:             break;
 14787  0078AE  D024               	goto	l1969
 14788  0078B0                     l1973:
 14789                           
 14790                           ; BSR set to: 1
 14791                           ;aCapture.c: 153:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",103);
 14792  0078B0  94BA               	bcf	186,2,c	;volatile
 14793  0078B2  96BC               	bcf	188,3,c	;volatile
 14794  0078B4  96BA               	bcf	186,3,c	;volatile
 14795                           
 14796                           ; BSR set to: 1
 14797  0078B6  0EB1               	movlw	low STR_28
 14798  0078B8  6F46               	movwf	printf@fmt& (0+255),b
 14799  0078BA  0EFF               	movlw	high STR_28
 14800  0078BC  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14801  0078BE  0E00               	movlw	0
 14802  0078C0  6F49               	movwf	(?_printf+3)& (0+255),b
 14803  0078C2  0E67               	movlw	103
 14804  0078C4  6F48               	movwf	(?_printf+2)& (0+255),b
 14805  0078C6  ECE9  F04E         	call	_printf	;wreg free
 14806                           
 14807                           ;aCapture.c: 154:     }
 14808  0078CA  D016               	goto	l1969
 14809  0078CC                     l18103:
 14810  0078CC  0101               	movlb	1	; () banked
 14811  0078CE  5164               	movf	aCaptRstFlt@sel& (0+255),w,b
 14812  0078D0  6F60               	movwf	??_aCaptRstFlt& (0+255),b
 14813  0078D2  6B61               	clrf	(??_aCaptRstFlt+1)& (0+255),b
 14814                           
 14815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14816                           ; Switch size 1, requested type "simple"
 14817                           ; Number of cases is 1, Range of values is 0 to 0
 14818                           ; switch strategies available:
 14819                           ; Name         Instructions Cycles
 14820                           ; simple_byte            4     3 (average)
 14821                           ;	Chosen strategy is simple_byte
 14822  0078D4  5161               	movf	(??_aCaptRstFlt+1)& (0+255),w,b
 14823  0078D6  0A00               	xorlw	0	; case 0
 14824  0078D8  A4D8               	btfss	status,2,c
 14825  0078DA  D7EA               	goto	l1973
 14826                           
 14827                           ; BSR set to: 1
 14828                           ; Switch size 1, requested type "simple"
 14829                           ; Number of cases is 4, Range of values is 3 to 6
 14830                           ; switch strategies available:
 14831                           ; Name         Instructions Cycles
 14832                           ; simple_byte           13     7 (average)
 14833                           ;	Chosen strategy is simple_byte
 14834  0078DC  5160               	movf	??_aCaptRstFlt& (0+255),w,b
 14835  0078DE  0A03               	xorlw	3	; case 3
 14836  0078E0  B4D8               	btfsc	status,2,c
 14837  0078E2  D7BD               	goto	l18099
 14838  0078E4  0A07               	xorlw	7	; case 4
 14839  0078E6  B4D8               	btfsc	status,2,c
 14840  0078E8  D7A5               	goto	l18097
 14841  0078EA  0A01               	xorlw	1	; case 5
 14842  0078EC  B4D8               	btfsc	status,2,c
 14843  0078EE  D78D               	goto	l18095
 14844  0078F0  0A03               	xorlw	3	; case 6
 14845  0078F2  B4D8               	btfsc	status,2,c
 14846  0078F4  D775               	goto	l18093
 14847  0078F6  D7DC               	goto	l1973
 14848  0078F8                     l1969:
 14849                           
 14850                           ;aCapture.c: 155:             PIE1bits.ADTIE = 1;
 14851  0078F8  0139               	movlb	57	; () banked
 14852  0078FA  8791               	bsf	145,3,b	;volatile
 14853                           
 14854                           ; BSR set to: 57
 14855  0078FC  0012               	return		;funcret
 14856  0078FE                     __end_of_aCaptRstFlt:
 14857                           	opt callstack 0
 14858                           
 14859 ;; *************** function _keyReadInit *****************
 14860 ;; Defined at:
 14861 ;;		line 29 in file "keyRead.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;		None
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;		None
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  1    wreg      void 
 14868 ;; Registers used:
 14869 ;;		wreg, status,2
 14870 ;; Tracked objects:
 14871 ;;		On entry : 3F/0
 14872 ;;		On exit  : 3F/0
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14879 ;;Total ram usage:        0 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; Hardware stack levels required when called:   17
 14882 ;; This function calls:
 14883 ;;		Nothing
 14884 ;; This function is called by:
 14885 ;;		_main
 14886 ;;		_SelfTest
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           	psect	text26
 14891  00A294                     __ptext26:
 14892                           	opt callstack 0
 14893  00A294                     _keyReadInit:
 14894                           	opt callstack 13
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;keyRead.c: 30:     pressMills = 0;
 14898                           
 14899                           ; BSR set to: 57
 14900                           ;incstack = 0
 14901  00A294  0E00               	movlw	0
 14902  00A296  0102               	movlb	2	; () banked
 14903  00A298  6F3B               	movwf	(_pressMills+1)& (0+255),b
 14904  00A29A  0E00               	movlw	0
 14905  00A29C  6F3A               	movwf	_pressMills& (0+255),b
 14906                           
 14907                           ; BSR set to: 2
 14908                           ;keyRead.c: 31:     lastkey = -1;
 14909  00A29E  0100               	movlb	0	; () banked
 14910  00A2A0  69CB               	setf	_lastkey& (0+255),b
 14911                           
 14912                           ; BSR set to: 0
 14913                           ;keyRead.c: 32:     lastkeyEC = -1;
 14914  00A2A2  69CA               	setf	_lastkeyEC& (0+255),b
 14915                           
 14916                           ; BSR set to: 0
 14917                           ;keyRead.c: 33:     keyFilter = -1;
 14918  00A2A4  69C9               	setf	_keyFilter& (0+255),b
 14919                           
 14920                           ; BSR set to: 0
 14921  00A2A6  0012               	return		;funcret
 14922  00A2A8                     __end_of_keyReadInit:
 14923                           	opt callstack 0
 14924                           
 14925 ;; *************** function _keyReadEC *****************
 14926 ;; Defined at:
 14927 ;;		line 52 in file "keyRead.c"
 14928 ;; Parameters:    Size  Location     Type
 14929 ;;		None
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  longPress       1   59[BANK0 ] _Bool 
 14932 ;;  ch              1   61[BANK0 ] char 
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  1    wreg      char 
 14935 ;; Registers used:
 14936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14937 ;; Tracked objects:
 14938 ;;		On entry : 3C/1
 14939 ;;		On exit  : 3F/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14943 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14945 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;Total ram usage:        3 bytes
 14947 ;; Hardware stack levels used:    1
 14948 ;; Hardware stack levels required when called:   19
 14949 ;; This function calls:
 14950 ;;		_keyPeek
 14951 ;;		_timeDiff
 14952 ;;		_timeGet
 14953 ;; This function is called by:
 14954 ;;		_main
 14955 ;;		_SelfTest
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text27
 14960  00856A                     __ptext27:
 14961                           	opt callstack 0
 14962  00856A                     _keyReadEC:
 14963                           	opt callstack 11
 14964                           
 14965                           ;keyRead.c: 53:     int8_t ch = keyPeek();
 14966                           
 14967                           ; BSR set to: 0
 14968                           ;incstack = 0
 14969  00856A  EC96  F046         	call	_keyPeek	;wreg free
 14970  00856E  6F9D               	movwf	keyReadEC@ch& (0+255),b
 14971                           
 14972                           ; BSR set to: 0
 14973                           ;keyRead.c: 54:     if (lastkeyEC == -1) {
 14974  008570  29CA               	incf	_lastkeyEC& (0+255),w,b
 14975  008572  A4D8               	btfss	status,2,c
 14976  008574  D00C               	goto	l18747
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;keyRead.c: 55:         lastkeyEC = ch;
 14980  008576  0060  F274  F0CA   	movff	keyReadEC@ch,_lastkeyEC
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;keyRead.c: 56:         pressMills = timeGet();
 14984  00857C  EC7B  F051         	call	_timeGet	;wreg free
 14985  008580  0060  F24C  F23A   	movff	?_timeGet,_pressMills
 14986  008586  0060  F250  F23B   	movff	?_timeGet+1,_pressMills+1
 14987                           
 14988                           ;keyRead.c: 57:     } else if ((ch != -1) && (ch == lastkeyEC)) {
 14989  00858C  D030               	goto	l18765
 14990  00858E                     l18747:
 14991                           
 14992                           ; BSR set to: 0
 14993  00858E  299D               	incf	keyReadEC@ch& (0+255),w,b
 14994  008590  B4D8               	btfsc	status,2,c
 14995  008592  D02A               	goto	l18761
 14996                           
 14997                           ; BSR set to: 0
 14998  008594  51CA               	movf	_lastkeyEC& (0+255),w,b
 14999  008596  199D               	xorwf	keyReadEC@ch& (0+255),w,b
 15000  008598  A4D8               	btfss	status,2,c
 15001  00859A  D026               	goto	l18761
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;keyRead.c: 58:         _Bool longPress = 2000 && (timeDiff(pressMills,timeGet())>2000);
 15005  00859C  0E00               	movlw	0
 15006  00859E  6F9C               	movwf	_keyReadEC$4077& (0+255),b
 15007                           
 15008                           ; BSR set to: 0
 15009  0085A0  0060  F8E8  F095   	movff	_pressMills,timeDiff@startT
 15010  0085A6  0060  F8EC  F096   	movff	_pressMills+1,timeDiff@startT+1
 15011  0085AC  EC7B  F051         	call	_timeGet	;wreg free
 15012  0085B0  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
 15013  0085B6  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
 15014  0085BC  EC0D  F04D         	call	_timeDiff	;wreg free
 15015  0085C0  0ED1               	movlw	209
 15016  0085C2  5D95               	subwf	?_timeDiff& (0+255),w,b
 15017  0085C4  0E07               	movlw	7
 15018  0085C6  5996               	subwfb	(?_timeDiff+1)& (0+255),w,b
 15019  0085C8  A0D8               	btfss	status,0,c
 15020  0085CA  D002               	goto	l2082
 15021                           
 15022                           ; BSR set to: 0
 15023  0085CC  0E01               	movlw	1
 15024  0085CE  6F9C               	movwf	_keyReadEC$4077& (0+255),b
 15025  0085D0                     l2082:
 15026                           
 15027                           ; BSR set to: 0
 15028  0085D0  519C               	movf	_keyReadEC$4077& (0+255),w,b
 15029  0085D2  B4D8               	btfsc	status,2,c
 15030  0085D4  D002               	goto	u19410
 15031  0085D6  0E01               	movlw	1
 15032  0085D8  D001               	goto	u19420
 15033  0085DA                     u19410:
 15034  0085DA  0E00               	movlw	0
 15035  0085DC                     u19420:
 15036  0085DC  6F9B               	movwf	keyReadEC@longPress& (0+255),b
 15037                           
 15038                           ;keyRead.c: 59:         if (longPress) {
 15039  0085DE  519B               	movf	keyReadEC@longPress& (0+255),w,b
 15040  0085E0  B4D8               	btfsc	status,2,c
 15041  0085E2  D005               	goto	l18765
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;keyRead.c: 60:             return -100;
 15045  0085E4  0E9C               	movlw	156
 15046  0085E6  0012               	return	
 15047  0085E8                     l18761:
 15048                           
 15049                           ; BSR set to: 0
 15050  0085E8  299D               	incf	keyReadEC@ch& (0+255),w,b
 15051  0085EA  B4D8               	btfsc	status,2,c
 15052                           
 15053                           ; BSR set to: 0
 15054                           ;keyRead.c: 63:         lastkeyEC = -1;
 15055  0085EC  69CA               	setf	_lastkeyEC& (0+255),b
 15056  0085EE                     l18765:
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;keyRead.c: 65:     return -1;
 15060  0085EE  0EFF               	movlw	255
 15061                           
 15062                           ; BSR set to: 0
 15063  0085F0  0012               	return		;funcret
 15064  0085F2                     __end_of_keyReadEC:
 15065                           	opt callstack 0
 15066                           
 15067 ;; *************** function _timeDiff *****************
 15068 ;; Defined at:
 15069 ;;		line 18 in file "time.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;  startT          2   53[BANK0 ] unsigned short 
 15072 ;;  endT            2   55[BANK0 ] unsigned short 
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  intDur          2   57[BANK0 ] unsigned short 
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  2   53[BANK0 ] unsigned short 
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, status,0
 15079 ;; Tracked objects:
 15080 ;;		On entry : 3E/0
 15081 ;;		On exit  : 3F/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15084 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15087 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15088 ;;Total ram usage:        6 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:   17
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_main
 15095 ;;		_keyReadEC
 15096 ;; This function uses a non-reentrant model
 15097 ;;
 15098                           
 15099                           	psect	text28
 15100  009A1A                     __ptext28:
 15101                           	opt callstack 0
 15102  009A1A                     _timeDiff:
 15103                           	opt callstack 13
 15104                           
 15105                           ;time.c: 19:     time_t intDur;;time.c: 21:     intDur = endT - startT;
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;incstack = 0
 15109  009A1A  0100               	movlb	0	; () banked
 15110  009A1C  5195               	movf	timeDiff@startT& (0+255),w,b
 15111  009A1E  5D97               	subwf	timeDiff@endT& (0+255),w,b
 15112  009A20  6F99               	movwf	timeDiff@intDur& (0+255),b
 15113  009A22  5196               	movf	(timeDiff@startT+1)& (0+255),w,b
 15114  009A24  5998               	subwfb	(timeDiff@endT+1)& (0+255),w,b
 15115  009A26  6F9A               	movwf	(timeDiff@intDur+1)& (0+255),b
 15116                           
 15117                           ;time.c: 22:     if (intDur>0x8000){
 15118  009A28  0599               	decf	timeDiff@intDur& (0+255),w,b
 15119  009A2A  0E80               	movlw	128
 15120  009A2C  599A               	subwfb	(timeDiff@intDur+1)& (0+255),w,b
 15121  009A2E  A0D8               	btfss	status,0,c
 15122  009A30  D006               	goto	l18085
 15123                           
 15124                           ; BSR set to: 0
 15125                           ;time.c: 24:         intDur = startT-endT;
 15126  009A32  5197               	movf	timeDiff@endT& (0+255),w,b
 15127  009A34  5D95               	subwf	timeDiff@startT& (0+255),w,b
 15128  009A36  6F99               	movwf	timeDiff@intDur& (0+255),b
 15129  009A38  5198               	movf	(timeDiff@endT+1)& (0+255),w,b
 15130  009A3A  5996               	subwfb	(timeDiff@startT+1)& (0+255),w,b
 15131  009A3C  6F9A               	movwf	(timeDiff@intDur+1)& (0+255),b
 15132  009A3E                     l18085:
 15133                           
 15134                           ; BSR set to: 0
 15135                           ;time.c: 26:     return intDur;
 15136  009A3E  0060  F264  F095   	movff	timeDiff@intDur,?_timeDiff
 15137  009A44  0060  F268  F096   	movff	timeDiff@intDur+1,?_timeDiff+1
 15138                           
 15139                           ; BSR set to: 0
 15140  009A4A  0012               	return		;funcret
 15141  009A4C                     __end_of_timeDiff:
 15142                           	opt callstack 0
 15143                           
 15144 ;; *************** function _flowChk *****************
 15145 ;; Defined at:
 15146 ;;		line 109 in file "selftest.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;  flowVal         1    wreg     enum E17018
 15149 ;; Auto vars:     Size  Location     Type
 15150 ;;  flowVal         1  117[BANK1 ] enum E17018
 15151 ;;  aPVal           2  131[BANK1 ] short 
 15152 ;;  minFlowL        2  128[BANK1 ] short 
 15153 ;;  aPValMax        2  126[BANK1 ] short 
 15154 ;;  tstamp          2  124[BANK1 ] unsigned short 
 15155 ;;  aPValMin        2  122[BANK1 ] short 
 15156 ;;  maxFlowL        2  120[BANK1 ] short 
 15157 ;;  aPValMean       2  118[BANK1 ] short 
 15158 ;;  initOk          1  130[BANK1 ] _Bool 
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1    wreg      _Bool 
 15161 ;; Registers used:
 15162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15163 ;; Tracked objects:
 15164 ;;		On entry : 3C/0
 15165 ;;		On exit  : 3F/1
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15171 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15172 ;;Total ram usage:       18 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; Hardware stack levels required when called:   32
 15175 ;; This function calls:
 15176 ;;		_MonitorMsgSendBlock
 15177 ;;		___flge
 15178 ;;		___lldiv
 15179 ;;		___lmul
 15180 ;;		___xxtofl
 15181 ;;		_aCaptGetResult
 15182 ;;		_aCaptureOffGet
 15183 ;;		_printf
 15184 ;;		_printstrblock
 15185 ;;		_setCursor
 15186 ;;		_sprintf
 15187 ;;		_timeDelayMs
 15188 ;;		_timeElapsedR
 15189 ;;		_timeGet
 15190 ;;		_vMeasureGet
 15191 ;;		_vMeasureRst
 15192 ;; This function is called by:
 15193 ;;		_SelfTest
 15194 ;; This function uses a non-reentrant model
 15195 ;;
 15196                           
 15197                           	psect	text29
 15198  005210                     __ptext29:
 15199                           	opt callstack 0
 15200  005210                     _flowChk:
 15201                           	opt callstack 0
 15202                           
 15203                           ; BSR set to: 0
 15204                           ;incstack = 0
 15205 ;; hardware stack exceeded
 15206                           ;flowChk@flowVal stored from wreg
 15207  005210  0101               	movlb	1	; () banked
 15208  005212  6F75               	movwf	flowChk@flowVal& (0+255),b
 15209                           
 15210                           ;selftest.c: 110:   int16_t aPVal, aPValMax, aPValMin, aPValMean;;selftest.c: 111:   int
      +                          16_t minFlowL, maxFlowL;;selftest.c: 112:   _Bool initOk;;selftest.c: 113:   time_t tsta
      +                          mp;;selftest.c: 115:   initOk = 1;
 15211  005214  0E01               	movlw	1
 15212  005216  0101               	movlb	1	; () banked
 15213  005218  6F82               	movwf	flowChk@initOk& (0+255),b
 15214                           
 15215                           ; BSR set to: 1
 15216                           ;selftest.c: 118:   setCursor(0, 0);
 15217  00521A  0E00               	movlw	0
 15218  00521C  0100               	movlb	0	; () banked
 15219  00521E  6F92               	movwf	setCursor@row& (0+255),b
 15220  005220  0E00               	movlw	0
 15221  005222  EC55  F04B         	call	_setCursor
 15222                           
 15223                           ;selftest.c: 119:   printstrblock("FLOW RATE        ");
 15224  005226  0E7B               	movlw	low STR_69
 15225  005228  0100               	movlb	0	; () banked
 15226  00522A  6F8F               	movwf	printstrblock@c& (0+255),b
 15227  00522C  0EFD               	movlw	high STR_69
 15228  00522E  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15229  005230  EC4E  F04F         	call	_printstrblock	;wreg free
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;selftest.c: 120:   aPValMin = 4096;
 15233  005234  0E10               	movlw	16
 15234  005236  0101               	movlb	1	; () banked
 15235  005238  6F7B               	movwf	(flowChk@aPValMin+1)& (0+255),b
 15236  00523A  0E00               	movlw	0
 15237  00523C  6F7A               	movwf	flowChk@aPValMin& (0+255),b
 15238                           
 15239                           ; BSR set to: 1
 15240                           ;selftest.c: 121:   aPValMax = 0;
 15241  00523E  0E00               	movlw	0
 15242  005240  6F7F               	movwf	(flowChk@aPValMax+1)& (0+255),b
 15243  005242  0E00               	movlw	0
 15244  005244  6F7E               	movwf	flowChk@aPValMax& (0+255),b
 15245                           
 15246                           ; BSR set to: 1
 15247                           ;selftest.c: 123:   if (!MonitorMsgSendBlock(MONSTATE_CALF)){
 15248  005246  0EA0               	movlw	160
 15249  005248  EC61  F04F         	call	_MonitorMsgSendBlock
 15250  00524C  0900               	iorlw	0
 15251  00524E  A4D8               	btfss	status,2,c
 15252  005250  D02F               	goto	l19075
 15253                           
 15254                           ; BSR set to: 1
 15255                           ;selftest.c: 124:     initOk=0;
 15256  005252  0E00               	movlw	0
 15257  005254  6F82               	movwf	flowChk@initOk& (0+255),b
 15258                           
 15259                           ; BSR set to: 1
 15260                           ;selftest.c: 125:     printf ("Mon error");
 15261  005256  0E80               	movlw	low STR_70
 15262  005258  6F46               	movwf	printf@fmt& (0+255),b
 15263  00525A  0EFF               	movlw	high STR_70
 15264  00525C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 15265  00525E  ECE9  F04E         	call	_printf	;wreg free
 15266                           
 15267                           ; BSR set to: 2
 15268                           ;selftest.c: 126:     setCursor(0, 0);
 15269  005262  0E00               	movlw	0
 15270  005264  0100               	movlb	0	; () banked
 15271  005266  6F92               	movwf	setCursor@row& (0+255),b
 15272  005268  0E00               	movlw	0
 15273  00526A  EC55  F04B         	call	_setCursor
 15274                           
 15275                           ;selftest.c: 127:     printstrblock("MONITOR ERROR");
 15276  00526E  0E15               	movlw	low STR_71
 15277  005270  0100               	movlb	0	; () banked
 15278  005272  6F8F               	movwf	printstrblock@c& (0+255),b
 15279  005274  0EFF               	movlw	high STR_71
 15280  005276  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15281  005278  EC4E  F04F         	call	_printstrblock	;wreg free
 15282                           
 15283                           ; BSR set to: 0
 15284                           ;selftest.c: 128:     timeDelayMs(500);
 15285  00527C  0E01               	movlw	1
 15286  00527E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15287  005280  0EF4               	movlw	244
 15288  005282  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15289  005284  EC8B  F04C         	call	_timeDelayMs	;wreg free
 15290  005288  D013               	goto	l19075
 15291  00528A                     l2818:
 15292                           
 15293                           ; BSR set to: 1
 15294                           ;selftest.c: 134:     LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
 15295  00528A  94BA               	bcf	186,2,c	;volatile
 15296  00528C  86BC               	bsf	188,3,c	;volatile
 15297                           
 15298                           ; BSR set to: 1
 15299                           ;selftest.c: 135:     minFlowL = 250;
 15300  00528E  0E00               	movlw	0
 15301  005290  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15302  005292  0EFA               	movlw	250
 15303  005294  D00B               	goto	L20
 15304  005296                     l2820:
 15305                           
 15306                           ; BSR set to: 1
 15307                           ;selftest.c: 138:     LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
 15308  005296  84BA               	bsf	186,2,c	;volatile
 15309  005298  96BC               	bcf	188,3,c	;volatile
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;selftest.c: 139:     minFlowL = 500;
 15313  00529A  0E01               	movlw	1
 15314  00529C  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15315  00529E  0EF4               	movlw	244
 15316  0052A0  D005               	goto	L20
 15317  0052A2                     l2821:
 15318                           
 15319                           ; BSR set to: 1
 15320                           ;selftest.c: 142:     LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
 15321  0052A2  84BA               	bsf	186,2,c	;volatile
 15322  0052A4  86BC               	bsf	188,3,c	;volatile
 15323                           
 15324                           ; BSR set to: 1
 15325                           ;selftest.c: 143:     minFlowL = 600;
 15326  0052A6  0E02               	movlw	2
 15327  0052A8  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15328  0052AA  0E58               	movlw	88
 15329  0052AC                     L20:
 15330  0052AC  6F80               	movwf	flowChk@minFlowL& (0+255),b
 15331                           
 15332                           ;selftest.c: 144:     break;
 15333  0052AE  D012               	goto	l19077
 15334  0052B0                     l19075:
 15335  0052B0  0101               	movlb	1	; () banked
 15336  0052B2  5175               	movf	flowChk@flowVal& (0+255),w,b
 15337  0052B4  6F73               	movwf	??_flowChk& (0+255),b
 15338  0052B6  6B74               	clrf	(??_flowChk+1)& (0+255),b
 15339                           
 15340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15341                           ; Switch size 1, requested type "simple"
 15342                           ; Number of cases is 1, Range of values is 0 to 0
 15343                           ; switch strategies available:
 15344                           ; Name         Instructions Cycles
 15345                           ; simple_byte            4     3 (average)
 15346                           ;	Chosen strategy is simple_byte
 15347  0052B8  5174               	movf	(??_flowChk+1)& (0+255),w,b
 15348  0052BA  0A00               	xorlw	0	; case 0
 15349  0052BC  A4D8               	btfss	status,2,c
 15350  0052BE  D00A               	goto	l19077
 15351                           
 15352                           ; BSR set to: 1
 15353                           ; Switch size 1, requested type "simple"
 15354                           ; Number of cases is 3, Range of values is 0 to 2
 15355                           ; switch strategies available:
 15356                           ; Name         Instructions Cycles
 15357                           ; simple_byte           10     6 (average)
 15358                           ;	Chosen strategy is simple_byte
 15359  0052C0  5173               	movf	??_flowChk& (0+255),w,b
 15360  0052C2  0A00               	xorlw	0	; case 0
 15361  0052C4  B4D8               	btfsc	status,2,c
 15362  0052C6  D7E1               	goto	l2818
 15363  0052C8  0A01               	xorlw	1	; case 1
 15364  0052CA  B4D8               	btfsc	status,2,c
 15365  0052CC  D7E4               	goto	l2820
 15366  0052CE  0A03               	xorlw	3	; case 2
 15367  0052D0  B4D8               	btfsc	status,2,c
 15368  0052D2  D7E7               	goto	l2821
 15369  0052D4                     l19077:
 15370                           
 15371                           ; BSR set to: 1
 15372                           ;selftest.c: 146:   maxFlowL = 2*minFlowL;
 15373  0052D4  90D8               	bcf	status,0,c
 15374  0052D6  3580               	rlcf	flowChk@minFlowL& (0+255),w,b
 15375  0052D8  6F78               	movwf	flowChk@maxFlowL& (0+255),b
 15376  0052DA  3581               	rlcf	(flowChk@minFlowL+1)& (0+255),w,b
 15377  0052DC  6F79               	movwf	(flowChk@maxFlowL+1)& (0+255),b
 15378                           
 15379                           ; BSR set to: 1
 15380                           ;selftest.c: 147:   LATAbits.LATA3 = 1;
 15381  0052DE  86BA               	bsf	186,3,c	;volatile
 15382                           
 15383                           ; BSR set to: 1
 15384                           ;selftest.c: 149:   timeDelayMs(250);
 15385  0052E0  0E00               	movlw	0
 15386  0052E2  0100               	movlb	0	; () banked
 15387  0052E4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15388  0052E6  0EFA               	movlw	250
 15389  0052E8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15390  0052EA  EC8B  F04C         	call	_timeDelayMs	;wreg free
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;selftest.c: 150:   vMeasureRst();
 15394  0052EE  ECD5  F050         	call	_vMeasureRst	;wreg free
 15395                           
 15396                           ; BSR set to: 57
 15397                           ;selftest.c: 151:   tstamp = timeGet();
 15398  0052F2  EC7B  F051         	call	_timeGet	;wreg free
 15399  0052F6  0060  F24C  F17C   	movff	?_timeGet,flowChk@tstamp
 15400  0052FC  0060  F250  F17D   	movff	?_timeGet+1,flowChk@tstamp+1
 15401                           
 15402                           ;selftest.c: 152:   while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 15403  005302  D029               	goto	l19097
 15404  005304                     l19087:
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;selftest.c: 153:     aCaptGetResult(VolPSensor, &aPVal);
 15408  005304  0E83               	movlw	low flowChk@aPVal
 15409  005306  0101               	movlb	1	; () banked
 15410  005308  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 15411  00530A  0E01               	movlw	high flowChk@aPVal
 15412  00530C  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 15413  00530E  0E01               	movlw	1
 15414  005310  EC04  F032         	call	_aCaptGetResult
 15415                           
 15416                           ;selftest.c: 154:     if (aPVal > aPValMax) {
 15417  005314  0101               	movlb	1	; () banked
 15418  005316  5183               	movf	flowChk@aPVal& (0+255),w,b
 15419  005318  5D7E               	subwf	flowChk@aPValMax& (0+255),w,b
 15420  00531A  517F               	movf	(flowChk@aPValMax+1)& (0+255),w,b
 15421  00531C  0A80               	xorlw	128
 15422  00531E  6F73               	movwf	??_flowChk& (0+255),b
 15423  005320  5184               	movf	(flowChk@aPVal+1)& (0+255),w,b
 15424  005322  0A80               	xorlw	128
 15425  005324  5973               	subwfb	??_flowChk& (0+255),w,b
 15426  005326  B0D8               	btfsc	status,0,c
 15427  005328  D006               	goto	l19093
 15428                           
 15429                           ; BSR set to: 1
 15430                           ;selftest.c: 155:       aPValMax = aPVal;
 15431  00532A  0060  F60C  F17E   	movff	flowChk@aPVal,flowChk@aPValMax
 15432  005330  0060  F610  F17F   	movff	flowChk@aPVal+1,flowChk@aPValMax+1
 15433  005336                     l19093:
 15434                           
 15435                           ; BSR set to: 1
 15436                           ;selftest.c: 157:     if (aPVal < aPValMin) {
 15437  005336  517A               	movf	flowChk@aPValMin& (0+255),w,b
 15438  005338  5D83               	subwf	flowChk@aPVal& (0+255),w,b
 15439  00533A  5184               	movf	(flowChk@aPVal+1)& (0+255),w,b
 15440  00533C  0A80               	xorlw	128
 15441  00533E  6F73               	movwf	??_flowChk& (0+255),b
 15442  005340  517B               	movf	(flowChk@aPValMin+1)& (0+255),w,b
 15443  005342  0A80               	xorlw	128
 15444  005344  5973               	subwfb	??_flowChk& (0+255),w,b
 15445  005346  B0D8               	btfsc	status,0,c
 15446  005348  D006               	goto	l19097
 15447                           
 15448                           ; BSR set to: 1
 15449                           ;selftest.c: 158:       aPValMin = aPVal;
 15450  00534A  0060  F60C  F17A   	movff	flowChk@aPVal,flowChk@aPValMin
 15451  005350  0060  F610  F17B   	movff	flowChk@aPVal+1,flowChk@aPValMin+1
 15452  005356                     l19097:
 15453                           
 15454                           ;selftest.c: 152:   while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 15455  005356  0E7C               	movlw	low flowChk@tstamp
 15456  005358  0100               	movlb	0	; () banked
 15457  00535A  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 15458  00535C  0E01               	movlw	high flowChk@tstamp
 15459  00535E  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 15460  005360  0E00               	movlw	0
 15461  005362  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 15462  005364  0EFA               	movlw	250
 15463  005366  6F95               	movwf	timeElapsedR@duration& (0+255),b
 15464  005368  EC66  F046         	call	_timeElapsedR	;wreg free
 15465  00536C  0900               	iorlw	0
 15466  00536E  B4D8               	btfsc	status,2,c
 15467  005370  D7C9               	goto	l19087
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;selftest.c: 162:   freeFlowRateL = vMeasureGet()<<2;
 15471  005372  EC7F  F047         	call	_vMeasureGet	;wreg free
 15472  005376  90D8               	bcf	status,0,c
 15473  005378  37A4               	rlcf	?_vMeasureGet& (0+255),f,b
 15474  00537A  37A5               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 15475  00537C  90D8               	bcf	status,0,c
 15476  00537E  37A4               	rlcf	?_vMeasureGet& (0+255),f,b
 15477  005380  37A5               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 15478  005382  0060  F290  F234   	movff	?_vMeasureGet,_freeFlowRateL
 15479  005388  0060  F294  F235   	movff	?_vMeasureGet+1,_freeFlowRateL+1
 15480                           
 15481                           ; BSR set to: 0
 15482                           ;selftest.c: 163:   if (!MonitorMsgSendBlock(MONSTATE_STOP)){
 15483  00538E  0E00               	movlw	0
 15484  005390  EC61  F04F         	call	_MonitorMsgSendBlock
 15485  005394  0900               	iorlw	0
 15486  005396  A4D8               	btfss	status,2,c
 15487  005398  D01B               	goto	l19113
 15488                           
 15489                           ; BSR set to: 1
 15490                           ;selftest.c: 164:     initOk=0;
 15491  00539A  0E00               	movlw	0
 15492  00539C  6F82               	movwf	flowChk@initOk& (0+255),b
 15493                           
 15494                           ; BSR set to: 1
 15495                           ;selftest.c: 165:     printf ("Mon error");
 15496  00539E  0E80               	movlw	low STR_70
 15497  0053A0  6F46               	movwf	printf@fmt& (0+255),b
 15498  0053A2  0EFF               	movlw	high STR_70
 15499  0053A4  6F47               	movwf	(printf@fmt+1)& (0+255),b
 15500  0053A6  ECE9  F04E         	call	_printf	;wreg free
 15501                           
 15502                           ; BSR set to: 2
 15503                           ;selftest.c: 166:     setCursor(0, 0);
 15504  0053AA  0E00               	movlw	0
 15505  0053AC  0100               	movlb	0	; () banked
 15506  0053AE  6F92               	movwf	setCursor@row& (0+255),b
 15507  0053B0  0E00               	movlw	0
 15508  0053B2  EC55  F04B         	call	_setCursor
 15509                           
 15510                           ;selftest.c: 167:     printstrblock("MONITOR ERROR");
 15511  0053B6  0E15               	movlw	low STR_71
 15512  0053B8  0100               	movlb	0	; () banked
 15513  0053BA  6F8F               	movwf	printstrblock@c& (0+255),b
 15514  0053BC  0EFF               	movlw	high STR_71
 15515  0053BE  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15516  0053C0  EC4E  F04F         	call	_printstrblock	;wreg free
 15517                           
 15518                           ; BSR set to: 0
 15519                           ;selftest.c: 168:     timeDelayMs(500);
 15520  0053C4  0E01               	movlw	1
 15521  0053C6  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15522  0053C8  0EF4               	movlw	244
 15523  0053CA  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15524  0053CC  EC8B  F04C         	call	_timeDelayMs	;wreg free
 15525  0053D0                     l19113:
 15526                           
 15527                           ;selftest.c: 170:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 15528  0053D0  94BA               	bcf	186,2,c	;volatile
 15529  0053D2  96BC               	bcf	188,3,c	;volatile
 15530                           
 15531                           ;selftest.c: 171:   LATAbits.LATA3 = 0;
 15532  0053D4  96BA               	bcf	186,3,c	;volatile
 15533                           
 15534                           ;selftest.c: 173:   aPValMean=aCaptureOffGet(VolPSensor);
 15535  0053D6  0E01               	movlw	1
 15536  0053D8  ECA2  F049         	call	_aCaptureOffGet
 15537  0053DC  0060  F580  F176   	movff	?_aCaptureOffGet,flowChk@aPValMean
 15538  0053E2  0060  F584  F177   	movff	?_aCaptureOffGet+1,flowChk@aPValMean+1
 15539                           
 15540                           ;selftest.c: 175:   if ((aPValMean + aPValMax)>= (0.95*8192)) {
 15541  0053E8  0101               	movlb	1	; () banked
 15542  0053EA  517E               	movf	flowChk@aPValMax& (0+255),w,b
 15543  0053EC  2576               	addwf	flowChk@aPValMean& (0+255),w,b
 15544  0053EE  6F73               	movwf	??_flowChk& (0+255),b
 15545  0053F0  517F               	movf	(flowChk@aPValMax+1)& (0+255),w,b
 15546  0053F2  2177               	addwfc	(flowChk@aPValMean+1)& (0+255),w,b
 15547  0053F4  6F74               	movwf	(??_flowChk+1)& (0+255),b
 15548  0053F6  0060  F5CC  F08B   	movff	??_flowChk,___xxtofl@val
 15549  0053FC  0060  F5D0  F08C   	movff	??_flowChk+1,___xxtofl@val+1
 15550  005402  0100               	movlb	0	; () banked
 15551  005404  0E00               	movlw	0
 15552  005406  BF8C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15553  005408  0EFF               	movlw	-1
 15554  00540A  6F8D               	movwf	(___xxtofl@val+2)& (0+255),b
 15555  00540C  6F8E               	movwf	(___xxtofl@val+3)& (0+255),b
 15556  00540E  0E01               	movlw	1
 15557  005410  EC1C  F038         	call	___xxtofl
 15558  005414  0060  F22C  F099   	movff	?___xxtofl,___flge@ff1
 15559  00541A  0060  F230  F09A   	movff	?___xxtofl+1,___flge@ff1+1
 15560  005420  0060  F234  F09B   	movff	?___xxtofl+2,___flge@ff1+2
 15561  005426  0060  F238  F09C   	movff	?___xxtofl+3,___flge@ff1+3
 15562  00542C  0E33               	movlw	51
 15563  00542E  6F9D               	movwf	___flge@ff2& (0+255),b
 15564  005430  0E33               	movlw	51
 15565  005432  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
 15566  005434  0EF3               	movlw	243
 15567  005436  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
 15568  005438  0E45               	movlw	69
 15569  00543A  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
 15570  00543C  ECDF  F03D         	call	___flge	;wreg free
 15571  005440  A0D8               	btfss	status,0,c
 15572  005442  D016               	goto	l19131
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;selftest.c: 177:     setCursor(0, 0);
 15576  005444  0E00               	movlw	0
 15577  005446  6F92               	movwf	setCursor@row& (0+255),b
 15578  005448  0E00               	movlw	0
 15579  00544A  EC55  F04B         	call	_setCursor
 15580                           
 15581                           ;selftest.c: 178:     printstrblock("FLOW TOO HIGH   ");
 15582  00544E  0E06               	movlw	low STR_74
 15583  005450  0100               	movlb	0	; () banked
 15584  005452  6F8F               	movwf	printstrblock@c& (0+255),b
 15585  005454  0EFE               	movlw	high STR_74
 15586  005456  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15587  005458  EC4E  F04F         	call	_printstrblock	;wreg free
 15588  00545C                     l19127:
 15589                           
 15590                           ; BSR set to: 0
 15591                           ;selftest.c: 179:     timeDelayMs(1000);
 15592  00545C  0E03               	movlw	3
 15593  00545E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15594  005460  0EE8               	movlw	232
 15595  005462  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15596  005464  EC8B  F04C         	call	_timeDelayMs	;wreg free
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;selftest.c: 180:     initOk = 0;
 15600  005468  0E00               	movlw	0
 15601  00546A  0101               	movlb	1	; () banked
 15602  00546C  6F82               	movwf	flowChk@initOk& (0+255),b
 15603                           
 15604                           ;selftest.c: 181:   } else {
 15605  00546E  D07C               	goto	l19159
 15606  005470                     l19131:
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;selftest.c: 182:     sprintf(lcdTopRow, "FLOW: % 3d L/min ", (int16_t) ((uint32_t) ((ui
      +                          nt32_t) 60 * freeFlowRateL) / 1000));
 15610  005470  0EA3               	movlw	low _lcdTopRow
 15611  005472  0101               	movlb	1	; () banked
 15612  005474  6F46               	movwf	sprintf@s& (0+255),b
 15613  005476  0E02               	movlw	high _lcdTopRow
 15614  005478  6F47               	movwf	(sprintf@s+1)& (0+255),b
 15615  00547A  0E9F               	movlw	low STR_75
 15616  00547C  6F48               	movwf	sprintf@fmt& (0+255),b
 15617  00547E  0EFD               	movlw	high STR_75
 15618  005480  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 15619  005482  0060  F8D0  F08B   	movff	_freeFlowRateL,___lmul@multiplier
 15620  005488  0060  F8D4  F08C   	movff	_freeFlowRateL+1,___lmul@multiplier+1
 15621  00548E  0100               	movlb	0	; () banked
 15622  005490  6B8D               	clrf	(___lmul@multiplier+2)& (0+255),b
 15623  005492  6B8E               	clrf	(___lmul@multiplier+3)& (0+255),b
 15624  005494  0E3C               	movlw	60
 15625  005496  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 15626  005498  0E00               	movlw	0
 15627  00549A  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15628  00549C  0E00               	movlw	0
 15629  00549E  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15630  0054A0  0E00               	movlw	0
 15631  0054A2  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15632  0054A4  ECC6  F046         	call	___lmul	;wreg free
 15633  0054A8  0060  F22C  F097   	movff	?___lmul,___lldiv@dividend
 15634  0054AE  0060  F230  F098   	movff	?___lmul+1,___lldiv@dividend+1
 15635  0054B4  0060  F234  F099   	movff	?___lmul+2,___lldiv@dividend+2
 15636  0054BA  0060  F238  F09A   	movff	?___lmul+3,___lldiv@dividend+3
 15637  0054C0  0EE8               	movlw	232
 15638  0054C2  6F9B               	movwf	___lldiv@divisor& (0+255),b
 15639  0054C4  0E03               	movlw	3
 15640  0054C6  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 15641  0054C8  0E00               	movlw	0
 15642  0054CA  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 15643  0054CC  0E00               	movlw	0
 15644  0054CE  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 15645  0054D0  EC70  F042         	call	___lldiv	;wreg free
 15646  0054D4  0060  F25C  F14A   	movff	?___lldiv,?_sprintf+4
 15647  0054DA  0060  F260  F14B   	movff	?___lldiv+1,?_sprintf+5
 15648  0054E0  ECD9  F047         	call	_sprintf	;wreg free
 15649                           
 15650                           ; BSR set to: 1
 15651                           ;selftest.c: 183:     setCursor(0, 0);
 15652  0054E4  0E00               	movlw	0
 15653  0054E6  0100               	movlb	0	; () banked
 15654  0054E8  6F92               	movwf	setCursor@row& (0+255),b
 15655  0054EA  0E00               	movlw	0
 15656  0054EC  EC55  F04B         	call	_setCursor
 15657                           
 15658                           ;selftest.c: 184:     printstrblock(lcdTopRow);
 15659  0054F0  0EA3               	movlw	low _lcdTopRow
 15660  0054F2  0100               	movlb	0	; () banked
 15661  0054F4  6F8F               	movwf	printstrblock@c& (0+255),b
 15662  0054F6  0E02               	movlw	high _lcdTopRow
 15663  0054F8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15664  0054FA  EC4E  F04F         	call	_printstrblock	;wreg free
 15665                           
 15666                           ; BSR set to: 0
 15667                           ;selftest.c: 185:     timeDelayMs(4000);
 15668  0054FE  0E0F               	movlw	15
 15669  005500  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15670  005502  0EA0               	movlw	160
 15671  005504  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15672  005506  EC8B  F04C         	call	_timeDelayMs	;wreg free
 15673                           
 15674                           ; BSR set to: 0
 15675                           ;selftest.c: 187:     if (freeFlowRateL < minFlowL) {
 15676  00550A  0101               	movlb	1	; () banked
 15677  00550C  5180               	movf	flowChk@minFlowL& (0+255),w,b
 15678  00550E  0102               	movlb	2	; () banked
 15679  005510  5D34               	subwf	_freeFlowRateL& (0+255),w,b
 15680  005512  0101               	movlb	1	; () banked
 15681  005514  5181               	movf	(flowChk@minFlowL+1)& (0+255),w,b
 15682  005516  0102               	movlb	2	; () banked
 15683  005518  5935               	subwfb	(_freeFlowRateL+1)& (0+255),w,b
 15684  00551A  B0D8               	btfsc	status,0,c
 15685  00551C  D00E               	goto	l19149
 15686                           
 15687                           ; BSR set to: 2
 15688                           ;selftest.c: 189:       setCursor(0, 0);
 15689  00551E  0E00               	movlw	0
 15690  005520  0100               	movlb	0	; () banked
 15691  005522  6F92               	movwf	setCursor@row& (0+255),b
 15692  005524  0E00               	movlw	0
 15693  005526  EC55  F04B         	call	_setCursor
 15694                           
 15695                           ;selftest.c: 190:       printstrblock("FLOW TOO LOW    ");
 15696  00552A  0EF5               	movlw	low STR_76
 15697  00552C  0100               	movlb	0	; () banked
 15698  00552E  6F8F               	movwf	printstrblock@c& (0+255),b
 15699  005530  0EFD               	movlw	high STR_76
 15700  005532  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15701  005534  EC4E  F04F         	call	_printstrblock	;wreg free
 15702  005538  D791               	goto	l19127
 15703  00553A                     l19149:
 15704                           
 15705                           ; BSR set to: 2
 15706  00553A  5134               	movf	_freeFlowRateL& (0+255),w,b
 15707  00553C  0101               	movlb	1	; () banked
 15708  00553E  5D78               	subwf	flowChk@maxFlowL& (0+255),w,b
 15709  005540  0102               	movlb	2	; () banked
 15710  005542  5135               	movf	(_freeFlowRateL+1)& (0+255),w,b
 15711  005544  0101               	movlb	1	; () banked
 15712  005546  5979               	subwfb	(flowChk@maxFlowL+1)& (0+255),w,b
 15713  005548  B0D8               	btfsc	status,0,c
 15714  00554A  D00E               	goto	l19159
 15715                           
 15716                           ; BSR set to: 1
 15717                           ;selftest.c: 195:       setCursor(0, 0);
 15718  00554C  0E00               	movlw	0
 15719  00554E  0100               	movlb	0	; () banked
 15720  005550  6F92               	movwf	setCursor@row& (0+255),b
 15721  005552  0E00               	movlw	0
 15722  005554  EC55  F04B         	call	_setCursor
 15723                           
 15724                           ;selftest.c: 196:       printstrblock("FLOW TOO HIGH   ");
 15725  005558  0E06               	movlw	low STR_74
 15726  00555A  0100               	movlb	0	; () banked
 15727  00555C  6F8F               	movwf	printstrblock@c& (0+255),b
 15728  00555E  0EFE               	movlw	high STR_74
 15729  005560  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15730  005562  EC4E  F04F         	call	_printstrblock	;wreg free
 15731  005566  D77A               	goto	l19127
 15732  005568                     l19159:
 15733                           
 15734                           ; BSR set to: 1
 15735                           ;selftest.c: 201:   return initOk;
 15736  005568  5182               	movf	flowChk@initOk& (0+255),w,b
 15737                           
 15738                           ; BSR set to: 1
 15739  00556A  0012               	return		;funcret
 15740  00556C                     __end_of_flowChk:
 15741                           	opt callstack 0
 15742                           
 15743 ;; *************** function _vMeasureRst *****************
 15744 ;; Defined at:
 15745 ;;		line 29 in file "vMeasure.c"
 15746 ;; Parameters:    Size  Location     Type
 15747 ;;		None
 15748 ;; Auto vars:     Size  Location     Type
 15749 ;;		None
 15750 ;; Return value:  Size  Location     Type
 15751 ;;                  1    wreg      void 
 15752 ;; Registers used:
 15753 ;;		wreg, status,2
 15754 ;; Tracked objects:
 15755 ;;		On entry : 3F/0
 15756 ;;		On exit  : 3F/39
 15757 ;;		Unchanged: 0/0
 15758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15763 ;;Total ram usage:        0 bytes
 15764 ;; Hardware stack levels used:    1
 15765 ;; Hardware stack levels required when called:   17
 15766 ;; This function calls:
 15767 ;;		Nothing
 15768 ;; This function is called by:
 15769 ;;		_main
 15770 ;;		_flowChk
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           	psect	text30
 15775  00A1AA                     __ptext30:
 15776                           	opt callstack 0
 15777  00A1AA                     _vMeasureRst:
 15778                           	opt callstack 13
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;vMeasure.c: 30:     PIE4bits.TMR2IE = 0;
 15782                           
 15783                           ; BSR set to: 1
 15784                           ;incstack = 0
 15785  00A1AA  0139               	movlb	57	; () banked
 15786  00A1AC  9594               	bcf	148,2,b	;volatile
 15787                           
 15788                           ; BSR set to: 57
 15789                           ;vMeasure.c: 31:     volume = 0;
 15790  00A1AE  0E00               	movlw	0
 15791  00A1B0  0102               	movlb	2	; () banked
 15792  00A1B2  6F2B               	movwf	_volume& (0+255),b
 15793  00A1B4  0E00               	movlw	0
 15794  00A1B6  6F2C               	movwf	(_volume+1)& (0+255),b
 15795  00A1B8  0E00               	movlw	0
 15796  00A1BA  6F2D               	movwf	(_volume+2)& (0+255),b
 15797  00A1BC  0E00               	movlw	0
 15798  00A1BE  6F2E               	movwf	(_volume+3)& (0+255),b
 15799                           
 15800                           ; BSR set to: 2
 15801                           ;vMeasure.c: 32:     PIE4bits.TMR2IE = 1;
 15802  00A1C0  0139               	movlb	57	; () banked
 15803  00A1C2  8594               	bsf	148,2,b	;volatile
 15804                           
 15805                           ; BSR set to: 57
 15806  00A1C4  0012               	return		;funcret
 15807  00A1C6                     __end_of_vMeasureRst:
 15808                           	opt callstack 0
 15809                           
 15810 ;; *************** function _vMeasureGet *****************
 15811 ;; Defined at:
 15812 ;;		line 42 in file "vMeasure.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;  rawV            4   70[BANK0 ] unsigned long 
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  2   68[BANK0 ] unsigned short 
 15819 ;; Registers used:
 15820 ;;		wreg, status,2, status,0, cstack
 15821 ;; Tracked objects:
 15822 ;;		On entry : 3C/1
 15823 ;;		On exit  : 3F/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15827 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;Total ram usage:        6 bytes
 15831 ;; Hardware stack levels used:    1
 15832 ;; Hardware stack levels required when called:   18
 15833 ;; This function calls:
 15834 ;;		___lldiv
 15835 ;; This function is called by:
 15836 ;;		_inspOSMeasure
 15837 ;;		_main
 15838 ;;		_flowChk
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           	psect	text31
 15843  008EFE                     __ptext31:
 15844                           	opt callstack 0
 15845  008EFE                     _vMeasureGet:
 15846                           	opt callstack 12
 15847                           
 15848                           ;vMeasure.c: 43:     uint32_t rawV;;vMeasure.c: 44:     PIE4bits.TMR2IE = 0;
 15849                           
 15850                           ; BSR set to: 57
 15851                           ;incstack = 0
 15852  008EFE  0139               	movlb	57	; () banked
 15853  008F00  9594               	bcf	148,2,b	;volatile
 15854                           
 15855                           ;vMeasure.c: 45:     rawV=volume;
 15856  008F02  0060  F8AC  F0A6   	movff	_volume,vMeasureGet@rawV
 15857  008F08  0060  F8B0  F0A7   	movff	_volume+1,vMeasureGet@rawV+1
 15858  008F0E  0060  F8B4  F0A8   	movff	_volume+2,vMeasureGet@rawV+2
 15859  008F14  0060  F8B8  F0A9   	movff	_volume+3,vMeasureGet@rawV+3
 15860                           
 15861                           ;vMeasure.c: 46:     PIE4bits.TMR2IE = 1;
 15862  008F1A  8594               	bsf	148,2,b	;volatile
 15863                           
 15864                           ; BSR set to: 57
 15865                           ;vMeasure.c: 48:     return rawV/60;
 15866  008F1C  0060  F298  F097   	movff	vMeasureGet@rawV,___lldiv@dividend
 15867  008F22  0060  F29C  F098   	movff	vMeasureGet@rawV+1,___lldiv@dividend+1
 15868  008F28  0060  F2A0  F099   	movff	vMeasureGet@rawV+2,___lldiv@dividend+2
 15869  008F2E  0060  F2A4  F09A   	movff	vMeasureGet@rawV+3,___lldiv@dividend+3
 15870  008F34  0E3C               	movlw	60
 15871  008F36  0100               	movlb	0	; () banked
 15872  008F38  6F9B               	movwf	___lldiv@divisor& (0+255),b
 15873  008F3A  0E00               	movlw	0
 15874  008F3C  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 15875  008F3E  0E00               	movlw	0
 15876  008F40  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 15877  008F42  0E00               	movlw	0
 15878  008F44  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 15879  008F46  EC70  F042         	call	___lldiv	;wreg free
 15880  008F4A  0060  F25C  F0A4   	movff	?___lldiv,?_vMeasureGet
 15881  008F50  0060  F260  F0A5   	movff	?___lldiv+1,?_vMeasureGet+1
 15882                           
 15883                           ; BSR set to: 0
 15884  008F56  0012               	return		;funcret
 15885  008F58                     __end_of_vMeasureGet:
 15886                           	opt callstack 0
 15887                           
 15888 ;; *************** function ___lldiv *****************
 15889 ;; Defined at:
 15890 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 15891 ;; Parameters:    Size  Location     Type
 15892 ;;  dividend        4   55[BANK0 ] unsigned long 
 15893 ;;  divisor         4   59[BANK0 ] unsigned long 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;  quotient        4   63[BANK0 ] unsigned long 
 15896 ;;  counter         1   67[BANK0 ] unsigned char 
 15897 ;; Return value:  Size  Location     Type
 15898 ;;                  4   55[BANK0 ] unsigned long 
 15899 ;; Registers used:
 15900 ;;		wreg, status,2, status,0
 15901 ;; Tracked objects:
 15902 ;;		On entry : 3F/0
 15903 ;;		On exit  : 3F/0
 15904 ;;		Unchanged: 0/0
 15905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15906 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15909 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15910 ;;Total ram usage:       13 bytes
 15911 ;; Hardware stack levels used:    1
 15912 ;; Hardware stack levels required when called:   17
 15913 ;; This function calls:
 15914 ;;		Nothing
 15915 ;; This function is called by:
 15916 ;;		_vMeasureGet
 15917 ;;		_flowChk
 15918 ;; This function uses a non-reentrant model
 15919 ;;
 15920                           
 15921                           	psect	text32
 15922  0084E0                     __ptext32:
 15923                           	opt callstack 0
 15924  0084E0                     ___lldiv:
 15925                           	opt callstack 12
 15926                           
 15927                           ; BSR set to: 0
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;incstack = 0
 15931  0084E0  0E00               	movlw	0
 15932  0084E2  6F9F               	movwf	___lldiv@quotient& (0+255),b
 15933  0084E4  0E00               	movlw	0
 15934  0084E6  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 15935  0084E8  0E00               	movlw	0
 15936  0084EA  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 15937  0084EC  0E00               	movlw	0
 15938  0084EE  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 15939                           
 15940                           ; BSR set to: 0
 15941  0084F0  519B               	movf	___lldiv@divisor& (0+255),w,b
 15942  0084F2  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15943  0084F4  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15944  0084F6  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15945  0084F8  B4D8               	btfsc	status,2,c
 15946  0084FA  D02A               	goto	l3204
 15947                           
 15948                           ; BSR set to: 0
 15949  0084FC  0E01               	movlw	1
 15950  0084FE  6FA3               	movwf	___lldiv@counter& (0+255),b
 15951  008500  D006               	goto	l17825
 15952  008502                     l17823:
 15953                           
 15954                           ; BSR set to: 0
 15955  008502  90D8               	bcf	status,0,c
 15956  008504  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 15957  008506  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15958  008508  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15959  00850A  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15960  00850C  2BA3               	incf	___lldiv@counter& (0+255),f,b
 15961  00850E                     l17825:
 15962                           
 15963                           ; BSR set to: 0
 15964  00850E  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15965  008510  D7F8               	goto	l17823
 15966  008512                     u18350:
 15967                           
 15968                           ; BSR set to: 0
 15969  008512  90D8               	bcf	status,0,c
 15970  008514  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 15971  008516  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15972  008518  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15973  00851A  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15974                           
 15975                           ; BSR set to: 0
 15976  00851C  519B               	movf	___lldiv@divisor& (0+255),w,b
 15977  00851E  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 15978  008520  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15979  008522  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15980  008524  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15981  008526  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15982  008528  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15983  00852A  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15984  00852C  A0D8               	btfss	status,0,c
 15985  00852E  D009               	goto	l17835
 15986                           
 15987                           ; BSR set to: 0
 15988  008530  519B               	movf	___lldiv@divisor& (0+255),w,b
 15989  008532  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 15990  008534  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15991  008536  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15992  008538  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15993  00853A  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15994  00853C  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15995  00853E  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15996                           
 15997                           ; BSR set to: 0
 15998  008540  819F               	bsf	___lldiv@quotient& (0+255),0,b
 15999  008542                     l17835:
 16000                           
 16001                           ; BSR set to: 0
 16002  008542  90D8               	bcf	status,0,c
 16003  008544  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16004  008546  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16005  008548  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16006  00854A  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 16007                           
 16008                           ; BSR set to: 0
 16009  00854C  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 16010  00854E  D7E1               	goto	u18350
 16011  008550                     l3204:
 16012                           
 16013                           ; BSR set to: 0
 16014  008550  0060  F27C  F097   	movff	___lldiv@quotient,?___lldiv
 16015  008556  0060  F280  F098   	movff	___lldiv@quotient+1,?___lldiv+1
 16016  00855C  0060  F284  F099   	movff	___lldiv@quotient+2,?___lldiv+2
 16017  008562  0060  F288  F09A   	movff	___lldiv@quotient+3,?___lldiv+3
 16018                           
 16019                           ; BSR set to: 0
 16020  008568  0012               	return		;funcret
 16021  00856A                     __end_of___lldiv:
 16022                           	opt callstack 0
 16023                           
 16024 ;; *************** function _aCaptureOffGet *****************
 16025 ;; Defined at:
 16026 ;;		line 126 in file "aCapture.c"
 16027 ;; Parameters:    Size  Location     Type
 16028 ;;  sel             1    wreg     enum E16104
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;  sel             1   98[BANK1 ] enum E16104
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  2   96[BANK1 ] short 
 16033 ;; Registers used:
 16034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16035 ;; Tracked objects:
 16036 ;;		On entry : 3E/1
 16037 ;;		On exit  : 3C/0
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16040 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;Total ram usage:        3 bytes
 16045 ;; Hardware stack levels used:    1
 16046 ;; Hardware stack levels required when called:   26
 16047 ;; This function calls:
 16048 ;;		_printf
 16049 ;; This function is called by:
 16050 ;;		_flowChk
 16051 ;; This function uses a non-reentrant model
 16052 ;;
 16053                           
 16054                           	psect	text33
 16055  009344                     __ptext33:
 16056                           	opt callstack 0
 16057  009344                     _aCaptureOffGet:
 16058                           	opt callstack 2
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;incstack = 0
 16062                           ;aCaptureOffGet@sel stored from wreg
 16063  009344  0101               	movlb	1	; () banked
 16064  009346  6F62               	movwf	aCaptureOffGet@sel& (0+255),b
 16065                           
 16066                           ;aCapture.c: 127:     if (sel == MainPSensor) {
 16067  009348  0101               	movlb	1	; () banked
 16068  00934A  5162               	movf	aCaptureOffGet@sel& (0+255),w,b
 16069  00934C  A4D8               	btfss	status,2,c
 16070  00934E  D007               	goto	l18127
 16071                           
 16072                           ; BSR set to: 1
 16073                           ;aCapture.c: 128:         return mainPSensCal;
 16074  009350  0060  F7D4  F160   	movff	_mainPSensCal,?_aCaptureOffGet
 16075  009356  0060  F7D8  F161   	movff	_mainPSensCal+1,?_aCaptureOffGet+1
 16076  00935C  0012               	return	
 16077  00935E                     l18127:
 16078                           
 16079                           ; BSR set to: 1
 16080  00935E  0562               	decf	aCaptureOffGet@sel& (0+255),w,b
 16081  009360  A4D8               	btfss	status,2,c
 16082  009362  D007               	goto	l1963
 16083                           
 16084                           ; BSR set to: 1
 16085                           ;aCapture.c: 130:         return auxPSensCal;
 16086  009364  0060  FB98  F160   	movff	_auxPSensCal,?_aCaptureOffGet
 16087  00936A  0060  FB9C  F161   	movff	_auxPSensCal+1,?_aCaptureOffGet+1
 16088  009370  0012               	return	
 16089  009372                     l1963:
 16090                           
 16091                           ; BSR set to: 1
 16092                           ;aCapture.c: 132:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;print
      +                          f("Fatal %d",102);
 16093  009372  94BA               	bcf	186,2,c	;volatile
 16094  009374  96BC               	bcf	188,3,c	;volatile
 16095  009376  96BA               	bcf	186,3,c	;volatile
 16096                           
 16097                           ; BSR set to: 1
 16098  009378  0EB1               	movlw	low STR_28
 16099  00937A  6F46               	movwf	printf@fmt& (0+255),b
 16100  00937C  0EFF               	movlw	high STR_28
 16101  00937E  6F47               	movwf	(printf@fmt+1)& (0+255),b
 16102  009380  0E00               	movlw	0
 16103  009382  6F49               	movwf	(?_printf+3)& (0+255),b
 16104  009384  0E66               	movlw	102
 16105  009386  6F48               	movwf	(?_printf+2)& (0+255),b
 16106  009388  ECE9  F04E         	call	_printf	;wreg free
 16107  00938C  0012               	return		;funcret
 16108  00938E                     __end_of_aCaptureOffGet:
 16109                           	opt callstack 0
 16110                           
 16111 ;; *************** function ___xxtofl *****************
 16112 ;; Defined at:
 16113 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 16114 ;; Parameters:    Size  Location     Type
 16115 ;;  sign            1    wreg     unsigned char 
 16116 ;;  val             4   43[BANK0 ] long 
 16117 ;; Auto vars:     Size  Location     Type
 16118 ;;  sign            1   51[BANK0 ] unsigned char 
 16119 ;;  arg             4   53[BANK0 ] unsigned long 
 16120 ;;  exp             1   52[BANK0 ] unsigned char 
 16121 ;; Return value:  Size  Location     Type
 16122 ;;                  4   43[BANK0 ] unsigned char 
 16123 ;; Registers used:
 16124 ;;		wreg, status,2, status,0
 16125 ;; Tracked objects:
 16126 ;;		On entry : 3F/0
 16127 ;;		On exit  : 3F/0
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16133 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16134 ;;Total ram usage:       14 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; Hardware stack levels required when called:   17
 16137 ;; This function calls:
 16138 ;;		Nothing
 16139 ;; This function is called by:
 16140 ;;		_main
 16141 ;;		_flowChk
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           	psect	text34
 16146  007038                     __ptext34:
 16147                           	opt callstack 0
 16148  007038                     ___xxtofl:
 16149                           	opt callstack 13
 16150                           
 16151                           ;incstack = 0
 16152                           ;___xxtofl@sign stored from wreg
 16153  007038  6F93               	movwf	___xxtofl@sign& (0+255),b
 16154  00703A  0100               	movlb	0	; () banked
 16155  00703C  5193               	movf	___xxtofl@sign& (0+255),w,b
 16156  00703E  A4D8               	btfss	status,2,c
 16157                           
 16158                           ; BSR set to: 0
 16159  007040  AF8E               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16160  007042  D022               	goto	l3832
 16161                           
 16162                           ; BSR set to: 0
 16163  007044  0060  F22C  F08F   	movff	___xxtofl@val,??___xxtofl
 16164  00704A  0060  F230  F090   	movff	___xxtofl@val+1,??___xxtofl+1
 16165  007050  0060  F234  F091   	movff	___xxtofl@val+2,??___xxtofl+2
 16166  007056  0060  F238  F092   	movff	___xxtofl@val+3,??___xxtofl+3
 16167  00705C  1F8F               	comf	??___xxtofl& (0+255),f,b
 16168  00705E  1F90               	comf	(??___xxtofl+1)& (0+255),f,b
 16169  007060  1F91               	comf	(??___xxtofl+2)& (0+255),f,b
 16170  007062  1F92               	comf	(??___xxtofl+3)& (0+255),f,b
 16171  007064  2B8F               	incf	??___xxtofl& (0+255),f,b
 16172  007066  0E00               	movlw	0
 16173  007068  2390               	addwfc	(??___xxtofl+1)& (0+255),f,b
 16174  00706A  2391               	addwfc	(??___xxtofl+2)& (0+255),f,b
 16175  00706C  2392               	addwfc	(??___xxtofl+3)& (0+255),f,b
 16176  00706E  0060  F23C  F095   	movff	??___xxtofl,___xxtofl@arg
 16177  007074  0060  F240  F096   	movff	??___xxtofl+1,___xxtofl@arg+1
 16178  00707A  0060  F244  F097   	movff	??___xxtofl+2,___xxtofl@arg+2
 16179  007080  0060  F248  F098   	movff	??___xxtofl+3,___xxtofl@arg+3
 16180  007086  D00C               	goto	l18225
 16181  007088                     l3832:
 16182                           
 16183                           ; BSR set to: 0
 16184  007088  0060  F22C  F095   	movff	___xxtofl@val,___xxtofl@arg
 16185  00708E  0060  F230  F096   	movff	___xxtofl@val+1,___xxtofl@arg+1
 16186  007094  0060  F234  F097   	movff	___xxtofl@val+2,___xxtofl@arg+2
 16187  00709A  0060  F238  F098   	movff	___xxtofl@val+3,___xxtofl@arg+3
 16188  0070A0                     l18225:
 16189                           
 16190                           ; BSR set to: 0
 16191  0070A0  518B               	movf	___xxtofl@val& (0+255),w,b
 16192  0070A2  118C               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 16193  0070A4  118D               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16194  0070A6  118E               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16195  0070A8  A4D8               	btfss	status,2,c
 16196  0070AA  D009               	goto	l18231
 16197                           
 16198                           ; BSR set to: 0
 16199  0070AC  0E00               	movlw	0
 16200  0070AE  6F8B               	movwf	?___xxtofl& (0+255),b
 16201  0070B0  0E00               	movlw	0
 16202  0070B2  6F8C               	movwf	(?___xxtofl+1)& (0+255),b
 16203  0070B4  0E00               	movlw	0
 16204  0070B6  6F8D               	movwf	(?___xxtofl+2)& (0+255),b
 16205  0070B8  0E00               	movlw	0
 16206  0070BA  6F8E               	movwf	(?___xxtofl+3)& (0+255),b
 16207  0070BC  0012               	return	
 16208  0070BE                     l18231:
 16209                           
 16210                           ; BSR set to: 0
 16211  0070BE  0E96               	movlw	150
 16212  0070C0  6F94               	movwf	___xxtofl@exp& (0+255),b
 16213  0070C2  D006               	goto	l18235
 16214  0070C4                     l18233:
 16215                           
 16216                           ; BSR set to: 0
 16217  0070C4  2B94               	incf	___xxtofl@exp& (0+255),f,b
 16218  0070C6  90D8               	bcf	status,0,c
 16219  0070C8  3398               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16220  0070CA  3397               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16221  0070CC  3396               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16222  0070CE  3395               	rrcf	___xxtofl@arg& (0+255),f,b
 16223  0070D0                     l18235:
 16224                           
 16225                           ; BSR set to: 0
 16226  0070D0  0E00               	movlw	0
 16227  0070D2  1595               	andwf	___xxtofl@arg& (0+255),w,b
 16228  0070D4  6F8F               	movwf	??___xxtofl& (0+255),b
 16229  0070D6  0E00               	movlw	0
 16230  0070D8  1596               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16231  0070DA  6F90               	movwf	(??___xxtofl+1)& (0+255),b
 16232  0070DC  0E00               	movlw	0
 16233  0070DE  1597               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16234  0070E0  6F91               	movwf	(??___xxtofl+2)& (0+255),b
 16235  0070E2  0EFE               	movlw	254
 16236  0070E4  1598               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16237  0070E6  6F92               	movwf	(??___xxtofl+3)& (0+255),b
 16238  0070E8  518F               	movf	??___xxtofl& (0+255),w,b
 16239  0070EA  1190               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16240  0070EC  1191               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16241  0070EE  1192               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16242  0070F0  B4D8               	btfsc	status,2,c
 16243  0070F2  D00D               	goto	l3839
 16244  0070F4  D7E7               	goto	l18233
 16245  0070F6                     l18237:
 16246                           
 16247                           ; BSR set to: 0
 16248  0070F6  2B94               	incf	___xxtofl@exp& (0+255),f,b
 16249                           
 16250                           ; BSR set to: 0
 16251  0070F8  0E01               	movlw	1
 16252  0070FA  2795               	addwf	___xxtofl@arg& (0+255),f,b
 16253  0070FC  0E00               	movlw	0
 16254  0070FE  2396               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16255  007100  2397               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16256  007102  2398               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16257                           
 16258                           ; BSR set to: 0
 16259  007104  90D8               	bcf	status,0,c
 16260  007106  3398               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16261  007108  3397               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16262  00710A  3396               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16263  00710C  3395               	rrcf	___xxtofl@arg& (0+255),f,b
 16264  00710E                     l3839:
 16265                           
 16266                           ; BSR set to: 0
 16267  00710E  0E00               	movlw	0
 16268  007110  1595               	andwf	___xxtofl@arg& (0+255),w,b
 16269  007112  6F8F               	movwf	??___xxtofl& (0+255),b
 16270  007114  0E00               	movlw	0
 16271  007116  1596               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16272  007118  6F90               	movwf	(??___xxtofl+1)& (0+255),b
 16273  00711A  0E00               	movlw	0
 16274  00711C  1597               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16275  00711E  6F91               	movwf	(??___xxtofl+2)& (0+255),b
 16276  007120  0EFF               	movlw	255
 16277  007122  1598               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16278  007124  6F92               	movwf	(??___xxtofl+3)& (0+255),b
 16279  007126  518F               	movf	??___xxtofl& (0+255),w,b
 16280  007128  1190               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16281  00712A  1191               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16282  00712C  1192               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16283  00712E  B4D8               	btfsc	status,2,c
 16284  007130  D007               	goto	l18245
 16285  007132  D7E1               	goto	l18237
 16286  007134                     l18243:
 16287                           
 16288                           ; BSR set to: 0
 16289  007134  0794               	decf	___xxtofl@exp& (0+255),f,b
 16290  007136  90D8               	bcf	status,0,c
 16291  007138  3795               	rlcf	___xxtofl@arg& (0+255),f,b
 16292  00713A  3796               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16293  00713C  3797               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16294  00713E  3798               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16295  007140                     l18245:
 16296                           
 16297                           ; BSR set to: 0
 16298  007140  BF97               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16299  007142  D003               	goto	u18850
 16300                           
 16301                           ; BSR set to: 0
 16302  007144  0E02               	movlw	2
 16303  007146  6194               	cpfslt	___xxtofl@exp& (0+255),b
 16304  007148  D7F5               	goto	l18243
 16305  00714A                     u18850:
 16306                           
 16307                           ; BSR set to: 0
 16308  00714A  A194               	btfss	___xxtofl@exp& (0+255),0,b
 16309                           
 16310                           ; BSR set to: 0
 16311  00714C  9F97               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16312                           
 16313                           ; BSR set to: 0
 16314  00714E  90D8               	bcf	status,0,c
 16315  007150  3394               	rrcf	___xxtofl@exp& (0+255),f,b
 16316                           
 16317                           ; BSR set to: 0
 16318  007152  0060  F250  F08F   	movff	___xxtofl@exp,??___xxtofl
 16319  007158  6B90               	clrf	(??___xxtofl+1)& (0+255),b
 16320  00715A  6B91               	clrf	(??___xxtofl+2)& (0+255),b
 16321  00715C  6B92               	clrf	(??___xxtofl+3)& (0+255),b
 16322  00715E  0060  F23C  F092   	movff	??___xxtofl,??___xxtofl+3
 16323  007164  6B91               	clrf	(??___xxtofl+2)& (0+255),b
 16324  007166  6B90               	clrf	(??___xxtofl+1)& (0+255),b
 16325  007168  6B8F               	clrf	??___xxtofl& (0+255),b
 16326  00716A  518F               	movf	??___xxtofl& (0+255),w,b
 16327  00716C  1395               	iorwf	___xxtofl@arg& (0+255),f,b
 16328  00716E  5190               	movf	(??___xxtofl+1)& (0+255),w,b
 16329  007170  1396               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16330  007172  5191               	movf	(??___xxtofl+2)& (0+255),w,b
 16331  007174  1397               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16332  007176  5192               	movf	(??___xxtofl+3)& (0+255),w,b
 16333  007178  1398               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16334                           
 16335                           ; BSR set to: 0
 16336  00717A  5193               	movf	___xxtofl@sign& (0+255),w,b
 16337  00717C  A4D8               	btfss	status,2,c
 16338                           
 16339                           ; BSR set to: 0
 16340  00717E  AF8E               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16341  007180  D001               	goto	l18261
 16342                           
 16343                           ; BSR set to: 0
 16344  007182  8F98               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16345  007184                     l18261:
 16346                           
 16347                           ; BSR set to: 0
 16348  007184  0060  F254  F08B   	movff	___xxtofl@arg,?___xxtofl
 16349  00718A  0060  F258  F08C   	movff	___xxtofl@arg+1,?___xxtofl+1
 16350  007190  0060  F25C  F08D   	movff	___xxtofl@arg+2,?___xxtofl+2
 16351  007196  0060  F260  F08E   	movff	___xxtofl@arg+3,?___xxtofl+3
 16352                           
 16353                           ; BSR set to: 0
 16354  00719C  0012               	return		;funcret
 16355  00719E                     __end_of___xxtofl:
 16356                           	opt callstack 0
 16357                           
 16358 ;; *************** function ___lmul *****************
 16359 ;; Defined at:
 16360 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  multiplier      4   43[BANK0 ] unsigned long 
 16363 ;;  multiplicand    4   47[BANK0 ] unsigned long 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;  product         4   51[BANK0 ] unsigned long 
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  4   43[BANK0 ] unsigned long 
 16368 ;; Registers used:
 16369 ;;		wreg, status,2, status,0
 16370 ;; Tracked objects:
 16371 ;;		On entry : 3F/0
 16372 ;;		On exit  : 3F/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16375 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16376 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16378 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16379 ;;Total ram usage:       12 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; Hardware stack levels required when called:   17
 16382 ;; This function calls:
 16383 ;;		Nothing
 16384 ;; This function is called by:
 16385 ;;		_inspOSMeasure
 16386 ;;		_pressureSensorChk
 16387 ;;		_flowChk
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           	psect	text35
 16392  008D8C                     __ptext35:
 16393                           	opt callstack 0
 16394  008D8C                     ___lmul:
 16395                           	opt callstack 12
 16396                           
 16397                           ; BSR set to: 0
 16398                           
 16399                           ; BSR set to: 0
 16400                           ;incstack = 0
 16401  008D8C  0E00               	movlw	0
 16402  008D8E  6F93               	movwf	___lmul@product& (0+255),b
 16403  008D90  0E00               	movlw	0
 16404  008D92  6F94               	movwf	(___lmul@product+1)& (0+255),b
 16405  008D94  0E00               	movlw	0
 16406  008D96  6F95               	movwf	(___lmul@product+2)& (0+255),b
 16407  008D98  0E00               	movlw	0
 16408  008D9A  6F96               	movwf	(___lmul@product+3)& (0+255),b
 16409  008D9C                     l18167:
 16410                           
 16411                           ; BSR set to: 0
 16412  008D9C  A18B               	btfss	___lmul@multiplier& (0+255),0,b
 16413  008D9E  D008               	goto	l18171
 16414                           
 16415                           ; BSR set to: 0
 16416  008DA0  518F               	movf	___lmul@multiplicand& (0+255),w,b
 16417  008DA2  2793               	addwf	___lmul@product& (0+255),f,b
 16418  008DA4  5190               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 16419  008DA6  2394               	addwfc	(___lmul@product+1)& (0+255),f,b
 16420  008DA8  5191               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 16421  008DAA  2395               	addwfc	(___lmul@product+2)& (0+255),f,b
 16422  008DAC  5192               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 16423  008DAE  2396               	addwfc	(___lmul@product+3)& (0+255),f,b
 16424  008DB0                     l18171:
 16425                           
 16426                           ; BSR set to: 0
 16427  008DB0  90D8               	bcf	status,0,c
 16428  008DB2  378F               	rlcf	___lmul@multiplicand& (0+255),f,b
 16429  008DB4  3790               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 16430  008DB6  3791               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 16431  008DB8  3792               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 16432                           
 16433                           ; BSR set to: 0
 16434  008DBA  90D8               	bcf	status,0,c
 16435  008DBC  338E               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 16436  008DBE  338D               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 16437  008DC0  338C               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 16438  008DC2  338B               	rrcf	___lmul@multiplier& (0+255),f,b
 16439  008DC4  518B               	movf	___lmul@multiplier& (0+255),w,b
 16440  008DC6  118C               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 16441  008DC8  118D               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 16442  008DCA  118E               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 16443  008DCC  A4D8               	btfss	status,2,c
 16444  008DCE  D7E6               	goto	l18167
 16445                           
 16446                           ; BSR set to: 0
 16447  008DD0  0060  F24C  F08B   	movff	___lmul@product,?___lmul
 16448  008DD6  0060  F250  F08C   	movff	___lmul@product+1,?___lmul+1
 16449  008DDC  0060  F254  F08D   	movff	___lmul@product+2,?___lmul+2
 16450  008DE2  0060  F258  F08E   	movff	___lmul@product+3,?___lmul+3
 16451                           
 16452                           ; BSR set to: 0
 16453  008DE8  0012               	return		;funcret
 16454  008DEA                     __end_of___lmul:
 16455                           	opt callstack 0
 16456                           
 16457 ;; *************** function ___flge *****************
 16458 ;; Defined at:
 16459 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;  ff1             4   57[BANK0 ] unsigned long 
 16462 ;;  ff2             4   61[BANK0 ] unsigned long 
 16463 ;; Auto vars:     Size  Location     Type
 16464 ;;		None
 16465 ;; Return value:  Size  Location     Type
 16466 ;;		None               void
 16467 ;; Registers used:
 16468 ;;		wreg, status,2, status,0
 16469 ;; Tracked objects:
 16470 ;;		On entry : 3F/0
 16471 ;;		On exit  : 3F/0
 16472 ;;		Unchanged: 0/0
 16473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16474 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16476 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16477 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16478 ;;Total ram usage:       12 bytes
 16479 ;; Hardware stack levels used:    1
 16480 ;; Hardware stack levels required when called:   17
 16481 ;; This function calls:
 16482 ;;		Nothing
 16483 ;; This function is called by:
 16484 ;;		_flowChk
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           	psect	text36
 16489  007BBE                     __ptext36:
 16490                           	opt callstack 0
 16491  007BBE                     ___flge:
 16492                           	opt callstack 11
 16493                           
 16494                           ; BSR set to: 0
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;incstack = 0
 16498  007BBE  0E00               	movlw	0
 16499  007BC0  1599               	andwf	___flge@ff1& (0+255),w,b
 16500  007BC2  6FA1               	movwf	??___flge& (0+255),b
 16501  007BC4  0E00               	movlw	0
 16502  007BC6  159A               	andwf	(___flge@ff1+1)& (0+255),w,b
 16503  007BC8  6FA2               	movwf	(??___flge+1)& (0+255),b
 16504  007BCA  0E80               	movlw	128
 16505  007BCC  159B               	andwf	(___flge@ff1+2)& (0+255),w,b
 16506  007BCE  6FA3               	movwf	(??___flge+2)& (0+255),b
 16507  007BD0  0E7F               	movlw	127
 16508  007BD2  159C               	andwf	(___flge@ff1+3)& (0+255),w,b
 16509  007BD4  6FA4               	movwf	(??___flge+3)& (0+255),b
 16510  007BD6  51A1               	movf	??___flge& (0+255),w,b
 16511  007BD8  11A2               	iorwf	(??___flge+1)& (0+255),w,b
 16512  007BDA  11A3               	iorwf	(??___flge+2)& (0+255),w,b
 16513  007BDC  11A4               	iorwf	(??___flge+3)& (0+255),w,b
 16514  007BDE  A4D8               	btfss	status,2,c
 16515  007BE0  D008               	goto	l18179
 16516                           
 16517                           ; BSR set to: 0
 16518  007BE2  0E00               	movlw	0
 16519  007BE4  6F99               	movwf	___flge@ff1& (0+255),b
 16520  007BE6  0E00               	movlw	0
 16521  007BE8  6F9A               	movwf	(___flge@ff1+1)& (0+255),b
 16522  007BEA  0E00               	movlw	0
 16523  007BEC  6F9B               	movwf	(___flge@ff1+2)& (0+255),b
 16524  007BEE  0E00               	movlw	0
 16525  007BF0  6F9C               	movwf	(___flge@ff1+3)& (0+255),b
 16526  007BF2                     l18179:
 16527                           
 16528                           ; BSR set to: 0
 16529  007BF2  0E00               	movlw	0
 16530  007BF4  159D               	andwf	___flge@ff2& (0+255),w,b
 16531  007BF6  6FA1               	movwf	??___flge& (0+255),b
 16532  007BF8  0E00               	movlw	0
 16533  007BFA  159E               	andwf	(___flge@ff2+1)& (0+255),w,b
 16534  007BFC  6FA2               	movwf	(??___flge+1)& (0+255),b
 16535  007BFE  0E80               	movlw	128
 16536  007C00  159F               	andwf	(___flge@ff2+2)& (0+255),w,b
 16537  007C02  6FA3               	movwf	(??___flge+2)& (0+255),b
 16538  007C04  0E7F               	movlw	127
 16539  007C06  15A0               	andwf	(___flge@ff2+3)& (0+255),w,b
 16540  007C08  6FA4               	movwf	(??___flge+3)& (0+255),b
 16541  007C0A  51A1               	movf	??___flge& (0+255),w,b
 16542  007C0C  11A2               	iorwf	(??___flge+1)& (0+255),w,b
 16543  007C0E  11A3               	iorwf	(??___flge+2)& (0+255),w,b
 16544  007C10  11A4               	iorwf	(??___flge+3)& (0+255),w,b
 16545  007C12  A4D8               	btfss	status,2,c
 16546  007C14  D008               	goto	l18183
 16547                           
 16548                           ; BSR set to: 0
 16549  007C16  0E00               	movlw	0
 16550  007C18  6F9D               	movwf	___flge@ff2& (0+255),b
 16551  007C1A  0E00               	movlw	0
 16552  007C1C  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
 16553  007C1E  0E00               	movlw	0
 16554  007C20  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
 16555  007C22  0E00               	movlw	0
 16556  007C24  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
 16557  007C26                     l18183:
 16558                           
 16559                           ; BSR set to: 0
 16560  007C26  AF9C               	btfss	(___flge@ff1+3)& (0+255),7,b
 16561  007C28  D009               	goto	l18187
 16562                           
 16563                           ; BSR set to: 0
 16564  007C2A  6D99               	negf	___flge@ff1& (0+255),b
 16565  007C2C  1F9A               	comf	(___flge@ff1+1)& (0+255),f,b
 16566  007C2E  B0D8               	btfsc	status,0,c
 16567  007C30  2B9A               	incf	(___flge@ff1+1)& (0+255),f,b
 16568  007C32  1F9B               	comf	(___flge@ff1+2)& (0+255),f,b
 16569  007C34  B0D8               	btfsc	status,0,c
 16570  007C36  2B9B               	incf	(___flge@ff1+2)& (0+255),f,b
 16571  007C38  0E80               	movlw	128
 16572  007C3A  579C               	subfwb	(___flge@ff1+3)& (0+255),f,b
 16573  007C3C                     l18187:
 16574                           
 16575                           ; BSR set to: 0
 16576  007C3C  AFA0               	btfss	(___flge@ff2+3)& (0+255),7,b
 16577  007C3E  D009               	goto	l3442
 16578                           
 16579                           ; BSR set to: 0
 16580  007C40  6D9D               	negf	___flge@ff2& (0+255),b
 16581  007C42  1F9E               	comf	(___flge@ff2+1)& (0+255),f,b
 16582  007C44  B0D8               	btfsc	status,0,c
 16583  007C46  2B9E               	incf	(___flge@ff2+1)& (0+255),f,b
 16584  007C48  1F9F               	comf	(___flge@ff2+2)& (0+255),f,b
 16585  007C4A  B0D8               	btfsc	status,0,c
 16586  007C4C  2B9F               	incf	(___flge@ff2+2)& (0+255),f,b
 16587  007C4E  0E80               	movlw	128
 16588  007C50  57A0               	subfwb	(___flge@ff2+3)& (0+255),f,b
 16589  007C52                     l3442:
 16590                           
 16591                           ; BSR set to: 0
 16592  007C52  0E00               	movlw	0
 16593  007C54  1B99               	xorwf	___flge@ff1& (0+255),f,b
 16594  007C56  0E00               	movlw	0
 16595  007C58  1B9A               	xorwf	(___flge@ff1+1)& (0+255),f,b
 16596  007C5A  0E00               	movlw	0
 16597  007C5C  1B9B               	xorwf	(___flge@ff1+2)& (0+255),f,b
 16598  007C5E  0E80               	movlw	128
 16599  007C60  1B9C               	xorwf	(___flge@ff1+3)& (0+255),f,b
 16600  007C62  0E00               	movlw	0
 16601  007C64  1B9D               	xorwf	___flge@ff2& (0+255),f,b
 16602  007C66  0E00               	movlw	0
 16603  007C68  1B9E               	xorwf	(___flge@ff2+1)& (0+255),f,b
 16604  007C6A  0E00               	movlw	0
 16605  007C6C  1B9F               	xorwf	(___flge@ff2+2)& (0+255),f,b
 16606  007C6E  0E80               	movlw	128
 16607  007C70  1BA0               	xorwf	(___flge@ff2+3)& (0+255),f,b
 16608  007C72  519D               	movf	___flge@ff2& (0+255),w,b
 16609  007C74  5D99               	subwf	___flge@ff1& (0+255),w,b
 16610  007C76  519E               	movf	(___flge@ff2+1)& (0+255),w,b
 16611  007C78  599A               	subwfb	(___flge@ff1+1)& (0+255),w,b
 16612  007C7A  519F               	movf	(___flge@ff2+2)& (0+255),w,b
 16613  007C7C  599B               	subwfb	(___flge@ff1+2)& (0+255),w,b
 16614  007C7E  51A0               	movf	(___flge@ff2+3)& (0+255),w,b
 16615  007C80  599C               	subwfb	(___flge@ff1+3)& (0+255),w,b
 16616  007C82  B0D8               	btfsc	status,0,c
 16617  007C84  D002               	goto	l18193
 16618                           
 16619                           ; BSR set to: 0
 16620  007C86  90D8               	bcf	status,0,c
 16621  007C88  0012               	return	
 16622  007C8A                     l18193:
 16623                           
 16624                           ; BSR set to: 0
 16625  007C8A  80D8               	bsf	status,0,c
 16626                           
 16627                           ; BSR set to: 0
 16628  007C8C  0012               	return		;funcret
 16629  007C8E                     __end_of___flge:
 16630                           	opt callstack 0
 16631                           
 16632 ;; *************** function _SYSTEM_Initialize *****************
 16633 ;; Defined at:
 16634 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16635 ;; Parameters:    Size  Location     Type
 16636 ;;		None
 16637 ;; Auto vars:     Size  Location     Type
 16638 ;;		None
 16639 ;; Return value:  Size  Location     Type
 16640 ;;                  1    wreg      void 
 16641 ;; Registers used:
 16642 ;;		wreg, status,2, status,0, cstack
 16643 ;; Tracked objects:
 16644 ;;		On entry : 3F/3
 16645 ;;		On exit  : 3F/3D
 16646 ;;		Unchanged: 0/0
 16647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16652 ;;Total ram usage:        0 bytes
 16653 ;; Hardware stack levels used:    1
 16654 ;; Hardware stack levels required when called:   19
 16655 ;; This function calls:
 16656 ;;		_ADCC_Initialize
 16657 ;;		_FVR_Initialize
 16658 ;;		_I2C2_Initialize
 16659 ;;		_INTERRUPT_Initialize
 16660 ;;		_OSCILLATOR_Initialize
 16661 ;;		_PIN_MANAGER_Initialize
 16662 ;;		_PMD_Initialize
 16663 ;;		_TMR0_Initialize
 16664 ;;		_TMR1_Initialize
 16665 ;;		_TMR2_Initialize
 16666 ;;		_TMR4_Initialize
 16667 ;;		_TMR6_Initialize
 16668 ;;		_UART1_Initialize
 16669 ;; This function is called by:
 16670 ;;		_main
 16671 ;; This function uses a non-reentrant model
 16672 ;;
 16673                           
 16674                           	psect	text37
 16675  009808                     __ptext37:
 16676                           	opt callstack 0
 16677  009808                     _SYSTEM_Initialize:
 16678                           	opt callstack 11
 16679                           
 16680                           ; BSR set to: 3
 16681                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;incstack = 0
 16685  009808  ECE7  F052         	call	_INTERRUPT_Initialize	;wreg free
 16686                           
 16687                           ; BSR set to: 3
 16688                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 16689  00980C  ECAC  F04F         	call	_PMD_Initialize	;wreg free
 16690                           
 16691                           ; BSR set to: 57
 16692                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16693  009810  EC12  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
 16694                           
 16695                           ; BSR set to: 58
 16696                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16697  009814  ECF0  F050         	call	_OSCILLATOR_Initialize	;wreg free
 16698                           
 16699                           ; BSR set to: 57
 16700                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 16701  009818  ECA6  F052         	call	_FVR_Initialize	;wreg free
 16702                           
 16703                           ; BSR set to: 62
 16704                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 16705  00981C  EC32  F04E         	call	_TMR6_Initialize	;wreg free
 16706                           
 16707                           ; BSR set to: 0
 16708                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 16709  009820  EC2E  F045         	call	_ADCC_Initialize	;wreg free
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
 16713  009824  EC49  F04E         	call	_TMR4_Initialize	;wreg free
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 16717  009828  EC60  F04E         	call	_TMR2_Initialize	;wreg free
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;mcc_generated_files/mcc.c: 61:     TMR1_Initialize();
 16721  00982C  ECB8  F04A         	call	_TMR1_Initialize	;wreg free
 16722                           
 16723                           ; BSR set to: 2
 16724                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 16725  009830  EC1E  F051         	call	_TMR0_Initialize	;wreg free
 16726                           
 16727                           ; BSR set to: 57
 16728                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 16729  009834  EC80  F043         	call	_UART1_Initialize	;wreg free
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;mcc_generated_files/mcc.c: 64:     I2C2_Initialize();
 16733  009838  ECBE  F04F         	call	_I2C2_Initialize	;wreg free
 16734                           
 16735                           ; BSR set to: 61
 16736  00983C  0012               	return		;funcret
 16737  00983E                     __end_of_SYSTEM_Initialize:
 16738                           	opt callstack 0
 16739                           
 16740 ;; *************** function _UART1_Initialize *****************
 16741 ;; Defined at:
 16742 ;;		line 81 in file "mcc_generated_files/uart1.c"
 16743 ;; Parameters:    Size  Location     Type
 16744 ;;		None
 16745 ;; Auto vars:     Size  Location     Type
 16746 ;;		None
 16747 ;; Return value:  Size  Location     Type
 16748 ;;                  1    wreg      void 
 16749 ;; Registers used:
 16750 ;;		wreg, status,2, status,0, cstack
 16751 ;; Tracked objects:
 16752 ;;		On entry : 3F/39
 16753 ;;		On exit  : 3F/0
 16754 ;;		Unchanged: 0/0
 16755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16760 ;;Total ram usage:        0 bytes
 16761 ;; Hardware stack levels used:    1
 16762 ;; Hardware stack levels required when called:   18
 16763 ;; This function calls:
 16764 ;;		_UART1_SetErrorHandler
 16765 ;;		_UART1_SetFramingErrorHandler
 16766 ;;		_UART1_SetOverrunErrorHandler
 16767 ;;		_UART1_SetTxInterruptHandler
 16768 ;; This function is called by:
 16769 ;;		_SYSTEM_Initialize
 16770 ;; This function uses a non-reentrant model
 16771 ;;
 16772                           
 16773                           	psect	text38
 16774  008700                     __ptext38:
 16775                           	opt callstack 0
 16776  008700                     _UART1_Initialize:
 16777                           	opt callstack 11
 16778                           
 16779                           ; BSR set to: 57
 16780                           ;mcc_generated_files/uart1.c: 84:     PIE3bits.U1TXIE = 0;
 16781                           
 16782                           ; BSR set to: 61
 16783                           ;incstack = 0
 16784  008700  9993               	bcf	147,4,b	;volatile
 16785                           
 16786                           ; BSR set to: 57
 16787                           ;mcc_generated_files/uart1.c: 85:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 16788  008702  0E7E               	movlw	low _UART1_Transmit_ISR
 16789  008704  0100               	movlb	0	; () banked
 16790  008706  6F8B               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 16791  008708  0E9A               	movlw	high _UART1_Transmit_ISR
 16792  00870A  6F8C               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 16793  00870C  ECDE  F051         	call	_UART1_SetTxInterruptHandler	;wreg free
 16794                           
 16795                           ; BSR set to: 0
 16796                           ;mcc_generated_files/uart1.c: 90:     U1P1L = 0x00;
 16797  008710  0E00               	movlw	0
 16798  008712  013D               	movlb	61	; () banked
 16799  008714  6FEC               	movwf	236,b	;volatile
 16800                           
 16801                           ; BSR set to: 61
 16802                           ;mcc_generated_files/uart1.c: 93:     U1P1H = 0x00;
 16803  008716  0E00               	movlw	0
 16804  008718  6FED               	movwf	237,b	;volatile
 16805                           
 16806                           ; BSR set to: 61
 16807                           ;mcc_generated_files/uart1.c: 96:     U1P2L = 0x00;
 16808  00871A  0E00               	movlw	0
 16809  00871C  6FEE               	movwf	238,b	;volatile
 16810                           
 16811                           ; BSR set to: 61
 16812                           ;mcc_generated_files/uart1.c: 99:     U1P2H = 0x00;
 16813  00871E  0E00               	movlw	0
 16814  008720  6FEF               	movwf	239,b	;volatile
 16815                           
 16816                           ; BSR set to: 61
 16817                           ;mcc_generated_files/uart1.c: 102:     U1P3L = 0x00;
 16818  008722  0E00               	movlw	0
 16819  008724  6FF0               	movwf	240,b	;volatile
 16820                           
 16821                           ; BSR set to: 61
 16822                           ;mcc_generated_files/uart1.c: 105:     U1P3H = 0x00;
 16823  008726  0E00               	movlw	0
 16824  008728  6FF1               	movwf	241,b	;volatile
 16825                           
 16826                           ; BSR set to: 61
 16827                           ;mcc_generated_files/uart1.c: 108:     U1CON0 = 0xB0;
 16828  00872A  0EB0               	movlw	176
 16829  00872C  6FF2               	movwf	242,b	;volatile
 16830                           
 16831                           ; BSR set to: 61
 16832                           ;mcc_generated_files/uart1.c: 111:     U1CON1 = 0x80;
 16833  00872E  0E80               	movlw	128
 16834  008730  6FF3               	movwf	243,b	;volatile
 16835                           
 16836                           ; BSR set to: 61
 16837                           ;mcc_generated_files/uart1.c: 114:     U1CON2 = 0x00;
 16838  008732  0E00               	movlw	0
 16839  008734  6FF4               	movwf	244,b	;volatile
 16840                           
 16841                           ; BSR set to: 61
 16842                           ;mcc_generated_files/uart1.c: 117:     U1BRGL = 0x22;
 16843  008736  0E22               	movlw	34
 16844  008738  6FF5               	movwf	245,b	;volatile
 16845                           
 16846                           ; BSR set to: 61
 16847                           ;mcc_generated_files/uart1.c: 120:     U1BRGH = 0x00;
 16848  00873A  0E00               	movlw	0
 16849  00873C  6FF6               	movwf	246,b	;volatile
 16850                           
 16851                           ; BSR set to: 61
 16852                           ;mcc_generated_files/uart1.c: 123:     U1FIFO = 0x00;
 16853  00873E  0E00               	movlw	0
 16854  008740  6FF7               	movwf	247,b	;volatile
 16855                           
 16856                           ; BSR set to: 61
 16857                           ;mcc_generated_files/uart1.c: 126:     U1UIR = 0x00;
 16858  008742  0E00               	movlw	0
 16859  008744  6FF8               	movwf	248,b	;volatile
 16860                           
 16861                           ; BSR set to: 61
 16862                           ;mcc_generated_files/uart1.c: 129:     U1ERRIR = 0x00;
 16863  008746  0E00               	movlw	0
 16864  008748  6FF9               	movwf	249,b	;volatile
 16865                           
 16866                           ; BSR set to: 61
 16867                           ;mcc_generated_files/uart1.c: 132:     U1ERRIE = 0x00;
 16868  00874A  0E00               	movlw	0
 16869  00874C  6FFA               	movwf	250,b	;volatile
 16870                           
 16871                           ; BSR set to: 61
 16872                           ;mcc_generated_files/uart1.c: 135:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 16873  00874E  0E00               	movlw	0
 16874  008750  0100               	movlb	0	; () banked
 16875  008752  6F8B               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 16876  008754  0E00               	movlw	0
 16877  008756  6F8C               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 16878  008758  ECEC  F051         	call	_UART1_SetFramingErrorHandler	;wreg free
 16879                           
 16880                           ; BSR set to: 0
 16881                           ;mcc_generated_files/uart1.c: 136:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 16882  00875C  0E00               	movlw	0
 16883  00875E  6F8B               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 16884  008760  0E00               	movlw	0
 16885  008762  6F8C               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 16886  008764  ECE5  F051         	call	_UART1_SetOverrunErrorHandler	;wreg free
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;mcc_generated_files/uart1.c: 137:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 16890  008768  0E00               	movlw	0
 16891  00876A  6F8B               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 16892  00876C  0E00               	movlw	0
 16893  00876E  6F8C               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 16894  008770  ECF3  F051         	call	_UART1_SetErrorHandler	;wreg free
 16895                           
 16896                           ;mcc_generated_files/uart1.c: 139:     uart1RxLastError.status = 0;
 16897  008774  0E00               	movlw	0
 16898  008776  6FCD               	movwf	_uart1RxLastError& (0+255),b	;volatile
 16899                           
 16900                           ;mcc_generated_files/uart1.c: 142:     uart1TxHead = 0;
 16901  008778  0E00               	movlw	0
 16902  00877A  6FCF               	movwf	_uart1TxHead& (0+255),b	;volatile
 16903                           
 16904                           ;mcc_generated_files/uart1.c: 143:     uart1TxTail = 0;
 16905  00877C  0E00               	movlw	0
 16906  00877E  6FCE               	movwf	_uart1TxTail& (0+255),b	;volatile
 16907                           
 16908                           ;mcc_generated_files/uart1.c: 144:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 16909  008780  0E40               	movlw	64
 16910  008782  6FD4               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 16911                           
 16912                           ; BSR set to: 0
 16913  008784  0012               	return		;funcret
 16914  008786                     __end_of_UART1_Initialize:
 16915                           	opt callstack 0
 16916                           
 16917 ;; *************** function _UART1_SetTxInterruptHandler *****************
 16918 ;; Defined at:
 16919 ;;		line 260 in file "mcc_generated_files/uart1.c"
 16920 ;; Parameters:    Size  Location     Type
 16921 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 16922 ;;		 -> UART1_Transmit_ISR(1), 
 16923 ;; Auto vars:     Size  Location     Type
 16924 ;;		None
 16925 ;; Return value:  Size  Location     Type
 16926 ;;                  1    wreg      void 
 16927 ;; Registers used:
 16928 ;;		wreg, status,2, status,0
 16929 ;; Tracked objects:
 16930 ;;		On entry : 3F/0
 16931 ;;		On exit  : 3F/0
 16932 ;;		Unchanged: 3F/0
 16933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16938 ;;Total ram usage:        2 bytes
 16939 ;; Hardware stack levels used:    1
 16940 ;; Hardware stack levels required when called:   17
 16941 ;; This function calls:
 16942 ;;		Nothing
 16943 ;; This function is called by:
 16944 ;;		_UART1_Initialize
 16945 ;; This function uses a non-reentrant model
 16946 ;;
 16947                           
 16948                           	psect	text39
 16949  00A3BC                     __ptext39:
 16950                           	opt callstack 0
 16951  00A3BC                     _UART1_SetTxInterruptHandler:
 16952                           	opt callstack 11
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;mcc_generated_files/uart1.c: 261:     UART1_TxInterruptHandler = InterruptHandler;
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;incstack = 0
 16959  00A3BC  0060  F22C  F2F6   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 16960  00A3C2  0060  F230  F2F7   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 16961                           
 16962                           ; BSR set to: 0
 16963  00A3C8  0012               	return		;funcret
 16964  00A3CA                     __end_of_UART1_SetTxInterruptHandler:
 16965                           	opt callstack 0
 16966                           
 16967 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 16968 ;; Defined at:
 16969 ;;		line 249 in file "mcc_generated_files/uart1.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 16972 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 16973 ;; Auto vars:     Size  Location     Type
 16974 ;;		None
 16975 ;; Return value:  Size  Location     Type
 16976 ;;                  1    wreg      void 
 16977 ;; Registers used:
 16978 ;;		wreg, status,2, status,0
 16979 ;; Tracked objects:
 16980 ;;		On entry : 3F/0
 16981 ;;		On exit  : 3F/0
 16982 ;;		Unchanged: 3F/0
 16983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16988 ;;Total ram usage:        2 bytes
 16989 ;; Hardware stack levels used:    1
 16990 ;; Hardware stack levels required when called:   17
 16991 ;; This function calls:
 16992 ;;		Nothing
 16993 ;; This function is called by:
 16994 ;;		_UART1_Initialize
 16995 ;; This function uses a non-reentrant model
 16996 ;;
 16997                           
 16998                           	psect	text40
 16999  00A3CA                     __ptext40:
 17000                           	opt callstack 0
 17001  00A3CA                     _UART1_SetOverrunErrorHandler:
 17002                           	opt callstack 11
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;mcc_generated_files/uart1.c: 250:     UART1_OverrunErrorHandler = interruptHandler;
 17006                           
 17007                           ; BSR set to: 0
 17008                           ;incstack = 0
 17009  00A3CA  0060  F22C  F2F2   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 17010  00A3D0  0060  F230  F2F3   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 17011                           
 17012                           ; BSR set to: 0
 17013  00A3D6  0012               	return		;funcret
 17014  00A3D8                     __end_of_UART1_SetOverrunErrorHandler:
 17015                           	opt callstack 0
 17016                           
 17017 ;; *************** function _UART1_SetFramingErrorHandler *****************
 17018 ;; Defined at:
 17019 ;;		line 245 in file "mcc_generated_files/uart1.c"
 17020 ;; Parameters:    Size  Location     Type
 17021 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 17022 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 17023 ;; Auto vars:     Size  Location     Type
 17024 ;;		None
 17025 ;; Return value:  Size  Location     Type
 17026 ;;                  1    wreg      void 
 17027 ;; Registers used:
 17028 ;;		wreg, status,2, status,0
 17029 ;; Tracked objects:
 17030 ;;		On entry : 3F/0
 17031 ;;		On exit  : 3F/0
 17032 ;;		Unchanged: 3F/0
 17033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17038 ;;Total ram usage:        2 bytes
 17039 ;; Hardware stack levels used:    1
 17040 ;; Hardware stack levels required when called:   17
 17041 ;; This function calls:
 17042 ;;		Nothing
 17043 ;; This function is called by:
 17044 ;;		_UART1_Initialize
 17045 ;; This function uses a non-reentrant model
 17046 ;;
 17047                           
 17048                           	psect	text41
 17049  00A3D8                     __ptext41:
 17050                           	opt callstack 0
 17051  00A3D8                     _UART1_SetFramingErrorHandler:
 17052                           	opt callstack 11
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;mcc_generated_files/uart1.c: 246:     UART1_FramingErrorHandler = interruptHandler;
 17056                           
 17057                           ; BSR set to: 0
 17058                           ;incstack = 0
 17059  00A3D8  0060  F22C  F2F4   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 17060  00A3DE  0060  F230  F2F5   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 17061                           
 17062                           ; BSR set to: 0
 17063  00A3E4  0012               	return		;funcret
 17064  00A3E6                     __end_of_UART1_SetFramingErrorHandler:
 17065                           	opt callstack 0
 17066                           
 17067 ;; *************** function _UART1_SetErrorHandler *****************
 17068 ;; Defined at:
 17069 ;;		line 253 in file "mcc_generated_files/uart1.c"
 17070 ;; Parameters:    Size  Location     Type
 17071 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 17072 ;;		 -> UART1_DefaultErrorHandler(1), 
 17073 ;; Auto vars:     Size  Location     Type
 17074 ;;		None
 17075 ;; Return value:  Size  Location     Type
 17076 ;;                  1    wreg      void 
 17077 ;; Registers used:
 17078 ;;		wreg, status,2, status,0
 17079 ;; Tracked objects:
 17080 ;;		On entry : 3F/0
 17081 ;;		On exit  : 3F/0
 17082 ;;		Unchanged: 3F/0
 17083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17087 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17088 ;;Total ram usage:        2 bytes
 17089 ;; Hardware stack levels used:    1
 17090 ;; Hardware stack levels required when called:   17
 17091 ;; This function calls:
 17092 ;;		Nothing
 17093 ;; This function is called by:
 17094 ;;		_UART1_Initialize
 17095 ;; This function uses a non-reentrant model
 17096 ;;
 17097                           
 17098                           	psect	text42
 17099  00A3E6                     __ptext42:
 17100                           	opt callstack 0
 17101  00A3E6                     _UART1_SetErrorHandler:
 17102                           	opt callstack 11
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;mcc_generated_files/uart1.c: 254:     UART1_ErrorHandler = interruptHandler;
 17106                           
 17107                           ; BSR set to: 0
 17108                           ;incstack = 0
 17109  00A3E6  0060  F22C  F2F0   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 17110  00A3EC  0060  F230  F2F1   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 17111                           
 17112                           ; BSR set to: 0
 17113  00A3F2  0012               	return		;funcret
 17114  00A3F4                     __end_of_UART1_SetErrorHandler:
 17115                           	opt callstack 0
 17116                           
 17117 ;; *************** function _TMR6_Initialize *****************
 17118 ;; Defined at:
 17119 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 17120 ;; Parameters:    Size  Location     Type
 17121 ;;		None
 17122 ;; Auto vars:     Size  Location     Type
 17123 ;;		None
 17124 ;; Return value:  Size  Location     Type
 17125 ;;                  1    wreg      void 
 17126 ;; Registers used:
 17127 ;;		wreg, status,2, status,0, cstack
 17128 ;; Tracked objects:
 17129 ;;		On entry : 3F/3E
 17130 ;;		On exit  : 3F/0
 17131 ;;		Unchanged: 0/0
 17132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17137 ;;Total ram usage:        0 bytes
 17138 ;; Hardware stack levels used:    1
 17139 ;; Hardware stack levels required when called:   18
 17140 ;; This function calls:
 17141 ;;		_TMR6_SetInterruptHandler
 17142 ;; This function is called by:
 17143 ;;		_SYSTEM_Initialize
 17144 ;; This function uses a non-reentrant model
 17145 ;;
 17146                           
 17147                           	psect	text43
 17148  009C64                     __ptext43:
 17149                           	opt callstack 0
 17150  009C64                     _TMR6_Initialize:
 17151                           	opt callstack 11
 17152                           
 17153                           ; BSR set to: 62
 17154                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x06;
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;incstack = 0
 17158  009C64  0E06               	movlw	6
 17159  009C66  6E96               	movwf	150,c	;volatile
 17160                           
 17161                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x08;
 17162  009C68  0E08               	movlw	8
 17163  009C6A  6E95               	movwf	149,c	;volatile
 17164                           
 17165                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
 17166  009C6C  0E00               	movlw	0
 17167  009C6E  6E97               	movwf	151,c	;volatile
 17168                           
 17169                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0x01;
 17170  009C70  0E01               	movlw	1
 17171  009C72  6E93               	movwf	147,c	;volatile
 17172                           
 17173                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
 17174  009C74  0E00               	movlw	0
 17175  009C76  6E92               	movwf	146,c	;volatile
 17176                           
 17177                           ; BSR set to: 62
 17178                           ;mcc_generated_files/tmr6.c: 84:     PIR9bits.TMR6IF = 0;
 17179  009C78  0139               	movlb	57	; () banked
 17180  009C7A  91A9               	bcf	169,0,b	;volatile
 17181                           
 17182                           ; BSR set to: 57
 17183                           ;mcc_generated_files/tmr6.c: 87:     PIE9bits.TMR6IE = 1;
 17184  009C7C  8199               	bsf	153,0,b	;volatile
 17185                           
 17186                           ; BSR set to: 57
 17187                           ;mcc_generated_files/tmr6.c: 90:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 17188  009C7E  0EFC               	movlw	low _TMR6_DefaultInterruptHandler
 17189  009C80  0100               	movlb	0	; () banked
 17190  009C82  6F8B               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 17191  009C84  0EA5               	movlw	high _TMR6_DefaultInterruptHandler
 17192  009C86  6F8C               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17193  009C88  ECFA  F051         	call	_TMR6_SetInterruptHandler	;wreg free
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0x50;
 17197  009C8C  0E50               	movlw	80
 17198  009C8E  6E94               	movwf	148,c	;volatile
 17199                           
 17200                           ; BSR set to: 0
 17201  009C90  0012               	return		;funcret
 17202  009C92                     __end_of_TMR6_Initialize:
 17203                           	opt callstack 0
 17204                           
 17205 ;; *************** function _TMR6_SetInterruptHandler *****************
 17206 ;; Defined at:
 17207 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 17208 ;; Parameters:    Size  Location     Type
 17209 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17210 ;;		 -> lcdIrqHandler(1), TMR6_DefaultInterruptHandler(1), 
 17211 ;; Auto vars:     Size  Location     Type
 17212 ;;		None
 17213 ;; Return value:  Size  Location     Type
 17214 ;;                  1    wreg      void 
 17215 ;; Registers used:
 17216 ;;		wreg, status,2, status,0
 17217 ;; Tracked objects:
 17218 ;;		On entry : 3F/0
 17219 ;;		On exit  : 3F/0
 17220 ;;		Unchanged: 3F/0
 17221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17222 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17226 ;;Total ram usage:        2 bytes
 17227 ;; Hardware stack levels used:    1
 17228 ;; Hardware stack levels required when called:   17
 17229 ;; This function calls:
 17230 ;;		Nothing
 17231 ;; This function is called by:
 17232 ;;		_TMR6_Initialize
 17233 ;;		_LcdI2CInit
 17234 ;; This function uses a non-reentrant model
 17235 ;;
 17236                           
 17237                           	psect	text44
 17238  00A3F4                     __ptext44:
 17239                           	opt callstack 0
 17240  00A3F4                     _TMR6_SetInterruptHandler:
 17241                           	opt callstack 11
 17242                           
 17243                           ; BSR set to: 0
 17244                           ;mcc_generated_files/tmr6.c: 179:     TMR6_InterruptHandler = InterruptHandler;
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;incstack = 0
 17248  00A3F4  0060  F22C  F2E8   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 17249  00A3FA  0060  F230  F2E9   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 17250                           
 17251                           ; BSR set to: 0
 17252  00A400  0012               	return		;funcret
 17253  00A402                     __end_of_TMR6_SetInterruptHandler:
 17254                           	opt callstack 0
 17255                           
 17256 ;; *************** function _TMR4_Initialize *****************
 17257 ;; Defined at:
 17258 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 17259 ;; Parameters:    Size  Location     Type
 17260 ;;		None
 17261 ;; Auto vars:     Size  Location     Type
 17262 ;;		None
 17263 ;; Return value:  Size  Location     Type
 17264 ;;                  1    wreg      void 
 17265 ;; Registers used:
 17266 ;;		wreg, status,2, status,0, cstack
 17267 ;; Tracked objects:
 17268 ;;		On entry : 3F/0
 17269 ;;		On exit  : 3F/0
 17270 ;;		Unchanged: 0/0
 17271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17276 ;;Total ram usage:        0 bytes
 17277 ;; Hardware stack levels used:    1
 17278 ;; Hardware stack levels required when called:   18
 17279 ;; This function calls:
 17280 ;;		_TMR4_SetInterruptHandler
 17281 ;; This function is called by:
 17282 ;;		_SYSTEM_Initialize
 17283 ;; This function uses a non-reentrant model
 17284 ;;
 17285                           
 17286                           	psect	text45
 17287  009C92                     __ptext45:
 17288                           	opt callstack 0
 17289  009C92                     _TMR4_Initialize:
 17290                           	opt callstack 11
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x06;
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;incstack = 0
 17297  009C92  0E06               	movlw	6
 17298  009C94  6EA2               	movwf	162,c	;volatile
 17299                           
 17300                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x08;
 17301  009C96  0E08               	movlw	8
 17302  009C98  6EA1               	movwf	161,c	;volatile
 17303                           
 17304                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
 17305  009C9A  0E00               	movlw	0
 17306  009C9C  6EA3               	movwf	163,c	;volatile
 17307                           
 17308                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0x21;
 17309  009C9E  0E21               	movlw	33
 17310  009CA0  6E9F               	movwf	159,c	;volatile
 17311                           
 17312                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
 17313  009CA2  0E00               	movlw	0
 17314  009CA4  6E9E               	movwf	158,c	;volatile
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;mcc_generated_files/tmr4.c: 84:     PIR7bits.TMR4IF = 0;
 17318  009CA6  0139               	movlb	57	; () banked
 17319  009CA8  91A7               	bcf	167,0,b	;volatile
 17320                           
 17321                           ; BSR set to: 57
 17322                           ;mcc_generated_files/tmr4.c: 87:     PIE7bits.TMR4IE = 1;
 17323  009CAA  8197               	bsf	151,0,b	;volatile
 17324                           
 17325                           ; BSR set to: 57
 17326                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 17327  009CAC  0EFE               	movlw	low _TMR4_DefaultInterruptHandler
 17328  009CAE  0100               	movlb	0	; () banked
 17329  009CB0  6F8B               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 17330  009CB2  0EA5               	movlw	high _TMR4_DefaultInterruptHandler
 17331  009CB4  6F8C               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17332  009CB6  EC01  F052         	call	_TMR4_SetInterruptHandler	;wreg free
 17333                           
 17334                           ; BSR set to: 0
 17335                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0x50;
 17336  009CBA  0E50               	movlw	80
 17337  009CBC  6EA0               	movwf	160,c	;volatile
 17338                           
 17339                           ; BSR set to: 0
 17340  009CBE  0012               	return		;funcret
 17341  009CC0                     __end_of_TMR4_Initialize:
 17342                           	opt callstack 0
 17343                           
 17344 ;; *************** function _TMR4_SetInterruptHandler *****************
 17345 ;; Defined at:
 17346 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17349 ;;		 -> SV2DelayOpen(1), TMR4_DefaultInterruptHandler(1), 
 17350 ;; Auto vars:     Size  Location     Type
 17351 ;;		None
 17352 ;; Return value:  Size  Location     Type
 17353 ;;                  1    wreg      void 
 17354 ;; Registers used:
 17355 ;;		wreg, status,2, status,0
 17356 ;; Tracked objects:
 17357 ;;		On entry : 3F/0
 17358 ;;		On exit  : 3F/0
 17359 ;;		Unchanged: 3F/0
 17360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17361 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17364 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17365 ;;Total ram usage:        2 bytes
 17366 ;; Hardware stack levels used:    1
 17367 ;; Hardware stack levels required when called:   17
 17368 ;; This function calls:
 17369 ;;		Nothing
 17370 ;; This function is called by:
 17371 ;;		_TMR4_Initialize
 17372 ;;		_main
 17373 ;; This function uses a non-reentrant model
 17374 ;;
 17375                           
 17376                           	psect	text46
 17377  00A402                     __ptext46:
 17378                           	opt callstack 0
 17379  00A402                     _TMR4_SetInterruptHandler:
 17380                           	opt callstack 13
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 17384                           
 17385                           ; BSR set to: 0
 17386                           ;incstack = 0
 17387  00A402  0060  F22C  F2EA   	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 17388  00A408  0060  F230  F2EB   	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 17389                           
 17390                           ; BSR set to: 0
 17391  00A40E  0012               	return		;funcret
 17392  00A410                     __end_of_TMR4_SetInterruptHandler:
 17393                           	opt callstack 0
 17394                           
 17395 ;; *************** function _TMR2_Initialize *****************
 17396 ;; Defined at:
 17397 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 17398 ;; Parameters:    Size  Location     Type
 17399 ;;		None
 17400 ;; Auto vars:     Size  Location     Type
 17401 ;;		None
 17402 ;; Return value:  Size  Location     Type
 17403 ;;                  1    wreg      void 
 17404 ;; Registers used:
 17405 ;;		wreg, status,2, status,0, cstack
 17406 ;; Tracked objects:
 17407 ;;		On entry : 3F/0
 17408 ;;		On exit  : 3F/0
 17409 ;;		Unchanged: 0/0
 17410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17415 ;;Total ram usage:        0 bytes
 17416 ;; Hardware stack levels used:    1
 17417 ;; Hardware stack levels required when called:   18
 17418 ;; This function calls:
 17419 ;;		_TMR2_SetInterruptHandler
 17420 ;; This function is called by:
 17421 ;;		_SYSTEM_Initialize
 17422 ;; This function uses a non-reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text47
 17426  009CC0                     __ptext47:
 17427                           	opt callstack 0
 17428  009CC0                     _TMR2_Initialize:
 17429                           	opt callstack 11
 17430                           
 17431                           ; BSR set to: 0
 17432                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x03;
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;incstack = 0
 17436  009CC0  0E03               	movlw	3
 17437  009CC2  6EAE               	movwf	174,c	;volatile
 17438                           
 17439                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 17440  009CC4  0E00               	movlw	0
 17441  009CC6  6EAD               	movwf	173,c	;volatile
 17442                           
 17443                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 17444  009CC8  0E00               	movlw	0
 17445  009CCA  6EAF               	movwf	175,c	;volatile
 17446                           
 17447                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xF9;
 17448  009CCC  0EF9               	movlw	249
 17449  009CCE  6EAB               	movwf	171,c	;volatile
 17450                           
 17451                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 17452  009CD0  0E00               	movlw	0
 17453  009CD2  6EAA               	movwf	170,c	;volatile
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 17457  009CD4  0139               	movlb	57	; () banked
 17458  009CD6  95A4               	bcf	164,2,b	;volatile
 17459                           
 17460                           ; BSR set to: 57
 17461                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 17462  009CD8  8594               	bsf	148,2,b	;volatile
 17463                           
 17464                           ; BSR set to: 57
 17465                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 17466  009CDA  0E00               	movlw	low _TMR2_DefaultInterruptHandler
 17467  009CDC  0100               	movlb	0	; () banked
 17468  009CDE  6F8B               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 17469  009CE0  0EA6               	movlw	high _TMR2_DefaultInterruptHandler
 17470  009CE2  6F8C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17471  009CE4  EC08  F052         	call	_TMR2_SetInterruptHandler	;wreg free
 17472                           
 17473                           ; BSR set to: 0
 17474                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xDF;
 17475  009CE8  0EDF               	movlw	223
 17476  009CEA  6EAC               	movwf	172,c	;volatile
 17477                           
 17478                           ; BSR set to: 0
 17479  009CEC  0012               	return		;funcret
 17480  009CEE                     __end_of_TMR2_Initialize:
 17481                           	opt callstack 0
 17482                           
 17483 ;; *************** function _TMR2_SetInterruptHandler *****************
 17484 ;; Defined at:
 17485 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17488 ;;		 -> vMeasureIsr(1), TMR2_DefaultInterruptHandler(1), 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;		None
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  1    wreg      void 
 17493 ;; Registers used:
 17494 ;;		wreg, status,2, status,0
 17495 ;; Tracked objects:
 17496 ;;		On entry : 3F/0
 17497 ;;		On exit  : 3F/0
 17498 ;;		Unchanged: 3F/0
 17499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17504 ;;Total ram usage:        2 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; Hardware stack levels required when called:   17
 17507 ;; This function calls:
 17508 ;;		Nothing
 17509 ;; This function is called by:
 17510 ;;		_TMR2_Initialize
 17511 ;;		_vMeasureInit
 17512 ;; This function uses a non-reentrant model
 17513 ;;
 17514                           
 17515                           	psect	text48
 17516  00A410                     __ptext48:
 17517                           	opt callstack 0
 17518  00A410                     _TMR2_SetInterruptHandler:
 17519                           	opt callstack 12
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 17523                           
 17524                           ; BSR set to: 0
 17525                           ;incstack = 0
 17526  00A410  0060  F22C  F2EC   	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 17527  00A416  0060  F230  F2ED   	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 17528                           
 17529                           ; BSR set to: 0
 17530  00A41C  0012               	return		;funcret
 17531  00A41E                     __end_of_TMR2_SetInterruptHandler:
 17532                           	opt callstack 0
 17533                           
 17534 ;; *************** function _TMR1_Initialize *****************
 17535 ;; Defined at:
 17536 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;		None
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;		None
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  1    wreg      void 
 17543 ;; Registers used:
 17544 ;;		wreg, status,2, status,0
 17545 ;; Tracked objects:
 17546 ;;		On entry : 3F/0
 17547 ;;		On exit  : 3F/2
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17553 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17554 ;;Total ram usage:        2 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:   17
 17557 ;; This function calls:
 17558 ;;		Nothing
 17559 ;; This function is called by:
 17560 ;;		_SYSTEM_Initialize
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text49
 17565  009570                     __ptext49:
 17566                           	opt callstack 0
 17567  009570                     _TMR1_Initialize:
 17568                           	opt callstack 12
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;incstack = 0
 17575  009570  0E00               	movlw	0
 17576  009572  6EB3               	movwf	179,c	;volatile
 17577                           
 17578                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
 17579  009574  0E00               	movlw	0
 17580  009576  6EB4               	movwf	180,c	;volatile
 17581                           
 17582                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x09;
 17583  009578  0E09               	movlw	9
 17584  00957A  6EB5               	movwf	181,c	;volatile
 17585                           
 17586                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x00;
 17587  00957C  0E00               	movlw	0
 17588  00957E  6EB1               	movwf	177,c	;volatile
 17589                           
 17590                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
 17591  009580  0E00               	movlw	0
 17592  009582  6EB0               	movwf	176,c	;volatile
 17593                           
 17594                           ; BSR set to: 0
 17595                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
 17596  009584  0139               	movlb	57	; () banked
 17597  009586  91A4               	bcf	164,0,b	;volatile
 17598                           
 17599                           ; BSR set to: 57
 17600                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17601  009588  50B0               	movf	176,w,c	;volatile
 17602  00958A  006F FEC4  F08B    	movff	16305,??_TMR1_Initialize	;volatile
 17603  009590  0100               	movlb	0	; () banked
 17604  009592  6B8C               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 17605  009594  0060  F22C  F08C   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17606  00959A  6B8B               	clrf	??_TMR1_Initialize& (0+255),b
 17607  00959C  118B               	iorwf	??_TMR1_Initialize& (0+255),w,b
 17608  00959E  0102               	movlb	2	; () banked
 17609  0095A0  6FEE               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17610  0095A2  0100               	movlb	0	; () banked
 17611  0095A4  518C               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 17612  0095A6  0102               	movlb	2	; () banked
 17613  0095A8  6FEF               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17614                           
 17615                           ; BSR set to: 2
 17616                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x03;
 17617  0095AA  0E03               	movlw	3
 17618  0095AC  6EB2               	movwf	178,c	;volatile
 17619                           
 17620                           ; BSR set to: 2
 17621  0095AE  0012               	return		;funcret
 17622  0095B0                     __end_of_TMR1_Initialize:
 17623                           	opt callstack 0
 17624                           
 17625 ;; *************** function _TMR0_Initialize *****************
 17626 ;; Defined at:
 17627 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 17628 ;; Parameters:    Size  Location     Type
 17629 ;;		None
 17630 ;; Auto vars:     Size  Location     Type
 17631 ;;		None
 17632 ;; Return value:  Size  Location     Type
 17633 ;;                  1    wreg      void 
 17634 ;; Registers used:
 17635 ;;		wreg, status,2
 17636 ;; Tracked objects:
 17637 ;;		On entry : 3F/2
 17638 ;;		On exit  : 3F/39
 17639 ;;		Unchanged: 0/0
 17640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17645 ;;Total ram usage:        0 bytes
 17646 ;; Hardware stack levels used:    1
 17647 ;; Hardware stack levels required when called:   17
 17648 ;; This function calls:
 17649 ;;		Nothing
 17650 ;; This function is called by:
 17651 ;;		_SYSTEM_Initialize
 17652 ;; This function uses a non-reentrant model
 17653 ;;
 17654                           
 17655                           	psect	text50
 17656  00A23C                     __ptext50:
 17657                           	opt callstack 0
 17658  00A23C                     _TMR0_Initialize:
 17659                           	opt callstack 12
 17660                           
 17661                           ; BSR set to: 2
 17662                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0xA1;
 17663                           
 17664                           ; BSR set to: 2
 17665                           ;incstack = 0
 17666  00A23C  0EA1               	movlw	161
 17667  00A23E  6EB9               	movwf	185,c	;volatile
 17668                           
 17669                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0xF9;
 17670  00A240  0EF9               	movlw	249
 17671  00A242  6EB7               	movwf	183,c	;volatile
 17672                           
 17673                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
 17674  00A244  0E00               	movlw	0
 17675  00A246  6EB6               	movwf	182,c	;volatile
 17676                           
 17677                           ; BSR set to: 2
 17678                           ;mcc_generated_files/tmr0.c: 74:     PIR3bits.TMR0IF = 0;
 17679  00A248  0139               	movlb	57	; () banked
 17680  00A24A  9FA3               	bcf	163,7,b	;volatile
 17681                           
 17682                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
 17683  00A24C  0E80               	movlw	128
 17684  00A24E  6EB8               	movwf	184,c	;volatile
 17685                           
 17686                           ; BSR set to: 57
 17687  00A250  0012               	return		;funcret
 17688  00A252                     __end_of_TMR0_Initialize:
 17689                           	opt callstack 0
 17690                           
 17691 ;; *************** function _PMD_Initialize *****************
 17692 ;; Defined at:
 17693 ;;		line 81 in file "mcc_generated_files/mcc.c"
 17694 ;; Parameters:    Size  Location     Type
 17695 ;;		None
 17696 ;; Auto vars:     Size  Location     Type
 17697 ;;		None
 17698 ;; Return value:  Size  Location     Type
 17699 ;;                  1    wreg      void 
 17700 ;; Registers used:
 17701 ;;		wreg, status,2
 17702 ;; Tracked objects:
 17703 ;;		On entry : 3F/3
 17704 ;;		On exit  : 3F/39
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17711 ;;Total ram usage:        0 bytes
 17712 ;; Hardware stack levels used:    1
 17713 ;; Hardware stack levels required when called:   17
 17714 ;; This function calls:
 17715 ;;		Nothing
 17716 ;; This function is called by:
 17717 ;;		_SYSTEM_Initialize
 17718 ;; This function uses a non-reentrant model
 17719 ;;
 17720                           
 17721                           	psect	text51
 17722  009F58                     __ptext51:
 17723                           	opt callstack 0
 17724  009F58                     _PMD_Initialize:
 17725                           	opt callstack 12
 17726                           
 17727                           ; BSR set to: 3
 17728                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
 17729                           
 17730                           ; BSR set to: 57
 17731                           ;incstack = 0
 17732  009F58  0E00               	movlw	0
 17733  009F5A  0139               	movlb	57	; () banked
 17734  009F5C  6FC0               	movwf	192,b	;volatile
 17735                           
 17736                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
 17737  009F5E  0E00               	movlw	0
 17738  009F60  6FC1               	movwf	193,b	;volatile
 17739                           
 17740                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
 17741  009F62  0E00               	movlw	0
 17742  009F64  6FC2               	movwf	194,b	;volatile
 17743                           
 17744                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
 17745  009F66  0E00               	movlw	0
 17746  009F68  6FC3               	movwf	195,b	;volatile
 17747                           
 17748                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
 17749  009F6A  0E00               	movlw	0
 17750  009F6C  6FC4               	movwf	196,b	;volatile
 17751                           
 17752                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
 17753  009F6E  0E00               	movlw	0
 17754  009F70  6FC5               	movwf	197,b	;volatile
 17755                           
 17756                           ;mcc_generated_files/mcc.c: 96:     PMD6 = 0x00;
 17757  009F72  0E00               	movlw	0
 17758  009F74  6FC6               	movwf	198,b	;volatile
 17759                           
 17760                           ;mcc_generated_files/mcc.c: 98:     PMD7 = 0x00;
 17761  009F76  0E00               	movlw	0
 17762  009F78  6FC7               	movwf	199,b	;volatile
 17763                           
 17764                           ; BSR set to: 57
 17765  009F7A  0012               	return		;funcret
 17766  009F7C                     __end_of_PMD_Initialize:
 17767                           	opt callstack 0
 17768                           
 17769 ;; *************** function _PIN_MANAGER_Initialize *****************
 17770 ;; Defined at:
 17771 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 17772 ;; Parameters:    Size  Location     Type
 17773 ;;		None
 17774 ;; Auto vars:     Size  Location     Type
 17775 ;;		None
 17776 ;; Return value:  Size  Location     Type
 17777 ;;                  1    wreg      void 
 17778 ;; Registers used:
 17779 ;;		wreg, status,2
 17780 ;; Tracked objects:
 17781 ;;		On entry : 3F/39
 17782 ;;		On exit  : 3F/3A
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17789 ;;Total ram usage:        0 bytes
 17790 ;; Hardware stack levels used:    1
 17791 ;; Hardware stack levels required when called:   17
 17792 ;; This function calls:
 17793 ;;		Nothing
 17794 ;; This function is called by:
 17795 ;;		_SYSTEM_Initialize
 17796 ;; This function uses a non-reentrant model
 17797 ;;
 17798                           
 17799                           	psect	text52
 17800  007E24                     __ptext52:
 17801                           	opt callstack 0
 17802  007E24                     _PIN_MANAGER_Initialize:
 17803                           	opt callstack 12
 17804                           
 17805                           ; BSR set to: 57
 17806                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 17807                           
 17808                           ; BSR set to: 57
 17809                           ;incstack = 0
 17810  007E24  0E00               	movlw	0
 17811  007E26  6EBE               	movwf	190,c	;volatile
 17812                           
 17813                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 17814  007E28  0E00               	movlw	0
 17815  007E2A  6EBD               	movwf	189,c	;volatile
 17816                           
 17817                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 17818  007E2C  0E00               	movlw	0
 17819  007E2E  6EBA               	movwf	186,c	;volatile
 17820                           
 17821                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 17822  007E30  0E00               	movlw	0
 17823  007E32  6EBB               	movwf	187,c	;volatile
 17824                           
 17825                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 17826  007E34  0E00               	movlw	0
 17827  007E36  6EBC               	movwf	188,c	;volatile
 17828                           
 17829                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 17830  007E38  0E07               	movlw	7
 17831  007E3A  6EC6               	movwf	198,c	;volatile
 17832                           
 17833                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
 17834  007E3C  0E00               	movlw	0
 17835  007E3E  6EC2               	movwf	194,c	;volatile
 17836                           
 17837                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC0;
 17838  007E40  0EC0               	movlw	192
 17839  007E42  6EC3               	movwf	195,c	;volatile
 17840                           
 17841                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xF5;
 17842  007E44  0EF5               	movlw	245
 17843  007E46  6EC4               	movwf	196,c	;volatile
 17844                           
 17845                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xBE;
 17846  007E48  0EBE               	movlw	190
 17847  007E4A  6EC5               	movwf	197,c	;volatile
 17848                           
 17849                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 17850  007E4C  0E00               	movlw	0
 17851  007E4E  013A               	movlb	58	; () banked
 17852  007E50  6F70               	movwf	112,b	;volatile
 17853                           
 17854                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 17855  007E52  0E00               	movlw	0
 17856  007E54  6F60               	movwf	96,b	;volatile
 17857                           
 17858                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x59;
 17859  007E56  0E59               	movlw	89
 17860  007E58  6F50               	movwf	80,b	;volatile
 17861                           
 17862                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 17863  007E5A  0E07               	movlw	7
 17864  007E5C  6F80               	movwf	128,b	;volatile
 17865                           
 17866                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
 17867  007E5E  0E00               	movlw	0
 17868  007E60  6F40               	movwf	64,b	;volatile
 17869                           
 17870                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0xBE;
 17871  007E62  0EBE               	movlw	190
 17872  007E64  6F71               	movwf	113,b	;volatile
 17873                           
 17874                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 17875  007E66  0E00               	movlw	0
 17876  007E68  6F81               	movwf	129,b	;volatile
 17877                           
 17878                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 17879  007E6A  0E00               	movlw	0
 17880  007E6C  6F51               	movwf	81,b	;volatile
 17881                           
 17882                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 17883  007E6E  0E00               	movlw	0
 17884  007E70  6F41               	movwf	65,b	;volatile
 17885                           
 17886                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0xF4;
 17887  007E72  0EF4               	movlw	244
 17888  007E74  6F61               	movwf	97,b	;volatile
 17889                           
 17890                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 17891  007E76  0E00               	movlw	0
 17892  007E78  6F5A               	movwf	90,b	;volatile
 17893                           
 17894                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 17895  007E7A  0E00               	movlw	0
 17896  007E7C  6F5B               	movwf	91,b	;volatile
 17897                           
 17898                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 17899  007E7E  0E00               	movlw	0
 17900  007E80  6F6A               	movwf	106,b	;volatile
 17901                           
 17902                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 17903  007E82  0E00               	movlw	0
 17904  007E84  6F6B               	movwf	107,b	;volatile
 17905                           
 17906                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 17907  007E86  0E00               	movlw	0
 17908  007E88  6F7A               	movwf	122,b	;volatile
 17909                           
 17910                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 17911  007E8A  0E00               	movlw	0
 17912  007E8C  6F7B               	movwf	123,b	;volatile
 17913                           
 17914                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 17915  007E8E  0E00               	movlw	0
 17916  007E90  6F82               	movwf	130,b	;volatile
 17917                           
 17918                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 17919  007E92  0E00               	movlw	0
 17920  007E94  6F42               	movwf	66,b	;volatile
 17921                           
 17922                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x06;
 17923  007E96  0E06               	movlw	6
 17924  007E98  6F52               	movwf	82,b	;volatile
 17925                           
 17926                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 17927  007E9A  0E00               	movlw	0
 17928  007E9C  6F62               	movwf	98,b	;volatile
 17929                           
 17930                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 17931  007E9E  0E00               	movlw	0
 17932  007EA0  6F72               	movwf	114,b	;volatile
 17933                           
 17934                           ; BSR set to: 58
 17935                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 17936  007EA2  6943               	setf	67,b	;volatile
 17937                           
 17938                           ; BSR set to: 58
 17939                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 17940  007EA4  6953               	setf	83,b	;volatile
 17941                           
 17942                           ; BSR set to: 58
 17943                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 17944  007EA6  6963               	setf	99,b	;volatile
 17945                           
 17946                           ; BSR set to: 58
 17947                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 17948  007EA8  6973               	setf	115,b	;volatile
 17949                           
 17950                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 17951  007EAA  0E07               	movlw	7
 17952  007EAC  6F83               	movwf	131,b	;volatile
 17953                           
 17954                           ; BSR set to: 58
 17955                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 17956  007EAE  6944               	setf	68,b	;volatile
 17957                           
 17958                           ; BSR set to: 58
 17959                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 17960  007EB0  6954               	setf	84,b	;volatile
 17961                           
 17962                           ; BSR set to: 58
 17963                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 17964  007EB2  6964               	setf	100,b	;volatile
 17965                           
 17966                           ; BSR set to: 58
 17967                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 17968  007EB4  6974               	setf	116,b	;volatile
 17969                           
 17970                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 17971  007EB6  0E0F               	movlw	15
 17972  007EB8  6F84               	movwf	132,b	;volatile
 17973                           
 17974                           ;mcc_generated_files/pin_manager.c: 137:     I2C2SCLPPS = 0x09;
 17975  007EBA  0E09               	movlw	9
 17976  007EBC  6FE3               	movwf	227,b	;volatile
 17977                           
 17978                           ;mcc_generated_files/pin_manager.c: 138:     RB1PPS = 0x23;
 17979  007EBE  0E23               	movlw	35
 17980  007EC0  6F09               	movwf	9,b	;volatile
 17981                           
 17982                           ;mcc_generated_files/pin_manager.c: 139:     T6INPPS = 0x0F;
 17983  007EC2  0E0F               	movlw	15
 17984  007EC4  6FCC               	movwf	204,b	;volatile
 17985                           
 17986                           ;mcc_generated_files/pin_manager.c: 140:     RB2PPS = 0x24;
 17987  007EC6  0E24               	movlw	36
 17988  007EC8  6F0A               	movwf	10,b	;volatile
 17989                           
 17990                           ;mcc_generated_files/pin_manager.c: 141:     RC1PPS = 0x13;
 17991  007ECA  0E13               	movlw	19
 17992  007ECC  6F11               	movwf	17,b	;volatile
 17993                           
 17994                           ;mcc_generated_files/pin_manager.c: 142:     U1RXPPS = 0x10;
 17995  007ECE  0E10               	movlw	16
 17996  007ED0  6FE5               	movwf	229,b	;volatile
 17997                           
 17998                           ;mcc_generated_files/pin_manager.c: 143:     T4INPPS = 0x15;
 17999  007ED2  0E15               	movlw	21
 18000  007ED4  6FCB               	movwf	203,b	;volatile
 18001                           
 18002                           ;mcc_generated_files/pin_manager.c: 144:     I2C2SDAPPS = 0x0A;
 18003  007ED6  0E0A               	movlw	10
 18004  007ED8  6FE4               	movwf	228,b	;volatile
 18005                           
 18006                           ; BSR set to: 58
 18007  007EDA  0012               	return		;funcret
 18008  007EDC                     __end_of_PIN_MANAGER_Initialize:
 18009                           	opt callstack 0
 18010                           
 18011 ;; *************** function _OSCILLATOR_Initialize *****************
 18012 ;; Defined at:
 18013 ;;		line 67 in file "mcc_generated_files/mcc.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;		None
 18016 ;; Auto vars:     Size  Location     Type
 18017 ;;		None
 18018 ;; Return value:  Size  Location     Type
 18019 ;;                  1    wreg      void 
 18020 ;; Registers used:
 18021 ;;		wreg, status,2
 18022 ;; Tracked objects:
 18023 ;;		On entry : 3F/3A
 18024 ;;		On exit  : 3F/39
 18025 ;;		Unchanged: 0/0
 18026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;Total ram usage:        0 bytes
 18032 ;; Hardware stack levels used:    1
 18033 ;; Hardware stack levels required when called:   17
 18034 ;; This function calls:
 18035 ;;		Nothing
 18036 ;; This function is called by:
 18037 ;;		_SYSTEM_Initialize
 18038 ;; This function uses a non-reentrant model
 18039 ;;
 18040                           
 18041                           	psect	text53
 18042  00A1E0                     __ptext53:
 18043                           	opt callstack 0
 18044  00A1E0                     _OSCILLATOR_Initialize:
 18045                           	opt callstack 12
 18046                           
 18047                           ; BSR set to: 58
 18048                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x60;
 18049                           
 18050                           ; BSR set to: 58
 18051                           ;incstack = 0
 18052  00A1E0  0E60               	movlw	96
 18053  00A1E2  0139               	movlb	57	; () banked
 18054  00A1E4  6FD9               	movwf	217,b	;volatile
 18055                           
 18056                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
 18057  00A1E6  0E00               	movlw	0
 18058  00A1E8  6FDB               	movwf	219,b	;volatile
 18059                           
 18060                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
 18061  00A1EA  0E00               	movlw	0
 18062  00A1EC  6FDD               	movwf	221,b	;volatile
 18063                           
 18064                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
 18065  00A1EE  0E08               	movlw	8
 18066  00A1F0  6FDF               	movwf	223,b	;volatile
 18067                           
 18068                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
 18069  00A1F2  0E00               	movlw	0
 18070  00A1F4  6FDE               	movwf	222,b	;volatile
 18071                           
 18072                           ; BSR set to: 57
 18073  00A1F6  0012               	return		;funcret
 18074  00A1F8                     __end_of_OSCILLATOR_Initialize:
 18075                           	opt callstack 0
 18076                           
 18077 ;; *************** function _INTERRUPT_Initialize *****************
 18078 ;; Defined at:
 18079 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18080 ;; Parameters:    Size  Location     Type
 18081 ;;		None
 18082 ;; Auto vars:     Size  Location     Type
 18083 ;;		None
 18084 ;; Return value:  Size  Location     Type
 18085 ;;                  1    wreg      void 
 18086 ;; Registers used:
 18087 ;;		None
 18088 ;; Tracked objects:
 18089 ;;		On entry : 3F/3
 18090 ;;		On exit  : 3F/3
 18091 ;;		Unchanged: 3E/0
 18092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18097 ;;Total ram usage:        0 bytes
 18098 ;; Hardware stack levels used:    1
 18099 ;; Hardware stack levels required when called:   17
 18100 ;; This function calls:
 18101 ;;		Nothing
 18102 ;; This function is called by:
 18103 ;;		_SYSTEM_Initialize
 18104 ;; This function uses a non-reentrant model
 18105 ;;
 18106                           
 18107                           	psect	text54
 18108  00A5CE                     __ptext54:
 18109                           	opt callstack 0
 18110  00A5CE                     _INTERRUPT_Initialize:
 18111                           	opt callstack 12
 18112                           
 18113                           ; BSR set to: 3
 18114                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
 18115                           
 18116                           ; BSR set to: 57
 18117                           ;incstack = 0
 18118  00A5CE  9AD2               	bcf	210,5,c	;volatile
 18119                           
 18120                           ; BSR set to: 3
 18121  00A5D0  0012               	return		;funcret
 18122  00A5D2                     __end_of_INTERRUPT_Initialize:
 18123                           	opt callstack 0
 18124                           
 18125 ;; *************** function _I2C2_Initialize *****************
 18126 ;; Defined at:
 18127 ;;		line 183 in file "mcc_generated_files/i2c2_master.c"
 18128 ;; Parameters:    Size  Location     Type
 18129 ;;		None
 18130 ;; Auto vars:     Size  Location     Type
 18131 ;;		None
 18132 ;; Return value:  Size  Location     Type
 18133 ;;                  1    wreg      void 
 18134 ;; Registers used:
 18135 ;;		wreg, status,2
 18136 ;; Tracked objects:
 18137 ;;		On entry : 3F/0
 18138 ;;		On exit  : 3F/3D
 18139 ;;		Unchanged: 0/0
 18140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18145 ;;Total ram usage:        0 bytes
 18146 ;; Hardware stack levels used:    1
 18147 ;; Hardware stack levels required when called:   17
 18148 ;; This function calls:
 18149 ;;		Nothing
 18150 ;; This function is called by:
 18151 ;;		_SYSTEM_Initialize
 18152 ;; This function uses a non-reentrant model
 18153 ;;
 18154                           
 18155                           	psect	text55
 18156  009F7C                     __ptext55:
 18157                           	opt callstack 0
 18158  009F7C                     _I2C2_Initialize:
 18159                           	opt callstack 12
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;mcc_generated_files/i2c2_master.c: 186:     I2C2CON0 = 0x04;
 18163                           
 18164                           ; BSR set to: 3
 18165                           ;incstack = 0
 18166  009F7C  0E04               	movlw	4
 18167  009F7E  013D               	movlb	61	; () banked
 18168  009F80  6F5D               	movwf	93,b	;volatile
 18169                           
 18170                           ;mcc_generated_files/i2c2_master.c: 188:     I2C2CON1 = 0x80;
 18171  009F82  0E80               	movlw	128
 18172  009F84  6F5E               	movwf	94,b	;volatile
 18173                           
 18174                           ;mcc_generated_files/i2c2_master.c: 190:     I2C2CON2 = 0x18;
 18175  009F86  0E18               	movlw	24
 18176  009F88  6F5F               	movwf	95,b	;volatile
 18177                           
 18178                           ;mcc_generated_files/i2c2_master.c: 192:     I2C2CLK = 0x03;
 18179  009F8A  0E03               	movlw	3
 18180  009F8C  6F65               	movwf	101,b	;volatile
 18181                           
 18182                           ;mcc_generated_files/i2c2_master.c: 194:     I2C2PIR = 0x00;
 18183  009F8E  0E00               	movlw	0
 18184  009F90  6F63               	movwf	99,b	;volatile
 18185                           
 18186                           ;mcc_generated_files/i2c2_master.c: 196:     I2C2PIE = 0x00;
 18187  009F92  0E00               	movlw	0
 18188  009F94  6F64               	movwf	100,b	;volatile
 18189                           
 18190                           ;mcc_generated_files/i2c2_master.c: 198:     I2C2ERR = 0x00;
 18191  009F96  0E00               	movlw	0
 18192  009F98  6F60               	movwf	96,b	;volatile
 18193                           
 18194                           ; BSR set to: 61
 18195                           ;mcc_generated_files/i2c2_master.c: 200:     I2C2CNT = 0xFF;
 18196  009F9A  6956               	setf	86,b	;volatile
 18197                           
 18198                           ; BSR set to: 61
 18199  009F9C  0012               	return		;funcret
 18200  009F9E                     __end_of_I2C2_Initialize:
 18201                           	opt callstack 0
 18202                           
 18203 ;; *************** function _FVR_Initialize *****************
 18204 ;; Defined at:
 18205 ;;		line 58 in file "mcc_generated_files/fvr.c"
 18206 ;; Parameters:    Size  Location     Type
 18207 ;;		None
 18208 ;; Auto vars:     Size  Location     Type
 18209 ;;		None
 18210 ;; Return value:  Size  Location     Type
 18211 ;;                  1    wreg      void 
 18212 ;; Registers used:
 18213 ;;		wreg, status,2
 18214 ;; Tracked objects:
 18215 ;;		On entry : 3F/39
 18216 ;;		On exit  : 3F/3E
 18217 ;;		Unchanged: 0/0
 18218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18223 ;;Total ram usage:        0 bytes
 18224 ;; Hardware stack levels used:    1
 18225 ;; Hardware stack levels required when called:   17
 18226 ;; This function calls:
 18227 ;;		Nothing
 18228 ;; This function is called by:
 18229 ;;		_SYSTEM_Initialize
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           	psect	text56
 18234  00A54C                     __ptext56:
 18235                           	opt callstack 0
 18236  00A54C                     _FVR_Initialize:
 18237                           	opt callstack 12
 18238                           
 18239                           ; BSR set to: 57
 18240                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x83;
 18241                           
 18242                           ; BSR set to: 61
 18243                           ;incstack = 0
 18244  00A54C  0E83               	movlw	131
 18245  00A54E  013E               	movlb	62	; () banked
 18246  00A550  6FC1               	movwf	193,b	;volatile
 18247                           
 18248                           ; BSR set to: 62
 18249  00A552  0012               	return		;funcret
 18250  00A554                     __end_of_FVR_Initialize:
 18251                           	opt callstack 0
 18252                           
 18253 ;; *************** function _ADCC_Initialize *****************
 18254 ;; Defined at:
 18255 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18256 ;; Parameters:    Size  Location     Type
 18257 ;;		None
 18258 ;; Auto vars:     Size  Location     Type
 18259 ;;		None
 18260 ;; Return value:  Size  Location     Type
 18261 ;;                  1    wreg      void 
 18262 ;; Registers used:
 18263 ;;		wreg, status,2, status,0, cstack
 18264 ;; Tracked objects:
 18265 ;;		On entry : 3F/0
 18266 ;;		On exit  : 3F/0
 18267 ;;		Unchanged: 0/0
 18268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18273 ;;Total ram usage:        0 bytes
 18274 ;; Hardware stack levels used:    1
 18275 ;; Hardware stack levels required when called:   18
 18276 ;; This function calls:
 18277 ;;		_ADCC_SetADTIInterruptHandler
 18278 ;; This function is called by:
 18279 ;;		_SYSTEM_Initialize
 18280 ;; This function uses a non-reentrant model
 18281 ;;
 18282                           
 18283                           	psect	text57
 18284  008A5C                     __ptext57:
 18285                           	opt callstack 0
 18286  008A5C                     _ADCC_Initialize:
 18287                           	opt callstack 11
 18288                           
 18289                           ; BSR set to: 0
 18290                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
 18291                           
 18292                           ; BSR set to: 62
 18293                           ;incstack = 0
 18294  008A5C  013E               	movlb	62	; () banked
 18295  008A5E  69DE               	setf	222,b	;volatile
 18296                           
 18297                           ; BSR set to: 62
 18298                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
 18299  008A60  0E7F               	movlw	127
 18300  008A62  6FDF               	movwf	223,b	;volatile
 18301                           
 18302                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 18303  008A64  0E00               	movlw	0
 18304  008A66  6FE0               	movwf	224,b	;volatile
 18305                           
 18306                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
 18307  008A68  0E80               	movlw	128
 18308  008A6A  6FE1               	movwf	225,b	;volatile
 18309                           
 18310                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 18311  008A6C  0E00               	movlw	0
 18312  008A6E  6FE4               	movwf	228,b	;volatile
 18313                           
 18314                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 18315  008A70  0E00               	movlw	0
 18316  008A72  6FE5               	movwf	229,b	;volatile
 18317                           
 18318                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 18319  008A74  0E00               	movlw	0
 18320  008A76  6FEA               	movwf	234,b	;volatile
 18321                           
 18322                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
 18323  008A78  0E10               	movlw	16
 18324  008A7A  6FEC               	movwf	236,b	;volatile
 18325                           
 18326                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 18327  008A7C  0E00               	movlw	0
 18328  008A7E  6FF1               	movwf	241,b	;volatile
 18329                           
 18330                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
 18331  008A80  0E80               	movlw	128
 18332  008A82  6FF3               	movwf	243,b	;volatile
 18333                           
 18334                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 18335  008A84  0E00               	movlw	0
 18336  008A86  6FF4               	movwf	244,b	;volatile
 18337                           
 18338                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 18339  008A88  0E00               	movlw	0
 18340  008A8A  6FF5               	movwf	245,b	;volatile
 18341                           
 18342                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 18343  008A8C  0E00               	movlw	0
 18344  008A8E  6FF6               	movwf	246,b	;volatile
 18345                           
 18346                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 18347  008A90  0E00               	movlw	0
 18348  008A92  6FF7               	movwf	247,b	;volatile
 18349                           
 18350                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 18351  008A94  0E00               	movlw	0
 18352  008A96  6FF9               	movwf	249,b	;volatile
 18353                           
 18354                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
 18355  008A98  0E43               	movlw	67
 18356  008A9A  6FFA               	movwf	250,b	;volatile
 18357                           
 18358                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
 18359  008A9C  0E27               	movlw	39
 18360  008A9E  6FFB               	movwf	251,b	;volatile
 18361                           
 18362                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 18363  008AA0  0E00               	movlw	0
 18364  008AA2  6FFC               	movwf	252,b	;volatile
 18365                           
 18366                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
 18367  008AA4  0E03               	movlw	3
 18368  008AA6  6FFD               	movwf	253,b	;volatile
 18369                           
 18370                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 18371  008AA8  0E00               	movlw	0
 18372  008AAA  6FFE               	movwf	254,b	;volatile
 18373                           
 18374                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x33;
 18375  008AAC  0E33               	movlw	51
 18376  008AAE  6FFF               	movwf	255,b	;volatile
 18377                           
 18378                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 18379  008AB0  0E84               	movlw	132
 18380  008AB2  6FF8               	movwf	248,b	;volatile
 18381                           
 18382                           ; BSR set to: 62
 18383                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
 18384  008AB4  0139               	movlb	57	; () banked
 18385  008AB6  97A1               	bcf	161,3,b	;volatile
 18386                           
 18387                           ; BSR set to: 57
 18388                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
 18389  008AB8  8791               	bsf	145,3,b	;volatile
 18390                           
 18391                           ; BSR set to: 57
 18392                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 18393  008ABA  0E02               	movlw	low _ADCC_DefaultInterruptHandler
 18394  008ABC  0100               	movlb	0	; () banked
 18395  008ABE  6F8B               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 18396  008AC0  0EA6               	movlw	high _ADCC_DefaultInterruptHandler
 18397  008AC2  6F8C               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 18398  008AC4  EC0F  F052         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 18399                           
 18400                           ; BSR set to: 0
 18401  008AC8  0012               	return		;funcret
 18402  008ACA                     __end_of_ADCC_Initialize:
 18403                           	opt callstack 0
 18404                           
 18405 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 18406 ;; Defined at:
 18407 ;;		line 316 in file "mcc_generated_files/adcc.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 18410 ;;		 -> adcCaptureIsr(1), ADCC_DefaultInterruptHandler(1), 
 18411 ;; Auto vars:     Size  Location     Type
 18412 ;;		None
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  1    wreg      void 
 18415 ;; Registers used:
 18416 ;;		wreg, status,2, status,0
 18417 ;; Tracked objects:
 18418 ;;		On entry : 3F/0
 18419 ;;		On exit  : 3F/0
 18420 ;;		Unchanged: 3F/0
 18421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18426 ;;Total ram usage:        2 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; Hardware stack levels required when called:   17
 18429 ;; This function calls:
 18430 ;;		Nothing
 18431 ;; This function is called by:
 18432 ;;		_ADCC_Initialize
 18433 ;;		_aCaptureInit
 18434 ;; This function uses a non-reentrant model
 18435 ;;
 18436                           
 18437                           	psect	text58
 18438  00A41E                     __ptext58:
 18439                           	opt callstack 0
 18440  00A41E                     _ADCC_SetADTIInterruptHandler:
 18441                           	opt callstack 12
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;incstack = 0
 18448  00A41E  0060  F22C  F2F8   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 18449  00A424  0060  F230  F2F9   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 18450                           
 18451                           ; BSR set to: 0
 18452  00A42A  0012               	return		;funcret
 18453  00A42C                     __end_of_ADCC_SetADTIInterruptHandler:
 18454                           	opt callstack 0
 18455                           
 18456 ;; *************** function _MonitorMsgSend *****************
 18457 ;; Defined at:
 18458 ;;		line 127 in file "monComm.c"
 18459 ;; Parameters:    Size  Location     Type
 18460 ;;  state           1    wreg     enum E16832
 18461 ;; Auto vars:     Size  Location     Type
 18462 ;;  state           1  114[BANK1 ] enum E16832
 18463 ;; Return value:  Size  Location     Type
 18464 ;;                  1    wreg      void 
 18465 ;; Registers used:
 18466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18467 ;; Tracked objects:
 18468 ;;		On entry : 3D/3
 18469 ;;		On exit  : 3E/0
 18470 ;;		Unchanged: 0/0
 18471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18473 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18475 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18476 ;;Total ram usage:        1 bytes
 18477 ;; Hardware stack levels used:    1
 18478 ;; Hardware stack levels required when called:   31
 18479 ;; This function calls:
 18480 ;;		_MonitorMsgForcedSend
 18481 ;;		_timeElapsedR
 18482 ;; This function is called by:
 18483 ;;		_main
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           	psect	text59
 18488  009DFE                     __ptext59:
 18489                           	opt callstack 0
 18490  009DFE                     _MonitorMsgSend:
 18491                           	opt callstack 0
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;incstack = 0
 18495 ;; hardware stack exceeded
 18496                           ;MonitorMsgSend@state stored from wreg
 18497  009DFE  0101               	movlb	1	; () banked
 18498  009E00  6F72               	movwf	MonitorMsgSend@state& (0+255),b
 18499                           
 18500                           ;monComm.c: 128:     if (timeElapsedR(&monTstamp, ((time_t) 50*1))) {
 18501  009E02  0ECB               	movlw	low _monTstamp
 18502  009E04  0100               	movlb	0	; () banked
 18503  009E06  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 18504  009E08  0E02               	movlw	high _monTstamp
 18505  009E0A  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 18506  009E0C  0E00               	movlw	0
 18507  009E0E  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 18508  009E10  0E32               	movlw	50
 18509  009E12  6F95               	movwf	timeElapsedR@duration& (0+255),b
 18510  009E14  EC66  F046         	call	_timeElapsedR	;wreg free
 18511  009E18  0900               	iorlw	0
 18512  009E1A  B4D8               	btfsc	status,2,c
 18513  009E1C  0012               	return	
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;monComm.c: 129:         MonitorMsgForcedSend(state);
 18517  009E1E  0101               	movlb	1	; () banked
 18518  009E20  5172               	movf	MonitorMsgSend@state& (0+255),w,b
 18519  009E22  ECD3  F035         	call	_MonitorMsgForcedSend
 18520  009E26  0012               	return		;funcret
 18521  009E28                     __end_of_MonitorMsgSend:
 18522                           	opt callstack 0
 18523                           
 18524 ;; *************** function _timeElapsedR *****************
 18525 ;; Defined at:
 18526 ;;		line 30 in file "time.c"
 18527 ;; Parameters:    Size  Location     Type
 18528 ;;  prevTime        2   51[BANK0 ] PTR unsigned short 
 18529 ;;		 -> monTstamp(2), SelfTest@tstamp(2), flowChk@tstamp(2), pressureSensorChk@tstamp(2), 
 18530 ;;		 -> main@printTime(2), rCycleTime(2), 
 18531 ;;  duration        2   53[BANK0 ] unsigned short 
 18532 ;; Auto vars:     Size  Location     Type
 18533 ;;  intTime         2   59[BANK0 ] unsigned short 
 18534 ;;  intDur          2   57[BANK0 ] unsigned short 
 18535 ;; Return value:  Size  Location     Type
 18536 ;;                  1    wreg      _Bool 
 18537 ;; Registers used:
 18538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18539 ;; Tracked objects:
 18540 ;;		On entry : 3F/0
 18541 ;;		On exit  : 3F/0
 18542 ;;		Unchanged: 0/0
 18543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18545 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18547 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18548 ;;Total ram usage:       10 bytes
 18549 ;; Hardware stack levels used:    1
 18550 ;; Hardware stack levels required when called:   18
 18551 ;; This function calls:
 18552 ;;		_TMR1_ReadTimer
 18553 ;; This function is called by:
 18554 ;;		_main
 18555 ;;		_pressureSensorChk
 18556 ;;		_flowChk
 18557 ;;		_SelfTest
 18558 ;;		_MonitorMsgSend
 18559 ;; This function uses a non-reentrant model
 18560 ;;
 18561                           
 18562                           	psect	text60
 18563  008CCC                     __ptext60:
 18564                           	opt callstack 0
 18565  008CCC                     _timeElapsedR:
 18566                           	opt callstack 12
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;time.c: 31:     time_t intTime, intDur;;time.c: 32:     intTime = TMR1_ReadTimer();
 18570                           
 18571                           ;incstack = 0
 18572  008CCC  ECD3  F04E         	call	_TMR1_ReadTimer	;wreg free
 18573  008CD0  0060  F22C  F09B   	movff	?_TMR1_ReadTimer,timeElapsedR@intTime
 18574  008CD6  0060  F230  F09C   	movff	?_TMR1_ReadTimer+1,timeElapsedR@intTime+1
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;time.c: 33:     intDur = intTime - *prevTime;
 18578  008CDC  0060  F24F  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 18579  008CE2  0060  F253  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 18580  008CE8  006F FF78  F097    	movff	postinc2,??_timeElapsedR
 18581  008CEE  006F FF74  F098    	movff	postdec2,??_timeElapsedR+1
 18582  008CF4  5197               	movf	??_timeElapsedR& (0+255),w,b
 18583  008CF6  5D9B               	subwf	timeElapsedR@intTime& (0+255),w,b
 18584  008CF8  6F99               	movwf	timeElapsedR@intDur& (0+255),b
 18585  008CFA  5198               	movf	(??_timeElapsedR+1)& (0+255),w,b
 18586  008CFC  599C               	subwfb	(timeElapsedR@intTime+1)& (0+255),w,b
 18587  008CFE  6F9A               	movwf	(timeElapsedR@intDur+1)& (0+255),b
 18588                           
 18589                           ; BSR set to: 0
 18590                           ;time.c: 34:     if (intDur < duration) {
 18591  008D00  5195               	movf	timeElapsedR@duration& (0+255),w,b
 18592  008D02  5D99               	subwf	timeElapsedR@intDur& (0+255),w,b
 18593  008D04  5196               	movf	(timeElapsedR@duration+1)& (0+255),w,b
 18594  008D06  599A               	subwfb	(timeElapsedR@intDur+1)& (0+255),w,b
 18595  008D08  B0D8               	btfsc	status,0,c
 18596  008D0A  D002               	goto	l18075
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;time.c: 35:         return 0;
 18600  008D0C  0E00               	movlw	0
 18601  008D0E  0012               	return	
 18602  008D10                     l18075:
 18603                           
 18604                           ; BSR set to: 0
 18605                           ;time.c: 37:         *prevTime = intTime;
 18606  008D10  0060  F24F  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 18607  008D16  0060  F253  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 18608  008D1C  0060  F26F  FFDE   	movff	timeElapsedR@intTime,postinc2
 18609  008D22  0060  F273  FFDD   	movff	timeElapsedR@intTime+1,postdec2
 18610                           
 18611                           ; BSR set to: 0
 18612                           ;time.c: 38:         return 1;
 18613  008D28  0E01               	movlw	1
 18614                           
 18615                           ; BSR set to: 0
 18616  008D2A  0012               	return		;funcret
 18617  008D2C                     __end_of_timeElapsedR:
 18618                           	opt callstack 0
 18619                           
 18620 ;; *************** function _MonitorInit *****************
 18621 ;; Defined at:
 18622 ;;		line 17 in file "monComm.c"
 18623 ;; Parameters:    Size  Location     Type
 18624 ;;		None
 18625 ;; Auto vars:     Size  Location     Type
 18626 ;;		None
 18627 ;; Return value:  Size  Location     Type
 18628 ;;                  1    wreg      void 
 18629 ;; Registers used:
 18630 ;;		None
 18631 ;; Tracked objects:
 18632 ;;		On entry : 3F/1
 18633 ;;		On exit  : 3F/1
 18634 ;;		Unchanged: 3F/0
 18635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18640 ;;Total ram usage:        0 bytes
 18641 ;; Hardware stack levels used:    1
 18642 ;; Hardware stack levels required when called:   17
 18643 ;; This function calls:
 18644 ;;		Nothing
 18645 ;; This function is called by:
 18646 ;;		_main
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text61
 18651  00A5FA                     __ptext61:
 18652                           	opt callstack 0
 18653  00A5FA                     _MonitorInit:
 18654                           	opt callstack 13
 18655                           
 18656                           ; BSR set to: 1
 18657                           
 18658                           ; BSR set to: 0
 18659                           ;incstack = 0
 18660  00A5FA  0012               	return		;funcret
 18661  00A5FC                     __end_of_MonitorInit:
 18662                           	opt callstack 0
 18663                           
 18664 ;; *************** function _MenuMng *****************
 18665 ;; Defined at:
 18666 ;;		line 46 in file "menu.c"
 18667 ;; Parameters:    Size  Location     Type
 18668 ;;		None
 18669 ;; Auto vars:     Size  Location     Type
 18670 ;;  keyPress        1  110[BANK1 ] char 
 18671 ;; Return value:  Size  Location     Type
 18672 ;;                  1    wreg      void 
 18673 ;; Registers used:
 18674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18675 ;; Tracked objects:
 18676 ;;		On entry : 0/1
 18677 ;;		On exit  : 3E/0
 18678 ;;		Unchanged: 0/0
 18679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18681 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18682 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18683 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18684 ;;Total ram usage:       15 bytes
 18685 ;; Hardware stack levels used:    1
 18686 ;; Hardware stack levels required when called:   26
 18687 ;; This function calls:
 18688 ;;		___awdiv
 18689 ;;		___lwdiv
 18690 ;;		_keyRead
 18691 ;;		_printf
 18692 ;;		_timeElapsed
 18693 ;;		_timeGet
 18694 ;; This function is called by:
 18695 ;;		_main
 18696 ;; This function uses a non-reentrant model
 18697 ;;
 18698                           
 18699                           	psect	text62
 18700  0029B0                     __ptext62:
 18701                           	opt callstack 0
 18702  0029B0                     _MenuMng:
 18703                           	opt callstack 4
 18704                           
 18705                           ;menu.c: 48:     int8_t keyPress;;menu.c: 49:     keyPress = keyRead();
 18706                           
 18707                           ; BSR set to: 1
 18708                           ;incstack = 0
 18709  0029B0  ECEC  F049         	call	_keyRead	;wreg free
 18710  0029B4  0101               	movlb	1	; () banked
 18711  0029B6  6F6E               	movwf	MenuMng@keyPress& (0+255),b
 18712                           
 18713                           ; BSR set to: 1
 18714                           ;menu.c: 52:     if ((menuStatus == CFG_IDLE) && (keyPress == 3)){
 18715  0029B8  51B7               	movf	_menuStatus& (0+255),w,b
 18716  0029BA  A4D8               	btfss	status,2,c
 18717  0029BC  D012               	goto	l19689
 18718                           
 18719                           ; BSR set to: 1
 18720  0029BE  0E03               	movlw	3
 18721  0029C0  196E               	xorwf	MenuMng@keyPress& (0+255),w,b
 18722  0029C2  A4D8               	btfss	status,2,c
 18723  0029C4  D00E               	goto	l19689
 18724                           
 18725                           ; BSR set to: 1
 18726                           ;menu.c: 53:         menuStatus = CFG_ENGMODE;
 18727  0029C6  0E08               	movlw	8
 18728  0029C8  6FB7               	movwf	_menuStatus& (0+255),b
 18729                           
 18730                           ; BSR set to: 1
 18731                           ;menu.c: 54:         menuTstamp = timeGet();
 18732  0029CA  EC7B  F051         	call	_timeGet	;wreg free
 18733  0029CE  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 18734  0029D4  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;menu.c: 55:         lcdPrintBR = 1;
 18738  0029DA  0E01               	movlw	1
 18739  0029DC  0101               	movlb	1	; () banked
 18740  0029DE  6FCD               	movwf	_lcdPrintBR& (0+255),b
 18741                           
 18742                           ;menu.c: 56:     } else if ((keyPress >= 0) && (keyPress != 4)) {
 18743  0029E0  0012               	return	
 18744  0029E2                     l19689:
 18745                           
 18746                           ; BSR set to: 1
 18747  0029E2  BF6E               	btfsc	MenuMng@keyPress& (0+255),7,b
 18748  0029E4  D3C9               	goto	l20031
 18749                           
 18750                           ; BSR set to: 1
 18751  0029E6  0E04               	movlw	4
 18752  0029E8  196E               	xorwf	MenuMng@keyPress& (0+255),w,b
 18753  0029EA  B4D8               	btfsc	status,2,c
 18754  0029EC  D3C5               	goto	l20031
 18755                           
 18756                           ; BSR set to: 1
 18757                           ;menu.c: 57:         lcdPrintTR = 1;
 18758  0029EE  0E01               	movlw	1
 18759  0029F0  6FCE               	movwf	_lcdPrintTR& (0+255),b
 18760                           
 18761                           ;menu.c: 58:         lcdPrintBR = 1;
 18762  0029F2  0E01               	movlw	1
 18763  0029F4  6FCD               	movwf	_lcdPrintBR& (0+255),b
 18764                           
 18765                           ; BSR set to: 1
 18766                           ;menu.c: 59:         printf ("KEY! %d\n", keyPress);
 18767  0029F6  0EA8               	movlw	low STR_34
 18768  0029F8  6F46               	movwf	printf@fmt& (0+255),b
 18769  0029FA  0EFF               	movlw	high STR_34
 18770  0029FC  6F47               	movwf	(printf@fmt+1)& (0+255),b
 18771  0029FE  516E               	movf	MenuMng@keyPress& (0+255),w,b
 18772  002A00  6F48               	movwf	(?_printf+2)& (0+255),b
 18773  002A02  6B49               	clrf	(?_printf+3)& (0+255),b
 18774  002A04  BF48               	btfsc	(?_printf+2)& (0+255),7,b
 18775  002A06  0749               	decf	(?_printf+3)& (0+255),f,b
 18776  002A08  ECE9  F04E         	call	_printf	;wreg free
 18777                           
 18778                           ; BSR set to: 2
 18779                           ;menu.c: 61:         if (menuStatus == CFG_POWEROFF) {
 18780  002A0C  0E0C               	movlw	12
 18781  002A0E  0101               	movlb	1	; () banked
 18782  002A10  19B7               	xorwf	_menuStatus& (0+255),w,b
 18783  002A12  A4D8               	btfss	status,2,c
 18784  002A14  D382               	goto	l20027
 18785                           
 18786                           ; BSR set to: 1
 18787                           ;menu.c: 62:             menuStatus = CFG_IDLE;
 18788  002A16  0E00               	movlw	0
 18789  002A18  6FB7               	movwf	_menuStatus& (0+255),b
 18790                           
 18791                           ; BSR set to: 1
 18792                           ;menu.c: 63:             if (keyPress == 2) {
 18793  002A1A  0E02               	movlw	2
 18794  002A1C  196E               	xorwf	MenuMng@keyPress& (0+255),w,b
 18795  002A1E  A4D8               	btfss	status,2,c
 18796  002A20  D3A5               	goto	l20029
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;menu.c: 65:                 ctrlStatus = CTRL_SLEEP;
 18800  002A22  0E03               	movlw	3
 18801  002A24  6FC8               	movwf	_ctrlStatus& (0+255),b
 18802                           
 18803                           ; BSR set to: 1
 18804                           ;menu.c: 69:         } else {
 18805                           
 18806                           ;menu.c: 68:             }
 18807                           
 18808                           ;menu.c: 66:             } else {
 18809  002A26  D3A2               	goto	l20029
 18810  002A28                     l19705:
 18811                           
 18812                           ; BSR set to: 1
 18813                           ;menu.c: 72:                     if (menuStatus == CFG_IDLE) {
 18814  002A28  51B7               	movf	_menuStatus& (0+255),w,b
 18815  002A2A  A4D8               	btfss	status,2,c
 18816  002A2C  D03D               	goto	l19723
 18817                           
 18818                           ; BSR set to: 1
 18819                           ;menu.c: 73:                         menuStatus = CFG_IP;
 18820  002A2E  0E01               	movlw	1
 18821  002A30  6FB7               	movwf	_menuStatus& (0+255),b
 18822                           
 18823                           ;menu.c: 74:                         if ((VentMode == VMODE_PRESSURE)||(intIP == 0)) {
 18824  002A32  51F8               	movf	_VentMode& (0+255),w,b
 18825  002A34  B4D8               	btfsc	status,2,c
 18826  002A36  D004               	goto	u20610
 18827                           
 18828                           ; BSR set to: 1
 18829  002A38  51B3               	movf	_intIP& (0+255),w,b
 18830  002A3A  11B4               	iorwf	(_intIP+1)& (0+255),w,b
 18831  002A3C  A4D8               	btfss	status,2,c
 18832  002A3E  D003               	goto	l19711
 18833  002A40                     u20610:
 18834                           
 18835                           ; BSR set to: 1
 18836                           ;menu.c: 75:                             menuVal = IP;
 18837  002A40  C1FB  F193         	movff	_IP,_menuVal
 18838  002A44  D16B               	goto	L32
 18839  002A46                     l19711:
 18840                           
 18841                           ; BSR set to: 1
 18842                           ;menu.c: 77:                             menuVal = intIP/((int16_t) ((0.045*4096+2)/5)*1
      +                          );
 18843  002A46  0060  F6CC  F0A1   	movff	_intIP,___awdiv@dividend
 18844  002A4C  0060  F6D0  F0A2   	movff	_intIP+1,___awdiv@dividend+1
 18845  002A52  0E00               	movlw	0
 18846  002A54  0100               	movlb	0	; () banked
 18847  002A56  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
 18848  002A58  0E25               	movlw	37
 18849  002A5A  6FA3               	movwf	___awdiv@divisor& (0+255),b
 18850  002A5C  ECF9  F042         	call	___awdiv	;wreg free
 18851  002A60  0060  F284  F193   	movff	?___awdiv,_menuVal
 18852  002A66  0060  F288  F194   	movff	?___awdiv+1,_menuVal+1
 18853                           
 18854                           ; BSR set to: 0
 18855                           ;menu.c: 78:                             if (menuVal > 60) {
 18856  002A6C  0101               	movlb	1	; () banked
 18857  002A6E  5194               	movf	(_menuVal+1)& (0+255),w,b
 18858  002A70  E104               	bnz	u20620
 18859  002A72  0E3D               	movlw	61
 18860  002A74  5D93               	subwf	_menuVal& (0+255),w,b
 18861  002A76  A0D8               	btfss	status,0,c
 18862  002A78  D004               	goto	l19717
 18863  002A7A                     u20620:
 18864                           
 18865                           ; BSR set to: 1
 18866                           ;menu.c: 79:                                 menuVal = 60;
 18867  002A7A  0E00               	movlw	0
 18868  002A7C  6F94               	movwf	(_menuVal+1)& (0+255),b
 18869  002A7E  0E3C               	movlw	60
 18870  002A80  D009               	goto	L22
 18871  002A82                     l19717:
 18872                           
 18873                           ; BSR set to: 1
 18874  002A82  5194               	movf	(_menuVal+1)& (0+255),w,b
 18875  002A84  E108               	bnz	l19721
 18876  002A86  0E04               	movlw	4
 18877  002A88  5D93               	subwf	_menuVal& (0+255),w,b
 18878  002A8A  B0D8               	btfsc	status,0,c
 18879  002A8C  D004               	goto	l19721
 18880                           
 18881                           ; BSR set to: 1
 18882                           ;menu.c: 81:                                 menuVal = 4;
 18883  002A8E  0E00               	movlw	0
 18884  002A90  6F94               	movwf	(_menuVal+1)& (0+255),b
 18885  002A92  0E04               	movlw	4
 18886  002A94                     L22:
 18887  002A94  6F93               	movwf	_menuVal& (0+255),b
 18888  002A96                     l19721:
 18889                           
 18890                           ; BSR set to: 1
 18891                           ;menu.c: 84:                         menuTstamp = timeGet();
 18892  002A96  EC7B  F051         	call	_timeGet	;wreg free
 18893  002A9A  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 18894  002AA0  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 18895                           
 18896                           ;menu.c: 85:                     } else if (menuStatus == CFG_IP) {
 18897  002AA6  D362               	goto	l20029
 18898  002AA8                     l19723:
 18899                           
 18900                           ; BSR set to: 1
 18901  002AA8  05B7               	decf	_menuStatus& (0+255),w,b
 18902  002AAA  A4D8               	btfss	status,2,c
 18903  002AAC  D033               	goto	l19743
 18904                           
 18905                           ; BSR set to: 1
 18906                           ;menu.c: 87:                         if (VentMode == VMODE_VOLUME) {
 18907  002AAE  05F8               	decf	_VentMode& (0+255),w,b
 18908  002AB0  A4D8               	btfss	status,2,c
 18909  002AB2  D009               	goto	l19731
 18910                           
 18911                           ; BSR set to: 1
 18912                           ;menu.c: 88:                             VentMode = VMODE_PRESSURE;
 18913  002AB4  0E00               	movlw	0
 18914  002AB6  6FF8               	movwf	_VentMode& (0+255),b
 18915                           
 18916                           ;menu.c: 89:                             chVentMode = 1;
 18917  002AB8  0E01               	movlw	1
 18918  002ABA  0102               	movlb	2	; () banked
 18919  002ABC  6F4F               	movwf	_chVentMode& (0+255),b
 18920                           
 18921                           ; BSR set to: 2
 18922                           ;menu.c: 91:                             MaxP = menuVal + 2;
 18923  002ABE  0101               	movlb	1	; () banked
 18924  002AC0  5193               	movf	_menuVal& (0+255),w,b
 18925  002AC2  0F02               	addlw	2
 18926  002AC4  D003               	goto	L23
 18927  002AC6                     l19731:
 18928                           
 18929                           ; BSR set to: 1
 18930                           ;menu.c: 94:                             MaxP = MaxP + menuVal - IP;
 18931  002AC6  51FB               	movf	_IP& (0+255),w,b
 18932  002AC8  5DFF               	subwf	_MaxP& (0+255),w,b
 18933  002ACA  2593               	addwf	_menuVal& (0+255),w,b
 18934  002ACC                     L23:
 18935  002ACC  6FFF               	movwf	_MaxP& (0+255),b
 18936                           
 18937                           ; BSR set to: 1
 18938                           ;menu.c: 96:                         if (MaxP < menuVal + 2){
 18939                           
 18940                           ;menu.c: 95:                         }
 18941  002ACE  0E02               	movlw	2
 18942  002AD0  2593               	addwf	_menuVal& (0+255),w,b
 18943  002AD2  6F60               	movwf	??_MenuMng& (0+255),b
 18944  002AD4  0E00               	movlw	0
 18945  002AD6  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 18946  002AD8  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 18947  002ADA  51FF               	movf	_MaxP& (0+255),w,b
 18948  002ADC  6F62               	movwf	(??_MenuMng+2)& (0+255),b
 18949  002ADE  6B63               	clrf	(??_MenuMng+3)& (0+255),b
 18950  002AE0  5160               	movf	??_MenuMng& (0+255),w,b
 18951  002AE2  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 18952  002AE4  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 18953  002AE6  5963               	subwfb	(??_MenuMng+3)& (0+255),w,b
 18954  002AE8  B0D8               	btfsc	status,0,c
 18955  002AEA  D003               	goto	l2425
 18956                           
 18957                           ; BSR set to: 1
 18958                           ;menu.c: 98:                             MaxP = menuVal + 2;
 18959  002AEC  5193               	movf	_menuVal& (0+255),w,b
 18960  002AEE  0F02               	addlw	2
 18961  002AF0  6FFF               	movwf	_MaxP& (0+255),b
 18962  002AF2                     l2425:
 18963                           
 18964                           ; BSR set to: 1
 18965                           ;menu.c: 100:                         if (MaxP > 60){
 18966  002AF2  0E3C               	movlw	60
 18967  002AF4  65FF               	cpfsgt	_MaxP& (0+255),b
 18968  002AF6  D002               	goto	l19737
 18969                           
 18970                           ; BSR set to: 1
 18971                           ;menu.c: 101:                             MaxP = 60;
 18972  002AF8  0E3C               	movlw	60
 18973  002AFA  D004               	goto	L24
 18974  002AFC                     l19737:
 18975                           
 18976                           ; BSR set to: 1
 18977  002AFC  0E04               	movlw	4
 18978  002AFE  61FF               	cpfslt	_MaxP& (0+255),b
 18979  002B00  D002               	goto	l2427
 18980                           
 18981                           ; BSR set to: 1
 18982                           ;menu.c: 103:                             MaxP = 4;
 18983  002B02  0E04               	movlw	4
 18984  002B04                     L24:
 18985  002B04  6FFF               	movwf	_MaxP& (0+255),b
 18986  002B06                     l2427:
 18987                           
 18988                           ; BSR set to: 1
 18989                           ;menu.c: 106:                         chMaxP = 1;
 18990  002B06  0E01               	movlw	1
 18991  002B08  6FBD               	movwf	_chMaxP& (0+255),b
 18992                           
 18993                           ; BSR set to: 1
 18994                           ;menu.c: 107:                         IP = menuVal;
 18995  002B0A  C193  F1FB         	movff	_menuVal,_IP
 18996                           
 18997                           ;menu.c: 108:                         chIP = 1;
 18998  002B0E  0E01               	movlw	1
 18999  002B10  6FBE               	movwf	_chIP& (0+255),b
 19000  002B12  D10E               	goto	L44
 19001  002B14                     l19743:
 19002                           
 19003                           ; BSR set to: 1
 19004  002B14  0E08               	movlw	8
 19005  002B16  19B7               	xorwf	_menuStatus& (0+255),w,b
 19006  002B18  A4D8               	btfss	status,2,c
 19007  002B1A  D005               	goto	l19751
 19008                           
 19009                           ; BSR set to: 1
 19010                           ;menu.c: 111:                         menuStatus = CFG_ENGTRIG;
 19011  002B1C  0E0B               	movlw	11
 19012  002B1E  6FB7               	movwf	_menuStatus& (0+255),b
 19013                           
 19014                           ; BSR set to: 1
 19015                           ;menu.c: 112:                         menuVal = BdTrig;
 19016  002B20  C1F9  F193         	movff	_BdTrig,_menuVal
 19017  002B24  D0FB               	goto	L32
 19018  002B26                     l19751:
 19019                           
 19020                           ; BSR set to: 1
 19021  002B26  0E0B               	movlw	11
 19022  002B28  19B7               	xorwf	_menuStatus& (0+255),w,b
 19023  002B2A  A4D8               	btfss	status,2,c
 19024  002B2C  D008               	goto	l19757
 19025                           
 19026                           ; BSR set to: 1
 19027                           ;menu.c: 115:                         BdTrig = menuVal;
 19028  002B2E  C193  F1F9         	movff	_menuVal,_BdTrig
 19029                           
 19030                           ; BSR set to: 1
 19031                           ;menu.c: 116:                         chBdTrig = 1;
 19032  002B32  0E01               	movlw	1
 19033  002B34  0102               	movlb	2	; () banked
 19034  002B36  6F50               	movwf	_chBdTrig& (0+255),b
 19035  002B38  D002               	goto	l19757
 19036  002B3A                     L25:
 19037  002B3A  6FB7               	movwf	_menuStatus& (0+255),b
 19038                           
 19039                           ;menu.c: 118:                     } else {
 19040  002B3C  D317               	goto	l20029
 19041  002B3E                     l19757:
 19042                           
 19043                           ;menu.c: 120:                         menuStatus = CFG_IDLE;
 19044  002B3E  0E00               	movlw	0
 19045  002B40  0101               	movlb	1	; () banked
 19046  002B42  D7FB               	goto	L25
 19047  002B44                     l19759:
 19048                           
 19049                           ; BSR set to: 1
 19050                           ;menu.c: 124:                     if (menuStatus == CFG_IDLE) {
 19051  002B44  51B7               	movf	_menuStatus& (0+255),w,b
 19052  002B46  A4D8               	btfss	status,2,c
 19053  002B48  D005               	goto	l19767
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;menu.c: 125:                         menuStatus = CFG_BPM;
 19057  002B4A  0E02               	movlw	2
 19058  002B4C  6FB7               	movwf	_menuStatus& (0+255),b
 19059                           
 19060                           ; BSR set to: 1
 19061                           ;menu.c: 126:                         menuVal = BPM;
 19062  002B4E  C1FC  F193         	movff	_BPM,_menuVal
 19063  002B52  D0E4               	goto	L32
 19064  002B54                     l19767:
 19065                           
 19066                           ; BSR set to: 1
 19067  002B54  0E02               	movlw	2
 19068  002B56  19B7               	xorwf	_menuStatus& (0+255),w,b
 19069  002B58  A4D8               	btfss	status,2,c
 19070  002B5A  D031               	goto	l19779
 19071                           
 19072                           ; BSR set to: 1
 19073                           ;menu.c: 130:                         BPM = menuVal;
 19074  002B5C  C193  F1FC         	movff	_menuVal,_BPM
 19075                           
 19076                           ; BSR set to: 1
 19077                           ;menu.c: 131:                         chBPM = 1;
 19078  002B60  0E01               	movlw	1
 19079  002B62  6FBF               	movwf	_chBPM& (0+255),b
 19080                           
 19081                           ; BSR set to: 1
 19082                           ;menu.c: 132:                         IDuration = ((uint16_t) 60 * 1000) / (3 * BPM);
 19083  002B64  0EEA               	movlw	234
 19084  002B66  0100               	movlb	0	; () banked
 19085  002B68  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
 19086  002B6A  0E60               	movlw	96
 19087  002B6C  6F8B               	movwf	___lwdiv@dividend& (0+255),b
 19088  002B6E  0101               	movlb	1	; () banked
 19089  002B70  51FC               	movf	_BPM& (0+255),w,b
 19090  002B72  0D03               	mullw	3
 19091  002B74  006F FFCC  F08D    	movff	prodl,___lwdiv@divisor
 19092  002B7A  006F FFD0  F08E    	movff	prodh,___lwdiv@divisor+1
 19093  002B80  EC06  F048         	call	___lwdiv	;wreg free
 19094  002B84  0060  F22C  F1AD   	movff	?___lwdiv,_IDuration
 19095  002B8A  0060  F230  F1AE   	movff	?___lwdiv+1,_IDuration+1
 19096                           
 19097                           ; BSR set to: 0
 19098                           ;menu.c: 133:                         EDuration = ((uint16_t) 60 * 1000 / BPM) - IDurati
      +                          on;
 19099  002B90  0EEA               	movlw	234
 19100  002B92  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
 19101  002B94  0E60               	movlw	96
 19102  002B96  6F8B               	movwf	___lwdiv@dividend& (0+255),b
 19103  002B98  0060  F7F0  F08D   	movff	_BPM,___lwdiv@divisor
 19104  002B9E  6B8E               	clrf	(___lwdiv@divisor+1)& (0+255),b
 19105  002BA0  EC06  F048         	call	___lwdiv	;wreg free
 19106  002BA4  0101               	movlb	1	; () banked
 19107  002BA6  51AD               	movf	_IDuration& (0+255),w,b
 19108  002BA8  0100               	movlb	0	; () banked
 19109  002BAA  5D8B               	subwf	?___lwdiv& (0+255),w,b
 19110  002BAC  0102               	movlb	2	; () banked
 19111  002BAE  6F46               	movwf	_EDuration& (0+255),b
 19112  002BB0  0101               	movlb	1	; () banked
 19113  002BB2  51AE               	movf	(_IDuration+1)& (0+255),w,b
 19114  002BB4  0100               	movlb	0	; () banked
 19115  002BB6  598C               	subwfb	(?___lwdiv+1)& (0+255),w,b
 19116  002BB8  0102               	movlb	2	; () banked
 19117  002BBA  6F47               	movwf	(_EDuration+1)& (0+255),b
 19118  002BBC  D7C0               	goto	l19757
 19119  002BBE                     l19779:
 19120                           
 19121                           ; BSR set to: 1
 19122  002BBE  0E08               	movlw	8
 19123  002BC0  19B7               	xorwf	_menuStatus& (0+255),w,b
 19124  002BC2  A4D8               	btfss	status,2,c
 19125  002BC4  D7BC               	goto	l19757
 19126                           
 19127                           ; BSR set to: 1
 19128                           ;menu.c: 136:                         menuStatus = CFG_ENGVSTATS;
 19129  002BC6  0E09               	movlw	9
 19130  002BC8  D016               	goto	L28
 19131  002BCA                     l19787:
 19132                           
 19133                           ; BSR set to: 1
 19134                           ;menu.c: 144:                     if (menuStatus == CFG_IDLE) {
 19135  002BCA  51B7               	movf	_menuStatus& (0+255),w,b
 19136  002BCC  A4D8               	btfss	status,2,c
 19137  002BCE  D005               	goto	l19795
 19138                           
 19139                           ; BSR set to: 1
 19140                           ;menu.c: 145:                         menuStatus = CFG_PEEP;
 19141  002BD0  0E03               	movlw	3
 19142  002BD2  6FB7               	movwf	_menuStatus& (0+255),b
 19143                           
 19144                           ; BSR set to: 1
 19145                           ;menu.c: 146:                         menuVal = PEEP;
 19146  002BD4  C1FA  F193         	movff	_PEEP,_menuVal
 19147  002BD8  D0A1               	goto	L32
 19148  002BDA                     l19795:
 19149                           
 19150                           ; BSR set to: 1
 19151  002BDA  0E03               	movlw	3
 19152  002BDC  19B7               	xorwf	_menuStatus& (0+255),w,b
 19153  002BDE  A4D8               	btfss	status,2,c
 19154  002BE0  D005               	goto	l19801
 19155                           
 19156                           ; BSR set to: 1
 19157                           ;menu.c: 150:                         PEEP = menuVal;
 19158  002BE2  C193  F1FA         	movff	_menuVal,_PEEP
 19159                           
 19160                           ; BSR set to: 1
 19161                           ;menu.c: 151:                         chPEEP = 1;
 19162  002BE6  0E01               	movlw	1
 19163  002BE8  6FBC               	movwf	_chPEEP& (0+255),b
 19164  002BEA  D0A2               	goto	L44
 19165  002BEC                     l19801:
 19166                           
 19167                           ; BSR set to: 1
 19168  002BEC  0E08               	movlw	8
 19169  002BEE  19B7               	xorwf	_menuStatus& (0+255),w,b
 19170  002BF0  A4D8               	btfss	status,2,c
 19171  002BF2  D7A5               	goto	l19757
 19172                           
 19173                           ; BSR set to: 1
 19174                           ;menu.c: 154:                         menuStatus = CFG_ENGLSTATS;
 19175  002BF4  0E0A               	movlw	10
 19176  002BF6                     L28:
 19177  002BF6  6FB7               	movwf	_menuStatus& (0+255),b
 19178  002BF8  D74E               	goto	l19721
 19179  002BFA                     l19809:
 19180                           
 19181                           ; BSR set to: 1
 19182                           ;menu.c: 162:                     if (menuStatus == CFG_IDLE) {
 19183  002BFA  51B7               	movf	_menuStatus& (0+255),w,b
 19184  002BFC  A4D8               	btfss	status,2,c
 19185  002BFE  D005               	goto	l19817
 19186                           
 19187                           ; BSR set to: 1
 19188                           ;menu.c: 163:                         menuStatus = CFG_MAXP;
 19189  002C00  0E04               	movlw	4
 19190  002C02  6FB7               	movwf	_menuStatus& (0+255),b
 19191                           
 19192                           ; BSR set to: 1
 19193                           ;menu.c: 164:                         menuVal = MaxP;
 19194  002C04  C1FF  F193         	movff	_MaxP,_menuVal
 19195  002C08  D089               	goto	L32
 19196  002C0A                     l19817:
 19197                           
 19198                           ; BSR set to: 1
 19199  002C0A  0E04               	movlw	4
 19200  002C0C  19B7               	xorwf	_menuStatus& (0+255),w,b
 19201  002C0E  A4D8               	btfss	status,2,c
 19202  002C10  D796               	goto	l19757
 19203                           
 19204                           ; BSR set to: 1
 19205                           ;menu.c: 168:                         MaxP = menuVal;
 19206  002C12  C193  F1FF         	movff	_menuVal,_MaxP
 19207                           
 19208                           ; BSR set to: 1
 19209                           ;menu.c: 169:                         chMaxP = 1;
 19210  002C16  0E01               	movlw	1
 19211  002C18  6FBD               	movwf	_chMaxP& (0+255),b
 19212  002C1A  D08A               	goto	L44
 19213  002C1C                     l19825:
 19214                           
 19215                           ; BSR set to: 1
 19216                           ;menu.c: 177:                     if (menuStatus == CFG_IDLE) {
 19217  002C1C  51B7               	movf	_menuStatus& (0+255),w,b
 19218  002C1E  A4D8               	btfss	status,2,c
 19219  002C20  D045               	goto	l19849
 19220                           
 19221                           ; BSR set to: 1
 19222                           ;menu.c: 178:                         menuStatus = CFG_MAXV;
 19223  002C22  0E05               	movlw	5
 19224  002C24  6FB7               	movwf	_menuStatus& (0+255),b
 19225                           
 19226                           ; BSR set to: 1
 19227                           ;menu.c: 179:                         if ((VentMode == VMODE_VOLUME)||(intMaxV==0)) {
 19228  002C26  05F8               	decf	_VentMode& (0+255),w,b
 19229  002C28  B4D8               	btfsc	status,2,c
 19230  002C2A  D004               	goto	u20810
 19231                           
 19232                           ; BSR set to: 1
 19233  002C2C  51F1               	movf	_intMaxV& (0+255),w,b
 19234  002C2E  11F2               	iorwf	(_intMaxV+1)& (0+255),w,b
 19235  002C30  A4D8               	btfss	status,2,c
 19236  002C32  D003               	goto	l19833
 19237  002C34                     u20810:
 19238                           
 19239                           ; BSR set to: 1
 19240                           ;menu.c: 180:                             menuVal = MaxV;
 19241  002C34  C1FE  F193         	movff	_MaxV,_menuVal
 19242  002C38  D071               	goto	L32
 19243  002C3A                     l19833:
 19244                           
 19245                           ; BSR set to: 1
 19246                           ;menu.c: 182:                             menuVal = 2*((intMaxV+10)/20);
 19247  002C3A  0E0A               	movlw	10
 19248  002C3C  25F1               	addwf	_intMaxV& (0+255),w,b
 19249  002C3E  0100               	movlb	0	; () banked
 19250  002C40  6FA1               	movwf	___awdiv@dividend& (0+255),b
 19251  002C42  0E00               	movlw	0
 19252  002C44  0101               	movlb	1	; () banked
 19253  002C46  21F2               	addwfc	(_intMaxV+1)& (0+255),w,b
 19254  002C48  0100               	movlb	0	; () banked
 19255  002C4A  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
 19256  002C4C  0E00               	movlw	0
 19257  002C4E  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
 19258  002C50  0E14               	movlw	20
 19259  002C52  6FA3               	movwf	___awdiv@divisor& (0+255),b
 19260  002C54  ECF9  F042         	call	___awdiv	;wreg free
 19261  002C58  90D8               	bcf	status,0,c
 19262  002C5A  35A1               	rlcf	?___awdiv& (0+255),w,b
 19263  002C5C  0101               	movlb	1	; () banked
 19264  002C5E  6F93               	movwf	_menuVal& (0+255),b
 19265  002C60  0100               	movlb	0	; () banked
 19266  002C62  35A2               	rlcf	(?___awdiv+1)& (0+255),w,b
 19267  002C64  0101               	movlb	1	; () banked
 19268  002C66  6F94               	movwf	(_menuVal+1)& (0+255),b
 19269                           
 19270                           ; BSR set to: 1
 19271                           ;menu.c: 183:                             menuVal = ((menuVal > (1500/10))? (1500/10) : 
      +                          ((menuVal < (100/10))? (100/10) : menuVal));
 19272  002C68  5194               	movf	(_menuVal+1)& (0+255),w,b
 19273  002C6A  E11C               	bnz	l19845
 19274  002C6C  0E97               	movlw	151
 19275  002C6E  5D93               	subwf	_menuVal& (0+255),w,b
 19276  002C70  B0D8               	btfsc	status,0,c
 19277  002C72  D018               	goto	l19845
 19278                           
 19279                           ; BSR set to: 1
 19280  002C74  5194               	movf	(_menuVal+1)& (0+255),w,b
 19281  002C76  E104               	bnz	u20830
 19282  002C78  0E0A               	movlw	10
 19283  002C7A  5D93               	subwf	_menuVal& (0+255),w,b
 19284  002C7C  A0D8               	btfss	status,0,c
 19285  002C7E  D007               	goto	l19841
 19286  002C80                     u20830:
 19287                           
 19288                           ; BSR set to: 1
 19289  002C80  0060  F64C  F164   	movff	_menuVal,_MenuMng$4363
 19290  002C86  0060  F650  F165   	movff	_menuVal+1,_MenuMng$4363+1
 19291  002C8C  D004               	goto	l19843
 19292  002C8E                     l19841:
 19293                           
 19294                           ; BSR set to: 1
 19295  002C8E  0E00               	movlw	0
 19296  002C90  6F65               	movwf	(_MenuMng$4363+1)& (0+255),b
 19297  002C92  0E0A               	movlw	10
 19298  002C94  6F64               	movwf	_MenuMng$4363& (0+255),b
 19299  002C96                     l19843:
 19300                           
 19301                           ; BSR set to: 1
 19302  002C96  0060  F590  F193   	movff	_MenuMng$4363,_menuVal
 19303  002C9C  0060  F594  F194   	movff	_MenuMng$4363+1,_menuVal+1
 19304  002CA2  D6F9               	goto	l19721
 19305  002CA4                     l19845:
 19306                           
 19307                           ; BSR set to: 1
 19308  002CA4  0E00               	movlw	0
 19309  002CA6  6F94               	movwf	(_menuVal+1)& (0+255),b
 19310  002CA8  0E96               	movlw	150
 19311  002CAA  D6F4               	goto	L22
 19312  002CAC                     l19849:
 19313                           
 19314                           ; BSR set to: 1
 19315  002CAC  0E05               	movlw	5
 19316  002CAE  19B7               	xorwf	_menuStatus& (0+255),w,b
 19317  002CB0  A4D8               	btfss	status,2,c
 19318  002CB2  D745               	goto	l19757
 19319                           
 19320                           ; BSR set to: 1
 19321                           ;menu.c: 190:                         HighVAlarm += (menuVal - MaxV);
 19322  002CB4  51FE               	movf	_MaxV& (0+255),w,b
 19323  002CB6  5D93               	subwf	_menuVal& (0+255),w,b
 19324  002CB8  27FD               	addwf	_HighVAlarm& (0+255),f,b
 19325                           
 19326                           ;menu.c: 191:                         LowVAlarm += (menuVal - MaxV);
 19327  002CBA  51FE               	movf	_MaxV& (0+255),w,b
 19328  002CBC  5D93               	subwf	_menuVal& (0+255),w,b
 19329  002CBE  27F7               	addwf	_LowVAlarm& (0+255),f,b
 19330                           
 19331                           ; BSR set to: 1
 19332                           ;menu.c: 192:                         MaxV = menuVal;
 19333  002CC0  C193  F1FE         	movff	_menuVal,_MaxV
 19334                           
 19335                           ; BSR set to: 1
 19336                           ;menu.c: 193:                         chHighVAlarm = 1;
 19337  002CC4  0E01               	movlw	1
 19338  002CC6  6FBA               	movwf	_chHighVAlarm& (0+255),b
 19339                           
 19340                           ; BSR set to: 1
 19341                           ;menu.c: 194:                         chLowVAlarm = 1;
 19342  002CC8  0E01               	movlw	1
 19343  002CCA  6FBB               	movwf	_chLowVAlarm& (0+255),b
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;menu.c: 195:                         chMaxV = 1;
 19347  002CCC  0E01               	movlw	1
 19348  002CCE  6FB9               	movwf	_chMaxV& (0+255),b
 19349                           
 19350                           ; BSR set to: 1
 19351                           ;menu.c: 196:                         if (VentMode == VMODE_PRESSURE) {
 19352  002CD0  51F8               	movf	_VentMode& (0+255),w,b
 19353  002CD2  A4D8               	btfss	status,2,c
 19354  002CD4  D734               	goto	l19757
 19355                           
 19356                           ; BSR set to: 1
 19357                           ;menu.c: 197:                             VentMode = VMODE_VOLUME;
 19358  002CD6  0E01               	movlw	1
 19359  002CD8  6FF8               	movwf	_VentMode& (0+255),b
 19360                           
 19361                           ;menu.c: 198:                             chVentMode = 1;
 19362  002CDA  0E01               	movlw	1
 19363  002CDC  0102               	movlb	2	; () banked
 19364  002CDE  6F4F               	movwf	_chVentMode& (0+255),b
 19365                           
 19366                           ;menu.c: 200:                             MaxP = 35;
 19367  002CE0  0E23               	movlw	35
 19368  002CE2  0101               	movlb	1	; () banked
 19369  002CE4  6FFF               	movwf	_MaxP& (0+255),b
 19370                           
 19371                           ;menu.c: 201:                             chMaxP = 1;
 19372  002CE6  0E01               	movlw	1
 19373  002CE8  6FBD               	movwf	_chMaxP& (0+255),b
 19374  002CEA  D729               	goto	l19757
 19375  002CEC                     l19867:
 19376                           
 19377                           ; BSR set to: 1
 19378                           ;menu.c: 210:                     if (menuStatus == CFG_IDLE) {
 19379  002CEC  51B7               	movf	_menuStatus& (0+255),w,b
 19380  002CEE  A4D8               	btfss	status,2,c
 19381  002CF0  D005               	goto	l19875
 19382                           
 19383                           ; BSR set to: 1
 19384                           ;menu.c: 211:                         menuStatus = CFG_HIGHVA;
 19385  002CF2  0E07               	movlw	7
 19386  002CF4  6FB7               	movwf	_menuStatus& (0+255),b
 19387                           
 19388                           ; BSR set to: 1
 19389                           ;menu.c: 212:                         menuVal = HighVAlarm;
 19390  002CF6  C1FD  F193         	movff	_HighVAlarm,_menuVal
 19391  002CFA  D010               	goto	L32
 19392  002CFC                     l19875:
 19393                           
 19394                           ; BSR set to: 1
 19395  002CFC  0E07               	movlw	7
 19396  002CFE  19B7               	xorwf	_menuStatus& (0+255),w,b
 19397  002D00  A4D8               	btfss	status,2,c
 19398  002D02  D71D               	goto	l19757
 19399                           
 19400                           ; BSR set to: 1
 19401                           ;menu.c: 216:                         HighVAlarm = menuVal;
 19402  002D04  C193  F1FD         	movff	_menuVal,_HighVAlarm
 19403                           
 19404                           ; BSR set to: 1
 19405                           ;menu.c: 217:                         chHighVAlarm = 1;
 19406  002D08  0E01               	movlw	1
 19407  002D0A  6FBA               	movwf	_chHighVAlarm& (0+255),b
 19408  002D0C  D011               	goto	L44
 19409  002D0E                     l19883:
 19410                           
 19411                           ; BSR set to: 1
 19412                           ;menu.c: 225:                     if (menuStatus == CFG_IDLE) {
 19413  002D0E  51B7               	movf	_menuStatus& (0+255),w,b
 19414  002D10  A4D8               	btfss	status,2,c
 19415  002D12  D006               	goto	l19891
 19416                           
 19417                           ; BSR set to: 1
 19418                           ;menu.c: 226:                         menuStatus = CFG_LOWVA;
 19419  002D14  0E06               	movlw	6
 19420  002D16  6FB7               	movwf	_menuStatus& (0+255),b
 19421                           
 19422                           ; BSR set to: 1
 19423                           ;menu.c: 227:                         menuVal = LowVAlarm;
 19424  002D18  C1F7  F193         	movff	_LowVAlarm,_menuVal
 19425  002D1C                     L32:
 19426  002D1C  6B94               	clrf	(_menuVal+1)& (0+255),b
 19427  002D1E  D6BB               	goto	l19721
 19428  002D20                     l19891:
 19429                           
 19430                           ; BSR set to: 1
 19431  002D20  0E06               	movlw	6
 19432  002D22  19B7               	xorwf	_menuStatus& (0+255),w,b
 19433  002D24  A4D8               	btfss	status,2,c
 19434  002D26  D70B               	goto	l19757
 19435                           
 19436                           ; BSR set to: 1
 19437                           ;menu.c: 231:                         LowVAlarm = menuVal;
 19438  002D28  C193  F1F7         	movff	_menuVal,_LowVAlarm
 19439                           
 19440                           ; BSR set to: 1
 19441                           ;menu.c: 232:                         chLowVAlarm = 1;
 19442  002D2C  0E01               	movlw	1
 19443  002D2E  6FBB               	movwf	_chLowVAlarm& (0+255),b
 19444  002D30                     L44:
 19445                           
 19446                           ;menu.c: 233:                         menuStatus = CFG_IDLE;
 19447  002D30  0E00               	movlw	0
 19448  002D32  D703               	goto	L25
 19449  002D34                     l19899:
 19450                           
 19451                           ; BSR set to: 1
 19452                           ;menu.c: 240:                     if (menuStatus != CFG_IDLE) {
 19453  002D34  51B7               	movf	_menuStatus& (0+255),w,b
 19454  002D36  B4D8               	btfsc	status,2,c
 19455  002D38  D219               	goto	l20029
 19456                           
 19457                           ; BSR set to: 1
 19458                           ;menu.c: 241:                         menuTstamp = timeGet();
 19459  002D3A  EC7B  F051         	call	_timeGet	;wreg free
 19460  002D3E  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 19461  002D44  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 19462                           
 19463                           ;menu.c: 243:                         switch (menuStatus) {
 19464  002D4A  D0C0               	goto	l19957
 19465  002D4C                     l19903:
 19466                           
 19467                           ; BSR set to: 1
 19468                           ;menu.c: 245:                                 menuVal = menuVal + 1;
 19469  002D4C  0E01               	movlw	1
 19470  002D4E  2593               	addwf	_menuVal& (0+255),w,b
 19471  002D50  6F93               	movwf	_menuVal& (0+255),b
 19472  002D52  0E00               	movlw	0
 19473  002D54  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19474  002D56  6F94               	movwf	(_menuVal+1)& (0+255),b
 19475                           
 19476                           ;menu.c: 246:                                 if (menuVal > 60) {
 19477  002D58  5194               	movf	(_menuVal+1)& (0+255),w,b
 19478  002D5A  E104               	bnz	u20910
 19479  002D5C  0E3D               	movlw	61
 19480  002D5E  5D93               	subwf	_menuVal& (0+255),w,b
 19481  002D60  A0D8               	btfss	status,0,c
 19482  002D62  D204               	goto	l20029
 19483  002D64                     u20910:
 19484  002D64                     l19905:
 19485                           
 19486                           ; BSR set to: 1
 19487                           ;menu.c: 247:                                     menuVal = 60;
 19488  002D64  0E00               	movlw	0
 19489  002D66  6F94               	movwf	(_menuVal+1)& (0+255),b
 19490  002D68  0E3C               	movlw	60
 19491  002D6A  D130               	goto	L40
 19492  002D6C                     l19907:
 19493                           
 19494                           ; BSR set to: 1
 19495                           ;menu.c: 251:                                 menuVal = menuVal + 1;
 19496  002D6C  0E01               	movlw	1
 19497  002D6E  2593               	addwf	_menuVal& (0+255),w,b
 19498  002D70  6F93               	movwf	_menuVal& (0+255),b
 19499  002D72  0E00               	movlw	0
 19500  002D74  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19501  002D76  6F94               	movwf	(_menuVal+1)& (0+255),b
 19502                           
 19503                           ;menu.c: 252:                                 if (menuVal > 60) {
 19504  002D78  5194               	movf	(_menuVal+1)& (0+255),w,b
 19505  002D7A  E1F4               	bnz	l19905
 19506  002D7C  0E3D               	movlw	61
 19507  002D7E  5D93               	subwf	_menuVal& (0+255),w,b
 19508  002D80  B0D8               	btfsc	status,0,c
 19509  002D82  D7F0               	goto	u20910
 19510  002D84  D1F3               	goto	l20029
 19511  002D86                     l19911:
 19512                           
 19513                           ; BSR set to: 1
 19514                           ;menu.c: 257:                                 menuVal = menuVal + 1;
 19515  002D86  0E01               	movlw	1
 19516  002D88  2593               	addwf	_menuVal& (0+255),w,b
 19517  002D8A  6F93               	movwf	_menuVal& (0+255),b
 19518  002D8C  0E00               	movlw	0
 19519  002D8E  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19520  002D90  6F94               	movwf	(_menuVal+1)& (0+255),b
 19521                           
 19522                           ;menu.c: 258:                                 if (menuVal > 25) {
 19523  002D92  5194               	movf	(_menuVal+1)& (0+255),w,b
 19524  002D94  E104               	bnz	u20930
 19525  002D96  0E1A               	movlw	26
 19526  002D98  5D93               	subwf	_menuVal& (0+255),w,b
 19527  002D9A  A0D8               	btfss	status,0,c
 19528  002D9C  D004               	goto	l2491
 19529  002D9E                     u20930:
 19530                           
 19531                           ; BSR set to: 1
 19532                           ;menu.c: 259:                                     menuVal = 25;
 19533  002D9E  0E00               	movlw	0
 19534  002DA0  6F94               	movwf	(_menuVal+1)& (0+255),b
 19535  002DA2  0E19               	movlw	25
 19536  002DA4  6F93               	movwf	_menuVal& (0+255),b
 19537  002DA6                     l2491:
 19538                           
 19539                           ; BSR set to: 1
 19540                           ;menu.c: 261:                                 if ((VentMode == VMODE_PRESSURE) && (menuV
      +                          al > IP)) {
 19541  002DA6  51F8               	movf	_VentMode& (0+255),w,b
 19542  002DA8  A4D8               	btfss	status,2,c
 19543  002DAA  D00C               	goto	l19919
 19544                           
 19545                           ; BSR set to: 1
 19546  002DAC  51FB               	movf	_IP& (0+255),w,b
 19547  002DAE  6F60               	movwf	??_MenuMng& (0+255),b
 19548  002DB0  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19549  002DB2  5193               	movf	_menuVal& (0+255),w,b
 19550  002DB4  5D60               	subwf	??_MenuMng& (0+255),w,b
 19551  002DB6  5194               	movf	(_menuVal+1)& (0+255),w,b
 19552  002DB8  5961               	subwfb	(??_MenuMng+1)& (0+255),w,b
 19553  002DBA  B0D8               	btfsc	status,0,c
 19554  002DBC  D003               	goto	l19919
 19555  002DBE                     u20950:
 19556                           
 19557                           ; BSR set to: 1
 19558                           ;menu.c: 262:                                     menuVal = IP;
 19559  002DBE  C1FB  F193         	movff	_IP,_menuVal
 19560  002DC2  D0C0               	goto	L35
 19561  002DC4                     l19919:
 19562                           
 19563                           ; BSR set to: 1
 19564  002DC4  51FF               	movf	_MaxP& (0+255),w,b
 19565  002DC6  6F60               	movwf	??_MenuMng& (0+255),b
 19566  002DC8  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19567  002DCA  5193               	movf	_menuVal& (0+255),w,b
 19568  002DCC  5D60               	subwf	??_MenuMng& (0+255),w,b
 19569  002DCE  5194               	movf	(_menuVal+1)& (0+255),w,b
 19570  002DD0  5961               	subwfb	(??_MenuMng+1)& (0+255),w,b
 19571  002DD2  B0D8               	btfsc	status,0,c
 19572  002DD4  D1CB               	goto	l20029
 19573                           
 19574                           ; BSR set to: 1
 19575                           ;menu.c: 264:                                     menuVal = MaxP;
 19576  002DD6  C1FF  F193         	movff	_MaxP,_menuVal
 19577  002DDA  D0B4               	goto	L35
 19578  002DDC                     l19923:
 19579                           
 19580                           ; BSR set to: 1
 19581                           ;menu.c: 268:                                 menuVal = menuVal + 1;
 19582  002DDC  0E01               	movlw	1
 19583  002DDE  2593               	addwf	_menuVal& (0+255),w,b
 19584  002DE0  6F93               	movwf	_menuVal& (0+255),b
 19585  002DE2  0E00               	movlw	0
 19586  002DE4  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19587  002DE6  6F94               	movwf	(_menuVal+1)& (0+255),b
 19588                           
 19589                           ;menu.c: 269:                                 if (menuVal > 30) {
 19590  002DE8  5194               	movf	(_menuVal+1)& (0+255),w,b
 19591  002DEA  E104               	bnz	u20970
 19592  002DEC  0E1F               	movlw	31
 19593  002DEE  5D93               	subwf	_menuVal& (0+255),w,b
 19594  002DF0  A0D8               	btfss	status,0,c
 19595  002DF2  D1BC               	goto	l20029
 19596  002DF4                     u20970:
 19597                           
 19598                           ; BSR set to: 1
 19599                           ;menu.c: 270:                                     menuVal = 30;
 19600  002DF4  0E00               	movlw	0
 19601  002DF6  6F94               	movwf	(_menuVal+1)& (0+255),b
 19602  002DF8  0E1E               	movlw	30
 19603  002DFA  D0E8               	goto	L40
 19604  002DFC                     l19927:
 19605                           
 19606                           ; BSR set to: 1
 19607                           ;menu.c: 274:                                 menuVal = menuVal + 1;
 19608  002DFC  0E01               	movlw	1
 19609  002DFE  2593               	addwf	_menuVal& (0+255),w,b
 19610  002E00  6F93               	movwf	_menuVal& (0+255),b
 19611  002E02  0E00               	movlw	0
 19612  002E04  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19613  002E06  6F94               	movwf	(_menuVal+1)& (0+255),b
 19614                           
 19615                           ;menu.c: 275:                                 if (menuVal > 8) {
 19616  002E08  5194               	movf	(_menuVal+1)& (0+255),w,b
 19617  002E0A  E104               	bnz	u20980
 19618  002E0C  0E09               	movlw	9
 19619  002E0E  5D93               	subwf	_menuVal& (0+255),w,b
 19620  002E10  A0D8               	btfss	status,0,c
 19621  002E12  D1AC               	goto	l20029
 19622  002E14                     u20980:
 19623                           
 19624                           ; BSR set to: 1
 19625                           ;menu.c: 276:                                     menuVal = 8;
 19626  002E14  0E00               	movlw	0
 19627  002E16  6F94               	movwf	(_menuVal+1)& (0+255),b
 19628  002E18  0E08               	movlw	8
 19629  002E1A  D0D8               	goto	L40
 19630  002E1C                     l19931:
 19631                           
 19632                           ; BSR set to: 1
 19633                           ;menu.c: 280:                                 menuVal = ((menuVal + 2 > (1500/10))? (150
      +                          0/10) : ((menuVal + 2 < (100/10))? (100/10) : menuVal + 2));
 19634  002E1C  0E02               	movlw	2
 19635  002E1E  2593               	addwf	_menuVal& (0+255),w,b
 19636  002E20  6F60               	movwf	??_MenuMng& (0+255),b
 19637  002E22  0E00               	movlw	0
 19638  002E24  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19639  002E26  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19640  002E28  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19641  002E2A  E122               	bnz	l19941
 19642  002E2C  0E97               	movlw	151
 19643  002E2E  5D60               	subwf	??_MenuMng& (0+255),w,b
 19644  002E30  B0D8               	btfsc	status,0,c
 19645  002E32  D01E               	goto	l19941
 19646                           
 19647                           ; BSR set to: 1
 19648  002E34  0E02               	movlw	2
 19649  002E36  2593               	addwf	_menuVal& (0+255),w,b
 19650  002E38  6F60               	movwf	??_MenuMng& (0+255),b
 19651  002E3A  0E00               	movlw	0
 19652  002E3C  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19653  002E3E  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19654  002E40  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19655  002E42  E104               	bnz	u21000
 19656  002E44  0E0A               	movlw	10
 19657  002E46  5D60               	subwf	??_MenuMng& (0+255),w,b
 19658  002E48  A0D8               	btfss	status,0,c
 19659  002E4A  D007               	goto	l19937
 19660  002E4C                     u21000:
 19661                           
 19662                           ; BSR set to: 1
 19663  002E4C  0E02               	movlw	2
 19664  002E4E  2593               	addwf	_menuVal& (0+255),w,b
 19665  002E50  6F66               	movwf	_MenuMng$4364& (0+255),b
 19666  002E52  0E00               	movlw	0
 19667  002E54  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19668  002E56  6F67               	movwf	(_MenuMng$4364+1)& (0+255),b
 19669  002E58  D004               	goto	l19939
 19670  002E5A                     l19937:
 19671                           
 19672                           ; BSR set to: 1
 19673  002E5A  0E00               	movlw	0
 19674  002E5C  6F67               	movwf	(_MenuMng$4364+1)& (0+255),b
 19675  002E5E  0E0A               	movlw	10
 19676  002E60  6F66               	movwf	_MenuMng$4364& (0+255),b
 19677  002E62                     l19939:
 19678                           
 19679                           ; BSR set to: 1
 19680  002E62  0060  F598  F193   	movff	_MenuMng$4364,_menuVal
 19681  002E68  0060  F59C  F194   	movff	_MenuMng$4364+1,_menuVal+1
 19682  002E6E  D17E               	goto	l20029
 19683  002E70                     l19941:
 19684                           
 19685                           ; BSR set to: 1
 19686  002E70  0E00               	movlw	0
 19687  002E72  6F94               	movwf	(_menuVal+1)& (0+255),b
 19688  002E74  0E96               	movlw	150
 19689  002E76  D0AA               	goto	L40
 19690  002E78                     l19943:
 19691                           
 19692                           ; BSR set to: 1
 19693                           ;menu.c: 284:                                 menuVal = ((menuVal + 2 > (1500/10))? (150
      +                          0/10) : ((menuVal + 2 < (50/10))? (50/10) : menuVal + 2));
 19694  002E78  0E02               	movlw	2
 19695  002E7A  2593               	addwf	_menuVal& (0+255),w,b
 19696  002E7C  6F60               	movwf	??_MenuMng& (0+255),b
 19697  002E7E  0E00               	movlw	0
 19698  002E80  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19699  002E82  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19700  002E84  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19701  002E86  E1F4               	bnz	l19941
 19702  002E88  0E97               	movlw	151
 19703  002E8A  5D60               	subwf	??_MenuMng& (0+255),w,b
 19704  002E8C  B0D8               	btfsc	status,0,c
 19705  002E8E  D7F0               	goto	l19941
 19706                           
 19707                           ; BSR set to: 1
 19708  002E90  0E02               	movlw	2
 19709  002E92  2593               	addwf	_menuVal& (0+255),w,b
 19710  002E94  6F60               	movwf	??_MenuMng& (0+255),b
 19711  002E96  0E00               	movlw	0
 19712  002E98  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19713  002E9A  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19714  002E9C  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19715  002E9E  E104               	bnz	u21020
 19716  002EA0  0E05               	movlw	5
 19717  002EA2  5D60               	subwf	??_MenuMng& (0+255),w,b
 19718  002EA4  A0D8               	btfss	status,0,c
 19719  002EA6  D007               	goto	l19949
 19720  002EA8                     u21020:
 19721                           
 19722                           ; BSR set to: 1
 19723  002EA8  0E02               	movlw	2
 19724  002EAA  2593               	addwf	_menuVal& (0+255),w,b
 19725  002EAC  6F68               	movwf	_MenuMng$4365& (0+255),b
 19726  002EAE  0E00               	movlw	0
 19727  002EB0  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19728  002EB2  6F69               	movwf	(_MenuMng$4365+1)& (0+255),b
 19729  002EB4  D004               	goto	l19951
 19730  002EB6                     l19949:
 19731                           
 19732                           ; BSR set to: 1
 19733  002EB6  0E00               	movlw	0
 19734  002EB8  6F69               	movwf	(_MenuMng$4365+1)& (0+255),b
 19735  002EBA  0E05               	movlw	5
 19736  002EBC  6F68               	movwf	_MenuMng$4365& (0+255),b
 19737  002EBE                     l19951:
 19738                           
 19739                           ; BSR set to: 1
 19740  002EBE  0060  F5A0  F193   	movff	_MenuMng$4365,_menuVal
 19741  002EC4  0060  F5A4  F194   	movff	_MenuMng$4365+1,_menuVal+1
 19742  002ECA  D150               	goto	l20029
 19743  002ECC                     l19957:
 19744                           
 19745                           ; BSR set to: 0
 19746  002ECC  0101               	movlb	1	; () banked
 19747  002ECE  51B7               	movf	_menuStatus& (0+255),w,b
 19748  002ED0  6F60               	movwf	??_MenuMng& (0+255),b
 19749  002ED2  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19750                           
 19751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19752                           ; Switch size 1, requested type "simple"
 19753                           ; Number of cases is 1, Range of values is 0 to 0
 19754                           ; switch strategies available:
 19755                           ; Name         Instructions Cycles
 19756                           ; simple_byte            4     3 (average)
 19757                           ;	Chosen strategy is simple_byte
 19758  002ED4  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19759  002ED6  0A00               	xorlw	0	; case 0
 19760  002ED8  A4D8               	btfss	status,2,c
 19761  002EDA  D148               	goto	l20029
 19762                           
 19763                           ; BSR set to: 1
 19764                           ; Switch size 1, requested type "simple"
 19765                           ; Number of cases is 8, Range of values is 1 to 11
 19766                           ; switch strategies available:
 19767                           ; Name         Instructions Cycles
 19768                           ; simple_byte           25    13 (average)
 19769                           ;	Chosen strategy is simple_byte
 19770  002EDC  5160               	movf	??_MenuMng& (0+255),w,b
 19771  002EDE  0A01               	xorlw	1	; case 1
 19772  002EE0  B4D8               	btfsc	status,2,c
 19773  002EE2  D734               	goto	l19903
 19774  002EE4  0A03               	xorlw	3	; case 2
 19775  002EE6  B4D8               	btfsc	status,2,c
 19776  002EE8  D779               	goto	l19923
 19777  002EEA  0A01               	xorlw	1	; case 3
 19778  002EEC  B4D8               	btfsc	status,2,c
 19779  002EEE  D74B               	goto	l19911
 19780  002EF0  0A07               	xorlw	7	; case 4
 19781  002EF2  B4D8               	btfsc	status,2,c
 19782  002EF4  D73B               	goto	l19907
 19783  002EF6  0A01               	xorlw	1	; case 5
 19784  002EF8  B4D8               	btfsc	status,2,c
 19785  002EFA  D790               	goto	l19931
 19786  002EFC  0A03               	xorlw	3	; case 6
 19787  002EFE  B4D8               	btfsc	status,2,c
 19788  002F00  D7BB               	goto	l19943
 19789  002F02  0A01               	xorlw	1	; case 7
 19790  002F04  B4D8               	btfsc	status,2,c
 19791  002F06  D7B8               	goto	l19943
 19792  002F08  0A0C               	xorlw	12	; case 11
 19793  002F0A  B4D8               	btfsc	status,2,c
 19794  002F0C  D777               	goto	l19927
 19795  002F0E  D12E               	goto	l20029
 19796  002F10                     l19959:
 19797                           
 19798                           ; BSR set to: 1
 19799                           ;menu.c: 293:                     if (menuStatus != CFG_IDLE) {
 19800  002F10  51B7               	movf	_menuStatus& (0+255),w,b
 19801  002F12  B4D8               	btfsc	status,2,c
 19802  002F14  D12B               	goto	l20029
 19803                           
 19804                           ; BSR set to: 1
 19805                           ;menu.c: 294:                         menuTstamp = timeGet();
 19806  002F16  EC7B  F051         	call	_timeGet	;wreg free
 19807  002F1A  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 19808  002F20  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 19809                           
 19810                           ;menu.c: 296:                         switch (menuStatus) {
 19811  002F26  D0C8               	goto	l20017
 19812  002F28                     l19963:
 19813                           
 19814                           ; BSR set to: 1
 19815                           ;menu.c: 299:                                 menuVal = menuVal - 1;
 19816  002F28  0EFF               	movlw	255
 19817  002F2A  2593               	addwf	_menuVal& (0+255),w,b
 19818  002F2C  6F93               	movwf	_menuVal& (0+255),b
 19819  002F2E  0EFF               	movlw	255
 19820  002F30  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19821  002F32  6F94               	movwf	(_menuVal+1)& (0+255),b
 19822                           
 19823                           ;menu.c: 300:                                 if (menuVal < PEEP) {
 19824  002F34  51FA               	movf	_PEEP& (0+255),w,b
 19825  002F36  5D93               	subwf	_menuVal& (0+255),w,b
 19826  002F38  0E00               	movlw	0
 19827  002F3A  5994               	subwfb	(_menuVal+1)& (0+255),w,b
 19828  002F3C  B0D8               	btfsc	status,0,c
 19829  002F3E  D004               	goto	l19967
 19830                           
 19831                           ; BSR set to: 1
 19832                           ;menu.c: 301:                                     menuVal = PEEP;
 19833  002F40  C1FA  F193         	movff	_PEEP,_menuVal
 19834  002F44                     L35:
 19835  002F44  6B94               	clrf	(_menuVal+1)& (0+255),b
 19836                           
 19837                           ;menu.c: 302:                                 } else if (menuVal < 4) {
 19838  002F46  D112               	goto	l20029
 19839  002F48                     l19967:
 19840                           
 19841                           ; BSR set to: 1
 19842  002F48  5194               	movf	(_menuVal+1)& (0+255),w,b
 19843  002F4A  E108               	bnz	l19971
 19844  002F4C  0E04               	movlw	4
 19845  002F4E  5D93               	subwf	_menuVal& (0+255),w,b
 19846  002F50  B0D8               	btfsc	status,0,c
 19847  002F52  D004               	goto	l19971
 19848  002F54                     u21050:
 19849                           
 19850                           ; BSR set to: 1
 19851                           ;menu.c: 303:                                     menuVal = 4;
 19852  002F54  0E00               	movlw	0
 19853  002F56  6F94               	movwf	(_menuVal+1)& (0+255),b
 19854  002F58  0E04               	movlw	4
 19855  002F5A  D038               	goto	L40
 19856  002F5C                     l19971:
 19857                           
 19858                           ; BSR set to: 1
 19859  002F5C  0E04               	movlw	4
 19860  002F5E  19B7               	xorwf	_menuStatus& (0+255),w,b
 19861  002F60  A4D8               	btfss	status,2,c
 19862  002F62  D104               	goto	l20029
 19863                           
 19864                           ; BSR set to: 1
 19865  002F64  51F8               	movf	_VentMode& (0+255),w,b
 19866  002F66  A4D8               	btfss	status,2,c
 19867  002F68  D101               	goto	l20029
 19868                           
 19869                           ; BSR set to: 1
 19870  002F6A  51FB               	movf	_IP& (0+255),w,b
 19871  002F6C  5D93               	subwf	_menuVal& (0+255),w,b
 19872  002F6E  0E00               	movlw	0
 19873  002F70  5994               	subwfb	(_menuVal+1)& (0+255),w,b
 19874  002F72  A0D8               	btfss	status,0,c
 19875  002F74  D724               	goto	u20950
 19876  002F76  D0FA               	goto	l20029
 19877  002F78                     l19979:
 19878                           
 19879                           ; BSR set to: 1
 19880                           ;menu.c: 309:                                 menuVal = menuVal - 1;
 19881  002F78  0EFF               	movlw	255
 19882  002F7A  2593               	addwf	_menuVal& (0+255),w,b
 19883  002F7C  6F93               	movwf	_menuVal& (0+255),b
 19884  002F7E  0EFF               	movlw	255
 19885  002F80  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19886  002F82  6F94               	movwf	(_menuVal+1)& (0+255),b
 19887                           
 19888                           ;menu.c: 310:                                 if (menuVal < 4) {
 19889  002F84  5194               	movf	(_menuVal+1)& (0+255),w,b
 19890  002F86  E104               	bnz	u21091
 19891  002F88  0E04               	movlw	4
 19892  002F8A  5D93               	subwf	_menuVal& (0+255),w,b
 19893  002F8C  A0D8               	btfss	status,0,c
 19894  002F8E  D7E2               	goto	u21050
 19895  002F90                     u21091:
 19896  002F90  D0ED               	goto	l20029
 19897  002F92                     l19983:
 19898                           
 19899                           ; BSR set to: 1
 19900                           ;menu.c: 315:                                 menuVal = menuVal - 1;
 19901  002F92  0EFF               	movlw	255
 19902  002F94  2593               	addwf	_menuVal& (0+255),w,b
 19903  002F96  6F93               	movwf	_menuVal& (0+255),b
 19904  002F98  0EFF               	movlw	255
 19905  002F9A  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19906  002F9C  6F94               	movwf	(_menuVal+1)& (0+255),b
 19907                           
 19908                           ;menu.c: 316:                                 if (menuVal < 10) {
 19909  002F9E  5194               	movf	(_menuVal+1)& (0+255),w,b
 19910  002FA0  E103               	bnz	u21101
 19911  002FA2  0E0A               	movlw	10
 19912  002FA4  5D93               	subwf	_menuVal& (0+255),w,b
 19913  002FA6  B0D8               	btfsc	status,0,c
 19914  002FA8                     u21101:
 19915  002FA8  D0E1               	goto	l20029
 19916                           
 19917                           ; BSR set to: 1
 19918                           ;menu.c: 317:                                     menuVal = 10;
 19919  002FAA  0E00               	movlw	0
 19920  002FAC  6F94               	movwf	(_menuVal+1)& (0+255),b
 19921  002FAE  0E0A               	movlw	10
 19922  002FB0  D00D               	goto	L40
 19923  002FB2                     l19987:
 19924                           
 19925                           ; BSR set to: 1
 19926                           ;menu.c: 321:                                 menuVal = menuVal - 1;
 19927  002FB2  0EFF               	movlw	255
 19928  002FB4  2593               	addwf	_menuVal& (0+255),w,b
 19929  002FB6  6F93               	movwf	_menuVal& (0+255),b
 19930  002FB8  0EFF               	movlw	255
 19931  002FBA  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19932  002FBC  6F94               	movwf	(_menuVal+1)& (0+255),b
 19933                           
 19934                           ;menu.c: 322:                                 if (menuVal < 1) {
 19935  002FBE  5193               	movf	_menuVal& (0+255),w,b
 19936  002FC0  1194               	iorwf	(_menuVal+1)& (0+255),w,b
 19937  002FC2  A4D8               	btfss	status,2,c
 19938  002FC4  D0D3               	goto	l20029
 19939                           
 19940                           ; BSR set to: 1
 19941                           ;menu.c: 323:                                     menuVal = 1;
 19942  002FC6  0E00               	movlw	0
 19943  002FC8  6F94               	movwf	(_menuVal+1)& (0+255),b
 19944  002FCA  0E01               	movlw	1
 19945  002FCC                     L40:
 19946  002FCC  6F93               	movwf	_menuVal& (0+255),b
 19947  002FCE  D0CE               	goto	l20029
 19948  002FD0                     l19991:
 19949                           
 19950                           ; BSR set to: 1
 19951                           ;menu.c: 327:                                 menuVal = ((menuVal - 2 > (1500/10))? (150
      +                          0/10) : ((menuVal - 2 < (100/10))? (100/10) : menuVal - 2));
 19952  002FD0  0EFE               	movlw	254
 19953  002FD2  6F60               	movwf	??_MenuMng& (0+255),b
 19954  002FD4  0EFF               	movlw	255
 19955  002FD6  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19956  002FD8  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 19957  002FDE  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 19958  002FE4  5160               	movf	??_MenuMng& (0+255),w,b
 19959  002FE6  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 19960  002FE8  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19961  002FEA  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 19962  002FEC  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 19963  002FEE  E103               	bnz	u21121
 19964  002FF0  0E97               	movlw	151
 19965  002FF2  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 19966  002FF4  B0D8               	btfsc	status,0,c
 19967  002FF6                     u21121:
 19968  002FF6  D73C               	goto	l19941
 19969                           
 19970                           ; BSR set to: 1
 19971  002FF8  0EFE               	movlw	254
 19972  002FFA  6F60               	movwf	??_MenuMng& (0+255),b
 19973  002FFC  0EFF               	movlw	255
 19974  002FFE  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19975  003000  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 19976  003006  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 19977  00300C  5160               	movf	??_MenuMng& (0+255),w,b
 19978  00300E  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 19979  003010  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19980  003012  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 19981  003014  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 19982  003016  E104               	bnz	u21130
 19983  003018  0E0A               	movlw	10
 19984  00301A  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 19985  00301C  A0D8               	btfss	status,0,c
 19986  00301E  D007               	goto	l19997
 19987  003020                     u21130:
 19988                           
 19989                           ; BSR set to: 1
 19990  003020  0EFE               	movlw	254
 19991  003022  2593               	addwf	_menuVal& (0+255),w,b
 19992  003024  6F6A               	movwf	_MenuMng$4366& (0+255),b
 19993  003026  0EFF               	movlw	255
 19994  003028  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19995  00302A  6F6B               	movwf	(_MenuMng$4366+1)& (0+255),b
 19996  00302C  D004               	goto	l19999
 19997  00302E                     l19997:
 19998                           
 19999                           ; BSR set to: 1
 20000  00302E  0E00               	movlw	0
 20001  003030  6F6B               	movwf	(_MenuMng$4366+1)& (0+255),b
 20002  003032  0E0A               	movlw	10
 20003  003034  6F6A               	movwf	_MenuMng$4366& (0+255),b
 20004  003036                     l19999:
 20005                           
 20006                           ; BSR set to: 1
 20007  003036  0060  F5A8  F193   	movff	_MenuMng$4366,_menuVal
 20008  00303C  0060  F5AC  F194   	movff	_MenuMng$4366+1,_menuVal+1
 20009  003042  D094               	goto	l20029
 20010  003044                     l20003:
 20011                           
 20012                           ; BSR set to: 1
 20013                           ;menu.c: 331:                                 menuVal = ((menuVal - 2 > (1500/10))? (150
      +                          0/10) : ((menuVal - 2 < (50/10))? (50/10) : menuVal - 2));
 20014  003044  0EFE               	movlw	254
 20015  003046  6F60               	movwf	??_MenuMng& (0+255),b
 20016  003048  0EFF               	movlw	255
 20017  00304A  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20018  00304C  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 20019  003052  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 20020  003058  5160               	movf	??_MenuMng& (0+255),w,b
 20021  00305A  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 20022  00305C  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20023  00305E  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 20024  003060  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 20025  003062  E103               	bnz	u21141
 20026  003064  0E97               	movlw	151
 20027  003066  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 20028  003068  B0D8               	btfsc	status,0,c
 20029  00306A                     u21141:
 20030  00306A  D702               	goto	l19941
 20031                           
 20032                           ; BSR set to: 1
 20033  00306C  0EFE               	movlw	254
 20034  00306E  6F60               	movwf	??_MenuMng& (0+255),b
 20035  003070  0EFF               	movlw	255
 20036  003072  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20037  003074  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 20038  00307A  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 20039  003080  5160               	movf	??_MenuMng& (0+255),w,b
 20040  003082  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 20041  003084  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20042  003086  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 20043  003088  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 20044  00308A  E104               	bnz	u21150
 20045  00308C  0E05               	movlw	5
 20046  00308E  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 20047  003090  A0D8               	btfss	status,0,c
 20048  003092  D007               	goto	l20009
 20049  003094                     u21150:
 20050                           
 20051                           ; BSR set to: 1
 20052  003094  0EFE               	movlw	254
 20053  003096  2593               	addwf	_menuVal& (0+255),w,b
 20054  003098  6F6C               	movwf	_MenuMng$4367& (0+255),b
 20055  00309A  0EFF               	movlw	255
 20056  00309C  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 20057  00309E  6F6D               	movwf	(_MenuMng$4367+1)& (0+255),b
 20058  0030A0  D004               	goto	l20011
 20059  0030A2                     l20009:
 20060                           
 20061                           ; BSR set to: 1
 20062  0030A2  0E00               	movlw	0
 20063  0030A4  6F6D               	movwf	(_MenuMng$4367+1)& (0+255),b
 20064  0030A6  0E05               	movlw	5
 20065  0030A8  6F6C               	movwf	_MenuMng$4367& (0+255),b
 20066  0030AA                     l20011:
 20067                           
 20068                           ; BSR set to: 1
 20069  0030AA  0060  F5B0  F193   	movff	_MenuMng$4367,_menuVal
 20070  0030B0  0060  F5B4  F194   	movff	_MenuMng$4367+1,_menuVal+1
 20071  0030B6  D05A               	goto	l20029
 20072  0030B8                     l20017:
 20073                           
 20074                           ; BSR set to: 0
 20075  0030B8  0101               	movlb	1	; () banked
 20076  0030BA  51B7               	movf	_menuStatus& (0+255),w,b
 20077  0030BC  6F60               	movwf	??_MenuMng& (0+255),b
 20078  0030BE  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 20079                           
 20080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20081                           ; Switch size 1, requested type "simple"
 20082                           ; Number of cases is 1, Range of values is 0 to 0
 20083                           ; switch strategies available:
 20084                           ; Name         Instructions Cycles
 20085                           ; simple_byte            4     3 (average)
 20086                           ;	Chosen strategy is simple_byte
 20087  0030C0  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20088  0030C2  0A00               	xorlw	0	; case 0
 20089  0030C4  A4D8               	btfss	status,2,c
 20090  0030C6  D052               	goto	l20029
 20091                           
 20092                           ; BSR set to: 1
 20093                           ; Switch size 1, requested type "simple"
 20094                           ; Number of cases is 8, Range of values is 1 to 11
 20095                           ; switch strategies available:
 20096                           ; Name         Instructions Cycles
 20097                           ; simple_byte           25    13 (average)
 20098                           ;	Chosen strategy is simple_byte
 20099  0030C8  5160               	movf	??_MenuMng& (0+255),w,b
 20100  0030CA  0A01               	xorlw	1	; case 1
 20101  0030CC  B4D8               	btfsc	status,2,c
 20102  0030CE  D72C               	goto	l19963
 20103  0030D0  0A03               	xorlw	3	; case 2
 20104  0030D2  B4D8               	btfsc	status,2,c
 20105  0030D4  D75E               	goto	l19983
 20106  0030D6  0A01               	xorlw	1	; case 3
 20107  0030D8  B4D8               	btfsc	status,2,c
 20108  0030DA  D74E               	goto	l19979
 20109  0030DC  0A07               	xorlw	7	; case 4
 20110  0030DE  B4D8               	btfsc	status,2,c
 20111  0030E0  D723               	goto	l19963
 20112  0030E2  0A01               	xorlw	1	; case 5
 20113  0030E4  B4D8               	btfsc	status,2,c
 20114  0030E6  D774               	goto	l19991
 20115  0030E8  0A03               	xorlw	3	; case 6
 20116  0030EA  B4D8               	btfsc	status,2,c
 20117  0030EC  D7AB               	goto	l20003
 20118  0030EE  0A01               	xorlw	1	; case 7
 20119  0030F0  B4D8               	btfsc	status,2,c
 20120  0030F2  D7A8               	goto	l20003
 20121  0030F4  0A0C               	xorlw	12	; case 11
 20122  0030F6  B4D8               	btfsc	status,2,c
 20123  0030F8  D75C               	goto	l19987
 20124  0030FA  D038               	goto	l20029
 20125  0030FC                     l20019:
 20126                           
 20127                           ; BSR set to: 1
 20128                           ;menu.c: 340:                     if (menuStatus == CFG_IDLE) {
 20129  0030FC  51B7               	movf	_menuStatus& (0+255),w,b
 20130  0030FE  A4D8               	btfss	status,2,c
 20131  003100  D035               	goto	l20029
 20132                           
 20133                           ; BSR set to: 1
 20134                           ;menu.c: 342:                         menuStatus = CFG_POWEROFF;
 20135  003102  0E0C               	movlw	12
 20136  003104  6FB7               	movwf	_menuStatus& (0+255),b
 20137                           
 20138                           ; BSR set to: 1
 20139                           ;menu.c: 343:                         menuTstamp = timeGet();
 20140  003106  EC7B  F051         	call	_timeGet	;wreg free
 20141  00310A  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 20142  003110  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 20143                           
 20144                           ; BSR set to: 0
 20145                           ;menu.c: 344:                         LATDbits.LATD0 = 1;
 20146  003116  80BD               	bsf	189,0,c	;volatile
 20147  003118  D029               	goto	l20029
 20148  00311A                     l20027:
 20149                           
 20150                           ; BSR set to: 1
 20151  00311A  0060  F5B8  F160   	movff	MenuMng@keyPress,??_MenuMng
 20152  003120  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 20153  003122  BF60               	btfsc	??_MenuMng& (0+255),7,b
 20154  003124  0761               	decf	(??_MenuMng+1)& (0+255),f,b
 20155                           
 20156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20157                           ; Switch size 1, requested type "simple"
 20158                           ; Number of cases is 1, Range of values is 0 to 0
 20159                           ; switch strategies available:
 20160                           ; Name         Instructions Cycles
 20161                           ; simple_byte            4     3 (average)
 20162                           ;	Chosen strategy is simple_byte
 20163  003126  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20164  003128  0A00               	xorlw	0	; case 0
 20165  00312A  A4D8               	btfss	status,2,c
 20166  00312C  D01F               	goto	l20029
 20167                           
 20168                           ; BSR set to: 1
 20169                           ; Switch size 1, requested type "simple"
 20170                           ; Number of cases is 10, Range of values is 0 to 10
 20171                           ; switch strategies available:
 20172                           ; Name         Instructions Cycles
 20173                           ; simple_byte           31    16 (average)
 20174                           ;	Chosen strategy is simple_byte
 20175  00312E  5160               	movf	??_MenuMng& (0+255),w,b
 20176  003130  0A00               	xorlw	0	; case 0
 20177  003132  B4D8               	btfsc	status,2,c
 20178  003134  D479               	goto	l19705
 20179  003136  0A01               	xorlw	1	; case 1
 20180  003138  B4D8               	btfsc	status,2,c
 20181  00313A  D547               	goto	l19787
 20182  00313C  0A03               	xorlw	3	; case 2
 20183  00313E  B4D8               	btfsc	status,2,c
 20184  003140  D501               	goto	l19759
 20185  003142  0A01               	xorlw	1	; case 3
 20186  003144  B4D8               	btfsc	status,2,c
 20187  003146  D5F6               	goto	l19899
 20188  003148  0A06               	xorlw	6	; case 5
 20189  00314A  B4D8               	btfsc	status,2,c
 20190  00314C  D6E1               	goto	l19959
 20191  00314E  0A03               	xorlw	3	; case 6
 20192  003150  B4D8               	btfsc	status,2,c
 20193  003152  D564               	goto	l19825
 20194  003154  0A01               	xorlw	1	; case 7
 20195  003156  B4D8               	btfsc	status,2,c
 20196  003158  D550               	goto	l19809
 20197  00315A  0A0F               	xorlw	15	; case 8
 20198  00315C  B4D8               	btfsc	status,2,c
 20199  00315E  D5C6               	goto	l19867
 20200  003160  0A01               	xorlw	1	; case 9
 20201  003162  B4D8               	btfsc	status,2,c
 20202  003164  D5D4               	goto	l19883
 20203  003166  0A03               	xorlw	3	; case 10
 20204  003168  B4D8               	btfsc	status,2,c
 20205  00316A  D7C8               	goto	l20019
 20206  00316C                     l20029:
 20207                           
 20208                           ;menu.c: 348:         lcdPrintBR = 1;
 20209  00316C  0E01               	movlw	1
 20210  00316E  0101               	movlb	1	; () banked
 20211  003170  6FCD               	movwf	_lcdPrintBR& (0+255),b
 20212                           
 20213                           ;menu.c: 349:         lcdPrintTR = 1;
 20214  003172  0E01               	movlw	1
 20215  003174  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20216                           
 20217                           ;menu.c: 350:     } else {
 20218  003176  0012               	return	
 20219  003178                     l20031:
 20220                           
 20221                           ; BSR set to: 1
 20222                           ;menu.c: 351:         if ((menuStatus != CFG_IDLE) && (timeElapsed(menuTstamp, ((time_t)
      +                           (5*1000))))) {
 20223  003178  51B7               	movf	_menuStatus& (0+255),w,b
 20224  00317A  B4D8               	btfsc	status,2,c
 20225  00317C  0012               	return	
 20226                           
 20227                           ; BSR set to: 1
 20228  00317E  0060  F8E0  F093   	movff	_menuTstamp,timeElapsed@prevTime
 20229  003184  0060  F8E4  F094   	movff	_menuTstamp+1,timeElapsed@prevTime+1
 20230  00318A  0E13               	movlw	19
 20231  00318C  0100               	movlb	0	; () banked
 20232  00318E  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
 20233  003190  0E88               	movlw	136
 20234  003192  6F95               	movwf	timeElapsed@duration& (0+255),b
 20235  003194  EC8A  F04D         	call	_timeElapsed	;wreg free
 20236  003198  0900               	iorlw	0
 20237  00319A  B4D8               	btfsc	status,2,c
 20238  00319C  0012               	return	
 20239                           
 20240                           ; BSR set to: 0
 20241                           ;menu.c: 353:             lcdPrintTR = 1;
 20242  00319E  0E01               	movlw	1
 20243  0031A0  0101               	movlb	1	; () banked
 20244  0031A2  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20245                           
 20246                           ;menu.c: 354:             lcdPrintBR = 1;
 20247  0031A4  0E01               	movlw	1
 20248  0031A6  6FCD               	movwf	_lcdPrintBR& (0+255),b
 20249                           
 20250                           ;menu.c: 355:             menuStatus = CFG_IDLE;
 20251  0031A8  0E00               	movlw	0
 20252  0031AA  6FB7               	movwf	_menuStatus& (0+255),b
 20253  0031AC  0012               	return		;funcret
 20254  0031AE                     __end_of_MenuMng:
 20255                           	opt callstack 0
 20256                           
 20257 ;; *************** function _I2C2_MuxInit *****************
 20258 ;; Defined at:
 20259 ;;		line 23 in file "i2c2_mux.c"
 20260 ;; Parameters:    Size  Location     Type
 20261 ;;		None
 20262 ;; Auto vars:     Size  Location     Type
 20263 ;;		None
 20264 ;; Return value:  Size  Location     Type
 20265 ;;                  1    wreg      void 
 20266 ;; Registers used:
 20267 ;;		wreg, status,2
 20268 ;; Tracked objects:
 20269 ;;		On entry : 6/0
 20270 ;;		On exit  : 3F/1
 20271 ;;		Unchanged: 0/0
 20272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20277 ;;Total ram usage:        0 bytes
 20278 ;; Hardware stack levels used:    1
 20279 ;; Hardware stack levels required when called:   17
 20280 ;; This function calls:
 20281 ;;		Nothing
 20282 ;; This function is called by:
 20283 ;;		_main
 20284 ;; This function uses a non-reentrant model
 20285 ;;
 20286                           
 20287                           	psect	text63
 20288  00A0AE                     __ptext63:
 20289                           	opt callstack 0
 20290  00A0AE                     _I2C2_MuxInit:
 20291                           	opt callstack 13
 20292                           
 20293                           ;i2c2_mux.c: 24:     lastI2C2MAckResponse = 1;
 20294                           
 20295                           ;incstack = 0
 20296  00A0AE  0E01               	movlw	1
 20297  00A0B0  0101               	movlb	1	; () banked
 20298  00A0B2  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 20299                           
 20300                           ;i2c2_mux.c: 25:     lastI2C2LAckResponse = 1;
 20301  00A0B4  0E01               	movlw	1
 20302  00A0B6  0102               	movlb	2	; () banked
 20303  00A0B8  6F4D               	movwf	_lastI2C2LAckResponse& (0+255),b
 20304                           
 20305                           ;i2c2_mux.c: 26:     lastI2C2MTrfResponse = I2C2_NOERR;
 20306  00A0BA  0E00               	movlw	0
 20307  00A0BC  0100               	movlb	0	; () banked
 20308  00A0BE  6FC0               	movwf	_lastI2C2MTrfResponse& (0+255),b
 20309                           
 20310                           ;i2c2_mux.c: 27:     lastI2C2LTrfResponse = I2C2_NOERR;
 20311  00A0C0  0E00               	movlw	0
 20312  00A0C2  0102               	movlb	2	; () banked
 20313  00A0C4  6F4E               	movwf	_lastI2C2LTrfResponse& (0+255),b
 20314                           
 20315                           ;i2c2_mux.c: 28:     currentTrfAddr = 0x0;
 20316  00A0C6  0E00               	movlw	0
 20317  00A0C8  0101               	movlb	1	; () banked
 20318  00A0CA  6FB6               	movwf	_currentTrfAddr& (0+255),b
 20319                           
 20320                           ; BSR set to: 1
 20321  00A0CC  0012               	return		;funcret
 20322  00A0CE                     __end_of_I2C2_MuxInit:
 20323                           	opt callstack 0
 20324                           
 20325 ;; *************** function _CtrlPowerOff *****************
 20326 ;; Defined at:
 20327 ;;		line 172 in file "main.c"
 20328 ;; Parameters:    Size  Location     Type
 20329 ;;		None
 20330 ;; Auto vars:     Size  Location     Type
 20331 ;;		None
 20332 ;; Return value:  Size  Location     Type
 20333 ;;                  1    wreg      void 
 20334 ;; Registers used:
 20335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20336 ;; Tracked objects:
 20337 ;;		On entry : 3F/1
 20338 ;;		On exit  : 3F/1
 20339 ;;		Unchanged: 0/0
 20340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20345 ;;Total ram usage:        0 bytes
 20346 ;; Hardware stack levels used:    1
 20347 ;; Hardware stack levels required when called:   32
 20348 ;; This function calls:
 20349 ;;		_MonitorMsgSendBlock
 20350 ;;		_PrintStrBusy
 20351 ;;		_keyRead
 20352 ;;		_printf
 20353 ;;		_printstrblock
 20354 ;;		_screenMng
 20355 ;;		_setBacklight
 20356 ;;		_setCursor
 20357 ;;		_timeDelayMs
 20358 ;; This function is called by:
 20359 ;;		_main
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           	psect	text64
 20364  008252                     __ptext64:
 20365                           	opt callstack 0
 20366  008252                     _CtrlPowerOff:
 20367                           	opt callstack 0
 20368                           
 20369                           ; BSR set to: 1
 20370                           ;main.c: 174:     setCursor(0, 1);
 20371                           
 20372                           ; BSR set to: 1
 20373                           ;incstack = 0
 20374 ;; hardware stack exceeded
 20375  008252  0E01               	movlw	1
 20376  008254  0100               	movlb	0	; () banked
 20377  008256  6F92               	movwf	setCursor@row& (0+255),b
 20378  008258  0E00               	movlw	0
 20379  00825A  EC55  F04B         	call	_setCursor
 20380                           
 20381                           ;main.c: 175:     printstrblock("                ");
 20382  00825E  0EE3               	movlw	low STR_2
 20383  008260  0100               	movlb	0	; () banked
 20384  008262  6F8F               	movwf	printstrblock@c& (0+255),b
 20385  008264  0EFE               	movlw	high STR_2
 20386  008266  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 20387  008268  EC4E  F04F         	call	_printstrblock	;wreg free
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;main.c: 176:     printf ("POWER-OFF\n");
 20391  00826C  0E6B               	movlw	low STR_3
 20392  00826E  0101               	movlb	1	; () banked
 20393  008270  6F46               	movwf	printf@fmt& (0+255),b
 20394  008272  0EFF               	movlw	high STR_3
 20395  008274  6F47               	movwf	(printf@fmt+1)& (0+255),b
 20396  008276  ECE9  F04E         	call	_printf	;wreg free
 20397                           
 20398                           ; BSR set to: 2
 20399                           ;main.c: 178:     LATDbits.LATD0 = 0;
 20400  00827A  90BD               	bcf	189,0,c	;volatile
 20401                           
 20402                           ; BSR set to: 2
 20403                           ;main.c: 179:     LATAbits.LATA3 = 0;
 20404  00827C  96BA               	bcf	186,3,c	;volatile
 20405                           
 20406                           ; BSR set to: 2
 20407                           ;main.c: 180:     LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 20408  00827E  94BA               	bcf	186,2,c	;volatile
 20409                           
 20410                           ; BSR set to: 2
 20411  008280  96BC               	bcf	188,3,c	;volatile
 20412                           
 20413                           ; BSR set to: 2
 20414                           ;main.c: 181:     LATDbits.LATD6 = 0;
 20415  008282  9CBD               	bcf	189,6,c	;volatile
 20416                           
 20417                           ; BSR set to: 2
 20418                           ;main.c: 183:     lcdPrintTR = 1;
 20419  008284  0E01               	movlw	1
 20420  008286  0101               	movlb	1	; () banked
 20421  008288  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20422                           
 20423                           ; BSR set to: 1
 20424                           ;main.c: 184:     screenMng();
 20425  00828A  ECD7  F018         	call	_screenMng	;wreg free
 20426  00828E                     l19319:
 20427  00828E  ECBE  F052         	call	_PrintStrBusy	;wreg free
 20428  008292  0900               	iorlw	0
 20429  008294  A4D8               	btfss	status,2,c
 20430  008296  D7FB               	goto	l19319
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;main.c: 186:     screenMng();
 20434  008298  ECD7  F018         	call	_screenMng	;wreg free
 20435                           
 20436                           ;main.c: 187:     timeDelayMs(50);
 20437  00829C  0E00               	movlw	0
 20438  00829E  0100               	movlb	0	; () banked
 20439  0082A0  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20440  0082A2  0E32               	movlw	50
 20441  0082A4  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20442  0082A6  EC8B  F04C         	call	_timeDelayMs	;wreg free
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;main.c: 189:     MonitorMsgSendBlock(MONSTATE_SLEEP);
 20446  0082AA  0E08               	movlw	8
 20447  0082AC  EC61  F04F         	call	_MonitorMsgSendBlock
 20448                           
 20449                           ; BSR set to: 1
 20450                           ;main.c: 190:     timeDelayMs(50);
 20451  0082B0  0E00               	movlw	0
 20452  0082B2  0100               	movlb	0	; () banked
 20453  0082B4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20454  0082B6  0E32               	movlw	50
 20455  0082B8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20456  0082BA  EC8B  F04C         	call	_timeDelayMs	;wreg free
 20457                           
 20458                           ; BSR set to: 0
 20459                           ;main.c: 191:     setBacklight(0);
 20460  0082BE  0E00               	movlw	0
 20461  0082C0  ECFC  F050         	call	_setBacklight
 20462                           
 20463                           ;main.c: 193:     printf ("Wait for key press\n");
 20464  0082C4  0E08               	movlw	low STR_4
 20465  0082C6  0101               	movlb	1	; () banked
 20466  0082C8  6F46               	movwf	printf@fmt& (0+255),b
 20467  0082CA  0EFD               	movlw	high STR_4
 20468  0082CC  6F47               	movwf	(printf@fmt+1)& (0+255),b
 20469  0082CE  ECE9  F04E         	call	_printf	;wreg free
 20470  0082D2                     l19333:
 20471  0082D2  ECEC  F049         	call	_keyRead	;wreg free
 20472  0082D6  0A0A               	xorlw	10
 20473  0082D8  A4D8               	btfss	status,2,c
 20474  0082DA  D7FB               	goto	l19333
 20475                           
 20476                           ; BSR set to: 0
 20477                           ;main.c: 196:     ctrlStatus = CTRL_STOP;
 20478  0082DC  0E01               	movlw	1
 20479  0082DE  0101               	movlb	1	; () banked
 20480  0082E0  6FC8               	movwf	_ctrlStatus& (0+255),b
 20481                           
 20482                           ; BSR set to: 1
 20483                           ;main.c: 197:     timeDelayMs(50);
 20484  0082E2  0E00               	movlw	0
 20485  0082E4  0100               	movlb	0	; () banked
 20486  0082E6  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20487  0082E8  0E32               	movlw	50
 20488  0082EA  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20489  0082EC  EC8B  F04C         	call	_timeDelayMs	;wreg free
 20490                           
 20491                           ; BSR set to: 0
 20492                           ;main.c: 198:     MonitorMsgSendBlock(MONSTATE_STOP);
 20493  0082F0  0E00               	movlw	0
 20494  0082F2  EC61  F04F         	call	_MonitorMsgSendBlock
 20495                           
 20496                           ; BSR set to: 1
 20497  0082F6  0012               	return		;funcret
 20498  0082F8                     __end_of_CtrlPowerOff:
 20499                           	opt callstack 0
 20500                           
 20501 ;; *************** function _timeDelayMs *****************
 20502 ;; Defined at:
 20503 ;;		line 54 in file "time.c"
 20504 ;; Parameters:    Size  Location     Type
 20505 ;;  delms           2   59[BANK0 ] unsigned short 
 20506 ;; Auto vars:     Size  Location     Type
 20507 ;;  tstamp          2   61[BANK0 ] unsigned short 
 20508 ;; Return value:  Size  Location     Type
 20509 ;;                  1    wreg      void 
 20510 ;; Registers used:
 20511 ;;		wreg, status,2, status,0, cstack
 20512 ;; Tracked objects:
 20513 ;;		On entry : 3F/0
 20514 ;;		On exit  : 3F/0
 20515 ;;		Unchanged: 0/0
 20516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20520 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20521 ;;Total ram usage:        4 bytes
 20522 ;; Hardware stack levels used:    1
 20523 ;; Hardware stack levels required when called:   19
 20524 ;; This function calls:
 20525 ;;		_timeElapsed
 20526 ;;		_timeGet
 20527 ;; This function is called by:
 20528 ;;		_CtrlPowerOff
 20529 ;;		_main
 20530 ;;		_LcdI2CInit
 20531 ;;		_clear
 20532 ;;		_home
 20533 ;;		_screenInit
 20534 ;;		_pressureSensorChk
 20535 ;;		_flowChk
 20536 ;;		_SelfTest
 20537 ;; This function uses a non-reentrant model
 20538 ;;
 20539                           
 20540                           	psect	text65
 20541  009916                     __ptext65:
 20542                           	opt callstack 0
 20543  009916                     _timeDelayMs:
 20544                           	opt callstack 11
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;time.c: 55:     time_t tstamp;;time.c: 56:     tstamp=timeGet();
 20548                           
 20549                           ; BSR set to: 1
 20550                           ;incstack = 0
 20551  009916  EC7B  F051         	call	_timeGet	;wreg free
 20552  00991A  0060  F24C  F09D   	movff	?_timeGet,timeDelayMs@tstamp
 20553  009920  0060  F250  F09E   	movff	?_timeGet+1,timeDelayMs@tstamp+1
 20554  009926                     l17679:
 20555                           
 20556                           ; BSR set to: 0
 20557  009926  0060  F274  F093   	movff	timeDelayMs@tstamp,timeElapsed@prevTime
 20558  00992C  0060  F278  F094   	movff	timeDelayMs@tstamp+1,timeElapsed@prevTime+1
 20559  009932  0060  F26C  F095   	movff	timeDelayMs@delms,timeElapsed@duration
 20560  009938  0060  F270  F096   	movff	timeDelayMs@delms+1,timeElapsed@duration+1
 20561  00993E  EC8A  F04D         	call	_timeElapsed	;wreg free
 20562  009942  0900               	iorlw	0
 20563  009944  A4D8               	btfss	status,2,c
 20564  009946  0012               	return	
 20565  009948  D7EE               	goto	l17679
 20566  00994A                     __end_of_timeDelayMs:
 20567                           	opt callstack 0
 20568                           
 20569 ;; *************** function _timeElapsed *****************
 20570 ;; Defined at:
 20571 ;;		line 43 in file "time.c"
 20572 ;; Parameters:    Size  Location     Type
 20573 ;;  prevTime        2   51[BANK0 ] unsigned short 
 20574 ;;  duration        2   53[BANK0 ] unsigned short 
 20575 ;; Auto vars:     Size  Location     Type
 20576 ;;  intDur          2   57[BANK0 ] unsigned short 
 20577 ;;  intTime         2   55[BANK0 ] unsigned short 
 20578 ;; Return value:  Size  Location     Type
 20579 ;;                  1    wreg      _Bool 
 20580 ;; Registers used:
 20581 ;;		wreg, status,2, status,0, cstack
 20582 ;; Tracked objects:
 20583 ;;		On entry : 3C/0
 20584 ;;		On exit  : 3F/0
 20585 ;;		Unchanged: 0/0
 20586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20587 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20588 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20590 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20591 ;;Total ram usage:        8 bytes
 20592 ;; Hardware stack levels used:    1
 20593 ;; Hardware stack levels required when called:   18
 20594 ;; This function calls:
 20595 ;;		_TMR1_ReadTimer
 20596 ;; This function is called by:
 20597 ;;		_main
 20598 ;;		_timeDelayMs
 20599 ;;		_MenuMng
 20600 ;; This function uses a non-reentrant model
 20601 ;;
 20602                           
 20603                           	psect	text66
 20604  009B14                     __ptext66:
 20605                           	opt callstack 0
 20606  009B14                     _timeElapsed:
 20607                           	opt callstack 12
 20608                           
 20609                           ;time.c: 44:     time_t intTime, intDur;;time.c: 45:     intTime = TMR1_ReadTimer();
 20610                           
 20611                           ; BSR set to: 0
 20612                           ;incstack = 0
 20613  009B14  ECD3  F04E         	call	_TMR1_ReadTimer	;wreg free
 20614  009B18  0060  F22C  F097   	movff	?_TMR1_ReadTimer,timeElapsed@intTime
 20615  009B1E  0060  F230  F098   	movff	?_TMR1_ReadTimer+1,timeElapsed@intTime+1
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;time.c: 46:     intDur = intTime - prevTime;
 20619  009B24  5193               	movf	timeElapsed@prevTime& (0+255),w,b
 20620  009B26  5D97               	subwf	timeElapsed@intTime& (0+255),w,b
 20621  009B28  6F99               	movwf	timeElapsed@intDur& (0+255),b
 20622  009B2A  5194               	movf	(timeElapsed@prevTime+1)& (0+255),w,b
 20623  009B2C  5998               	subwfb	(timeElapsed@intTime+1)& (0+255),w,b
 20624  009B2E  6F9A               	movwf	(timeElapsed@intDur+1)& (0+255),b
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;time.c: 47:     if (intDur < duration) {
 20628  009B30  5195               	movf	timeElapsed@duration& (0+255),w,b
 20629  009B32  5D99               	subwf	timeElapsed@intDur& (0+255),w,b
 20630  009B34  5196               	movf	(timeElapsed@duration+1)& (0+255),w,b
 20631  009B36  599A               	subwfb	(timeElapsed@intDur+1)& (0+255),w,b
 20632  009B38  B0D8               	btfsc	status,0,c
 20633  009B3A  D002               	goto	l17567
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;time.c: 48:         return 0;
 20637  009B3C  0E00               	movlw	0
 20638  009B3E  0012               	return	
 20639  009B40                     l17567:
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;time.c: 50:         return 1;
 20643  009B40  0E01               	movlw	1
 20644                           
 20645                           ; BSR set to: 0
 20646  009B42  0012               	return		;funcret
 20647  009B44                     __end_of_timeElapsed:
 20648                           	opt callstack 0
 20649                           
 20650 ;; *************** function _setBacklight *****************
 20651 ;; Defined at:
 20652 ;;		line 328 in file "LiquidCrystal_I2C.c"
 20653 ;; Parameters:    Size  Location     Type
 20654 ;;  new_val         1    wreg     _Bool 
 20655 ;; Auto vars:     Size  Location     Type
 20656 ;;  new_val         1   48[BANK0 ] _Bool 
 20657 ;; Return value:  Size  Location     Type
 20658 ;;                  1    wreg      void 
 20659 ;; Registers used:
 20660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20661 ;; Tracked objects:
 20662 ;;		On entry : 3C/0
 20663 ;;		On exit  : 6/0
 20664 ;;		Unchanged: 0/0
 20665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20669 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20670 ;;Total ram usage:        1 bytes
 20671 ;; Hardware stack levels used:    1
 20672 ;; Hardware stack levels required when called:   21
 20673 ;; This function calls:
 20674 ;;		_backlight
 20675 ;;		_noBacklight
 20676 ;; This function is called by:
 20677 ;;		_CtrlPowerOff
 20678 ;;		_main
 20679 ;;		_SelfTest
 20680 ;; This function uses a non-reentrant model
 20681 ;;
 20682                           
 20683                           	psect	text67
 20684  00A1F8                     __ptext67:
 20685                           	opt callstack 0
 20686  00A1F8                     _setBacklight:
 20687                           	opt callstack 9
 20688                           
 20689                           ; BSR set to: 0
 20690                           ;incstack = 0
 20691                           ;setBacklight@new_val stored from wreg
 20692  00A1F8  0100               	movlb	0	; () banked
 20693  00A1FA  6F90               	movwf	setBacklight@new_val& (0+255),b
 20694                           
 20695                           ;LiquidCrystal_I2C.c: 329:  if(new_val){
 20696  00A1FC  0100               	movlb	0	; () banked
 20697  00A1FE  5190               	movf	setBacklight@new_val& (0+255),w,b
 20698  00A200  B4D8               	btfsc	status,2,c
 20699  00A202  D003               	goto	l18703
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;LiquidCrystal_I2C.c: 330:   backlight();
 20703  00A204  EC53  F052         	call	_backlight	;wreg free
 20704                           
 20705                           ;LiquidCrystal_I2C.c: 331:  }else{
 20706  00A208  0012               	return	
 20707  00A20A                     l18703:
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;LiquidCrystal_I2C.c: 332:   noBacklight();
 20711  00A20A  EC4D  F052         	call	_noBacklight	;wreg free
 20712  00A20E  0012               	return		;funcret
 20713  00A210                     __end_of_setBacklight:
 20714                           	opt callstack 0
 20715                           
 20716 ;; *************** function _noBacklight *****************
 20717 ;; Defined at:
 20718 ;;		line 314 in file "LiquidCrystal_I2C.c"
 20719 ;; Parameters:    Size  Location     Type
 20720 ;;		None
 20721 ;; Auto vars:     Size  Location     Type
 20722 ;;		None
 20723 ;; Return value:  Size  Location     Type
 20724 ;;                  1    wreg      void 
 20725 ;; Registers used:
 20726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20727 ;; Tracked objects:
 20728 ;;		On entry : 3F/0
 20729 ;;		On exit  : 6/0
 20730 ;;		Unchanged: 0/0
 20731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20736 ;;Total ram usage:        0 bytes
 20737 ;; Hardware stack levels used:    1
 20738 ;; Hardware stack levels required when called:   20
 20739 ;; This function calls:
 20740 ;;		_expanderWriteBlock
 20741 ;; This function is called by:
 20742 ;;		_setBacklight
 20743 ;; This function uses a non-reentrant model
 20744 ;;
 20745                           
 20746                           	psect	text68
 20747  00A49A                     __ptext68:
 20748                           	opt callstack 0
 20749  00A49A                     _noBacklight:
 20750                           	opt callstack 9
 20751                           
 20752                           ; BSR set to: 0
 20753                           ;LiquidCrystal_I2C.c: 315:  _backlightval=0x00;
 20754                           
 20755                           ;incstack = 0
 20756  00A49A  0E00               	movlw	0
 20757  00A49C  6FC4               	movwf	__backlightval& (0+255),b	;volatile
 20758                           
 20759                           ; BSR set to: 0
 20760                           ;LiquidCrystal_I2C.c: 316:  expanderWriteBlock(0);
 20761  00A49E  0E00               	movlw	0
 20762  00A4A0  EC9F  F051         	call	_expanderWriteBlock
 20763  00A4A4  0012               	return		;funcret
 20764  00A4A6                     __end_of_noBacklight:
 20765                           	opt callstack 0
 20766                           
 20767 ;; *************** function _backlight *****************
 20768 ;; Defined at:
 20769 ;;		line 319 in file "LiquidCrystal_I2C.c"
 20770 ;; Parameters:    Size  Location     Type
 20771 ;;		None
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;		None
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  1    wreg      void 
 20776 ;; Registers used:
 20777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20778 ;; Tracked objects:
 20779 ;;		On entry : 3F/0
 20780 ;;		On exit  : 6/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20787 ;;Total ram usage:        0 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:   20
 20790 ;; This function calls:
 20791 ;;		_expanderWriteBlock
 20792 ;; This function is called by:
 20793 ;;		_setBacklight
 20794 ;; This function uses a non-reentrant model
 20795 ;;
 20796                           
 20797                           	psect	text69
 20798  00A4A6                     __ptext69:
 20799                           	opt callstack 0
 20800  00A4A6                     _backlight:
 20801                           	opt callstack 9
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;LiquidCrystal_I2C.c: 320:  _backlightval=0x08;
 20805                           
 20806                           ;incstack = 0
 20807  00A4A6  0E08               	movlw	8
 20808  00A4A8  6FC4               	movwf	__backlightval& (0+255),b	;volatile
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;LiquidCrystal_I2C.c: 321:  expanderWriteBlock(0);
 20812  00A4AA  0E00               	movlw	0
 20813  00A4AC  EC9F  F051         	call	_expanderWriteBlock
 20814  00A4B0  0012               	return		;funcret
 20815  00A4B2                     __end_of_backlight:
 20816                           	opt callstack 0
 20817                           
 20818 ;; *************** function _expanderWriteBlock *****************
 20819 ;; Defined at:
 20820 ;;		line 87 in file "LiquidCrystal_I2C.c"
 20821 ;; Parameters:    Size  Location     Type
 20822 ;;  data            1    wreg     unsigned char 
 20823 ;; Auto vars:     Size  Location     Type
 20824 ;;  data            1   47[BANK0 ] unsigned char 
 20825 ;; Return value:  Size  Location     Type
 20826 ;;                  1    wreg      void 
 20827 ;; Registers used:
 20828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20829 ;; Tracked objects:
 20830 ;;		On entry : 3F/0
 20831 ;;		On exit  : 6/0
 20832 ;;		Unchanged: 0/0
 20833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20838 ;;Total ram usage:        1 bytes
 20839 ;; Hardware stack levels used:    1
 20840 ;; Hardware stack levels required when called:   19
 20841 ;; This function calls:
 20842 ;;		_send4bits
 20843 ;; This function is called by:
 20844 ;;		_LcdI2CInit
 20845 ;;		_noBacklight
 20846 ;;		_backlight
 20847 ;; This function uses a non-reentrant model
 20848 ;;
 20849                           
 20850                           	psect	text70
 20851  00A33E                     __ptext70:
 20852                           	opt callstack 0
 20853  00A33E                     _expanderWriteBlock:
 20854                           	opt callstack 9
 20855                           
 20856                           ;incstack = 0
 20857                           ;expanderWriteBlock@data stored from wreg
 20858  00A33E  6F8F               	movwf	expanderWriteBlock@data& (0+255),b
 20859                           
 20860                           ;LiquidCrystal_I2C.c: 88:     send4bits(data, 0);
 20861  00A340  0E00               	movlw	0
 20862  00A342  0100               	movlb	0	; () banked
 20863  00A344  6F8B               	movwf	send4bits@mode& (0+255),b
 20864  00A346  518F               	movf	expanderWriteBlock@data& (0+255),w,b
 20865  00A348  ECAC  F047         	call	_send4bits
 20866  00A34C  0012               	return		;funcret
 20867  00A34E                     __end_of_expanderWriteBlock:
 20868                           	opt callstack 0
 20869                           
 20870 ;; *************** function _screenMng *****************
 20871 ;; Defined at:
 20872 ;;		line 373 in file "menu.c"
 20873 ;; Parameters:    Size  Location     Type
 20874 ;;		None
 20875 ;; Auto vars:     Size  Location     Type
 20876 ;;		None
 20877 ;; Return value:  Size  Location     Type
 20878 ;;                  1    wreg      void 
 20879 ;; Registers used:
 20880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20881 ;; Tracked objects:
 20882 ;;		On entry : 0/1
 20883 ;;		On exit  : 6/0
 20884 ;;		Unchanged: 0/0
 20885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20887 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20888 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20889 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20890 ;;Total ram usage:        4 bytes
 20891 ;; Hardware stack levels used:    1
 20892 ;; Hardware stack levels required when called:   26
 20893 ;; This function calls:
 20894 ;;		_PrintStrBusy
 20895 ;;		___lwdiv
 20896 ;;		___tmul
 20897 ;;		___wmul
 20898 ;;		_printstr
 20899 ;;		_setCursor
 20900 ;;		_sprintf
 20901 ;; This function is called by:
 20902 ;;		_CtrlPowerOff
 20903 ;;		_main
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907                           	psect	text71
 20908  0031AE                     __ptext71:
 20909                           	opt callstack 0
 20910  0031AE                     _screenMng:
 20911                           	opt callstack 4
 20912                           
 20913                           ;menu.c: 375:     if (lcdPrintTR && !PrintStrBusy()) {
 20914                           
 20915                           ;incstack = 0
 20916  0031AE  0101               	movlb	1	; () banked
 20917  0031B0  51CE               	movf	_lcdPrintTR& (0+255),w,b
 20918  0031B2  B4D8               	btfsc	status,2,c
 20919  0031B4  D222               	goto	l18603
 20920                           
 20921                           ; BSR set to: 1
 20922  0031B6  ECBE  F052         	call	_PrintStrBusy	;wreg free
 20923  0031BA  0900               	iorlw	0
 20924  0031BC  A4D8               	btfss	status,2,c
 20925  0031BE  D21D               	goto	l18603
 20926                           
 20927                           ; BSR set to: 0
 20928                           ;menu.c: 376:         lcdPrintTR = 0;
 20929  0031C0  0E00               	movlw	0
 20930  0031C2  0101               	movlb	1	; () banked
 20931  0031C4  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20932                           
 20933                           ;menu.c: 377:         if ((menuStatus == CFG_IDLE) || (menuStatus == CFG_LOWVA) || (menu
      +                          Status == CFG_HIGHVA)) {
 20934  0031C6  51B7               	movf	_menuStatus& (0+255),w,b
 20935  0031C8  B4D8               	btfsc	status,2,c
 20936  0031CA  D008               	goto	u19020
 20937                           
 20938                           ; BSR set to: 1
 20939  0031CC  0E06               	movlw	6
 20940  0031CE  19B7               	xorwf	_menuStatus& (0+255),w,b
 20941  0031D0  B4D8               	btfsc	status,2,c
 20942  0031D2  D004               	goto	u19020
 20943                           
 20944                           ; BSR set to: 1
 20945  0031D4  0E07               	movlw	7
 20946  0031D6  19B7               	xorwf	_menuStatus& (0+255),w,b
 20947  0031D8  A4D8               	btfss	status,2,c
 20948  0031DA  D04C               	goto	l18545
 20949  0031DC                     u19020:
 20950                           
 20951                           ; BSR set to: 1
 20952                           ;menu.c: 378:             if (ctrlStatus != CTRL_SLEEP) {
 20953  0031DC  0E03               	movlw	3
 20954  0031DE  19C8               	xorwf	_ctrlStatus& (0+255),w,b
 20955  0031E0  B4D8               	btfsc	status,2,c
 20956  0031E2  D03D               	goto	l18543
 20957                           
 20958                           ; BSR set to: 1
 20959                           ;menu.c: 379:                 if (VentMode == VMODE_PRESSURE) {
 20960  0031E4  51F8               	movf	_VentMode& (0+255),w,b
 20961  0031E6  A4D8               	btfss	status,2,c
 20962  0031E8  D01B               	goto	l18541
 20963                           
 20964                           ; BSR set to: 1
 20965                           ;menu.c: 380:                     sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, 
      +                          IP, MaxP);
 20966  0031EA  0EA3               	movlw	low _lcdTopRow
 20967  0031EC  6F46               	movwf	sprintf@s& (0+255),b
 20968  0031EE  0E02               	movlw	high _lcdTopRow
 20969  0031F0  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20970  0031F2  0EB7               	movlw	low STR_37
 20971  0031F4  6F48               	movwf	sprintf@fmt& (0+255),b
 20972  0031F6  0EFC               	movlw	high STR_37
 20973  0031F8  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20974  0031FA  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20975  003200  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 20976  003202  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 20977  003208  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 20978  00320A  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 20979  003210  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 20980  003212  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 20981  003218  6B51               	clrf	(?_sprintf+11)& (0+255),b
 20982  00321A  ECD9  F047         	call	_sprintf	;wreg free
 20983                           
 20984                           ;menu.c: 381:                 } else {
 20985  00321E  D1D8               	goto	l18595
 20986  003220                     l18541:
 20987                           
 20988                           ; BSR set to: 1
 20989                           ;menu.c: 382:                     sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, Ma
      +                          xP, 10 * ((uint16_t) MaxV));
 20990  003220  0EA3               	movlw	low _lcdTopRow
 20991  003222  6F46               	movwf	sprintf@s& (0+255),b
 20992  003224  0E02               	movlw	high _lcdTopRow
 20993  003226  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20994  003228  0E55               	movlw	low STR_38
 20995  00322A  6F48               	movwf	sprintf@fmt& (0+255),b
 20996  00322C  0EFD               	movlw	high STR_38
 20997  00322E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20998  003230  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20999  003236  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21000  003238  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21001  00323E  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21002  003240  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 21003  003246  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21004  003248  51FE               	movf	_MaxV& (0+255),w,b
 21005  00324A  0D0A               	mullw	10
 21006  00324C  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21007  003252  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21008  003258  ECD9  F047         	call	_sprintf	;wreg free
 21009  00325C  D1B9               	goto	l18595
 21010  00325E                     l18543:
 21011                           
 21012                           ; BSR set to: 1
 21013                           ;menu.c: 385:                 sprintf(lcdTopRow, "----OFF-STATE---");
 21014  00325E  0EA3               	movlw	low _lcdTopRow
 21015  003260  6F46               	movwf	sprintf@s& (0+255),b
 21016  003262  0E02               	movlw	high _lcdTopRow
 21017  003264  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21018  003266  0EC1               	movlw	low STR_39
 21019  003268  6F48               	movwf	sprintf@fmt& (0+255),b
 21020  00326A  0EFE               	movlw	high STR_39
 21021  00326C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21022  00326E  ECD9  F047         	call	_sprintf	;wreg free
 21023  003272  D1AE               	goto	l18595
 21024  003274                     l18545:
 21025                           
 21026                           ; BSR set to: 1
 21027  003274  0E02               	movlw	2
 21028  003276  19B7               	xorwf	_menuStatus& (0+255),w,b
 21029  003278  A4D8               	btfss	status,2,c
 21030  00327A  D041               	goto	l18553
 21031                           
 21032                           ; BSR set to: 1
 21033                           ;menu.c: 388:             if (VentMode == VMODE_PRESSURE) {
 21034  00327C  51F8               	movf	_VentMode& (0+255),w,b
 21035  00327E  A4D8               	btfss	status,2,c
 21036  003280  D01D               	goto	l18551
 21037                           
 21038                           ; BSR set to: 1
 21039                           ;menu.c: 389:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", menuVal, PEEP, 
      +                          IP, MaxP);
 21040  003282  0EA3               	movlw	low _lcdTopRow
 21041  003284  6F46               	movwf	sprintf@s& (0+255),b
 21042  003286  0E02               	movlw	high _lcdTopRow
 21043  003288  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21044  00328A  0EB7               	movlw	low STR_37
 21045  00328C  6F48               	movwf	sprintf@fmt& (0+255),b
 21046  00328E  0EFC               	movlw	high STR_37
 21047  003290  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21048  003292  0060  F64C  F14A   	movff	_menuVal,?_sprintf+4
 21049  003298  0060  F650  F14B   	movff	_menuVal+1,?_sprintf+5
 21050  00329E  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21051  0032A4  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21052  0032A6  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 21053  0032AC  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21054  0032AE  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 21055  0032B4  6B51               	clrf	(?_sprintf+11)& (0+255),b
 21056  0032B6  ECD9  F047         	call	_sprintf	;wreg free
 21057                           
 21058                           ;menu.c: 390:             } else {
 21059  0032BA  D18A               	goto	l18595
 21060  0032BC                     l18551:
 21061                           
 21062                           ; BSR set to: 1
 21063                           ;menu.c: 391:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", menuVal, PEEP, Ma
      +                          xP, 10 * ((uint16_t) MaxV));
 21064  0032BC  0EA3               	movlw	low _lcdTopRow
 21065  0032BE  6F46               	movwf	sprintf@s& (0+255),b
 21066  0032C0  0E02               	movlw	high _lcdTopRow
 21067  0032C2  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21068  0032C4  0E55               	movlw	low STR_38
 21069  0032C6  6F48               	movwf	sprintf@fmt& (0+255),b
 21070  0032C8  0EFD               	movlw	high STR_38
 21071  0032CA  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21072  0032CC  0060  F64C  F14A   	movff	_menuVal,?_sprintf+4
 21073  0032D2  0060  F650  F14B   	movff	_menuVal+1,?_sprintf+5
 21074  0032D8  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21075  0032DE  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21076  0032E0  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 21077  0032E6  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21078  0032E8  51FE               	movf	_MaxV& (0+255),w,b
 21079  0032EA  0D0A               	mullw	10
 21080  0032EC  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21081  0032F2  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21082  0032F8  ECD9  F047         	call	_sprintf	;wreg free
 21083  0032FC  D169               	goto	l18595
 21084  0032FE                     l18553:
 21085                           
 21086                           ; BSR set to: 1
 21087  0032FE  0E03               	movlw	3
 21088  003300  19B7               	xorwf	_menuStatus& (0+255),w,b
 21089  003302  A4D8               	btfss	status,2,c
 21090  003304  D041               	goto	l18561
 21091                           
 21092                           ; BSR set to: 1
 21093                           ;menu.c: 394:             if (VentMode == VMODE_PRESSURE) {
 21094  003306  51F8               	movf	_VentMode& (0+255),w,b
 21095  003308  A4D8               	btfss	status,2,c
 21096  00330A  D01D               	goto	l18559
 21097                           
 21098                           ; BSR set to: 1
 21099                           ;menu.c: 395:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, menuVal, I
      +                          P, MaxP);
 21100  00330C  0EA3               	movlw	low _lcdTopRow
 21101  00330E  6F46               	movwf	sprintf@s& (0+255),b
 21102  003310  0E02               	movlw	high _lcdTopRow
 21103  003312  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21104  003314  0EB7               	movlw	low STR_37
 21105  003316  6F48               	movwf	sprintf@fmt& (0+255),b
 21106  003318  0EFC               	movlw	high STR_37
 21107  00331A  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21108  00331C  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21109  003322  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21110  003324  0060  F64C  F14C   	movff	_menuVal,?_sprintf+6
 21111  00332A  0060  F650  F14D   	movff	_menuVal+1,?_sprintf+7
 21112  003330  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 21113  003336  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21114  003338  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 21115  00333E  6B51               	clrf	(?_sprintf+11)& (0+255),b
 21116  003340  ECD9  F047         	call	_sprintf	;wreg free
 21117                           
 21118                           ;menu.c: 396:             } else {
 21119  003344  D145               	goto	l18595
 21120  003346                     l18559:
 21121                           
 21122                           ; BSR set to: 1
 21123                           ;menu.c: 397:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, menuVal, Max
      +                          P, 10 * ((uint16_t) MaxV));
 21124  003346  0EA3               	movlw	low _lcdTopRow
 21125  003348  6F46               	movwf	sprintf@s& (0+255),b
 21126  00334A  0E02               	movlw	high _lcdTopRow
 21127  00334C  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21128  00334E  0E55               	movlw	low STR_38
 21129  003350  6F48               	movwf	sprintf@fmt& (0+255),b
 21130  003352  0EFD               	movlw	high STR_38
 21131  003354  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21132  003356  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21133  00335C  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21134  00335E  0060  F64C  F14C   	movff	_menuVal,?_sprintf+6
 21135  003364  0060  F650  F14D   	movff	_menuVal+1,?_sprintf+7
 21136  00336A  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 21137  003370  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21138  003372  51FE               	movf	_MaxV& (0+255),w,b
 21139  003374  0D0A               	mullw	10
 21140  003376  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21141  00337C  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21142  003382  ECD9  F047         	call	_sprintf	;wreg free
 21143                           
 21144                           ; BSR set to: 1
 21145                           ;menu.c: 399:         } else if (menuStatus == CFG_IP) {
 21146                           
 21147                           ;menu.c: 398:             }
 21148  003386  D124               	goto	l18595
 21149  003388                     l18561:
 21150                           
 21151                           ; BSR set to: 1
 21152  003388  05B7               	decf	_menuStatus& (0+255),w,b
 21153  00338A  A4D8               	btfss	status,2,c
 21154  00338C  D01D               	goto	l18565
 21155                           
 21156                           ; BSR set to: 1
 21157                           ;menu.c: 400:             sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, menuVal,
      +                           MaxP);
 21158  00338E  0EA3               	movlw	low _lcdTopRow
 21159  003390  6F46               	movwf	sprintf@s& (0+255),b
 21160  003392  0E02               	movlw	high _lcdTopRow
 21161  003394  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21162  003396  0EB7               	movlw	low STR_37
 21163  003398  6F48               	movwf	sprintf@fmt& (0+255),b
 21164  00339A  0EFC               	movlw	high STR_37
 21165  00339C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21166  00339E  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21167  0033A4  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21168  0033A6  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21169  0033AC  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21170  0033AE  0060  F64C  F14E   	movff	_menuVal,?_sprintf+8
 21171  0033B4  0060  F650  F14F   	movff	_menuVal+1,?_sprintf+9
 21172  0033BA  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 21173  0033C0  6B51               	clrf	(?_sprintf+11)& (0+255),b
 21174  0033C2  ECD9  F047         	call	_sprintf	;wreg free
 21175                           
 21176                           ;menu.c: 401:         } else if (menuStatus == CFG_MAXP) {
 21177  0033C6  D104               	goto	l18595
 21178  0033C8                     l18565:
 21179                           
 21180                           ; BSR set to: 1
 21181  0033C8  0E04               	movlw	4
 21182  0033CA  19B7               	xorwf	_menuStatus& (0+255),w,b
 21183  0033CC  A4D8               	btfss	status,2,c
 21184  0033CE  D041               	goto	l18573
 21185                           
 21186                           ; BSR set to: 1
 21187                           ;menu.c: 402:             if (VentMode == VMODE_PRESSURE) {
 21188  0033D0  51F8               	movf	_VentMode& (0+255),w,b
 21189  0033D2  A4D8               	btfss	status,2,c
 21190  0033D4  D01D               	goto	l18571
 21191                           
 21192                           ; BSR set to: 1
 21193                           ;menu.c: 403:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, IP, 
      +                          menuVal);
 21194  0033D6  0EA3               	movlw	low _lcdTopRow
 21195  0033D8  6F46               	movwf	sprintf@s& (0+255),b
 21196  0033DA  0E02               	movlw	high _lcdTopRow
 21197  0033DC  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21198  0033DE  0EB7               	movlw	low STR_37
 21199  0033E0  6F48               	movwf	sprintf@fmt& (0+255),b
 21200  0033E2  0EFC               	movlw	high STR_37
 21201  0033E4  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21202  0033E6  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21203  0033EC  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21204  0033EE  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21205  0033F4  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21206  0033F6  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 21207  0033FC  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21208  0033FE  0060  F64C  F150   	movff	_menuVal,?_sprintf+10
 21209  003404  0060  F650  F151   	movff	_menuVal+1,?_sprintf+11
 21210  00340A  ECD9  F047         	call	_sprintf	;wreg free
 21211                           
 21212                           ;menu.c: 404:             } else {
 21213  00340E  D0E0               	goto	l18595
 21214  003410                     l18571:
 21215                           
 21216                           ; BSR set to: 1
 21217                           ;menu.c: 405:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, menuVa
      +                          l, 10 * ((uint16_t) MaxV));
 21218  003410  0EA3               	movlw	low _lcdTopRow
 21219  003412  6F46               	movwf	sprintf@s& (0+255),b
 21220  003414  0E02               	movlw	high _lcdTopRow
 21221  003416  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21222  003418  0E55               	movlw	low STR_38
 21223  00341A  6F48               	movwf	sprintf@fmt& (0+255),b
 21224  00341C  0EFD               	movlw	high STR_38
 21225  00341E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21226  003420  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21227  003426  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21228  003428  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21229  00342E  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21230  003430  0060  F64C  F14E   	movff	_menuVal,?_sprintf+8
 21231  003436  0060  F650  F14F   	movff	_menuVal+1,?_sprintf+9
 21232  00343C  51FE               	movf	_MaxV& (0+255),w,b
 21233  00343E  0D0A               	mullw	10
 21234  003440  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21235  003446  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21236  00344C  ECD9  F047         	call	_sprintf	;wreg free
 21237  003450  D0BF               	goto	l18595
 21238  003452                     l18573:
 21239                           
 21240                           ; BSR set to: 1
 21241  003452  0E05               	movlw	5
 21242  003454  19B7               	xorwf	_menuStatus& (0+255),w,b
 21243  003456  A4D8               	btfss	status,2,c
 21244  003458  D031               	goto	l18579
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;menu.c: 408:             sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, MaxP, 10 *
      +                           ((uint16_t) menuVal));
 21248  00345A  0060  F64C  F09B   	movff	_menuVal,___wmul@multiplier
 21249  003460  0060  F650  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21250  003466  0E00               	movlw	0
 21251  003468  0100               	movlb	0	; () banked
 21252  00346A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21253  00346C  0E0A               	movlw	10
 21254  00346E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21255  003470  ECA2  F04D         	call	___wmul	;wreg free
 21256  003474  0060  F26C  F15E   	movff	?___wmul,_screenMng$6103
 21257  00347A  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6103+1
 21258                           
 21259                           ; BSR set to: 0
 21260                           ;menu.c: 408:             sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, MaxP, 10 *
      +                           ((uint16_t) menuVal));
 21261  003480  0EA3               	movlw	low _lcdTopRow
 21262  003482  0101               	movlb	1	; () banked
 21263  003484  6F46               	movwf	sprintf@s& (0+255),b
 21264  003486  0E02               	movlw	high _lcdTopRow
 21265  003488  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21266  00348A  0E55               	movlw	low STR_38
 21267  00348C  6F48               	movwf	sprintf@fmt& (0+255),b
 21268  00348E  0EFD               	movlw	high STR_38
 21269  003490  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21270  003492  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21271  003498  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21272  00349A  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21273  0034A0  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21274  0034A2  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 21275  0034A8  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21276  0034AA  0060  F578  F150   	movff	_screenMng$6103,?_sprintf+10
 21277  0034B0  0060  F57C  F151   	movff	_screenMng$6103+1,?_sprintf+11
 21278  0034B6  ECD9  F047         	call	_sprintf	;wreg free
 21279                           
 21280                           ;menu.c: 409:         } else if (menuStatus == CFG_POWEROFF) {
 21281  0034BA  D08A               	goto	l18595
 21282  0034BC                     l18579:
 21283                           
 21284                           ; BSR set to: 1
 21285  0034BC  0E0C               	movlw	12
 21286  0034BE  19B7               	xorwf	_menuStatus& (0+255),w,b
 21287  0034C0  A4D8               	btfss	status,2,c
 21288  0034C2  D00B               	goto	l18583
 21289                           
 21290                           ; BSR set to: 1
 21291                           ;menu.c: 410:             sprintf(lcdTopRow, "PRESS BPM TO    ");
 21292  0034C4  0EA3               	movlw	low _lcdTopRow
 21293  0034C6  6F46               	movwf	sprintf@s& (0+255),b
 21294  0034C8  0E02               	movlw	high _lcdTopRow
 21295  0034CA  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21296  0034CC  0E9F               	movlw	low STR_48
 21297  0034CE  6F48               	movwf	sprintf@fmt& (0+255),b
 21298  0034D0  0EFE               	movlw	high STR_48
 21299  0034D2  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21300  0034D4  ECD9  F047         	call	_sprintf	;wreg free
 21301                           
 21302                           ;menu.c: 411:         } else if (menuStatus == CFG_ENGVSTATS) {
 21303  0034D8  D07B               	goto	l18595
 21304  0034DA                     l18583:
 21305                           
 21306                           ; BSR set to: 1
 21307  0034DA  0E09               	movlw	9
 21308  0034DC  19B7               	xorwf	_menuStatus& (0+255),w,b
 21309  0034DE  A4D8               	btfss	status,2,c
 21310  0034E0  D01D               	goto	l18587
 21311                           
 21312                           ; BSR set to: 1
 21313                           ;menu.c: 412:             sprintf(lcdTopRow, "%3d %3d %3d     ", rSV2ValveORT, rSV2Valve
      +                          CRT, rSV3ValveORT);
 21314  0034E2  0EA3               	movlw	low _lcdTopRow
 21315  0034E4  6F46               	movwf	sprintf@s& (0+255),b
 21316  0034E6  0E02               	movlw	high _lcdTopRow
 21317  0034E8  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21318  0034EA  0E8E               	movlw	low STR_49
 21319  0034EC  6F48               	movwf	sprintf@fmt& (0+255),b
 21320  0034EE  0EFE               	movlw	high STR_49
 21321  0034F0  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21322  0034F2  0060  F674  F14A   	movff	_rSV2ValveORT,?_sprintf+4
 21323  0034F8  0060  F678  F14B   	movff	_rSV2ValveORT+1,?_sprintf+5
 21324  0034FE  0060  F66C  F14C   	movff	_rSV2ValveCRT,?_sprintf+6
 21325  003504  0060  F670  F14D   	movff	_rSV2ValveCRT+1,?_sprintf+7
 21326  00350A  0060  F664  F14E   	movff	_rSV3ValveORT,?_sprintf+8
 21327  003510  0060  F668  F14F   	movff	_rSV3ValveORT+1,?_sprintf+9
 21328  003516  ECD9  F047         	call	_sprintf	;wreg free
 21329                           
 21330                           ;menu.c: 413:         } else if (menuStatus == CFG_ENGLSTATS) {
 21331  00351A  D05A               	goto	l18595
 21332  00351C                     l18587:
 21333                           
 21334                           ; BSR set to: 1
 21335  00351C  0E0A               	movlw	10
 21336  00351E  19B7               	xorwf	_menuStatus& (0+255),w,b
 21337  003520  A4D8               	btfss	status,2,c
 21338  003522  D042               	goto	l18591
 21339                           
 21340                           ; BSR set to: 1
 21341                           ;menu.c: 414:             sprintf(lcdTopRow, "%3d   %3d  ", (uint16_t) ((((uint24_t) ((i
      +                          nt16_t) ((0.045*4096+2)/5)*1))*((uint24_t) lungC))>>7), lungR/((int16_t) ((0.045*4096+2)
      +                          /5)*1));
 21342  003524  0EA3               	movlw	low _lcdTopRow
 21343  003526  6F46               	movwf	sprintf@s& (0+255),b
 21344  003528  0E02               	movlw	high _lcdTopRow
 21345  00352A  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21346  00352C  0E3D               	movlw	low STR_50
 21347  00352E  6F48               	movwf	sprintf@fmt& (0+255),b
 21348  003530  0EFF               	movlw	high STR_50
 21349  003532  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21350  003534  0E07               	movlw	7
 21351  003536  6F5C               	movwf	??_screenMng& (0+255),b
 21352  003538  0060  F77C  F08B   	movff	_lungC,___tmul@multiplier
 21353  00353E  0060  F780  F08C   	movff	_lungC+1,___tmul@multiplier+1
 21354  003544  0100               	movlb	0	; () banked
 21355  003546  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
 21356  003548  0E25               	movlw	37
 21357  00354A  6F8E               	movwf	___tmul@multiplicand& (0+255),b
 21358  00354C  0E00               	movlw	0
 21359  00354E  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
 21360  003550  0E00               	movlw	0
 21361  003552  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
 21362  003554  ECC7  F049         	call	___tmul	;wreg free
 21363  003558  0101               	movlb	1	; () banked
 21364  00355A  295C               	incf	??_screenMng& (0+255),w,b
 21365  00355C  6F5D               	movwf	(??_screenMng+1)& (0+255),b
 21366  00355E  D005               	goto	u19160
 21367  003560                     u19165:
 21368  003560  0100               	movlb	0	; () banked
 21369  003562  90D8               	bcf	status,0,c
 21370  003564  338D               	rrcf	(?___tmul+2)& (0+255),f,b
 21371  003566  338C               	rrcf	(?___tmul+1)& (0+255),f,b
 21372  003568  338B               	rrcf	?___tmul& (0+255),f,b
 21373  00356A                     u19160:
 21374  00356A  0101               	movlb	1	; () banked
 21375  00356C  2F5D               	decfsz	(??_screenMng+1)& (0+255),f,b
 21376  00356E  D7F8               	goto	u19165
 21377  003570  0060  F22C  F14A   	movff	?___tmul,?_sprintf+4
 21378  003576  0060  F230  F14B   	movff	?___tmul+1,?_sprintf+5
 21379  00357C  0060  FB34  F08B   	movff	_lungR,___lwdiv@dividend
 21380  003582  0060  FB38  F08C   	movff	_lungR+1,___lwdiv@dividend+1
 21381  003588  0E00               	movlw	0
 21382  00358A  0100               	movlb	0	; () banked
 21383  00358C  6F8E               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21384  00358E  0E25               	movlw	37
 21385  003590  6F8D               	movwf	___lwdiv@divisor& (0+255),b
 21386  003592  EC06  F048         	call	___lwdiv	;wreg free
 21387  003596  0060  F22C  F14C   	movff	?___lwdiv,?_sprintf+6
 21388  00359C  0060  F230  F14D   	movff	?___lwdiv+1,?_sprintf+7
 21389  0035A2  ECD9  F047         	call	_sprintf	;wreg free
 21390                           
 21391                           ;menu.c: 415:         } else if (menuStatus == CFG_ENGTRIG) {
 21392  0035A6  D014               	goto	l18595
 21393  0035A8                     l18591:
 21394                           
 21395                           ; BSR set to: 1
 21396  0035A8  0E0B               	movlw	11
 21397  0035AA  19B7               	xorwf	_menuStatus& (0+255),w,b
 21398  0035AC  A4D8               	btfss	status,2,c
 21399  0035AE  D010               	goto	l18595
 21400                           
 21401                           ; BSR set to: 1
 21402                           ;menu.c: 416:             sprintf(lcdTopRow, "%1d               ", menuVal);
 21403  0035B0  0EA3               	movlw	low _lcdTopRow
 21404  0035B2  6F46               	movwf	sprintf@s& (0+255),b
 21405  0035B4  0E02               	movlw	high _lcdTopRow
 21406  0035B6  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21407  0035B8  0E42               	movlw	low STR_51
 21408  0035BA  6F48               	movwf	sprintf@fmt& (0+255),b
 21409  0035BC  0EFD               	movlw	high STR_51
 21410  0035BE  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21411  0035C0  0060  F64C  F14A   	movff	_menuVal,?_sprintf+4
 21412  0035C6  0060  F650  F14B   	movff	_menuVal+1,?_sprintf+5
 21413  0035CC  ECD9  F047         	call	_sprintf	;wreg free
 21414  0035D0                     l18595:
 21415                           
 21416                           ; BSR set to: 1
 21417                           ;menu.c: 420:         setCursor(0, 0);
 21418  0035D0  0E00               	movlw	0
 21419  0035D2  0100               	movlb	0	; () banked
 21420  0035D4  6F92               	movwf	setCursor@row& (0+255),b
 21421  0035D6  0E00               	movlw	0
 21422  0035D8  EC55  F04B         	call	_setCursor
 21423                           
 21424                           ;menu.c: 421:         printstr(lcdTopRow);
 21425  0035DC  0EA3               	movlw	low _lcdTopRow
 21426  0035DE  0100               	movlb	0	; () banked
 21427  0035E0  6F8B               	movwf	printstr@c& (0+255),b
 21428  0035E2  0E02               	movlw	high _lcdTopRow
 21429  0035E4  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21430  0035E6  EC7F  F03C         	call	_printstr	;wreg free
 21431  0035EA                     
 21432                           ;menu.c: 422:         if (menuStatus != CFG_IDLE) {
 21433  0035EA  0101               	movlb	1	; () banked
 21434  0035EC  51B7               	movf	_menuStatus& (0+255),w,b
 21435  0035EE  B4D8               	btfsc	status,2,c
 21436  0035F0  0012               	return	
 21437  0035F2                     u19180:
 21438                           
 21439                           ;menu.c: 423:             lcdBlink = 1;
 21440  0035F2  0E01               	movlw	1
 21441  0035F4  0101               	movlb	1	; () banked
 21442  0035F6  6FB8               	movwf	_lcdBlink& (0+255),b
 21443  0035F8  0012               	return	
 21444  0035FA                     l18603:
 21445  0035FA  0101               	movlb	1	; () banked
 21446  0035FC  51CC               	movf	_lcdPrintBRR& (0+255),w,b
 21447  0035FE  B4D8               	btfsc	status,2,c
 21448  003600  D016               	goto	l18617
 21449                           
 21450                           ; BSR set to: 1
 21451  003602  ECBE  F052         	call	_PrintStrBusy	;wreg free
 21452  003606  0900               	iorlw	0
 21453  003608  A4D8               	btfss	status,2,c
 21454  00360A  D011               	goto	l18617
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;menu.c: 426:         lcdPrintBRR = 0;
 21458  00360C  0E00               	movlw	0
 21459  00360E  0101               	movlb	1	; () banked
 21460  003610  6FCC               	movwf	_lcdPrintBRR& (0+255),b
 21461                           
 21462                           ; BSR set to: 1
 21463                           ;menu.c: 428:         setCursor(11, 1);
 21464  003612  0E01               	movlw	1
 21465  003614  0100               	movlb	0	; () banked
 21466  003616  6F92               	movwf	setCursor@row& (0+255),b
 21467  003618  0E0B               	movlw	11
 21468  00361A  EC55  F04B         	call	_setCursor
 21469                           
 21470                           ;menu.c: 429:         printstr(lcdBtnRRow);
 21471  00361E  0EC1               	movlw	low _lcdBtnRRow
 21472  003620  0100               	movlb	0	; () banked
 21473  003622  6F8B               	movwf	printstr@c& (0+255),b
 21474  003624  0E02               	movlw	high _lcdBtnRRow
 21475  003626  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21476  003628  EC7F  F03C         	call	_printstr	;wreg free
 21477  00362C  D7DE               	goto	L64
 21478  00362E                     l18617:
 21479  00362E  0101               	movlb	1	; () banked
 21480  003630  51CD               	movf	_lcdPrintBR& (0+255),w,b
 21481  003632  B4D8               	btfsc	status,2,c
 21482  003634  D0EC               	goto	l18667
 21483                           
 21484                           ; BSR set to: 1
 21485  003636  ECBE  F052         	call	_PrintStrBusy	;wreg free
 21486  00363A  0900               	iorlw	0
 21487  00363C  A4D8               	btfss	status,2,c
 21488  00363E  D0E7               	goto	l18667
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;menu.c: 434:         lcdPrintBR = 0;
 21492  003640  0E00               	movlw	0
 21493  003642  0101               	movlb	1	; () banked
 21494  003644  6FCD               	movwf	_lcdPrintBR& (0+255),b
 21495                           
 21496                           ; BSR set to: 1
 21497                           ;menu.c: 435:         if (menuStatus == CFG_LOWVA) {
 21498  003646  0E06               	movlw	6
 21499  003648  19B7               	xorwf	_menuStatus& (0+255),w,b
 21500  00364A  A4D8               	btfss	status,2,c
 21501  00364C  D02D               	goto	l18629
 21502                           
 21503                           ; BSR set to: 1
 21504                           ;menu.c: 436:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) menuVal), 10 
      +                          * ((uint16_t) HighVAlarm));
 21505  00364E  0060  F64C  F09B   	movff	_menuVal,___wmul@multiplier
 21506  003654  0060  F650  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21507  00365A  0E00               	movlw	0
 21508  00365C  0100               	movlb	0	; () banked
 21509  00365E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21510  003660  0E0A               	movlw	10
 21511  003662  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21512  003664  ECA2  F04D         	call	___wmul	;wreg free
 21513  003668  0060  F26C  F15E   	movff	?___wmul,_screenMng$6103
 21514  00366E  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6103+1
 21515                           
 21516                           ; BSR set to: 0
 21517                           ;menu.c: 436:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) menuVal), 10 
      +                          * ((uint16_t) HighVAlarm));
 21518  003674  0E8F               	movlw	low _lcdBtnRow
 21519  003676  0101               	movlb	1	; () banked
 21520  003678  6F46               	movwf	sprintf@s& (0+255),b
 21521  00367A  0E02               	movlw	high _lcdBtnRow
 21522  00367C  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21523  00367E  0E8A               	movlw	low STR_52
 21524  003680  6F48               	movwf	sprintf@fmt& (0+255),b
 21525  003682  0EFF               	movlw	high STR_52
 21526  003684  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21527  003686  0060  F578  F14A   	movff	_screenMng$6103,?_sprintf+4
 21528  00368C  0060  F57C  F14B   	movff	_screenMng$6103+1,?_sprintf+5
 21529  003692  51FD               	movf	_HighVAlarm& (0+255),w,b
 21530  003694  0D0A               	mullw	10
 21531  003696  006F FFCC  F14C    	movff	prodl,?_sprintf+6
 21532  00369C  006F FFD0  F14D    	movff	prodh,?_sprintf+7
 21533  0036A2  ECD9  F047         	call	_sprintf	;wreg free
 21534                           
 21535                           ;menu.c: 437:         } else if (menuStatus == CFG_HIGHVA) {
 21536  0036A6  D0A5               	goto	l18661
 21537  0036A8                     l18629:
 21538                           
 21539                           ; BSR set to: 1
 21540  0036A8  0E07               	movlw	7
 21541  0036AA  19B7               	xorwf	_menuStatus& (0+255),w,b
 21542  0036AC  A4D8               	btfss	status,2,c
 21543  0036AE  D02D               	goto	l18635
 21544                           
 21545                           ; BSR set to: 1
 21546                           ;menu.c: 438:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm), 1
      +                          0 * ((uint16_t) menuVal));
 21547  0036B0  0060  F64C  F09B   	movff	_menuVal,___wmul@multiplier
 21548  0036B6  0060  F650  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21549  0036BC  0E00               	movlw	0
 21550  0036BE  0100               	movlb	0	; () banked
 21551  0036C0  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21552  0036C2  0E0A               	movlw	10
 21553  0036C4  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21554  0036C6  ECA2  F04D         	call	___wmul	;wreg free
 21555  0036CA  0060  F26C  F15E   	movff	?___wmul,_screenMng$6103
 21556  0036D0  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6103+1
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;menu.c: 438:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm), 1
      +                          0 * ((uint16_t) menuVal));
 21560  0036D6  0E8F               	movlw	low _lcdBtnRow
 21561  0036D8  0101               	movlb	1	; () banked
 21562  0036DA  6F46               	movwf	sprintf@s& (0+255),b
 21563  0036DC  0E02               	movlw	high _lcdBtnRow
 21564  0036DE  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21565  0036E0  0E8A               	movlw	low STR_52
 21566  0036E2  6F48               	movwf	sprintf@fmt& (0+255),b
 21567  0036E4  0EFF               	movlw	high STR_52
 21568  0036E6  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21569  0036E8  51F7               	movf	_LowVAlarm& (0+255),w,b
 21570  0036EA  0D0A               	mullw	10
 21571  0036EC  006F FFCC  F14A    	movff	prodl,?_sprintf+4
 21572  0036F2  006F FFD0  F14B    	movff	prodh,?_sprintf+5
 21573  0036F8  0060  F578  F14C   	movff	_screenMng$6103,?_sprintf+6
 21574  0036FE  0060  F57C  F14D   	movff	_screenMng$6103+1,?_sprintf+7
 21575  003704  ECD9  F047         	call	_sprintf	;wreg free
 21576                           
 21577                           ;menu.c: 439:         } else if (menuStatus == CFG_POWEROFF) {
 21578  003708  D074               	goto	l18661
 21579  00370A                     l18635:
 21580                           
 21581                           ; BSR set to: 1
 21582  00370A  0E0C               	movlw	12
 21583  00370C  19B7               	xorwf	_menuStatus& (0+255),w,b
 21584  00370E  A4D8               	btfss	status,2,c
 21585  003710  D00B               	goto	l18639
 21586                           
 21587                           ; BSR set to: 1
 21588                           ;menu.c: 440:                 sprintf(lcdBtnRow, "POWER OFF ");
 21589  003712  0E8F               	movlw	low _lcdBtnRow
 21590  003714  6F46               	movwf	sprintf@s& (0+255),b
 21591  003716  0E02               	movlw	high _lcdBtnRow
 21592  003718  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21593  00371A  0E55               	movlw	low STR_54
 21594  00371C  6F48               	movwf	sprintf@fmt& (0+255),b
 21595  00371E  0EFF               	movlw	high STR_54
 21596  003720  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21597  003722  ECD9  F047         	call	_sprintf	;wreg free
 21598                           
 21599                           ;menu.c: 441:         } else if (menuStatus == CFG_ENGMODE) {
 21600  003726  D065               	goto	l18661
 21601  003728                     l18639:
 21602                           
 21603                           ; BSR set to: 1
 21604  003728  0E08               	movlw	8
 21605  00372A  19B7               	xorwf	_menuStatus& (0+255),w,b
 21606  00372C  A4D8               	btfss	status,2,c
 21607  00372E  D00B               	goto	l18643
 21608                           
 21609                           ; BSR set to: 1
 21610                           ;menu.c: 442:                 sprintf(lcdBtnRow, "VS LS BDT");
 21611  003730  0E8F               	movlw	low _lcdBtnRow
 21612  003732  6F46               	movwf	sprintf@s& (0+255),b
 21613  003734  0E02               	movlw	high _lcdBtnRow
 21614  003736  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21615  003738  0E9E               	movlw	low STR_55
 21616  00373A  6F48               	movwf	sprintf@fmt& (0+255),b
 21617  00373C  0EFF               	movlw	high STR_55
 21618  00373E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21619  003740  ECD9  F047         	call	_sprintf	;wreg free
 21620                           
 21621                           ;menu.c: 443:         } else if (menuStatus == CFG_ENGTRIG) {
 21622  003744  D056               	goto	l18661
 21623  003746                     l18643:
 21624                           
 21625                           ; BSR set to: 1
 21626  003746  0E0B               	movlw	11
 21627  003748  19B7               	xorwf	_menuStatus& (0+255),w,b
 21628  00374A  A4D8               	btfss	status,2,c
 21629  00374C  D00B               	goto	l18647
 21630                           
 21631                           ; BSR set to: 1
 21632                           ;menu.c: 444:                 sprintf(lcdBtnRow, "      BDT");
 21633  00374E  0E8F               	movlw	low _lcdBtnRow
 21634  003750  6F46               	movwf	sprintf@s& (0+255),b
 21635  003752  0E02               	movlw	high _lcdBtnRow
 21636  003754  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21637  003756  0E94               	movlw	low STR_56
 21638  003758  6F48               	movwf	sprintf@fmt& (0+255),b
 21639  00375A  0EFF               	movlw	high STR_56
 21640  00375C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21641  00375E  ECD9  F047         	call	_sprintf	;wreg free
 21642                           
 21643                           ;menu.c: 445:         } else if (menuStatus == CFG_ENGVSTATS) {
 21644  003762  D047               	goto	l18661
 21645  003764                     l18647:
 21646                           
 21647                           ; BSR set to: 1
 21648  003764  0E09               	movlw	9
 21649  003766  19B7               	xorwf	_menuStatus& (0+255),w,b
 21650  003768  A4D8               	btfss	status,2,c
 21651  00376A  D00B               	goto	l18651
 21652                           
 21653                           ; BSR set to: 1
 21654                           ;menu.c: 446:                 sprintf(lcdBtnRow, "S2O S2C S3C");
 21655  00376C  0E8F               	movlw	low _lcdBtnRow
 21656  00376E  6F46               	movwf	sprintf@s& (0+255),b
 21657  003770  0E02               	movlw	high _lcdBtnRow
 21658  003772  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21659  003774  0E49               	movlw	low STR_57
 21660  003776  6F48               	movwf	sprintf@fmt& (0+255),b
 21661  003778  0EFF               	movlw	high STR_57
 21662  00377A  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21663  00377C  ECD9  F047         	call	_sprintf	;wreg free
 21664                           
 21665                           ;menu.c: 447:         } else if (menuStatus == CFG_ENGLSTATS) {
 21666  003780  D038               	goto	l18661
 21667  003782                     l18651:
 21668                           
 21669                           ; BSR set to: 1
 21670  003782  0E0A               	movlw	10
 21671  003784  19B7               	xorwf	_menuStatus& (0+255),w,b
 21672  003786  A4D8               	btfss	status,2,c
 21673  003788  D00B               	goto	l18655
 21674                           
 21675                           ; BSR set to: 1
 21676                           ;menu.c: 448:                 sprintf(lcdBtnRow, "LC    LR   ");
 21677  00378A  0E8F               	movlw	low _lcdBtnRow
 21678  00378C  6F46               	movwf	sprintf@s& (0+255),b
 21679  00378E  0E02               	movlw	high _lcdBtnRow
 21680  003790  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21681  003792  0E31               	movlw	low STR_58
 21682  003794  6F48               	movwf	sprintf@fmt& (0+255),b
 21683  003796  0EFF               	movlw	high STR_58
 21684  003798  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21685  00379A  ECD9  F047         	call	_sprintf	;wreg free
 21686                           
 21687                           ;menu.c: 449:         } else {
 21688  00379E  D029               	goto	l18661
 21689  0037A0                     l18655:
 21690                           
 21691                           ; BSR set to: 1
 21692                           ;menu.c: 450:             if (ctrlStatus != CTRL_SLEEP) {
 21693  0037A0  0E03               	movlw	3
 21694  0037A2  19C8               	xorwf	_ctrlStatus& (0+255),w,b
 21695  0037A4  B4D8               	btfsc	status,2,c
 21696  0037A6  D01B               	goto	l18659
 21697                           
 21698                           ; BSR set to: 1
 21699                           ;menu.c: 451:                 sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm
      +                          ), 10 * ((uint16_t) HighVAlarm));
 21700  0037A8  0E8F               	movlw	low _lcdBtnRow
 21701  0037AA  6F46               	movwf	sprintf@s& (0+255),b
 21702  0037AC  0E02               	movlw	high _lcdBtnRow
 21703  0037AE  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21704  0037B0  0E8A               	movlw	low STR_52
 21705  0037B2  6F48               	movwf	sprintf@fmt& (0+255),b
 21706  0037B4  0EFF               	movlw	high STR_52
 21707  0037B6  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21708  0037B8  51F7               	movf	_LowVAlarm& (0+255),w,b
 21709  0037BA  0D0A               	mullw	10
 21710  0037BC  006F FFCC  F14A    	movff	prodl,?_sprintf+4
 21711  0037C2  006F FFD0  F14B    	movff	prodh,?_sprintf+5
 21712  0037C8  51FD               	movf	_HighVAlarm& (0+255),w,b
 21713  0037CA  0D0A               	mullw	10
 21714  0037CC  006F FFCC  F14C    	movff	prodl,?_sprintf+6
 21715  0037D2  006F FFD0  F14D    	movff	prodh,?_sprintf+7
 21716  0037D8  ECD9  F047         	call	_sprintf	;wreg free
 21717                           
 21718                           ;menu.c: 452:             } else {
 21719  0037DC  D00A               	goto	l18661
 21720  0037DE                     l18659:
 21721                           
 21722                           ; BSR set to: 1
 21723                           ;menu.c: 453:                 sprintf(lcdBtnRow, "PWR TO ON ");
 21724  0037DE  0E8F               	movlw	low _lcdBtnRow
 21725  0037E0  6F46               	movwf	sprintf@s& (0+255),b
 21726  0037E2  0E02               	movlw	high _lcdBtnRow
 21727  0037E4  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21728  0037E6  0E60               	movlw	low STR_60
 21729  0037E8  6F48               	movwf	sprintf@fmt& (0+255),b
 21730  0037EA  0EFF               	movlw	high STR_60
 21731  0037EC  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21732  0037EE  ECD9  F047         	call	_sprintf	;wreg free
 21733  0037F2                     l18661:
 21734                           
 21735                           ; BSR set to: 1
 21736                           ;menu.c: 459:         setCursor(0, 1);
 21737  0037F2  0E01               	movlw	1
 21738  0037F4  0100               	movlb	0	; () banked
 21739  0037F6  6F92               	movwf	setCursor@row& (0+255),b
 21740  0037F8  0E00               	movlw	0
 21741  0037FA  EC55  F04B         	call	_setCursor
 21742                           
 21743                           ;menu.c: 460:         printstr(lcdBtnRow);
 21744  0037FE  0E8F               	movlw	low _lcdBtnRow
 21745  003800  0100               	movlb	0	; () banked
 21746  003802  6F8B               	movwf	printstr@c& (0+255),b
 21747  003804  0E02               	movlw	high _lcdBtnRow
 21748  003806  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21749  003808  EC7F  F03C         	call	_printstr	;wreg free
 21750  00380C  D6F2               	goto	u19180
 21751  00380E                     l18667:
 21752  00380E  0101               	movlb	1	; () banked
 21753  003810  51B8               	movf	_lcdBlink& (0+255),w,b
 21754  003812  B4D8               	btfsc	status,2,c
 21755  003814  0012               	return	
 21756                           
 21757                           ; BSR set to: 1
 21758  003816  ECBE  F052         	call	_PrintStrBusy	;wreg free
 21759  00381A  0900               	iorlw	0
 21760  00381C  A4D8               	btfss	status,2,c
 21761  00381E  0012               	return	
 21762                           
 21763                           ; BSR set to: 0
 21764                           ;menu.c: 463:         lcdBlink = 0;
 21765  003820  0E00               	movlw	0
 21766  003822  0101               	movlb	1	; () banked
 21767  003824  6FB8               	movwf	_lcdBlink& (0+255),b
 21768                           
 21769                           ;menu.c: 464:         switch (menuStatus) {
 21770  003826  D038               	goto	l18691
 21771  003828                     l18673:
 21772                           
 21773                           ; BSR set to: 1
 21774                           ;menu.c: 466:                 setCursor(1, 0);
 21775  003828  0E00               	movlw	0
 21776  00382A  0100               	movlb	0	; () banked
 21777  00382C  6F92               	movwf	setCursor@row& (0+255),b
 21778  00382E  0E01               	movlw	1
 21779  003830  EC55  F04B         	call	_setCursor
 21780                           
 21781                           ;menu.c: 467:                 break;
 21782  003834  0012               	return	
 21783  003836                     l18675:
 21784                           
 21785                           ; BSR set to: 1
 21786                           ;menu.c: 469:                 setCursor(4, 0);
 21787  003836  0E00               	movlw	0
 21788  003838  0100               	movlb	0	; () banked
 21789  00383A  6F92               	movwf	setCursor@row& (0+255),b
 21790  00383C  0E04               	movlw	4
 21791  00383E  EC55  F04B         	call	_setCursor
 21792                           
 21793                           ;menu.c: 470:                 break;
 21794  003842  0012               	return	
 21795  003844                     l18677:
 21796                           
 21797                           ; BSR set to: 1
 21798                           ;menu.c: 472:                 setCursor(7, 0);
 21799  003844  0E00               	movlw	0
 21800  003846  0100               	movlb	0	; () banked
 21801  003848  6F92               	movwf	setCursor@row& (0+255),b
 21802  00384A  0E07               	movlw	7
 21803  00384C  EC55  F04B         	call	_setCursor
 21804                           
 21805                           ;menu.c: 473:                 break;
 21806  003850  0012               	return	
 21807  003852                     l18679:
 21808                           
 21809                           ; BSR set to: 1
 21810                           ;menu.c: 475:                 setCursor(10, 0);
 21811  003852  0E00               	movlw	0
 21812  003854  0100               	movlb	0	; () banked
 21813  003856  6F92               	movwf	setCursor@row& (0+255),b
 21814  003858  0E0A               	movlw	10
 21815  00385A  EC55  F04B         	call	_setCursor
 21816                           
 21817                           ;menu.c: 476:                 break;
 21818  00385E  0012               	return	
 21819  003860                     l18681:
 21820                           
 21821                           ; BSR set to: 1
 21822                           ;menu.c: 478:                 setCursor(15, 0);
 21823  003860  0E00               	movlw	0
 21824  003862  0100               	movlb	0	; () banked
 21825  003864  6F92               	movwf	setCursor@row& (0+255),b
 21826  003866  0E0F               	movlw	15
 21827  003868  EC55  F04B         	call	_setCursor
 21828                           
 21829                           ;menu.c: 479:                 break;
 21830  00386C  0012               	return	
 21831  00386E                     l18683:
 21832                           
 21833                           ; BSR set to: 1
 21834                           ;menu.c: 481:                 setCursor(3, 1);
 21835  00386E  0E01               	movlw	1
 21836  003870  0100               	movlb	0	; () banked
 21837  003872  6F92               	movwf	setCursor@row& (0+255),b
 21838  003874  0E03               	movlw	3
 21839  003876  EC55  F04B         	call	_setCursor
 21840                           
 21841                           ;menu.c: 482:                 break;
 21842  00387A  0012               	return	
 21843  00387C                     l18685:
 21844                           
 21845                           ; BSR set to: 1
 21846                           ;menu.c: 484:                 setCursor(8, 1);
 21847  00387C  0E01               	movlw	1
 21848  00387E  0100               	movlb	0	; () banked
 21849  003880  6F92               	movwf	setCursor@row& (0+255),b
 21850  003882  0E08               	movlw	8
 21851  003884  EC55  F04B         	call	_setCursor
 21852                           
 21853                           ;menu.c: 485:                 break;
 21854  003888  0012               	return	
 21855  00388A                     l18687:
 21856                           
 21857                           ; BSR set to: 1
 21858                           ;menu.c: 487:                 setCursor(21, 0);
 21859  00388A  0E00               	movlw	0
 21860  00388C  0100               	movlb	0	; () banked
 21861  00388E  6F92               	movwf	setCursor@row& (0+255),b
 21862  003890  0E15               	movlw	21
 21863  003892  EC55  F04B         	call	_setCursor
 21864                           
 21865                           ;menu.c: 488:                 break;
 21866  003896  0012               	return	
 21867  003898                     l18691:
 21868                           
 21869                           ; BSR set to: 1
 21870  003898  51B7               	movf	_menuStatus& (0+255),w,b
 21871  00389A  6F5C               	movwf	??_screenMng& (0+255),b
 21872  00389C  6B5D               	clrf	(??_screenMng+1)& (0+255),b
 21873                           
 21874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21875                           ; Switch size 1, requested type "simple"
 21876                           ; Number of cases is 1, Range of values is 0 to 0
 21877                           ; switch strategies available:
 21878                           ; Name         Instructions Cycles
 21879                           ; simple_byte            4     3 (average)
 21880                           ;	Chosen strategy is simple_byte
 21881  00389E  515D               	movf	(??_screenMng+1)& (0+255),w,b
 21882  0038A0  0A00               	xorlw	0	; case 0
 21883  0038A2  A4D8               	btfss	status,2,c
 21884  0038A4  D7F2               	goto	l18687
 21885                           
 21886                           ; BSR set to: 1
 21887                           ; Switch size 1, requested type "simple"
 21888                           ; Number of cases is 7, Range of values is 1 to 7
 21889                           ; switch strategies available:
 21890                           ; Name         Instructions Cycles
 21891                           ; simple_byte           22    12 (average)
 21892                           ;	Chosen strategy is simple_byte
 21893  0038A6  515C               	movf	??_screenMng& (0+255),w,b
 21894  0038A8  0A01               	xorlw	1	; case 1
 21895  0038AA  B4D8               	btfsc	status,2,c
 21896  0038AC  D7CB               	goto	l18677
 21897  0038AE  0A03               	xorlw	3	; case 2
 21898  0038B0  B4D8               	btfsc	status,2,c
 21899  0038B2  D7BA               	goto	l18673
 21900  0038B4  0A01               	xorlw	1	; case 3
 21901  0038B6  B4D8               	btfsc	status,2,c
 21902  0038B8  D7BE               	goto	l18675
 21903  0038BA  0A07               	xorlw	7	; case 4
 21904  0038BC  B4D8               	btfsc	status,2,c
 21905  0038BE  D7C9               	goto	l18679
 21906  0038C0  0A01               	xorlw	1	; case 5
 21907  0038C2  B4D8               	btfsc	status,2,c
 21908  0038C4  D7CD               	goto	l18681
 21909  0038C6  0A03               	xorlw	3	; case 6
 21910  0038C8  B4D8               	btfsc	status,2,c
 21911  0038CA  D7D1               	goto	l18683
 21912  0038CC  0A01               	xorlw	1	; case 7
 21913  0038CE  B4D8               	btfsc	status,2,c
 21914  0038D0  D7D5               	goto	l18685
 21915  0038D2  D7DB               	goto	l18687
 21916  0038D4                     __end_of_screenMng:
 21917                           	opt callstack 0
 21918                           
 21919 ;; *************** function _setCursor *****************
 21920 ;; Defined at:
 21921 ;;		line 233 in file "LiquidCrystal_I2C.c"
 21922 ;; Parameters:    Size  Location     Type
 21923 ;;  col             1    wreg     unsigned char 
 21924 ;;  row             1   50[BANK0 ] unsigned char 
 21925 ;; Auto vars:     Size  Location     Type
 21926 ;;  col             1   59[BANK0 ] unsigned char 
 21927 ;;  row_offsets     8   51[BANK0 ] int [4]
 21928 ;; Return value:  Size  Location     Type
 21929 ;;                  1    wreg      void 
 21930 ;; Registers used:
 21931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21932 ;; Tracked objects:
 21933 ;;		On entry : 3F/0
 21934 ;;		On exit  : 6/0
 21935 ;;		Unchanged: 0/0
 21936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21937 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21938 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21940 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21941 ;;Total ram usage:       10 bytes
 21942 ;; Hardware stack levels used:    1
 21943 ;; Hardware stack levels required when called:   21
 21944 ;; This function calls:
 21945 ;;		_command
 21946 ;; This function is called by:
 21947 ;;		_CtrlPowerOff
 21948 ;;		_main
 21949 ;;		_screenInit
 21950 ;;		_screenMng
 21951 ;;		_pressureSensorChk
 21952 ;;		_flowChk
 21953 ;;		_SelfTest
 21954 ;; This function uses a non-reentrant model
 21955 ;;
 21956                           
 21957                           	psect	text72
 21958  0096AA                     __ptext72:
 21959                           	opt callstack 0
 21960  0096AA                     _setCursor:
 21961                           	opt callstack 9
 21962                           
 21963                           ;incstack = 0
 21964                           ;setCursor@col stored from wreg
 21965  0096AA  6F9B               	movwf	setCursor@col& (0+255),b
 21966                           
 21967                           ;LiquidCrystal_I2C.c: 234:  int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 21968  0096AC  EE20  F2D3         	lfsr	2,setCursor@F16920
 21969  0096B0  EE10  F093         	lfsr	1,setCursor@row_offsets
 21970  0096B4  0E07               	movlw	7
 21971  0096B6                     u18471:
 21972  0096B6  006F FF6F FFE3     	movff	plusw2,plusw1
 21973  0096BC  06E8               	decf	wreg,f,c
 21974  0096BE  E2FB               	bc	u18471
 21975                           
 21976                           ;LiquidCrystal_I2C.c: 235:  if ( row > _numlines ) {
 21977  0096C0  0100               	movlb	0	; () banked
 21978  0096C2  5192               	movf	setCursor@row& (0+255),w,b
 21979  0096C4  5DC5               	subwf	__numlines& (0+255),w,b
 21980  0096C6  B0D8               	btfsc	status,0,c
 21981  0096C8  D002               	goto	l17999
 21982                           
 21983                           ; BSR set to: 0
 21984                           ;LiquidCrystal_I2C.c: 236:   row = _numlines-1;
 21985  0096CA  05C5               	decf	__numlines& (0+255),w,b
 21986  0096CC  6F92               	movwf	setCursor@row& (0+255),b
 21987  0096CE                     l17999:
 21988                           
 21989                           ; BSR set to: 0
 21990                           ;LiquidCrystal_I2C.c: 238:  command(0x80 | (col + row_offsets[row]));
 21991  0096CE  5192               	movf	setCursor@row& (0+255),w,b
 21992  0096D0  0D02               	mullw	2
 21993  0096D2  50F3               	movf	243,w,c
 21994  0096D4  0F93               	addlw	low setCursor@row_offsets
 21995  0096D6  6ED9               	movwf	fsr2l,c
 21996  0096D8  6ADA               	clrf	fsr2h,c
 21997  0096DA  50DF               	movf	indf2,w,c
 21998  0096DC  259B               	addwf	setCursor@col& (0+255),w,b
 21999  0096DE  0980               	iorlw	128
 22000  0096E0  ECA7  F051         	call	_command
 22001  0096E4  0012               	return		;funcret
 22002  0096E6                     __end_of_setCursor:
 22003                           	opt callstack 0
 22004                           
 22005 ;; *************** function _command *****************
 22006 ;; Defined at:
 22007 ;;		line 135 in file "LiquidCrystal_I2C.c"
 22008 ;; Parameters:    Size  Location     Type
 22009 ;;  value           1    wreg     unsigned char 
 22010 ;; Auto vars:     Size  Location     Type
 22011 ;;  value           1   49[BANK0 ] unsigned char 
 22012 ;; Return value:  Size  Location     Type
 22013 ;;                  1    wreg      void 
 22014 ;; Registers used:
 22015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22016 ;; Tracked objects:
 22017 ;;		On entry : 3F/0
 22018 ;;		On exit  : 6/0
 22019 ;;		Unchanged: 0/0
 22020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22024 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22025 ;;Total ram usage:        1 bytes
 22026 ;; Hardware stack levels used:    1
 22027 ;; Hardware stack levels required when called:   20
 22028 ;; This function calls:
 22029 ;;		_send
 22030 ;; This function is called by:
 22031 ;;		_LcdI2CInit
 22032 ;;		_clear
 22033 ;;		_home
 22034 ;;		_setCursor
 22035 ;;		_display
 22036 ;;		_blink
 22037 ;; This function uses a non-reentrant model
 22038 ;;
 22039                           
 22040                           	psect	text73
 22041  00A34E                     __ptext73:
 22042                           	opt callstack 0
 22043  00A34E                     _command:
 22044                           	opt callstack 9
 22045                           
 22046                           ;incstack = 0
 22047                           ;command@value stored from wreg
 22048  00A34E  6F91               	movwf	command@value& (0+255),b
 22049                           
 22050                           ;LiquidCrystal_I2C.c: 136:  send(value, 0x4);
 22051  00A350  0E04               	movlw	4
 22052  00A352  0100               	movlb	0	; () banked
 22053  00A354  6F8F               	movwf	send@mode& (0+255),b
 22054  00A356  5191               	movf	command@value& (0+255),w,b
 22055  00A358  EC3B  F04F         	call	_send
 22056  00A35C  0012               	return		;funcret
 22057  00A35E                     __end_of_command:
 22058                           	opt callstack 0
 22059                           
 22060 ;; *************** function _send *****************
 22061 ;; Defined at:
 22062 ;;		line 81 in file "LiquidCrystal_I2C.c"
 22063 ;; Parameters:    Size  Location     Type
 22064 ;;  value           1    wreg     unsigned char 
 22065 ;;  mode            1   47[BANK0 ] unsigned char 
 22066 ;; Auto vars:     Size  Location     Type
 22067 ;;  value           1   48[BANK0 ] unsigned char 
 22068 ;; Return value:  Size  Location     Type
 22069 ;;                  1    wreg      void 
 22070 ;; Registers used:
 22071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22072 ;; Tracked objects:
 22073 ;;		On entry : 3F/0
 22074 ;;		On exit  : 6/0
 22075 ;;		Unchanged: 0/0
 22076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22077 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22080 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22081 ;;Total ram usage:        2 bytes
 22082 ;; Hardware stack levels used:    1
 22083 ;; Hardware stack levels required when called:   19
 22084 ;; This function calls:
 22085 ;;		_send4bits
 22086 ;; This function is called by:
 22087 ;;		_command
 22088 ;; This function uses a non-reentrant model
 22089 ;;
 22090                           
 22091                           	psect	text74
 22092  009E76                     __ptext74:
 22093                           	opt callstack 0
 22094  009E76                     _send:
 22095                           	opt callstack 9
 22096                           
 22097                           ;incstack = 0
 22098                           ;send@value stored from wreg
 22099  009E76  6F90               	movwf	send@value& (0+255),b
 22100                           
 22101                           ;LiquidCrystal_I2C.c: 82:     send4bits(value&0xf0, mode);
 22102  009E78  0060  F23C  F08B   	movff	send@mode,send4bits@mode
 22103  009E7E  0100               	movlb	0	; () banked
 22104  009E80  5190               	movf	send@value& (0+255),w,b
 22105  009E82  0BF0               	andlw	240
 22106  009E84  ECAC  F047         	call	_send4bits
 22107                           
 22108                           ;LiquidCrystal_I2C.c: 83:     send4bits((value<<4)&0xf0, mode);
 22109  009E88  0060  F23C  F08B   	movff	send@mode,send4bits@mode
 22110  009E8E  0100               	movlb	0	; () banked
 22111  009E90  3990               	swapf	send@value& (0+255),w,b
 22112  009E92  0BF0               	andlw	240
 22113  009E94  0BF0               	andlw	240
 22114  009E96  ECAC  F047         	call	_send4bits
 22115  009E9A  0012               	return		;funcret
 22116  009E9C                     __end_of_send:
 22117                           	opt callstack 0
 22118                           
 22119 ;; *************** function _send4bits *****************
 22120 ;; Defined at:
 22121 ;;		line 59 in file "LiquidCrystal_I2C.c"
 22122 ;; Parameters:    Size  Location     Type
 22123 ;;  value           1    wreg     unsigned char 
 22124 ;;  mode            1   43[BANK0 ] unsigned char 
 22125 ;; Auto vars:     Size  Location     Type
 22126 ;;  value           1   44[BANK0 ] unsigned char 
 22127 ;;  idx             2   45[BANK0 ] int 
 22128 ;; Return value:  Size  Location     Type
 22129 ;;                  1    wreg      void 
 22130 ;; Registers used:
 22131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22132 ;; Tracked objects:
 22133 ;;		On entry : 3F/0
 22134 ;;		On exit  : 6/0
 22135 ;;		Unchanged: 0/0
 22136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22137 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22138 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22140 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22141 ;;Total ram usage:        4 bytes
 22142 ;; Hardware stack levels used:    1
 22143 ;; Hardware stack levels required when called:   18
 22144 ;; This function calls:
 22145 ;;		_TMR6_Start
 22146 ;; This function is called by:
 22147 ;;		_send
 22148 ;;		_expanderWriteBlock
 22149 ;;		_LcdI2CInit
 22150 ;; This function uses a non-reentrant model
 22151 ;;
 22152                           
 22153                           	psect	text75
 22154  008F58                     __ptext75:
 22155                           	opt callstack 0
 22156  008F58                     _send4bits:
 22157                           	opt callstack 9
 22158                           
 22159                           ;incstack = 0
 22160                           ;send4bits@value stored from wreg
 22161  008F58  6F8C               	movwf	send4bits@value& (0+255),b
 22162                           
 22163                           ;LiquidCrystal_I2C.c: 60:     int idx;;LiquidCrystal_I2C.c: 62:     if (lcdBusy){
 22164  008F5A  0100               	movlb	0	; () banked
 22165  008F5C  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22166  008F5E  B4D8               	btfsc	status,2,c
 22167  008F60  D008               	goto	l17357
 22168                           
 22169                           ; BSR set to: 0
 22170                           ;LiquidCrystal_I2C.c: 63:         PIE9bits.TMR6IE = 0;
 22171  008F62  0139               	movlb	57	; () banked
 22172  008F64  9199               	bcf	153,0,b	;volatile
 22173                           
 22174                           ;LiquidCrystal_I2C.c: 64:         idx = parBuffLen;
 22175  008F66  0060  F308  F08D   	movff	_parBuffLen,send4bits@idx	;volatile
 22176  008F6C  0100               	movlb	0	; () banked
 22177  008F6E  6B8E               	clrf	(send4bits@idx+1)& (0+255),b
 22178                           
 22179                           ;LiquidCrystal_I2C.c: 65:     } else {
 22180  008F70  D006               	goto	l17359
 22181  008F72                     l17357:
 22182                           
 22183                           ; BSR set to: 0
 22184                           ;LiquidCrystal_I2C.c: 66:         idx = 0;
 22185  008F72  0E00               	movlw	0
 22186  008F74  6F8E               	movwf	(send4bits@idx+1)& (0+255),b
 22187  008F76  0E00               	movlw	0
 22188  008F78  6F8D               	movwf	send4bits@idx& (0+255),b
 22189                           
 22190                           ;LiquidCrystal_I2C.c: 67:         parBuffPtr=0;
 22191  008F7A  0E00               	movlw	0
 22192  008F7C  6FC3               	movwf	_parBuffPtr& (0+255),b	;volatile
 22193  008F7E                     l17359:
 22194                           
 22195                           ; BSR set to: 0
 22196                           ;LiquidCrystal_I2C.c: 69:     i2cBuff[idx++]=value | mode | _backlightval;
 22197  008F7E  0E00               	movlw	low _i2cBuff
 22198  008F80  258D               	addwf	send4bits@idx& (0+255),w,b
 22199  008F82  6ED9               	movwf	fsr2l,c
 22200  008F84  0E03               	movlw	high _i2cBuff
 22201  008F86  218E               	addwfc	(send4bits@idx+1)& (0+255),w,b
 22202  008F88  6EDA               	movwf	fsr2h,c
 22203  008F8A  518C               	movf	send4bits@value& (0+255),w,b
 22204  008F8C  118B               	iorwf	send4bits@mode& (0+255),w,b
 22205  008F8E  11C4               	iorwf	__backlightval& (0+255),w,b	;volatile
 22206  008F90  6EDF               	movwf	indf2,c
 22207                           
 22208                           ; BSR set to: 0
 22209  008F92  4B8D               	infsnz	send4bits@idx& (0+255),f,b
 22210  008F94  2B8E               	incf	(send4bits@idx+1)& (0+255),f,b
 22211                           
 22212                           ; BSR set to: 0
 22213                           ;LiquidCrystal_I2C.c: 71:     parBuffLen=idx;
 22214  008F96  0060  F234  F0C2   	movff	send4bits@idx,_parBuffLen	;volatile
 22215                           
 22216                           ; BSR set to: 0
 22217                           ;LiquidCrystal_I2C.c: 72:     if (lcdBusy){
 22218  008F9C  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22219  008F9E  B4D8               	btfsc	status,2,c
 22220  008FA0  D003               	goto	l17369
 22221                           
 22222                           ; BSR set to: 0
 22223                           ;LiquidCrystal_I2C.c: 73:         PIE9bits.TMR6IE = 1;
 22224  008FA2  0139               	movlb	57	; () banked
 22225  008FA4  8199               	bsf	153,0,b	;volatile
 22226                           
 22227                           ;LiquidCrystal_I2C.c: 74:     } else {
 22228  008FA6  0012               	return	
 22229  008FA8                     l17369:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;LiquidCrystal_I2C.c: 75:         lcdBusy = 1;
 22233  008FA8  0E01               	movlw	1
 22234  008FAA  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 22235                           
 22236                           ; BSR set to: 0
 22237                           ;LiquidCrystal_I2C.c: 76:         TMR6_Start();
 22238  008FAC  ECE9  F052         	call	_TMR6_Start	;wreg free
 22239  008FB0  0012               	return		;funcret
 22240  008FB2                     __end_of_send4bits:
 22241                           	opt callstack 0
 22242                           
 22243 ;; *************** function ___tmul *****************
 22244 ;; Defined at:
 22245 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul24.c"
 22246 ;; Parameters:    Size  Location     Type
 22247 ;;  multiplier      3   43[BANK0 ] unsigned um
 22248 ;;  multiplicand    3   46[BANK0 ] unsigned um
 22249 ;; Auto vars:     Size  Location     Type
 22250 ;;  product         3   49[BANK0 ] unsigned um
 22251 ;; Return value:  Size  Location     Type
 22252 ;;                  3   43[BANK0 ] unsigned um
 22253 ;; Registers used:
 22254 ;;		wreg, status,2, status,0
 22255 ;; Tracked objects:
 22256 ;;		On entry : 3F/0
 22257 ;;		On exit  : 3F/0
 22258 ;;		Unchanged: 0/0
 22259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22260 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22263 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22264 ;;Total ram usage:        9 bytes
 22265 ;; Hardware stack levels used:    1
 22266 ;; Hardware stack levels required when called:   17
 22267 ;; This function calls:
 22268 ;;		Nothing
 22269 ;; This function is called by:
 22270 ;;		_inspOSMeasure
 22271 ;;		_main
 22272 ;;		_screenMng
 22273 ;; This function uses a non-reentrant model
 22274 ;;
 22275                           
 22276                           	psect	text76
 22277  00938E                     __ptext76:
 22278                           	opt callstack 0
 22279  00938E                     ___tmul:
 22280                           	opt callstack 12
 22281                           
 22282                           ; BSR set to: 0
 22283                           
 22284                           ;incstack = 0
 22285  00938E  0E00               	movlw	0
 22286  009390  6F91               	movwf	___tmul@product& (0+255),b
 22287  009392  0E00               	movlw	0
 22288  009394  6F92               	movwf	(___tmul@product+1)& (0+255),b
 22289  009396  0E00               	movlw	0
 22290  009398  6F93               	movwf	(___tmul@product+2)& (0+255),b
 22291  00939A                     l18157:
 22292                           
 22293                           ; BSR set to: 0
 22294  00939A  A18B               	btfss	___tmul@multiplier& (0+255),0,b
 22295  00939C  D006               	goto	l18161
 22296                           
 22297                           ; BSR set to: 0
 22298  00939E  518E               	movf	___tmul@multiplicand& (0+255),w,b
 22299  0093A0  2791               	addwf	___tmul@product& (0+255),f,b
 22300  0093A2  518F               	movf	(___tmul@multiplicand+1)& (0+255),w,b
 22301  0093A4  2392               	addwfc	(___tmul@product+1)& (0+255),f,b
 22302  0093A6  5190               	movf	(___tmul@multiplicand+2)& (0+255),w,b
 22303  0093A8  2393               	addwfc	(___tmul@product+2)& (0+255),f,b
 22304  0093AA                     l18161:
 22305                           
 22306                           ; BSR set to: 0
 22307  0093AA  90D8               	bcf	status,0,c
 22308  0093AC  378E               	rlcf	___tmul@multiplicand& (0+255),f,b
 22309  0093AE  378F               	rlcf	(___tmul@multiplicand+1)& (0+255),f,b
 22310  0093B0  3790               	rlcf	(___tmul@multiplicand+2)& (0+255),f,b
 22311  0093B2  90D8               	bcf	status,0,c
 22312  0093B4  338D               	rrcf	(___tmul@multiplier+2)& (0+255),f,b
 22313  0093B6  338C               	rrcf	(___tmul@multiplier+1)& (0+255),f,b
 22314  0093B8  338B               	rrcf	___tmul@multiplier& (0+255),f,b
 22315                           
 22316                           ; BSR set to: 0
 22317  0093BA  518B               	movf	___tmul@multiplier& (0+255),w,b
 22318  0093BC  118C               	iorwf	(___tmul@multiplier+1)& (0+255),w,b
 22319  0093BE  118D               	iorwf	(___tmul@multiplier+2)& (0+255),w,b
 22320  0093C0  A4D8               	btfss	status,2,c
 22321  0093C2  D7EB               	goto	l18157
 22322                           
 22323                           ; BSR set to: 0
 22324  0093C4  0060  F244  F08B   	movff	___tmul@product,?___tmul
 22325  0093CA  0060  F248  F08C   	movff	___tmul@product+1,?___tmul+1
 22326  0093D0  0060  F24C  F08D   	movff	___tmul@product+2,?___tmul+2
 22327                           
 22328                           ; BSR set to: 0
 22329  0093D6  0012               	return		;funcret
 22330  0093D8                     __end_of___tmul:
 22331                           	opt callstack 0
 22332                           
 22333 ;; *************** function ___lwdiv *****************
 22334 ;; Defined at:
 22335 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 22336 ;; Parameters:    Size  Location     Type
 22337 ;;  dividend        2   43[BANK0 ] unsigned int 
 22338 ;;  divisor         2   45[BANK0 ] unsigned int 
 22339 ;; Auto vars:     Size  Location     Type
 22340 ;;  quotient        2   48[BANK0 ] unsigned int 
 22341 ;;  counter         1   47[BANK0 ] unsigned char 
 22342 ;; Return value:  Size  Location     Type
 22343 ;;                  2   43[BANK0 ] unsigned int 
 22344 ;; Registers used:
 22345 ;;		wreg, status,2, status,0
 22346 ;; Tracked objects:
 22347 ;;		On entry : 3E/1
 22348 ;;		On exit  : 3F/0
 22349 ;;		Unchanged: 0/0
 22350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22352 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22354 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22355 ;;Total ram usage:        7 bytes
 22356 ;; Hardware stack levels used:    1
 22357 ;; Hardware stack levels required when called:   17
 22358 ;; This function calls:
 22359 ;;		Nothing
 22360 ;; This function is called by:
 22361 ;;		_main
 22362 ;;		_MenuMng
 22363 ;;		_screenMng
 22364 ;; This function uses a non-reentrant model
 22365 ;;
 22366                           
 22367                           	psect	text77
 22368  00900C                     __ptext77:
 22369                           	opt callstack 0
 22370  00900C                     ___lwdiv:
 22371                           	opt callstack 12
 22372                           
 22373                           ; BSR set to: 0
 22374                           ;incstack = 0
 22375  00900C  0E00               	movlw	0
 22376  00900E  0100               	movlb	0	; () banked
 22377  009010  6F91               	movwf	(___lwdiv@quotient+1)& (0+255),b
 22378  009012  0E00               	movlw	0
 22379  009014  6F90               	movwf	___lwdiv@quotient& (0+255),b
 22380                           
 22381                           ; BSR set to: 0
 22382  009016  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22383  009018  118E               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 22384  00901A  B4D8               	btfsc	status,2,c
 22385  00901C  D01C               	goto	l3668
 22386                           
 22387                           ; BSR set to: 0
 22388  00901E  0E01               	movlw	1
 22389  009020  6F8F               	movwf	___lwdiv@counter& (0+255),b
 22390  009022  D004               	goto	l18205
 22391  009024                     l18203:
 22392                           
 22393                           ; BSR set to: 0
 22394  009024  90D8               	bcf	status,0,c
 22395  009026  378D               	rlcf	___lwdiv@divisor& (0+255),f,b
 22396  009028  378E               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 22397  00902A  2B8F               	incf	___lwdiv@counter& (0+255),f,b
 22398  00902C                     l18205:
 22399                           
 22400                           ; BSR set to: 0
 22401  00902C  AF8E               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 22402  00902E  D7FA               	goto	l18203
 22403  009030                     u18770:
 22404                           
 22405                           ; BSR set to: 0
 22406  009030  90D8               	bcf	status,0,c
 22407  009032  3790               	rlcf	___lwdiv@quotient& (0+255),f,b
 22408  009034  3791               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 22409                           
 22410                           ; BSR set to: 0
 22411  009036  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22412  009038  5D8B               	subwf	___lwdiv@dividend& (0+255),w,b
 22413  00903A  518E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22414  00903C  598C               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 22415  00903E  A0D8               	btfss	status,0,c
 22416  009040  D005               	goto	l18215
 22417                           
 22418                           ; BSR set to: 0
 22419  009042  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22420  009044  5F8B               	subwf	___lwdiv@dividend& (0+255),f,b
 22421  009046  518E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22422  009048  5B8C               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 22423                           
 22424                           ; BSR set to: 0
 22425  00904A  8190               	bsf	___lwdiv@quotient& (0+255),0,b
 22426  00904C                     l18215:
 22427                           
 22428                           ; BSR set to: 0
 22429  00904C  90D8               	bcf	status,0,c
 22430  00904E  338E               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 22431  009050  338D               	rrcf	___lwdiv@divisor& (0+255),f,b
 22432                           
 22433                           ; BSR set to: 0
 22434  009052  2F8F               	decfsz	___lwdiv@counter& (0+255),f,b
 22435  009054  D7ED               	goto	u18770
 22436  009056                     l3668:
 22437                           
 22438                           ; BSR set to: 0
 22439  009056  0060  F240  F08B   	movff	___lwdiv@quotient,?___lwdiv
 22440  00905C  0060  F244  F08C   	movff	___lwdiv@quotient+1,?___lwdiv+1
 22441                           
 22442                           ; BSR set to: 0
 22443  009062  0012               	return		;funcret
 22444  009064                     __end_of___lwdiv:
 22445                           	opt callstack 0
 22446                           
 22447 ;; *************** function _printstrblock *****************
 22448 ;; Defined at:
 22449 ;;		line 127 in file "LiquidCrystal_I2C.c"
 22450 ;; Parameters:    Size  Location     Type
 22451 ;;  c               2   47[BANK0 ] PTR const unsigned char 
 22452 ;;		 -> STR_103(17), STR_102(17), STR_99(17), STR_98(17), 
 22453 ;;		 -> STR_95(18), STR_94(17), STR_91(17), STR_89(17), 
 22454 ;;		 -> STR_88(17), STR_86(17), STR_83(14), STR_81(17), 
 22455 ;;		 -> STR_80(17), STR_79(17), STR_78(17), STR_77(17), 
 22456 ;;		 -> STR_76(17), STR_74(17), STR_73(14), STR_71(14), 
 22457 ;;		 -> STR_69(18), lcdTopRow(20), STR_36(17), STR_35(17), 
 22458 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
 22459 ;;		 -> STR_5(19), STR_2(17), 
 22460 ;; Auto vars:     Size  Location     Type
 22461 ;;		None
 22462 ;; Return value:  Size  Location     Type
 22463 ;;                  1    wreg      void 
 22464 ;; Registers used:
 22465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22466 ;; Tracked objects:
 22467 ;;		On entry : 3F/0
 22468 ;;		On exit  : 3F/0
 22469 ;;		Unchanged: 0/0
 22470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22474 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22475 ;;Total ram usage:        2 bytes
 22476 ;; Hardware stack levels used:    1
 22477 ;; Hardware stack levels required when called:   19
 22478 ;; This function calls:
 22479 ;;		_PrintStrBusy
 22480 ;;		_printstr
 22481 ;; This function is called by:
 22482 ;;		_CtrlPowerOff
 22483 ;;		_main
 22484 ;;		_screenInit
 22485 ;;		_pressureSensorChk
 22486 ;;		_flowChk
 22487 ;;		_SelfTest
 22488 ;; This function uses a non-reentrant model
 22489 ;;
 22490                           
 22491                           	psect	text78
 22492  009E9C                     __ptext78:
 22493                           	opt callstack 0
 22494  009E9C                     _printstrblock:
 22495                           	opt callstack 10
 22496                           
 22497                           ; BSR set to: 0
 22498                           
 22499                           ; BSR set to: 0
 22500                           ;LiquidCrystal_I2C.c: 128:     while(PrintStrBusy());
 22501                           
 22502                           ; BSR set to: 0
 22503                           ;incstack = 0
 22504  009E9C  ECBE  F052         	call	_PrintStrBusy	;wreg free
 22505  009EA0  0900               	iorlw	0
 22506  009EA2  A4D8               	btfss	status,2,c
 22507  009EA4  D7FB               	goto	_printstrblock
 22508                           
 22509                           ; BSR set to: 0
 22510                           ;LiquidCrystal_I2C.c: 129:     printstr(c);
 22511  009EA6  0060  F23C  F08B   	movff	printstrblock@c,printstr@c
 22512  009EAC  0060  F240  F08C   	movff	printstrblock@c+1,printstr@c+1
 22513  009EB2  EC7F  F03C         	call	_printstr	;wreg free
 22514  009EB6                     l18007:
 22515  009EB6  ECBE  F052         	call	_PrintStrBusy	;wreg free
 22516  009EBA  0900               	iorlw	0
 22517  009EBC  B4D8               	btfsc	status,2,c
 22518  009EBE  0012               	return	
 22519  009EC0  D7FA               	goto	l18007
 22520  009EC2                     __end_of_printstrblock:
 22521                           	opt callstack 0
 22522                           
 22523 ;; *************** function _printstr *****************
 22524 ;; Defined at:
 22525 ;;		line 95 in file "LiquidCrystal_I2C.c"
 22526 ;; Parameters:    Size  Location     Type
 22527 ;;  c               2   43[BANK0 ] PTR const unsigned char 
 22528 ;;		 -> STR_103(17), STR_102(17), STR_99(17), STR_98(17), 
 22529 ;;		 -> STR_95(18), STR_94(17), STR_91(17), STR_89(17), 
 22530 ;;		 -> STR_88(17), STR_86(17), STR_83(14), STR_81(17), 
 22531 ;;		 -> STR_80(17), STR_79(17), STR_78(17), STR_77(17), 
 22532 ;;		 -> STR_76(17), STR_74(17), STR_73(14), STR_71(14), 
 22533 ;;		 -> STR_69(18), lcdBtnRow(20), lcdTopRow(20), STR_36(17), 
 22534 ;;		 -> STR_35(17), lcdBtnRRow(10), STR_9(17), STR_8(17), 
 22535 ;;		 -> STR_7(17), STR_6(17), STR_5(19), STR_2(17), 
 22536 ;; Auto vars:     Size  Location     Type
 22537 ;;  idx             1   46[BANK0 ] unsigned char 
 22538 ;; Return value:  Size  Location     Type
 22539 ;;                  1    wreg      void 
 22540 ;; Registers used:
 22541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22542 ;; Tracked objects:
 22543 ;;		On entry : 3F/0
 22544 ;;		On exit  : 6/0
 22545 ;;		Unchanged: 0/0
 22546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22550 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22551 ;;Total ram usage:        4 bytes
 22552 ;; Hardware stack levels used:    1
 22553 ;; Hardware stack levels required when called:   18
 22554 ;; This function calls:
 22555 ;;		_TMR6_Start
 22556 ;; This function is called by:
 22557 ;;		_printstrblock
 22558 ;;		_screenMng
 22559 ;; This function uses a non-reentrant model
 22560 ;;
 22561                           
 22562                           	psect	text79
 22563  0078FE                     __ptext79:
 22564                           	opt callstack 0
 22565  0078FE                     _printstr:
 22566                           	opt callstack 11
 22567                           
 22568                           ; BSR set to: 0
 22569                           ;LiquidCrystal_I2C.c: 96:     uint8_t idx;;LiquidCrystal_I2C.c: 98:     if (lcdBusy){
 22570                           
 22571                           ; BSR set to: 0
 22572                           ;incstack = 0
 22573  0078FE  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22574  007900  B4D8               	btfsc	status,2,c
 22575  007902  D006               	goto	l17699
 22576                           
 22577                           ; BSR set to: 0
 22578                           ;LiquidCrystal_I2C.c: 99:         PIE9bits.TMR6IE = 0;
 22579  007904  0139               	movlb	57	; () banked
 22580  007906  9199               	bcf	153,0,b	;volatile
 22581                           
 22582                           ;LiquidCrystal_I2C.c: 100:         idx = parBuffLen;
 22583  007908  0060  F308  F08E   	movff	_parBuffLen,printstr@idx	;volatile
 22584                           
 22585                           ;LiquidCrystal_I2C.c: 101:     } else {
 22586  00790E  D052               	goto	l17711
 22587  007910                     l17699:
 22588                           
 22589                           ; BSR set to: 0
 22590                           ;LiquidCrystal_I2C.c: 102:         idx = 0;
 22591  007910  0E00               	movlw	0
 22592  007912  6F8E               	movwf	printstr@idx& (0+255),b
 22593                           
 22594                           ;LiquidCrystal_I2C.c: 103:         parBuffPtr=0;
 22595  007914  0E00               	movlw	0
 22596  007916  6FC3               	movwf	_parBuffPtr& (0+255),b	;volatile
 22597  007918  D04D               	goto	l17711
 22598  00791A                     l17701:
 22599                           
 22600                           ;LiquidCrystal_I2C.c: 106:         i2cBuff[idx++]=((*c)&0xF0) | 0x1 | 0x4 | _backlightva
      +                          l;
 22601  00791A  0E00               	movlw	low _i2cBuff
 22602  00791C  0100               	movlb	0	; () banked
 22603  00791E  258E               	addwf	printstr@idx& (0+255),w,b
 22604  007920  6ED9               	movwf	fsr2l,c
 22605  007922  6ADA               	clrf	fsr2h,c
 22606  007924  0E03               	movlw	high _i2cBuff
 22607  007926  22DA               	addwfc	fsr2h,f,c
 22608  007928  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 22609  00792E  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 22610  007934  0E00               	movlw	low (__mediumconst shr (0+16))
 22611  007936  6EF8               	movwf	tblptru,c
 22612  007938  0E0F               	movlw	(high __ramtop+-1)
 22613  00793A  64F7               	cpfsgt	tblptrh,c
 22614  00793C  D003               	bra	u18147
 22615  00793E  0008               	tblrd		*
 22616  007940  50F5               	movf	tablat,w,c
 22617  007942  D007               	bra	u18140
 22618  007944                     u18147:
 22619  007944  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22620  00794A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22621  007950  50E7               	movf	indf1,w,c
 22622  007952                     u18140:
 22623  007952  0BF0               	andlw	240
 22624  007954  0100               	movlb	0	; () banked
 22625  007956  11C4               	iorwf	__backlightval& (0+255),w,b	;volatile
 22626  007958  0905               	iorlw	5
 22627  00795A  6EDF               	movwf	indf2,c
 22628                           
 22629                           ; BSR set to: 0
 22630  00795C  2B8E               	incf	printstr@idx& (0+255),f,b
 22631                           
 22632                           ; BSR set to: 0
 22633                           ;LiquidCrystal_I2C.c: 107:         i2cBuff[idx++]=(((*c)&0x0F)<<4) | 0x1 | 0x4 | _backli
      +                          ghtval;
 22634  00795E  0E00               	movlw	low _i2cBuff
 22635  007960  258E               	addwf	printstr@idx& (0+255),w,b
 22636  007962  6ED9               	movwf	fsr2l,c
 22637  007964  6ADA               	clrf	fsr2h,c
 22638  007966  0E03               	movlw	high _i2cBuff
 22639  007968  22DA               	addwfc	fsr2h,f,c
 22640  00796A  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 22641  007970  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 22642  007976  0E00               	movlw	low (__mediumconst shr (0+16))
 22643  007978  6EF8               	movwf	tblptru,c
 22644  00797A  0E0F               	movlw	(high __ramtop+-1)
 22645  00797C  64F7               	cpfsgt	tblptrh,c
 22646  00797E  D003               	bra	u18157
 22647  007980  0008               	tblrd		*
 22648  007982  50F5               	movf	tablat,w,c
 22649  007984  D007               	bra	u18150
 22650  007986                     u18157:
 22651  007986  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22652  00798C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22653  007992  50E7               	movf	indf1,w,c
 22654  007994                     u18150:
 22655  007994  0100               	movlb	0	; () banked
 22656  007996  6F8D               	movwf	??_printstr& (0+255),b
 22657  007998  0E0F               	movlw	15
 22658  00799A  178D               	andwf	??_printstr& (0+255),f,b
 22659  00799C  398D               	swapf	??_printstr& (0+255),w,b
 22660  00799E  0BF0               	andlw	240
 22661  0079A0  11C4               	iorwf	__backlightval& (0+255),w,b	;volatile
 22662  0079A2  0905               	iorlw	5
 22663  0079A4  6EDF               	movwf	indf2,c
 22664  0079A6  2B8E               	incf	printstr@idx& (0+255),f,b
 22665                           
 22666                           ;LiquidCrystal_I2C.c: 108:         c++;
 22667  0079A8  4B8B               	infsnz	printstr@c& (0+255),f,b
 22668  0079AA  2B8C               	incf	(printstr@c+1)& (0+255),f,b
 22669                           
 22670                           ; BSR set to: 0
 22671                           ;LiquidCrystal_I2C.c: 109:         if (idx >=80) {
 22672  0079AC  0E4F               	movlw	79
 22673  0079AE  658E               	cpfsgt	printstr@idx& (0+255),b
 22674  0079B0  D001               	goto	l17711
 22675  0079B2  D018               	goto	u18180
 22676  0079B4                     l17711:
 22677                           
 22678                           ;LiquidCrystal_I2C.c: 105:     while (*c){
 22679  0079B4  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 22680  0079BA  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 22681  0079C0  0E00               	movlw	low (__mediumconst shr (0+16))
 22682  0079C2  6EF8               	movwf	tblptru,c
 22683  0079C4  0E0F               	movlw	(high __ramtop+-1)
 22684  0079C6  64F7               	cpfsgt	tblptrh,c
 22685  0079C8  D003               	bra	u18177
 22686  0079CA  0008               	tblrd		*
 22687  0079CC  50F5               	movf	tablat,w,c
 22688  0079CE  D007               	bra	u18170
 22689  0079D0                     u18177:
 22690  0079D0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22691  0079D6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22692  0079DC  50E7               	movf	indf1,w,c
 22693  0079DE                     u18170:
 22694  0079DE  0900               	iorlw	0
 22695  0079E0  A4D8               	btfss	status,2,c
 22696  0079E2  D79B               	goto	l17701
 22697  0079E4                     u18180:
 22698                           
 22699                           ;LiquidCrystal_I2C.c: 114:     parBuffLen=idx;
 22700  0079E4  0060  F238  F0C2   	movff	printstr@idx,_parBuffLen	;volatile
 22701                           
 22702                           ;LiquidCrystal_I2C.c: 115:     if (lcdBusy){
 22703  0079EA  0100               	movlb	0	; () banked
 22704  0079EC  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22705  0079EE  B4D8               	btfsc	status,2,c
 22706  0079F0  D003               	goto	l17717
 22707                           
 22708                           ; BSR set to: 0
 22709                           ;LiquidCrystal_I2C.c: 116:         PIE9bits.TMR6IE = 1;
 22710  0079F2  0139               	movlb	57	; () banked
 22711  0079F4  8199               	bsf	153,0,b	;volatile
 22712                           
 22713                           ;LiquidCrystal_I2C.c: 117:     } else {
 22714  0079F6  0012               	return	
 22715  0079F8                     l17717:
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;LiquidCrystal_I2C.c: 118:         lcdBusy = 1;
 22719  0079F8  0E01               	movlw	1
 22720  0079FA  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 22721                           
 22722                           ; BSR set to: 0
 22723                           ;LiquidCrystal_I2C.c: 119:         TMR6_Start();
 22724  0079FC  ECE9  F052         	call	_TMR6_Start	;wreg free
 22725  007A00  0012               	return		;funcret
 22726  007A02                     __end_of_printstr:
 22727                           	opt callstack 0
 22728                           
 22729 ;; *************** function _TMR6_Start *****************
 22730 ;; Defined at:
 22731 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 22732 ;; Parameters:    Size  Location     Type
 22733 ;;		None
 22734 ;; Auto vars:     Size  Location     Type
 22735 ;;		None
 22736 ;; Return value:  Size  Location     Type
 22737 ;;                  1    wreg      void 
 22738 ;; Registers used:
 22739 ;;		None
 22740 ;; Tracked objects:
 22741 ;;		On entry : 3F/0
 22742 ;;		On exit  : 3F/0
 22743 ;;		Unchanged: 3F/0
 22744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22749 ;;Total ram usage:        0 bytes
 22750 ;; Hardware stack levels used:    1
 22751 ;; Hardware stack levels required when called:   17
 22752 ;; This function calls:
 22753 ;;		Nothing
 22754 ;; This function is called by:
 22755 ;;		_send4bits
 22756 ;;		_printstr
 22757 ;; This function uses a non-reentrant model
 22758 ;;
 22759                           
 22760                           	psect	text80
 22761  00A5D2                     __ptext80:
 22762                           	opt callstack 0
 22763  00A5D2                     _TMR6_Start:
 22764                           	opt callstack 9
 22765                           
 22766                           ; BSR set to: 0
 22767                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 22768                           
 22769                           ;incstack = 0
 22770  00A5D2  8E94               	bsf	148,7,c	;volatile
 22771                           
 22772                           ; BSR set to: 0
 22773  00A5D4  0012               	return		;funcret
 22774  00A5D6                     __end_of_TMR6_Start:
 22775                           	opt callstack 0
 22776                           
 22777 ;; *************** function _PrintStrBusy *****************
 22778 ;; Defined at:
 22779 ;;		line 123 in file "LiquidCrystal_I2C.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;		None
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;		None
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  1    wreg      _Bool 
 22786 ;; Registers used:
 22787 ;;		wreg, status,2
 22788 ;; Tracked objects:
 22789 ;;		On entry : 6/1
 22790 ;;		On exit  : 3F/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22797 ;;Total ram usage:        0 bytes
 22798 ;; Hardware stack levels used:    1
 22799 ;; Hardware stack levels required when called:   17
 22800 ;; This function calls:
 22801 ;;		Nothing
 22802 ;; This function is called by:
 22803 ;;		_CtrlPowerOff
 22804 ;;		_printstrblock
 22805 ;;		_screenMng
 22806 ;; This function uses a non-reentrant model
 22807 ;;
 22808                           
 22809                           	psect	text81
 22810  00A57C                     __ptext81:
 22811                           	opt callstack 0
 22812  00A57C                     _PrintStrBusy:
 22813                           	opt callstack 12
 22814                           
 22815                           ;LiquidCrystal_I2C.c: 124:     return lcdBusy;
 22816                           
 22817                           ; BSR set to: 0
 22818                           ;incstack = 0
 22819  00A57C  0100               	movlb	0	; () banked
 22820  00A57E  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22821                           
 22822                           ; BSR set to: 0
 22823  00A580  0012               	return		;funcret
 22824  00A582                     __end_of_PrintStrBusy:
 22825                           	opt callstack 0
 22826                           
 22827 ;; *************** function _keyRead *****************
 22828 ;; Defined at:
 22829 ;;		line 68 in file "keyRead.c"
 22830 ;; Parameters:    Size  Location     Type
 22831 ;;		None
 22832 ;; Auto vars:     Size  Location     Type
 22833 ;;  tmp             2   50[BANK0 ] int 
 22834 ;;  ch              1   52[BANK0 ] char 
 22835 ;; Return value:  Size  Location     Type
 22836 ;;                  1    wreg      char 
 22837 ;; Registers used:
 22838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22839 ;; Tracked objects:
 22840 ;;		On entry : 0/0
 22841 ;;		On exit  : 3F/0
 22842 ;;		Unchanged: 0/0
 22843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22845 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22847 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22848 ;;Total ram usage:        5 bytes
 22849 ;; Hardware stack levels used:    1
 22850 ;; Hardware stack levels required when called:   19
 22851 ;; This function calls:
 22852 ;;		_keyPeek
 22853 ;; This function is called by:
 22854 ;;		_CtrlPowerOff
 22855 ;;		_main
 22856 ;;		_MenuMng
 22857 ;; This function uses a non-reentrant model
 22858 ;;
 22859                           
 22860                           	psect	text82
 22861  0093D8                     __ptext82:
 22862                           	opt callstack 0
 22863  0093D8                     _keyRead:
 22864                           	opt callstack 11
 22865                           
 22866                           ;keyRead.c: 69:     int8_t ch = keyPeek();
 22867                           
 22868                           ; BSR set to: 0
 22869                           ;incstack = 0
 22870  0093D8  EC96  F046         	call	_keyPeek	;wreg free
 22871  0093DC  6F94               	movwf	keyRead@ch& (0+255),b
 22872                           
 22873                           ; BSR set to: 0
 22874                           ;keyRead.c: 70:     if (ch == lastkey) return -1;
 22875  0093DE  51CB               	movf	_lastkey& (0+255),w,b
 22876  0093E0  1994               	xorwf	keyRead@ch& (0+255),w,b
 22877  0093E2  A4D8               	btfss	status,2,c
 22878  0093E4  D002               	goto	l18713
 22879  0093E6                     u19350:
 22880                           
 22881                           ; BSR set to: 0
 22882  0093E6  0EFF               	movlw	255
 22883  0093E8  0012               	return	
 22884  0093EA                     l18713:
 22885                           
 22886                           ; BSR set to: 0
 22887                           ;keyRead.c: 71:     int tmp = lastkey;
 22888  0093EA  51CB               	movf	_lastkey& (0+255),w,b
 22889  0093EC  6F92               	movwf	keyRead@tmp& (0+255),b
 22890  0093EE  6B93               	clrf	(keyRead@tmp+1)& (0+255),b
 22891  0093F0  BF92               	btfsc	keyRead@tmp& (0+255),7,b
 22892  0093F2  0793               	decf	(keyRead@tmp+1)& (0+255),f,b
 22893                           
 22894                           ; BSR set to: 0
 22895                           ;keyRead.c: 72:     lastkey = ch;
 22896  0093F4  0060  F250  F0CB   	movff	keyRead@ch,_lastkey
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;keyRead.c: 73:     if (tmp == keyFilter) {
 22900  0093FA  0060  F324  F090   	movff	_keyFilter,??_keyRead
 22901  009400  6B91               	clrf	(??_keyRead+1)& (0+255),b
 22902  009402  BF90               	btfsc	??_keyRead& (0+255),7,b
 22903  009404  0791               	decf	(??_keyRead+1)& (0+255),f,b
 22904  009406  5192               	movf	keyRead@tmp& (0+255),w,b
 22905  009408  1990               	xorwf	??_keyRead& (0+255),w,b
 22906  00940A  E106               	bnz	l2091
 22907  00940C  5193               	movf	(keyRead@tmp+1)& (0+255),w,b
 22908  00940E  1991               	xorwf	(??_keyRead+1)& (0+255),w,b
 22909  009410  A4D8               	btfss	status,2,c
 22910  009412  D002               	goto	l2091
 22911                           
 22912                           ; BSR set to: 0
 22913                           ;keyRead.c: 74:         keyFilter = -1;
 22914  009414  69C9               	setf	_keyFilter& (0+255),b
 22915  009416  D7E7               	goto	u19350
 22916  009418                     l2091:
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;keyRead.c: 77:         keyFilter = -1;
 22920  009418  69C9               	setf	_keyFilter& (0+255),b
 22921                           
 22922                           ; BSR set to: 0
 22923                           ;keyRead.c: 78:         return tmp;
 22924  00941A  5192               	movf	keyRead@tmp& (0+255),w,b
 22925                           
 22926                           ; BSR set to: 0
 22927  00941C  0012               	return		;funcret
 22928  00941E                     __end_of_keyRead:
 22929                           	opt callstack 0
 22930                           
 22931 ;; *************** function _keyPeek *****************
 22932 ;; Defined at:
 22933 ;;		line 37 in file "keyRead.c"
 22934 ;; Parameters:    Size  Location     Type
 22935 ;;		None
 22936 ;; Auto vars:     Size  Location     Type
 22937 ;;  n               1   47[BANK0 ] char 
 22938 ;;  n               1   46[BANK0 ] char 
 22939 ;; Return value:  Size  Location     Type
 22940 ;;                  1    wreg      char 
 22941 ;; Registers used:
 22942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22943 ;; Tracked objects:
 22944 ;;		On entry : 0/0
 22945 ;;		On exit  : 3F/0
 22946 ;;		Unchanged: 0/0
 22947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22952 ;;Total ram usage:        2 bytes
 22953 ;; Hardware stack levels used:    1
 22954 ;; Hardware stack levels required when called:   18
 22955 ;; This function calls:
 22956 ;;		_digitalReadC
 22957 ;;		_digitalReadD
 22958 ;; This function is called by:
 22959 ;;		_main
 22960 ;;		_keyReadEC
 22961 ;;		_keyRead
 22962 ;;		_SelfTest
 22963 ;; This function uses a non-reentrant model
 22964 ;;
 22965                           
 22966                           	psect	text83
 22967  008D2C                     __ptext83:
 22968                           	opt callstack 0
 22969  008D2C                     _keyPeek:
 22970                           	opt callstack 11
 22971                           
 22972                           ;keyRead.c: 38:     for (int8_t n = 0; n < 6; n++) {
 22973                           
 22974                           ; BSR set to: 0
 22975                           ;incstack = 0
 22976  008D2C  0E00               	movlw	0
 22977  008D2E  0100               	movlb	0	; () banked
 22978  008D30  6F8E               	movwf	keyPeek@n& (0+255),b
 22979  008D32                     l18027:
 22980                           
 22981                           ; BSR set to: 0
 22982                           ;keyRead.c: 39:         if (digitalReadD(keysD[n]) != 1) {
 22983  008D32  0EDB               	movlw	low _keysD
 22984  008D34  258E               	addwf	keyPeek@n& (0+255),w,b
 22985  008D36  6ED9               	movwf	fsr2l,c
 22986  008D38  6ADA               	clrf	fsr2h,c
 22987  008D3A  0E02               	movlw	high _keysD
 22988  008D3C  22DA               	addwfc	fsr2h,f,c
 22989  008D3E  50DF               	movf	indf2,w,c
 22990  008D40  EC77  F04E         	call	_digitalReadD
 22991  008D44  06E8               	decf	wreg,f,c
 22992  008D46  B4D8               	btfsc	status,2,c
 22993  008D48  D002               	goto	l18033
 22994                           
 22995                           ; BSR set to: 0
 22996                           ;keyRead.c: 40:             return n;
 22997  008D4A  518E               	movf	keyPeek@n& (0+255),w,b
 22998  008D4C  0012               	return	
 22999  008D4E                     l18033:
 23000                           
 23001                           ; BSR set to: 0
 23002                           ;keyRead.c: 42:     }
 23003  008D4E  2B8E               	incf	keyPeek@n& (0+255),f,b
 23004                           
 23005                           ; BSR set to: 0
 23006  008D50  518E               	movf	keyPeek@n& (0+255),w,b
 23007  008D52  0A80               	xorlw	128
 23008  008D54  0F7A               	addlw	-134
 23009  008D56  A0D8               	btfss	status,0,c
 23010  008D58  D7EC               	goto	l18027
 23011                           
 23012                           ; BSR set to: 0
 23013                           ;keyRead.c: 43:     for (int8_t n = 0; n < 5; n++) {
 23014  008D5A  0E00               	movlw	0
 23015  008D5C  6F8F               	movwf	keyPeek@n_4072& (0+255),b
 23016  008D5E                     l18043:
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;keyRead.c: 44:         if (digitalReadC(keysC[n]) != 1) {
 23020  008D5E  0EE1               	movlw	low _keysC
 23021  008D60  258F               	addwf	keyPeek@n_4072& (0+255),w,b
 23022  008D62  6ED9               	movwf	fsr2l,c
 23023  008D64  6ADA               	clrf	fsr2h,c
 23024  008D66  0E02               	movlw	high _keysC
 23025  008D68  22DA               	addwfc	fsr2h,f,c
 23026  008D6A  50DF               	movf	indf2,w,c
 23027  008D6C  EC8E  F04E         	call	_digitalReadC
 23028  008D70  06E8               	decf	wreg,f,c
 23029  008D72  B4D8               	btfsc	status,2,c
 23030  008D74  D003               	goto	l18049
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;keyRead.c: 45:             return n+6;
 23034  008D76  518F               	movf	keyPeek@n_4072& (0+255),w,b
 23035  008D78  0F06               	addlw	6
 23036  008D7A  0012               	return	
 23037  008D7C                     l18049:
 23038                           
 23039                           ; BSR set to: 0
 23040                           ;keyRead.c: 47:     }
 23041  008D7C  2B8F               	incf	keyPeek@n_4072& (0+255),f,b
 23042                           
 23043                           ; BSR set to: 0
 23044  008D7E  518F               	movf	keyPeek@n_4072& (0+255),w,b
 23045  008D80  0A80               	xorlw	128
 23046  008D82  0F7B               	addlw	-133
 23047  008D84  A0D8               	btfss	status,0,c
 23048  008D86  D7EB               	goto	l18043
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;keyRead.c: 48:     return -1;
 23052  008D88  0EFF               	movlw	255
 23053                           
 23054                           ; BSR set to: 0
 23055  008D8A  0012               	return		;funcret
 23056  008D8C                     __end_of_keyPeek:
 23057                           	opt callstack 0
 23058                           
 23059 ;; *************** function _digitalReadD *****************
 23060 ;; Defined at:
 23061 ;;		line 22 in file "keyRead.c"
 23062 ;; Parameters:    Size  Location     Type
 23063 ;;  pin             1    wreg     unsigned char 
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;  pin             1   45[BANK0 ] unsigned char 
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  1    wreg      unsigned char 
 23068 ;; Registers used:
 23069 ;;		wreg, status,2, status,0
 23070 ;; Tracked objects:
 23071 ;;		On entry : 3F/0
 23072 ;;		On exit  : 3F/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23077 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23078 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23079 ;;Total ram usage:        3 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; Hardware stack levels required when called:   17
 23082 ;; This function calls:
 23083 ;;		Nothing
 23084 ;; This function is called by:
 23085 ;;		_keyPeek
 23086 ;; This function uses a non-reentrant model
 23087 ;;
 23088                           
 23089                           	psect	text84
 23090  009CEE                     __ptext84:
 23091                           	opt callstack 0
 23092  009CEE                     _digitalReadD:
 23093                           	opt callstack 11
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;incstack = 0
 23097                           ;digitalReadD@pin stored from wreg
 23098  009CEE  6F8D               	movwf	digitalReadD@pin& (0+255),b
 23099                           
 23100                           ;keyRead.c: 23:     return (PORTD&(1<<pin))!= 0;
 23101  009CF0  0060  F234  F08B   	movff	digitalReadD@pin,??_digitalReadD
 23102  009CF6  0E01               	movlw	1
 23103  009CF8  0100               	movlb	0	; () banked
 23104  009CFA  6F8C               	movwf	(??_digitalReadD+1)& (0+255),b
 23105  009CFC  2B8B               	incf	??_digitalReadD& (0+255),f,b
 23106  009CFE  D002               	goto	u18074
 23107  009D00                     u18075:
 23108  009D00  90D8               	bcf	status,0,c
 23109  009D02  378C               	rlcf	(??_digitalReadD+1)& (0+255),f,b
 23110  009D04                     u18074:
 23111  009D04  2F8B               	decfsz	??_digitalReadD& (0+255),f,b
 23112  009D06  D7FC               	goto	u18075
 23113  009D08  0100               	movlb	0	; () banked
 23114  009D0A  518C               	movf	(??_digitalReadD+1)& (0+255),w,b
 23115  009D0C  14CD               	andwf	205,w,c	;volatile
 23116  009D0E  0900               	iorlw	0
 23117  009D10  B4D8               	btfsc	status,2,c
 23118  009D12  D002               	goto	u18080
 23119  009D14  0E01               	movlw	1
 23120  009D16  0012               	return	
 23121  009D18                     u18080:
 23122  009D18  0E00               	movlw	0
 23123                           
 23124                           ; BSR set to: 0
 23125  009D1A  0012               	return		;funcret
 23126  009D1C                     __end_of_digitalReadD:
 23127                           	opt callstack 0
 23128                           
 23129 ;; *************** function _digitalReadC *****************
 23130 ;; Defined at:
 23131 ;;		line 25 in file "keyRead.c"
 23132 ;; Parameters:    Size  Location     Type
 23133 ;;  pin             1    wreg     unsigned char 
 23134 ;; Auto vars:     Size  Location     Type
 23135 ;;  pin             1   45[BANK0 ] unsigned char 
 23136 ;; Return value:  Size  Location     Type
 23137 ;;                  1    wreg      unsigned char 
 23138 ;; Registers used:
 23139 ;;		wreg, status,2, status,0
 23140 ;; Tracked objects:
 23141 ;;		On entry : 3F/0
 23142 ;;		On exit  : 3F/0
 23143 ;;		Unchanged: 0/0
 23144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23148 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23149 ;;Total ram usage:        3 bytes
 23150 ;; Hardware stack levels used:    1
 23151 ;; Hardware stack levels required when called:   17
 23152 ;; This function calls:
 23153 ;;		Nothing
 23154 ;; This function is called by:
 23155 ;;		_keyPeek
 23156 ;; This function uses a non-reentrant model
 23157 ;;
 23158                           
 23159                           	psect	text85
 23160  009D1C                     __ptext85:
 23161                           	opt callstack 0
 23162  009D1C                     _digitalReadC:
 23163                           	opt callstack 11
 23164                           
 23165                           ; BSR set to: 0
 23166                           ;incstack = 0
 23167                           ;digitalReadC@pin stored from wreg
 23168  009D1C  6F8D               	movwf	digitalReadC@pin& (0+255),b
 23169                           
 23170                           ;keyRead.c: 26:     return (PORTC&(1<<pin))!= 0;
 23171  009D1E  0060  F234  F08B   	movff	digitalReadC@pin,??_digitalReadC
 23172  009D24  0E01               	movlw	1
 23173  009D26  0100               	movlb	0	; () banked
 23174  009D28  6F8C               	movwf	(??_digitalReadC+1)& (0+255),b
 23175  009D2A  2B8B               	incf	??_digitalReadC& (0+255),f,b
 23176  009D2C  D002               	goto	u18104
 23177  009D2E                     u18105:
 23178  009D2E  90D8               	bcf	status,0,c
 23179  009D30  378C               	rlcf	(??_digitalReadC+1)& (0+255),f,b
 23180  009D32                     u18104:
 23181  009D32  2F8B               	decfsz	??_digitalReadC& (0+255),f,b
 23182  009D34  D7FC               	goto	u18105
 23183  009D36  0100               	movlb	0	; () banked
 23184  009D38  518C               	movf	(??_digitalReadC+1)& (0+255),w,b
 23185  009D3A  14CC               	andwf	204,w,c	;volatile
 23186  009D3C  0900               	iorlw	0
 23187  009D3E  B4D8               	btfsc	status,2,c
 23188  009D40  D002               	goto	u18110
 23189  009D42  0E01               	movlw	1
 23190  009D44  0012               	return	
 23191  009D46                     u18110:
 23192  009D46  0E00               	movlw	0
 23193                           
 23194                           ; BSR set to: 0
 23195  009D48  0012               	return		;funcret
 23196  009D4A                     __end_of_digitalReadC:
 23197                           	opt callstack 0
 23198                           
 23199 ;; *************** function _MonitorMsgSendBlock *****************
 23200 ;; Defined at:
 23201 ;;		line 134 in file "monComm.c"
 23202 ;; Parameters:    Size  Location     Type
 23203 ;;  state           1    wreg     enum E16832
 23204 ;; Auto vars:     Size  Location     Type
 23205 ;;  state           1  114[BANK1 ] enum E16832
 23206 ;; Return value:  Size  Location     Type
 23207 ;;                  1    wreg      _Bool 
 23208 ;; Registers used:
 23209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23210 ;; Tracked objects:
 23211 ;;		On entry : 3C/1
 23212 ;;		On exit  : 3F/1
 23213 ;;		Unchanged: 0/0
 23214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23216 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23218 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23219 ;;Total ram usage:        1 bytes
 23220 ;; Hardware stack levels used:    1
 23221 ;; Hardware stack levels required when called:   31
 23222 ;; This function calls:
 23223 ;;		_I2C2_MAck
 23224 ;;		_MonitorMsgBusy
 23225 ;;		_MonitorMsgForcedSend
 23226 ;; This function is called by:
 23227 ;;		_CtrlPowerOff
 23228 ;;		_main
 23229 ;;		_flowChk
 23230 ;;		_SelfTest
 23231 ;; This function uses a non-reentrant model
 23232 ;;
 23233                           
 23234                           	psect	text86
 23235  009EC2                     __ptext86:
 23236                           	opt callstack 0
 23237  009EC2                     _MonitorMsgSendBlock:
 23238                           	opt callstack 0
 23239                           
 23240                           ; BSR set to: 0
 23241                           ;incstack = 0
 23242 ;; hardware stack exceeded
 23243                           ;MonitorMsgSendBlock@state stored from wreg
 23244  009EC2  0101               	movlb	1	; () banked
 23245  009EC4  6F72               	movwf	MonitorMsgSendBlock@state& (0+255),b
 23246  009EC6                     
 23247                           ;monComm.c: 135:     while (MonitorMsgBusy());
 23248  009EC6  EC96  F051         	call	_MonitorMsgBusy	;wreg free
 23249  009ECA  0900               	iorlw	0
 23250  009ECC  A4D8               	btfss	status,2,c
 23251  009ECE  D7FB               	goto	l18009
 23252                           
 23253                           ; BSR set to: 0
 23254                           ;monComm.c: 136:     MonitorMsgForcedSend(state);
 23255  009ED0  0101               	movlb	1	; () banked
 23256  009ED2  5172               	movf	MonitorMsgSendBlock@state& (0+255),w,b
 23257  009ED4  ECD3  F035         	call	_MonitorMsgForcedSend
 23258  009ED8                     l18015:
 23259  009ED8  EC96  F051         	call	_MonitorMsgBusy	;wreg free
 23260  009EDC  0900               	iorlw	0
 23261  009EDE  A4D8               	btfss	status,2,c
 23262  009EE0  D7FB               	goto	l18015
 23263                           
 23264                           ; BSR set to: 0
 23265                           ;monComm.c: 141:     return I2C2_MAck();
 23266  009EE2  ECC7  F052         	call	_I2C2_MAck	;wreg free
 23267                           
 23268                           ; BSR set to: 1
 23269  009EE6  0012               	return		;funcret
 23270  009EE8                     __end_of_MonitorMsgSendBlock:
 23271                           	opt callstack 0
 23272                           
 23273 ;; *************** function _MonitorMsgForcedSend *****************
 23274 ;; Defined at:
 23275 ;;		line 32 in file "monComm.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;  state           1    wreg     enum E16832
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;  state           1  110[BANK1 ] enum E16832
 23280 ;;  vddVal          2  112[BANK1 ] short 
 23281 ;;  trfAck          1  111[BANK1 ] _Bool 
 23282 ;;  trfError        1  109[BANK1 ] enum E16385
 23283 ;; Return value:  Size  Location     Type
 23284 ;;                  1    wreg      void 
 23285 ;; Registers used:
 23286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23287 ;; Tracked objects:
 23288 ;;		On entry : 3F/1
 23289 ;;		On exit  : 3F/1
 23290 ;;		Unchanged: 0/0
 23291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23293 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23294 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23295 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23296 ;;Total ram usage:        6 bytes
 23297 ;; Hardware stack levels used:    1
 23298 ;; Hardware stack levels required when called:   30
 23299 ;; This function calls:
 23300 ;;		_I2C2_MAck
 23301 ;;		_I2C2_MClose
 23302 ;;		_I2C2_MOpen
 23303 ;;		_I2C2_MasterOperation
 23304 ;;		_I2C2_SetBuffer
 23305 ;;		_MonitorErrorClr
 23306 ;;		_MonitorErrorSet
 23307 ;;		_aCaptGetResult
 23308 ;;		_bRateGet
 23309 ;;		_sprintf
 23310 ;;		_timeGet
 23311 ;; This function is called by:
 23312 ;;		_MonitorMsgSend
 23313 ;;		_MonitorMsgSendBlock
 23314 ;; This function uses a non-reentrant model
 23315 ;;
 23316                           
 23317                           	psect	text87
 23318  006BA6                     __ptext87:
 23319                           	opt callstack 0
 23320  006BA6                     _MonitorMsgForcedSend:
 23321                           	opt callstack 0
 23322                           
 23323                           ; BSR set to: 1
 23324                           ;incstack = 0
 23325 ;; hardware stack exceeded
 23326                           ;MonitorMsgForcedSend@state stored from wreg
 23327  006BA6  6F6E               	movwf	MonitorMsgForcedSend@state& (0+255),b
 23328                           
 23329                           ;monComm.c: 33:     i2c2_error_t trfError;;monComm.c: 34:     _Bool trfAck;;monComm.c: 3
      +                          5:     int16_t vddVal;;monComm.c: 37:     monTstamp = timeGet();
 23330  006BA8  EC7B  F051         	call	_timeGet	;wreg free
 23331  006BAC  0060  F24C  F2CB   	movff	?_timeGet,_monTstamp
 23332  006BB2  0060  F250  F2CC   	movff	?_timeGet+1,_monTstamp+1
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;monComm.c: 40:     trfError = I2C2_MClose();
 23336  006BB8  ECA5  F04E         	call	_I2C2_MClose	;wreg free
 23337  006BBC  0101               	movlb	1	; () banked
 23338  006BBE  6F6D               	movwf	MonitorMsgForcedSend@trfError& (0+255),b
 23339                           
 23340                           ; BSR set to: 1
 23341                           ;monComm.c: 41:     trfAck = I2C2_MAck();
 23342  006BC0  ECC7  F052         	call	_I2C2_MAck	;wreg free
 23343  006BC4  6F6F               	movwf	MonitorMsgForcedSend@trfAck& (0+255),b
 23344                           
 23345                           ; BSR set to: 1
 23346                           ;monComm.c: 43:     if (!trfAck) {
 23347  006BC6  516F               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 23348  006BC8  A4D8               	btfss	status,2,c
 23349  006BCA  D011               	goto	l2970
 23350                           
 23351                           ; BSR set to: 1
 23352                           ;monComm.c: 45:         sprintf(lcdBtnRRow, " M.ERR");
 23353  006BCC  0EC1               	movlw	low _lcdBtnRRow
 23354  006BCE  6F46               	movwf	sprintf@s& (0+255),b
 23355  006BD0  0E02               	movlw	high _lcdBtnRRow
 23356  006BD2  6F47               	movwf	(sprintf@s+1)& (0+255),b
 23357  006BD4  0ED2               	movlw	low STR_105
 23358  006BD6  6F48               	movwf	sprintf@fmt& (0+255),b
 23359  006BD8  0EFF               	movlw	high STR_105
 23360  006BDA  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 23361  006BDC  ECD9  F047         	call	_sprintf	;wreg free
 23362                           
 23363                           ; BSR set to: 1
 23364                           ;monComm.c: 46:         lcdPrintBRR = 1;
 23365  006BE0  0E01               	movlw	1
 23366  006BE2  6FCC               	movwf	_lcdPrintBRR& (0+255),b
 23367                           
 23368                           ; BSR set to: 1
 23369                           ;monComm.c: 47:         LATDbits.LATD0 = 1;
 23370  006BE4  80BD               	bsf	189,0,c	;volatile
 23371  006BE6                     l17737:
 23372                           
 23373                           ; BSR set to: 1
 23374                           ;monComm.c: 48:         lastI2CMonTrfResponse = 1;
 23375  006BE6  0E01               	movlw	1
 23376  006BE8  0102               	movlb	2	; () banked
 23377  006BEA  6F4C               	movwf	_lastI2CMonTrfResponse& (0+255),b
 23378                           
 23379                           ;monComm.c: 50:     } else if ((LATDbits.LATD0) && trfAck) {
 23380  006BEC  D013               	goto	l17749
 23381  006BEE                     l2970:
 23382                           
 23383                           ; BSR set to: 1
 23384  006BEE  A0BD               	btfss	189,0,c	;volatile
 23385  006BF0  D011               	goto	l17749
 23386                           
 23387                           ; BSR set to: 1
 23388  006BF2  516F               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 23389  006BF4  B4D8               	btfsc	status,2,c
 23390  006BF6  D00E               	goto	l17749
 23391                           
 23392                           ; BSR set to: 1
 23393                           ;monComm.c: 52:         sprintf(lcdBtnRRow, "      ");
 23394  006BF8  0EC1               	movlw	low _lcdBtnRRow
 23395  006BFA  6F46               	movwf	sprintf@s& (0+255),b
 23396  006BFC  0E02               	movlw	high _lcdBtnRRow
 23397  006BFE  6F47               	movwf	(sprintf@s+1)& (0+255),b
 23398  006C00  0EED               	movlw	low (STR_2+10)
 23399  006C02  6F48               	movwf	sprintf@fmt& (0+255),b
 23400  006C04  0EFE               	movlw	high (STR_2+10)
 23401  006C06  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 23402  006C08  ECD9  F047         	call	_sprintf	;wreg free
 23403                           
 23404                           ; BSR set to: 1
 23405                           ;monComm.c: 53:         lcdPrintBRR = 1;
 23406  006C0C  0E01               	movlw	1
 23407  006C0E  6FCC               	movwf	_lcdPrintBRR& (0+255),b
 23408                           
 23409                           ; BSR set to: 1
 23410                           ;monComm.c: 54:         LATDbits.LATD0 = 0;
 23411  006C10  90BD               	bcf	189,0,c	;volatile
 23412  006C12  D7E9               	goto	l17737
 23413  006C14                     l17749:
 23414                           
 23415                           ;monComm.c: 59:     if (trfError != I2C2_BUSY) {
 23416  006C14  0101               	movlb	1	; () banked
 23417  006C16  056D               	decf	MonitorMsgForcedSend@trfError& (0+255),w,b
 23418  006C18  B4D8               	btfsc	status,2,c
 23419  006C1A  0012               	return	
 23420                           
 23421                           ; BSR set to: 1
 23422                           ;monComm.c: 61:         aCaptGetResult(VddSensor, &vddVal);
 23423  006C1C  0E70               	movlw	low MonitorMsgForcedSend@vddVal
 23424  006C1E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 23425  006C20  0E01               	movlw	high MonitorMsgForcedSend@vddVal
 23426  006C22  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 23427  006C24  0E02               	movlw	2
 23428  006C26  EC04  F032         	call	_aCaptGetResult
 23429                           
 23430                           ;monComm.c: 62:         if (vddVal > vddValMean){
 23431  006C2A  0101               	movlb	1	; () banked
 23432  006C2C  5170               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23433  006C2E  5D91               	subwf	_vddValMean& (0+255),w,b
 23434  006C30  5192               	movf	(_vddValMean+1)& (0+255),w,b
 23435  006C32  0A80               	xorlw	128
 23436  006C34  6F6C               	movwf	??_MonitorMsgForcedSend& (0+255),b
 23437  006C36  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23438  006C38  0A80               	xorlw	128
 23439  006C3A  596C               	subwfb	??_MonitorMsgForcedSend& (0+255),w,b
 23440  006C3C  B0D8               	btfsc	status,0,c
 23441  006C3E  D006               	goto	l17757
 23442                           
 23443                           ; BSR set to: 1
 23444                           ;monComm.c: 63:             vddVal = vddVal - vddValMean;
 23445  006C40  5191               	movf	_vddValMean& (0+255),w,b
 23446  006C42  5D70               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23447  006C44  6F70               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 23448  006C46  5192               	movf	(_vddValMean+1)& (0+255),w,b
 23449  006C48  5971               	subwfb	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23450  006C4A  D005               	goto	L45
 23451  006C4C                     l17757:
 23452                           
 23453                           ; BSR set to: 1
 23454                           ;monComm.c: 65:             vddVal = vddValMean - vddVal;
 23455  006C4C  5170               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23456  006C4E  5D91               	subwf	_vddValMean& (0+255),w,b
 23457  006C50  6F70               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 23458  006C52  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23459  006C54  5992               	subwfb	(_vddValMean+1)& (0+255),w,b
 23460  006C56                     L45:
 23461  006C56  6F71               	movwf	(MonitorMsgForcedSend@vddVal+1)& (0+255),b
 23462                           
 23463                           ; BSR set to: 1
 23464                           ;monComm.c: 67:         if (vddVal > 150) {
 23465                           
 23466                           ;monComm.c: 66:         }
 23467  006C58  BF71               	btfsc	(MonitorMsgForcedSend@vddVal+1)& (0+255),7,b
 23468  006C5A  D00A               	goto	l17761
 23469  006C5C  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23470  006C5E  E104               	bnz	u18250
 23471  006C60  0E97               	movlw	151
 23472  006C62  5D70               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23473  006C64  A0D8               	btfss	status,0,c
 23474  006C66  D004               	goto	l17761
 23475  006C68                     u18250:
 23476                           
 23477                           ; BSR set to: 1
 23478                           ;monComm.c: 68:             MonitorErrorSet(MON_VDDE);
 23479  006C68  0E80               	movlw	128
 23480  006C6A  EC84  F051         	call	_MonitorErrorSet
 23481                           
 23482                           ;monComm.c: 69:         } else {
 23483  006C6E  D003               	goto	l17763
 23484  006C70                     l17761:
 23485                           
 23486                           ; BSR set to: 1
 23487                           ;monComm.c: 70:             MonitorErrorClr(MON_VDDE);
 23488  006C70  0E80               	movlw	128
 23489  006C72  EC8D  F051         	call	_MonitorErrorClr
 23490  006C76                     l17763:
 23491                           
 23492                           ; BSR set to: 1
 23493                           ;monComm.c: 74:         if (VentMode == VMODE_VOLUME) {
 23494  006C76  05F8               	decf	_VentMode& (0+255),w,b
 23495  006C78  A4D8               	btfss	status,2,c
 23496  006C7A  D005               	goto	l2978
 23497                           
 23498                           ; BSR set to: 1
 23499                           ;monComm.c: 75:             monitorMsg[0] = state|0x4;
 23500  006C7C  516E               	movf	MonitorMsgForcedSend@state& (0+255),w,b
 23501  006C7E  0904               	iorlw	4
 23502  006C80  0102               	movlb	2	; () banked
 23503  006C82  6FB7               	movwf	_monitorMsg& (0+255),b
 23504                           
 23505                           ;monComm.c: 76:         } else {
 23506  006C84  D003               	goto	l2979
 23507  006C86                     l2978:
 23508                           
 23509                           ; BSR set to: 1
 23510                           ;monComm.c: 77:             monitorMsg[0] = state;
 23511  006C86  0060  F5B8  F2B7   	movff	MonitorMsgForcedSend@state,_monitorMsg
 23512  006C8C                     l2979:
 23513                           
 23514                           ;monComm.c: 80:         monitorMsg[1] = IP;
 23515  006C8C  C1FB  F2B8         	movff	_IP,_monitorMsg+1
 23516                           
 23517                           ;monComm.c: 81:         if (chIP) {
 23518  006C90  0101               	movlb	1	; () banked
 23519  006C92  51BE               	movf	_chIP& (0+255),w,b
 23520  006C94  B4D8               	btfsc	status,2,c
 23521  006C96  D002               	goto	l17771
 23522                           
 23523                           ; BSR set to: 1
 23524                           ;monComm.c: 82:             monitorMsg[1] |= 0x80;
 23525  006C98  0102               	movlb	2	; () banked
 23526  006C9A  8FB8               	bsf	(_monitorMsg+1)& (0+255),7,b
 23527  006C9C                     l17771:
 23528                           
 23529                           ;monComm.c: 85:         monitorMsg[2] = PEEP;
 23530  006C9C  C1FA  F2B9         	movff	_PEEP,_monitorMsg+2
 23531                           
 23532                           ;monComm.c: 86:         if (chPEEP) {
 23533  006CA0  0101               	movlb	1	; () banked
 23534  006CA2  51BC               	movf	_chPEEP& (0+255),w,b
 23535  006CA4  B4D8               	btfsc	status,2,c
 23536  006CA6  D002               	goto	l17777
 23537                           
 23538                           ; BSR set to: 1
 23539                           ;monComm.c: 87:             monitorMsg[2] |= 0x80;
 23540  006CA8  0102               	movlb	2	; () banked
 23541  006CAA  8FB9               	bsf	(_monitorMsg+2)& (0+255),7,b
 23542  006CAC                     l17777:
 23543                           
 23544                           ;monComm.c: 90:         monitorMsg[3] = BPM;
 23545  006CAC  C1FC  F2BA         	movff	_BPM,_monitorMsg+3
 23546                           
 23547                           ;monComm.c: 91:         if (chBPM) {
 23548  006CB0  0101               	movlb	1	; () banked
 23549  006CB2  51BF               	movf	_chBPM& (0+255),w,b
 23550  006CB4  B4D8               	btfsc	status,2,c
 23551  006CB6  D002               	goto	l17783
 23552                           
 23553                           ; BSR set to: 1
 23554                           ;monComm.c: 92:             monitorMsg[3] |= 0x80;
 23555  006CB8  0102               	movlb	2	; () banked
 23556  006CBA  8FBA               	bsf	(_monitorMsg+3)& (0+255),7,b
 23557  006CBC                     l17783:
 23558                           
 23559                           ;monComm.c: 95:         monitorMsg[4] = MaxP;
 23560  006CBC  C1FF  F2BB         	movff	_MaxP,_monitorMsg+4
 23561                           
 23562                           ;monComm.c: 96:         if (chMaxP){
 23563  006CC0  0101               	movlb	1	; () banked
 23564  006CC2  51BD               	movf	_chMaxP& (0+255),w,b
 23565  006CC4  B4D8               	btfsc	status,2,c
 23566  006CC6  D002               	goto	l17789
 23567                           
 23568                           ; BSR set to: 1
 23569                           ;monComm.c: 97:             monitorMsg[3] |= 0x80;
 23570  006CC8  0102               	movlb	2	; () banked
 23571  006CCA  8FBA               	bsf	(_monitorMsg+3)& (0+255),7,b
 23572  006CCC                     l17789:
 23573                           
 23574                           ;monComm.c: 100:         monitorMsg[5] = MaxV>>1;
 23575  006CCC  0101               	movlb	1	; () banked
 23576  006CCE  90D8               	bcf	status,0,c
 23577  006CD0  31FE               	rrcf	_MaxV& (0+255),w,b
 23578  006CD2  0102               	movlb	2	; () banked
 23579  006CD4  6FBC               	movwf	(_monitorMsg+5)& (0+255),b
 23580                           
 23581                           ; BSR set to: 2
 23582                           ;monComm.c: 101:         if (chMaxV){
 23583  006CD6  0101               	movlb	1	; () banked
 23584  006CD8  51B9               	movf	_chMaxV& (0+255),w,b
 23585  006CDA  B4D8               	btfsc	status,2,c
 23586  006CDC  D002               	goto	l17795
 23587                           
 23588                           ; BSR set to: 1
 23589                           ;monComm.c: 102:             monitorMsg[5] |= 0x80;
 23590  006CDE  0102               	movlb	2	; () banked
 23591  006CE0  8FBC               	bsf	(_monitorMsg+5)& (0+255),7,b
 23592  006CE2                     l17795:
 23593                           
 23594                           ;monComm.c: 105:         monitorMsg[6] = LowVAlarm>>1;
 23595  006CE2  0101               	movlb	1	; () banked
 23596  006CE4  90D8               	bcf	status,0,c
 23597  006CE6  31F7               	rrcf	_LowVAlarm& (0+255),w,b
 23598  006CE8  0102               	movlb	2	; () banked
 23599  006CEA  6FBD               	movwf	(_monitorMsg+6)& (0+255),b
 23600                           
 23601                           ; BSR set to: 2
 23602                           ;monComm.c: 106:         if (chLowVAlarm){
 23603  006CEC  0101               	movlb	1	; () banked
 23604  006CEE  51BB               	movf	_chLowVAlarm& (0+255),w,b
 23605  006CF0  B4D8               	btfsc	status,2,c
 23606  006CF2  D002               	goto	l17801
 23607                           
 23608                           ; BSR set to: 1
 23609                           ;monComm.c: 107:             monitorMsg[6] |= 0x80;
 23610  006CF4  0102               	movlb	2	; () banked
 23611  006CF6  8FBD               	bsf	(_monitorMsg+6)& (0+255),7,b
 23612  006CF8                     l17801:
 23613                           
 23614                           ;monComm.c: 110:         monitorMsg[7] = HighVAlarm>>1;
 23615  006CF8  0101               	movlb	1	; () banked
 23616  006CFA  90D8               	bcf	status,0,c
 23617  006CFC  31FD               	rrcf	_HighVAlarm& (0+255),w,b
 23618  006CFE  0102               	movlb	2	; () banked
 23619  006D00  6FBE               	movwf	(_monitorMsg+7)& (0+255),b
 23620                           
 23621                           ; BSR set to: 2
 23622                           ;monComm.c: 111:         if (chHighVAlarm){
 23623  006D02  0101               	movlb	1	; () banked
 23624  006D04  51BA               	movf	_chHighVAlarm& (0+255),w,b
 23625  006D06  B4D8               	btfsc	status,2,c
 23626  006D08  D002               	goto	l17807
 23627                           
 23628                           ; BSR set to: 1
 23629                           ;monComm.c: 112:             monitorMsg[7] |= 0x80;
 23630  006D0A  0102               	movlb	2	; () banked
 23631  006D0C  8FBE               	bsf	(_monitorMsg+7)& (0+255),7,b
 23632  006D0E                     l17807:
 23633                           
 23634                           ;monComm.c: 115:         monitorMsg[8] = bRateGet();
 23635  006D0E  ECCF  F04F         	call	_bRateGet	;wreg free
 23636  006D12  0102               	movlb	2	; () banked
 23637  006D14  6FBF               	movwf	(_monitorMsg+8)& (0+255),b
 23638                           
 23639                           ; BSR set to: 2
 23640                           ;monComm.c: 116:         monitorMsg[9] = ctrlErrorStatus;
 23641  006D16  C1CB  F2C0         	movff	_ctrlErrorStatus,_monitorMsg+9
 23642                           
 23643                           ; BSR set to: 2
 23644  006D1A  ECD0  F045         	call	_I2C2_MOpen	;wreg free
 23645                           
 23646                           ; BSR set to: 0
 23647                           ;monComm.c: 119:         I2C2_SetBuffer(monitorMsg, 10);
 23648  006D1E  0EB7               	movlw	low _monitorMsg
 23649  006D20  6F8B               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 23650  006D22  0E02               	movlw	high _monitorMsg
 23651  006D24  6F8C               	movwf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 23652  006D26  0E00               	movlw	0
 23653  006D28  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 23654  006D2A  0E0A               	movlw	10
 23655  006D2C  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 23656  006D2E  ECE0  F04F         	call	_I2C2_SetBuffer	;wreg free
 23657                           
 23658                           ; BSR set to: 2
 23659  006D32  0E00               	movlw	0
 23660  006D34  EC32  F04A         	call	_I2C2_MasterOperation
 23661                           
 23662                           ; BSR set to: 1
 23663                           
 23664                           ;monComm.c: 121:     } else {
 23665  006D38  0012               	return		;funcret
 23666  006D3A                     __end_of_MonitorMsgForcedSend:
 23667                           	opt callstack 0
 23668                           
 23669 ;; *************** function _timeGet *****************
 23670 ;; Defined at:
 23671 ;;		line 13 in file "time.c"
 23672 ;; Parameters:    Size  Location     Type
 23673 ;;		None
 23674 ;; Auto vars:     Size  Location     Type
 23675 ;;		None
 23676 ;; Return value:  Size  Location     Type
 23677 ;;                  2   51[BANK0 ] unsigned short 
 23678 ;; Registers used:
 23679 ;;		wreg, status,2, cstack
 23680 ;; Tracked objects:
 23681 ;;		On entry : 0/1
 23682 ;;		On exit  : 3F/0
 23683 ;;		Unchanged: 0/0
 23684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23689 ;;Total ram usage:        2 bytes
 23690 ;; Hardware stack levels used:    1
 23691 ;; Hardware stack levels required when called:   18
 23692 ;; This function calls:
 23693 ;;		_TMR1_ReadTimer
 23694 ;; This function is called by:
 23695 ;;		_main
 23696 ;;		_timeDelayMs
 23697 ;;		_keyReadEC
 23698 ;;		_MenuMng
 23699 ;;		_pressureSensorChk
 23700 ;;		_flowChk
 23701 ;;		_SelfTest
 23702 ;;		_MonitorMsgForcedSend
 23703 ;; This function uses a non-reentrant model
 23704 ;;
 23705                           
 23706                           	psect	text88
 23707  00A2F6                     __ptext88:
 23708                           	opt callstack 0
 23709  00A2F6                     _timeGet:
 23710                           	opt callstack 12
 23711                           
 23712                           ;time.c: 14:     return TMR1_ReadTimer();
 23713                           
 23714                           ; BSR set to: 1
 23715                           ;incstack = 0
 23716  00A2F6  ECD3  F04E         	call	_TMR1_ReadTimer	;wreg free
 23717  00A2FA  0060  F22C  F093   	movff	?_TMR1_ReadTimer,?_timeGet
 23718  00A300  0060  F230  F094   	movff	?_TMR1_ReadTimer+1,?_timeGet+1
 23719                           
 23720                           ; BSR set to: 0
 23721  00A306  0012               	return		;funcret
 23722  00A308                     __end_of_timeGet:
 23723                           	opt callstack 0
 23724                           
 23725 ;; *************** function _TMR1_ReadTimer *****************
 23726 ;; Defined at:
 23727 ;;		line 104 in file "mcc_generated_files/tmr1.c"
 23728 ;; Parameters:    Size  Location     Type
 23729 ;;		None
 23730 ;; Auto vars:     Size  Location     Type
 23731 ;;  readVal         2   47[BANK0 ] unsigned short 
 23732 ;;  readValLow      1   50[BANK0 ] unsigned char 
 23733 ;;  readValHigh     1   49[BANK0 ] unsigned char 
 23734 ;; Return value:  Size  Location     Type
 23735 ;;                  2   43[BANK0 ] unsigned short 
 23736 ;; Registers used:
 23737 ;;		wreg, status,2
 23738 ;; Tracked objects:
 23739 ;;		On entry : 0/0
 23740 ;;		On exit  : 3F/0
 23741 ;;		Unchanged: 0/0
 23742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23744 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23746 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23747 ;;Total ram usage:        8 bytes
 23748 ;; Hardware stack levels used:    1
 23749 ;; Hardware stack levels required when called:   17
 23750 ;; This function calls:
 23751 ;;		Nothing
 23752 ;; This function is called by:
 23753 ;;		_timeGet
 23754 ;;		_timeElapsedR
 23755 ;;		_timeElapsed
 23756 ;; This function uses a non-reentrant model
 23757 ;;
 23758                           
 23759                           	psect	text89
 23760  009DA6                     __ptext89:
 23761                           	opt callstack 0
 23762  009DA6                     _TMR1_ReadTimer:
 23763                           	opt callstack 12
 23764                           
 23765                           ;mcc_generated_files/tmr1.c: 106:     uint16_t readVal;;mcc_generated_files/tmr1.c: 107:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 108:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 110:     T1CONbits.T1RD16 = 1;
 23766                           
 23767                           ; BSR set to: 0
 23768                           ;incstack = 0
 23769  009DA6  82B2               	bsf	178,1,c	;volatile
 23770                           
 23771                           ;mcc_generated_files/tmr1.c: 112:     readValLow = TMR1L;
 23772  009DA8  006F FEC0  F092    	movff	16304,TMR1_ReadTimer@readValLow	;volatile
 23773                           
 23774                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
 23775  009DAE  006F FEC4  F091    	movff	16305,TMR1_ReadTimer@readValHigh	;volatile
 23776                           
 23777                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 23778  009DB4  0100               	movlb	0	; () banked
 23779  009DB6  5191               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 23780  009DB8  6F8D               	movwf	??_TMR1_ReadTimer& (0+255),b
 23781  009DBA  5192               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 23782  009DBC  6F8F               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 23783  009DBE  0060  F234  F090   	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
 23787  009DC4  0060  F23C  F08B   	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 23788  009DCA  0060  F240  F08C   	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 23789                           
 23790                           ; BSR set to: 0
 23791  009DD0  0012               	return		;funcret
 23792  009DD2                     __end_of_TMR1_ReadTimer:
 23793                           	opt callstack 0
 23794                           
 23795 ;; *************** function _sprintf *****************
 23796 ;; Defined at:
 23797 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
 23798 ;; Parameters:    Size  Location     Type
 23799 ;;  s               2   70[BANK1 ] PTR unsigned char 
 23800 ;;		 -> lcdBtnRow(20), lcdTopRow(20), lcdBtnRRow(10), 
 23801 ;;  fmt             2   72[BANK1 ] PTR const unsigned char 
 23802 ;;		 -> STR_106(7), STR_105(7), STR_87(17), STR_75(18), 
 23803 ;;		 -> STR_64(19), STR_60(11), STR_59(10), STR_58(12), 
 23804 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 23805 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 23806 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 23807 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 23808 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 23809 ;;		 -> STR_37(21), STR_20(6), 
 23810 ;; Auto vars:     Size  Location     Type
 23811 ;;  f               6   86[BANK1 ] struct _IO_FILE
 23812 ;;  ap              2   84[BANK1 ] PTR void [1]
 23813 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23814 ;;  ret             2    0        int 
 23815 ;; Return value:  Size  Location     Type
 23816 ;;                  2   70[BANK1 ] int 
 23817 ;; Registers used:
 23818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23819 ;; Tracked objects:
 23820 ;;		On entry : 3E/1
 23821 ;;		On exit  : 3F/1
 23822 ;;		Unchanged: 0/0
 23823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23824 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23825 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23827 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23828 ;;Total ram usage:       22 bytes
 23829 ;; Hardware stack levels used:    1
 23830 ;; Hardware stack levels required when called:   25
 23831 ;; This function calls:
 23832 ;;		_vfprintf
 23833 ;; This function is called by:
 23834 ;;		_main
 23835 ;;		_screenMng
 23836 ;;		_pressureSensorChk
 23837 ;;		_flowChk
 23838 ;;		_SelfTest
 23839 ;;		_MonitorMsgForcedSend
 23840 ;; This function uses a non-reentrant model
 23841 ;;
 23842                           
 23843                           	psect	text90
 23844  008FB2                     __ptext90:
 23845                           	opt callstack 0
 23846  008FB2                     _sprintf:
 23847                           	opt callstack 5
 23848                           
 23849                           ; BSR set to: 0
 23850                           ;incstack = 0
 23851  008FB2  0E4A               	movlw	low (?_sprintf+4)
 23852  008FB4  0101               	movlb	1	; () banked
 23853  008FB6  6F54               	movwf	sprintf@ap& (0+255),b
 23854  008FB8  0E01               	movlw	high (?_sprintf+4)
 23855  008FBA  6F55               	movwf	(sprintf@ap+1)& (0+255),b
 23856  008FBC  0060  F518  F156   	movff	sprintf@s,sprintf@f
 23857  008FC2  0060  F51C  F157   	movff	sprintf@s+1,sprintf@f+1
 23858                           
 23859                           ; BSR set to: 1
 23860  008FC8  0E00               	movlw	0
 23861  008FCA  6F59               	movwf	(sprintf@f+3)& (0+255),b
 23862  008FCC  0E00               	movlw	0
 23863  008FCE  6F58               	movwf	(sprintf@f+2)& (0+255),b
 23864                           
 23865                           ; BSR set to: 1
 23866  008FD0  0E00               	movlw	0
 23867  008FD2  6F5B               	movwf	(sprintf@f+5)& (0+255),b
 23868  008FD4  0E00               	movlw	0
 23869  008FD6  6F5A               	movwf	(sprintf@f+4)& (0+255),b
 23870                           
 23871                           ; BSR set to: 1
 23872  008FD8  0E56               	movlw	low sprintf@f
 23873  008FDA  6F40               	movwf	vfprintf@fp& (0+255),b
 23874  008FDC  0E01               	movlw	high sprintf@f
 23875  008FDE  6F41               	movwf	(vfprintf@fp+1)& (0+255),b
 23876  008FE0  0060  F520  F142   	movff	sprintf@fmt,vfprintf@fmt
 23877  008FE6  0060  F524  F143   	movff	sprintf@fmt+1,vfprintf@fmt+1
 23878  008FEC  0E54               	movlw	low sprintf@ap
 23879  008FEE  6F44               	movwf	vfprintf@ap& (0+255),b
 23880  008FF0  0E01               	movlw	high sprintf@ap
 23881  008FF2  6F45               	movwf	(vfprintf@ap+1)& (0+255),b
 23882  008FF4  EC65  F045         	call	_vfprintf	;wreg free
 23883                           
 23884                           ; BSR set to: 2
 23885  008FF8  0101               	movlb	1	; () banked
 23886  008FFA  5158               	movf	(sprintf@f+2)& (0+255),w,b
 23887  008FFC  2546               	addwf	sprintf@s& (0+255),w,b
 23888  008FFE  6ED9               	movwf	fsr2l,c
 23889  009000  5159               	movf	(sprintf@f+3)& (0+255),w,b
 23890  009002  2147               	addwfc	(sprintf@s+1)& (0+255),w,b
 23891  009004  6EDA               	movwf	fsr2h,c
 23892  009006  0E00               	movlw	0
 23893  009008  6EDF               	movwf	indf2,c
 23894                           
 23895                           ; BSR set to: 1
 23896  00900A  0012               	return		;funcret
 23897  00900C                     __end_of_sprintf:
 23898                           	opt callstack 0
 23899                           
 23900 ;; *************** function _bRateGet *****************
 23901 ;; Defined at:
 23902 ;;		line 43 in file "brate.c"
 23903 ;; Parameters:    Size  Location     Type
 23904 ;;		None
 23905 ;; Auto vars:     Size  Location     Type
 23906 ;;		None
 23907 ;; Return value:  Size  Location     Type
 23908 ;;                  1    wreg      unsigned char 
 23909 ;; Registers used:
 23910 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23911 ;; Tracked objects:
 23912 ;;		On entry : 3C/1
 23913 ;;		On exit  : 3F/0
 23914 ;;		Unchanged: 0/0
 23915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23920 ;;Total ram usage:        0 bytes
 23921 ;; Hardware stack levels used:    1
 23922 ;; Hardware stack levels required when called:   18
 23923 ;; This function calls:
 23924 ;;		___awdiv
 23925 ;; This function is called by:
 23926 ;;		_main
 23927 ;;		_MonitorMsgForcedSend
 23928 ;; This function uses a non-reentrant model
 23929 ;;
 23930                           
 23931                           	psect	text91
 23932  009F9E                     __ptext91:
 23933                           	opt callstack 0
 23934  009F9E                     _bRateGet:
 23935                           	opt callstack 12
 23936                           
 23937                           ;brate.c: 44:     return eBRate*20/bRateCnt;
 23938                           
 23939                           ; BSR set to: 1
 23940                           ;incstack = 0
 23941  009F9E  0100               	movlb	0	; () banked
 23942  009FA0  51BF               	movf	_eBRate& (0+255),w,b
 23943  009FA2  0D14               	mullw	20
 23944  009FA4  006F FFCC  F0A1    	movff	prodl,___awdiv@dividend
 23945  009FAA  006F FFD0  F0A2    	movff	prodh,___awdiv@dividend+1
 23946  009FB0  0060  F2F8  F0A3   	movff	_bRateCnt,___awdiv@divisor
 23947  009FB6  6BA4               	clrf	(___awdiv@divisor+1)& (0+255),b
 23948  009FB8  ECF9  F042         	call	___awdiv	;wreg free
 23949  009FBC  51A1               	movf	?___awdiv& (0+255),w,b
 23950                           
 23951                           ; BSR set to: 0
 23952  009FBE  0012               	return		;funcret
 23953  009FC0                     __end_of_bRateGet:
 23954                           	opt callstack 0
 23955                           
 23956 ;; *************** function ___awdiv *****************
 23957 ;; Defined at:
 23958 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 23959 ;; Parameters:    Size  Location     Type
 23960 ;;  dividend        2   65[BANK0 ] int 
 23961 ;;  divisor         2   67[BANK0 ] int 
 23962 ;; Auto vars:     Size  Location     Type
 23963 ;;  quotient        2   71[BANK0 ] int 
 23964 ;;  sign            1   70[BANK0 ] unsigned char 
 23965 ;;  counter         1   69[BANK0 ] unsigned char 
 23966 ;; Return value:  Size  Location     Type
 23967 ;;                  2   65[BANK0 ] int 
 23968 ;; Registers used:
 23969 ;;		wreg, status,2, status,0
 23970 ;; Tracked objects:
 23971 ;;		On entry : 3F/0
 23972 ;;		On exit  : 3F/0
 23973 ;;		Unchanged: 0/0
 23974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23976 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23978 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23979 ;;Total ram usage:        8 bytes
 23980 ;; Hardware stack levels used:    1
 23981 ;; Hardware stack levels required when called:   17
 23982 ;; This function calls:
 23983 ;;		Nothing
 23984 ;; This function is called by:
 23985 ;;		_main
 23986 ;;		_MenuMng
 23987 ;;		_bRateGet
 23988 ;; This function uses a non-reentrant model
 23989 ;;
 23990                           
 23991                           	psect	text92
 23992  0085F2                     __ptext92:
 23993                           	opt callstack 0
 23994  0085F2                     ___awdiv:
 23995                           	opt callstack 12
 23996                           
 23997                           ; BSR set to: 0
 23998                           
 23999                           ; BSR set to: 0
 24000                           ;incstack = 0
 24001  0085F2  0E00               	movlw	0
 24002  0085F4  6FA6               	movwf	___awdiv@sign& (0+255),b
 24003                           
 24004                           ; BSR set to: 0
 24005  0085F6  AFA4               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24006  0085F8  D006               	goto	l17381
 24007                           
 24008                           ; BSR set to: 0
 24009  0085FA  6DA3               	negf	___awdiv@divisor& (0+255),b
 24010  0085FC  1FA4               	comf	(___awdiv@divisor+1)& (0+255),f,b
 24011  0085FE  B0D8               	btfsc	status,0,c
 24012  008600  2BA4               	incf	(___awdiv@divisor+1)& (0+255),f,b
 24013                           
 24014                           ; BSR set to: 0
 24015  008602  0E01               	movlw	1
 24016  008604  6FA6               	movwf	___awdiv@sign& (0+255),b
 24017  008606                     l17381:
 24018                           
 24019                           ; BSR set to: 0
 24020  008606  AFA2               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 24021  008608  D006               	goto	l17387
 24022                           
 24023                           ; BSR set to: 0
 24024  00860A  6DA1               	negf	___awdiv@dividend& (0+255),b
 24025  00860C  1FA2               	comf	(___awdiv@dividend+1)& (0+255),f,b
 24026  00860E  B0D8               	btfsc	status,0,c
 24027  008610  2BA2               	incf	(___awdiv@dividend+1)& (0+255),f,b
 24028                           
 24029                           ; BSR set to: 0
 24030  008612  0E01               	movlw	1
 24031  008614  1BA6               	xorwf	___awdiv@sign& (0+255),f,b
 24032  008616                     l17387:
 24033                           
 24034                           ; BSR set to: 0
 24035  008616  0E00               	movlw	0
 24036  008618  6FA8               	movwf	(___awdiv@quotient+1)& (0+255),b
 24037  00861A  0E00               	movlw	0
 24038  00861C  6FA7               	movwf	___awdiv@quotient& (0+255),b
 24039                           
 24040                           ; BSR set to: 0
 24041  00861E  51A3               	movf	___awdiv@divisor& (0+255),w,b
 24042  008620  11A4               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 24043  008622  B4D8               	btfsc	status,2,c
 24044  008624  D01C               	goto	l17409
 24045                           
 24046                           ; BSR set to: 0
 24047  008626  0E01               	movlw	1
 24048  008628  6FA5               	movwf	___awdiv@counter& (0+255),b
 24049  00862A  D004               	goto	l17395
 24050  00862C                     l17393:
 24051                           
 24052                           ; BSR set to: 0
 24053  00862C  90D8               	bcf	status,0,c
 24054  00862E  37A3               	rlcf	___awdiv@divisor& (0+255),f,b
 24055  008630  37A4               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 24056  008632  2BA5               	incf	___awdiv@counter& (0+255),f,b
 24057  008634                     l17395:
 24058                           
 24059                           ; BSR set to: 0
 24060  008634  AFA4               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24061  008636  D7FA               	goto	l17393
 24062  008638                     u17840:
 24063                           
 24064                           ; BSR set to: 0
 24065  008638  90D8               	bcf	status,0,c
 24066  00863A  37A7               	rlcf	___awdiv@quotient& (0+255),f,b
 24067  00863C  37A8               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 24068                           
 24069                           ; BSR set to: 0
 24070  00863E  51A3               	movf	___awdiv@divisor& (0+255),w,b
 24071  008640  5DA1               	subwf	___awdiv@dividend& (0+255),w,b
 24072  008642  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24073  008644  59A2               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 24074  008646  A0D8               	btfss	status,0,c
 24075  008648  D005               	goto	l17405
 24076                           
 24077                           ; BSR set to: 0
 24078  00864A  51A3               	movf	___awdiv@divisor& (0+255),w,b
 24079  00864C  5FA1               	subwf	___awdiv@dividend& (0+255),f,b
 24080  00864E  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24081  008650  5BA2               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 24082                           
 24083                           ; BSR set to: 0
 24084  008652  81A7               	bsf	___awdiv@quotient& (0+255),0,b
 24085  008654                     l17405:
 24086                           
 24087                           ; BSR set to: 0
 24088  008654  90D8               	bcf	status,0,c
 24089  008656  33A4               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 24090  008658  33A3               	rrcf	___awdiv@divisor& (0+255),f,b
 24091                           
 24092                           ; BSR set to: 0
 24093  00865A  2FA5               	decfsz	___awdiv@counter& (0+255),f,b
 24094  00865C  D7ED               	goto	u17840
 24095  00865E                     l17409:
 24096                           
 24097                           ; BSR set to: 0
 24098  00865E  51A6               	movf	___awdiv@sign& (0+255),w,b
 24099  008660  B4D8               	btfsc	status,2,c
 24100  008662  D004               	goto	l17413
 24101                           
 24102                           ; BSR set to: 0
 24103  008664  6DA7               	negf	___awdiv@quotient& (0+255),b
 24104  008666  1FA8               	comf	(___awdiv@quotient+1)& (0+255),f,b
 24105  008668  B0D8               	btfsc	status,0,c
 24106  00866A  2BA8               	incf	(___awdiv@quotient+1)& (0+255),f,b
 24107  00866C                     l17413:
 24108                           
 24109                           ; BSR set to: 0
 24110  00866C  0060  F29C  F0A1   	movff	___awdiv@quotient,?___awdiv
 24111  008672  0060  F2A0  F0A2   	movff	___awdiv@quotient+1,?___awdiv+1
 24112                           
 24113                           ; BSR set to: 0
 24114  008678  0012               	return		;funcret
 24115  00867A                     __end_of___awdiv:
 24116                           	opt callstack 0
 24117                           
 24118 ;; *************** function _aCaptGetResult *****************
 24119 ;; Defined at:
 24120 ;;		line 159 in file "aCapture.c"
 24121 ;; Parameters:    Size  Location     Type
 24122 ;;  sel             1    wreg     enum E16104
 24123 ;;  outVal          2   96[BANK1 ] PTR short 
 24124 ;;		 -> MonitorMsgForcedSend@vddVal(2), SelfTest@vddVal(2), flowChk@aPVal(2), pressureSensorChk@aPVal(2), 
 24125 ;;		 -> pressureSensorChk@mPVal(2), vMeasureIsr@instP(2), bdP2(2), bdP1(2), 
 24126 ;;		 -> pAvgShort(2), main@tmpVal(2), pAvgUShort(2), pInst(2), 
 24127 ;; Auto vars:     Size  Location     Type
 24128 ;;  sel             1  103[BANK1 ] enum E16104
 24129 ;;  lclRaw          4  104[BANK1 ] unsigned long 
 24130 ;;  lclValid        1  102[BANK1 ] unsigned char 
 24131 ;; Return value:  Size  Location     Type
 24132 ;;                  1    wreg      _Bool 
 24133 ;; Registers used:
 24134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24135 ;; Tracked objects:
 24136 ;;		On entry : 3F/1
 24137 ;;		On exit  : 3C/0
 24138 ;;		Unchanged: 0/0
 24139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24140 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24141 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24142 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24143 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24144 ;;Total ram usage:       12 bytes
 24145 ;; Hardware stack levels used:    1
 24146 ;; Hardware stack levels required when called:   26
 24147 ;; This function calls:
 24148 ;;		_printf
 24149 ;; This function is called by:
 24150 ;;		_main
 24151 ;;		_pressureSensorChk
 24152 ;;		_flowChk
 24153 ;;		_SelfTest
 24154 ;;		_MonitorMsgForcedSend
 24155 ;; This function uses a non-reentrant model
 24156 ;;
 24157                           
 24158                           	psect	text93
 24159  006408                     __ptext93:
 24160                           	opt callstack 0
 24161  006408                     _aCaptGetResult:
 24162                           	opt callstack 4
 24163                           
 24164                           ; BSR set to: 0
 24165                           ;incstack = 0
 24166                           ;aCaptGetResult@sel stored from wreg
 24167  006408  6F67               	movwf	aCaptGetResult@sel& (0+255),b
 24168                           
 24169                           ;aCapture.c: 160:     uint32_t lclRaw;;aCapture.c: 161:     uint8_t lclValid;;aCapture.c
      +                          : 164:     PIE1bits.ADTIE = 0;
 24170  00640A  0139               	movlb	57	; () banked
 24171  00640C  9791               	bcf	145,3,b	;volatile
 24172                           
 24173                           ; BSR set to: 57
 24174                           ;aCapture.c: 165:     lclRaw=resultTbl[sel];
 24175  00640E  0101               	movlb	1	; () banked
 24176  006410  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24177  006412  0D04               	mullw	4
 24178  006414  0E73               	movlw	low _resultTbl
 24179  006416  24F3               	addwf	243,w,c
 24180  006418  6ED9               	movwf	fsr2l,c
 24181  00641A  0E02               	movlw	high _resultTbl
 24182  00641C  20F4               	addwfc	prodh,w,c
 24183  00641E  6EDA               	movwf	fsr2h,c
 24184  006420  006F FF78  F168    	movff	postinc2,aCaptGetResult@lclRaw
 24185  006426  006F FF78  F169    	movff	postinc2,aCaptGetResult@lclRaw+1
 24186  00642C  006F FF78  F16A    	movff	postinc2,aCaptGetResult@lclRaw+2
 24187  006432  006F FF78  F16B    	movff	postinc2,aCaptGetResult@lclRaw+3
 24188                           
 24189                           ; BSR set to: 1
 24190                           ;aCapture.c: 166:     lclValid=resultTblVal[sel];
 24191  006438  0E24               	movlw	low _resultTblVal
 24192  00643A  2567               	addwf	aCaptGetResult@sel& (0+255),w,b
 24193  00643C  6ED9               	movwf	fsr2l,c
 24194  00643E  6ADA               	clrf	fsr2h,c
 24195  006440  0E02               	movlw	high _resultTblVal
 24196  006442  22DA               	addwfc	fsr2h,f,c
 24197  006444  50DF               	movf	indf2,w,c
 24198  006446  6F66               	movwf	aCaptGetResult@lclValid& (0+255),b
 24199                           
 24200                           ; BSR set to: 1
 24201                           ;aCapture.c: 167:     PIE1bits.ADTIE = 1;
 24202  006448  0139               	movlb	57	; () banked
 24203  00644A  8791               	bsf	145,3,b	;volatile
 24204                           
 24205                           ; BSR set to: 57
 24206                           ;aCapture.c: 169:     if (lclValid == 0) {
 24207  00644C  0101               	movlb	1	; () banked
 24208  00644E  5166               	movf	aCaptGetResult@lclValid& (0+255),w,b
 24209  006450  A4D8               	btfss	status,2,c
 24210  006452  D066               	goto	l17511
 24211                           
 24212                           ; BSR set to: 1
 24213                           ;aCapture.c: 170:         return 0;
 24214  006454  0E00               	movlw	0
 24215  006456  0012               	return	
 24216  006458                     l17501:
 24217                           
 24218                           ; BSR set to: 1
 24219                           ;aCapture.c: 177:             lclRaw=lclRaw>>9;
 24220  006458  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24221  00645E  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24222  006464  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24223  00646A  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24224  006470  0E0A               	movlw	10
 24225  006472  D005               	goto	u17920
 24226  006474                     u17925:
 24227  006474  90D8               	bcf	status,0,c
 24228  006476  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24229  006478  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24230  00647A  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24231  00647C  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24232  00647E                     u17920:
 24233  00647E  2EE8               	decfsz	wreg,f,c
 24234  006480  D7F9               	goto	u17925
 24235  006482  D041               	goto	L48
 24236  006484                     l17503:
 24237                           
 24238                           ; BSR set to: 1
 24239                           ;aCapture.c: 180:             lclRaw=lclRaw>>6;
 24240  006484  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24241  00648A  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24242  006490  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24243  006496  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24244  00649C  0E07               	movlw	7
 24245  00649E  D005               	goto	u17930
 24246  0064A0                     u17935:
 24247  0064A0  90D8               	bcf	status,0,c
 24248  0064A2  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24249  0064A4  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24250  0064A6  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24251  0064A8  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24252  0064AA                     u17930:
 24253  0064AA  2EE8               	decfsz	wreg,f,c
 24254  0064AC  D7F9               	goto	u17935
 24255  0064AE  D02B               	goto	L48
 24256  0064B0                     l17505:
 24257                           
 24258                           ; BSR set to: 1
 24259                           ;aCapture.c: 183:             lclRaw=lclRaw>>4;
 24260  0064B0  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24261  0064B6  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24262  0064BC  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24263  0064C2  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24264  0064C8  0E05               	movlw	5
 24265  0064CA  D005               	goto	u17940
 24266  0064CC                     u17945:
 24267  0064CC  90D8               	bcf	status,0,c
 24268  0064CE  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24269  0064D0  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24270  0064D2  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24271  0064D4  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24272  0064D6                     u17940:
 24273  0064D6  2EE8               	decfsz	wreg,f,c
 24274  0064D8  D7F9               	goto	u17945
 24275  0064DA  D015               	goto	L48
 24276  0064DC                     l17507:
 24277                           
 24278                           ; BSR set to: 1
 24279                           ;aCapture.c: 186:             lclRaw=lclRaw>>2;
 24280  0064DC  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24281  0064E2  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24282  0064E8  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24283  0064EE  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24284  0064F4  0E03               	movlw	3
 24285  0064F6  D005               	goto	u17950
 24286  0064F8                     u17955:
 24287  0064F8  90D8               	bcf	status,0,c
 24288  0064FA  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24289  0064FC  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24290  0064FE  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24291  006500  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24292  006502                     u17950:
 24293  006502  2EE8               	decfsz	wreg,f,c
 24294  006504  D7F9               	goto	u17955
 24295  006506                     L48:
 24296  006506  0060  F588  F168   	movff	??_aCaptGetResult,aCaptGetResult@lclRaw
 24297  00650C  0060  F58C  F169   	movff	??_aCaptGetResult+1,aCaptGetResult@lclRaw+1
 24298  006512  0060  F590  F16A   	movff	??_aCaptGetResult+2,aCaptGetResult@lclRaw+2
 24299  006518  0060  F594  F16B   	movff	??_aCaptGetResult+3,aCaptGetResult@lclRaw+3
 24300                           
 24301                           ;aCapture.c: 187:             break;
 24302  00651E  D0A0               	goto	l17541
 24303  006520                     l17511:
 24304                           
 24305                           ; BSR set to: 1
 24306  006520  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24307  006522  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24308  006524  6B63               	clrf	(??_aCaptGetResult+1)& (0+255),b
 24309                           
 24310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24311                           ; Switch size 1, requested type "simple"
 24312                           ; Number of cases is 1, Range of values is 0 to 0
 24313                           ; switch strategies available:
 24314                           ; Name         Instructions Cycles
 24315                           ; simple_byte            4     3 (average)
 24316                           ;	Chosen strategy is simple_byte
 24317  006526  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24318  006528  0A00               	xorlw	0	; case 0
 24319  00652A  A4D8               	btfss	status,2,c
 24320  00652C  D099               	goto	l17541
 24321                           
 24322                           ; BSR set to: 1
 24323                           ; Switch size 1, requested type "simple"
 24324                           ; Number of cases is 4, Range of values is 3 to 6
 24325                           ; switch strategies available:
 24326                           ; Name         Instructions Cycles
 24327                           ; simple_byte           13     7 (average)
 24328                           ;	Chosen strategy is simple_byte
 24329  00652E  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24330  006530  0A03               	xorlw	3	; case 3
 24331  006532  B4D8               	btfsc	status,2,c
 24332  006534  D7D3               	goto	l17507
 24333  006536  0A07               	xorlw	7	; case 4
 24334  006538  B4D8               	btfsc	status,2,c
 24335  00653A  D7BA               	goto	l17505
 24336  00653C  0A01               	xorlw	1	; case 5
 24337  00653E  B4D8               	btfsc	status,2,c
 24338  006540  D7A1               	goto	l17503
 24339  006542  0A03               	xorlw	3	; case 6
 24340  006544  B4D8               	btfsc	status,2,c
 24341  006546  D788               	goto	l17501
 24342  006548  D08B               	goto	l17541
 24343  00654A                     l1990:
 24344                           
 24345                           ; BSR set to: 1
 24346                           ;aCapture.c: 199:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 24347                           
 24348                           ; BSR set to: 1
 24349  00654A  0060  F7D4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24350  006550  0060  F7D8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24351  006556  0E00               	movlw	0
 24352  006558  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24353  00655A  0EFF               	movlw	255
 24354  00655C  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24355  00655E  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24356  006560  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24357  006562  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24358  006564  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24359  006566  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24360  006568  5164               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 24361  00656A  596A               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24362  00656C  5165               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 24363  00656E  596B               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24364  006570  B0D8               	btfsc	status,0,c
 24365  006572  D022               	goto	l17519
 24366                           
 24367                           ; BSR set to: 1
 24368  006574  0060  F7D4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24369  00657A  0060  F7D8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24370  006580  0E00               	movlw	0
 24371  006582  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24372  006584  0EFF               	movlw	255
 24373  006586  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24374  006588  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24375  00658A  5168               	movf	aCaptGetResult@lclRaw& (0+255),w,b
 24376  00658C  5D62               	subwf	??_aCaptGetResult& (0+255),w,b
 24377  00658E  6F68               	movwf	aCaptGetResult@lclRaw& (0+255),b
 24378  006590  5169               	movf	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24379  006592  5963               	subwfb	(??_aCaptGetResult+1)& (0+255),w,b
 24380  006594  6F69               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 24381  006596  516A               	movf	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24382  006598  5964               	subwfb	(??_aCaptGetResult+2)& (0+255),w,b
 24383  00659A  6F6A               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 24384  00659C  516B               	movf	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24385  00659E  5965               	subwfb	(??_aCaptGetResult+3)& (0+255),w,b
 24386  0065A0  6F6B               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 24387                           
 24388                           ; BSR set to: 1
 24389                           ;aCapture.c: 200:                 *outVal = - (lclRaw/1);
 24390  0065A2  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24391  0065A8  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24392  0065AE  1F62               	comf	??_aCaptGetResult& (0+255),f,b
 24393  0065B0  1F63               	comf	(??_aCaptGetResult+1)& (0+255),f,b
 24394  0065B2  4B62               	infsnz	??_aCaptGetResult& (0+255),f,b
 24395  0065B4  2B63               	incf	(??_aCaptGetResult+1)& (0+255),f,b
 24396  0065B6  D039               	goto	L50
 24397  0065B8                     l17519:
 24398                           
 24399                           ; BSR set to: 1
 24400                           ;aCapture.c: 202:                 lclRaw = lclRaw - mainPSensCal;
 24401  0065B8  0060  F7D4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24402  0065BE  0060  F7D8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24403  0065C4  0E00               	movlw	0
 24404  0065C6  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24405  0065C8  0EFF               	movlw	255
 24406  0065CA  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24407  0065CC  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24408  0065CE  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24409  0065D0  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24410  0065D2  6F68               	movwf	aCaptGetResult@lclRaw& (0+255),b
 24411  0065D4  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24412  0065D6  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24413  0065D8  6F69               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 24414  0065DA  5164               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 24415  0065DC  596A               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24416  0065DE  6F6A               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 24417  0065E0  5165               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 24418  0065E2  596B               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24419  0065E4  6F6B               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 24420                           
 24421                           ; BSR set to: 1
 24422                           ;aCapture.c: 203:                 *outVal=(lclRaw/1);
 24423  0065E6  0060  F583  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 24424  0065EC  0060  F587  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 24425  0065F2  0060  F5A3  FFDE   	movff	aCaptGetResult@lclRaw,postinc2
 24426  0065F8  0060  F5A7  FFDD   	movff	aCaptGetResult@lclRaw+1,postdec2
 24427  0065FE                     l17523:
 24428                           
 24429                           ; BSR set to: 1
 24430                           ;aCapture.c: 205:             return 1;
 24431  0065FE  0E01               	movlw	1
 24432  006600  0012               	return	
 24433  006602                     l17527:
 24434                           
 24435                           ; BSR set to: 1
 24436                           ;aCapture.c: 207:             *outVal = (lclRaw - auxPSensCal)/1;
 24437  006602  0102               	movlb	2	; () banked
 24438  006604  51E6               	movf	_auxPSensCal& (0+255),w,b
 24439  006606  0101               	movlb	1	; () banked
 24440  006608  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24441  00660A  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24442  00660C  0102               	movlb	2	; () banked
 24443  00660E  51E7               	movf	(_auxPSensCal+1)& (0+255),w,b
 24444  006610  0101               	movlb	1	; () banked
 24445  006612  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24446  006614  6F63               	movwf	(??_aCaptGetResult+1)& (0+255),b
 24447  006616  D009               	goto	L50
 24448  006618                     l17533:
 24449                           
 24450                           ; BSR set to: 1
 24451                           ;aCapture.c: 210:             *outVal = lclRaw<<1;
 24452  006618  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24453  00661E  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24454  006624  90D8               	bcf	status,0,c
 24455  006626  3762               	rlcf	??_aCaptGetResult& (0+255),f,b
 24456  006628  3763               	rlcf	(??_aCaptGetResult+1)& (0+255),f,b
 24457  00662A                     L50:
 24458  00662A  0060  F583  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 24459  006630  0060  F587  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 24460  006636  0060  F58B  FFDE   	movff	??_aCaptGetResult,postinc2
 24461  00663C  0060  F58F  FFDD   	movff	??_aCaptGetResult+1,postdec2
 24462  006642  D7DD               	goto	l17523
 24463  006644                     l1996:
 24464                           
 24465                           ; BSR set to: 1
 24466                           ;aCapture.c: 214:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",104);
 24467  006644  94BA               	bcf	186,2,c	;volatile
 24468  006646  96BC               	bcf	188,3,c	;volatile
 24469  006648  96BA               	bcf	186,3,c	;volatile
 24470                           
 24471                           ; BSR set to: 1
 24472  00664A  0EB1               	movlw	low STR_28
 24473  00664C  6F46               	movwf	printf@fmt& (0+255),b
 24474  00664E  0EFF               	movlw	high STR_28
 24475  006650  6F47               	movwf	(printf@fmt+1)& (0+255),b
 24476  006652  0E00               	movlw	0
 24477  006654  6F49               	movwf	(?_printf+3)& (0+255),b
 24478  006656  0E68               	movlw	104
 24479  006658  6F48               	movwf	(?_printf+2)& (0+255),b
 24480  00665A  ECE9  F04E         	call	_printf	;wreg free
 24481                           
 24482                           ;aCapture.c: 215:     }
 24483  00665E  0012               	return	
 24484  006660                     l17541:
 24485                           
 24486                           ; BSR set to: 1
 24487  006660  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24488  006662  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24489  006664  6B63               	clrf	(??_aCaptGetResult+1)& (0+255),b
 24490                           
 24491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24492                           ; Switch size 1, requested type "simple"
 24493                           ; Number of cases is 1, Range of values is 0 to 0
 24494                           ; switch strategies available:
 24495                           ; Name         Instructions Cycles
 24496                           ; simple_byte            4     3 (average)
 24497                           ;	Chosen strategy is simple_byte
 24498  006666  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24499  006668  0A00               	xorlw	0	; case 0
 24500  00666A  A4D8               	btfss	status,2,c
 24501  00666C  D7EB               	goto	l1996
 24502                           
 24503                           ; BSR set to: 1
 24504                           ; Switch size 1, requested type "simple"
 24505                           ; Number of cases is 7, Range of values is 0 to 6
 24506                           ; switch strategies available:
 24507                           ; Name         Instructions Cycles
 24508                           ; simple_byte           22    12 (average)
 24509                           ;	Chosen strategy is simple_byte
 24510  00666E  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24511  006670  0A00               	xorlw	0	; case 0
 24512  006672  B4D8               	btfsc	status,2,c
 24513  006674  D76A               	goto	l1990
 24514  006676  0A01               	xorlw	1	; case 1
 24515  006678  B4D8               	btfsc	status,2,c
 24516  00667A  D7C3               	goto	l17527
 24517  00667C  0A03               	xorlw	3	; case 2
 24518  00667E  B4D8               	btfsc	status,2,c
 24519  006680  D7CB               	goto	l17533
 24520  006682  0A01               	xorlw	1	; case 3
 24521  006684  B4D8               	btfsc	status,2,c
 24522  006686  D761               	goto	l1990
 24523  006688  0A07               	xorlw	7	; case 4
 24524  00668A  B4D8               	btfsc	status,2,c
 24525  00668C  D75E               	goto	l1990
 24526  00668E  0A01               	xorlw	1	; case 5
 24527  006690  B4D8               	btfsc	status,2,c
 24528  006692  D75B               	goto	l1990
 24529  006694  0A03               	xorlw	3	; case 6
 24530  006696  B4D8               	btfsc	status,2,c
 24531  006698  D758               	goto	l1990
 24532  00669A  D7D4               	goto	l1996
 24533  00669C                     __end_of_aCaptGetResult:
 24534                           	opt callstack 0
 24535                           
 24536 ;; *************** function _MonitorErrorSet *****************
 24537 ;; Defined at:
 24538 ;;		line 20 in file "monComm.c"
 24539 ;; Parameters:    Size  Location     Type
 24540 ;;  flag            1    wreg     enum E16825
 24541 ;; Auto vars:     Size  Location     Type
 24542 ;;  flag            1   43[BANK0 ] enum E16825
 24543 ;; Return value:  Size  Location     Type
 24544 ;;                  1    wreg      void 
 24545 ;; Registers used:
 24546 ;;		wreg, status,2, status,0
 24547 ;; Tracked objects:
 24548 ;;		On entry : 3F/1
 24549 ;;		On exit  : 3F/1
 24550 ;;		Unchanged: 0/0
 24551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24556 ;;Total ram usage:        1 bytes
 24557 ;; Hardware stack levels used:    1
 24558 ;; Hardware stack levels required when called:   17
 24559 ;; This function calls:
 24560 ;;		Nothing
 24561 ;; This function is called by:
 24562 ;;		_main
 24563 ;;		_MonitorMsgForcedSend
 24564 ;; This function uses a non-reentrant model
 24565 ;;
 24566                           
 24567                           	psect	text94
 24568  00A308                     __ptext94:
 24569                           	opt callstack 0
 24570  00A308                     _MonitorErrorSet:
 24571                           	opt callstack 9
 24572                           
 24573                           ;incstack = 0
 24574                           ;MonitorErrorSet@flag stored from wreg
 24575  00A308  0100               	movlb	0	; () banked
 24576  00A30A  6F8B               	movwf	MonitorErrorSet@flag& (0+255),b
 24577                           
 24578                           ;monComm.c: 21:     ctrlErrorStatus = ctrlErrorStatus|flag;
 24579  00A30C  0101               	movlb	1	; () banked
 24580  00A30E  51CB               	movf	_ctrlErrorStatus& (0+255),w,b
 24581  00A310  0100               	movlb	0	; () banked
 24582  00A312  118B               	iorwf	MonitorErrorSet@flag& (0+255),w,b
 24583  00A314  0101               	movlb	1	; () banked
 24584  00A316  6FCB               	movwf	_ctrlErrorStatus& (0+255),b
 24585                           
 24586                           ; BSR set to: 1
 24587  00A318  0012               	return		;funcret
 24588  00A31A                     __end_of_MonitorErrorSet:
 24589                           	opt callstack 0
 24590                           
 24591 ;; *************** function _MonitorErrorClr *****************
 24592 ;; Defined at:
 24593 ;;		line 24 in file "monComm.c"
 24594 ;; Parameters:    Size  Location     Type
 24595 ;;  flag            1    wreg     enum E16825
 24596 ;; Auto vars:     Size  Location     Type
 24597 ;;  flag            1   43[BANK0 ] enum E16825
 24598 ;; Return value:  Size  Location     Type
 24599 ;;                  1    wreg      void 
 24600 ;; Registers used:
 24601 ;;		wreg, status,2, status,0
 24602 ;; Tracked objects:
 24603 ;;		On entry : 3C/1
 24604 ;;		On exit  : 3F/1
 24605 ;;		Unchanged: 0/0
 24606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24611 ;;Total ram usage:        1 bytes
 24612 ;; Hardware stack levels used:    1
 24613 ;; Hardware stack levels required when called:   17
 24614 ;; This function calls:
 24615 ;;		Nothing
 24616 ;; This function is called by:
 24617 ;;		_main
 24618 ;;		_MonitorMsgForcedSend
 24619 ;; This function uses a non-reentrant model
 24620 ;;
 24621                           
 24622                           	psect	text95
 24623  00A31A                     __ptext95:
 24624                           	opt callstack 0
 24625  00A31A                     _MonitorErrorClr:
 24626                           	opt callstack 9
 24627                           
 24628                           ; BSR set to: 1
 24629                           ;incstack = 0
 24630                           ;MonitorErrorClr@flag stored from wreg
 24631  00A31A  0100               	movlb	0	; () banked
 24632  00A31C  6F8B               	movwf	MonitorErrorClr@flag& (0+255),b
 24633                           
 24634                           ;monComm.c: 25:     ctrlErrorStatus = ctrlErrorStatus&(~flag);
 24635  00A31E  0100               	movlb	0	; () banked
 24636  00A320  518B               	movf	MonitorErrorClr@flag& (0+255),w,b
 24637  00A322  0AFF               	xorlw	255
 24638  00A324  0101               	movlb	1	; () banked
 24639  00A326  15CB               	andwf	_ctrlErrorStatus& (0+255),w,b
 24640  00A328  6FCB               	movwf	_ctrlErrorStatus& (0+255),b
 24641                           
 24642                           ; BSR set to: 1
 24643  00A32A  0012               	return		;funcret
 24644  00A32C                     __end_of_MonitorErrorClr:
 24645                           	opt callstack 0
 24646                           
 24647 ;; *************** function _I2C2_MasterOperation *****************
 24648 ;; Defined at:
 24649 ;;		line 254 in file "mcc_generated_files/i2c2_master.c"
 24650 ;; Parameters:    Size  Location     Type
 24651 ;;  read            1    wreg     _Bool 
 24652 ;; Auto vars:     Size  Location     Type
 24653 ;;  read            1  100[BANK1 ] _Bool 
 24654 ;;  returnValue     1  101[BANK1 ] enum E353
 24655 ;; Return value:  Size  Location     Type
 24656 ;;                  1    wreg      enum E353
 24657 ;; Registers used:
 24658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24659 ;; Tracked objects:
 24660 ;;		On entry : 3F/2
 24661 ;;		On exit  : 3F/1
 24662 ;;		Unchanged: 0/0
 24663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24665 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24667 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24668 ;;Total ram usage:        2 bytes
 24669 ;; Hardware stack levels used:    1
 24670 ;; Hardware stack levels required when called:   29
 24671 ;; This function calls:
 24672 ;;		_I2C2_DO_SEND_ADR_READ
 24673 ;;		_I2C2_DO_SEND_ADR_WRITE
 24674 ;;		_I2C2_MasterSetCounter
 24675 ;; This function is called by:
 24676 ;;		_MonitorMsgForcedSend
 24677 ;; This function uses a non-reentrant model
 24678 ;;
 24679                           
 24680                           	psect	text96
 24681  009464                     __ptext96:
 24682                           	opt callstack 0
 24683  009464                     _I2C2_MasterOperation:
 24684                           	opt callstack 0
 24685                           
 24686                           ; BSR set to: 1
 24687                           ;incstack = 0
 24688 ;; hardware stack exceeded
 24689                           ;I2C2_MasterOperation@read stored from wreg
 24690  009464  0101               	movlb	1	; () banked
 24691  009466  6F64               	movwf	I2C2_MasterOperation@read& (0+255),b
 24692                           
 24693                           ;mcc_generated_files/i2c2_master.c: 254: i2c2_error_t I2C2_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c2_master.c: 255: {;mcc_generated_files/i2c2_master.c: 256:     i2c
      +                          2_error_t returnValue = I2C2_BUSY;
 24694  009468  0E01               	movlw	1
 24695  00946A  0101               	movlb	1	; () banked
 24696  00946C  6F65               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 24697                           
 24698                           ; BSR set to: 1
 24699                           ;mcc_generated_files/i2c2_master.c: 257:     if(!I2C2_Status.busy)
 24700  00946E  0102               	movlb	2	; () banked
 24701  009470  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 24702  009472  D017               	goto	l17473
 24703                           
 24704                           ; BSR set to: 2
 24705                           ;mcc_generated_files/i2c2_master.c: 258:     {;mcc_generated_files/i2c2_master.c: 259:  
      +                                 I2C2_Status.busy = 1;
 24706  009474  8523               	bsf	(_I2C2_Status+35)& (0+255),2,b
 24707                           
 24708                           ; BSR set to: 2
 24709                           ;mcc_generated_files/i2c2_master.c: 260:         returnValue = I2C2_NOERR;
 24710  009476  0E00               	movlw	0
 24711  009478  0101               	movlb	1	; () banked
 24712  00947A  6F65               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 24713                           
 24714                           ; BSR set to: 1
 24715                           ;mcc_generated_files/i2c2_master.c: 261:         I2C2_MasterSetCounter(I2C2_Status.data_
      +                          length);
 24716  00947C  0102               	movlb	2	; () banked
 24717  00947E  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 24718  009480  EC5F  F052         	call	_I2C2_MasterSetCounter
 24719                           
 24720                           ;mcc_generated_files/i2c2_master.c: 263:         if(read)
 24721  009484  0101               	movlb	1	; () banked
 24722  009486  5164               	movf	I2C2_MasterOperation@read& (0+255),w,b
 24723  009488  B4D8               	btfsc	status,2,c
 24724  00948A  D006               	goto	l17469
 24725                           
 24726                           ; BSR set to: 1
 24727                           ;mcc_generated_files/i2c2_master.c: 264:         {;mcc_generated_files/i2c2_master.c: 26
      +                          5:             I2C2_Status.state = I2C2_RX;
 24728  00948C  0E04               	movlw	4
 24729  00948E  0102               	movlb	2	; () banked
 24730  009490  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 24731                           
 24732                           ; BSR set to: 2
 24733                           ;mcc_generated_files/i2c2_master.c: 266:             I2C2_DO_SEND_ADR_READ();
 24734  009492  EC74  F04F         	call	_I2C2_DO_SEND_ADR_READ	;wreg free
 24735                           
 24736                           ;mcc_generated_files/i2c2_master.c: 267:         }
 24737  009496  D005               	goto	l17473
 24738  009498                     l17469:
 24739                           
 24740                           ; BSR set to: 1
 24741                           ;mcc_generated_files/i2c2_master.c: 269:         {;mcc_generated_files/i2c2_master.c: 27
      +                          0:             I2C2_Status.state = I2C2_TX;
 24742  009498  0E03               	movlw	3
 24743  00949A  0102               	movlb	2	; () banked
 24744  00949C  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 24745                           
 24746                           ; BSR set to: 2
 24747                           ;mcc_generated_files/i2c2_master.c: 271:             I2C2_DO_SEND_ADR_WRITE();
 24748  00949E  ECE3  F050         	call	_I2C2_DO_SEND_ADR_WRITE	;wreg free
 24749  0094A2                     l17473:
 24750                           
 24751                           ;mcc_generated_files/i2c2_master.c: 274:     return returnValue;
 24752  0094A2  0101               	movlb	1	; () banked
 24753  0094A4  5165               	movf	I2C2_MasterOperation@returnValue& (0+255),w,b
 24754                           
 24755                           ; BSR set to: 1
 24756  0094A6  0012               	return		;funcret
 24757  0094A8                     __end_of_I2C2_MasterOperation:
 24758                           	opt callstack 0
 24759                           
 24760 ;; *************** function _I2C2_DO_SEND_ADR_WRITE *****************
 24761 ;; Defined at:
 24762 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 24763 ;; Parameters:    Size  Location     Type
 24764 ;;		None
 24765 ;; Auto vars:     Size  Location     Type
 24766 ;;		None
 24767 ;; Return value:  Size  Location     Type
 24768 ;;                  1    wreg      enum E16447
 24769 ;; Registers used:
 24770 ;;		wreg, status,2, status,0, cstack
 24771 ;; Tracked objects:
 24772 ;;		On entry : 3F/2
 24773 ;;		On exit  : 0/0
 24774 ;;		Unchanged: 0/0
 24775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24780 ;;Total ram usage:        0 bytes
 24781 ;; Hardware stack levels used:    1
 24782 ;; Hardware stack levels required when called:   18
 24783 ;; This function calls:
 24784 ;;		_I2C2_MasterSendTxData
 24785 ;; This function is called by:
 24786 ;;		_I2C2_MasterOperation
 24787 ;;		_I2C2_MasterFsm
 24788 ;; This function uses a non-reentrant model
 24789 ;;
 24790                           
 24791                           	psect	text97
 24792  00A1C6                     __ptext97:
 24793                           	opt callstack 0
 24794  00A1C6                     _I2C2_DO_SEND_ADR_WRITE:
 24795                           	opt callstack 0
 24796                           
 24797                           ; BSR set to: 1
 24798  0000                     
 24799                           ;Skip over the trampoline to the duplicate function for level 2
 24800  00A1C6  BED3               	btfsc	211,7,c
 24801  00A1C8  EF29  F051         	goto	i2_I2C2_DO_SEND_ADR_WRITE
 24802  00A1CC                     _I2C2_DO_SEND_ADR_WRITE$intlevel0:
 24803                           	opt callstack 7
 24804                           
 24805                           ; BSR set to: 2
 24806                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 24807                           
 24808                           ;incstack = 0
 24809  00A1CC  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 24810  00A1CE  0BFC               	andlw	-4
 24811  00A1D0  0902               	iorlw	2
 24812  00A1D2  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 24813                           
 24814                           ; BSR set to: 2
 24815                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 24816  00A1D4  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 24817  00A1D6  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 24818  00A1D8  EC59  F052         	call	_I2C2_MasterSendTxData
 24819                           
 24820                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 24821  00A1DC  0E03               	movlw	3
 24822  00A1DE  0012               	return		;funcret
 24823  00A1E0                     __end_of_I2C2_DO_SEND_ADR_WRITE:
 24824                           	opt callstack 0
 24825                           
 24826 ;; *************** function _I2C2_DO_SEND_ADR_READ *****************
 24827 ;; Defined at:
 24828 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 24829 ;; Parameters:    Size  Location     Type
 24830 ;;		None
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;		None
 24833 ;; Return value:  Size  Location     Type
 24834 ;;                  1    wreg      enum E16447
 24835 ;; Registers used:
 24836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24837 ;; Tracked objects:
 24838 ;;		On entry : 3F/2
 24839 ;;		On exit  : 0/0
 24840 ;;		Unchanged: 0/0
 24841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24846 ;;Total ram usage:        0 bytes
 24847 ;; Hardware stack levels used:    1
 24848 ;; Hardware stack levels required when called:   28
 24849 ;; This function calls:
 24850 ;;		_I2C2_DO_RX_EMPTY
 24851 ;;		_I2C2_MasterSendTxData
 24852 ;; This function is called by:
 24853 ;;		_I2C2_MasterOperation
 24854 ;;		_I2C2_MasterFsm
 24855 ;; This function uses a non-reentrant model
 24856 ;;
 24857                           
 24858                           	psect	text98
 24859  009EE8                     __ptext98:
 24860                           	opt callstack 0
 24861  009EE8                     _I2C2_DO_SEND_ADR_READ:
 24862                           	opt callstack 0
 24863                           
 24864                           ;Skip over the trampoline to the duplicate function for level 2
 24865  009EE8  BED3               	btfsc	211,7,c
 24866  009EEA  EF35  F050         	goto	i2_I2C2_DO_SEND_ADR_READ
 24867  009EEE                     _I2C2_DO_SEND_ADR_READ$intlevel0:
 24868                           	opt callstack 0
 24869                           
 24870                           ; BSR set to: 2
 24871                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 24872                           
 24873                           ;incstack = 0
 24874 ;; hardware stack exceeded
 24875  009EEE  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 24876  009EF0  0BFC               	andlw	-4
 24877  009EF2  0902               	iorlw	2
 24878  009EF4  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 24879                           
 24880                           ; BSR set to: 2
 24881                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 24882  009EF6  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 24883  009EF8  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 24884  009EFA  B4D8               	btfsc	status,2,c
 24885                           
 24886                           ; BSR set to: 2
 24887                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 24888  009EFC  ECC3  F043         	call	_I2C2_DO_RX_EMPTY	;wreg free
 24889                           
 24890                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 24891  009F00  80D8               	bsf	status,0,c
 24892  009F02  0102               	movlb	2	; () banked
 24893  009F04  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 24894  009F06  EC59  F052         	call	_I2C2_MasterSendTxData
 24895                           
 24896                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 24897  009F0A  0E04               	movlw	4
 24898  009F0C  0012               	return		;funcret
 24899  009F0E                     __end_of_I2C2_DO_SEND_ADR_READ:
 24900                           	opt callstack 0
 24901                           
 24902 ;; *************** function _I2C2_MasterSendTxData *****************
 24903 ;; Defined at:
 24904 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 24905 ;; Parameters:    Size  Location     Type
 24906 ;;  data            1    wreg     unsigned char 
 24907 ;; Auto vars:     Size  Location     Type
 24908 ;;  data            1   43[BANK0 ] unsigned char 
 24909 ;; Return value:  Size  Location     Type
 24910 ;;                  1    wreg      void 
 24911 ;; Registers used:
 24912 ;;		wreg
 24913 ;; Tracked objects:
 24914 ;;		On entry : 3F/2
 24915 ;;		On exit  : 0/0
 24916 ;;		Unchanged: 0/0
 24917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24919 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24921 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24922 ;;Total ram usage:        1 bytes
 24923 ;; Hardware stack levels used:    1
 24924 ;; Hardware stack levels required when called:   17
 24925 ;; This function calls:
 24926 ;;		Nothing
 24927 ;; This function is called by:
 24928 ;;		_I2C2_DO_SEND_ADR_READ
 24929 ;;		_I2C2_DO_SEND_ADR_WRITE
 24930 ;; This function uses a non-reentrant model
 24931 ;;
 24932                           
 24933                           	psect	text99
 24934  00A4B2                     __ptext99:
 24935                           	opt callstack 0
 24936  00A4B2                     _I2C2_MasterSendTxData:
 24937                           	opt callstack 7
 24938                           
 24939                           ;incstack = 0
 24940                           ;I2C2_MasterSendTxData@data stored from wreg
 24941  00A4B2  0100               	movlb	0	; () banked
 24942  00A4B4  6F8B               	movwf	I2C2_MasterSendTxData@data& (0+255),b
 24943                           
 24944                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 24945  00A4B6  0060  F22F  FD55   	movff	I2C2_MasterSendTxData@data,15701	;volatile
 24946  00A4BC  0012               	return		;funcret
 24947  00A4BE                     __end_of_I2C2_MasterSendTxData:
 24948                           	opt callstack 0
 24949                           
 24950 ;; *************** function _I2C2_DO_RX_EMPTY *****************
 24951 ;; Defined at:
 24952 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 24953 ;; Parameters:    Size  Location     Type
 24954 ;;		None
 24955 ;; Auto vars:     Size  Location     Type
 24956 ;;		None
 24957 ;; Return value:  Size  Location     Type
 24958 ;;                  1    wreg      enum E16447
 24959 ;; Registers used:
 24960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24961 ;; Tracked objects:
 24962 ;;		On entry : 3F/2
 24963 ;;		On exit  : 0/0
 24964 ;;		Unchanged: 0/0
 24965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24968 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24969 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24970 ;;Total ram usage:        2 bytes
 24971 ;; Hardware stack levels used:    1
 24972 ;; Hardware stack levels required when called:   27
 24973 ;; This function calls:
 24974 ;;		Absolute function
 24975 ;;		_I2C2_CallbackReturnReset
 24976 ;;		_I2C2_CallbackReturnStop
 24977 ;;		_I2C2_MasterDisableRestart
 24978 ;;		_I2C2_MasterEnableRestart
 24979 ;;		_I2C2_MasterSetCounter
 24980 ;;		_I2C2_NackCb
 24981 ;;		_rd1RegCompleteHandler
 24982 ;;		_rd2RegCompleteHandler
 24983 ;;		_rdBlkRegCompleteHandler
 24984 ;;		_wr1RegCompleteHandler
 24985 ;;		_wr2RegCompleteHandler
 24986 ;; This function is called by:
 24987 ;;		_I2C2_DO_SEND_ADR_READ
 24988 ;;		_I2C2_MasterFsm
 24989 ;; This function uses a non-reentrant model
 24990 ;;
 24991                           
 24992                           	psect	text100
 24993  008786                     __ptext100:
 24994                           	opt callstack 0
 24995  008786                     _I2C2_DO_RX_EMPTY:
 24996                           	opt callstack 0
 24997                           
 24998                           ;Skip over the trampoline to the duplicate function for level 2
 24999  008786  BED3               	btfsc	211,7,c
 25000  008788  EF42  F044         	goto	i2_I2C2_DO_RX_EMPTY
 25001  00878C                     _I2C2_DO_RX_EMPTY$intlevel0:
 25002                           	opt callstack 0
 25003                           
 25004                           ; BSR set to: 2
 25005                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 25006                           
 25007                           ;incstack = 0
 25008 ;; hardware stack exceeded
 25009  00878C  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 25010                           
 25011                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 25012  00878E  D016               	goto	l17227
 25013  008790                     l17199:
 25014                           
 25015                           ; BSR set to: 1
 25016                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 25017  008790  ECC1  F052         	call	_I2C2_MasterEnableRestart	;wreg free
 25018                           
 25019                           ; BSR set to: 61
 25020                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 25021  008794  0E08               	movlw	8
 25022  008796  0012               	return	
 25023  008798                     l17205:
 25024                           
 25025                           ; BSR set to: 1
 25026                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 25027  008798  ECC1  F052         	call	_I2C2_MasterEnableRestart	;wreg free
 25028                           
 25029                           ; BSR set to: 61
 25030                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 25031  00879C  0E07               	movlw	7
 25032  00879E  0012               	return	
 25033  0087A0                     l17211:
 25034                           
 25035                           ; BSR set to: 1
 25036                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 25037  0087A0  0102               	movlb	2	; () banked
 25038  0087A2  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 25039  0087A4  EC5F  F052         	call	_I2C2_MasterSetCounter
 25040                           
 25041                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 25042  0087A8  0E04               	movlw	4
 25043  0087AA  0012               	return	
 25044  0087AC                     l17217:
 25045                           
 25046                           ; BSR set to: 1
 25047                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 25048  0087AC  0E07               	movlw	7
 25049  0087AE  0102               	movlb	2	; () banked
 25050  0087B0  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 25051  0087B2  A4D8               	btfss	status,2,c
 25052                           
 25053                           ; BSR set to: 2
 25054                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 25055  0087B4  ECC4  F052         	call	_I2C2_MasterDisableRestart	;wreg free
 25056                           
 25057                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 25058  0087B8  0E0F               	movlw	15
 25059  0087BA  0012               	return	
 25060  0087BC                     l17227:
 25061                           
 25062                           ; BSR set to: 2
 25063  0087BC  0060  F830  F160   	movff	_I2C2_Status+12,rd1RegCompleteHandler@ptr
 25064  0087C2  0060  F834  F161   	movff	_I2C2_Status+13,rd1RegCompleteHandler@ptr+1
 25065  0087C8  D801               	call	u17748
 25066  0087CA  D009               	goto	u17749
 25067  0087CC                     u17748:
 25068  0087CC  0005               	push	
 25069  0087CE  6EFA               	movwf	pclath,c
 25070  0087D0  5100               	movf	_I2C2_Status& (0+255),w,b
 25071  0087D2  6EFD               	movwf	tosl,c
 25072  0087D4  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 25073  0087D6  6EFE               	movwf	tosh,c
 25074  0087D8  6AFF               	clrf	tosu,c
 25075  0087DA  50FA               	movf	pclath,w,c
 25076  0087DC  0012               	return		;indir
 25077  0087DE                     u17749:
 25078  0087DE  0101               	movlb	1	; () banked
 25079  0087E0  6F62               	movwf	??_I2C2_DO_RX_EMPTY& (0+255),b
 25080  0087E2  6B63               	clrf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),b
 25081                           
 25082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25083                           ; Switch size 1, requested type "simple"
 25084                           ; Number of cases is 1, Range of values is 0 to 0
 25085                           ; switch strategies available:
 25086                           ; Name         Instructions Cycles
 25087                           ; simple_byte            4     3 (average)
 25088                           ;	Chosen strategy is simple_byte
 25089  0087E4  5163               	movf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),w,b
 25090  0087E6  0A00               	xorlw	0	; case 0
 25091  0087E8  A4D8               	btfss	status,2,c
 25092  0087EA  D7E0               	goto	l17217
 25093                           
 25094                           ; BSR set to: 1
 25095                           ; Switch size 1, requested type "simple"
 25096                           ; Number of cases is 4, Range of values is 1 to 4
 25097                           ; switch strategies available:
 25098                           ; Name         Instructions Cycles
 25099                           ; simple_byte           13     7 (average)
 25100                           ;	Chosen strategy is simple_byte
 25101  0087EC  5162               	movf	??_I2C2_DO_RX_EMPTY& (0+255),w,b
 25102  0087EE  0A01               	xorlw	1	; case 1
 25103  0087F0  B4D8               	btfsc	status,2,c
 25104  0087F2  D7DC               	goto	l17217
 25105  0087F4  0A03               	xorlw	3	; case 2
 25106  0087F6  B4D8               	btfsc	status,2,c
 25107  0087F8  D7CF               	goto	l17205
 25108  0087FA  0A01               	xorlw	1	; case 3
 25109  0087FC  B4D8               	btfsc	status,2,c
 25110  0087FE  D7C8               	goto	l17199
 25111  008800  0A07               	xorlw	7	; case 4
 25112  008802  B4D8               	btfsc	status,2,c
 25113  008804  D7CD               	goto	l17211
 25114  008806  D7D2               	goto	l17217
 25115  008808                     __end_of_I2C2_DO_RX_EMPTY:
 25116                           	opt callstack 0
 25117                           
 25118 ;; *************** function _I2C2_NackCb *****************
 25119 ;; Defined at:
 25120 ;;		line 13 in file "i2c2_mux.c"
 25121 ;; Parameters:    Size  Location     Type
 25122 ;;  ptr             2   96[BANK1 ] PTR void 
 25123 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25124 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25125 ;; Auto vars:     Size  Location     Type
 25126 ;;		None
 25127 ;; Return value:  Size  Location     Type
 25128 ;;                  1    wreg      enum E16390
 25129 ;; Registers used:
 25130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25131 ;; Tracked objects:
 25132 ;;		On entry : 3F/2
 25133 ;;		On exit  : 3C/0
 25134 ;;		Unchanged: 0/0
 25135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25136 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25139 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25140 ;;Total ram usage:        2 bytes
 25141 ;; Hardware stack levels used:    1
 25142 ;; Hardware stack levels required when called:   26
 25143 ;; This function calls:
 25144 ;;		_I2C2_CallbackReturnStop
 25145 ;;		_printf
 25146 ;; This function is called by:
 25147 ;;		_I2C2_MOpen
 25148 ;;		_I2C2_DO_RX_EMPTY
 25149 ;;		i2_I2C2_DO_RX_EMPTY
 25150 ;;		_I2C2_DO_TX_EMPTY
 25151 ;;		_I2C2_DO_TX
 25152 ;;		_I2C2_DO_ADDRESS_NACK
 25153 ;;		_I2C2_DO_BUS_COLLISION
 25154 ;; This function uses a non-reentrant model
 25155 ;;
 25156                           
 25157                           	psect	text101
 25158  0096E6                     __ptext101:
 25159                           	opt callstack 0
 25160  0096E6                     _I2C2_NackCb:
 25161                           	opt callstack 0
 25162                           
 25163                           ;Skip over the trampoline to the duplicate function for level 2
 25164  0096E6  BED3               	btfsc	211,7,c
 25165  0096E8  EF58  F04D         	goto	i2_I2C2_NackCb
 25166  0096EC                     _I2C2_NackCb$intlevel0:
 25167                           	opt callstack 0
 25168                           
 25169                           ; BSR set to: 2
 25170                           ;i2c2_mux.c: 14:     printf ("I2C2 E\n");
 25171                           
 25172                           ;incstack = 0
 25173 ;; hardware stack exceeded
 25174  0096EC  0ECA               	movlw	low STR_61
 25175  0096EE  0101               	movlb	1	; () banked
 25176  0096F0  6F46               	movwf	printf@fmt& (0+255),b
 25177  0096F2  0EFF               	movlw	high STR_61
 25178  0096F4  6F47               	movwf	(printf@fmt+1)& (0+255),b
 25179  0096F6  ECE9  F04E         	call	_printf	;wreg free
 25180                           
 25181                           ; BSR set to: 2
 25182                           ;i2c2_mux.c: 15:     if (currentTrfAddr == 0x50) {
 25183  0096FA  0E50               	movlw	80
 25184  0096FC  0101               	movlb	1	; () banked
 25185  0096FE  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 25186  009700  A4D8               	btfss	status,2,c
 25187  009702  D003               	goto	l17161
 25188                           
 25189                           ; BSR set to: 1
 25190                           ;i2c2_mux.c: 16:         lastI2C2MAckResponse = 0;
 25191  009704  0E00               	movlw	0
 25192  009706  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 25193                           
 25194                           ;i2c2_mux.c: 17:     } else {
 25195  009708  D003               	goto	l17163
 25196  00970A                     l17161:
 25197                           
 25198                           ; BSR set to: 1
 25199                           ;i2c2_mux.c: 18:         lastI2C2LAckResponse = 0;
 25200  00970A  0E00               	movlw	0
 25201  00970C  0102               	movlb	2	; () banked
 25202  00970E  6F4D               	movwf	_lastI2C2LAckResponse& (0+255),b
 25203  009710                     l17163:
 25204                           
 25205                           ;i2c2_mux.c: 20:     return I2C2_CallbackReturnStop(((void*)0));
 25206  009710  0E00               	movlw	0
 25207  009712  0101               	movlb	1	; () banked
 25208  009714  6F60               	movwf	I2C2_CallbackReturnStop@funPtr& (0+255),b
 25209  009716  0E00               	movlw	0
 25210  009718  6F61               	movwf	(I2C2_CallbackReturnStop@funPtr+1)& (0+255),b
 25211  00971A  EC8D  F052         	call	_I2C2_CallbackReturnStop	;wreg free
 25212  00971E  0012               	return		;funcret
 25213  009720                     __end_of_I2C2_NackCb:
 25214                           	opt callstack 0
 25215                           
 25216 ;; *************** function _I2C2_CallbackReturnReset *****************
 25217 ;; Defined at:
 25218 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 25219 ;; Parameters:    Size  Location     Type
 25220 ;;  funPtr          2   96[BANK1 ] PTR void 
 25221 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25222 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25223 ;; Auto vars:     Size  Location     Type
 25224 ;;		None
 25225 ;; Return value:  Size  Location     Type
 25226 ;;                  1    wreg      enum E358
 25227 ;; Registers used:
 25228 ;;		wreg
 25229 ;; Tracked objects:
 25230 ;;		On entry : 3F/2
 25231 ;;		On exit  : 3F/2
 25232 ;;		Unchanged: 3F/0
 25233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25234 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25237 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25238 ;;Total ram usage:        2 bytes
 25239 ;; Hardware stack levels used:    1
 25240 ;; Hardware stack levels required when called:   17
 25241 ;; This function calls:
 25242 ;;		Nothing
 25243 ;; This function is called by:
 25244 ;;		_I2C2_Open
 25245 ;;		_I2C2_DO_RX_EMPTY
 25246 ;;		i2_I2C2_DO_RX_EMPTY
 25247 ;;		_I2C2_DO_TX_EMPTY
 25248 ;;		_I2C2_DO_TX
 25249 ;;		_I2C2_DO_ADDRESS_NACK
 25250 ;;		_I2C2_DO_BUS_COLLISION
 25251 ;; This function uses a non-reentrant model
 25252 ;;
 25253                           
 25254                           	psect	text102
 25255  00A510                     __ptext102:
 25256                           	opt callstack 0
 25257  00A510                     _I2C2_CallbackReturnReset:
 25258                           	opt callstack 0
 25259                           
 25260                           ;Skip over the trampoline to the duplicate function for level 2
 25261  00A510  BED3               	btfsc	211,7,c
 25262  00A512  EFF3  F052         	goto	i2_I2C2_CallbackReturnReset
 25263  00A516                     _I2C2_CallbackReturnReset$intlevel0:
 25264                           	opt callstack 6
 25265                           
 25266                           ; BSR set to: 2
 25267                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 25268                           
 25269                           ;incstack = 0
 25270  00A516  0E05               	movlw	5
 25271                           
 25272                           ; BSR set to: 2
 25273  00A518  0012               	return		;funcret
 25274  00A51A                     __end_of_I2C2_CallbackReturnReset:
 25275                           	opt callstack 0
 25276                           
 25277 ;; *************** function _I2C2_CallbackReturnStop *****************
 25278 ;; Defined at:
 25279 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 25280 ;; Parameters:    Size  Location     Type
 25281 ;;  funPtr          2   96[BANK1 ] PTR void 
 25282 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25283 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25284 ;; Auto vars:     Size  Location     Type
 25285 ;;		None
 25286 ;; Return value:  Size  Location     Type
 25287 ;;                  1    wreg      enum E358
 25288 ;; Registers used:
 25289 ;;		wreg
 25290 ;; Tracked objects:
 25291 ;;		On entry : 3C/2
 25292 ;;		On exit  : 3C/0
 25293 ;;		Unchanged: 3C/0
 25294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25295 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25298 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25299 ;;Total ram usage:        2 bytes
 25300 ;; Hardware stack levels used:    1
 25301 ;; Hardware stack levels required when called:   17
 25302 ;; This function calls:
 25303 ;;		Nothing
 25304 ;; This function is called by:
 25305 ;;		_I2C2_Open
 25306 ;;		_I2C2_SetCallback
 25307 ;;		_I2C2_NackCb
 25308 ;;		_I2C2_DO_RX_EMPTY
 25309 ;;		i2_I2C2_DO_RX_EMPTY
 25310 ;;		_I2C2_DO_TX_EMPTY
 25311 ;;		_I2C2_DO_TX
 25312 ;;		_I2C2_DO_ADDRESS_NACK
 25313 ;;		_I2C2_DO_BUS_COLLISION
 25314 ;; This function uses a non-reentrant model
 25315 ;;
 25316                           
 25317                           	psect	text103
 25318  00A51A                     __ptext103:
 25319                           	opt callstack 0
 25320  00A51A                     _I2C2_CallbackReturnStop:
 25321                           	opt callstack 0
 25322                           
 25323                           ; BSR set to: 2
 25324                           ;Skip over the trampoline to the duplicate function for level 2
 25325  00A51A  BED3               	btfsc	211,7,c
 25326  00A51C  EFF5  F052         	goto	i2_I2C2_CallbackReturnStop
 25327  00A520                     _I2C2_CallbackReturnStop$intlevel0:
 25328                           	opt callstack 5
 25329                           
 25330                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 25331                           
 25332                           ;incstack = 0
 25333  00A520  0E01               	movlw	1
 25334  00A522  0012               	return		;funcret
 25335  00A524                     __end_of_I2C2_CallbackReturnStop:
 25336                           	opt callstack 0
 25337                           
 25338 ;; *************** function _rdBlkRegCompleteHandler *****************
 25339 ;; Defined at:
 25340 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25341 ;; Parameters:    Size  Location     Type
 25342 ;;  ptr             2   96[BANK1 ] PTR void 
 25343 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25344 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25345 ;; Auto vars:     Size  Location     Type
 25346 ;;		None
 25347 ;; Return value:  Size  Location     Type
 25348 ;;                  1    wreg      enum E358
 25349 ;; Registers used:
 25350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25351 ;; Tracked objects:
 25352 ;;		On entry : 3F/2
 25353 ;;		On exit  : 3F/0
 25354 ;;		Unchanged: 0/0
 25355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25356 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25359 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25360 ;;Total ram usage:        2 bytes
 25361 ;; Hardware stack levels used:    1
 25362 ;; Hardware stack levels required when called:   19
 25363 ;; This function calls:
 25364 ;;		_I2C2_SetBuffer
 25365 ;;		_I2C2_SetDataCompleteCallback
 25366 ;; This function is called by:
 25367 ;;		_I2C2_DO_RX_EMPTY
 25368 ;;		i2_I2C2_DO_RX_EMPTY
 25369 ;;		_I2C2_DO_TX_EMPTY
 25370 ;;		_I2C2_DO_TX
 25371 ;;		_I2C2_DO_ADDRESS_NACK
 25372 ;;		_I2C2_DO_BUS_COLLISION
 25373 ;; This function uses a non-reentrant model
 25374 ;;
 25375                           
 25376                           	psect	text104
 25377  0090BA                     __ptext104:
 25378                           	opt callstack 0
 25379  0090BA                     _rdBlkRegCompleteHandler:
 25380                           	opt callstack 0
 25381                           
 25382                           ;Skip over the trampoline to the duplicate function for level 2
 25383  0090BA  BED3               	btfsc	211,7,c
 25384  0090BC  EF57  F049         	goto	i2_rdBlkRegCompleteHandler
 25385  0090C0                     _rdBlkRegCompleteHandler$intlevel0:
 25386                           	opt callstack 4
 25387                           
 25388                           ; BSR set to: 2
 25389                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 25390                           
 25391                           ;incstack = 0
 25392  0090C0  0101               	movlb	1	; () banked
 25393  0090C2  EE20 F002          	lfsr	2,2
 25394  0090C6  5160               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 25395  0090C8  26D9               	addwf	fsr2l,f,c
 25396  0090CA  5161               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
 25397  0090CC  22DA               	addwfc	fsr2h,f,c
 25398  0090CE  006F FF78  F08B    	movff	postinc2,I2C2_SetBuffer@buffer
 25399  0090D4  006F FF74  F08C    	movff	postdec2,I2C2_SetBuffer@buffer+1
 25400  0090DA  0060  F583  FFD9   	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 25401  0090E0  0060  F587  FFDA   	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 25402  0090E6  006F FF78  F08D    	movff	postinc2,I2C2_SetBuffer@bufferSize
 25403  0090EC  006F FF74  F08E    	movff	postdec2,I2C2_SetBuffer@bufferSize+1
 25404  0090F2  ECE0  F04F         	call	_I2C2_SetBuffer	;wreg free
 25405                           
 25406                           ; BSR set to: 2
 25407                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25408  0090F6  0E00               	movlw	0
 25409  0090F8  0100               	movlb	0	; () banked
 25410  0090FA  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25411  0090FC  0E00               	movlw	0
 25412  0090FE  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25413  009100  0E00               	movlw	0
 25414  009102  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25415  009104  0E00               	movlw	0
 25416  009106  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25417  009108  EC67  F050         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25418                           
 25419                           ; BSR set to: 0
 25420                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 25421  00910C  0E02               	movlw	2
 25422                           
 25423                           ; BSR set to: 0
 25424  00910E  0012               	return		;funcret
 25425  009110                     __end_of_rdBlkRegCompleteHandler:
 25426                           	opt callstack 0
 25427                           
 25428 ;; *************** function _wr1RegCompleteHandler *****************
 25429 ;; Defined at:
 25430 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;  ptr             2   96[BANK1 ] PTR void 
 25433 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25434 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25435 ;; Auto vars:     Size  Location     Type
 25436 ;;		None
 25437 ;; Return value:  Size  Location     Type
 25438 ;;                  1    wreg      enum E358
 25439 ;; Registers used:
 25440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25441 ;; Tracked objects:
 25442 ;;		On entry : 3F/2
 25443 ;;		On exit  : 3F/0
 25444 ;;		Unchanged: 0/0
 25445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25446 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25449 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25450 ;;Total ram usage:        2 bytes
 25451 ;; Hardware stack levels used:    1
 25452 ;; Hardware stack levels required when called:   19
 25453 ;; This function calls:
 25454 ;;		_I2C2_SetBuffer
 25455 ;;		_I2C2_SetDataCompleteCallback
 25456 ;; This function is called by:
 25457 ;;		_I2C2_DO_RX_EMPTY
 25458 ;;		i2_I2C2_DO_RX_EMPTY
 25459 ;;		_I2C2_DO_TX_EMPTY
 25460 ;;		_I2C2_DO_TX
 25461 ;;		_I2C2_DO_ADDRESS_NACK
 25462 ;;		_I2C2_DO_BUS_COLLISION
 25463 ;; This function uses a non-reentrant model
 25464 ;;
 25465                           
 25466                           	psect	text105
 25467  009720                     __ptext105:
 25468                           	opt callstack 0
 25469  009720                     _wr1RegCompleteHandler:
 25470                           	opt callstack 0
 25471                           
 25472                           ; BSR set to: 0
 25473                           ;Skip over the trampoline to the duplicate function for level 2
 25474  009720  BED3               	btfsc	211,7,c
 25475  009722  EFBA  F04D         	goto	i2_wr1RegCompleteHandler
 25476  009726                     _wr1RegCompleteHandler$intlevel0:
 25477                           	opt callstack 4
 25478                           
 25479                           ; BSR set to: 2
 25480                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 25481                           
 25482                           ;incstack = 0
 25483  009726  0060  F580  F08B   	movff	wr1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25484  00972C  0060  F584  F08C   	movff	wr1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25485  009732  0E00               	movlw	0
 25486  009734  0100               	movlb	0	; () banked
 25487  009736  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25488  009738  0E01               	movlw	1
 25489  00973A  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25490  00973C  ECE0  F04F         	call	_I2C2_SetBuffer	;wreg free
 25491                           
 25492                           ; BSR set to: 2
 25493                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25494  009740  0E00               	movlw	0
 25495  009742  0100               	movlb	0	; () banked
 25496  009744  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25497  009746  0E00               	movlw	0
 25498  009748  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25499  00974A  0E00               	movlw	0
 25500  00974C  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25501  00974E  0E00               	movlw	0
 25502  009750  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25503  009752  EC67  F050         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25504                           
 25505                           ; BSR set to: 0
 25506                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 25507  009756  0E04               	movlw	4
 25508                           
 25509                           ; BSR set to: 0
 25510  009758  0012               	return		;funcret
 25511  00975A                     __end_of_wr1RegCompleteHandler:
 25512                           	opt callstack 0
 25513                           
 25514 ;; *************** function _rd2RegCompleteHandler *****************
 25515 ;; Defined at:
 25516 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25517 ;; Parameters:    Size  Location     Type
 25518 ;;  ptr             2   96[BANK1 ] PTR void 
 25519 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25520 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25521 ;; Auto vars:     Size  Location     Type
 25522 ;;		None
 25523 ;; Return value:  Size  Location     Type
 25524 ;;                  1    wreg      enum E358
 25525 ;; Registers used:
 25526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25527 ;; Tracked objects:
 25528 ;;		On entry : 3F/2
 25529 ;;		On exit  : 3F/0
 25530 ;;		Unchanged: 0/0
 25531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25532 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25535 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25536 ;;Total ram usage:        2 bytes
 25537 ;; Hardware stack levels used:    1
 25538 ;; Hardware stack levels required when called:   19
 25539 ;; This function calls:
 25540 ;;		_I2C2_SetBuffer
 25541 ;;		_I2C2_SetDataCompleteCallback
 25542 ;; This function is called by:
 25543 ;;		_I2C2_DO_RX_EMPTY
 25544 ;;		i2_I2C2_DO_RX_EMPTY
 25545 ;;		_I2C2_DO_TX_EMPTY
 25546 ;;		_I2C2_DO_TX
 25547 ;;		_I2C2_DO_ADDRESS_NACK
 25548 ;;		_I2C2_DO_BUS_COLLISION
 25549 ;; This function uses a non-reentrant model
 25550 ;;
 25551                           
 25552                           	psect	text106
 25553  00975A                     __ptext106:
 25554                           	opt callstack 0
 25555  00975A                     _rd2RegCompleteHandler:
 25556                           	opt callstack 0
 25557                           
 25558                           ; BSR set to: 0
 25559                           ;Skip over the trampoline to the duplicate function for level 2
 25560  00975A  BED3               	btfsc	211,7,c
 25561  00975C  EFD2  F04D         	goto	i2_rd2RegCompleteHandler
 25562  009760                     _rd2RegCompleteHandler$intlevel0:
 25563                           	opt callstack 4
 25564                           
 25565                           ; BSR set to: 2
 25566                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 25567                           
 25568                           ;incstack = 0
 25569  009760  0060  F580  F08B   	movff	rd2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25570  009766  0060  F584  F08C   	movff	rd2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25571  00976C  0E00               	movlw	0
 25572  00976E  0100               	movlb	0	; () banked
 25573  009770  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25574  009772  0E02               	movlw	2
 25575  009774  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25576  009776  ECE0  F04F         	call	_I2C2_SetBuffer	;wreg free
 25577                           
 25578                           ; BSR set to: 2
 25579                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25580  00977A  0E00               	movlw	0
 25581  00977C  0100               	movlb	0	; () banked
 25582  00977E  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25583  009780  0E00               	movlw	0
 25584  009782  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25585  009784  0E00               	movlw	0
 25586  009786  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25587  009788  0E00               	movlw	0
 25588  00978A  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25589  00978C  EC67  F050         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25590                           
 25591                           ; BSR set to: 0
 25592                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 25593  009790  0E02               	movlw	2
 25594                           
 25595                           ; BSR set to: 0
 25596  009792  0012               	return		;funcret
 25597  009794                     __end_of_rd2RegCompleteHandler:
 25598                           	opt callstack 0
 25599                           
 25600 ;; *************** function _rd1RegCompleteHandler *****************
 25601 ;; Defined at:
 25602 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25603 ;; Parameters:    Size  Location     Type
 25604 ;;  ptr             2   96[BANK1 ] PTR void 
 25605 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25606 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25607 ;; Auto vars:     Size  Location     Type
 25608 ;;		None
 25609 ;; Return value:  Size  Location     Type
 25610 ;;                  1    wreg      enum E358
 25611 ;; Registers used:
 25612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25613 ;; Tracked objects:
 25614 ;;		On entry : 3F/2
 25615 ;;		On exit  : 3F/0
 25616 ;;		Unchanged: 0/0
 25617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25618 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25621 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25622 ;;Total ram usage:        2 bytes
 25623 ;; Hardware stack levels used:    1
 25624 ;; Hardware stack levels required when called:   19
 25625 ;; This function calls:
 25626 ;;		_I2C2_SetBuffer
 25627 ;;		_I2C2_SetDataCompleteCallback
 25628 ;; This function is called by:
 25629 ;;		_I2C2_DO_RX_EMPTY
 25630 ;;		i2_I2C2_DO_RX_EMPTY
 25631 ;;		_I2C2_DO_TX_EMPTY
 25632 ;;		_I2C2_DO_TX
 25633 ;;		_I2C2_DO_ADDRESS_NACK
 25634 ;;		_I2C2_DO_BUS_COLLISION
 25635 ;; This function uses a non-reentrant model
 25636 ;;
 25637                           
 25638                           	psect	text107
 25639  009794                     __ptext107:
 25640                           	opt callstack 0
 25641  009794                     _rd1RegCompleteHandler:
 25642                           	opt callstack 0
 25643                           
 25644                           ; BSR set to: 0
 25645                           ;Skip over the trampoline to the duplicate function for level 2
 25646  009794  BED3               	btfsc	211,7,c
 25647  009796  EFEA  F04D         	goto	i2_rd1RegCompleteHandler
 25648  00979A                     _rd1RegCompleteHandler$intlevel0:
 25649                           	opt callstack 4
 25650                           
 25651                           ; BSR set to: 2
 25652                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 25653                           
 25654                           ;incstack = 0
 25655  00979A  0060  F580  F08B   	movff	rd1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25656  0097A0  0060  F584  F08C   	movff	rd1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25657  0097A6  0E00               	movlw	0
 25658  0097A8  0100               	movlb	0	; () banked
 25659  0097AA  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25660  0097AC  0E01               	movlw	1
 25661  0097AE  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25662  0097B0  ECE0  F04F         	call	_I2C2_SetBuffer	;wreg free
 25663                           
 25664                           ; BSR set to: 2
 25665                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25666  0097B4  0E00               	movlw	0
 25667  0097B6  0100               	movlb	0	; () banked
 25668  0097B8  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25669  0097BA  0E00               	movlw	0
 25670  0097BC  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25671  0097BE  0E00               	movlw	0
 25672  0097C0  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25673  0097C2  0E00               	movlw	0
 25674  0097C4  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25675  0097C6  EC67  F050         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25676                           
 25677                           ; BSR set to: 0
 25678                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 25679  0097CA  0E02               	movlw	2
 25680                           
 25681                           ; BSR set to: 0
 25682  0097CC  0012               	return		;funcret
 25683  0097CE                     __end_of_rd1RegCompleteHandler:
 25684                           	opt callstack 0
 25685                           
 25686 ;; *************** function _wr2RegCompleteHandler *****************
 25687 ;; Defined at:
 25688 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25689 ;; Parameters:    Size  Location     Type
 25690 ;;  ptr             2   96[BANK1 ] PTR void 
 25691 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25692 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25693 ;; Auto vars:     Size  Location     Type
 25694 ;;		None
 25695 ;; Return value:  Size  Location     Type
 25696 ;;                  1    wreg      enum E358
 25697 ;; Registers used:
 25698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25699 ;; Tracked objects:
 25700 ;;		On entry : 3F/2
 25701 ;;		On exit  : 3F/0
 25702 ;;		Unchanged: 0/0
 25703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25704 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25707 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25708 ;;Total ram usage:        2 bytes
 25709 ;; Hardware stack levels used:    1
 25710 ;; Hardware stack levels required when called:   19
 25711 ;; This function calls:
 25712 ;;		_I2C2_SetBuffer
 25713 ;;		_I2C2_SetDataCompleteCallback
 25714 ;; This function is called by:
 25715 ;;		_I2C2_DO_RX_EMPTY
 25716 ;;		i2_I2C2_DO_RX_EMPTY
 25717 ;;		_I2C2_DO_TX_EMPTY
 25718 ;;		_I2C2_DO_TX
 25719 ;;		_I2C2_DO_ADDRESS_NACK
 25720 ;;		_I2C2_DO_BUS_COLLISION
 25721 ;; This function uses a non-reentrant model
 25722 ;;
 25723                           
 25724                           	psect	text108
 25725  0097CE                     __ptext108:
 25726                           	opt callstack 0
 25727  0097CE                     _wr2RegCompleteHandler:
 25728                           	opt callstack 0
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;Skip over the trampoline to the duplicate function for level 2
 25732  0097CE  BED3               	btfsc	211,7,c
 25733  0097D0  EF02  F04E         	goto	i2_wr2RegCompleteHandler
 25734  0097D4                     _wr2RegCompleteHandler$intlevel0:
 25735                           	opt callstack 4
 25736                           
 25737                           ; BSR set to: 2
 25738                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 25739                           
 25740                           ;incstack = 0
 25741  0097D4  0060  F580  F08B   	movff	wr2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25742  0097DA  0060  F584  F08C   	movff	wr2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25743  0097E0  0E00               	movlw	0
 25744  0097E2  0100               	movlb	0	; () banked
 25745  0097E4  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25746  0097E6  0E02               	movlw	2
 25747  0097E8  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25748  0097EA  ECE0  F04F         	call	_I2C2_SetBuffer	;wreg free
 25749                           
 25750                           ; BSR set to: 2
 25751                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25752  0097EE  0E00               	movlw	0
 25753  0097F0  0100               	movlb	0	; () banked
 25754  0097F2  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25755  0097F4  0E00               	movlw	0
 25756  0097F6  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25757  0097F8  0E00               	movlw	0
 25758  0097FA  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25759  0097FC  0E00               	movlw	0
 25760  0097FE  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25761  009800  EC67  F050         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25762                           
 25763                           ; BSR set to: 0
 25764                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 25765  009804  0E04               	movlw	4
 25766                           
 25767                           ; BSR set to: 0
 25768  009806  0012               	return		;funcret
 25769  009808                     __end_of_wr2RegCompleteHandler:
 25770                           	opt callstack 0
 25771                           
 25772 ;; *************** function _I2C2_SetDataCompleteCallback *****************
 25773 ;; Defined at:
 25774 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 25775 ;; Parameters:    Size  Location     Type
 25776 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 25777 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 25778 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 25779 ;;  ptr             2   50[BANK0 ] PTR void 
 25780 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25781 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25782 ;; Auto vars:     Size  Location     Type
 25783 ;;		None
 25784 ;; Return value:  Size  Location     Type
 25785 ;;                  1    wreg      void 
 25786 ;; Registers used:
 25787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25788 ;; Tracked objects:
 25789 ;;		On entry : 3F/0
 25790 ;;		On exit  : 3F/0
 25791 ;;		Unchanged: 0/0
 25792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25796 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25797 ;;Total ram usage:        4 bytes
 25798 ;; Hardware stack levels used:    1
 25799 ;; Hardware stack levels required when called:   18
 25800 ;; This function calls:
 25801 ;;		_I2C2_SetCallback
 25802 ;; This function is called by:
 25803 ;;		_rd1RegCompleteHandler
 25804 ;;		_rd2RegCompleteHandler
 25805 ;;		_wr1RegCompleteHandler
 25806 ;;		_wr2RegCompleteHandler
 25807 ;;		_rdBlkRegCompleteHandler
 25808 ;; This function uses a non-reentrant model
 25809 ;;
 25810                           
 25811                           	psect	text109
 25812  00A0CE                     __ptext109:
 25813                           	opt callstack 0
 25814  00A0CE                     _I2C2_SetDataCompleteCallback:
 25815                           	opt callstack 4
 25816                           
 25817                           ; BSR set to: 0
 25818                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 25819                           
 25820                           ; BSR set to: 0
 25821                           ;incstack = 0
 25822  00A0CE  0060  F240  F08B   	movff	I2C2_SetDataCompleteCallback@cb,I2C2_SetCallback@cb
 25823  00A0D4  0060  F244  F08C   	movff	I2C2_SetDataCompleteCallback@cb+1,I2C2_SetCallback@cb+1
 25824  00A0DA  0060  F248  F08D   	movff	I2C2_SetDataCompleteCallback@ptr,I2C2_SetCallback@ptr
 25825  00A0E0  0060  F24C  F08E   	movff	I2C2_SetDataCompleteCallback@ptr+1,I2C2_SetCallback@ptr+1
 25826  00A0E6  0E00               	movlw	0
 25827  00A0E8  EC7F  F044         	call	_I2C2_SetCallback
 25828                           
 25829                           ; BSR set to: 0
 25830  00A0EC  0012               	return		;funcret
 25831  00A0EE                     __end_of_I2C2_SetDataCompleteCallback:
 25832                           	opt callstack 0
 25833                           
 25834 ;; *************** function _I2C2_SetBuffer *****************
 25835 ;; Defined at:
 25836 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 25837 ;; Parameters:    Size  Location     Type
 25838 ;;  buffer          2   43[BANK0 ] PTR void 
 25839 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 25840 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 25841 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 25842 ;;  bufferSize      2   45[BANK0 ] unsigned int 
 25843 ;; Auto vars:     Size  Location     Type
 25844 ;;		None
 25845 ;; Return value:  Size  Location     Type
 25846 ;;                  1    wreg      void 
 25847 ;; Registers used:
 25848 ;;		wreg, status,2, status,0
 25849 ;; Tracked objects:
 25850 ;;		On entry : 3E/0
 25851 ;;		On exit  : 3F/2
 25852 ;;		Unchanged: 0/0
 25853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25854 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25857 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25858 ;;Total ram usage:        4 bytes
 25859 ;; Hardware stack levels used:    1
 25860 ;; Hardware stack levels required when called:   17
 25861 ;; This function calls:
 25862 ;;		Nothing
 25863 ;; This function is called by:
 25864 ;;		_rd1RegCompleteHandler
 25865 ;;		_rd2RegCompleteHandler
 25866 ;;		_wr1RegCompleteHandler
 25867 ;;		_wr2RegCompleteHandler
 25868 ;;		_rdBlkRegCompleteHandler
 25869 ;;		_MonitorMsgForcedSend
 25870 ;; This function uses a non-reentrant model
 25871 ;;
 25872                           
 25873                           	psect	text110
 25874  009FC0                     __ptext110:
 25875                           	opt callstack 0
 25876  009FC0                     _I2C2_SetBuffer:
 25877                           	opt callstack 9
 25878                           
 25879                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 25880                           
 25881                           ; BSR set to: 0
 25882                           ;incstack = 0
 25883  009FC0  0102               	movlb	2	; () banked
 25884  009FC2  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 25885  009FC4  0012               	return	
 25886                           
 25887                           ; BSR set to: 2
 25888                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 25889  009FC6  0060  F22C  F21D   	movff	I2C2_SetBuffer@buffer,_I2C2_Status+29
 25890  009FCC  0060  F230  F21E   	movff	I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 25891                           
 25892                           ; BSR set to: 2
 25893                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 25894  009FD2  0060  F234  F21F   	movff	I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 25895  009FD8  0060  F238  F220   	movff	I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 25896                           
 25897                           ; BSR set to: 2
 25898                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 25899  009FDE  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 25900                           
 25901                           ; BSR set to: 2
 25902  009FE0  0012               	return		;funcret
 25903  009FE2                     __end_of_I2C2_SetBuffer:
 25904                           	opt callstack 0
 25905                           
 25906 ;; *************** function _printf *****************
 25907 ;; Defined at:
 25908 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 25909 ;; Parameters:    Size  Location     Type
 25910 ;;  fmt             2   70[BANK1 ] PTR const unsigned char 
 25911 ;;		 -> STR_104(10), STR_101(10), STR_100(8), STR_97(10), 
 25912 ;;		 -> STR_96(8), STR_93(10), STR_92(6), STR_90(7), 
 25913 ;;		 -> STR_85(27), STR_84(9), STR_82(10), STR_72(10), 
 25914 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 25915 ;;		 -> STR_65(38), STR_63(9), STR_62(9), STR_61(8), 
 25916 ;;		 -> STR_34(9), STR_33(9), STR_32(9), STR_31(9), 
 25917 ;;		 -> STR_30(9), STR_29(9), STR_28(9), STR_27(49), 
 25918 ;;		 -> STR_26(20), STR_25(36), STR_24(27), STR_23(20), 
 25919 ;;		 -> STR_22(28), STR_21(5), STR_19(16), STR_18(14), 
 25920 ;;		 -> STR_17(33), STR_16(20), STR_15(74), STR_14(40), 
 25921 ;;		 -> STR_13(47), STR_12(7), STR_11(7), STR_10(55), 
 25922 ;;		 -> STR_4(20), STR_3(11), STR_1(27), 
 25923 ;; Auto vars:     Size  Location     Type
 25924 ;;  ap              2   94[BANK1 ] PTR void [1]
 25925 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25926 ;;  ret             2    0        int 
 25927 ;; Return value:  Size  Location     Type
 25928 ;;                  2   70[BANK1 ] int 
 25929 ;; Registers used:
 25930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25931 ;; Tracked objects:
 25932 ;;		On entry : 3E/0
 25933 ;;		On exit  : 3F/2
 25934 ;;		Unchanged: 0/0
 25935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25936 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25937 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25939 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25940 ;;Total ram usage:       26 bytes
 25941 ;; Hardware stack levels used:    1
 25942 ;; Hardware stack levels required when called:   25
 25943 ;; This function calls:
 25944 ;;		_vfprintf
 25945 ;; This function is called by:
 25946 ;;		_inspOSMeasure
 25947 ;;		_CtrlPowerOff
 25948 ;;		_main
 25949 ;;		_adcGetCh
 25950 ;;		_aCaptureOffSet
 25951 ;;		_aCaptureOffGet
 25952 ;;		_aCaptRstFlt
 25953 ;;		_aCaptGetResult
 25954 ;;		_MenuMng
 25955 ;;		_I2C2_NackCb
 25956 ;;		_pressureSensorChk
 25957 ;;		_flowChk
 25958 ;;		_SelfTest
 25959 ;; This function uses a non-reentrant model
 25960 ;;
 25961                           
 25962                           	psect	text111
 25963  009DD2                     __ptext111:
 25964                           	opt callstack 0
 25965  009DD2                     _printf:
 25966                           	opt callstack 5
 25967                           
 25968                           ; BSR set to: 2
 25969                           ;incstack = 0
 25970  009DD2  0E48               	movlw	low (?_printf+2)
 25971  009DD4  0101               	movlb	1	; () banked
 25972  009DD6  6F5E               	movwf	printf@ap& (0+255),b
 25973  009DD8  0E01               	movlw	high (?_printf+2)
 25974  009DDA  6F5F               	movwf	(printf@ap+1)& (0+255),b
 25975                           
 25976                           ; BSR set to: 1
 25977  009DDC  0E00               	movlw	0
 25978  009DDE  6F40               	movwf	vfprintf@fp& (0+255),b
 25979  009DE0  0E00               	movlw	0
 25980  009DE2  6F41               	movwf	(vfprintf@fp+1)& (0+255),b
 25981  009DE4  0060  F518  F142   	movff	printf@fmt,vfprintf@fmt
 25982  009DEA  0060  F51C  F143   	movff	printf@fmt+1,vfprintf@fmt+1
 25983  009DF0  0E5E               	movlw	low printf@ap
 25984  009DF2  6F44               	movwf	vfprintf@ap& (0+255),b
 25985  009DF4  0E01               	movlw	high printf@ap
 25986  009DF6  6F45               	movwf	(vfprintf@ap+1)& (0+255),b
 25987  009DF8  EC65  F045         	call	_vfprintf	;wreg free
 25988                           
 25989                           ; BSR set to: 2
 25990  009DFC  0012               	return		;funcret
 25991  009DFE                     __end_of_printf:
 25992                           	opt callstack 0
 25993                           
 25994 ;; *************** function _vfprintf *****************
 25995 ;; Defined at:
 25996 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 25997 ;; Parameters:    Size  Location     Type
 25998 ;;  fp              2   64[BANK1 ] PTR struct _IO_FILE
 25999 ;;		 -> sprintf@f(6), NULL(0), 
 26000 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 26001 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 26002 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 26003 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 26004 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 26005 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 26006 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 26007 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 26008 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 26009 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 26010 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 26011 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 26012 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 26013 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 26014 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 26015 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 26016 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 26017 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 26018 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 26019 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 26020 ;;		 -> STR_1(27), 
 26021 ;;  ap              2   68[BANK1 ] PTR PTR void 
 26022 ;;		 -> printf@ap(2), sprintf@ap(2), 
 26023 ;; Auto vars:     Size  Location     Type
 26024 ;;  cfmt            2   77[BANK0 ] PTR unsigned char 
 26025 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 26026 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 26027 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 26028 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 26029 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 26030 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 26031 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 26032 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 26033 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 26034 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 26035 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 26036 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 26037 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 26038 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 26039 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 26040 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 26041 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 26042 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 26043 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 26044 ;;		 -> STR_1(27), 
 26045 ;; Return value:  Size  Location     Type
 26046 ;;                  2   64[BANK1 ] int 
 26047 ;; Registers used:
 26048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26049 ;; Tracked objects:
 26050 ;;		On entry : 3F/1
 26051 ;;		On exit  : 3F/2
 26052 ;;		Unchanged: 0/0
 26053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26054 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26057 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26058 ;;Total ram usage:        8 bytes
 26059 ;; Hardware stack levels used:    1
 26060 ;; Hardware stack levels required when called:   24
 26061 ;; This function calls:
 26062 ;;		_vfpfcnvrt
 26063 ;; This function is called by:
 26064 ;;		_sprintf
 26065 ;;		_printf
 26066 ;; This function uses a non-reentrant model
 26067 ;;
 26068                           
 26069                           	psect	text112
 26070  008ACA                     __ptext112:
 26071                           	opt callstack 0
 26072  008ACA                     _vfprintf:
 26073                           	opt callstack 5
 26074                           
 26075                           ; BSR set to: 1
 26076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 26077                           
 26078                           ; BSR set to: 2
 26079                           ;incstack = 0
 26080  008ACA  0060  F508  F0AD   	movff	vfprintf@fmt,vfprintf@cfmt
 26081  008AD0  0060  F50C  F0AE   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 26082                           
 26083                           ; BSR set to: 1
 26084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 26085  008AD6  0E00               	movlw	0
 26086  008AD8  0102               	movlb	2	; () banked
 26087  008ADA  6F33               	movwf	(_nout+1)& (0+255),b
 26088  008ADC  0E00               	movlw	0
 26089  008ADE  6F32               	movwf	_nout& (0+255),b
 26090                           
 26091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 26092  008AE0  D018               	goto	l16963
 26093  008AE2                     l16961:
 26094                           
 26095                           ; BSR set to: 2
 26096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 26097  008AE2  0060  F500  F0A8   	movff	vfprintf@fp,vfpfcnvrt@fp
 26098  008AE8  0060  F504  F0A9   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 26099  008AEE  0EAD               	movlw	low vfprintf@cfmt
 26100  008AF0  0100               	movlb	0	; () banked
 26101  008AF2  6FAA               	movwf	vfpfcnvrt@fmt& (0+255),b
 26102  008AF4  0060  F510  F0AB   	movff	vfprintf@ap,vfpfcnvrt@ap
 26103  008AFA  0060  F514  F0AC   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 26104  008B00  ECB7  F022         	call	_vfpfcnvrt	;wreg free
 26105  008B04  51A8               	movf	?_vfpfcnvrt& (0+255),w,b
 26106  008B06  0102               	movlb	2	; () banked
 26107  008B08  2732               	addwf	_nout& (0+255),f,b
 26108  008B0A  0100               	movlb	0	; () banked
 26109  008B0C  51A9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 26110  008B0E  0102               	movlb	2	; () banked
 26111  008B10  2333               	addwfc	(_nout+1)& (0+255),f,b
 26112  008B12                     l16963:
 26113                           
 26114                           ; BSR set to: 2
 26115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 26116  008B12  0060  F2B7  FFF6   	movff	vfprintf@cfmt,tblptrl
 26117  008B18  0060  F2BB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 26118  008B1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26119  008B1E  6AF8               	clrf	tblptru,c
 26120  008B20                     	endif
 26121  008B20                     	if	0	;tblptru may be non-zero
 26122  008B20                     	endif
 26123  008B20  0008               	tblrd		*
 26124  008B22  50F5               	movf	tablat,w,c
 26125  008B24  0900               	iorlw	0
 26126  008B26  A4D8               	btfss	status,2,c
 26127  008B28  D7DC               	goto	l16961
 26128                           
 26129                           ; BSR set to: 2
 26130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 26131  008B2A  0060  F8C8  F140   	movff	_nout,?_vfprintf
 26132  008B30  0060  F8CC  F141   	movff	_nout+1,?_vfprintf+1
 26133                           
 26134                           ; BSR set to: 2
 26135  008B36  0012               	return		;funcret
 26136  008B38                     __end_of_vfprintf:
 26137                           	opt callstack 0
 26138                           
 26139 ;; *************** function _vfpfcnvrt *****************
 26140 ;; Defined at:
 26141 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 26142 ;; Parameters:    Size  Location     Type
 26143 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
 26144 ;;		 -> sprintf@f(6), NULL(0), 
 26145 ;;  fmt             1   74[BANK0 ] PTR PTR unsigned char 
 26146 ;;		 -> vfprintf@cfmt(2), 
 26147 ;;  ap              2   75[BANK0 ] PTR PTR void 
 26148 ;;		 -> printf@ap(2), sprintf@ap(2), 
 26149 ;; Auto vars:     Size  Location     Type
 26150 ;;  llu             8   51[BANK1 ] unsigned long long 
 26151 ;;  ll              8   43[BANK1 ] long long 
 26152 ;;  f               4    0        long long 
 26153 ;;  vp              3    0        PTR void 
 26154 ;;  ct              3    0        unsigned char [3]
 26155 ;;  cp              3    0        PTR unsigned char 
 26156 ;;  done            2   60[BANK1 ] int 
 26157 ;;  i               2    0        int 
 26158 ;;  c               1   59[BANK1 ] unsigned char 
 26159 ;; Return value:  Size  Location     Type
 26160 ;;                  2   72[BANK0 ] int 
 26161 ;; Registers used:
 26162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26163 ;; Tracked objects:
 26164 ;;		On entry : 3F/0
 26165 ;;		On exit  : 3F/0
 26166 ;;		Unchanged: 0/0
 26167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26168 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26169 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26170 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26171 ;;      Totals:         0       5      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26172 ;;Total ram usage:       30 bytes
 26173 ;; Hardware stack levels used:    1
 26174 ;; Hardware stack levels required when called:   23
 26175 ;; This function calls:
 26176 ;;		_atoi
 26177 ;;		_dtoa
 26178 ;;		_fputc
 26179 ;;		_isdigit
 26180 ;;		_xtoa
 26181 ;; This function is called by:
 26182 ;;		_vfprintf
 26183 ;; This function uses a non-reentrant model
 26184 ;;
 26185                           
 26186                           	psect	text113
 26187  00456E                     __ptext113:
 26188                           	opt callstack 0
 26189  00456E                     _vfpfcnvrt:
 26190                           	opt callstack 5
 26191                           
 26192                           ; BSR set to: 0
 26193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 26194                           
 26195                           ; BSR set to: 2
 26196                           ;incstack = 0
 26197  00456E  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26198  004570  6ED9               	movwf	fsr2l,c
 26199  004572  6ADA               	clrf	fsr2h,c
 26200  004574  006F FF7B FFF6     	movff	postinc2,tblptrl
 26201  00457A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26202  004580                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26203  004580  6AF8               	clrf	tblptru,c
 26204  004582                     	endif
 26205  004582                     	if	0	;tblptru may be non-zero
 26206  004582                     	endif
 26207  004582  0008               	tblrd		*
 26208  004584  50F5               	movf	tablat,w,c
 26209  004586  0A25               	xorlw	37
 26210  004588  A4D8               	btfss	status,2,c
 26211  00458A  D1FF               	goto	l16767
 26212                           
 26213                           ; BSR set to: 0
 26214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 26215  00458C  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26216  00458E  6ED9               	movwf	fsr2l,c
 26217  004590  6ADA               	clrf	fsr2h,c
 26218  004592  2ADE               	incf	postinc2,f,c
 26219  004594  0E00               	movlw	0
 26220  004596  22DD               	addwfc	postdec2,f,c
 26221                           
 26222                           ; BSR set to: 0
 26223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 26224  004598  0E00               	movlw	0
 26225  00459A  6FB3               	movwf	(_width+1)& (0+255),b
 26226  00459C  0E00               	movlw	0
 26227  00459E  6FB2               	movwf	_width& (0+255),b
 26228  0045A0  C0B2  F0B6         	movff	_width,_flags
 26229  0045A4  C0B3  F0B7         	movff	_width+1,_flags+1
 26230                           
 26231                           ; BSR set to: 0
 26232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 26233  0045A8  69B4               	setf	_prec& (0+255),b
 26234  0045AA  69B5               	setf	(_prec+1)& (0+255),b
 26235                           
 26236                           ; BSR set to: 0
 26237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 26238  0045AC  0E00               	movlw	0
 26239  0045AE  0101               	movlb	1	; () banked
 26240  0045B0  6F3D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 26241  0045B2  0E00               	movlw	0
 26242  0045B4  D018               	goto	L51
 26243  0045B6                     l16679:
 26244                           
 26245                           ; BSR set to: 1
 26246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 26247  0045B6  0100               	movlb	0	; () banked
 26248  0045B8  81B6               	bsf	_flags& (0+255),0,b
 26249  0045BA                     l16681:
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 26253  0045BA  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26254  0045BC  6ED9               	movwf	fsr2l,c
 26255  0045BE  6ADA               	clrf	fsr2h,c
 26256  0045C0  2ADE               	incf	postinc2,f,c
 26257  0045C2  0E00               	movlw	0
 26258  0045C4  22DD               	addwfc	postdec2,f,c
 26259                           
 26260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 26261  0045C6  D036               	goto	l16705
 26262  0045C8                     l16683:
 26263                           
 26264                           ; BSR set to: 1
 26265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 26266  0045C8  0100               	movlb	0	; () banked
 26267  0045CA  83B6               	bsf	_flags& (0+255),1,b
 26268  0045CC  D7F6               	goto	l16681
 26269  0045CE                     l16687:
 26270                           
 26271                           ; BSR set to: 1
 26272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 26273  0045CE  0100               	movlb	0	; () banked
 26274  0045D0  85B6               	bsf	_flags& (0+255),2,b
 26275  0045D2  D7F3               	goto	l16681
 26276  0045D4                     l16691:
 26277                           
 26278                           ; BSR set to: 1
 26279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 26280  0045D4  0100               	movlb	0	; () banked
 26281  0045D6  87B6               	bsf	_flags& (0+255),3,b
 26282  0045D8  D7F0               	goto	l16681
 26283  0045DA                     l16695:
 26284                           
 26285                           ; BSR set to: 1
 26286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 26287  0045DA  0100               	movlb	0	; () banked
 26288  0045DC  89B6               	bsf	_flags& (0+255),4,b
 26289  0045DE  D7ED               	goto	l16681
 26290  0045E0                     l16699:
 26291                           
 26292                           ; BSR set to: 1
 26293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 26294  0045E0  0E00               	movlw	0
 26295  0045E2  6F3D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 26296  0045E4  0E01               	movlw	1
 26297  0045E6                     L51:
 26298  0045E6  6F3C               	movwf	vfpfcnvrt@done& (0+255),b
 26299                           
 26300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 26301  0045E8  D025               	goto	l16705
 26302  0045EA                     l16703:
 26303                           
 26304                           ; BSR set to: 1
 26305  0045EA  0100               	movlb	0	; () banked
 26306  0045EC  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26307  0045EE  6ED9               	movwf	fsr2l,c
 26308  0045F0  6ADA               	clrf	fsr2h,c
 26309  0045F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 26310  0045F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 26311  0045FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26312  0045FE  6AF8               	clrf	tblptru,c
 26313  004600                     	endif
 26314  004600                     	if	0	;tblptru may be non-zero
 26315  004600                     	endif
 26316  004600  0008               	tblrd		*
 26317  004602  50F5               	movf	tablat,w,c
 26318  004604  0101               	movlb	1	; () banked
 26319  004606  6F27               	movwf	??_vfpfcnvrt& (0+255),b
 26320  004608  6B28               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 26321                           
 26322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26323                           ; Switch size 1, requested type "simple"
 26324                           ; Number of cases is 1, Range of values is 0 to 0
 26325                           ; switch strategies available:
 26326                           ; Name         Instructions Cycles
 26327                           ; simple_byte            4     3 (average)
 26328                           ;	Chosen strategy is simple_byte
 26329  00460A  5128               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 26330  00460C  0A00               	xorlw	0	; case 0
 26331  00460E  A4D8               	btfss	status,2,c
 26332  004610  D7E7               	goto	l16699
 26333                           
 26334                           ; BSR set to: 1
 26335                           ; Switch size 1, requested type "simple"
 26336                           ; Number of cases is 5, Range of values is 32 to 48
 26337                           ; switch strategies available:
 26338                           ; Name         Instructions Cycles
 26339                           ; simple_byte           16     9 (average)
 26340                           ;	Chosen strategy is simple_byte
 26341  004612  5127               	movf	??_vfpfcnvrt& (0+255),w,b
 26342  004614  0A20               	xorlw	32	; case 32
 26343  004616  B4D8               	btfsc	status,2,c
 26344  004618  D7DD               	goto	l16691
 26345  00461A  0A03               	xorlw	3	; case 35
 26346  00461C  B4D8               	btfsc	status,2,c
 26347  00461E  D7DD               	goto	l16695
 26348  004620  0A08               	xorlw	8	; case 43
 26349  004622  B4D8               	btfsc	status,2,c
 26350  004624  D7D4               	goto	l16687
 26351  004626  0A06               	xorlw	6	; case 45
 26352  004628  B4D8               	btfsc	status,2,c
 26353  00462A  D7C5               	goto	l16679
 26354  00462C  0A1D               	xorlw	29	; case 48
 26355  00462E  B4D8               	btfsc	status,2,c
 26356  004630  D7CB               	goto	l16683
 26357  004632  D7D6               	goto	l16699
 26358  004634                     l16705:
 26359                           
 26360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 26361  004634  0101               	movlb	1	; () banked
 26362  004636  513C               	movf	vfpfcnvrt@done& (0+255),w,b
 26363  004638  113D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 26364  00463A  B4D8               	btfsc	status,2,c
 26365  00463C  D7D6               	goto	l16703
 26366                           
 26367                           ; BSR set to: 1
 26368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 26369  00463E  0100               	movlb	0	; () banked
 26370  004640  B1B6               	btfsc	_flags& (0+255),0,b
 26371                           
 26372                           ; BSR set to: 0
 26373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 26374  004642  93B6               	bcf	_flags& (0+255),1,b
 26375                           
 26376                           ; BSR set to: 0
 26377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 26378  004644  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26379  004646  6ED9               	movwf	fsr2l,c
 26380  004648  6ADA               	clrf	fsr2h,c
 26381  00464A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26382  004650  006F FF77 FFF7     	movff	postdec2,tblptrh
 26383  004656                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26384  004656  6AF8               	clrf	tblptru,c
 26385  004658                     	endif
 26386  004658                     	if	0	;tblptru may be non-zero
 26387  004658                     	endif
 26388  004658  0008               	tblrd		*
 26389  00465A  50F5               	movf	tablat,w,c
 26390  00465C  0A2A               	xorlw	42
 26391  00465E  A4D8               	btfss	status,2,c
 26392  004660  D02A               	goto	l16717
 26393                           
 26394                           ; BSR set to: 0
 26395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 26396  004662  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26397  004664  6ED9               	movwf	fsr2l,c
 26398  004666  6ADA               	clrf	fsr2h,c
 26399  004668  2ADE               	incf	postinc2,f,c
 26400  00466A  0E00               	movlw	0
 26401  00466C  22DD               	addwfc	postdec2,f,c
 26402                           
 26403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 26404  00466E  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26405  004674  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26406  00467A  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26407  004680  0E02               	movlw	2
 26408  004682  26DE               	addwf	postinc2,f,c
 26409  004684  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26410  00468A  0E00               	movlw	0
 26411  00468C  22DD               	addwfc	postdec2,f,c
 26412  00468E  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26413  004694  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26414  00469A  006F FF78  F0B2    	movff	postinc2,_width
 26415  0046A0  006F FF74  F0B3    	movff	postdec2,_width+1
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 26419  0046A6  AFB3               	btfss	(_width+1)& (0+255),7,b
 26420  0046A8  D047               	goto	u17090
 26421                           
 26422                           ; BSR set to: 0
 26423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 26424  0046AA  81B6               	bsf	_flags& (0+255),0,b
 26425                           
 26426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 26427  0046AC  6DB2               	negf	_width& (0+255),b
 26428  0046AE  1FB3               	comf	(_width+1)& (0+255),f,b
 26429  0046B0  B0D8               	btfsc	status,0,c
 26430  0046B2  2BB3               	incf	(_width+1)& (0+255),f,b
 26431  0046B4  D041               	goto	u17090
 26432  0046B6                     l16717:
 26433                           
 26434                           ; BSR set to: 0
 26435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 26436  0046B6  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26437  0046B8  6ED9               	movwf	fsr2l,c
 26438  0046BA  6ADA               	clrf	fsr2h,c
 26439  0046BC  006F FF78  F0A1    	movff	postinc2,atoi@s
 26440  0046C2  006F FF74  F0A2    	movff	postdec2,atoi@s+1
 26441  0046C8  EC9D  F036         	call	_atoi	;wreg free
 26442  0046CC  0060  F284  F0B2   	movff	?_atoi,_width
 26443  0046D2  0060  F288  F0B3   	movff	?_atoi+1,_width+1
 26444                           
 26445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26446  0046D8  D007               	goto	l16721
 26447  0046DA                     l16719:
 26448                           
 26449                           ; BSR set to: 1
 26450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 26451  0046DA  0100               	movlb	0	; () banked
 26452  0046DC  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26453  0046DE  6ED9               	movwf	fsr2l,c
 26454  0046E0  6ADA               	clrf	fsr2h,c
 26455  0046E2  2ADE               	incf	postinc2,f,c
 26456  0046E4  0E00               	movlw	0
 26457  0046E6  22DD               	addwfc	postdec2,f,c
 26458  0046E8                     l16721:
 26459  0046E8  0ED0               	movlw	208
 26460  0046EA  0101               	movlb	1	; () banked
 26461  0046EC  6F27               	movwf	??_vfpfcnvrt& (0+255),b
 26462  0046EE  0EFF               	movlw	255
 26463  0046F0  6F28               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 26464  0046F2  0100               	movlb	0	; () banked
 26465  0046F4  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26466  0046F6  6ED9               	movwf	fsr2l,c
 26467  0046F8  6ADA               	clrf	fsr2h,c
 26468  0046FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 26469  004700  006F FF77 FFF7     	movff	postdec2,tblptrh
 26470  004706                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26471  004706  6AF8               	clrf	tblptru,c
 26472  004708                     	endif
 26473  004708                     	if	0	;tblptru may be non-zero
 26474  004708                     	endif
 26475  004708  0008               	tblrd		*
 26476  00470A  50F5               	movf	tablat,w,c
 26477  00470C  0101               	movlb	1	; () banked
 26478  00470E  6F29               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 26479  004710  6B2A               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 26480  004712  5127               	movf	??_vfpfcnvrt& (0+255),w,b
 26481  004714  2729               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 26482  004716  5128               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 26483  004718  232A               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 26484  00471A  512A               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 26485  00471C  E106               	bnz	u17070
 26486  00471E  0E0A               	movlw	10
 26487  004720  5D29               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 26488  004722  B0D8               	btfsc	status,0,c
 26489  004724  D002               	goto	u17070
 26490  004726  0E01               	movlw	1
 26491  004728  D001               	goto	u17080
 26492  00472A                     u17070:
 26493  00472A  0E00               	movlw	0
 26494  00472C                     u17080:
 26495  00472C  6F3E               	movwf	_vfpfcnvrt$4917& (0+255),b
 26496  00472E  6B3F               	clrf	(_vfpfcnvrt$4917+1)& (0+255),b
 26497                           
 26498                           ; BSR set to: 1
 26499  004730  513E               	movf	_vfpfcnvrt$4917& (0+255),w,b
 26500  004732  113F               	iorwf	(_vfpfcnvrt$4917+1)& (0+255),w,b
 26501  004734  A4D8               	btfss	status,2,c
 26502  004736  D7D1               	goto	l16719
 26503  004738                     u17090:
 26504                           
 26505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 26506  004738  0100               	movlb	0	; () banked
 26507  00473A  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26508  00473C  6ED9               	movwf	fsr2l,c
 26509  00473E  6ADA               	clrf	fsr2h,c
 26510  004740  006F FF7B FFF6     	movff	postinc2,tblptrl
 26511  004746  006F FF77 FFF7     	movff	postdec2,tblptrh
 26512  00474C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26513  00474C  6AF8               	clrf	tblptru,c
 26514  00474E                     	endif
 26515  00474E                     	if	0	;tblptru may be non-zero
 26516  00474E                     	endif
 26517  00474E  0008               	tblrd		*
 26518  004750  50F5               	movf	tablat,w,c
 26519  004752  0A64               	xorlw	100
 26520  004754  B4D8               	btfsc	status,2,c
 26521  004756  D00F               	goto	u17110
 26522                           
 26523                           ; BSR set to: 0
 26524  004758  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26525  00475A  6ED9               	movwf	fsr2l,c
 26526  00475C  6ADA               	clrf	fsr2h,c
 26527  00475E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26528  004764  006F FF77 FFF7     	movff	postdec2,tblptrh
 26529  00476A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26530  00476A  6AF8               	clrf	tblptru,c
 26531  00476C                     	endif
 26532  00476C                     	if	0	;tblptru may be non-zero
 26533  00476C                     	endif
 26534  00476C  0008               	tblrd		*
 26535  00476E  50F5               	movf	tablat,w,c
 26536  004770  0A69               	xorlw	105
 26537  004772  A4D8               	btfss	status,2,c
 26538  004774  D053               	goto	l16737
 26539  004776                     u17110:
 26540                           
 26541                           ; BSR set to: 0
 26542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 26543  004776  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26544  004778  6ED9               	movwf	fsr2l,c
 26545  00477A  6ADA               	clrf	fsr2h,c
 26546  00477C  2ADE               	incf	postinc2,f,c
 26547  00477E  0E00               	movlw	0
 26548  004780  22DD               	addwfc	postdec2,f,c
 26549                           
 26550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 26551  004782  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26552  004788  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26553  00478E  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26554  004794  0E02               	movlw	2
 26555  004796  26DE               	addwf	postinc2,f,c
 26556  004798  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26557  00479E  0E00               	movlw	0
 26558  0047A0  22DD               	addwfc	postdec2,f,c
 26559  0047A2  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26560  0047A8  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26561  0047AE  006F FF78  F12B    	movff	postinc2,vfpfcnvrt@ll
 26562  0047B4  006F FF74  F12C    	movff	postdec2,vfpfcnvrt@ll+1
 26563  0047BA  0101               	movlb	1	; () banked
 26564  0047BC  0E00               	movlw	0
 26565  0047BE  BF2C               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 26566  0047C0  0EFF               	movlw	-1
 26567  0047C2  6F2D               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 26568  0047C4  6F2E               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 26569  0047C6  6F2F               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 26570  0047C8  6F30               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 26571  0047CA  6F31               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 26572  0047CC  6F32               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 26573                           
 26574                           ; BSR set to: 1
 26575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 26576  0047CE  0060  F2A0  F100   	movff	vfpfcnvrt@fp,dtoa@fp
 26577  0047D4  0060  F2A4  F101   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 26578  0047DA  0060  F4AC  F102   	movff	vfpfcnvrt@ll,dtoa@d
 26579  0047E0  0060  F4B0  F103   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 26580  0047E6  0060  F4B4  F104   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 26581  0047EC  0060  F4B8  F105   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 26582  0047F2  0060  F4BC  F106   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 26583  0047F8  0060  F4C0  F107   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 26584  0047FE  0060  F4C4  F108   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 26585  004804  0060  F4C8  F109   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 26586  00480A  ECF6  F02D         	call	_dtoa	;wreg free
 26587  00480E  0060  F400  F0A8   	movff	?_dtoa,?_vfpfcnvrt
 26588  004814  0060  F404  F0A9   	movff	?_dtoa+1,?_vfpfcnvrt+1
 26589  00481A  0012               	return	
 26590  00481C                     l16737:
 26591                           
 26592                           ; BSR set to: 0
 26593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 26594  00481C  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26595  00481E  6ED9               	movwf	fsr2l,c
 26596  004820  6ADA               	clrf	fsr2h,c
 26597  004822  006F FF7B FFF6     	movff	postinc2,tblptrl
 26598  004828  006F FF77 FFF7     	movff	postdec2,tblptrh
 26599  00482E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26600  00482E  6AF8               	clrf	tblptru,c
 26601  004830                     	endif
 26602  004830                     	if	0	;tblptru may be non-zero
 26603  004830                     	endif
 26604  004830  0008               	tblrd		*
 26605  004832  50F5               	movf	tablat,w,c
 26606  004834  0A78               	xorlw	120
 26607  004836  B4D8               	btfsc	status,2,c
 26608  004838  D00F               	goto	u17130
 26609                           
 26610                           ; BSR set to: 0
 26611  00483A  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26612  00483C  6ED9               	movwf	fsr2l,c
 26613  00483E  6ADA               	clrf	fsr2h,c
 26614  004840  006F FF7B FFF6     	movff	postinc2,tblptrl
 26615  004846  006F FF77 FFF7     	movff	postdec2,tblptrh
 26616  00484C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26617  00484C  6AF8               	clrf	tblptru,c
 26618  00484E                     	endif
 26619  00484E                     	if	0	;tblptru may be non-zero
 26620  00484E                     	endif
 26621  00484E  0008               	tblrd		*
 26622  004850  50F5               	movf	tablat,w,c
 26623  004852  0A58               	xorlw	88
 26624  004854  A4D8               	btfss	status,2,c
 26625  004856  D067               	goto	l16751
 26626  004858                     u17130:
 26627                           
 26628                           ; BSR set to: 0
 26629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 26630  004858  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26631  00485A  6ED9               	movwf	fsr2l,c
 26632  00485C  6ADA               	clrf	fsr2h,c
 26633  00485E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26634  004864  006F FF77 FFF7     	movff	postdec2,tblptrh
 26635  00486A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26636  00486A  6AF8               	clrf	tblptru,c
 26637  00486C                     	endif
 26638  00486C                     	if	0	;tblptru may be non-zero
 26639  00486C                     	endif
 26640  00486C  0008               	tblrd		*
 26641  00486E  006F FFD4  F13B    	movff	tablat,vfpfcnvrt@c
 26642                           
 26643                           ; BSR set to: 0
 26644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 26645  004874  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26646  004876  6ED9               	movwf	fsr2l,c
 26647  004878  6ADA               	clrf	fsr2h,c
 26648  00487A  2ADE               	incf	postinc2,f,c
 26649  00487C  0E00               	movlw	0
 26650  00487E  22DD               	addwfc	postdec2,f,c
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 26654  004880  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26655  004886  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26656  00488C  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26657  004892  0E02               	movlw	2
 26658  004894  26DE               	addwf	postinc2,f,c
 26659  004896  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26660  00489C  0E00               	movlw	0
 26661  00489E  22DD               	addwfc	postdec2,f,c
 26662  0048A0  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26663  0048A6  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26664  0048AC  006F FF78  F129    	movff	postinc2,??_vfpfcnvrt+2
 26665  0048B2  006F FF74  F12A    	movff	postdec2,??_vfpfcnvrt+3
 26666  0048B8  0060  F4A4  F133   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 26667  0048BE  0060  F4A8  F134   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 26668  0048C4  0101               	movlb	1	; () banked
 26669  0048C6  6B35               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 26670  0048C8  6B36               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 26671  0048CA  6B37               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 26672  0048CC  6B38               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 26673  0048CE  6B39               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 26674  0048D0  6B3A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 26675                           
 26676                           ; BSR set to: 1
 26677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 26678  0048D2  0060  F2A0  F100   	movff	vfpfcnvrt@fp,xtoa@fp
 26679  0048D8  0060  F2A4  F101   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 26680  0048DE  0060  F4CC  F102   	movff	vfpfcnvrt@llu,xtoa@d
 26681  0048E4  0060  F4D0  F103   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 26682  0048EA  0060  F4D4  F104   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 26683  0048F0  0060  F4D8  F105   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 26684  0048F6  0060  F4DC  F106   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 26685  0048FC  0060  F4E0  F107   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 26686  004902  0060  F4E4  F108   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 26687  004908  0060  F4E8  F109   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 26688  00490E  0060  F4EC  F10A   	movff	vfpfcnvrt@c,xtoa@x
 26689  004914  ECB7  F030         	call	_xtoa	;wreg free
 26690  004918  0060  F400  F0A8   	movff	?_xtoa,?_vfpfcnvrt
 26691  00491E  0060  F404  F0A9   	movff	?_xtoa+1,?_vfpfcnvrt+1
 26692  004924  0012               	return	
 26693  004926                     l16751:
 26694                           
 26695                           ; BSR set to: 0
 26696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 26697  004926  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26698  004928  6ED9               	movwf	fsr2l,c
 26699  00492A  6ADA               	clrf	fsr2h,c
 26700  00492C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26701  004932  006F FF77 FFF7     	movff	postdec2,tblptrh
 26702  004938                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26703  004938  6AF8               	clrf	tblptru,c
 26704  00493A                     	endif
 26705  00493A                     	if	0	;tblptru may be non-zero
 26706  00493A                     	endif
 26707  00493A  0008               	tblrd		*
 26708  00493C  50F5               	movf	tablat,w,c
 26709  00493E  0A25               	xorlw	37
 26710  004940  A4D8               	btfss	status,2,c
 26711  004942  D018               	goto	l16761
 26712                           
 26713                           ; BSR set to: 0
 26714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 26715  004944  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26716  004946  6ED9               	movwf	fsr2l,c
 26717  004948  6ADA               	clrf	fsr2h,c
 26718  00494A  2ADE               	incf	postinc2,f,c
 26719  00494C  0E00               	movlw	0
 26720  00494E  22DD               	addwfc	postdec2,f,c
 26721                           
 26722                           ; BSR set to: 0
 26723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 26724  004950  0E00               	movlw	0
 26725  004952  6F8E               	movwf	(fputc@c+1)& (0+255),b
 26726  004954  0E25               	movlw	37
 26727  004956  6F8D               	movwf	fputc@c& (0+255),b
 26728  004958  0060  F2A0  F08F   	movff	vfpfcnvrt@fp,fputc@fp
 26729  00495E  0060  F2A4  F090   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 26730  004964  EC7B  F040         	call	_fputc	;wreg free
 26731  004968                     l16757:
 26732                           
 26733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 26734  004968  0E00               	movlw	0
 26735  00496A  0100               	movlb	0	; () banked
 26736  00496C  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 26737  00496E  0E01               	movlw	1
 26738  004970  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
 26739  004972  0012               	return	
 26740  004974                     l16761:
 26741                           
 26742                           ; BSR set to: 0
 26743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 26744  004974  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26745  004976  6ED9               	movwf	fsr2l,c
 26746  004978  6ADA               	clrf	fsr2h,c
 26747  00497A  2ADE               	incf	postinc2,f,c
 26748  00497C  0E00               	movlw	0
 26749  00497E  22DD               	addwfc	postdec2,f,c
 26750                           
 26751                           ; BSR set to: 0
 26752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 26753  004980  0E00               	movlw	0
 26754  004982  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 26755  004984  0E00               	movlw	0
 26756  004986  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
 26757  004988  0012               	return	
 26758  00498A                     l16767:
 26759                           
 26760                           ; BSR set to: 0
 26761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 26762  00498A  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26763  00498C  6ED9               	movwf	fsr2l,c
 26764  00498E  6ADA               	clrf	fsr2h,c
 26765  004990  006F FF7B FFF6     	movff	postinc2,tblptrl
 26766  004996  006F FF77 FFF7     	movff	postdec2,tblptrh
 26767  00499C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26768  00499C  6AF8               	clrf	tblptru,c
 26769  00499E                     	endif
 26770  00499E                     	if	0	;tblptru may be non-zero
 26771  00499E                     	endif
 26772  00499E  0008               	tblrd		*
 26773  0049A0  50F5               	movf	tablat,w,c
 26774  0049A2  6F8D               	movwf	fputc@c& (0+255),b
 26775  0049A4  6B8E               	clrf	(fputc@c+1)& (0+255),b
 26776  0049A6  0060  F2A0  F08F   	movff	vfpfcnvrt@fp,fputc@fp
 26777  0049AC  0060  F2A4  F090   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 26778  0049B2  EC7B  F040         	call	_fputc	;wreg free
 26779                           
 26780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 26781  0049B6  0100               	movlb	0	; () banked
 26782  0049B8  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26783  0049BA  6ED9               	movwf	fsr2l,c
 26784  0049BC  6ADA               	clrf	fsr2h,c
 26785  0049BE  2ADE               	incf	postinc2,f,c
 26786  0049C0  0E00               	movlw	0
 26787  0049C2  22DD               	addwfc	postdec2,f,c
 26788  0049C4  D7D1               	goto	l16757
 26789  0049C6                     __end_of_vfpfcnvrt:
 26790                           	opt callstack 0
 26791                           
 26792 ;; *************** function _xtoa *****************
 26793 ;; Defined at:
 26794 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 26795 ;; Parameters:    Size  Location     Type
 26796 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 26797 ;;		 -> sprintf@f(6), NULL(0), 
 26798 ;;  d               8    2[BANK1 ] unsigned long long 
 26799 ;;  x               1   10[BANK1 ] unsigned char 
 26800 ;; Auto vars:     Size  Location     Type
 26801 ;;  n               8   27[BANK1 ] unsigned long long 
 26802 ;;  c               2   37[BANK1 ] int 
 26803 ;;  i               2   35[BANK1 ] int 
 26804 ;;  w               2   25[BANK1 ] int 
 26805 ;;  p               2   23[BANK1 ] int 
 26806 ;; Return value:  Size  Location     Type
 26807 ;;                  2    0[BANK1 ] int 
 26808 ;; Registers used:
 26809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26810 ;; Tracked objects:
 26811 ;;		On entry : 3F/1
 26812 ;;		On exit  : 3F/0
 26813 ;;		Unchanged: 0/0
 26814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26815 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26816 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26817 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26818 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26819 ;;Total ram usage:       39 bytes
 26820 ;; Hardware stack levels used:    1
 26821 ;; Hardware stack levels required when called:   22
 26822 ;; This function calls:
 26823 ;;		_isalpha
 26824 ;;		_isupper
 26825 ;;		_pad
 26826 ;;		_toupper
 26827 ;; This function is called by:
 26828 ;;		_vfpfcnvrt
 26829 ;; This function uses a non-reentrant model
 26830 ;;
 26831                           
 26832                           	psect	text114
 26833  00616E                     __ptext114:
 26834                           	opt callstack 0
 26835  00616E                     _xtoa:
 26836                           	opt callstack 5
 26837                           
 26838                           ; BSR set to: 1
 26839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 26840                           
 26841                           ; BSR set to: 0
 26842                           ;incstack = 0
 26843  00616E  0100               	movlb	0	; () banked
 26844  006170  AFB5               	btfss	(_prec+1)& (0+255),7,b
 26845                           
 26846                           ; BSR set to: 0
 26847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 26848  006172  93B6               	bcf	_flags& (0+255),1,b
 26849                           
 26850                           ; BSR set to: 0
 26851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 26852  006174  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 26853  006176  D005               	goto	u16500
 26854  006178  51B5               	movf	(_prec+1)& (0+255),w,b
 26855  00617A  E109               	bnz	l3110
 26856  00617C  05B4               	decf	_prec& (0+255),w,b
 26857  00617E  B0D8               	btfsc	status,0,c
 26858  006180  D006               	goto	l3110
 26859  006182                     u16500:
 26860                           
 26861                           ; BSR set to: 0
 26862  006182  0E00               	movlw	0
 26863  006184  0101               	movlb	1	; () banked
 26864  006186  6F18               	movwf	(xtoa@p+1)& (0+255),b
 26865  006188  0E01               	movlw	1
 26866  00618A  6F17               	movwf	xtoa@p& (0+255),b
 26867  00618C  D006               	goto	l3112
 26868  00618E                     l3110:
 26869                           
 26870                           ; BSR set to: 0
 26871  00618E  0060  F2D0  F117   	movff	_prec,xtoa@p
 26872  006194  0060  F2D4  F118   	movff	_prec+1,xtoa@p+1
 26873  00619A                     l3112:
 26874                           
 26875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 26876  00619A  0060  F2C8  F119   	movff	_width,xtoa@w
 26877  0061A0  0060  F2CC  F11A   	movff	_width+1,xtoa@w+1
 26878                           
 26879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 26880  0061A6  0100               	movlb	0	; () banked
 26881  0061A8  A9B6               	btfss	_flags& (0+255),4,b
 26882  0061AA  D005               	goto	l16425
 26883                           
 26884                           ; BSR set to: 0
 26885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 26886  0061AC  0101               	movlb	1	; () banked
 26887  0061AE  0EFE               	movlw	254
 26888  0061B0  2719               	addwf	xtoa@w& (0+255),f,b
 26889  0061B2  0EFF               	movlw	255
 26890  0061B4  231A               	addwfc	(xtoa@w+1)& (0+255),f,b
 26891  0061B6                     l16425:
 26892                           
 26893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 26894  0061B6  0060  F408  F11B   	movff	xtoa@d,xtoa@n
 26895  0061BC  0060  F40C  F11C   	movff	xtoa@d+1,xtoa@n+1
 26896  0061C2  0060  F410  F11D   	movff	xtoa@d+2,xtoa@n+2
 26897  0061C8  0060  F414  F11E   	movff	xtoa@d+3,xtoa@n+3
 26898  0061CE  0060  F418  F11F   	movff	xtoa@d+4,xtoa@n+4
 26899  0061D4  0060  F41C  F120   	movff	xtoa@d+5,xtoa@n+5
 26900  0061DA  0060  F420  F121   	movff	xtoa@d+6,xtoa@n+6
 26901  0061E0  0060  F424  F122   	movff	xtoa@d+7,xtoa@n+7
 26902                           
 26903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 26904  0061E6  0E00               	movlw	0
 26905  0061E8  0101               	movlb	1	; () banked
 26906  0061EA  6F24               	movwf	(xtoa@i+1)& (0+255),b
 26907  0061EC  0E1F               	movlw	31
 26908  0061EE  6F23               	movwf	xtoa@i& (0+255),b
 26909                           
 26910                           ; BSR set to: 1
 26911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 26912  0061F0  0E00               	movlw	0
 26913  0061F2  0102               	movlb	2	; () banked
 26914  0061F4  6F72               	movwf	(_dbuf+31)& (0+255),b
 26915                           
 26916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26917  0061F6  D0AA               	goto	l16461
 26918  0061F8                     l16431:
 26919                           
 26920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 26921  0061F8  0101               	movlb	1	; () banked
 26922  0061FA  0723               	decf	xtoa@i& (0+255),f,b
 26923  0061FC  A0D8               	btfss	status,0,c
 26924  0061FE  0724               	decf	(xtoa@i+1)& (0+255),f,b
 26925                           
 26926                           ; BSR set to: 1
 26927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 26928  006200  0E0F               	movlw	15
 26929  006202  151B               	andwf	xtoa@n& (0+255),w,b
 26930  006204  6F25               	movwf	xtoa@c& (0+255),b
 26931  006206  6B26               	clrf	(xtoa@c+1)& (0+255),b
 26932                           
 26933                           ; BSR set to: 1
 26934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 26935  006208  BF26               	btfsc	(xtoa@c+1)& (0+255),7,b
 26936  00620A  D008               	goto	l16439
 26937  00620C  5126               	movf	(xtoa@c+1)& (0+255),w,b
 26938  00620E  E104               	bnz	u16520
 26939  006210  0E0A               	movlw	10
 26940  006212  5D25               	subwf	xtoa@c& (0+255),w,b
 26941  006214  A0D8               	btfss	status,0,c
 26942  006216  D002               	goto	l16439
 26943  006218                     u16520:
 26944                           
 26945                           ; BSR set to: 1
 26946  006218  0E57               	movlw	87
 26947  00621A  D001               	goto	L52
 26948  00621C                     l16439:
 26949                           
 26950                           ; BSR set to: 1
 26951  00621C  0E30               	movlw	48
 26952  00621E                     L52:
 26953  00621E  2525               	addwf	xtoa@c& (0+255),w,b
 26954  006220  6F25               	movwf	xtoa@c& (0+255),b
 26955  006222  0E00               	movlw	0
 26956  006224  2126               	addwfc	(xtoa@c+1)& (0+255),w,b
 26957  006226  6F26               	movwf	(xtoa@c+1)& (0+255),b
 26958                           
 26959                           ; BSR set to: 1
 26960                           
 26961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 26962  006228  0EBF               	movlw	191
 26963  00622A  6F0B               	movwf	??_xtoa& (0+255),b
 26964  00622C  0EFF               	movlw	255
 26965  00622E  6F0C               	movwf	(??_xtoa+1)& (0+255),b
 26966  006230  510A               	movf	xtoa@x& (0+255),w,b
 26967  006232  6F0D               	movwf	(??_xtoa+2)& (0+255),b
 26968  006234  6B0E               	clrf	(??_xtoa+3)& (0+255),b
 26969  006236  510B               	movf	??_xtoa& (0+255),w,b
 26970  006238  270D               	addwf	(??_xtoa+2)& (0+255),f,b
 26971  00623A  510C               	movf	(??_xtoa+1)& (0+255),w,b
 26972  00623C  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
 26973  00623E  510E               	movf	(??_xtoa+3)& (0+255),w,b
 26974  006240  E106               	bnz	u16530
 26975  006242  0E1A               	movlw	26
 26976  006244  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
 26977  006246  B0D8               	btfsc	status,0,c
 26978  006248  D002               	goto	u16530
 26979  00624A  0E01               	movlw	1
 26980  00624C  D001               	goto	u16540
 26981  00624E                     u16530:
 26982  00624E  0E00               	movlw	0
 26983  006250                     u16540:
 26984  006250  6F13               	movwf	_xtoa$4902& (0+255),b
 26985  006252  6B14               	clrf	(_xtoa$4902+1)& (0+255),b
 26986                           
 26987                           ; BSR set to: 1
 26988  006254  5113               	movf	_xtoa$4902& (0+255),w,b
 26989  006256  1114               	iorwf	(_xtoa$4902+1)& (0+255),w,b
 26990  006258  B4D8               	btfsc	status,2,c
 26991  00625A  D02B               	goto	l16453
 26992                           
 26993                           ; BSR set to: 1
 26994  00625C  0E9F               	movlw	159
 26995  00625E  6F0B               	movwf	??_xtoa& (0+255),b
 26996  006260  0EFF               	movlw	255
 26997  006262  6F0C               	movwf	(??_xtoa+1)& (0+255),b
 26998  006264  0E20               	movlw	32
 26999  006266  1125               	iorwf	xtoa@c& (0+255),w,b
 27000  006268  6F0D               	movwf	(??_xtoa+2)& (0+255),b
 27001  00626A  0E00               	movlw	0
 27002  00626C  1126               	iorwf	(xtoa@c+1)& (0+255),w,b
 27003  00626E  6F0E               	movwf	(??_xtoa+3)& (0+255),b
 27004  006270  510B               	movf	??_xtoa& (0+255),w,b
 27005  006272  270D               	addwf	(??_xtoa+2)& (0+255),f,b
 27006  006274  510C               	movf	(??_xtoa+1)& (0+255),w,b
 27007  006276  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
 27008  006278  510E               	movf	(??_xtoa+3)& (0+255),w,b
 27009  00627A  E106               	bnz	u16560
 27010  00627C  0E1A               	movlw	26
 27011  00627E  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
 27012  006280  B0D8               	btfsc	status,0,c
 27013  006282  D002               	goto	u16560
 27014  006284  0E01               	movlw	1
 27015  006286  D001               	goto	u16570
 27016  006288                     u16560:
 27017  006288  0E00               	movlw	0
 27018  00628A                     u16570:
 27019  00628A  6F15               	movwf	_xtoa$4903& (0+255),b
 27020  00628C  6B16               	clrf	(_xtoa$4903+1)& (0+255),b
 27021                           
 27022                           ; BSR set to: 1
 27023  00628E  5115               	movf	_xtoa$4903& (0+255),w,b
 27024  006290  1116               	iorwf	(_xtoa$4903+1)& (0+255),w,b
 27025  006292  B4D8               	btfsc	status,2,c
 27026  006294  D00E               	goto	l16453
 27027                           
 27028                           ; BSR set to: 1
 27029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 27030  006296  0060  F494  F091   	movff	xtoa@c,toupper@c
 27031  00629C  0060  F498  F092   	movff	xtoa@c+1,toupper@c+1
 27032  0062A2  EC88  F048         	call	_toupper	;wreg free
 27033  0062A6  0060  F244  F125   	movff	?_toupper,xtoa@c
 27034  0062AC  0060  F248  F126   	movff	?_toupper+1,xtoa@c+1
 27035  0062B2                     l16453:
 27036                           
 27037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 27038  0062B2  0E53               	movlw	low _dbuf
 27039  0062B4  0101               	movlb	1	; () banked
 27040  0062B6  2523               	addwf	xtoa@i& (0+255),w,b
 27041  0062B8  6ED9               	movwf	fsr2l,c
 27042  0062BA  0E02               	movlw	high _dbuf
 27043  0062BC  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27044  0062BE  6EDA               	movwf	fsr2h,c
 27045  0062C0  0060  F497  FFDF   	movff	xtoa@c,indf2
 27046                           
 27047                           ; BSR set to: 1
 27048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 27049  0062C6  0717               	decf	xtoa@p& (0+255),f,b
 27050  0062C8  A0D8               	btfss	status,0,c
 27051  0062CA  0718               	decf	(xtoa@p+1)& (0+255),f,b
 27052                           
 27053                           ; BSR set to: 1
 27054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 27055  0062CC  0719               	decf	xtoa@w& (0+255),f,b
 27056  0062CE  A0D8               	btfss	status,0,c
 27057  0062D0  071A               	decf	(xtoa@w+1)& (0+255),f,b
 27058                           
 27059                           ; BSR set to: 1
 27060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 27061  0062D2  0060  F46C  F10B   	movff	xtoa@n,??_xtoa
 27062  0062D8  0060  F470  F10C   	movff	xtoa@n+1,??_xtoa+1
 27063  0062DE  0060  F474  F10D   	movff	xtoa@n+2,??_xtoa+2
 27064  0062E4  0060  F478  F10E   	movff	xtoa@n+3,??_xtoa+3
 27065  0062EA  0060  F47C  F10F   	movff	xtoa@n+4,??_xtoa+4
 27066  0062F0  0060  F480  F110   	movff	xtoa@n+5,??_xtoa+5
 27067  0062F6  0060  F484  F111   	movff	xtoa@n+6,??_xtoa+6
 27068  0062FC  0060  F488  F112   	movff	xtoa@n+7,??_xtoa+7
 27069  006302  0E05               	movlw	5
 27070  006304  D009               	goto	u16590
 27071  006306                     u16595:
 27072  006306  90D8               	bcf	status,0,c
 27073  006308  3312               	rrcf	(??_xtoa+7)& (0+255),f,b
 27074  00630A  3311               	rrcf	(??_xtoa+6)& (0+255),f,b
 27075  00630C  3310               	rrcf	(??_xtoa+5)& (0+255),f,b
 27076  00630E  330F               	rrcf	(??_xtoa+4)& (0+255),f,b
 27077  006310  330E               	rrcf	(??_xtoa+3)& (0+255),f,b
 27078  006312  330D               	rrcf	(??_xtoa+2)& (0+255),f,b
 27079  006314  330C               	rrcf	(??_xtoa+1)& (0+255),f,b
 27080  006316  330B               	rrcf	??_xtoa& (0+255),f,b
 27081  006318                     u16590:
 27082  006318  2EE8               	decfsz	wreg,f,c
 27083  00631A  D7F5               	goto	u16595
 27084  00631C  0060  F42C  F11B   	movff	??_xtoa,xtoa@n
 27085  006322  0060  F430  F11C   	movff	??_xtoa+1,xtoa@n+1
 27086  006328  0060  F434  F11D   	movff	??_xtoa+2,xtoa@n+2
 27087  00632E  0060  F438  F11E   	movff	??_xtoa+3,xtoa@n+3
 27088  006334  0060  F43C  F11F   	movff	??_xtoa+4,xtoa@n+4
 27089  00633A  0060  F440  F120   	movff	??_xtoa+5,xtoa@n+5
 27090  006340  0060  F444  F121   	movff	??_xtoa+6,xtoa@n+6
 27091  006346  0060  F448  F122   	movff	??_xtoa+7,xtoa@n+7
 27092  00634C                     l16461:
 27093                           
 27094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27095  00634C  0101               	movlb	1	; () banked
 27096  00634E  BF24               	btfsc	(xtoa@i+1)& (0+255),7,b
 27097  006350  D021               	goto	u16640
 27098  006352  5124               	movf	(xtoa@i+1)& (0+255),w,b
 27099  006354  E104               	bnz	u16600
 27100  006356  0E02               	movlw	2
 27101  006358  5D23               	subwf	xtoa@i& (0+255),w,b
 27102  00635A  A0D8               	btfss	status,0,c
 27103  00635C  D01B               	goto	u16640
 27104  00635E                     u16600:
 27105                           
 27106                           ; BSR set to: 1
 27107  00635E  511B               	movf	xtoa@n& (0+255),w,b
 27108  006360  111C               	iorwf	(xtoa@n+1)& (0+255),w,b
 27109  006362  111D               	iorwf	(xtoa@n+2)& (0+255),w,b
 27110  006364  111E               	iorwf	(xtoa@n+3)& (0+255),w,b
 27111  006366  111F               	iorwf	(xtoa@n+4)& (0+255),w,b
 27112  006368  1120               	iorwf	(xtoa@n+5)& (0+255),w,b
 27113  00636A  1121               	iorwf	(xtoa@n+6)& (0+255),w,b
 27114  00636C  1122               	iorwf	(xtoa@n+7)& (0+255),w,b
 27115  00636E  A4D8               	btfss	status,2,c
 27116  006370  D743               	goto	l16431
 27117                           
 27118                           ; BSR set to: 1
 27119  006372  BF18               	btfsc	(xtoa@p+1)& (0+255),7,b
 27120  006374  D005               	goto	u16620
 27121  006376  5118               	movf	(xtoa@p+1)& (0+255),w,b
 27122  006378  E102               	bnz	u16621
 27123  00637A  0517               	decf	xtoa@p& (0+255),w,b
 27124  00637C  B0D8               	btfsc	status,0,c
 27125  00637E                     u16621:
 27126  00637E  D73C               	goto	l16431
 27127  006380                     u16620:
 27128                           
 27129                           ; BSR set to: 1
 27130  006380  BF1A               	btfsc	(xtoa@w+1)& (0+255),7,b
 27131  006382  D008               	goto	u16640
 27132  006384  511A               	movf	(xtoa@w+1)& (0+255),w,b
 27133  006386  E103               	bnz	u16630
 27134  006388  0519               	decf	xtoa@w& (0+255),w,b
 27135  00638A  A0D8               	btfss	status,0,c
 27136  00638C  D003               	goto	u16640
 27137  00638E                     u16630:
 27138                           
 27139                           ; BSR set to: 1
 27140  00638E  0100               	movlb	0	; () banked
 27141  006390  B3B6               	btfsc	_flags& (0+255),1,b
 27142  006392  D732               	goto	l16431
 27143  006394                     u16640:
 27144                           
 27145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 27146  006394  0100               	movlb	0	; () banked
 27147  006396  A9B6               	btfss	_flags& (0+255),4,b
 27148  006398  D018               	goto	l16477
 27149                           
 27150                           ; BSR set to: 0
 27151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 27152  00639A  0101               	movlb	1	; () banked
 27153  00639C  0723               	decf	xtoa@i& (0+255),f,b
 27154  00639E  A0D8               	btfss	status,0,c
 27155  0063A0  0724               	decf	(xtoa@i+1)& (0+255),f,b
 27156                           
 27157                           ; BSR set to: 1
 27158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 27159  0063A2  0E53               	movlw	low _dbuf
 27160  0063A4  2523               	addwf	xtoa@i& (0+255),w,b
 27161  0063A6  6ED9               	movwf	fsr2l,c
 27162  0063A8  0E02               	movlw	high _dbuf
 27163  0063AA  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27164  0063AC  6EDA               	movwf	fsr2h,c
 27165  0063AE  0060  F42B  FFDF   	movff	xtoa@x,indf2
 27166                           
 27167                           ; BSR set to: 1
 27168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 27169  0063B4  0723               	decf	xtoa@i& (0+255),f,b
 27170  0063B6  A0D8               	btfss	status,0,c
 27171  0063B8  0724               	decf	(xtoa@i+1)& (0+255),f,b
 27172                           
 27173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 27174  0063BA  0E53               	movlw	low _dbuf
 27175  0063BC  2523               	addwf	xtoa@i& (0+255),w,b
 27176  0063BE  6ED9               	movwf	fsr2l,c
 27177  0063C0  0E02               	movlw	high _dbuf
 27178  0063C2  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27179  0063C4  6EDA               	movwf	fsr2h,c
 27180  0063C6  0E30               	movlw	48
 27181  0063C8  6EDF               	movwf	indf2,c
 27182  0063CA                     l16477:
 27183                           
 27184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 27185  0063CA  0060  F400  F09D   	movff	xtoa@fp,pad@fp
 27186  0063D0  0060  F404  F09E   	movff	xtoa@fp+1,pad@fp+1
 27187  0063D6  0E53               	movlw	low _dbuf
 27188  0063D8  0101               	movlb	1	; () banked
 27189  0063DA  2523               	addwf	xtoa@i& (0+255),w,b
 27190  0063DC  0100               	movlb	0	; () banked
 27191  0063DE  6F9F               	movwf	pad@buf& (0+255),b
 27192  0063E0  0E02               	movlw	high _dbuf
 27193  0063E2  0101               	movlb	1	; () banked
 27194  0063E4  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27195  0063E6  0100               	movlb	0	; () banked
 27196  0063E8  6FA0               	movwf	(pad@buf+1)& (0+255),b
 27197  0063EA  0060  F464  F0A1   	movff	xtoa@w,pad@p
 27198  0063F0  0060  F468  F0A2   	movff	xtoa@w+1,pad@p+1
 27199  0063F6  ECC9  F03F         	call	_pad	;wreg free
 27200  0063FA  0060  F274  F100   	movff	?_pad,?_xtoa
 27201  006400  0060  F278  F101   	movff	?_pad+1,?_xtoa+1
 27202                           
 27203                           ; BSR set to: 0
 27204  006406  0012               	return		;funcret
 27205  006408                     __end_of_xtoa:
 27206                           	opt callstack 0
 27207                           
 27208 ;; *************** function _toupper *****************
 27209 ;; Defined at:
 27210 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 27211 ;; Parameters:    Size  Location     Type
 27212 ;;  c               2   49[BANK0 ] int 
 27213 ;; Auto vars:     Size  Location     Type
 27214 ;;		None
 27215 ;; Return value:  Size  Location     Type
 27216 ;;                  2   49[BANK0 ] int 
 27217 ;; Registers used:
 27218 ;;		wreg, status,2, status,0
 27219 ;; Tracked objects:
 27220 ;;		On entry : 3F/1
 27221 ;;		On exit  : 3F/0
 27222 ;;		Unchanged: 0/0
 27223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27227 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27228 ;;Total ram usage:        8 bytes
 27229 ;; Hardware stack levels used:    1
 27230 ;; Hardware stack levels required when called:   18
 27231 ;; This function calls:
 27232 ;;		_islower
 27233 ;; This function is called by:
 27234 ;;		_xtoa
 27235 ;; This function uses a non-reentrant model
 27236 ;;
 27237                           
 27238                           	psect	text115
 27239  009110                     __ptext115:
 27240                           	opt callstack 0
 27241  009110                     _toupper:
 27242                           	opt callstack 8
 27243                           
 27244                           ; BSR set to: 1
 27245                           
 27246                           ; BSR set to: 0
 27247                           ;incstack = 0
 27248  009110  0E9F               	movlw	159
 27249  009112  0100               	movlb	0	; () banked
 27250  009114  6F93               	movwf	??_toupper& (0+255),b
 27251  009116  0EFF               	movlw	255
 27252  009118  6F94               	movwf	(??_toupper+1)& (0+255),b
 27253  00911A  0060  F244  F095   	movff	toupper@c,??_toupper+2
 27254  009120  0060  F248  F096   	movff	toupper@c+1,??_toupper+3
 27255  009126  5193               	movf	??_toupper& (0+255),w,b
 27256  009128  2795               	addwf	(??_toupper+2)& (0+255),f,b
 27257  00912A  5194               	movf	(??_toupper+1)& (0+255),w,b
 27258  00912C  2396               	addwfc	(??_toupper+3)& (0+255),f,b
 27259  00912E  5196               	movf	(??_toupper+3)& (0+255),w,b
 27260  009130  E106               	bnz	u16100
 27261  009132  0E1A               	movlw	26
 27262  009134  5D95               	subwf	(??_toupper+2)& (0+255),w,b
 27263  009136  B0D8               	btfsc	status,0,c
 27264  009138  D002               	goto	u16100
 27265  00913A  0E01               	movlw	1
 27266  00913C  D001               	goto	u16110
 27267  00913E                     u16100:
 27268  00913E  0E00               	movlw	0
 27269  009140                     u16110:
 27270  009140  6F97               	movwf	_toupper$5483& (0+255),b
 27271  009142  6B98               	clrf	(_toupper$5483+1)& (0+255),b
 27272                           
 27273                           ; BSR set to: 0
 27274  009144  5197               	movf	_toupper$5483& (0+255),w,b
 27275  009146  1198               	iorwf	(_toupper$5483+1)& (0+255),w,b
 27276  009148  B4D8               	btfsc	status,2,c
 27277  00914A  D005               	goto	l3957
 27278                           
 27279                           ; BSR set to: 0
 27280  00914C  0E5F               	movlw	95
 27281  00914E  1591               	andwf	toupper@c& (0+255),w,b
 27282  009150  6F91               	movwf	?_toupper& (0+255),b
 27283  009152  6B92               	clrf	(?_toupper+1)& (0+255),b
 27284  009154  0012               	return	
 27285  009156                     l3957:
 27286                           
 27287                           ; BSR set to: 0
 27288  009156  0060  F244  F091   	movff	toupper@c,?_toupper
 27289  00915C  0060  F248  F092   	movff	toupper@c+1,?_toupper+1
 27290                           
 27291                           ; BSR set to: 0
 27292  009162  0012               	return		;funcret
 27293  009164                     __end_of_toupper:
 27294                           	opt callstack 0
 27295                           
 27296 ;; *************** function _islower *****************
 27297 ;; Defined at:
 27298 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 27299 ;; Parameters:    Size  Location     Type
 27300 ;;  c               2   43[BANK0 ] int 
 27301 ;; Auto vars:     Size  Location     Type
 27302 ;;		None
 27303 ;; Return value:  Size  Location     Type
 27304 ;;                  2   43[BANK0 ] int 
 27305 ;; Registers used:
 27306 ;;		wreg, status,2, status,0
 27307 ;; Tracked objects:
 27308 ;;		On entry : 0/0
 27309 ;;		On exit  : 3F/0
 27310 ;;		Unchanged: 0/0
 27311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27314 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27315 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27316 ;;Total ram usage:        6 bytes
 27317 ;; Hardware stack levels used:    1
 27318 ;; Hardware stack levels required when called:   17
 27319 ;; This function calls:
 27320 ;;		Nothing
 27321 ;; This function is called by:
 27322 ;;		_toupper
 27323 ;; This function uses a non-reentrant model
 27324 ;;
 27325                           
 27326                           	psect	text116
 27327  00983E                     __ptext116:
 27328                           	opt callstack 0
 27329  00983E                     _islower:
 27330                           	opt callstack 8
 27331                           
 27332                           ; BSR set to: 0
 27333                           ;incstack = 0
 27334  00983E  0E9F               	movlw	159
 27335  009840  0100               	movlb	0	; () banked
 27336  009842  6F8D               	movwf	??_islower& (0+255),b
 27337  009844  0EFF               	movlw	255
 27338  009846  6F8E               	movwf	(??_islower+1)& (0+255),b
 27339  009848  0060  F22C  F08F   	movff	islower@c,??_islower+2
 27340  00984E  0060  F230  F090   	movff	islower@c+1,??_islower+3
 27341  009854  518D               	movf	??_islower& (0+255),w,b
 27342  009856  278F               	addwf	(??_islower+2)& (0+255),f,b
 27343  009858  518E               	movf	(??_islower+1)& (0+255),w,b
 27344  00985A  2390               	addwfc	(??_islower+3)& (0+255),f,b
 27345  00985C  5190               	movf	(??_islower+3)& (0+255),w,b
 27346  00985E  E106               	bnz	u15950
 27347  009860  0E1A               	movlw	26
 27348  009862  5D8F               	subwf	(??_islower+2)& (0+255),w,b
 27349  009864  B0D8               	btfsc	status,0,c
 27350  009866  D002               	goto	u15950
 27351  009868  0E01               	movlw	1
 27352  00986A  D001               	goto	u15960
 27353  00986C                     u15950:
 27354  00986C  0E00               	movlw	0
 27355  00986E                     u15960:
 27356  00986E  6F8B               	movwf	?_islower& (0+255),b
 27357  009870  6B8C               	clrf	(?_islower+1)& (0+255),b
 27358                           
 27359                           ; BSR set to: 0
 27360  009872  0012               	return		;funcret
 27361  009874                     __end_of_islower:
 27362                           	opt callstack 0
 27363                           
 27364 ;; *************** function _isupper *****************
 27365 ;; Defined at:
 27366 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 27367 ;; Parameters:    Size  Location     Type
 27368 ;;  c               2   43[BANK0 ] int 
 27369 ;; Auto vars:     Size  Location     Type
 27370 ;;		None
 27371 ;; Return value:  Size  Location     Type
 27372 ;;                  2   43[BANK0 ] int 
 27373 ;; Registers used:
 27374 ;;		wreg, status,2, status,0
 27375 ;; Tracked objects:
 27376 ;;		On entry : 0/0
 27377 ;;		On exit  : 3F/0
 27378 ;;		Unchanged: 0/0
 27379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27383 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27384 ;;Total ram usage:        6 bytes
 27385 ;; Hardware stack levels used:    1
 27386 ;; Hardware stack levels required when called:   17
 27387 ;; This function calls:
 27388 ;;		Nothing
 27389 ;; This function is called by:
 27390 ;;		_xtoa
 27391 ;; This function uses a non-reentrant model
 27392 ;;
 27393                           
 27394                           	psect	text117
 27395  009874                     __ptext117:
 27396                           	opt callstack 0
 27397  009874                     _isupper:
 27398                           	opt callstack 9
 27399                           
 27400                           ; BSR set to: 0
 27401                           ;incstack = 0
 27402  009874  0EBF               	movlw	191
 27403  009876  0100               	movlb	0	; () banked
 27404  009878  6F8D               	movwf	??_isupper& (0+255),b
 27405  00987A  0EFF               	movlw	255
 27406  00987C  6F8E               	movwf	(??_isupper+1)& (0+255),b
 27407  00987E  0060  F22C  F08F   	movff	isupper@c,??_isupper+2
 27408  009884  0060  F230  F090   	movff	isupper@c+1,??_isupper+3
 27409  00988A  518D               	movf	??_isupper& (0+255),w,b
 27410  00988C  278F               	addwf	(??_isupper+2)& (0+255),f,b
 27411  00988E  518E               	movf	(??_isupper+1)& (0+255),w,b
 27412  009890  2390               	addwfc	(??_isupper+3)& (0+255),f,b
 27413  009892  5190               	movf	(??_isupper+3)& (0+255),w,b
 27414  009894  E106               	bnz	u16060
 27415  009896  0E1A               	movlw	26
 27416  009898  5D8F               	subwf	(??_isupper+2)& (0+255),w,b
 27417  00989A  B0D8               	btfsc	status,0,c
 27418  00989C  D002               	goto	u16060
 27419  00989E  0E01               	movlw	1
 27420  0098A0  D001               	goto	u16070
 27421  0098A2                     u16060:
 27422  0098A2  0E00               	movlw	0
 27423  0098A4                     u16070:
 27424  0098A4  6F8B               	movwf	?_isupper& (0+255),b
 27425  0098A6  6B8C               	clrf	(?_isupper+1)& (0+255),b
 27426                           
 27427                           ; BSR set to: 0
 27428  0098A8  0012               	return		;funcret
 27429  0098AA                     __end_of_isupper:
 27430                           	opt callstack 0
 27431                           
 27432 ;; *************** function _isalpha *****************
 27433 ;; Defined at:
 27434 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 27435 ;; Parameters:    Size  Location     Type
 27436 ;;  c               2   43[BANK0 ] int 
 27437 ;; Auto vars:     Size  Location     Type
 27438 ;;		None
 27439 ;; Return value:  Size  Location     Type
 27440 ;;                  2   43[BANK0 ] int 
 27441 ;; Registers used:
 27442 ;;		wreg, status,2, status,0
 27443 ;; Tracked objects:
 27444 ;;		On entry : 0/0
 27445 ;;		On exit  : 3F/0
 27446 ;;		Unchanged: 0/0
 27447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27450 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27451 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27452 ;;Total ram usage:        6 bytes
 27453 ;; Hardware stack levels used:    1
 27454 ;; Hardware stack levels required when called:   17
 27455 ;; This function calls:
 27456 ;;		Nothing
 27457 ;; This function is called by:
 27458 ;;		_xtoa
 27459 ;; This function uses a non-reentrant model
 27460 ;;
 27461                           
 27462                           	psect	text118
 27463  0098AA                     __ptext118:
 27464                           	opt callstack 0
 27465  0098AA                     _isalpha:
 27466                           	opt callstack 9
 27467                           
 27468                           ; BSR set to: 0
 27469                           ;incstack = 0
 27470  0098AA  0E9F               	movlw	159
 27471  0098AC  0100               	movlb	0	; () banked
 27472  0098AE  6F8D               	movwf	??_isalpha& (0+255),b
 27473  0098B0  0EFF               	movlw	255
 27474  0098B2  6F8E               	movwf	(??_isalpha+1)& (0+255),b
 27475  0098B4  0E20               	movlw	32
 27476  0098B6  118B               	iorwf	isalpha@c& (0+255),w,b
 27477  0098B8  6F8F               	movwf	(??_isalpha+2)& (0+255),b
 27478  0098BA  0E00               	movlw	0
 27479  0098BC  118C               	iorwf	(isalpha@c+1)& (0+255),w,b
 27480  0098BE  6F90               	movwf	(??_isalpha+3)& (0+255),b
 27481  0098C0  518D               	movf	??_isalpha& (0+255),w,b
 27482  0098C2  278F               	addwf	(??_isalpha+2)& (0+255),f,b
 27483  0098C4  518E               	movf	(??_isalpha+1)& (0+255),w,b
 27484  0098C6  2390               	addwfc	(??_isalpha+3)& (0+255),f,b
 27485  0098C8  5190               	movf	(??_isalpha+3)& (0+255),w,b
 27486  0098CA  E106               	bnz	u16080
 27487  0098CC  0E1A               	movlw	26
 27488  0098CE  5D8F               	subwf	(??_isalpha+2)& (0+255),w,b
 27489  0098D0  B0D8               	btfsc	status,0,c
 27490  0098D2  D002               	goto	u16080
 27491  0098D4  0E01               	movlw	1
 27492  0098D6  D001               	goto	u16090
 27493  0098D8                     u16080:
 27494  0098D8  0E00               	movlw	0
 27495  0098DA                     u16090:
 27496  0098DA  6F8B               	movwf	?_isalpha& (0+255),b
 27497  0098DC  6B8C               	clrf	(?_isalpha+1)& (0+255),b
 27498                           
 27499                           ; BSR set to: 0
 27500  0098DE  0012               	return		;funcret
 27501  0098E0                     __end_of_isalpha:
 27502                           	opt callstack 0
 27503                           
 27504 ;; *************** function _dtoa *****************
 27505 ;; Defined at:
 27506 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 27507 ;; Parameters:    Size  Location     Type
 27508 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 27509 ;;		 -> sprintf@f(6), NULL(0), 
 27510 ;;  d               8    2[BANK1 ] long long 
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;  n               8   26[BANK1 ] long long 
 27513 ;;  i               2   34[BANK1 ] int 
 27514 ;;  s               2   24[BANK1 ] int 
 27515 ;;  w               2   22[BANK1 ] int 
 27516 ;;  p               2   20[BANK1 ] int 
 27517 ;; Return value:  Size  Location     Type
 27518 ;;                  2    0[BANK1 ] int 
 27519 ;; Registers used:
 27520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27521 ;; Tracked objects:
 27522 ;;		On entry : 3F/1
 27523 ;;		On exit  : 3F/0
 27524 ;;		Unchanged: 0/0
 27525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27526 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27527 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27528 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27529 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27530 ;;Total ram usage:       36 bytes
 27531 ;; Hardware stack levels used:    1
 27532 ;; Hardware stack levels required when called:   22
 27533 ;; This function calls:
 27534 ;;		___aodiv
 27535 ;;		___aomod
 27536 ;;		_abs
 27537 ;;		_pad
 27538 ;; This function is called by:
 27539 ;;		_vfpfcnvrt
 27540 ;; This function uses a non-reentrant model
 27541 ;;
 27542                           
 27543                           	psect	text119
 27544  005BEC                     __ptext119:
 27545                           	opt callstack 0
 27546  005BEC                     _dtoa:
 27547                           	opt callstack 5
 27548                           
 27549                           ; BSR set to: 1
 27550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 27551                           
 27552                           ; BSR set to: 0
 27553                           ;incstack = 0
 27554  005BEC  0060  F408  F11A   	movff	dtoa@d,dtoa@n
 27555  005BF2  0060  F40C  F11B   	movff	dtoa@d+1,dtoa@n+1
 27556  005BF8  0060  F410  F11C   	movff	dtoa@d+2,dtoa@n+2
 27557  005BFE  0060  F414  F11D   	movff	dtoa@d+3,dtoa@n+3
 27558  005C04  0060  F418  F11E   	movff	dtoa@d+4,dtoa@n+4
 27559  005C0A  0060  F41C  F11F   	movff	dtoa@d+5,dtoa@n+5
 27560  005C10  0060  F420  F120   	movff	dtoa@d+6,dtoa@n+6
 27561  005C16  0060  F424  F121   	movff	dtoa@d+7,dtoa@n+7
 27562                           
 27563                           ; BSR set to: 1
 27564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 27565  005C1C  AF21               	btfss	(dtoa@n+7)& (0+255),7,b
 27566  005C1E  D002               	goto	u16340
 27567  005C20  0E01               	movlw	1
 27568  005C22  D001               	goto	u16350
 27569  005C24                     u16340:
 27570  005C24  0E00               	movlw	0
 27571  005C26                     u16350:
 27572  005C26  6F18               	movwf	dtoa@s& (0+255),b
 27573  005C28  6B19               	clrf	(dtoa@s+1)& (0+255),b
 27574                           
 27575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 27576  005C2A  5118               	movf	dtoa@s& (0+255),w,b
 27577  005C2C  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27578  005C2E  B4D8               	btfsc	status,2,c
 27579  005C30  D010               	goto	l16359
 27580                           
 27581                           ; BSR set to: 1
 27582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 27583  005C32  1F21               	comf	(dtoa@n+7)& (0+255),f,b
 27584  005C34  1F20               	comf	(dtoa@n+6)& (0+255),f,b
 27585  005C36  1F1F               	comf	(dtoa@n+5)& (0+255),f,b
 27586  005C38  1F1E               	comf	(dtoa@n+4)& (0+255),f,b
 27587  005C3A  1F1D               	comf	(dtoa@n+3)& (0+255),f,b
 27588  005C3C  1F1C               	comf	(dtoa@n+2)& (0+255),f,b
 27589  005C3E  1F1B               	comf	(dtoa@n+1)& (0+255),f,b
 27590  005C40  6D1A               	negf	dtoa@n& (0+255),b
 27591  005C42  0E00               	movlw	0
 27592  005C44  231B               	addwfc	(dtoa@n+1)& (0+255),f,b
 27593  005C46  231C               	addwfc	(dtoa@n+2)& (0+255),f,b
 27594  005C48  231D               	addwfc	(dtoa@n+3)& (0+255),f,b
 27595  005C4A  231E               	addwfc	(dtoa@n+4)& (0+255),f,b
 27596  005C4C  231F               	addwfc	(dtoa@n+5)& (0+255),f,b
 27597  005C4E  2320               	addwfc	(dtoa@n+6)& (0+255),f,b
 27598  005C50  2321               	addwfc	(dtoa@n+7)& (0+255),f,b
 27599  005C52                     l16359:
 27600                           
 27601                           ; BSR set to: 1
 27602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 27603  005C52  0100               	movlb	0	; () banked
 27604  005C54  AFB5               	btfss	(_prec+1)& (0+255),7,b
 27605                           
 27606                           ; BSR set to: 0
 27607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 27608  005C56  93B6               	bcf	_flags& (0+255),1,b
 27609                           
 27610                           ; BSR set to: 0
 27611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 27612  005C58  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 27613  005C5A  D005               	goto	u16380
 27614  005C5C  51B5               	movf	(_prec+1)& (0+255),w,b
 27615  005C5E  E109               	bnz	l3085
 27616  005C60  05B4               	decf	_prec& (0+255),w,b
 27617  005C62  B0D8               	btfsc	status,0,c
 27618  005C64  D006               	goto	l3085
 27619  005C66                     u16380:
 27620                           
 27621                           ; BSR set to: 0
 27622  005C66  0E00               	movlw	0
 27623  005C68  0101               	movlb	1	; () banked
 27624  005C6A  6F15               	movwf	(dtoa@p+1)& (0+255),b
 27625  005C6C  0E01               	movlw	1
 27626  005C6E  6F14               	movwf	dtoa@p& (0+255),b
 27627  005C70  D006               	goto	l3087
 27628  005C72                     l3085:
 27629                           
 27630                           ; BSR set to: 0
 27631  005C72  0060  F2D0  F114   	movff	_prec,dtoa@p
 27632  005C78  0060  F2D4  F115   	movff	_prec+1,dtoa@p+1
 27633  005C7E                     l3087:
 27634                           
 27635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 27636  005C7E  0060  F2C8  F116   	movff	_width,dtoa@w
 27637  005C84  0060  F2CC  F117   	movff	_width+1,dtoa@w+1
 27638                           
 27639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 27640  005C8A  0101               	movlb	1	; () banked
 27641  005C8C  5118               	movf	dtoa@s& (0+255),w,b
 27642  005C8E  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27643  005C90  A4D8               	btfss	status,2,c
 27644  005C92  D003               	goto	u16400
 27645                           
 27646                           ; BSR set to: 1
 27647  005C94  0100               	movlb	0	; () banked
 27648  005C96  A5B6               	btfss	_flags& (0+255),2,b
 27649  005C98  D004               	goto	l16373
 27650  005C9A                     u16400:
 27651                           
 27652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 27653  005C9A  0101               	movlb	1	; () banked
 27654  005C9C  0716               	decf	dtoa@w& (0+255),f,b
 27655  005C9E  A0D8               	btfss	status,0,c
 27656  005CA0  0717               	decf	(dtoa@w+1)& (0+255),f,b
 27657  005CA2                     l16373:
 27658                           
 27659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 27660  005CA2  0E00               	movlw	0
 27661  005CA4  0101               	movlb	1	; () banked
 27662  005CA6  6F23               	movwf	(dtoa@i+1)& (0+255),b
 27663  005CA8  0E1F               	movlw	31
 27664  005CAA  6F22               	movwf	dtoa@i& (0+255),b
 27665                           
 27666                           ; BSR set to: 1
 27667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 27668  005CAC  0E00               	movlw	0
 27669  005CAE  0102               	movlb	2	; () banked
 27670  005CB0  6F72               	movwf	(_dbuf+31)& (0+255),b
 27671                           
 27672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27673  005CB2  D0A2               	goto	l16387
 27674  005CB4                     l16377:
 27675                           
 27676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 27677  005CB4  0101               	movlb	1	; () banked
 27678  005CB6  0722               	decf	dtoa@i& (0+255),f,b
 27679  005CB8  A0D8               	btfss	status,0,c
 27680  005CBA  0723               	decf	(dtoa@i+1)& (0+255),f,b
 27681                           
 27682                           ; BSR set to: 1
 27683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 27684  005CBC  0E53               	movlw	low _dbuf
 27685  005CBE  2522               	addwf	dtoa@i& (0+255),w,b
 27686  005CC0  6ED9               	movwf	fsr2l,c
 27687  005CC2  0E02               	movlw	high _dbuf
 27688  005CC4  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 27689  005CC6  6EDA               	movwf	fsr2h,c
 27690  005CC8  0060  F468  F08B   	movff	dtoa@n,___aomod@dividend
 27691  005CCE  0060  F46C  F08C   	movff	dtoa@n+1,___aomod@dividend+1
 27692  005CD4  0060  F470  F08D   	movff	dtoa@n+2,___aomod@dividend+2
 27693  005CDA  0060  F474  F08E   	movff	dtoa@n+3,___aomod@dividend+3
 27694  005CE0  0060  F478  F08F   	movff	dtoa@n+4,___aomod@dividend+4
 27695  005CE6  0060  F47C  F090   	movff	dtoa@n+5,___aomod@dividend+5
 27696  005CEC  0060  F480  F091   	movff	dtoa@n+6,___aomod@dividend+6
 27697  005CF2  0060  F484  F092   	movff	dtoa@n+7,___aomod@dividend+7
 27698  005CF8  0E0A               	movlw	10
 27699  005CFA  0100               	movlb	0	; () banked
 27700  005CFC  6F93               	movwf	___aomod@divisor& (0+255),b
 27701  005CFE  0E00               	movlw	0
 27702  005D00  6F94               	movwf	(___aomod@divisor+1)& (0+255),b
 27703  005D02  0E00               	movlw	0
 27704  005D04  6F95               	movwf	(___aomod@divisor+2)& (0+255),b
 27705  005D06  0E00               	movlw	0
 27706  005D08  6F96               	movwf	(___aomod@divisor+3)& (0+255),b
 27707  005D0A  0E00               	movlw	0
 27708  005D0C  6F97               	movwf	(___aomod@divisor+4)& (0+255),b
 27709  005D0E  0E00               	movlw	0
 27710  005D10  6F98               	movwf	(___aomod@divisor+5)& (0+255),b
 27711  005D12  0E00               	movlw	0
 27712  005D14  6F99               	movwf	(___aomod@divisor+6)& (0+255),b
 27713  005D16  0E00               	movlw	0
 27714  005D18  6F9A               	movwf	(___aomod@divisor+7)& (0+255),b
 27715  005D1A  EC27  F03A         	call	___aomod	;wreg free
 27716  005D1E  0060  F22C  F10A   	movff	?___aomod,??_dtoa
 27717  005D24  0060  F230  F10B   	movff	?___aomod+1,??_dtoa+1
 27718  005D2A  0060  F234  F10C   	movff	?___aomod+2,??_dtoa+2
 27719  005D30  0060  F238  F10D   	movff	?___aomod+3,??_dtoa+3
 27720  005D36  0060  F23C  F10E   	movff	?___aomod+4,??_dtoa+4
 27721  005D3C  0060  F240  F10F   	movff	?___aomod+5,??_dtoa+5
 27722  005D42  0060  F244  F110   	movff	?___aomod+6,??_dtoa+6
 27723  005D48  0060  F248  F111   	movff	?___aomod+7,??_dtoa+7
 27724  005D4E  0060  F428  F09D   	movff	??_dtoa,abs@a
 27725  005D54  0060  F430  F09E   	movff	??_dtoa+2,abs@a+1
 27726  005D5A  ECF8  F04A         	call	_abs	;wreg free
 27727  005D5E  519D               	movf	?_abs& (0+255),w,b
 27728  005D60  0F30               	addlw	48
 27729  005D62  6EDF               	movwf	indf2,c
 27730                           
 27731                           ; BSR set to: 0
 27732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 27733  005D64  0101               	movlb	1	; () banked
 27734  005D66  0714               	decf	dtoa@p& (0+255),f,b
 27735  005D68  A0D8               	btfss	status,0,c
 27736  005D6A  0715               	decf	(dtoa@p+1)& (0+255),f,b
 27737                           
 27738                           ; BSR set to: 1
 27739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 27740  005D6C  0716               	decf	dtoa@w& (0+255),f,b
 27741  005D6E  A0D8               	btfss	status,0,c
 27742  005D70  0717               	decf	(dtoa@w+1)& (0+255),f,b
 27743                           
 27744                           ; BSR set to: 1
 27745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 27746  005D72  0060  F468  F08B   	movff	dtoa@n,___aodiv@dividend
 27747  005D78  0060  F46C  F08C   	movff	dtoa@n+1,___aodiv@dividend+1
 27748  005D7E  0060  F470  F08D   	movff	dtoa@n+2,___aodiv@dividend+2
 27749  005D84  0060  F474  F08E   	movff	dtoa@n+3,___aodiv@dividend+3
 27750  005D8A  0060  F478  F08F   	movff	dtoa@n+4,___aodiv@dividend+4
 27751  005D90  0060  F47C  F090   	movff	dtoa@n+5,___aodiv@dividend+5
 27752  005D96  0060  F480  F091   	movff	dtoa@n+6,___aodiv@dividend+6
 27753  005D9C  0060  F484  F092   	movff	dtoa@n+7,___aodiv@dividend+7
 27754  005DA2  0E0A               	movlw	10
 27755  005DA4  0100               	movlb	0	; () banked
 27756  005DA6  6F93               	movwf	___aodiv@divisor& (0+255),b
 27757  005DA8  0E00               	movlw	0
 27758  005DAA  6F94               	movwf	(___aodiv@divisor+1)& (0+255),b
 27759  005DAC  0E00               	movlw	0
 27760  005DAE  6F95               	movwf	(___aodiv@divisor+2)& (0+255),b
 27761  005DB0  0E00               	movlw	0
 27762  005DB2  6F96               	movwf	(___aodiv@divisor+3)& (0+255),b
 27763  005DB4  0E00               	movlw	0
 27764  005DB6  6F97               	movwf	(___aodiv@divisor+4)& (0+255),b
 27765  005DB8  0E00               	movlw	0
 27766  005DBA  6F98               	movwf	(___aodiv@divisor+5)& (0+255),b
 27767  005DBC  0E00               	movlw	0
 27768  005DBE  6F99               	movwf	(___aodiv@divisor+6)& (0+255),b
 27769  005DC0  0E00               	movlw	0
 27770  005DC2  6F9A               	movwf	(___aodiv@divisor+7)& (0+255),b
 27771  005DC4  ECCF  F038         	call	___aodiv	;wreg free
 27772  005DC8  0060  F22C  F11A   	movff	?___aodiv,dtoa@n
 27773  005DCE  0060  F230  F11B   	movff	?___aodiv+1,dtoa@n+1
 27774  005DD4  0060  F234  F11C   	movff	?___aodiv+2,dtoa@n+2
 27775  005DDA  0060  F238  F11D   	movff	?___aodiv+3,dtoa@n+3
 27776  005DE0  0060  F23C  F11E   	movff	?___aodiv+4,dtoa@n+4
 27777  005DE6  0060  F240  F11F   	movff	?___aodiv+5,dtoa@n+5
 27778  005DEC  0060  F244  F120   	movff	?___aodiv+6,dtoa@n+6
 27779  005DF2  0060  F248  F121   	movff	?___aodiv+7,dtoa@n+7
 27780  005DF8                     l16387:
 27781                           
 27782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27783  005DF8  0101               	movlb	1	; () banked
 27784  005DFA  BF23               	btfsc	(dtoa@i+1)& (0+255),7,b
 27785  005DFC  D020               	goto	u16450
 27786  005DFE  5123               	movf	(dtoa@i+1)& (0+255),w,b
 27787  005E00  E103               	bnz	u16410
 27788  005E02  0522               	decf	dtoa@i& (0+255),w,b
 27789  005E04  A0D8               	btfss	status,0,c
 27790  005E06  D01B               	goto	u16450
 27791  005E08                     u16410:
 27792                           
 27793                           ; BSR set to: 1
 27794  005E08  511A               	movf	dtoa@n& (0+255),w,b
 27795  005E0A  111B               	iorwf	(dtoa@n+1)& (0+255),w,b
 27796  005E0C  111C               	iorwf	(dtoa@n+2)& (0+255),w,b
 27797  005E0E  111D               	iorwf	(dtoa@n+3)& (0+255),w,b
 27798  005E10  111E               	iorwf	(dtoa@n+4)& (0+255),w,b
 27799  005E12  111F               	iorwf	(dtoa@n+5)& (0+255),w,b
 27800  005E14  1120               	iorwf	(dtoa@n+6)& (0+255),w,b
 27801  005E16  1121               	iorwf	(dtoa@n+7)& (0+255),w,b
 27802  005E18  A4D8               	btfss	status,2,c
 27803  005E1A  D74C               	goto	l16377
 27804                           
 27805                           ; BSR set to: 1
 27806  005E1C  BF15               	btfsc	(dtoa@p+1)& (0+255),7,b
 27807  005E1E  D005               	goto	u16430
 27808  005E20  5115               	movf	(dtoa@p+1)& (0+255),w,b
 27809  005E22  E102               	bnz	u16431
 27810  005E24  0514               	decf	dtoa@p& (0+255),w,b
 27811  005E26  B0D8               	btfsc	status,0,c
 27812  005E28                     u16431:
 27813  005E28  D745               	goto	l16377
 27814  005E2A                     u16430:
 27815                           
 27816                           ; BSR set to: 1
 27817  005E2A  BF17               	btfsc	(dtoa@w+1)& (0+255),7,b
 27818  005E2C  D008               	goto	u16450
 27819  005E2E  5117               	movf	(dtoa@w+1)& (0+255),w,b
 27820  005E30  E103               	bnz	u16440
 27821  005E32  0516               	decf	dtoa@w& (0+255),w,b
 27822  005E34  A0D8               	btfss	status,0,c
 27823  005E36  D003               	goto	u16450
 27824  005E38                     u16440:
 27825                           
 27826                           ; BSR set to: 1
 27827  005E38  0100               	movlb	0	; () banked
 27828  005E3A  B3B6               	btfsc	_flags& (0+255),1,b
 27829  005E3C  D73B               	goto	l16377
 27830  005E3E                     u16450:
 27831                           
 27832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 27833  005E3E  0101               	movlb	1	; () banked
 27834  005E40  5118               	movf	dtoa@s& (0+255),w,b
 27835  005E42  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27836  005E44  A4D8               	btfss	status,2,c
 27837  005E46  D003               	goto	u16470
 27838                           
 27839                           ; BSR set to: 1
 27840  005E48  0100               	movlb	0	; () banked
 27841  005E4A  A5B6               	btfss	_flags& (0+255),2,b
 27842  005E4C  D019               	goto	l16411
 27843  005E4E                     u16470:
 27844                           
 27845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 27846  005E4E  0101               	movlb	1	; () banked
 27847  005E50  0722               	decf	dtoa@i& (0+255),f,b
 27848  005E52  A0D8               	btfss	status,0,c
 27849  005E54  0723               	decf	(dtoa@i+1)& (0+255),f,b
 27850                           
 27851                           ; BSR set to: 1
 27852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 27853  005E56  5118               	movf	dtoa@s& (0+255),w,b
 27854  005E58  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27855  005E5A  A4D8               	btfss	status,2,c
 27856  005E5C  D004               	goto	l16407
 27857                           
 27858                           ; BSR set to: 1
 27859  005E5E  0E00               	movlw	0
 27860  005E60  6F13               	movwf	(_dtoa$4891+1)& (0+255),b
 27861  005E62  0E2B               	movlw	43
 27862  005E64  D003               	goto	L53
 27863  005E66                     l16407:
 27864                           
 27865                           ; BSR set to: 1
 27866  005E66  0E00               	movlw	0
 27867  005E68  6F13               	movwf	(_dtoa$4891+1)& (0+255),b
 27868  005E6A  0E2D               	movlw	45
 27869  005E6C                     L53:
 27870  005E6C  6F12               	movwf	_dtoa$4891& (0+255),b
 27871                           
 27872                           ; BSR set to: 1
 27873  005E6E  0E53               	movlw	low _dbuf
 27874  005E70  2522               	addwf	dtoa@i& (0+255),w,b
 27875  005E72  6ED9               	movwf	fsr2l,c
 27876  005E74  0E02               	movlw	high _dbuf
 27877  005E76  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 27878  005E78  6EDA               	movwf	fsr2h,c
 27879  005E7A  0060  F44B  FFDF   	movff	_dtoa$4891,indf2
 27880  005E80                     l16411:
 27881                           
 27882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 27883  005E80  0060  F400  F09D   	movff	dtoa@fp,pad@fp
 27884  005E86  0060  F404  F09E   	movff	dtoa@fp+1,pad@fp+1
 27885  005E8C  0E53               	movlw	low _dbuf
 27886  005E8E  0101               	movlb	1	; () banked
 27887  005E90  2522               	addwf	dtoa@i& (0+255),w,b
 27888  005E92  0100               	movlb	0	; () banked
 27889  005E94  6F9F               	movwf	pad@buf& (0+255),b
 27890  005E96  0E02               	movlw	high _dbuf
 27891  005E98  0101               	movlb	1	; () banked
 27892  005E9A  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 27893  005E9C  0100               	movlb	0	; () banked
 27894  005E9E  6FA0               	movwf	(pad@buf+1)& (0+255),b
 27895  005EA0  0060  F458  F0A1   	movff	dtoa@w,pad@p
 27896  005EA6  0060  F45C  F0A2   	movff	dtoa@w+1,pad@p+1
 27897  005EAC  ECC9  F03F         	call	_pad	;wreg free
 27898  005EB0  0060  F274  F100   	movff	?_pad,?_dtoa
 27899  005EB6  0060  F278  F101   	movff	?_pad+1,?_dtoa+1
 27900                           
 27901                           ; BSR set to: 0
 27902  005EBC  0012               	return		;funcret
 27903  005EBE                     __end_of_dtoa:
 27904                           	opt callstack 0
 27905                           
 27906 ;; *************** function _pad *****************
 27907 ;; Defined at:
 27908 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 27909 ;; Parameters:    Size  Location     Type
 27910 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
 27911 ;;		 -> sprintf@f(6), NULL(0), 
 27912 ;;  buf             2   63[BANK0 ] PTR unsigned char 
 27913 ;;		 -> dbuf(32), 
 27914 ;;  p               2   65[BANK0 ] int 
 27915 ;; Auto vars:     Size  Location     Type
 27916 ;;  w               2   70[BANK0 ] int 
 27917 ;;  i               2   68[BANK0 ] int 
 27918 ;; Return value:  Size  Location     Type
 27919 ;;                  2   61[BANK0 ] int 
 27920 ;; Registers used:
 27921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27922 ;; Tracked objects:
 27923 ;;		On entry : 3F/0
 27924 ;;		On exit  : 3F/0
 27925 ;;		Unchanged: 0/0
 27926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27928 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27930 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27931 ;;Total ram usage:       11 bytes
 27932 ;; Hardware stack levels used:    1
 27933 ;; Hardware stack levels required when called:   21
 27934 ;; This function calls:
 27935 ;;		_fputc
 27936 ;;		_fputs
 27937 ;;		_strlen
 27938 ;; This function is called by:
 27939 ;;		_dtoa
 27940 ;;		_xtoa
 27941 ;; This function uses a non-reentrant model
 27942 ;;
 27943                           
 27944                           	psect	text120
 27945  007F92                     __ptext120:
 27946                           	opt callstack 0
 27947  007F92                     _pad:
 27948                           	opt callstack 5
 27949                           
 27950                           ; BSR set to: 0
 27951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 27952                           
 27953                           ; BSR set to: 0
 27954                           ;incstack = 0
 27955  007F92  A1B6               	btfss	_flags& (0+255),0,b
 27956  007F94  D00E               	goto	l16189
 27957                           
 27958                           ; BSR set to: 0
 27959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 27960  007F96  0060  F27C  F096   	movff	pad@buf,fputs@s
 27961  007F9C  0060  F280  F097   	movff	pad@buf+1,fputs@s+1
 27962  007FA2  0060  F274  F098   	movff	pad@fp,fputs@fp
 27963  007FA8  0060  F278  F099   	movff	pad@fp+1,fputs@fp+1
 27964  007FAE  ECD8  F04A         	call	_fputs	;wreg free
 27965  007FB2                     l16189:
 27966                           
 27967                           ; BSR set to: 0
 27968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 27969  007FB2  BFA2               	btfsc	(pad@p+1)& (0+255),7,b
 27970  007FB4  D007               	goto	l16193
 27971                           
 27972                           ; BSR set to: 0
 27973  007FB6  0060  F284  F0A6   	movff	pad@p,pad@w
 27974  007FBC  0060  F288  F0A7   	movff	pad@p+1,pad@w+1
 27975  007FC2  D004               	goto	l3074
 27976  007FC4                     l16193:
 27977                           
 27978                           ; BSR set to: 0
 27979  007FC4  0E00               	movlw	0
 27980  007FC6  6FA7               	movwf	(pad@w+1)& (0+255),b
 27981  007FC8  0E00               	movlw	0
 27982  007FCA  6FA6               	movwf	pad@w& (0+255),b
 27983  007FCC                     l3074:
 27984                           
 27985                           ; BSR set to: 0
 27986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 27987  007FCC  0E00               	movlw	0
 27988  007FCE  6FA5               	movwf	(pad@i+1)& (0+255),b
 27989  007FD0  0E00               	movlw	0
 27990  007FD2  6FA4               	movwf	pad@i& (0+255),b
 27991                           
 27992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 27993  007FD4  D00F               	goto	l16199
 27994  007FD6                     l16195:
 27995                           
 27996                           ; BSR set to: 0
 27997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 27998  007FD6  0E00               	movlw	0
 27999  007FD8  6F8E               	movwf	(fputc@c+1)& (0+255),b
 28000  007FDA  0E20               	movlw	32
 28001  007FDC  6F8D               	movwf	fputc@c& (0+255),b
 28002  007FDE  0060  F274  F08F   	movff	pad@fp,fputc@fp
 28003  007FE4  0060  F278  F090   	movff	pad@fp+1,fputc@fp+1
 28004  007FEA  EC7B  F040         	call	_fputc	;wreg free
 28005                           
 28006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 28007  007FEE  0100               	movlb	0	; () banked
 28008  007FF0  4BA4               	infsnz	pad@i& (0+255),f,b
 28009  007FF2  2BA5               	incf	(pad@i+1)& (0+255),f,b
 28010  007FF4                     l16199:
 28011                           
 28012                           ; BSR set to: 0
 28013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 28014  007FF4  51A6               	movf	pad@w& (0+255),w,b
 28015  007FF6  5DA4               	subwf	pad@i& (0+255),w,b
 28016  007FF8  51A5               	movf	(pad@i+1)& (0+255),w,b
 28017  007FFA  0A80               	xorlw	128
 28018  007FFC  6FA3               	movwf	??_pad& (0+255),b
 28019  007FFE  51A7               	movf	(pad@w+1)& (0+255),w,b
 28020  008000  0A80               	xorlw	128
 28021  008002  59A3               	subwfb	??_pad& (0+255),w,b
 28022  008004  A0D8               	btfss	status,0,c
 28023  008006  D7E7               	goto	l16195
 28024                           
 28025                           ; BSR set to: 0
 28026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 28027  008008  B1B6               	btfsc	_flags& (0+255),0,b
 28028  00800A  D00E               	goto	l16203
 28029                           
 28030                           ; BSR set to: 0
 28031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 28032  00800C  0060  F27C  F096   	movff	pad@buf,fputs@s
 28033  008012  0060  F280  F097   	movff	pad@buf+1,fputs@s+1
 28034  008018  0060  F274  F098   	movff	pad@fp,fputs@fp
 28035  00801E  0060  F278  F099   	movff	pad@fp+1,fputs@fp+1
 28036  008024  ECD8  F04A         	call	_fputs	;wreg free
 28037  008028                     l16203:
 28038                           
 28039                           ; BSR set to: 0
 28040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 28041  008028  0060  F27C  F08B   	movff	pad@buf,strlen@s
 28042  00802E  0060  F280  F08C   	movff	pad@buf+1,strlen@s+1
 28043  008034  EC26  F04D         	call	_strlen	;wreg free
 28044  008038  51A6               	movf	pad@w& (0+255),w,b
 28045  00803A  258B               	addwf	?_strlen& (0+255),w,b
 28046  00803C  6F9D               	movwf	?_pad& (0+255),b
 28047  00803E  51A7               	movf	(pad@w+1)& (0+255),w,b
 28048  008040  218C               	addwfc	(?_strlen+1)& (0+255),w,b
 28049  008042  6F9E               	movwf	(?_pad+1)& (0+255),b
 28050                           
 28051                           ; BSR set to: 0
 28052  008044  0012               	return		;funcret
 28053  008046                     __end_of_pad:
 28054                           	opt callstack 0
 28055                           
 28056 ;; *************** function _strlen *****************
 28057 ;; Defined at:
 28058 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 28059 ;; Parameters:    Size  Location     Type
 28060 ;;  s               2   43[BANK0 ] PTR const unsigned char 
 28061 ;;		 -> dbuf(32), 
 28062 ;; Auto vars:     Size  Location     Type
 28063 ;;  a               2   45[BANK0 ] PTR const unsigned char 
 28064 ;;		 -> dbuf(32), 
 28065 ;; Return value:  Size  Location     Type
 28066 ;;                  2   43[BANK0 ] unsigned int 
 28067 ;; Registers used:
 28068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28069 ;; Tracked objects:
 28070 ;;		On entry : 3F/0
 28071 ;;		On exit  : 3F/0
 28072 ;;		Unchanged: 0/0
 28073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28075 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28077 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28078 ;;Total ram usage:        4 bytes
 28079 ;; Hardware stack levels used:    1
 28080 ;; Hardware stack levels required when called:   17
 28081 ;; This function calls:
 28082 ;;		Nothing
 28083 ;; This function is called by:
 28084 ;;		_pad
 28085 ;; This function uses a non-reentrant model
 28086 ;;
 28087                           
 28088                           	psect	text121
 28089  009A4C                     __ptext121:
 28090                           	opt callstack 0
 28091  009A4C                     _strlen:
 28092                           	opt callstack 8
 28093                           
 28094                           ; BSR set to: 0
 28095                           
 28096                           ; BSR set to: 0
 28097                           ;incstack = 0
 28098  009A4C  0060  F22C  F08D   	movff	strlen@s,strlen@a
 28099  009A52  0060  F230  F08E   	movff	strlen@s+1,strlen@a+1
 28100  009A58  D002               	goto	l16161
 28101  009A5A                     l16159:
 28102                           
 28103                           ; BSR set to: 0
 28104  009A5A  4B8B               	infsnz	strlen@s& (0+255),f,b
 28105  009A5C  2B8C               	incf	(strlen@s+1)& (0+255),f,b
 28106  009A5E                     l16161:
 28107                           
 28108                           ; BSR set to: 0
 28109  009A5E  0060  F22F  FFD9   	movff	strlen@s,fsr2l
 28110  009A64  0060  F233  FFDA   	movff	strlen@s+1,fsr2h
 28111  009A6A  50DF               	movf	indf2,w,c
 28112  009A6C  A4D8               	btfss	status,2,c
 28113  009A6E  D7F5               	goto	l16159
 28114                           
 28115                           ; BSR set to: 0
 28116  009A70  518D               	movf	strlen@a& (0+255),w,b
 28117  009A72  5D8B               	subwf	strlen@s& (0+255),w,b
 28118  009A74  6F8B               	movwf	?_strlen& (0+255),b
 28119  009A76  518E               	movf	(strlen@a+1)& (0+255),w,b
 28120  009A78  598C               	subwfb	(strlen@s+1)& (0+255),w,b
 28121  009A7A  6F8C               	movwf	(?_strlen+1)& (0+255),b
 28122                           
 28123                           ; BSR set to: 0
 28124  009A7C  0012               	return		;funcret
 28125  009A7E                     __end_of_strlen:
 28126                           	opt callstack 0
 28127                           
 28128 ;; *************** function _fputs *****************
 28129 ;; Defined at:
 28130 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 28131 ;; Parameters:    Size  Location     Type
 28132 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 28133 ;;		 -> dbuf(32), 
 28134 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
 28135 ;;		 -> sprintf@f(6), NULL(0), 
 28136 ;; Auto vars:     Size  Location     Type
 28137 ;;  i               2   59[BANK0 ] int 
 28138 ;;  c               1   58[BANK0 ] unsigned char 
 28139 ;; Return value:  Size  Location     Type
 28140 ;;                  2   54[BANK0 ] int 
 28141 ;; Registers used:
 28142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28143 ;; Tracked objects:
 28144 ;;		On entry : 3F/0
 28145 ;;		On exit  : 3F/0
 28146 ;;		Unchanged: 0/0
 28147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28149 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28151 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28152 ;;Total ram usage:        7 bytes
 28153 ;; Hardware stack levels used:    1
 28154 ;; Hardware stack levels required when called:   20
 28155 ;; This function calls:
 28156 ;;		_fputc
 28157 ;; This function is called by:
 28158 ;;		_pad
 28159 ;; This function uses a non-reentrant model
 28160 ;;
 28161                           
 28162                           	psect	text122
 28163  0095B0                     __ptext122:
 28164                           	opt callstack 0
 28165  0095B0                     _fputs:
 28166                           	opt callstack 5
 28167                           
 28168                           ; BSR set to: 0
 28169                           
 28170                           ; BSR set to: 0
 28171                           ;incstack = 0
 28172  0095B0  0E00               	movlw	0
 28173  0095B2  6F9C               	movwf	(fputs@i+1)& (0+255),b
 28174  0095B4  0E00               	movlw	0
 28175  0095B6  6F9B               	movwf	fputs@i& (0+255),b
 28176  0095B8  D00F               	goto	l16155
 28177  0095BA                     l16151:
 28178                           
 28179                           ; BSR set to: 0
 28180  0095BA  0060  F268  F08D   	movff	fputs@c,fputc@c
 28181  0095C0  6B8E               	clrf	(fputc@c+1)& (0+255),b
 28182  0095C2  0060  F260  F08F   	movff	fputs@fp,fputc@fp
 28183  0095C8  0060  F264  F090   	movff	fputs@fp+1,fputc@fp+1
 28184  0095CE  EC7B  F040         	call	_fputc	;wreg free
 28185  0095D2  0100               	movlb	0	; () banked
 28186  0095D4  4B9B               	infsnz	fputs@i& (0+255),f,b
 28187  0095D6  2B9C               	incf	(fputs@i+1)& (0+255),f,b
 28188  0095D8                     l16155:
 28189                           
 28190                           ; BSR set to: 0
 28191  0095D8  519B               	movf	fputs@i& (0+255),w,b
 28192  0095DA  2596               	addwf	fputs@s& (0+255),w,b
 28193  0095DC  6ED9               	movwf	fsr2l,c
 28194  0095DE  519C               	movf	(fputs@i+1)& (0+255),w,b
 28195  0095E0  2197               	addwfc	(fputs@s+1)& (0+255),w,b
 28196  0095E2  6EDA               	movwf	fsr2h,c
 28197  0095E4  50DF               	movf	indf2,w,c
 28198  0095E6  6F9A               	movwf	fputs@c& (0+255),b
 28199  0095E8  519A               	movf	fputs@c& (0+255),w,b
 28200  0095EA  B4D8               	btfsc	status,2,c
 28201  0095EC  0012               	return	
 28202  0095EE  D7E5               	goto	l16151
 28203  0095F0                     __end_of_fputs:
 28204                           	opt callstack 0
 28205                           
 28206 ;; *************** function _fputc *****************
 28207 ;; Defined at:
 28208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 28209 ;; Parameters:    Size  Location     Type
 28210 ;;  c               2   45[BANK0 ] int 
 28211 ;;  fp              2   47[BANK0 ] PTR struct _IO_FILE
 28212 ;;		 -> sprintf@f(6), NULL(0), 
 28213 ;; Auto vars:     Size  Location     Type
 28214 ;;		None
 28215 ;; Return value:  Size  Location     Type
 28216 ;;                  2   45[BANK0 ] int 
 28217 ;; Registers used:
 28218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28219 ;; Tracked objects:
 28220 ;;		On entry : 3F/0
 28221 ;;		On exit  : 6/0
 28222 ;;		Unchanged: 0/0
 28223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28226 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28227 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28228 ;;Total ram usage:        9 bytes
 28229 ;; Hardware stack levels used:    1
 28230 ;; Hardware stack levels required when called:   19
 28231 ;; This function calls:
 28232 ;;		_putch
 28233 ;; This function is called by:
 28234 ;;		_pad
 28235 ;;		_vfpfcnvrt
 28236 ;;		_fputs
 28237 ;; This function uses a non-reentrant model
 28238 ;;
 28239                           
 28240                           	psect	text123
 28241  0080F6                     __ptext123:
 28242                           	opt callstack 0
 28243  0080F6                     _fputc:
 28244                           	opt callstack 5
 28245                           
 28246                           ; BSR set to: 0
 28247                           
 28248                           ; BSR set to: 0
 28249                           ;incstack = 0
 28250  0080F6  518F               	movf	fputc@fp& (0+255),w,b
 28251  0080F8  1190               	iorwf	(fputc@fp+1)& (0+255),w,b
 28252  0080FA  B4D8               	btfsc	status,2,c
 28253  0080FC  D004               	goto	u15890
 28254                           
 28255                           ; BSR set to: 0
 28256  0080FE  518F               	movf	fputc@fp& (0+255),w,b
 28257  008100  1190               	iorwf	(fputc@fp+1)& (0+255),w,b
 28258  008102  A4D8               	btfss	status,2,c
 28259  008104  D004               	goto	l16135
 28260  008106                     u15890:
 28261                           
 28262                           ; BSR set to: 0
 28263  008106  518D               	movf	fputc@c& (0+255),w,b
 28264  008108  EC54  F051         	call	_putch
 28265  00810C  0012               	return	
 28266  00810E                     l16135:
 28267                           
 28268                           ; BSR set to: 0
 28269  00810E  EE20 F004          	lfsr	2,4
 28270  008112  518F               	movf	fputc@fp& (0+255),w,b
 28271  008114  26D9               	addwf	fsr2l,f,c
 28272  008116  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28273  008118  22DA               	addwfc	fsr2h,f,c
 28274  00811A  50DE               	movf	postinc2,w,c
 28275  00811C  10DE               	iorwf	postinc2,w,c
 28276  00811E  B4D8               	btfsc	status,2,c
 28277  008120  D016               	goto	u15910
 28278                           
 28279                           ; BSR set to: 0
 28280  008122  EE20 F004          	lfsr	2,4
 28281  008126  518F               	movf	fputc@fp& (0+255),w,b
 28282  008128  26D9               	addwf	fsr2l,f,c
 28283  00812A  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28284  00812C  22DA               	addwfc	fsr2h,f,c
 28285  00812E  EE10 F002          	lfsr	1,2
 28286  008132  518F               	movf	fputc@fp& (0+255),w,b
 28287  008134  26E1               	addwf	fsr1l,f,c
 28288  008136  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28289  008138  22E2               	addwfc	fsr1h,f,c
 28290  00813A  50DE               	movf	postinc2,w,c
 28291  00813C  5CE6               	subwf	postinc1,w,c
 28292  00813E  50E6               	movf	postinc1,w,c
 28293  008140  0A80               	xorlw	128
 28294  008142  6F95               	movwf	(??_fputc+4)& (0+255),b
 28295  008144  50DE               	movf	postinc2,w,c
 28296  008146  0A80               	xorlw	128
 28297  008148  5995               	subwfb	(??_fputc+4)& (0+255),w,b
 28298  00814A  B0D8               	btfsc	status,0,c
 28299  00814C  0012               	return	
 28300  00814E                     u15910:
 28301                           
 28302                           ; BSR set to: 0
 28303  00814E  EE20 F002          	lfsr	2,2
 28304  008152  518F               	movf	fputc@fp& (0+255),w,b
 28305  008154  26D9               	addwf	fsr2l,f,c
 28306  008156  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28307  008158  22DA               	addwfc	fsr2h,f,c
 28308  00815A  006F FF78  F091    	movff	postinc2,??_fputc
 28309  008160  006F FF74  F092    	movff	postdec2,??_fputc+1
 28310  008166  0060  F23F  FFD9   	movff	fputc@fp,fsr2l
 28311  00816C  0060  F243  FFDA   	movff	fputc@fp+1,fsr2h
 28312  008172  006F FF78  F093    	movff	postinc2,??_fputc+2
 28313  008178  006F FF74  F094    	movff	postdec2,??_fputc+3
 28314  00817E  5191               	movf	??_fputc& (0+255),w,b
 28315  008180  2593               	addwf	(??_fputc+2)& (0+255),w,b
 28316  008182  6ED9               	movwf	fsr2l,c
 28317  008184  5192               	movf	(??_fputc+1)& (0+255),w,b
 28318  008186  2194               	addwfc	(??_fputc+3)& (0+255),w,b
 28319  008188  6EDA               	movwf	fsr2h,c
 28320  00818A  0060  F237  FFDF   	movff	fputc@c,indf2
 28321  008190  EE20 F002          	lfsr	2,2
 28322  008194  518F               	movf	fputc@fp& (0+255),w,b
 28323  008196  26D9               	addwf	fsr2l,f,c
 28324  008198  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28325  00819A  22DA               	addwfc	fsr2h,f,c
 28326  00819C  2ADE               	incf	postinc2,f,c
 28327  00819E  0E00               	movlw	0
 28328  0081A0  22DD               	addwfc	postdec2,f,c
 28329  0081A2  0012               	return		;funcret
 28330  0081A4                     __end_of_fputc:
 28331                           	opt callstack 0
 28332                           
 28333 ;; *************** function _putch *****************
 28334 ;; Defined at:
 28335 ;;		line 23 in file "main.c"
 28336 ;; Parameters:    Size  Location     Type
 28337 ;;  byte            1    wreg     unsigned char 
 28338 ;; Auto vars:     Size  Location     Type
 28339 ;;  byte            1   44[BANK0 ] unsigned char 
 28340 ;; Return value:  Size  Location     Type
 28341 ;;                  1    wreg      void 
 28342 ;; Registers used:
 28343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28344 ;; Tracked objects:
 28345 ;;		On entry : 3F/0
 28346 ;;		On exit  : 3F/39
 28347 ;;		Unchanged: 0/0
 28348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28353 ;;Total ram usage:        1 bytes
 28354 ;; Hardware stack levels used:    1
 28355 ;; Hardware stack levels required when called:   18
 28356 ;; This function calls:
 28357 ;;		_UART1_Write
 28358 ;;		_UART1_is_tx_ready
 28359 ;; This function is called by:
 28360 ;;		_fputc
 28361 ;; This function uses a non-reentrant model
 28362 ;;
 28363                           
 28364                           	psect	text124
 28365  00A2A8                     __ptext124:
 28366                           	opt callstack 0
 28367  00A2A8                     _putch:
 28368                           	opt callstack 5
 28369                           
 28370                           ;incstack = 0
 28371                           ;putch@byte stored from wreg
 28372  00A2A8  6F8C               	movwf	putch@byte& (0+255),b
 28373  00A2AA                     
 28374                           ;main.c: 24:     while (!UART1_is_tx_ready());
 28375  00A2AA  ECAF  F051         	call	_UART1_is_tx_ready	;wreg free
 28376  00A2AE  0900               	iorlw	0
 28377  00A2B0  B4D8               	btfsc	status,2,c
 28378  00A2B2  D7FB               	goto	l16101
 28379                           
 28380                           ; BSR set to: 0
 28381                           ;main.c: 25:     UART1_Write(byte);
 28382  00A2B4  518C               	movf	putch@byte& (0+255),w,b
 28383  00A2B6  EC76  F04A         	call	_UART1_Write
 28384                           
 28385                           ; BSR set to: 57
 28386  00A2BA  0012               	return		;funcret
 28387  00A2BC                     __end_of_putch:
 28388                           	opt callstack 0
 28389                           
 28390 ;; *************** function _UART1_is_tx_ready *****************
 28391 ;; Defined at:
 28392 ;;		line 152 in file "mcc_generated_files/uart1.c"
 28393 ;; Parameters:    Size  Location     Type
 28394 ;;		None
 28395 ;; Auto vars:     Size  Location     Type
 28396 ;;		None
 28397 ;; Return value:  Size  Location     Type
 28398 ;;                  1    wreg      _Bool 
 28399 ;; Registers used:
 28400 ;;		wreg, status,2
 28401 ;; Tracked objects:
 28402 ;;		On entry : 0/0
 28403 ;;		On exit  : 3F/0
 28404 ;;		Unchanged: 0/0
 28405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28410 ;;Total ram usage:        0 bytes
 28411 ;; Hardware stack levels used:    1
 28412 ;; Hardware stack levels required when called:   17
 28413 ;; This function calls:
 28414 ;;		Nothing
 28415 ;; This function is called by:
 28416 ;;		_putch
 28417 ;; This function uses a non-reentrant model
 28418 ;;
 28419                           
 28420                           	psect	text125
 28421  00A35E                     __ptext125:
 28422                           	opt callstack 0
 28423  00A35E                     _UART1_is_tx_ready:
 28424                           	opt callstack 5
 28425                           
 28426                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 28427                           
 28428                           ; BSR set to: 57
 28429                           ;incstack = 0
 28430  00A35E  0100               	movlb	0	; () banked
 28431  00A360  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 28432  00A362  B4D8               	btfsc	status,2,c
 28433  00A364  D002               	goto	u15770
 28434  00A366  0E01               	movlw	1
 28435  00A368  0012               	return	
 28436  00A36A                     u15770:
 28437  00A36A  0E00               	movlw	0
 28438                           
 28439                           ; BSR set to: 0
 28440  00A36C  0012               	return		;funcret
 28441  00A36E                     __end_of_UART1_is_tx_ready:
 28442                           	opt callstack 0
 28443                           
 28444 ;; *************** function _UART1_Write *****************
 28445 ;; Defined at:
 28446 ;;		line 191 in file "mcc_generated_files/uart1.c"
 28447 ;; Parameters:    Size  Location     Type
 28448 ;;  txData          1    wreg     unsigned char 
 28449 ;; Auto vars:     Size  Location     Type
 28450 ;;  txData          1   43[BANK0 ] unsigned char 
 28451 ;; Return value:  Size  Location     Type
 28452 ;;                  1    wreg      void 
 28453 ;; Registers used:
 28454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28455 ;; Tracked objects:
 28456 ;;		On entry : 3F/0
 28457 ;;		On exit  : 3F/39
 28458 ;;		Unchanged: 0/0
 28459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28463 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28464 ;;Total ram usage:        1 bytes
 28465 ;; Hardware stack levels used:    1
 28466 ;; Hardware stack levels required when called:   17
 28467 ;; This function calls:
 28468 ;;		Nothing
 28469 ;; This function is called by:
 28470 ;;		_putch
 28471 ;; This function uses a non-reentrant model
 28472 ;;
 28473                           
 28474                           	psect	text126
 28475  0094EC                     __ptext126:
 28476                           	opt callstack 0
 28477  0094EC                     _UART1_Write:
 28478                           	opt callstack 5
 28479                           
 28480                           ; BSR set to: 0
 28481                           ;incstack = 0
 28482                           ;UART1_Write@txData stored from wreg
 28483  0094EC  6F8B               	movwf	UART1_Write@txData& (0+255),b
 28484  0094EE                     
 28485                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 28486                           
 28487                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 28488  0094EE  0100               	movlb	0	; () banked
 28489  0094F0  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 28490  0094F2  B4D8               	btfsc	status,2,c
 28491  0094F4  D7FC               	goto	l16083
 28492                           
 28493                           ; BSR set to: 0
 28494                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 28495  0094F6  0139               	movlb	57	; () banked
 28496  0094F8  B993               	btfsc	147,4,b	;volatile
 28497  0094FA  D004               	goto	l456
 28498                           
 28499                           ; BSR set to: 57
 28500                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 28501  0094FC  0060  F22F  FDEA   	movff	UART1_Write@txData,15850	;volatile
 28502                           
 28503                           ;mcc_generated_files/uart1.c: 200:     }
 28504  009502  D012               	goto	l16099
 28505  009504                     l456:
 28506                           
 28507                           ; BSR set to: 57
 28508                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 28509  009504  9993               	bcf	147,4,b	;volatile
 28510                           
 28511                           ; BSR set to: 57
 28512                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 28513  009506  0E50               	movlw	low _uart1TxBuffer
 28514  009508  0100               	movlb	0	; () banked
 28515  00950A  25CF               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 28516  00950C  6ED9               	movwf	fsr2l,c
 28517  00950E  6ADA               	clrf	fsr2h,c
 28518  009510  0E03               	movlw	high _uart1TxBuffer
 28519  009512  22DA               	addwfc	fsr2h,f,c
 28520  009514  0060  F22F  FFDF   	movff	UART1_Write@txData,indf2
 28521                           
 28522                           ; BSR set to: 0
 28523  00951A  2BCF               	incf	_uart1TxHead& (0+255),f,b	;volatile
 28524                           
 28525                           ; BSR set to: 0
 28526                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 28527  00951C  0E3F               	movlw	63
 28528  00951E  65CF               	cpfsgt	_uart1TxHead& (0+255),b
 28529  009520  D002               	goto	l16097
 28530                           
 28531                           ; BSR set to: 0
 28532                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 28533  009522  0E00               	movlw	0
 28534  009524  6FCF               	movwf	_uart1TxHead& (0+255),b	;volatile
 28535  009526                     l16097:
 28536                           
 28537                           ; BSR set to: 0
 28538                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 28539  009526  07D4               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 28540  009528                     l16099:
 28541                           
 28542                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 28543  009528  0139               	movlb	57	; () banked
 28544  00952A  8993               	bsf	147,4,b	;volatile
 28545                           
 28546                           ; BSR set to: 57
 28547  00952C  0012               	return		;funcret
 28548  00952E                     __end_of_UART1_Write:
 28549                           	opt callstack 0
 28550                           
 28551 ;; *************** function _abs *****************
 28552 ;; Defined at:
 28553 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 28554 ;; Parameters:    Size  Location     Type
 28555 ;;  a               2   61[BANK0 ] int 
 28556 ;; Auto vars:     Size  Location     Type
 28557 ;;		None
 28558 ;; Return value:  Size  Location     Type
 28559 ;;                  2   61[BANK0 ] int 
 28560 ;; Registers used:
 28561 ;;		wreg, status,2, status,0
 28562 ;; Tracked objects:
 28563 ;;		On entry : 3F/0
 28564 ;;		On exit  : 3F/0
 28565 ;;		Unchanged: 0/0
 28566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28571 ;;Total ram usage:        4 bytes
 28572 ;; Hardware stack levels used:    1
 28573 ;; Hardware stack levels required when called:   17
 28574 ;; This function calls:
 28575 ;;		Nothing
 28576 ;; This function is called by:
 28577 ;;		_dtoa
 28578 ;; This function uses a non-reentrant model
 28579 ;;
 28580                           
 28581                           	psect	text127
 28582  0095F0                     __ptext127:
 28583                           	opt callstack 0
 28584  0095F0                     _abs:
 28585                           	opt callstack 9
 28586                           
 28587                           ; BSR set to: 0
 28588                           
 28589                           ; BSR set to: 57
 28590                           ;incstack = 0
 28591  0095F0  BF9E               	btfsc	(abs@a+1)& (0+255),7,b
 28592  0095F2  D005               	goto	u16050
 28593  0095F4  519E               	movf	(abs@a+1)& (0+255),w,b
 28594  0095F6  E114               	bnz	l3852
 28595  0095F8  059D               	decf	abs@a& (0+255),w,b
 28596  0095FA  B0D8               	btfsc	status,0,c
 28597  0095FC  D011               	goto	l3852
 28598  0095FE                     u16050:
 28599                           
 28600                           ; BSR set to: 0
 28601  0095FE  0060  F274  F09F   	movff	abs@a,??_abs
 28602  009604  0060  F278  F0A0   	movff	abs@a+1,??_abs+1
 28603  00960A  1F9F               	comf	??_abs& (0+255),f,b
 28604  00960C  1FA0               	comf	(??_abs+1)& (0+255),f,b
 28605  00960E  4B9F               	infsnz	??_abs& (0+255),f,b
 28606  009610  2BA0               	incf	(??_abs+1)& (0+255),f,b
 28607  009612  0060  F27C  F09D   	movff	??_abs,?_abs
 28608  009618  0060  F280  F09E   	movff	??_abs+1,?_abs+1
 28609  00961E  0012               	return	
 28610  009620                     l3852:
 28611                           
 28612                           ; BSR set to: 0
 28613  009620  0060  F274  F09D   	movff	abs@a,?_abs
 28614  009626  0060  F278  F09E   	movff	abs@a+1,?_abs+1
 28615                           
 28616                           ; BSR set to: 0
 28617  00962C  0012               	return		;funcret
 28618  00962E                     __end_of_abs:
 28619                           	opt callstack 0
 28620                           
 28621 ;; *************** function ___aomod *****************
 28622 ;; Defined at:
 28623 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 28624 ;; Parameters:    Size  Location     Type
 28625 ;;  dividend        8   43[BANK0 ] long long 
 28626 ;;  divisor         8   51[BANK0 ] long long 
 28627 ;; Auto vars:     Size  Location     Type
 28628 ;;  sign            1   60[BANK0 ] unsigned char 
 28629 ;;  counter         1   59[BANK0 ] unsigned char 
 28630 ;; Return value:  Size  Location     Type
 28631 ;;                  8   43[BANK0 ] long long 
 28632 ;; Registers used:
 28633 ;;		wreg, status,2, status,0
 28634 ;; Tracked objects:
 28635 ;;		On entry : 3F/0
 28636 ;;		On exit  : 3F/0
 28637 ;;		Unchanged: 0/0
 28638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28639 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28640 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28642 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28643 ;;Total ram usage:       18 bytes
 28644 ;; Hardware stack levels used:    1
 28645 ;; Hardware stack levels required when called:   17
 28646 ;; This function calls:
 28647 ;;		Nothing
 28648 ;; This function is called by:
 28649 ;;		_dtoa
 28650 ;; This function uses a non-reentrant model
 28651 ;;
 28652                           
 28653                           	psect	text128
 28654  00744E                     __ptext128:
 28655                           	opt callstack 0
 28656  00744E                     ___aomod:
 28657                           	opt callstack 9
 28658                           
 28659                           ; BSR set to: 0
 28660                           
 28661                           ; BSR set to: 0
 28662                           ;incstack = 0
 28663  00744E  0E00               	movlw	0
 28664  007450  6F9C               	movwf	___aomod@sign& (0+255),b
 28665                           
 28666                           ; BSR set to: 0
 28667  007452  AF92               	btfss	(___aomod@dividend+7)& (0+255),7,b
 28668  007454  D012               	goto	l16291
 28669                           
 28670                           ; BSR set to: 0
 28671  007456  1F92               	comf	(___aomod@dividend+7)& (0+255),f,b
 28672  007458  1F91               	comf	(___aomod@dividend+6)& (0+255),f,b
 28673  00745A  1F90               	comf	(___aomod@dividend+5)& (0+255),f,b
 28674  00745C  1F8F               	comf	(___aomod@dividend+4)& (0+255),f,b
 28675  00745E  1F8E               	comf	(___aomod@dividend+3)& (0+255),f,b
 28676  007460  1F8D               	comf	(___aomod@dividend+2)& (0+255),f,b
 28677  007462  1F8C               	comf	(___aomod@dividend+1)& (0+255),f,b
 28678  007464  6D8B               	negf	___aomod@dividend& (0+255),b
 28679  007466  0E00               	movlw	0
 28680  007468  238C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 28681  00746A  238D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 28682  00746C  238E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 28683  00746E  238F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 28684  007470  2390               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 28685  007472  2391               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 28686  007474  2392               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 28687                           
 28688                           ; BSR set to: 0
 28689  007476  0E01               	movlw	1
 28690  007478  6F9C               	movwf	___aomod@sign& (0+255),b
 28691  00747A                     l16291:
 28692                           
 28693                           ; BSR set to: 0
 28694  00747A  AF9A               	btfss	(___aomod@divisor+7)& (0+255),7,b
 28695  00747C  D010               	goto	l16295
 28696                           
 28697                           ; BSR set to: 0
 28698  00747E  1F9A               	comf	(___aomod@divisor+7)& (0+255),f,b
 28699  007480  1F99               	comf	(___aomod@divisor+6)& (0+255),f,b
 28700  007482  1F98               	comf	(___aomod@divisor+5)& (0+255),f,b
 28701  007484  1F97               	comf	(___aomod@divisor+4)& (0+255),f,b
 28702  007486  1F96               	comf	(___aomod@divisor+3)& (0+255),f,b
 28703  007488  1F95               	comf	(___aomod@divisor+2)& (0+255),f,b
 28704  00748A  1F94               	comf	(___aomod@divisor+1)& (0+255),f,b
 28705  00748C  6D93               	negf	___aomod@divisor& (0+255),b
 28706  00748E  0E00               	movlw	0
 28707  007490  2394               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 28708  007492  2395               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 28709  007494  2396               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 28710  007496  2397               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 28711  007498  2398               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 28712  00749A  2399               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 28713  00749C  239A               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 28714  00749E                     l16295:
 28715                           
 28716                           ; BSR set to: 0
 28717  00749E  5193               	movf	___aomod@divisor& (0+255),w,b
 28718  0074A0  1194               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 28719  0074A2  1195               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 28720  0074A4  1196               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 28721  0074A6  1197               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 28722  0074A8  1198               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 28723  0074AA  1199               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 28724  0074AC  119A               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 28725  0074AE  B4D8               	btfsc	status,2,c
 28726  0074B0  D03C               	goto	l16311
 28727                           
 28728                           ; BSR set to: 0
 28729  0074B2  0E01               	movlw	1
 28730  0074B4  6F9B               	movwf	___aomod@counter& (0+255),b
 28731  0074B6  D00A               	goto	l16301
 28732  0074B8                     l16299:
 28733                           
 28734                           ; BSR set to: 0
 28735  0074B8  90D8               	bcf	status,0,c
 28736  0074BA  3793               	rlcf	___aomod@divisor& (0+255),f,b
 28737  0074BC  3794               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 28738  0074BE  3795               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 28739  0074C0  3796               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 28740  0074C2  3797               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 28741  0074C4  3798               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 28742  0074C6  3799               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 28743  0074C8  379A               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 28744  0074CA  2B9B               	incf	___aomod@counter& (0+255),f,b
 28745  0074CC                     l16301:
 28746                           
 28747                           ; BSR set to: 0
 28748  0074CC  AF9A               	btfss	(___aomod@divisor+7)& (0+255),7,b
 28749  0074CE  D7F4               	goto	l16299
 28750  0074D0                     u16250:
 28751                           
 28752                           ; BSR set to: 0
 28753  0074D0  5193               	movf	___aomod@divisor& (0+255),w,b
 28754  0074D2  5D8B               	subwf	___aomod@dividend& (0+255),w,b
 28755  0074D4  5194               	movf	(___aomod@divisor+1)& (0+255),w,b
 28756  0074D6  598C               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 28757  0074D8  5195               	movf	(___aomod@divisor+2)& (0+255),w,b
 28758  0074DA  598D               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 28759  0074DC  5196               	movf	(___aomod@divisor+3)& (0+255),w,b
 28760  0074DE  598E               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 28761  0074E0  5197               	movf	(___aomod@divisor+4)& (0+255),w,b
 28762  0074E2  598F               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 28763  0074E4  5198               	movf	(___aomod@divisor+5)& (0+255),w,b
 28764  0074E6  5990               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 28765  0074E8  5199               	movf	(___aomod@divisor+6)& (0+255),w,b
 28766  0074EA  5991               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 28767  0074EC  519A               	movf	(___aomod@divisor+7)& (0+255),w,b
 28768  0074EE  5992               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 28769  0074F0  A0D8               	btfss	status,0,c
 28770  0074F2  D010               	goto	l16307
 28771                           
 28772                           ; BSR set to: 0
 28773  0074F4  5193               	movf	___aomod@divisor& (0+255),w,b
 28774  0074F6  5F8B               	subwf	___aomod@dividend& (0+255),f,b
 28775  0074F8  5194               	movf	(___aomod@divisor+1)& (0+255),w,b
 28776  0074FA  5B8C               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 28777  0074FC  5195               	movf	(___aomod@divisor+2)& (0+255),w,b
 28778  0074FE  5B8D               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 28779  007500  5196               	movf	(___aomod@divisor+3)& (0+255),w,b
 28780  007502  5B8E               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 28781  007504  5197               	movf	(___aomod@divisor+4)& (0+255),w,b
 28782  007506  5B8F               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 28783  007508  5198               	movf	(___aomod@divisor+5)& (0+255),w,b
 28784  00750A  5B90               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 28785  00750C  5199               	movf	(___aomod@divisor+6)& (0+255),w,b
 28786  00750E  5B91               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 28787  007510  519A               	movf	(___aomod@divisor+7)& (0+255),w,b
 28788  007512  5B92               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 28789  007514                     l16307:
 28790                           
 28791                           ; BSR set to: 0
 28792  007514  90D8               	bcf	status,0,c
 28793  007516  339A               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 28794  007518  3399               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 28795  00751A  3398               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 28796  00751C  3397               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 28797  00751E  3396               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 28798  007520  3395               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 28799  007522  3394               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 28800  007524  3393               	rrcf	___aomod@divisor& (0+255),f,b
 28801                           
 28802                           ; BSR set to: 0
 28803  007526  2F9B               	decfsz	___aomod@counter& (0+255),f,b
 28804  007528  D7D3               	goto	u16250
 28805  00752A                     l16311:
 28806                           
 28807                           ; BSR set to: 0
 28808  00752A  519C               	movf	___aomod@sign& (0+255),w,b
 28809  00752C  B4D8               	btfsc	status,2,c
 28810  00752E  D010               	goto	l16315
 28811                           
 28812                           ; BSR set to: 0
 28813  007530  1F92               	comf	(___aomod@dividend+7)& (0+255),f,b
 28814  007532  1F91               	comf	(___aomod@dividend+6)& (0+255),f,b
 28815  007534  1F90               	comf	(___aomod@dividend+5)& (0+255),f,b
 28816  007536  1F8F               	comf	(___aomod@dividend+4)& (0+255),f,b
 28817  007538  1F8E               	comf	(___aomod@dividend+3)& (0+255),f,b
 28818  00753A  1F8D               	comf	(___aomod@dividend+2)& (0+255),f,b
 28819  00753C  1F8C               	comf	(___aomod@dividend+1)& (0+255),f,b
 28820  00753E  6D8B               	negf	___aomod@dividend& (0+255),b
 28821  007540  0E00               	movlw	0
 28822  007542  238C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 28823  007544  238D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 28824  007546  238E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 28825  007548  238F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 28826  00754A  2390               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 28827  00754C  2391               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 28828  00754E  2392               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 28829  007550                     l16315:
 28830                           
 28831                           ; BSR set to: 0
 28832  007550  0060  F22C  F08B   	movff	___aomod@dividend,?___aomod
 28833  007556  0060  F230  F08C   	movff	___aomod@dividend+1,?___aomod+1
 28834  00755C  0060  F234  F08D   	movff	___aomod@dividend+2,?___aomod+2
 28835  007562  0060  F238  F08E   	movff	___aomod@dividend+3,?___aomod+3
 28836  007568  0060  F23C  F08F   	movff	___aomod@dividend+4,?___aomod+4
 28837  00756E  0060  F240  F090   	movff	___aomod@dividend+5,?___aomod+5
 28838  007574  0060  F244  F091   	movff	___aomod@dividend+6,?___aomod+6
 28839  00757A  0060  F248  F092   	movff	___aomod@dividend+7,?___aomod+7
 28840                           
 28841                           ; BSR set to: 0
 28842  007580  0012               	return		;funcret
 28843  007582                     __end_of___aomod:
 28844                           	opt callstack 0
 28845                           
 28846 ;; *************** function ___aodiv *****************
 28847 ;; Defined at:
 28848 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 28849 ;; Parameters:    Size  Location     Type
 28850 ;;  dividend        8   43[BANK0 ] long long 
 28851 ;;  divisor         8   51[BANK0 ] long long 
 28852 ;; Auto vars:     Size  Location     Type
 28853 ;;  quotient        8   61[BANK0 ] long long 
 28854 ;;  sign            1   60[BANK0 ] unsigned char 
 28855 ;;  counter         1   59[BANK0 ] unsigned char 
 28856 ;; Return value:  Size  Location     Type
 28857 ;;                  8   43[BANK0 ] long long 
 28858 ;; Registers used:
 28859 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28860 ;; Tracked objects:
 28861 ;;		On entry : 3F/0
 28862 ;;		On exit  : 3F/0
 28863 ;;		Unchanged: 0/0
 28864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28865 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28866 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28868 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28869 ;;Total ram usage:       26 bytes
 28870 ;; Hardware stack levels used:    1
 28871 ;; Hardware stack levels required when called:   17
 28872 ;; This function calls:
 28873 ;;		Nothing
 28874 ;; This function is called by:
 28875 ;;		_dtoa
 28876 ;; This function uses a non-reentrant model
 28877 ;;
 28878                           
 28879                           	psect	text129
 28880  00719E                     __ptext129:
 28881                           	opt callstack 0
 28882  00719E                     ___aodiv:
 28883                           	opt callstack 9
 28884                           
 28885                           ; BSR set to: 0
 28886                           
 28887                           ; BSR set to: 0
 28888                           ;incstack = 0
 28889  00719E  0E00               	movlw	0
 28890  0071A0  6F9C               	movwf	___aodiv@sign& (0+255),b
 28891                           
 28892                           ; BSR set to: 0
 28893  0071A2  AF9A               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 28894  0071A4  D012               	goto	l16247
 28895                           
 28896                           ; BSR set to: 0
 28897  0071A6  1F9A               	comf	(___aodiv@divisor+7)& (0+255),f,b
 28898  0071A8  1F99               	comf	(___aodiv@divisor+6)& (0+255),f,b
 28899  0071AA  1F98               	comf	(___aodiv@divisor+5)& (0+255),f,b
 28900  0071AC  1F97               	comf	(___aodiv@divisor+4)& (0+255),f,b
 28901  0071AE  1F96               	comf	(___aodiv@divisor+3)& (0+255),f,b
 28902  0071B0  1F95               	comf	(___aodiv@divisor+2)& (0+255),f,b
 28903  0071B2  1F94               	comf	(___aodiv@divisor+1)& (0+255),f,b
 28904  0071B4  6D93               	negf	___aodiv@divisor& (0+255),b
 28905  0071B6  0E00               	movlw	0
 28906  0071B8  2394               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 28907  0071BA  2395               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 28908  0071BC  2396               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 28909  0071BE  2397               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 28910  0071C0  2398               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 28911  0071C2  2399               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 28912  0071C4  239A               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 28913                           
 28914                           ; BSR set to: 0
 28915  0071C6  0E01               	movlw	1
 28916  0071C8  6F9C               	movwf	___aodiv@sign& (0+255),b
 28917  0071CA                     l16247:
 28918                           
 28919                           ; BSR set to: 0
 28920  0071CA  AF92               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 28921  0071CC  D012               	goto	l16253
 28922                           
 28923                           ; BSR set to: 0
 28924  0071CE  1F92               	comf	(___aodiv@dividend+7)& (0+255),f,b
 28925  0071D0  1F91               	comf	(___aodiv@dividend+6)& (0+255),f,b
 28926  0071D2  1F90               	comf	(___aodiv@dividend+5)& (0+255),f,b
 28927  0071D4  1F8F               	comf	(___aodiv@dividend+4)& (0+255),f,b
 28928  0071D6  1F8E               	comf	(___aodiv@dividend+3)& (0+255),f,b
 28929  0071D8  1F8D               	comf	(___aodiv@dividend+2)& (0+255),f,b
 28930  0071DA  1F8C               	comf	(___aodiv@dividend+1)& (0+255),f,b
 28931  0071DC  6D8B               	negf	___aodiv@dividend& (0+255),b
 28932  0071DE  0E00               	movlw	0
 28933  0071E0  238C               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 28934  0071E2  238D               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 28935  0071E4  238E               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 28936  0071E6  238F               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 28937  0071E8  2390               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 28938  0071EA  2391               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 28939  0071EC  2392               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 28940                           
 28941                           ; BSR set to: 0
 28942  0071EE  0E01               	movlw	1
 28943  0071F0  1B9C               	xorwf	___aodiv@sign& (0+255),f,b
 28944  0071F2                     l16253:
 28945                           
 28946                           ; BSR set to: 0
 28947  0071F2  EE20  F09D         	lfsr	2,___aodiv@quotient
 28948  0071F6  0E07               	movlw	7
 28949  0071F8                     u16171:
 28950  0071F8  6ADE               	clrf	postinc2,c
 28951  0071FA  06E8               	decf	wreg,f,c
 28952  0071FC  E2FD               	bc	u16171
 28953                           
 28954                           ; BSR set to: 0
 28955  0071FE  5193               	movf	___aodiv@divisor& (0+255),w,b
 28956  007200  1194               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 28957  007202  1195               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 28958  007204  1196               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 28959  007206  1197               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 28960  007208  1198               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 28961  00720A  1199               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 28962  00720C  119A               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 28963  00720E  B4D8               	btfsc	status,2,c
 28964  007210  D046               	goto	l16275
 28965                           
 28966                           ; BSR set to: 0
 28967  007212  0E01               	movlw	1
 28968  007214  6F9B               	movwf	___aodiv@counter& (0+255),b
 28969  007216  D00A               	goto	l16261
 28970  007218                     l16259:
 28971                           
 28972                           ; BSR set to: 0
 28973  007218  90D8               	bcf	status,0,c
 28974  00721A  3793               	rlcf	___aodiv@divisor& (0+255),f,b
 28975  00721C  3794               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 28976  00721E  3795               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 28977  007220  3796               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 28978  007222  3797               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 28979  007224  3798               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 28980  007226  3799               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 28981  007228  379A               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 28982  00722A  2B9B               	incf	___aodiv@counter& (0+255),f,b
 28983  00722C                     l16261:
 28984                           
 28985                           ; BSR set to: 0
 28986  00722C  AF9A               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 28987  00722E  D7F4               	goto	l16259
 28988  007230                     u16190:
 28989                           
 28990                           ; BSR set to: 0
 28991  007230  90D8               	bcf	status,0,c
 28992  007232  379D               	rlcf	___aodiv@quotient& (0+255),f,b
 28993  007234  379E               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 28994  007236  379F               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 28995  007238  37A0               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 28996  00723A  37A1               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 28997  00723C  37A2               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 28998  00723E  37A3               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 28999  007240  37A4               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 29000                           
 29001                           ; BSR set to: 0
 29002  007242  5193               	movf	___aodiv@divisor& (0+255),w,b
 29003  007244  5D8B               	subwf	___aodiv@dividend& (0+255),w,b
 29004  007246  5194               	movf	(___aodiv@divisor+1)& (0+255),w,b
 29005  007248  598C               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 29006  00724A  5195               	movf	(___aodiv@divisor+2)& (0+255),w,b
 29007  00724C  598D               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 29008  00724E  5196               	movf	(___aodiv@divisor+3)& (0+255),w,b
 29009  007250  598E               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 29010  007252  5197               	movf	(___aodiv@divisor+4)& (0+255),w,b
 29011  007254  598F               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 29012  007256  5198               	movf	(___aodiv@divisor+5)& (0+255),w,b
 29013  007258  5990               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 29014  00725A  5199               	movf	(___aodiv@divisor+6)& (0+255),w,b
 29015  00725C  5991               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 29016  00725E  519A               	movf	(___aodiv@divisor+7)& (0+255),w,b
 29017  007260  5992               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 29018  007262  A0D8               	btfss	status,0,c
 29019  007264  D011               	goto	l16271
 29020                           
 29021                           ; BSR set to: 0
 29022  007266  5193               	movf	___aodiv@divisor& (0+255),w,b
 29023  007268  5F8B               	subwf	___aodiv@dividend& (0+255),f,b
 29024  00726A  5194               	movf	(___aodiv@divisor+1)& (0+255),w,b
 29025  00726C  5B8C               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 29026  00726E  5195               	movf	(___aodiv@divisor+2)& (0+255),w,b
 29027  007270  5B8D               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 29028  007272  5196               	movf	(___aodiv@divisor+3)& (0+255),w,b
 29029  007274  5B8E               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 29030  007276  5197               	movf	(___aodiv@divisor+4)& (0+255),w,b
 29031  007278  5B8F               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 29032  00727A  5198               	movf	(___aodiv@divisor+5)& (0+255),w,b
 29033  00727C  5B90               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 29034  00727E  5199               	movf	(___aodiv@divisor+6)& (0+255),w,b
 29035  007280  5B91               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 29036  007282  519A               	movf	(___aodiv@divisor+7)& (0+255),w,b
 29037  007284  5B92               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 29038                           
 29039                           ; BSR set to: 0
 29040  007286  819D               	bsf	___aodiv@quotient& (0+255),0,b
 29041  007288                     l16271:
 29042                           
 29043                           ; BSR set to: 0
 29044  007288  90D8               	bcf	status,0,c
 29045  00728A  339A               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 29046  00728C  3399               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 29047  00728E  3398               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 29048  007290  3397               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 29049  007292  3396               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 29050  007294  3395               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 29051  007296  3394               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 29052  007298  3393               	rrcf	___aodiv@divisor& (0+255),f,b
 29053                           
 29054                           ; BSR set to: 0
 29055  00729A  2F9B               	decfsz	___aodiv@counter& (0+255),f,b
 29056  00729C  D7C9               	goto	u16190
 29057  00729E                     l16275:
 29058                           
 29059                           ; BSR set to: 0
 29060  00729E  519C               	movf	___aodiv@sign& (0+255),w,b
 29061  0072A0  B4D8               	btfsc	status,2,c
 29062  0072A2  D010               	goto	l16279
 29063                           
 29064                           ; BSR set to: 0
 29065  0072A4  1FA4               	comf	(___aodiv@quotient+7)& (0+255),f,b
 29066  0072A6  1FA3               	comf	(___aodiv@quotient+6)& (0+255),f,b
 29067  0072A8  1FA2               	comf	(___aodiv@quotient+5)& (0+255),f,b
 29068  0072AA  1FA1               	comf	(___aodiv@quotient+4)& (0+255),f,b
 29069  0072AC  1FA0               	comf	(___aodiv@quotient+3)& (0+255),f,b
 29070  0072AE  1F9F               	comf	(___aodiv@quotient+2)& (0+255),f,b
 29071  0072B0  1F9E               	comf	(___aodiv@quotient+1)& (0+255),f,b
 29072  0072B2  6D9D               	negf	___aodiv@quotient& (0+255),b
 29073  0072B4  0E00               	movlw	0
 29074  0072B6  239E               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 29075  0072B8  239F               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 29076  0072BA  23A0               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 29077  0072BC  23A1               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 29078  0072BE  23A2               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 29079  0072C0  23A3               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 29080  0072C2  23A4               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 29081  0072C4                     l16279:
 29082                           
 29083                           ; BSR set to: 0
 29084  0072C4  0060  F274  F08B   	movff	___aodiv@quotient,?___aodiv
 29085  0072CA  0060  F278  F08C   	movff	___aodiv@quotient+1,?___aodiv+1
 29086  0072D0  0060  F27C  F08D   	movff	___aodiv@quotient+2,?___aodiv+2
 29087  0072D6  0060  F280  F08E   	movff	___aodiv@quotient+3,?___aodiv+3
 29088  0072DC  0060  F284  F08F   	movff	___aodiv@quotient+4,?___aodiv+4
 29089  0072E2  0060  F288  F090   	movff	___aodiv@quotient+5,?___aodiv+5
 29090  0072E8  0060  F28C  F091   	movff	___aodiv@quotient+6,?___aodiv+6
 29091  0072EE  0060  F290  F092   	movff	___aodiv@quotient+7,?___aodiv+7
 29092                           
 29093                           ; BSR set to: 0
 29094  0072F4  0012               	return		;funcret
 29095  0072F6                     __end_of___aodiv:
 29096                           	opt callstack 0
 29097                           
 29098 ;; *************** function _atoi *****************
 29099 ;; Defined at:
 29100 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 29101 ;; Parameters:    Size  Location     Type
 29102 ;;  s               2   65[BANK0 ] PTR const unsigned char 
 29103 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 29104 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 29105 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 29106 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 29107 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 29108 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 29109 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 29110 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 29111 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 29112 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 29113 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 29114 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 29115 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 29116 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 29117 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 29118 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 29119 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 29120 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 29121 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 29122 ;;		 -> STR_1(27), 
 29123 ;; Auto vars:     Size  Location     Type
 29124 ;;  n               2    7[BANK1 ] int 
 29125 ;;  neg             2    0[BANK1 ] int 
 29126 ;; Return value:  Size  Location     Type
 29127 ;;                  2   65[BANK0 ] int 
 29128 ;; Registers used:
 29129 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29130 ;; Tracked objects:
 29131 ;;		On entry : 3F/0
 29132 ;;		On exit  : 3E/0
 29133 ;;		Unchanged: 0/0
 29134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29136 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29137 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29138 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29139 ;;Total ram usage:       15 bytes
 29140 ;; Hardware stack levels used:    1
 29141 ;; Hardware stack levels required when called:   18
 29142 ;; This function calls:
 29143 ;;		___wmul
 29144 ;;		_isdigit
 29145 ;;		_isspace
 29146 ;; This function is called by:
 29147 ;;		_vfpfcnvrt
 29148 ;; This function uses a non-reentrant model
 29149 ;;
 29150                           
 29151                           	psect	text130
 29152  006D3A                     __ptext130:
 29153                           	opt callstack 0
 29154  006D3A                     _atoi:
 29155                           	opt callstack 9
 29156                           
 29157                           ; BSR set to: 0
 29158                           
 29159                           ; BSR set to: 0
 29160                           ;incstack = 0
 29161  006D3A  0E00               	movlw	0
 29162  006D3C  0101               	movlb	1	; () banked
 29163  006D3E  6F08               	movwf	(atoi@n+1)& (0+255),b
 29164  006D40  0E00               	movlw	0
 29165  006D42  6F07               	movwf	atoi@n& (0+255),b
 29166  006D44  0E00               	movlw	0
 29167  006D46  6F01               	movwf	(atoi@neg+1)& (0+255),b
 29168  006D48  0E00               	movlw	0
 29169  006D4A  6F00               	movwf	atoi@neg& (0+255),b
 29170  006D4C  D003               	goto	l16485
 29171  006D4E                     l16483:
 29172                           
 29173                           ; BSR set to: 1
 29174  006D4E  0100               	movlb	0	; () banked
 29175  006D50  4BA1               	infsnz	atoi@s& (0+255),f,b
 29176  006D52  2BA2               	incf	(atoi@s+1)& (0+255),f,b
 29177  006D54                     l16485:
 29178  006D54  0E01               	movlw	1
 29179  006D56  0101               	movlb	1	; () banked
 29180  006D58  6F06               	movwf	_atoi$5376& (0+255),b
 29181                           
 29182                           ; BSR set to: 1
 29183  006D5A  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29184  006D60  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29185  006D66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29186  006D66  6AF8               	clrf	tblptru,c
 29187  006D68                     	endif
 29188  006D68                     	if	0	;tblptru may be non-zero
 29189  006D68                     	endif
 29190  006D68  0008               	tblrd		*
 29191  006D6A  50F5               	movf	tablat,w,c
 29192  006D6C  0A20               	xorlw	32
 29193  006D6E  B4D8               	btfsc	status,2,c
 29194  006D70  D01D               	goto	l16493
 29195                           
 29196                           ; BSR set to: 1
 29197  006D72  0EF7               	movlw	247
 29198  006D74  0100               	movlb	0	; () banked
 29199  006D76  6FA3               	movwf	??_atoi& (0+255),b
 29200  006D78  0EFF               	movlw	255
 29201  006D7A  6FA4               	movwf	(??_atoi+1)& (0+255),b
 29202  006D7C  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29203  006D82  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29204  006D88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29205  006D88  6AF8               	clrf	tblptru,c
 29206  006D8A                     	endif
 29207  006D8A                     	if	0	;tblptru may be non-zero
 29208  006D8A                     	endif
 29209  006D8A  0008               	tblrd		*
 29210  006D8C  50F5               	movf	tablat,w,c
 29211  006D8E  6FA5               	movwf	(??_atoi+2)& (0+255),b
 29212  006D90  6BA6               	clrf	(??_atoi+3)& (0+255),b
 29213  006D92  51A3               	movf	??_atoi& (0+255),w,b
 29214  006D94  27A5               	addwf	(??_atoi+2)& (0+255),f,b
 29215  006D96  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29216  006D98  23A6               	addwfc	(??_atoi+3)& (0+255),f,b
 29217  006D9A  51A6               	movf	(??_atoi+3)& (0+255),w,b
 29218  006D9C  E104               	bnz	u16670
 29219  006D9E  0E05               	movlw	5
 29220  006DA0  5DA5               	subwf	(??_atoi+2)& (0+255),w,b
 29221  006DA2  A0D8               	btfss	status,0,c
 29222  006DA4  D003               	goto	l16493
 29223  006DA6                     u16670:
 29224                           
 29225                           ; BSR set to: 0
 29226  006DA6  0E00               	movlw	0
 29227  006DA8  0101               	movlb	1	; () banked
 29228  006DAA  6F06               	movwf	_atoi$5376& (0+255),b
 29229  006DAC                     l16493:
 29230  006DAC  0060  F418  F102   	movff	_atoi$5376,_atoi$5375
 29231  006DB2  0101               	movlb	1	; () banked
 29232  006DB4  6B03               	clrf	(_atoi$5375+1)& (0+255),b
 29233                           
 29234                           ; BSR set to: 1
 29235  006DB6  5102               	movf	_atoi$5375& (0+255),w,b
 29236  006DB8  1103               	iorwf	(_atoi$5375+1)& (0+255),w,b
 29237  006DBA  B4D8               	btfsc	status,2,c
 29238  006DBC  D00A               	goto	l16503
 29239  006DBE  D7C7               	goto	l16483
 29240  006DC0                     l16499:
 29241                           
 29242                           ; BSR set to: 0
 29243  006DC0  0E00               	movlw	0
 29244  006DC2  0101               	movlb	1	; () banked
 29245  006DC4  6F01               	movwf	(atoi@neg+1)& (0+255),b
 29246  006DC6  0E01               	movlw	1
 29247  006DC8  6F00               	movwf	atoi@neg& (0+255),b
 29248  006DCA                     l16501:
 29249  006DCA  0100               	movlb	0	; () banked
 29250  006DCC  4BA1               	infsnz	atoi@s& (0+255),f,b
 29251  006DCE  2BA2               	incf	(atoi@s+1)& (0+255),f,b
 29252  006DD0  D03B               	goto	l16509
 29253  006DD2                     l16503:
 29254                           
 29255                           ; BSR set to: 1
 29256  006DD2  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29257  006DD8  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29258  006DDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29259  006DDE  6AF8               	clrf	tblptru,c
 29260  006DE0                     	endif
 29261  006DE0                     	if	0	;tblptru may be non-zero
 29262  006DE0                     	endif
 29263  006DE0  0008               	tblrd		*
 29264  006DE2  50F5               	movf	tablat,w,c
 29265  006DE4  0100               	movlb	0	; () banked
 29266  006DE6  6FA3               	movwf	??_atoi& (0+255),b
 29267  006DE8  6BA4               	clrf	(??_atoi+1)& (0+255),b
 29268                           
 29269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29270                           ; Switch size 1, requested type "simple"
 29271                           ; Number of cases is 1, Range of values is 0 to 0
 29272                           ; switch strategies available:
 29273                           ; Name         Instructions Cycles
 29274                           ; simple_byte            4     3 (average)
 29275                           ;	Chosen strategy is simple_byte
 29276  006DEA  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29277  006DEC  0A00               	xorlw	0	; case 0
 29278  006DEE  A4D8               	btfss	status,2,c
 29279  006DF0  D02B               	goto	l16509
 29280                           
 29281                           ; BSR set to: 0
 29282                           ; Switch size 1, requested type "simple"
 29283                           ; Number of cases is 2, Range of values is 43 to 45
 29284                           ; switch strategies available:
 29285                           ; Name         Instructions Cycles
 29286                           ; simple_byte            7     4 (average)
 29287                           ;	Chosen strategy is simple_byte
 29288  006DF2  51A3               	movf	??_atoi& (0+255),w,b
 29289  006DF4  0A2B               	xorlw	43	; case 43
 29290  006DF6  B4D8               	btfsc	status,2,c
 29291  006DF8  D7E8               	goto	l16501
 29292  006DFA  0A06               	xorlw	6	; case 45
 29293  006DFC  B4D8               	btfsc	status,2,c
 29294  006DFE  D7E0               	goto	l16499
 29295  006E00  D023               	goto	l16509
 29296  006E02                     l16505:
 29297                           
 29298                           ; BSR set to: 1
 29299  006E02  0060  F41C  F09B   	movff	atoi@n,___wmul@multiplier
 29300  006E08  0060  F420  F09C   	movff	atoi@n+1,___wmul@multiplier+1
 29301  006E0E  0E00               	movlw	0
 29302  006E10  0100               	movlb	0	; () banked
 29303  006E12  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29304  006E14  0E0A               	movlw	10
 29305  006E16  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 29306  006E18  ECA2  F04D         	call	___wmul	;wreg free
 29307  006E1C  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29308  006E22  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29309  006E28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29310  006E28  6AF8               	clrf	tblptru,c
 29311  006E2A                     	endif
 29312  006E2A                     	if	0	;tblptru may be non-zero
 29313  006E2A                     	endif
 29314  006E2A  0008               	tblrd		*
 29315  006E2C  50F5               	movf	tablat,w,c
 29316  006E2E  5F9B               	subwf	?___wmul& (0+255),f,b
 29317  006E30  0E00               	movlw	0
 29318  006E32  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
 29319  006E34  0E30               	movlw	48
 29320  006E36  259B               	addwf	?___wmul& (0+255),w,b
 29321  006E38  0101               	movlb	1	; () banked
 29322  006E3A  6F07               	movwf	atoi@n& (0+255),b
 29323  006E3C  0E00               	movlw	0
 29324  006E3E  0100               	movlb	0	; () banked
 29325  006E40  219C               	addwfc	(?___wmul+1)& (0+255),w,b
 29326  006E42  0101               	movlb	1	; () banked
 29327  006E44  6F08               	movwf	(atoi@n+1)& (0+255),b
 29328  006E46  D7C1               	goto	l16501
 29329  006E48                     l16509:
 29330                           
 29331                           ; BSR set to: 0
 29332  006E48  0ED0               	movlw	208
 29333  006E4A  6FA3               	movwf	??_atoi& (0+255),b
 29334  006E4C  0EFF               	movlw	255
 29335  006E4E  6FA4               	movwf	(??_atoi+1)& (0+255),b
 29336  006E50  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29337  006E56  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29338  006E5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29339  006E5C  6AF8               	clrf	tblptru,c
 29340  006E5E                     	endif
 29341  006E5E                     	if	0	;tblptru may be non-zero
 29342  006E5E                     	endif
 29343  006E5E  0008               	tblrd		*
 29344  006E60  50F5               	movf	tablat,w,c
 29345  006E62  6FA5               	movwf	(??_atoi+2)& (0+255),b
 29346  006E64  6BA6               	clrf	(??_atoi+3)& (0+255),b
 29347  006E66  51A3               	movf	??_atoi& (0+255),w,b
 29348  006E68  27A5               	addwf	(??_atoi+2)& (0+255),f,b
 29349  006E6A  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29350  006E6C  23A6               	addwfc	(??_atoi+3)& (0+255),f,b
 29351  006E6E  51A6               	movf	(??_atoi+3)& (0+255),w,b
 29352  006E70  E106               	bnz	u16690
 29353  006E72  0E0A               	movlw	10
 29354  006E74  5DA5               	subwf	(??_atoi+2)& (0+255),w,b
 29355  006E76  B0D8               	btfsc	status,0,c
 29356  006E78  D002               	goto	u16690
 29357  006E7A  0E01               	movlw	1
 29358  006E7C  D001               	goto	u16700
 29359  006E7E                     u16690:
 29360  006E7E  0E00               	movlw	0
 29361  006E80                     u16700:
 29362  006E80  0101               	movlb	1	; () banked
 29363  006E82  6F04               	movwf	_atoi$5377& (0+255),b
 29364  006E84  6B05               	clrf	(_atoi$5377+1)& (0+255),b
 29365                           
 29366                           ; BSR set to: 1
 29367  006E86  5104               	movf	_atoi$5377& (0+255),w,b
 29368  006E88  1105               	iorwf	(_atoi$5377+1)& (0+255),w,b
 29369  006E8A  A4D8               	btfss	status,2,c
 29370  006E8C  D7BA               	goto	l16505
 29371                           
 29372                           ; BSR set to: 1
 29373  006E8E  5100               	movf	atoi@neg& (0+255),w,b
 29374  006E90  1101               	iorwf	(atoi@neg+1)& (0+255),w,b
 29375  006E92  A4D8               	btfss	status,2,c
 29376  006E94  D012               	goto	l3883
 29377                           
 29378                           ; BSR set to: 1
 29379  006E96  0060  F41C  F0A3   	movff	atoi@n,??_atoi
 29380  006E9C  0060  F420  F0A4   	movff	atoi@n+1,??_atoi+1
 29381  006EA2  0100               	movlb	0	; () banked
 29382  006EA4  1FA3               	comf	??_atoi& (0+255),f,b
 29383  006EA6  1FA4               	comf	(??_atoi+1)& (0+255),f,b
 29384  006EA8  4BA3               	infsnz	??_atoi& (0+255),f,b
 29385  006EAA  2BA4               	incf	(??_atoi+1)& (0+255),f,b
 29386  006EAC  0060  F28C  F0A1   	movff	??_atoi,?_atoi
 29387  006EB2  0060  F290  F0A2   	movff	??_atoi+1,?_atoi+1
 29388  006EB8  0012               	return	
 29389  006EBA                     l3883:
 29390                           
 29391                           ; BSR set to: 1
 29392  006EBA  0060  F41C  F0A1   	movff	atoi@n,?_atoi
 29393  006EC0  0060  F420  F0A2   	movff	atoi@n+1,?_atoi+1
 29394  006EC6  0012               	return		;funcret
 29395  006EC8                     __end_of_atoi:
 29396                           	opt callstack 0
 29397                           
 29398 ;; *************** function _isspace *****************
 29399 ;; Defined at:
 29400 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 29401 ;; Parameters:    Size  Location     Type
 29402 ;;  c               2   43[BANK0 ] int 
 29403 ;; Auto vars:     Size  Location     Type
 29404 ;;		None
 29405 ;; Return value:  Size  Location     Type
 29406 ;;                  2   43[BANK0 ] int 
 29407 ;; Registers used:
 29408 ;;		wreg, status,2, status,0
 29409 ;; Tracked objects:
 29410 ;;		On entry : 0/0
 29411 ;;		On exit  : 3F/0
 29412 ;;		Unchanged: 0/0
 29413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29417 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29418 ;;Total ram usage:        7 bytes
 29419 ;; Hardware stack levels used:    1
 29420 ;; Hardware stack levels required when called:   17
 29421 ;; This function calls:
 29422 ;;		Nothing
 29423 ;; This function is called by:
 29424 ;;		_atoi
 29425 ;; This function uses a non-reentrant model
 29426 ;;
 29427                           
 29428                           	psect	text131
 29429  00941E                     __ptext131:
 29430                           	opt callstack 0
 29431  00941E                     _isspace:
 29432                           	opt callstack 9
 29433                           
 29434                           ;incstack = 0
 29435  00941E  0E01               	movlw	1
 29436  009420  0100               	movlb	0	; () banked
 29437  009422  6F91               	movwf	_isspace$5402& (0+255),b
 29438                           
 29439                           ; BSR set to: 0
 29440  009424  0E20               	movlw	32
 29441  009426  198B               	xorwf	isspace@c& (0+255),w,b
 29442  009428  118C               	iorwf	(isspace@c+1)& (0+255),w,b
 29443  00942A  B4D8               	btfsc	status,2,c
 29444  00942C  D016               	goto	l16327
 29445                           
 29446                           ; BSR set to: 0
 29447  00942E  0EF7               	movlw	247
 29448  009430  6F8D               	movwf	??_isspace& (0+255),b
 29449  009432  0EFF               	movlw	255
 29450  009434  6F8E               	movwf	(??_isspace+1)& (0+255),b
 29451  009436  0060  F22C  F08F   	movff	isspace@c,??_isspace+2
 29452  00943C  0060  F230  F090   	movff	isspace@c+1,??_isspace+3
 29453  009442  518D               	movf	??_isspace& (0+255),w,b
 29454  009444  278F               	addwf	(??_isspace+2)& (0+255),f,b
 29455  009446  518E               	movf	(??_isspace+1)& (0+255),w,b
 29456  009448  2390               	addwfc	(??_isspace+3)& (0+255),f,b
 29457  00944A  5190               	movf	(??_isspace+3)& (0+255),w,b
 29458  00944C  E104               	bnz	u16290
 29459  00944E  0E05               	movlw	5
 29460  009450  5D8F               	subwf	(??_isspace+2)& (0+255),w,b
 29461  009452  A0D8               	btfss	status,0,c
 29462  009454  D002               	goto	l16327
 29463  009456                     u16290:
 29464                           
 29465                           ; BSR set to: 0
 29466  009456  0E00               	movlw	0
 29467  009458  6F91               	movwf	_isspace$5402& (0+255),b
 29468  00945A                     l16327:
 29469                           
 29470                           ; BSR set to: 0
 29471  00945A  0060  F244  F08B   	movff	_isspace$5402,?_isspace
 29472  009460  6B8C               	clrf	(?_isspace+1)& (0+255),b
 29473                           
 29474                           ; BSR set to: 0
 29475  009462  0012               	return		;funcret
 29476  009464                     __end_of_isspace:
 29477                           	opt callstack 0
 29478                           
 29479 ;; *************** function _isdigit *****************
 29480 ;; Defined at:
 29481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 29482 ;; Parameters:    Size  Location     Type
 29483 ;;  c               2   43[BANK0 ] int 
 29484 ;; Auto vars:     Size  Location     Type
 29485 ;;		None
 29486 ;; Return value:  Size  Location     Type
 29487 ;;                  2   43[BANK0 ] int 
 29488 ;; Registers used:
 29489 ;;		wreg, status,2, status,0
 29490 ;; Tracked objects:
 29491 ;;		On entry : 0/0
 29492 ;;		On exit  : 3F/0
 29493 ;;		Unchanged: 0/0
 29494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29498 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29499 ;;Total ram usage:        6 bytes
 29500 ;; Hardware stack levels used:    1
 29501 ;; Hardware stack levels required when called:   17
 29502 ;; This function calls:
 29503 ;;		Nothing
 29504 ;; This function is called by:
 29505 ;;		_vfpfcnvrt
 29506 ;;		_atoi
 29507 ;; This function uses a non-reentrant model
 29508 ;;
 29509                           
 29510                           	psect	text132
 29511  0098E0                     __ptext132:
 29512                           	opt callstack 0
 29513  0098E0                     _isdigit:
 29514                           	opt callstack 10
 29515                           
 29516                           ; BSR set to: 0
 29517                           ;incstack = 0
 29518  0098E0  0ED0               	movlw	208
 29519  0098E2  0100               	movlb	0	; () banked
 29520  0098E4  6F8D               	movwf	??_isdigit& (0+255),b
 29521  0098E6  0EFF               	movlw	255
 29522  0098E8  6F8E               	movwf	(??_isdigit+1)& (0+255),b
 29523  0098EA  0060  F22C  F08F   	movff	isdigit@c,??_isdigit+2
 29524  0098F0  0060  F230  F090   	movff	isdigit@c+1,??_isdigit+3
 29525  0098F6  518D               	movf	??_isdigit& (0+255),w,b
 29526  0098F8  278F               	addwf	(??_isdigit+2)& (0+255),f,b
 29527  0098FA  518E               	movf	(??_isdigit+1)& (0+255),w,b
 29528  0098FC  2390               	addwfc	(??_isdigit+3)& (0+255),f,b
 29529  0098FE  5190               	movf	(??_isdigit+3)& (0+255),w,b
 29530  009900  E106               	bnz	u16130
 29531  009902  0E0A               	movlw	10
 29532  009904  5D8F               	subwf	(??_isdigit+2)& (0+255),w,b
 29533  009906  B0D8               	btfsc	status,0,c
 29534  009908  D002               	goto	u16130
 29535  00990A  0E01               	movlw	1
 29536  00990C  D001               	goto	u16140
 29537  00990E                     u16130:
 29538  00990E  0E00               	movlw	0
 29539  009910                     u16140:
 29540  009910  6F8B               	movwf	?_isdigit& (0+255),b
 29541  009912  6B8C               	clrf	(?_isdigit+1)& (0+255),b
 29542                           
 29543                           ; BSR set to: 0
 29544  009914  0012               	return		;funcret
 29545  009916                     __end_of_isdigit:
 29546                           	opt callstack 0
 29547                           
 29548 ;; *************** function ___wmul *****************
 29549 ;; Defined at:
 29550 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 29551 ;; Parameters:    Size  Location     Type
 29552 ;;  multiplier      2   59[BANK0 ] unsigned int 
 29553 ;;  multiplicand    2   61[BANK0 ] unsigned int 
 29554 ;; Auto vars:     Size  Location     Type
 29555 ;;  product         2   63[BANK0 ] unsigned int 
 29556 ;; Return value:  Size  Location     Type
 29557 ;;                  2   59[BANK0 ] unsigned int 
 29558 ;; Registers used:
 29559 ;;		wreg, status,2, status,0, prodl, prodh
 29560 ;; Tracked objects:
 29561 ;;		On entry : 3C/0
 29562 ;;		On exit  : 3F/0
 29563 ;;		Unchanged: 0/0
 29564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29568 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29569 ;;Total ram usage:        6 bytes
 29570 ;; Hardware stack levels used:    1
 29571 ;; Hardware stack levels required when called:   17
 29572 ;; This function calls:
 29573 ;;		Nothing
 29574 ;; This function is called by:
 29575 ;;		_inspOSMeasure
 29576 ;;		_main
 29577 ;;		_screenMng
 29578 ;;		_atoi
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text133
 29583  009B44                     __ptext133:
 29584                           	opt callstack 0
 29585  009B44                     ___wmul:
 29586                           	opt callstack 9
 29587                           
 29588                           ; BSR set to: 0
 29589                           ;incstack = 0
 29590  009B44  0100               	movlb	0	; () banked
 29591  009B46  519B               	movf	___wmul@multiplier& (0+255),w,b
 29592  009B48  039D               	mulwf	___wmul@multiplicand& (0+255),b
 29593  009B4A  006F FFCC  F09F    	movff	prodl,___wmul@product
 29594  009B50  006F FFD0  F0A0    	movff	prodh,___wmul@product+1
 29595  009B56  519B               	movf	___wmul@multiplier& (0+255),w,b
 29596  009B58  039E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29597  009B5A  50F3               	movf	243,w,c
 29598  009B5C  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
 29599  009B5E  519C               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29600  009B60  039D               	mulwf	___wmul@multiplicand& (0+255),b
 29601  009B62  50F3               	movf	243,w,c
 29602  009B64  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
 29603                           
 29604                           ; BSR set to: 0
 29605  009B66  0060  F27C  F09B   	movff	___wmul@product,?___wmul
 29606  009B6C  0060  F280  F09C   	movff	___wmul@product+1,?___wmul+1
 29607                           
 29608                           ; BSR set to: 0
 29609  009B72  0012               	return		;funcret
 29610  009B74                     __end_of___wmul:
 29611                           	opt callstack 0
 29612                           
 29613 ;; *************** function _I2C2_MasterSetCounter *****************
 29614 ;; Defined at:
 29615 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 29616 ;; Parameters:    Size  Location     Type
 29617 ;;  counter         1    wreg     unsigned char 
 29618 ;; Auto vars:     Size  Location     Type
 29619 ;;  counter         1   43[BANK0 ] unsigned char 
 29620 ;; Return value:  Size  Location     Type
 29621 ;;                  1    wreg      void 
 29622 ;; Registers used:
 29623 ;;		wreg
 29624 ;; Tracked objects:
 29625 ;;		On entry : 3F/2
 29626 ;;		On exit  : 0/0
 29627 ;;		Unchanged: 0/0
 29628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29632 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29633 ;;Total ram usage:        1 bytes
 29634 ;; Hardware stack levels used:    1
 29635 ;; Hardware stack levels required when called:   17
 29636 ;; This function calls:
 29637 ;;		Nothing
 29638 ;; This function is called by:
 29639 ;;		_I2C2_MasterOperation
 29640 ;;		_I2C2_DO_RX_EMPTY
 29641 ;; This function uses a non-reentrant model
 29642 ;;
 29643                           
 29644                           	psect	text134
 29645  00A4BE                     __ptext134:
 29646                           	opt callstack 0
 29647  00A4BE                     _I2C2_MasterSetCounter:
 29648                           	opt callstack 8
 29649                           
 29650                           ; BSR set to: 0
 29651                           ;incstack = 0
 29652                           ;I2C2_MasterSetCounter@counter stored from wreg
 29653  00A4BE  0100               	movlb	0	; () banked
 29654  00A4C0  6F8B               	movwf	I2C2_MasterSetCounter@counter& (0+255),b
 29655                           
 29656                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 29657  00A4C2  0060  F22F  FD56   	movff	I2C2_MasterSetCounter@counter,15702	;volatile
 29658  00A4C8  0012               	return		;funcret
 29659  00A4CA                     __end_of_I2C2_MasterSetCounter:
 29660                           	opt callstack 0
 29661                           
 29662 ;; *************** function _I2C2_MasterEnableRestart *****************
 29663 ;; Defined at:
 29664 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 29665 ;; Parameters:    Size  Location     Type
 29666 ;;		None
 29667 ;; Auto vars:     Size  Location     Type
 29668 ;;		None
 29669 ;; Return value:  Size  Location     Type
 29670 ;;                  1    wreg      void 
 29671 ;; Registers used:
 29672 ;;		None
 29673 ;; Tracked objects:
 29674 ;;		On entry : 3C/1
 29675 ;;		On exit  : 3F/3D
 29676 ;;		Unchanged: 0/0
 29677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29682 ;;Total ram usage:        0 bytes
 29683 ;; Hardware stack levels used:    1
 29684 ;; Hardware stack levels required when called:   17
 29685 ;; This function calls:
 29686 ;;		Nothing
 29687 ;; This function is called by:
 29688 ;;		_I2C2_DO_RX_EMPTY
 29689 ;; This function uses a non-reentrant model
 29690 ;;
 29691                           
 29692                           	psect	text135
 29693  00A582                     __ptext135:
 29694                           	opt callstack 0
 29695  00A582                     _I2C2_MasterEnableRestart:
 29696                           	opt callstack 6
 29697                           
 29698                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 29699                           
 29700                           ;incstack = 0
 29701  00A582  013D               	movlb	61	; () banked
 29702  00A584  8D5D               	bsf	93,6,b	;volatile
 29703                           
 29704                           ; BSR set to: 61
 29705  00A586  0012               	return		;funcret
 29706  00A588                     __end_of_I2C2_MasterEnableRestart:
 29707                           	opt callstack 0
 29708                           
 29709 ;; *************** function _I2C2_MasterDisableRestart *****************
 29710 ;; Defined at:
 29711 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 29712 ;; Parameters:    Size  Location     Type
 29713 ;;		None
 29714 ;; Auto vars:     Size  Location     Type
 29715 ;;		None
 29716 ;; Return value:  Size  Location     Type
 29717 ;;                  1    wreg      void 
 29718 ;; Registers used:
 29719 ;;		None
 29720 ;; Tracked objects:
 29721 ;;		On entry : 3F/2
 29722 ;;		On exit  : 3F/3D
 29723 ;;		Unchanged: 0/0
 29724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29729 ;;Total ram usage:        0 bytes
 29730 ;; Hardware stack levels used:    1
 29731 ;; Hardware stack levels required when called:   17
 29732 ;; This function calls:
 29733 ;;		Nothing
 29734 ;; This function is called by:
 29735 ;;		_I2C2_DO_RX_EMPTY
 29736 ;; This function uses a non-reentrant model
 29737 ;;
 29738                           
 29739                           	psect	text136
 29740  00A588                     __ptext136:
 29741                           	opt callstack 0
 29742  00A588                     _I2C2_MasterDisableRestart:
 29743                           	opt callstack 6
 29744                           
 29745                           ; BSR set to: 2
 29746                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 29747                           
 29748                           ; BSR set to: 61
 29749                           ;incstack = 0
 29750  00A588  013D               	movlb	61	; () banked
 29751  00A58A  9D5D               	bcf	93,6,b	;volatile
 29752                           
 29753                           ; BSR set to: 61
 29754  00A58C  0012               	return		;funcret
 29755  00A58E                     __end_of_I2C2_MasterDisableRestart:
 29756                           	opt callstack 0
 29757                           
 29758 ;; *************** function _I2C2_MOpen *****************
 29759 ;; Defined at:
 29760 ;;		line 39 in file "i2c2_mux.c"
 29761 ;; Parameters:    Size  Location     Type
 29762 ;;		None
 29763 ;; Auto vars:     Size  Location     Type
 29764 ;;  trfRsp          1   52[BANK0 ] enum E16385
 29765 ;; Return value:  Size  Location     Type
 29766 ;;                  1    wreg      enum E16385
 29767 ;; Registers used:
 29768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29769 ;; Tracked objects:
 29770 ;;		On entry : 3F/2
 29771 ;;		On exit  : 3F/0
 29772 ;;		Unchanged: 0/0
 29773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29778 ;;Total ram usage:        1 bytes
 29779 ;; Hardware stack levels used:    1
 29780 ;; Hardware stack levels required when called:   19
 29781 ;; This function calls:
 29782 ;;		_I2C2_Open
 29783 ;;		_I2C2_SetAddressNackCallback
 29784 ;;		_I2C2_SetDataNackCallback
 29785 ;; This function is called by:
 29786 ;;		_MonitorMsgForcedSend
 29787 ;; This function uses a non-reentrant model
 29788 ;;
 29789                           
 29790                           	psect	text137
 29791  008BA0                     __ptext137:
 29792                           	opt callstack 0
 29793  008BA0                     _I2C2_MOpen:
 29794                           	opt callstack 7
 29795                           
 29796                           ; BSR set to: 2
 29797                           ;i2c2_mux.c: 40:     i2c2_error_t trfRsp;;i2c2_mux.c: 42:     trfRsp = I2C2_Open(0x50);
 29798                           
 29799                           ; BSR set to: 61
 29800                           ;incstack = 0
 29801  008BA0  0E50               	movlw	80
 29802  008BA2  ECCF  F041         	call	_I2C2_Open
 29803  008BA6  6F94               	movwf	I2C2_MOpen@trfRsp& (0+255),b
 29804                           
 29805                           ; BSR set to: 0
 29806                           ;i2c2_mux.c: 43:     if (trfRsp != I2C2_BUSY) {
 29807  008BA8  0594               	decf	I2C2_MOpen@trfRsp& (0+255),w,b
 29808  008BAA  B4D8               	btfsc	status,2,c
 29809  008BAC  D029               	goto	l17607
 29810                           
 29811                           ; BSR set to: 0
 29812                           ;i2c2_mux.c: 44:         I2C2_SetAddressNackCallback(I2C2_NackCb,((void*)0));
 29813  008BAE  0EE6               	movlw	low _I2C2_NackCb
 29814  008BB0  6F90               	movwf	I2C2_SetAddressNackCallback@cb& (0+255),b
 29815  008BB2  0E96               	movlw	high _I2C2_NackCb
 29816  008BB4  6F91               	movwf	(I2C2_SetAddressNackCallback@cb+1)& (0+255),b
 29817  008BB6  0E00               	movlw	0
 29818  008BB8  6F92               	movwf	I2C2_SetAddressNackCallback@ptr& (0+255),b
 29819  008BBA  0E00               	movlw	0
 29820  008BBC  6F93               	movwf	(I2C2_SetAddressNackCallback@ptr+1)& (0+255),b
 29821  008BBE  EC87  F050         	call	_I2C2_SetAddressNackCallback	;wreg free
 29822                           
 29823                           ;i2c2_mux.c: 45:         I2C2_SetDataNackCallback(I2C2_NackCb,((void*)0));
 29824  008BC2  0EE6               	movlw	low _I2C2_NackCb
 29825  008BC4  6F90               	movwf	I2C2_SetDataNackCallback@cb& (0+255),b
 29826  008BC6  0E96               	movlw	high _I2C2_NackCb
 29827  008BC8  6F91               	movwf	(I2C2_SetDataNackCallback@cb+1)& (0+255),b
 29828  008BCA  0E00               	movlw	0
 29829  008BCC  6F92               	movwf	I2C2_SetDataNackCallback@ptr& (0+255),b
 29830  008BCE  0E00               	movlw	0
 29831  008BD0  6F93               	movwf	(I2C2_SetDataNackCallback@ptr+1)& (0+255),b
 29832  008BD2  EC77  F050         	call	_I2C2_SetDataNackCallback	;wreg free
 29833                           
 29834                           ; BSR set to: 0
 29835                           ;i2c2_mux.c: 47:         lastI2C2MAckResponse = 1;
 29836  008BD6  0E01               	movlw	1
 29837  008BD8  0101               	movlb	1	; () banked
 29838  008BDA  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 29839                           
 29840                           ; BSR set to: 1
 29841                           ;i2c2_mux.c: 49:         if (currentTrfAddr == 0x50){
 29842  008BDC  0E50               	movlw	80
 29843  008BDE  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 29844  008BE0  A4D8               	btfss	status,2,c
 29845  008BE2  D004               	goto	l2676
 29846                           
 29847                           ; BSR set to: 1
 29848                           ;i2c2_mux.c: 50:             lastI2C2MTrfResponse = trfRsp;
 29849  008BE4  0060  F250  F0C0   	movff	I2C2_MOpen@trfRsp,_lastI2C2MTrfResponse
 29850                           
 29851                           ;i2c2_mux.c: 51:         } else {
 29852  008BEA  D003               	goto	l17603
 29853  008BEC                     l2676:
 29854                           
 29855                           ; BSR set to: 1
 29856                           ;i2c2_mux.c: 52:             lastI2C2LTrfResponse = trfRsp;
 29857  008BEC  0060  F250  F24E   	movff	I2C2_MOpen@trfRsp,_lastI2C2LTrfResponse
 29858  008BF2                     l17603:
 29859                           
 29860                           ; BSR set to: 1
 29861                           ;i2c2_mux.c: 54:         currentTrfAddr = 0x50;
 29862  008BF2  0E50               	movlw	80
 29863  008BF4  6FB6               	movwf	_currentTrfAddr& (0+255),b
 29864                           
 29865                           ;i2c2_mux.c: 55:         lastI2C2MAckResponse = 1;
 29866  008BF6  0E01               	movlw	1
 29867  008BF8  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 29868                           
 29869                           ;i2c2_mux.c: 57:         return lastI2C2MTrfResponse;
 29870  008BFA  0100               	movlb	0	; () banked
 29871  008BFC  51C0               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 29872  008BFE  0012               	return	
 29873  008C00                     l17607:
 29874                           
 29875                           ; BSR set to: 0
 29876                           ;i2c2_mux.c: 59:     return I2C2_BUSY;
 29877  008C00  0E01               	movlw	1
 29878                           
 29879                           ; BSR set to: 0
 29880  008C02  0012               	return		;funcret
 29881  008C04                     __end_of_I2C2_MOpen:
 29882                           	opt callstack 0
 29883                           
 29884 ;; *************** function _I2C2_SetDataNackCallback *****************
 29885 ;; Defined at:
 29886 ;;		line 319 in file "mcc_generated_files/i2c2_master.c"
 29887 ;; Parameters:    Size  Location     Type
 29888 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 29889 ;;		 -> I2C2_NackCb(1), 
 29890 ;;  ptr             2   50[BANK0 ] PTR void 
 29891 ;;		 -> NULL(0), 
 29892 ;; Auto vars:     Size  Location     Type
 29893 ;;		None
 29894 ;; Return value:  Size  Location     Type
 29895 ;;                  1    wreg      void 
 29896 ;; Registers used:
 29897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29898 ;; Tracked objects:
 29899 ;;		On entry : 3F/0
 29900 ;;		On exit  : 3F/0
 29901 ;;		Unchanged: 0/0
 29902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29907 ;;Total ram usage:        4 bytes
 29908 ;; Hardware stack levels used:    1
 29909 ;; Hardware stack levels required when called:   18
 29910 ;; This function calls:
 29911 ;;		_I2C2_SetCallback
 29912 ;; This function is called by:
 29913 ;;		_I2C2_MOpen
 29914 ;; This function uses a non-reentrant model
 29915 ;;
 29916                           
 29917                           	psect	text138
 29918  00A0EE                     __ptext138:
 29919                           	opt callstack 0
 29920  00A0EE                     _I2C2_SetDataNackCallback:
 29921                           	opt callstack 7
 29922                           
 29923                           ; BSR set to: 0
 29924                           ;mcc_generated_files/i2c2_master.c: 319: void I2C2_SetDataNackCallback(i2c2_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c2_master.c: 320: {;mcc_generated_files/i2c2_master.
      +                          c: 321:     I2C2_SetCallback(I2C2_DATA_NACK, cb, ptr);
 29925                           
 29926                           ; BSR set to: 0
 29927                           ;incstack = 0
 29928  00A0EE  0060  F240  F08B   	movff	I2C2_SetDataNackCallback@cb,I2C2_SetCallback@cb
 29929  00A0F4  0060  F244  F08C   	movff	I2C2_SetDataNackCallback@cb+1,I2C2_SetCallback@cb+1
 29930  00A0FA  0060  F248  F08D   	movff	I2C2_SetDataNackCallback@ptr,I2C2_SetCallback@ptr
 29931  00A100  0060  F24C  F08E   	movff	I2C2_SetDataNackCallback@ptr+1,I2C2_SetCallback@ptr+1
 29932  00A106  0E03               	movlw	3
 29933  00A108  EC7F  F044         	call	_I2C2_SetCallback
 29934                           
 29935                           ; BSR set to: 0
 29936  00A10C  0012               	return		;funcret
 29937  00A10E                     __end_of_I2C2_SetDataNackCallback:
 29938                           	opt callstack 0
 29939                           
 29940 ;; *************** function _I2C2_SetAddressNackCallback *****************
 29941 ;; Defined at:
 29942 ;;		line 314 in file "mcc_generated_files/i2c2_master.c"
 29943 ;; Parameters:    Size  Location     Type
 29944 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 29945 ;;		 -> I2C2_NackCb(1), Absolute function(1), 
 29946 ;;  ptr             2   50[BANK0 ] PTR void 
 29947 ;;		 -> NULL(0), 
 29948 ;; Auto vars:     Size  Location     Type
 29949 ;;		None
 29950 ;; Return value:  Size  Location     Type
 29951 ;;                  1    wreg      void 
 29952 ;; Registers used:
 29953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29954 ;; Tracked objects:
 29955 ;;		On entry : 3F/0
 29956 ;;		On exit  : 3F/0
 29957 ;;		Unchanged: 0/0
 29958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29962 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29963 ;;Total ram usage:        4 bytes
 29964 ;; Hardware stack levels used:    1
 29965 ;; Hardware stack levels required when called:   18
 29966 ;; This function calls:
 29967 ;;		_I2C2_SetCallback
 29968 ;; This function is called by:
 29969 ;;		_I2C2_MOpen
 29970 ;; This function uses a non-reentrant model
 29971 ;;
 29972                           
 29973                           	psect	text139
 29974  00A10E                     __ptext139:
 29975                           	opt callstack 0
 29976  00A10E                     _I2C2_SetAddressNackCallback:
 29977                           	opt callstack 7
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;mcc_generated_files/i2c2_master.c: 314: void I2C2_SetAddressNackCallback(i2c2_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c2_master.c: 315: {;mcc_generated_files/i2c2_mast
      +                          er.c: 316:     I2C2_SetCallback(I2C2_ADDR_NACK, cb, ptr);
 29981                           
 29982                           ; BSR set to: 0
 29983                           ;incstack = 0
 29984  00A10E  0060  F240  F08B   	movff	I2C2_SetAddressNackCallback@cb,I2C2_SetCallback@cb
 29985  00A114  0060  F244  F08C   	movff	I2C2_SetAddressNackCallback@cb+1,I2C2_SetCallback@cb+1
 29986  00A11A  0060  F248  F08D   	movff	I2C2_SetAddressNackCallback@ptr,I2C2_SetCallback@ptr
 29987  00A120  0060  F24C  F08E   	movff	I2C2_SetAddressNackCallback@ptr+1,I2C2_SetCallback@ptr+1
 29988  00A126  0E02               	movlw	2
 29989  00A128  EC7F  F044         	call	_I2C2_SetCallback
 29990                           
 29991                           ; BSR set to: 0
 29992  00A12C  0012               	return		;funcret
 29993  00A12E                     __end_of_I2C2_SetAddressNackCallback:
 29994                           	opt callstack 0
 29995                           
 29996 ;; *************** function _I2C2_SetCallback *****************
 29997 ;; Defined at:
 29998 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 29999 ;; Parameters:    Size  Location     Type
 30000 ;;  idx             1    wreg     enum E16468
 30001 ;;  cb              2   43[BANK0 ] PTR FTN(PTR void ,)enum 
 30002 ;;		 -> I2C2_NackCb(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 30003 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 30004 ;;  ptr             2   45[BANK0 ] PTR void 
 30005 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 30006 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 30007 ;; Auto vars:     Size  Location     Type
 30008 ;;  idx             1   47[BANK0 ] enum E16468
 30009 ;; Return value:  Size  Location     Type
 30010 ;;                  1    wreg      void 
 30011 ;; Registers used:
 30012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30013 ;; Tracked objects:
 30014 ;;		On entry : 3F/0
 30015 ;;		On exit  : 3F/0
 30016 ;;		Unchanged: 0/0
 30017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30021 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30022 ;;Total ram usage:        5 bytes
 30023 ;; Hardware stack levels used:    1
 30024 ;; Hardware stack levels required when called:   17
 30025 ;; This function calls:
 30026 ;;		Nothing
 30027 ;; This function is called by:
 30028 ;;		_I2C2_SetDataCompleteCallback
 30029 ;;		_I2C2_SetAddressNackCallback
 30030 ;;		_I2C2_SetDataNackCallback
 30031 ;; This function uses a non-reentrant model
 30032 ;;
 30033                           
 30034                           	psect	text140
 30035  0088FE                     __ptext140:
 30036                           	opt callstack 0
 30037  0088FE                     _I2C2_SetCallback:
 30038                           	opt callstack 4
 30039                           
 30040                           ; BSR set to: 0
 30041                           ;incstack = 0
 30042                           ;I2C2_SetCallback@idx stored from wreg
 30043  0088FE  6F8F               	movwf	I2C2_SetCallback@idx& (0+255),b
 30044                           
 30045                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 30046  008900  0100               	movlb	0	; () banked
 30047  008902  518B               	movf	I2C2_SetCallback@cb& (0+255),w,b
 30048  008904  118C               	iorwf	(I2C2_SetCallback@cb+1)& (0+255),w,b
 30049  008906  B4D8               	btfsc	status,2,c
 30050  008908  D01D               	goto	l16955
 30051                           
 30052                           ; BSR set to: 0
 30053                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 30054  00890A  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30055  00890C  0D02               	mullw	2
 30056  00890E  0E00               	movlw	low _I2C2_Status
 30057  008910  24F3               	addwf	243,w,c
 30058  008912  6ED9               	movwf	fsr2l,c
 30059  008914  0E02               	movlw	high _I2C2_Status
 30060  008916  20F4               	addwfc	prodh,w,c
 30061  008918  6EDA               	movwf	fsr2h,c
 30062  00891A  0060  F22F  FFDE   	movff	I2C2_SetCallback@cb,postinc2
 30063  008920  0060  F233  FFDD   	movff	I2C2_SetCallback@cb+1,postdec2
 30064                           
 30065                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 30066  008926  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30067  008928  0D02               	mullw	2
 30068  00892A  0E0C               	movlw	low (_I2C2_Status+12)
 30069  00892C  24F3               	addwf	243,w,c
 30070  00892E  6ED9               	movwf	fsr2l,c
 30071  008930  0E02               	movlw	high (_I2C2_Status+12)
 30072  008932  20F4               	addwfc	prodh,w,c
 30073  008934  6EDA               	movwf	fsr2h,c
 30074  008936  0060  F237  FFDE   	movff	I2C2_SetCallback@ptr,postinc2
 30075  00893C  0060  F23B  FFDD   	movff	I2C2_SetCallback@ptr+1,postdec2
 30076                           
 30077                           ;mcc_generated_files/i2c2_master.c: 340:     }
 30078  008942  0012               	return	
 30079  008944                     l16955:
 30080                           
 30081                           ; BSR set to: 0
 30082                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 30083  008944  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30084  008946  0D02               	mullw	2
 30085  008948  0E00               	movlw	low _I2C2_Status
 30086  00894A  24F3               	addwf	243,w,c
 30087  00894C  6ED9               	movwf	fsr2l,c
 30088  00894E  0E02               	movlw	high _I2C2_Status
 30089  008950  20F4               	addwfc	prodh,w,c
 30090  008952  6EDA               	movwf	fsr2h,c
 30091  008954  0E1A               	movlw	low _I2C2_CallbackReturnStop
 30092  008956  6EDE               	movwf	postinc2,c
 30093  008958  0EA5               	movlw	high _I2C2_CallbackReturnStop
 30094  00895A  6EDD               	movwf	postdec2,c
 30095                           
 30096                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 30097  00895C  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30098  00895E  0D02               	mullw	2
 30099  008960  0E0C               	movlw	low (_I2C2_Status+12)
 30100  008962  24F3               	addwf	243,w,c
 30101  008964  6ED9               	movwf	fsr2l,c
 30102  008966  0E02               	movlw	high (_I2C2_Status+12)
 30103  008968  20F4               	addwfc	prodh,w,c
 30104  00896A  6EDA               	movwf	fsr2h,c
 30105  00896C  0E00               	movlw	0
 30106  00896E  6EDE               	movwf	postinc2,c
 30107  008970  0E00               	movlw	0
 30108  008972  6EDD               	movwf	postdec2,c
 30109                           
 30110                           ; BSR set to: 0
 30111  008974  0012               	return		;funcret
 30112  008976                     __end_of_I2C2_SetCallback:
 30113                           	opt callstack 0
 30114                           
 30115 ;; *************** function _I2C2_Open *****************
 30116 ;; Defined at:
 30117 ;;		line 204 in file "mcc_generated_files/i2c2_master.c"
 30118 ;; Parameters:    Size  Location     Type
 30119 ;;  address         1    wreg     unsigned char 
 30120 ;; Auto vars:     Size  Location     Type
 30121 ;;  address         1   45[BANK0 ] unsigned char 
 30122 ;;  returnValue     1   46[BANK0 ] enum E353
 30123 ;; Return value:  Size  Location     Type
 30124 ;;                  1    wreg      enum E353
 30125 ;; Registers used:
 30126 ;;		wreg, status,2, status,0, cstack
 30127 ;; Tracked objects:
 30128 ;;		On entry : 3F/2
 30129 ;;		On exit  : 3F/0
 30130 ;;		Unchanged: 0/0
 30131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30136 ;;Total ram usage:        2 bytes
 30137 ;; Hardware stack levels used:    1
 30138 ;; Hardware stack levels required when called:   18
 30139 ;; This function calls:
 30140 ;;		_I2C2_MasterClearIrq
 30141 ;;		_I2C2_MasterEnableIrq
 30142 ;;		_I2C2_MasterOpen
 30143 ;;		_I2C2_SetInterruptHandler
 30144 ;; This function is called by:
 30145 ;;		_I2C2_MOpen
 30146 ;; This function uses a non-reentrant model
 30147 ;;
 30148                           
 30149                           	psect	text141
 30150  00839E                     __ptext141:
 30151                           	opt callstack 0
 30152  00839E                     _I2C2_Open:
 30153                           	opt callstack 7
 30154                           
 30155                           ; BSR set to: 0
 30156                           ;incstack = 0
 30157                           ;I2C2_Open@address stored from wreg
 30158  00839E  0100               	movlb	0	; () banked
 30159  0083A0  6F8D               	movwf	I2C2_Open@address& (0+255),b
 30160                           
 30161                           ;mcc_generated_files/i2c2_master.c: 204: i2c2_error_t I2C2_Open(i2c2_address_t address);
      +                          mcc_generated_files/i2c2_master.c: 205: {;mcc_generated_files/i2c2_master.c: 206:     i2
      +                          c2_error_t returnValue = I2C2_BUSY;
 30162  0083A2  0E01               	movlw	1
 30163  0083A4  0100               	movlb	0	; () banked
 30164  0083A6  6F8E               	movwf	I2C2_Open@returnValue& (0+255),b
 30165                           
 30166                           ; BSR set to: 0
 30167                           ;mcc_generated_files/i2c2_master.c: 208:     if(!I2C2_Status.inUse)
 30168  0083A8  0102               	movlb	2	; () banked
 30169  0083AA  B723               	btfsc	(_I2C2_Status+35)& (0+255),3,b
 30170  0083AC  D046               	goto	l17299
 30171                           
 30172                           ; BSR set to: 2
 30173                           ;mcc_generated_files/i2c2_master.c: 209:     {;mcc_generated_files/i2c2_master.c: 210:  
      +                                 I2C2_Status.address = address;
 30174  0083AE  0060  F234  F21C   	movff	I2C2_Open@address,_I2C2_Status+28
 30175                           
 30176                           ; BSR set to: 2
 30177                           ;mcc_generated_files/i2c2_master.c: 211:         I2C2_Status.busy = 0;
 30178  0083B4  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 30179                           
 30180                           ; BSR set to: 2
 30181                           ;mcc_generated_files/i2c2_master.c: 212:         I2C2_Status.inUse = 1;
 30182  0083B6  8723               	bsf	(_I2C2_Status+35)& (0+255),3,b
 30183                           
 30184                           ; BSR set to: 2
 30185                           ;mcc_generated_files/i2c2_master.c: 213:         I2C2_Status.addressNackCheck = 0;
 30186  0083B8  0EFC               	movlw	-4
 30187  0083BA  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 30188                           
 30189                           ; BSR set to: 2
 30190                           ;mcc_generated_files/i2c2_master.c: 214:         I2C2_Status.state = I2C2_RESET;
 30191  0083BC  0E0F               	movlw	15
 30192  0083BE  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 30193                           
 30194                           ; BSR set to: 2
 30195                           ;mcc_generated_files/i2c2_master.c: 215:         I2C2_Status.time_out_value = 500;
 30196  0083C0  0E01               	movlw	1
 30197  0083C2  6F1B               	movwf	(_I2C2_Status+27)& (0+255),b
 30198  0083C4  0EF4               	movlw	244
 30199  0083C6  6F1A               	movwf	(_I2C2_Status+26)& (0+255),b
 30200                           
 30201                           ; BSR set to: 2
 30202                           ;mcc_generated_files/i2c2_master.c: 216:         I2C2_Status.bufferFree = 1;
 30203  0083C8  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 30204                           
 30205                           ; BSR set to: 2
 30206                           ;mcc_generated_files/i2c2_master.c: 219:         I2C2_Status.callbackTable[I2C2_DATA_COM
      +                          PLETE]=I2C2_CallbackReturnStop;
 30207  0083CA  0E1A               	movlw	low _I2C2_CallbackReturnStop
 30208  0083CC  6F00               	movwf	_I2C2_Status& (0+255),b
 30209  0083CE  0EA5               	movlw	high _I2C2_CallbackReturnStop
 30210  0083D0  6F01               	movwf	(_I2C2_Status+1)& (0+255),b
 30211                           
 30212                           ; BSR set to: 2
 30213                           ;mcc_generated_files/i2c2_master.c: 220:         I2C2_Status.callbackPayload[I2C2_DATA_C
      +                          OMPLETE] = ((void*)0);
 30214  0083D2  0E00               	movlw	0
 30215  0083D4  6F0C               	movwf	(_I2C2_Status+12)& (0+255),b
 30216  0083D6  0E00               	movlw	0
 30217  0083D8  6F0D               	movwf	(_I2C2_Status+13)& (0+255),b
 30218                           
 30219                           ; BSR set to: 2
 30220                           ;mcc_generated_files/i2c2_master.c: 221:         I2C2_Status.callbackTable[I2C2_WRITE_CO
      +                          LLISION]=I2C2_CallbackReturnStop;
 30221  0083DA  0E1A               	movlw	low _I2C2_CallbackReturnStop
 30222  0083DC  6F02               	movwf	(_I2C2_Status+2)& (0+255),b
 30223  0083DE  0EA5               	movlw	high _I2C2_CallbackReturnStop
 30224  0083E0  6F03               	movwf	(_I2C2_Status+3)& (0+255),b
 30225                           
 30226                           ; BSR set to: 2
 30227                           ;mcc_generated_files/i2c2_master.c: 222:         I2C2_Status.callbackPayload[I2C2_WRITE_
      +                          COLLISION] = ((void*)0);
 30228  0083E2  0E00               	movlw	0
 30229  0083E4  6F0E               	movwf	(_I2C2_Status+14)& (0+255),b
 30230  0083E6  0E00               	movlw	0
 30231  0083E8  6F0F               	movwf	(_I2C2_Status+15)& (0+255),b
 30232                           
 30233                           ; BSR set to: 2
 30234                           ;mcc_generated_files/i2c2_master.c: 223:         I2C2_Status.callbackTable[I2C2_ADDR_NAC
      +                          K]=I2C2_CallbackReturnStop;
 30235  0083EA  0E1A               	movlw	low _I2C2_CallbackReturnStop
 30236  0083EC  6F04               	movwf	(_I2C2_Status+4)& (0+255),b
 30237  0083EE  0EA5               	movlw	high _I2C2_CallbackReturnStop
 30238  0083F0  6F05               	movwf	(_I2C2_Status+5)& (0+255),b
 30239                           
 30240                           ; BSR set to: 2
 30241                           ;mcc_generated_files/i2c2_master.c: 224:         I2C2_Status.callbackPayload[I2C2_ADDR_N
      +                          ACK] = ((void*)0);
 30242  0083F2  0E00               	movlw	0
 30243  0083F4  6F10               	movwf	(_I2C2_Status+16)& (0+255),b
 30244  0083F6  0E00               	movlw	0
 30245  0083F8  6F11               	movwf	(_I2C2_Status+17)& (0+255),b
 30246                           
 30247                           ; BSR set to: 2
 30248                           ;mcc_generated_files/i2c2_master.c: 225:         I2C2_Status.callbackTable[I2C2_DATA_NAC
      +                          K]=I2C2_CallbackReturnStop;
 30249  0083FA  0E1A               	movlw	low _I2C2_CallbackReturnStop
 30250  0083FC  6F06               	movwf	(_I2C2_Status+6)& (0+255),b
 30251  0083FE  0EA5               	movlw	high _I2C2_CallbackReturnStop
 30252  008400  6F07               	movwf	(_I2C2_Status+7)& (0+255),b
 30253                           
 30254                           ; BSR set to: 2
 30255                           ;mcc_generated_files/i2c2_master.c: 226:         I2C2_Status.callbackPayload[I2C2_DATA_N
      +                          ACK] = ((void*)0);
 30256  008402  0E00               	movlw	0
 30257  008404  6F12               	movwf	(_I2C2_Status+18)& (0+255),b
 30258  008406  0E00               	movlw	0
 30259  008408  6F13               	movwf	(_I2C2_Status+19)& (0+255),b
 30260                           
 30261                           ; BSR set to: 2
 30262                           ;mcc_generated_files/i2c2_master.c: 227:         I2C2_Status.callbackTable[I2C2_TIMEOUT]
      +                          =I2C2_CallbackReturnReset;
 30263  00840A  0E10               	movlw	low _I2C2_CallbackReturnReset
 30264  00840C  6F08               	movwf	(_I2C2_Status+8)& (0+255),b
 30265  00840E  0EA5               	movlw	high _I2C2_CallbackReturnReset
 30266  008410  6F09               	movwf	(_I2C2_Status+9)& (0+255),b
 30267                           
 30268                           ; BSR set to: 2
 30269                           ;mcc_generated_files/i2c2_master.c: 228:         I2C2_Status.callbackPayload[I2C2_TIMEOU
      +                          T] = ((void*)0);
 30270  008412  0E00               	movlw	0
 30271  008414  6F14               	movwf	(_I2C2_Status+20)& (0+255),b
 30272  008416  0E00               	movlw	0
 30273  008418  6F15               	movwf	(_I2C2_Status+21)& (0+255),b
 30274                           
 30275                           ; BSR set to: 2
 30276                           ;mcc_generated_files/i2c2_master.c: 230:         I2C2_SetInterruptHandler(I2C2_MasterIsr
      +                          );
 30277  00841A  0E94               	movlw	low _I2C2_MasterIsr
 30278  00841C  0100               	movlb	0	; () banked
 30279  00841E  6F8B               	movwf	I2C2_SetInterruptHandler@InterruptHandler& (0+255),b
 30280  008420  0EA5               	movlw	high _I2C2_MasterIsr
 30281  008422  6F8C               	movwf	(I2C2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 30282  008424  EC16  F052         	call	_I2C2_SetInterruptHandler	;wreg free
 30283                           
 30284                           ; BSR set to: 0
 30285                           ;mcc_generated_files/i2c2_master.c: 231:         I2C2_MasterClearIrq();
 30286  008428  ECAA  F052         	call	_I2C2_MasterClearIrq	;wreg free
 30287                           
 30288                           ; BSR set to: 61
 30289                           ;mcc_generated_files/i2c2_master.c: 232:         I2C2_MasterOpen();
 30290  00842C  ECF1  F04F         	call	_I2C2_MasterOpen	;wreg free
 30291                           
 30292                           ; BSR set to: 61
 30293                           ;mcc_generated_files/i2c2_master.c: 233:         I2C2_MasterEnableIrq();
 30294  008430  EC5E  F051         	call	_I2C2_MasterEnableIrq	;wreg free
 30295                           
 30296                           ; BSR set to: 61
 30297                           ;mcc_generated_files/i2c2_master.c: 234:         returnValue = I2C2_NOERR;
 30298  008434  0E00               	movlw	0
 30299  008436  0100               	movlb	0	; () banked
 30300  008438  6F8E               	movwf	I2C2_Open@returnValue& (0+255),b
 30301  00843A                     l17299:
 30302                           
 30303                           ;mcc_generated_files/i2c2_master.c: 236:     return returnValue;
 30304  00843A  0100               	movlb	0	; () banked
 30305  00843C  518E               	movf	I2C2_Open@returnValue& (0+255),w,b
 30306                           
 30307                           ; BSR set to: 0
 30308  00843E  0012               	return		;funcret
 30309  008440                     __end_of_I2C2_Open:
 30310                           	opt callstack 0
 30311                           
 30312 ;; *************** function _I2C2_SetInterruptHandler *****************
 30313 ;; Defined at:
 30314 ;;		line 329 in file "mcc_generated_files/i2c2_master.c"
 30315 ;; Parameters:    Size  Location     Type
 30316 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 30317 ;;		 -> I2C2_MasterIsr(1), 
 30318 ;; Auto vars:     Size  Location     Type
 30319 ;;		None
 30320 ;; Return value:  Size  Location     Type
 30321 ;;                  1    wreg      void 
 30322 ;; Registers used:
 30323 ;;		wreg, status,2, status,0
 30324 ;; Tracked objects:
 30325 ;;		On entry : 3F/0
 30326 ;;		On exit  : 3F/0
 30327 ;;		Unchanged: 3F/0
 30328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30333 ;;Total ram usage:        2 bytes
 30334 ;; Hardware stack levels used:    1
 30335 ;; Hardware stack levels required when called:   17
 30336 ;; This function calls:
 30337 ;;		Nothing
 30338 ;; This function is called by:
 30339 ;;		_I2C2_Open
 30340 ;; This function uses a non-reentrant model
 30341 ;;
 30342                           
 30343                           	psect	text142
 30344  00A42C                     __ptext142:
 30345                           	opt callstack 0
 30346  00A42C                     _I2C2_SetInterruptHandler:
 30347                           	opt callstack 7
 30348                           
 30349                           ; BSR set to: 0
 30350                           ;mcc_generated_files/i2c2_master.c: 329: void I2C2_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c2_master.c: 330: {;mcc_generated_files/i2c2_maste
      +                          r.c: 331:     I2C2_InterruptHandler = InterruptHandler;
 30351                           
 30352                           ; BSR set to: 0
 30353                           ;incstack = 0
 30354  00A42C  0060  F22C  F0BC   	movff	I2C2_SetInterruptHandler@InterruptHandler,_I2C2_InterruptHandler
 30355  00A432  0060  F230  F0BD   	movff	I2C2_SetInterruptHandler@InterruptHandler+1,_I2C2_InterruptHandler+1
 30356                           
 30357                           ; BSR set to: 0
 30358  00A438  0012               	return		;funcret
 30359  00A43A                     __end_of_I2C2_SetInterruptHandler:
 30360                           	opt callstack 0
 30361                           
 30362 ;; *************** function _I2C2_MasterOpen *****************
 30363 ;; Defined at:
 30364 ;;		line 633 in file "mcc_generated_files/i2c2_master.c"
 30365 ;; Parameters:    Size  Location     Type
 30366 ;;		None
 30367 ;; Auto vars:     Size  Location     Type
 30368 ;;		None
 30369 ;; Return value:  Size  Location     Type
 30370 ;;                  1    wreg      _Bool 
 30371 ;; Registers used:
 30372 ;;		wreg, status,2
 30373 ;; Tracked objects:
 30374 ;;		On entry : 3F/3D
 30375 ;;		On exit  : 3F/3D
 30376 ;;		Unchanged: 0/0
 30377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30382 ;;Total ram usage:        0 bytes
 30383 ;; Hardware stack levels used:    1
 30384 ;; Hardware stack levels required when called:   17
 30385 ;; This function calls:
 30386 ;;		Nothing
 30387 ;; This function is called by:
 30388 ;;		_I2C2_Open
 30389 ;; This function uses a non-reentrant model
 30390 ;;
 30391                           
 30392                           	psect	text143
 30393  009FE2                     __ptext143:
 30394                           	opt callstack 0
 30395  009FE2                     _I2C2_MasterOpen:
 30396                           	opt callstack 7
 30397                           
 30398                           ; BSR set to: 61
 30399                           ;mcc_generated_files/i2c2_master.c: 635:     if(!I2C2CON0bits.EN)
 30400                           
 30401                           ; BSR set to: 0
 30402                           ;incstack = 0
 30403  009FE2  BF5D               	btfsc	93,7,b	;volatile
 30404  009FE4  0012               	return	
 30405                           
 30406                           ; BSR set to: 61
 30407                           ;mcc_generated_files/i2c2_master.c: 636:     {;mcc_generated_files/i2c2_master.c: 638:  
      +                                 I2C2PIR = 0x00;
 30408  009FE6  0E00               	movlw	0
 30409  009FE8  6F63               	movwf	99,b	;volatile
 30410                           
 30411                           ;mcc_generated_files/i2c2_master.c: 640:         I2C2PIE = 0x00;
 30412  009FEA  0E00               	movlw	0
 30413  009FEC  6F64               	movwf	100,b	;volatile
 30414                           
 30415                           ;mcc_generated_files/i2c2_master.c: 642:         I2C2ERR = 0x00;
 30416  009FEE  0E00               	movlw	0
 30417  009FF0  6F60               	movwf	96,b	;volatile
 30418                           
 30419                           ; BSR set to: 61
 30420                           ;mcc_generated_files/i2c2_master.c: 644:         I2C2CNT = 0xFF;
 30421  009FF2  6956               	setf	86,b	;volatile
 30422                           
 30423                           ;mcc_generated_files/i2c2_master.c: 646:         RB1I2C = 0x51;
 30424  009FF4  0E51               	movlw	81
 30425  009FF6  013A               	movlb	58	; () banked
 30426  009FF8  6F5A               	movwf	90,b	;volatile
 30427                           
 30428                           ;mcc_generated_files/i2c2_master.c: 648:         RB2I2C = 0x51;
 30429  009FFA  0E51               	movlw	81
 30430  009FFC  6F5B               	movwf	91,b	;volatile
 30431                           
 30432                           ; BSR set to: 58
 30433                           ;mcc_generated_files/i2c2_master.c: 650:         I2C2CON0bits.EN = 1;
 30434  009FFE  013D               	movlb	61	; () banked
 30435  00A000  8F5D               	bsf	93,7,b	;volatile
 30436                           
 30437                           ; BSR set to: 61
 30438  00A002  0012               	return		;funcret
 30439  00A004                     __end_of_I2C2_MasterOpen:
 30440                           	opt callstack 0
 30441                           
 30442 ;; *************** function _I2C2_MasterEnableIrq *****************
 30443 ;; Defined at:
 30444 ;;		line 776 in file "mcc_generated_files/i2c2_master.c"
 30445 ;; Parameters:    Size  Location     Type
 30446 ;;		None
 30447 ;; Auto vars:     Size  Location     Type
 30448 ;;		None
 30449 ;; Return value:  Size  Location     Type
 30450 ;;                  1    wreg      void 
 30451 ;; Registers used:
 30452 ;;		None
 30453 ;; Tracked objects:
 30454 ;;		On entry : 3F/3D
 30455 ;;		On exit  : 3F/3D
 30456 ;;		Unchanged: 0/0
 30457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30462 ;;Total ram usage:        0 bytes
 30463 ;; Hardware stack levels used:    1
 30464 ;; Hardware stack levels required when called:   17
 30465 ;; This function calls:
 30466 ;;		Nothing
 30467 ;; This function is called by:
 30468 ;;		_I2C2_Open
 30469 ;; This function uses a non-reentrant model
 30470 ;;
 30471                           
 30472                           	psect	text144
 30473  00A2BC                     __ptext144:
 30474                           	opt callstack 0
 30475  00A2BC                     _I2C2_MasterEnableIrq:
 30476                           	opt callstack 7
 30477                           
 30478                           ; BSR set to: 61
 30479                           ;mcc_generated_files/i2c2_master.c: 778:     PIE6bits.I2C2IE = 1;
 30480                           
 30481                           ; BSR set to: 61
 30482                           ;incstack = 0
 30483  00A2BC  0139               	movlb	57	; () banked
 30484  00A2BE  8196               	bsf	150,0,b	;volatile
 30485                           
 30486                           ;mcc_generated_files/i2c2_master.c: 779:     PIE6bits.I2C2EIE = 1;
 30487  00A2C0  8396               	bsf	150,1,b	;volatile
 30488                           
 30489                           ;mcc_generated_files/i2c2_master.c: 780:     PIE5bits.I2C2RXIE = 1;
 30490  00A2C2  8D95               	bsf	149,6,b	;volatile
 30491                           
 30492                           ;mcc_generated_files/i2c2_master.c: 781:     PIE5bits.I2C2TXIE = 1;
 30493  00A2C4  8F95               	bsf	149,7,b	;volatile
 30494                           
 30495                           ;mcc_generated_files/i2c2_master.c: 783:     I2C2PIEbits.PCIE = 1;
 30496  00A2C6  013D               	movlb	61	; () banked
 30497  00A2C8  8564               	bsf	100,2,b	;volatile
 30498                           
 30499                           ;mcc_generated_files/i2c2_master.c: 784:     I2C2PIEbits.CNTIE = 1;
 30500  00A2CA  8F64               	bsf	100,7,b	;volatile
 30501                           
 30502                           ;mcc_generated_files/i2c2_master.c: 785:     I2C2ERRbits.NACKIE = 1;
 30503  00A2CC  8160               	bsf	96,0,b	;volatile
 30504                           
 30505                           ; BSR set to: 61
 30506  00A2CE  0012               	return		;funcret
 30507  00A2D0                     __end_of_I2C2_MasterEnableIrq:
 30508                           	opt callstack 0
 30509                           
 30510 ;; *************** function _I2C2_MAck *****************
 30511 ;; Defined at:
 30512 ;;		line 31 in file "i2c2_mux.c"
 30513 ;; Parameters:    Size  Location     Type
 30514 ;;		None
 30515 ;; Auto vars:     Size  Location     Type
 30516 ;;		None
 30517 ;; Return value:  Size  Location     Type
 30518 ;;                  1    wreg      _Bool 
 30519 ;; Registers used:
 30520 ;;		wreg, status,2
 30521 ;; Tracked objects:
 30522 ;;		On entry : 3E/0
 30523 ;;		On exit  : 3F/1
 30524 ;;		Unchanged: 0/0
 30525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30530 ;;Total ram usage:        0 bytes
 30531 ;; Hardware stack levels used:    1
 30532 ;; Hardware stack levels required when called:   17
 30533 ;; This function calls:
 30534 ;;		Nothing
 30535 ;; This function is called by:
 30536 ;;		_MonitorMsgForcedSend
 30537 ;;		_MonitorMsgSendBlock
 30538 ;; This function uses a non-reentrant model
 30539 ;;
 30540                           
 30541                           	psect	text145
 30542  00A58E                     __ptext145:
 30543                           	opt callstack 0
 30544  00A58E                     _I2C2_MAck:
 30545                           	opt callstack 9
 30546                           
 30547                           ;i2c2_mux.c: 32:     return lastI2C2MAckResponse;
 30548                           
 30549                           ; BSR set to: 61
 30550                           ;incstack = 0
 30551  00A58E  0101               	movlb	1	; () banked
 30552  00A590  51B5               	movf	_lastI2C2MAckResponse& (0+255),w,b
 30553                           
 30554                           ; BSR set to: 1
 30555  00A592  0012               	return		;funcret
 30556  00A594                     __end_of_I2C2_MAck:
 30557                           	opt callstack 0
 30558                           
 30559 ;; *************** function _MonitorMsgBusy *****************
 30560 ;; Defined at:
 30561 ;;		line 28 in file "monComm.c"
 30562 ;; Parameters:    Size  Location     Type
 30563 ;;		None
 30564 ;; Auto vars:     Size  Location     Type
 30565 ;;		None
 30566 ;; Return value:  Size  Location     Type
 30567 ;;                  1    wreg      _Bool 
 30568 ;; Registers used:
 30569 ;;		wreg, status,2, status,0, cstack
 30570 ;; Tracked objects:
 30571 ;;		On entry : 0/0
 30572 ;;		On exit  : 3F/0
 30573 ;;		Unchanged: 0/0
 30574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30579 ;;Total ram usage:        0 bytes
 30580 ;; Hardware stack levels used:    1
 30581 ;; Hardware stack levels required when called:   20
 30582 ;; This function calls:
 30583 ;;		_I2C2_MClose
 30584 ;; This function is called by:
 30585 ;;		_main
 30586 ;;		_MonitorMsgSendBlock
 30587 ;; This function uses a non-reentrant model
 30588 ;;
 30589                           
 30590                           	psect	text146
 30591  00A32C                     __ptext146:
 30592                           	opt callstack 0
 30593  00A32C                     _MonitorMsgBusy:
 30594                           	opt callstack 7
 30595                           
 30596                           ;monComm.c: 29:     return (I2C2_MClose() == I2C2_BUSY);
 30597                           
 30598                           ; BSR set to: 1
 30599                           ;incstack = 0
 30600  00A32C  ECA5  F04E         	call	_I2C2_MClose	;wreg free
 30601  00A330  06E8               	decf	wreg,f,c
 30602  00A332  A4D8               	btfss	status,2,c
 30603  00A334  D002               	goto	u18050
 30604  00A336  0E01               	movlw	1
 30605  00A338  0012               	return	
 30606  00A33A                     u18050:
 30607  00A33A  0E00               	movlw	0
 30608                           
 30609                           ; BSR set to: 0
 30610  00A33C  0012               	return		;funcret
 30611  00A33E                     __end_of_MonitorMsgBusy:
 30612                           	opt callstack 0
 30613                           
 30614 ;; *************** function _I2C2_MClose *****************
 30615 ;; Defined at:
 30616 ;;		line 85 in file "i2c2_mux.c"
 30617 ;; Parameters:    Size  Location     Type
 30618 ;;		None
 30619 ;; Auto vars:     Size  Location     Type
 30620 ;;  trfRsp          1   44[BANK0 ] enum E16385
 30621 ;; Return value:  Size  Location     Type
 30622 ;;                  1    wreg      enum E16385
 30623 ;; Registers used:
 30624 ;;		wreg, status,2, status,0, cstack
 30625 ;; Tracked objects:
 30626 ;;		On entry : 0/0
 30627 ;;		On exit  : 3F/0
 30628 ;;		Unchanged: 0/0
 30629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30633 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30634 ;;Total ram usage:        1 bytes
 30635 ;; Hardware stack levels used:    1
 30636 ;; Hardware stack levels required when called:   19
 30637 ;; This function calls:
 30638 ;;		_I2C2_Close
 30639 ;; This function is called by:
 30640 ;;		_MonitorMsgBusy
 30641 ;;		_MonitorMsgForcedSend
 30642 ;; This function uses a non-reentrant model
 30643 ;;
 30644                           
 30645                           	psect	text147
 30646  009D4A                     __ptext147:
 30647                           	opt callstack 0
 30648  009D4A                     _I2C2_MClose:
 30649                           	opt callstack 7
 30650                           
 30651                           ;i2c2_mux.c: 86:     i2c2_error_t trfRsp;;i2c2_mux.c: 88:     trfRsp = I2C2_Close();
 30652                           
 30653                           ; BSR set to: 0
 30654                           ;incstack = 0
 30655  009D4A  EC14  F04F         	call	_I2C2_Close	;wreg free
 30656  009D4E  6F8C               	movwf	I2C2_MClose@trfRsp& (0+255),b
 30657                           
 30658                           ; BSR set to: 0
 30659                           ;i2c2_mux.c: 89:     if (trfRsp != I2C2_BUSY) {
 30660  009D50  058C               	decf	I2C2_MClose@trfRsp& (0+255),w,b
 30661  009D52  B4D8               	btfsc	status,2,c
 30662  009D54  D00F               	goto	l17623
 30663                           
 30664                           ; BSR set to: 0
 30665                           ;i2c2_mux.c: 91:         if (currentTrfAddr == 0x50){
 30666  009D56  0E50               	movlw	80
 30667  009D58  0101               	movlb	1	; () banked
 30668  009D5A  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 30669  009D5C  A4D8               	btfss	status,2,c
 30670  009D5E  D004               	goto	l2688
 30671                           
 30672                           ; BSR set to: 1
 30673                           ;i2c2_mux.c: 92:             lastI2C2MTrfResponse = trfRsp;
 30674  009D60  0060  F230  F0C0   	movff	I2C2_MClose@trfRsp,_lastI2C2MTrfResponse
 30675                           
 30676                           ;i2c2_mux.c: 93:         } else {
 30677  009D66  D003               	goto	l17619
 30678  009D68                     l2688:
 30679                           
 30680                           ; BSR set to: 1
 30681                           ;i2c2_mux.c: 94:             lastI2C2LTrfResponse = trfRsp;
 30682  009D68  0060  F230  F24E   	movff	I2C2_MClose@trfRsp,_lastI2C2LTrfResponse
 30683  009D6E                     l17619:
 30684                           
 30685                           ; BSR set to: 1
 30686                           ;i2c2_mux.c: 97:         return lastI2C2MTrfResponse;
 30687  009D6E  0100               	movlb	0	; () banked
 30688  009D70  51C0               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 30689  009D72  0012               	return	
 30690  009D74                     l17623:
 30691                           
 30692                           ; BSR set to: 0
 30693                           ;i2c2_mux.c: 99:     return I2C2_BUSY;
 30694  009D74  0E01               	movlw	1
 30695                           
 30696                           ; BSR set to: 0
 30697  009D76  0012               	return		;funcret
 30698  009D78                     __end_of_I2C2_MClose:
 30699                           	opt callstack 0
 30700                           
 30701 ;; *************** function _I2C2_Close *****************
 30702 ;; Defined at:
 30703 ;;		line 239 in file "mcc_generated_files/i2c2_master.c"
 30704 ;; Parameters:    Size  Location     Type
 30705 ;;		None
 30706 ;; Auto vars:     Size  Location     Type
 30707 ;;  returnValue     1   43[BANK0 ] enum E353
 30708 ;; Return value:  Size  Location     Type
 30709 ;;                  1    wreg      enum E353
 30710 ;; Registers used:
 30711 ;;		wreg, status,2, cstack
 30712 ;; Tracked objects:
 30713 ;;		On entry : 0/0
 30714 ;;		On exit  : 3F/0
 30715 ;;		Unchanged: 0/0
 30716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30718 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30720 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30721 ;;Total ram usage:        1 bytes
 30722 ;; Hardware stack levels used:    1
 30723 ;; Hardware stack levels required when called:   18
 30724 ;; This function calls:
 30725 ;;		_I2C2_MasterClearIrq
 30726 ;;		_I2C2_MasterClose
 30727 ;;		_I2C2_MasterDisableIrq
 30728 ;; This function is called by:
 30729 ;;		_I2C2_MClose
 30730 ;; This function uses a non-reentrant model
 30731 ;;
 30732                           
 30733                           	psect	text148
 30734  009E28                     __ptext148:
 30735                           	opt callstack 0
 30736  009E28                     _I2C2_Close:
 30737                           	opt callstack 7
 30738                           
 30739                           ;mcc_generated_files/i2c2_master.c: 241:     i2c2_error_t returnValue = I2C2_BUSY;
 30740                           
 30741                           ; BSR set to: 0
 30742                           ;incstack = 0
 30743  009E28  0E01               	movlw	1
 30744  009E2A  0100               	movlb	0	; () banked
 30745  009E2C  6F8B               	movwf	I2C2_Close@returnValue& (0+255),b
 30746                           
 30747                           ; BSR set to: 0
 30748                           ;mcc_generated_files/i2c2_master.c: 242:     if(!I2C2_Status.busy)
 30749  009E2E  0102               	movlb	2	; () banked
 30750  009E30  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 30751  009E32  D00B               	goto	l17319
 30752                           
 30753                           ; BSR set to: 2
 30754                           ;mcc_generated_files/i2c2_master.c: 243:     {;mcc_generated_files/i2c2_master.c: 244:  
      +                                 I2C2_Status.inUse = 0;
 30755  009E34  9723               	bcf	(_I2C2_Status+35)& (0+255),3,b
 30756                           
 30757                           ;mcc_generated_files/i2c2_master.c: 245:         I2C2_Status.address = 0xff;
 30758  009E36  691C               	setf	(_I2C2_Status+28)& (0+255),b
 30759                           
 30760                           ; BSR set to: 2
 30761                           ;mcc_generated_files/i2c2_master.c: 246:         I2C2_MasterClearIrq();
 30762  009E38  ECAA  F052         	call	_I2C2_MasterClearIrq	;wreg free
 30763                           
 30764                           ; BSR set to: 61
 30765                           ;mcc_generated_files/i2c2_master.c: 247:         I2C2_MasterDisableIrq();
 30766  009E3C  ECB7  F050         	call	_I2C2_MasterDisableIrq	;wreg free
 30767                           
 30768                           ; BSR set to: 61
 30769                           ;mcc_generated_files/i2c2_master.c: 248:         I2C2_MasterClose();
 30770  009E40  EC92  F052         	call	_I2C2_MasterClose	;wreg free
 30771                           
 30772                           ; BSR set to: 61
 30773                           ;mcc_generated_files/i2c2_master.c: 249:         returnValue = I2C2_Status.error;
 30774  009E44  0060  F888  F08B   	movff	_I2C2_Status+34,I2C2_Close@returnValue
 30775  009E4A                     l17319:
 30776                           
 30777                           ;mcc_generated_files/i2c2_master.c: 251:     return returnValue;
 30778  009E4A  0100               	movlb	0	; () banked
 30779  009E4C  518B               	movf	I2C2_Close@returnValue& (0+255),w,b
 30780                           
 30781                           ; BSR set to: 0
 30782  009E4E  0012               	return		;funcret
 30783  009E50                     __end_of_I2C2_Close:
 30784                           	opt callstack 0
 30785                           
 30786 ;; *************** function _I2C2_MasterDisableIrq *****************
 30787 ;; Defined at:
 30788 ;;		line 793 in file "mcc_generated_files/i2c2_master.c"
 30789 ;; Parameters:    Size  Location     Type
 30790 ;;		None
 30791 ;; Auto vars:     Size  Location     Type
 30792 ;;		None
 30793 ;; Return value:  Size  Location     Type
 30794 ;;                  1    wreg      void 
 30795 ;; Registers used:
 30796 ;;		None
 30797 ;; Tracked objects:
 30798 ;;		On entry : 3F/3D
 30799 ;;		On exit  : 3F/3D
 30800 ;;		Unchanged: 0/0
 30801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30806 ;;Total ram usage:        0 bytes
 30807 ;; Hardware stack levels used:    1
 30808 ;; Hardware stack levels required when called:   17
 30809 ;; This function calls:
 30810 ;;		Nothing
 30811 ;; This function is called by:
 30812 ;;		_I2C2_Close
 30813 ;; This function uses a non-reentrant model
 30814 ;;
 30815                           
 30816                           	psect	text149
 30817  00A16E                     __ptext149:
 30818                           	opt callstack 0
 30819  00A16E                     _I2C2_MasterDisableIrq:
 30820                           	opt callstack 7
 30821                           
 30822                           ; BSR set to: 61
 30823                           ;mcc_generated_files/i2c2_master.c: 795:     PIE6bits.I2C2IE = 0;
 30824                           
 30825                           ; BSR set to: 0
 30826                           ;incstack = 0
 30827  00A16E  0139               	movlb	57	; () banked
 30828  00A170  9196               	bcf	150,0,b	;volatile
 30829                           
 30830                           ;mcc_generated_files/i2c2_master.c: 796:     PIE6bits.I2C2EIE = 0;
 30831  00A172  9396               	bcf	150,1,b	;volatile
 30832                           
 30833                           ;mcc_generated_files/i2c2_master.c: 797:     PIE5bits.I2C2RXIE = 0;
 30834  00A174  9D95               	bcf	149,6,b	;volatile
 30835                           
 30836                           ;mcc_generated_files/i2c2_master.c: 798:     PIE5bits.I2C2TXIE = 0;
 30837  00A176  9F95               	bcf	149,7,b	;volatile
 30838                           
 30839                           ;mcc_generated_files/i2c2_master.c: 799:     I2C2PIEbits.SCIE = 0;
 30840  00A178  013D               	movlb	61	; () banked
 30841  00A17A  9164               	bcf	100,0,b	;volatile
 30842                           
 30843                           ;mcc_generated_files/i2c2_master.c: 800:     I2C2PIEbits.PCIE = 0;
 30844  00A17C  9564               	bcf	100,2,b	;volatile
 30845                           
 30846                           ;mcc_generated_files/i2c2_master.c: 801:     I2C2PIEbits.CNTIE = 0;
 30847  00A17E  9F64               	bcf	100,7,b	;volatile
 30848                           
 30849                           ;mcc_generated_files/i2c2_master.c: 802:     I2C2PIEbits.ACKTIE = 0;
 30850  00A180  9D64               	bcf	100,6,b	;volatile
 30851                           
 30852                           ;mcc_generated_files/i2c2_master.c: 803:     I2C2PIEbits.RSCIE = 0;
 30853  00A182  9364               	bcf	100,1,b	;volatile
 30854                           
 30855                           ;mcc_generated_files/i2c2_master.c: 804:     I2C2ERRbits.BCLIE = 0;
 30856  00A184  9360               	bcf	96,1,b	;volatile
 30857                           
 30858                           ;mcc_generated_files/i2c2_master.c: 805:     I2C2ERRbits.BTOIE = 0;
 30859  00A186  9560               	bcf	96,2,b	;volatile
 30860                           
 30861                           ;mcc_generated_files/i2c2_master.c: 806:     I2C2ERRbits.NACKIE = 0;
 30862  00A188  9160               	bcf	96,0,b	;volatile
 30863                           
 30864                           ; BSR set to: 61
 30865  00A18A  0012               	return		;funcret
 30866  00A18C                     __end_of_I2C2_MasterDisableIrq:
 30867                           	opt callstack 0
 30868                           
 30869 ;; *************** function _I2C2_MasterClose *****************
 30870 ;; Defined at:
 30871 ;;		line 656 in file "mcc_generated_files/i2c2_master.c"
 30872 ;; Parameters:    Size  Location     Type
 30873 ;;		None
 30874 ;; Auto vars:     Size  Location     Type
 30875 ;;		None
 30876 ;; Return value:  Size  Location     Type
 30877 ;;                  1    wreg      void 
 30878 ;; Registers used:
 30879 ;;		wreg, status,2
 30880 ;; Tracked objects:
 30881 ;;		On entry : 3F/3D
 30882 ;;		On exit  : 3F/3D
 30883 ;;		Unchanged: 0/0
 30884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30889 ;;Total ram usage:        0 bytes
 30890 ;; Hardware stack levels used:    1
 30891 ;; Hardware stack levels required when called:   17
 30892 ;; This function calls:
 30893 ;;		Nothing
 30894 ;; This function is called by:
 30895 ;;		_I2C2_Close
 30896 ;; This function uses a non-reentrant model
 30897 ;;
 30898                           
 30899                           	psect	text150
 30900  00A524                     __ptext150:
 30901                           	opt callstack 0
 30902  00A524                     _I2C2_MasterClose:
 30903                           	opt callstack 7
 30904                           
 30905                           ; BSR set to: 61
 30906                           ;mcc_generated_files/i2c2_master.c: 659:     I2C2CON0bits.EN = 0;
 30907                           
 30908                           ; BSR set to: 61
 30909                           ;incstack = 0
 30910  00A524  9F5D               	bcf	93,7,b	;volatile
 30911                           
 30912                           ; BSR set to: 61
 30913                           ;mcc_generated_files/i2c2_master.c: 661:     I2C2PIR = 0x00;
 30914  00A526  0E00               	movlw	0
 30915  00A528  6F63               	movwf	99,b	;volatile
 30916                           
 30917                           ; BSR set to: 61
 30918                           ;mcc_generated_files/i2c2_master.c: 663:     I2C2STAT1bits.CLRBF = 1;
 30919  00A52A  8562               	bsf	98,2,b	;volatile
 30920                           
 30921                           ; BSR set to: 61
 30922  00A52C  0012               	return		;funcret
 30923  00A52E                     __end_of_I2C2_MasterClose:
 30924                           	opt callstack 0
 30925                           
 30926 ;; *************** function _I2C2_MasterClearIrq *****************
 30927 ;; Defined at:
 30928 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 30929 ;; Parameters:    Size  Location     Type
 30930 ;;		None
 30931 ;; Auto vars:     Size  Location     Type
 30932 ;;		None
 30933 ;; Return value:  Size  Location     Type
 30934 ;;                  1    wreg      void 
 30935 ;; Registers used:
 30936 ;;		wreg, status,2
 30937 ;; Tracked objects:
 30938 ;;		On entry : 3D/0
 30939 ;;		On exit  : 3F/3D
 30940 ;;		Unchanged: 0/0
 30941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30946 ;;Total ram usage:        0 bytes
 30947 ;; Hardware stack levels used:    1
 30948 ;; Hardware stack levels required when called:   17
 30949 ;; This function calls:
 30950 ;;		Nothing
 30951 ;; This function is called by:
 30952 ;;		_I2C2_Open
 30953 ;;		_I2C2_Close
 30954 ;; This function uses a non-reentrant model
 30955 ;;
 30956                           
 30957                           	psect	text151
 30958  00A554                     __ptext151:
 30959                           	opt callstack 0
 30960  00A554                     _I2C2_MasterClearIrq:
 30961                           	opt callstack 7
 30962                           
 30963                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 30964                           
 30965                           ; BSR set to: 61
 30966                           ;incstack = 0
 30967  00A554  0E00               	movlw	0
 30968  00A556  013D               	movlb	61	; () banked
 30969  00A558  6F63               	movwf	99,b	;volatile
 30970                           
 30971                           ; BSR set to: 61
 30972  00A55A  0012               	return		;funcret
 30973  00A55C                     __end_of_I2C2_MasterClearIrq:
 30974                           	opt callstack 0
 30975                           
 30976 ;; *************** function _INTERRUPT_InterruptManager *****************
 30977 ;; Defined at:
 30978 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 30979 ;; Parameters:    Size  Location     Type
 30980 ;;		None
 30981 ;; Auto vars:     Size  Location     Type
 30982 ;;		None
 30983 ;; Return value:  Size  Location     Type
 30984 ;;                  1    wreg      void 
 30985 ;; Registers used:
 30986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30987 ;; Tracked objects:
 30988 ;;		On entry : 0/0
 30989 ;;		On exit  : 0/0
 30990 ;;		Unchanged: 0/0
 30991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30994 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30995 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30996 ;;Total ram usage:        4 bytes
 30997 ;; Hardware stack levels used:    1
 30998 ;; Hardware stack levels required when called:   16
 30999 ;; This function calls:
 31000 ;;		Absolute function
 31001 ;;		_ADCC_ThresholdISR
 31002 ;;		_I2C2_MasterIsr
 31003 ;;		_TMR2_ISR
 31004 ;;		_TMR4_ISR
 31005 ;;		_TMR6_ISR
 31006 ;;		_UART1_Transmit_ISR
 31007 ;; This function is called by:
 31008 ;;		Interrupt level 2
 31009 ;; This function uses a non-reentrant model
 31010 ;;
 31011                           
 31012                           	psect	text152
 31013  008046                     __ptext152:
 31014                           	opt callstack 0
 31015  008046                     _INTERRUPT_InterruptManager:
 31016                           	opt callstack 0
 31017                           
 31018                           ; BSR set to: 61
 31019                           ;incstack = 0
 31020 ;; hardware stack exceeded
 31021  008046  006F FFD8  F087    	movff	tblptrl,??_INTERRUPT_InterruptManager
 31022  00804C  006F FFDC  F088    	movff	tblptrh,??_INTERRUPT_InterruptManager+1
 31023  008052  006F FFE0  F089    	movff	tblptru,??_INTERRUPT_InterruptManager+2
 31024  008058  006F FFD4  F08A    	movff	tablat,??_INTERRUPT_InterruptManager+3
 31025                           
 31026                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1TXIE == 1 && PIR3bits.U1
      +                          TXIF == 1)
 31027  00805E  0139               	movlb	57	; () banked
 31028  008060  B993               	btfsc	147,4,b	;volatile
 31029                           
 31030                           ; BSR set to: 57
 31031  008062  A9A3               	btfss	163,4,b	;volatile
 31032  008064  D009               	goto	i2l334
 31033                           
 31034                           ; BSR set to: 57
 31035                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_TxInterruptHandler();
 31036  008066  D801               	call	i2u2171_48
 31037  008068  D039               	goto	i2l347
 31038  00806A                     i2u2171_48:
 31039  00806A  0005               	push	
 31040  00806C  6EFA               	movwf	pclath,c
 31041  00806E  0102               	movlb	2	; () banked
 31042  008070  51F6               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 31043  008072  6EFD               	movwf	tosl,c
 31044  008074  51F7               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 31045  008076  D00B               	goto	L54
 31046  008078                     i2l334:
 31047                           
 31048                           ; BSR set to: 57
 31049  008078  B396               	btfsc	150,1,b	;volatile
 31050                           
 31051                           ; BSR set to: 57
 31052  00807A  A3A6               	btfss	166,1,b	;volatile
 31053  00807C  D00C               	goto	i2l336
 31054  00807E                     i2u2173_40:
 31055                           
 31056                           ; BSR set to: 57
 31057                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         I2C2_InterruptHandler();
 31058  00807E  D801               	call	i2u2174_48
 31059  008080  D02D               	goto	i2l347
 31060  008082                     i2u2174_48:
 31061  008082  0005               	push	
 31062  008084  6EFA               	movwf	pclath,c
 31063  008086  0100               	movlb	0	; () banked
 31064  008088  51BC               	movf	_I2C2_InterruptHandler& (0+255),w,b
 31065  00808A  6EFD               	movwf	tosl,c
 31066  00808C  51BD               	movf	(_I2C2_InterruptHandler+1)& (0+255),w,b
 31067  00808E                     L54:
 31068  00808E  6EFE               	movwf	tosh,c
 31069  008090  6AFF               	clrf	tosu,c
 31070  008092  50FA               	movf	pclath,w,c
 31071  008094  0012               	return		;indir
 31072  008096                     i2l336:
 31073                           
 31074                           ; BSR set to: 57
 31075  008096  AD95               	btfss	149,6,b	;volatile
 31076  008098  D002               	goto	i2l338
 31077                           
 31078                           ; BSR set to: 57
 31079  00809A  BDA5               	btfsc	165,6,b	;volatile
 31080  00809C  D7F0               	goto	i2u2173_40
 31081  00809E                     i2l338:
 31082                           
 31083                           ; BSR set to: 57
 31084  00809E  A196               	btfss	150,0,b	;volatile
 31085  0080A0  D002               	goto	i2l340
 31086                           
 31087                           ; BSR set to: 57
 31088  0080A2  B1A6               	btfsc	166,0,b	;volatile
 31089  0080A4  D7EC               	goto	i2u2173_40
 31090  0080A6                     i2l340:
 31091                           
 31092                           ; BSR set to: 57
 31093  0080A6  AF95               	btfss	149,7,b	;volatile
 31094  0080A8  D002               	goto	i2l342
 31095                           
 31096                           ; BSR set to: 57
 31097  0080AA  BFA5               	btfsc	165,7,b	;volatile
 31098  0080AC  D7E8               	goto	i2u2173_40
 31099  0080AE                     i2l342:
 31100                           
 31101                           ; BSR set to: 57
 31102  0080AE  B199               	btfsc	153,0,b	;volatile
 31103                           
 31104                           ; BSR set to: 57
 31105  0080B0  A1A9               	btfss	169,0,b	;volatile
 31106  0080B2  D003               	goto	i2l344
 31107                           
 31108                           ; BSR set to: 57
 31109                           ;mcc_generated_files/interrupt_manager.c: 82:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 83:         TMR6_ISR();
 31110  0080B4  EC02  F050         	call	_TMR6_ISR	;wreg free
 31111                           
 31112                           ;mcc_generated_files/interrupt_manager.c: 84:     }
 31113  0080B8  D011               	goto	i2l347
 31114  0080BA                     i2l344:
 31115                           
 31116                           ; BSR set to: 57
 31117  0080BA  B197               	btfsc	151,0,b	;volatile
 31118                           
 31119                           ; BSR set to: 57
 31120  0080BC  A1A7               	btfss	167,0,b	;volatile
 31121  0080BE  D003               	goto	i2l346
 31122                           
 31123                           ; BSR set to: 57
 31124                           ;mcc_generated_files/interrupt_manager.c: 86:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 87:         TMR4_ISR();
 31125  0080C0  EC13  F050         	call	_TMR4_ISR	;wreg free
 31126                           
 31127                           ;mcc_generated_files/interrupt_manager.c: 88:     }
 31128  0080C4  D00B               	goto	i2l347
 31129  0080C6                     i2l346:
 31130                           
 31131                           ; BSR set to: 57
 31132  0080C6  B791               	btfsc	145,3,b	;volatile
 31133                           
 31134                           ; BSR set to: 57
 31135  0080C8  A7A1               	btfss	161,3,b	;volatile
 31136  0080CA  D003               	goto	i2l348
 31137                           
 31138                           ; BSR set to: 57
 31139                           ;mcc_generated_files/interrupt_manager.c: 90:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 91:         ADCC_ThresholdISR();
 31140  0080CC  EC46  F050         	call	_ADCC_ThresholdISR	;wreg free
 31141                           
 31142                           ;mcc_generated_files/interrupt_manager.c: 92:     }
 31143  0080D0  D005               	goto	i2l347
 31144  0080D2                     i2l348:
 31145                           
 31146                           ; BSR set to: 57
 31147  0080D2  B594               	btfsc	148,2,b	;volatile
 31148                           
 31149                           ; BSR set to: 57
 31150  0080D4  A5A4               	btfss	164,2,b	;volatile
 31151  0080D6  D002               	goto	i2l347
 31152                           
 31153                           ; BSR set to: 57
 31154                           ;mcc_generated_files/interrupt_manager.c: 94:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 95:         TMR2_ISR();
 31155  0080D8  EC24  F050         	call	_TMR2_ISR	;wreg free
 31156  0080DC                     i2l347:
 31157                           
 31158                           ; BSR set to: 57
 31159  0080DC  0060  F22B  FFF5   	movff	??_INTERRUPT_InterruptManager+3,tablat
 31160  0080E2  0060  F227  FFF8   	movff	??_INTERRUPT_InterruptManager+2,tblptru
 31161  0080E8  0060  F223  FFF7   	movff	??_INTERRUPT_InterruptManager+1,tblptrh
 31162  0080EE  0060  F21F  FFF6   	movff	??_INTERRUPT_InterruptManager,tblptrl
 31163  0080F4  0011               	retfie		f
 31164  0080F6                     __end_of_INTERRUPT_InterruptManager:
 31165                           	opt callstack 0
 31166                           
 31167 ;; *************** function _UART1_Transmit_ISR *****************
 31168 ;; Defined at:
 31169 ;;		line 217 in file "mcc_generated_files/uart1.c"
 31170 ;; Parameters:    Size  Location     Type
 31171 ;;		None
 31172 ;; Auto vars:     Size  Location     Type
 31173 ;;		None
 31174 ;; Return value:  Size  Location     Type
 31175 ;;                  1    wreg      void 
 31176 ;; Registers used:
 31177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31178 ;; Tracked objects:
 31179 ;;		On entry : 3F/2
 31180 ;;		On exit  : 6/0
 31181 ;;		Unchanged: 0/0
 31182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31187 ;;Total ram usage:        0 bytes
 31188 ;; Hardware stack levels used:    1
 31189 ;; This function calls:
 31190 ;;		Nothing
 31191 ;; This function is called by:
 31192 ;;		_UART1_Initialize
 31193 ;;		_INTERRUPT_InterruptManager
 31194 ;; This function uses a non-reentrant model
 31195 ;;
 31196                           
 31197                           	psect	text153
 31198  009A7E                     __ptext153:
 31199                           	opt callstack 0
 31200  009A7E                     _UART1_Transmit_ISR:
 31201                           	opt callstack 12
 31202                           
 31203                           ; BSR set to: 2
 31204                           ;mcc_generated_files/uart1.c: 220:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 31205                           
 31206                           ;incstack = 0
 31207  009A7E  0E40               	movlw	64
 31208  009A80  0100               	movlb	0	; () banked
 31209  009A82  61D4               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 31210  009A84  D012               	goto	i2l462
 31211                           
 31212                           ; BSR set to: 0
 31213                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 31214  009A86  0E50               	movlw	low _uart1TxBuffer
 31215  009A88  25CE               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 31216  009A8A  6ED9               	movwf	fsr2l,c
 31217  009A8C  6ADA               	clrf	fsr2h,c
 31218  009A8E  0E03               	movlw	high _uart1TxBuffer
 31219  009A90  22DA               	addwfc	fsr2h,f,c
 31220  009A92  50DF               	movf	indf2,w,c
 31221  009A94  013D               	movlb	61	; () banked
 31222  009A96  6FEA               	movwf	234,b	;volatile
 31223                           
 31224                           ; BSR set to: 61
 31225  009A98  0100               	movlb	0	; () banked
 31226  009A9A  2BCE               	incf	_uart1TxTail& (0+255),f,b	;volatile
 31227                           
 31228                           ; BSR set to: 0
 31229                           ;mcc_generated_files/uart1.c: 223:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 31230  009A9C  0E3F               	movlw	63
 31231  009A9E  65CE               	cpfsgt	_uart1TxTail& (0+255),b
 31232  009AA0  D002               	goto	i2l13463
 31233                           
 31234                           ; BSR set to: 0
 31235                           ;mcc_generated_files/uart1.c: 224:         {;mcc_generated_files/uart1.c: 225:          
      +                             uart1TxTail = 0;
 31236  009AA2  0E00               	movlw	0
 31237  009AA4  6FCE               	movwf	_uart1TxTail& (0+255),b	;volatile
 31238  009AA6                     i2l13463:
 31239                           
 31240                           ; BSR set to: 0
 31241                           ;mcc_generated_files/uart1.c: 227:         uart1TxBufferRemaining++;
 31242  009AA6  2BD4               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 31243                           
 31244                           ;mcc_generated_files/uart1.c: 228:     }
 31245  009AA8  0012               	return	
 31246  009AAA                     i2l462:
 31247                           
 31248                           ; BSR set to: 0
 31249                           ;mcc_generated_files/uart1.c: 230:     {;mcc_generated_files/uart1.c: 231:         PIE3b
      +                          its.U1TXIE = 0;
 31250  009AAA  0139               	movlb	57	; () banked
 31251  009AAC  9993               	bcf	147,4,b	;volatile
 31252  009AAE  0012               	return		;funcret
 31253  009AB0                     __end_of_UART1_Transmit_ISR:
 31254                           	opt callstack 0
 31255                           
 31256 ;; *************** function _TMR6_ISR *****************
 31257 ;; Defined at:
 31258 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 31259 ;; Parameters:    Size  Location     Type
 31260 ;;		None
 31261 ;; Auto vars:     Size  Location     Type
 31262 ;;		None
 31263 ;; Return value:  Size  Location     Type
 31264 ;;                  1    wreg      void 
 31265 ;; Registers used:
 31266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 31267 ;; Tracked objects:
 31268 ;;		On entry : 3F/39
 31269 ;;		On exit  : 0/0
 31270 ;;		Unchanged: 0/0
 31271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31276 ;;Total ram usage:        0 bytes
 31277 ;; Hardware stack levels used:    1
 31278 ;; Hardware stack levels required when called:    2
 31279 ;; This function calls:
 31280 ;;		Absolute function
 31281 ;;		_TMR6_DefaultInterruptHandler
 31282 ;;		_lcdIrqHandler
 31283 ;; This function is called by:
 31284 ;;		_INTERRUPT_InterruptManager
 31285 ;; This function uses a non-reentrant model
 31286 ;;
 31287                           
 31288                           	psect	text154
 31289  00A004                     __ptext154:
 31290                           	opt callstack 0
 31291  00A004                     _TMR6_ISR:
 31292                           	opt callstack 10
 31293                           
 31294                           ; BSR set to: 57
 31295                           ;mcc_generated_files/tmr6.c: 169:     PIR9bits.TMR6IF = 0;
 31296                           
 31297                           ;incstack = 0
 31298  00A004  91A9               	bcf	169,0,b	;volatile
 31299                           
 31300                           ; BSR set to: 57
 31301                           ;mcc_generated_files/tmr6.c: 171:     if(TMR6_InterruptHandler)
 31302  00A006  0102               	movlb	2	; () banked
 31303  00A008  51E8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31304  00A00A  11E9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31305  00A00C  B4D8               	btfsc	status,2,c
 31306  00A00E  0012               	return	
 31307                           
 31308                           ; BSR set to: 2
 31309                           ;mcc_generated_files/tmr6.c: 172:     {;mcc_generated_files/tmr6.c: 173:         TMR6_In
      +                          terruptHandler();
 31310  00A010  D801               	call	i2u1255_48
 31311  00A012  0012               	return	
 31312  00A014                     i2u1255_48:
 31313  00A014  0005               	push	
 31314  00A016  6EFA               	movwf	pclath,c
 31315  00A018  51E8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31316  00A01A  6EFD               	movwf	tosl,c
 31317  00A01C  51E9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31318  00A01E  6EFE               	movwf	tosh,c
 31319  00A020  6AFF               	clrf	tosu,c
 31320  00A022  50FA               	movf	pclath,w,c
 31321  00A024  0012               	return		;indir
 31322  00A026                     __end_of_TMR6_ISR:
 31323                           	opt callstack 0
 31324                           
 31325 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31326 ;; Defined at:
 31327 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31328 ;; Parameters:    Size  Location     Type
 31329 ;;		None
 31330 ;; Auto vars:     Size  Location     Type
 31331 ;;		None
 31332 ;; Return value:  Size  Location     Type
 31333 ;;                  1    wreg      void 
 31334 ;; Registers used:
 31335 ;;		None
 31336 ;; Tracked objects:
 31337 ;;		On entry : 3F/2
 31338 ;;		On exit  : 3F/2
 31339 ;;		Unchanged: 3F/0
 31340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31345 ;;Total ram usage:        0 bytes
 31346 ;; Hardware stack levels used:    1
 31347 ;; This function calls:
 31348 ;;		Nothing
 31349 ;; This function is called by:
 31350 ;;		_TMR6_Initialize
 31351 ;;		_TMR6_ISR
 31352 ;; This function uses a non-reentrant model
 31353 ;;
 31354                           
 31355                           	psect	text155
 31356  00A5FC                     __ptext155:
 31357                           	opt callstack 0
 31358  00A5FC                     _TMR6_DefaultInterruptHandler:
 31359                           	opt callstack 11
 31360                           
 31361                           ; BSR set to: 2
 31362                           
 31363                           ;incstack = 0
 31364  00A5FC  0012               	return		;funcret
 31365  00A5FE                     __end_of_TMR6_DefaultInterruptHandler:
 31366                           	opt callstack 0
 31367                           
 31368 ;; *************** function _lcdIrqHandler *****************
 31369 ;; Defined at:
 31370 ;;		line 32 in file "LiquidCrystal_I2C.c"
 31371 ;; Parameters:    Size  Location     Type
 31372 ;;		None
 31373 ;; Auto vars:     Size  Location     Type
 31374 ;;  byte            1    1[COMRAM] unsigned char 
 31375 ;; Return value:  Size  Location     Type
 31376 ;;                  1    wreg      void 
 31377 ;; Registers used:
 31378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31379 ;; Tracked objects:
 31380 ;;		On entry : 3F/2
 31381 ;;		On exit  : 3F/0
 31382 ;;		Unchanged: 0/0
 31383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31388 ;;Total ram usage:        2 bytes
 31389 ;; Hardware stack levels used:    1
 31390 ;; Hardware stack levels required when called:    1
 31391 ;; This function calls:
 31392 ;;		i2_TMR6_Start
 31393 ;; This function is called by:
 31394 ;;		_LcdI2CInit
 31395 ;;		_TMR6_ISR
 31396 ;; This function uses a non-reentrant model
 31397 ;;
 31398                           
 31399                           	psect	text156
 31400  007A02                     __ptext156:
 31401                           	opt callstack 0
 31402  007A02                     _lcdIrqHandler:
 31403                           	opt callstack 10
 31404                           
 31405                           ; BSR set to: 2
 31406                           ;LiquidCrystal_I2C.c: 33:     uint8_t byte;;LiquidCrystal_I2C.c: 34:     if (parBuffPtr 
      +                          < parBuffLen){
 31407                           
 31408                           ; BSR set to: 2
 31409                           ;incstack = 0
 31410  007A02  0100               	movlb	0	; () banked
 31411  007A04  51C2               	movf	_parBuffLen& (0+255),w,b	;volatile
 31412  007A06  5DC3               	subwf	_parBuffPtr& (0+255),w,b	;volatile
 31413  007A08  B0D8               	btfsc	status,0,c
 31414  007A0A  D067               	goto	i2l13087
 31415                           
 31416                           ; BSR set to: 0
 31417                           ;LiquidCrystal_I2C.c: 36:         LATAbits.LATA7=0;
 31418  007A0C  9EBA               	bcf	186,7,c	;volatile
 31419                           
 31420                           ; BSR set to: 0
 31421                           ;LiquidCrystal_I2C.c: 38:         byte = i2cBuff[parBuffPtr];
 31422  007A0E  0E00               	movlw	low _i2cBuff
 31423  007A10  25C3               	addwf	_parBuffPtr& (0+255),w,b	;volatile
 31424  007A12  6ED9               	movwf	fsr2l,c
 31425  007A14  6ADA               	clrf	fsr2h,c
 31426  007A16  0E03               	movlw	high _i2cBuff
 31427  007A18  22DA               	addwfc	fsr2h,f,c
 31428  007A1A  50DF               	movf	indf2,w,c
 31429  007A1C  6E02               	movwf	lcdIrqHandler@byte^0,c
 31430                           
 31431                           ; BSR set to: 0
 31432                           ;LiquidCrystal_I2C.c: 39:         LATAbits.LATA6=(byte&0x1)?1:0;
 31433  007A1E  A002               	btfss	lcdIrqHandler@byte^0,0,c
 31434  007A20  D003               	goto	i2u1189_40
 31435  007A22  6A01               	clrf	??_lcdIrqHandler^0,c
 31436  007A24  2A01               	incf	??_lcdIrqHandler^0,f,c
 31437  007A26  D001               	goto	i2u1190_48
 31438  007A28                     i2u1189_40:
 31439  007A28  6A01               	clrf	??_lcdIrqHandler^0,c
 31440  007A2A                     i2u1190_48:
 31441  007A2A  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31442  007A2C  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31443  007A2E  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31444  007A30  50BA               	movf	186,w,c	;volatile
 31445  007A32  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31446  007A34  0BBF               	andlw	-65
 31447  007A36  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31448  007A38  6EBA               	movwf	186,c	;volatile
 31449                           
 31450                           ;LiquidCrystal_I2C.c: 41:         LATAbits.LATA7=(byte&0x4)?1:0;
 31451  007A3A  A402               	btfss	lcdIrqHandler@byte^0,2,c
 31452  007A3C  D003               	goto	i2u1191_40
 31453  007A3E  6A01               	clrf	??_lcdIrqHandler^0,c
 31454  007A40  2A01               	incf	??_lcdIrqHandler^0,f,c
 31455  007A42  D001               	goto	i2u1192_48
 31456  007A44                     i2u1191_40:
 31457  007A44  6A01               	clrf	??_lcdIrqHandler^0,c
 31458  007A46                     i2u1192_48:
 31459  007A46  3201               	rrcf	??_lcdIrqHandler^0,f,c
 31460  007A48  3201               	rrcf	??_lcdIrqHandler^0,f,c
 31461  007A4A  50BA               	movf	186,w,c	;volatile
 31462  007A4C  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31463  007A4E  0B7F               	andlw	-129
 31464  007A50  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31465  007A52  6EBA               	movwf	186,c	;volatile
 31466                           
 31467                           ;LiquidCrystal_I2C.c: 43:         LATAbits.LATA0=(byte&0x10)?1:0;
 31468  007A54  A802               	btfss	lcdIrqHandler@byte^0,4,c
 31469  007A56  D003               	goto	i2u1193_40
 31470  007A58  6A01               	clrf	??_lcdIrqHandler^0,c
 31471  007A5A  2A01               	incf	??_lcdIrqHandler^0,f,c
 31472  007A5C  D001               	goto	i2u1194_48
 31473  007A5E                     i2u1193_40:
 31474  007A5E  6A01               	clrf	??_lcdIrqHandler^0,c
 31475  007A60                     i2u1194_48:
 31476  007A60  50BA               	movf	186,w,c	;volatile
 31477  007A62  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31478  007A64  0BFE               	andlw	-2
 31479  007A66  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31480  007A68  6EBA               	movwf	186,c	;volatile
 31481                           
 31482                           ;LiquidCrystal_I2C.c: 44:         LATAbits.LATA1=(byte&0x20)?1:0;
 31483  007A6A  AA02               	btfss	lcdIrqHandler@byte^0,5,c
 31484  007A6C  D003               	goto	i2u1195_40
 31485  007A6E  6A01               	clrf	??_lcdIrqHandler^0,c
 31486  007A70  2A01               	incf	??_lcdIrqHandler^0,f,c
 31487  007A72  D001               	goto	i2u1196_48
 31488  007A74                     i2u1195_40:
 31489  007A74  6A01               	clrf	??_lcdIrqHandler^0,c
 31490  007A76                     i2u1196_48:
 31491  007A76  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31492  007A78  50BA               	movf	186,w,c	;volatile
 31493  007A7A  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31494  007A7C  0BFD               	andlw	-3
 31495  007A7E  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31496  007A80  6EBA               	movwf	186,c	;volatile
 31497                           
 31498                           ;LiquidCrystal_I2C.c: 45:         LATAbits.LATA4=(byte&0x40)?1:0;
 31499  007A82  AC02               	btfss	lcdIrqHandler@byte^0,6,c
 31500  007A84  D003               	goto	i2u1197_40
 31501  007A86  6A01               	clrf	??_lcdIrqHandler^0,c
 31502  007A88  2A01               	incf	??_lcdIrqHandler^0,f,c
 31503  007A8A  D001               	goto	i2u1198_48
 31504  007A8C                     i2u1197_40:
 31505  007A8C  6A01               	clrf	??_lcdIrqHandler^0,c
 31506  007A8E                     i2u1198_48:
 31507  007A8E  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31508  007A90  50BA               	movf	186,w,c	;volatile
 31509  007A92  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31510  007A94  0BEF               	andlw	-17
 31511  007A96  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31512  007A98  6EBA               	movwf	186,c	;volatile
 31513                           
 31514                           ;LiquidCrystal_I2C.c: 46:         LATAbits.LATA5=(byte&0x80)?1:0;
 31515  007A9A  AE02               	btfss	lcdIrqHandler@byte^0,7,c
 31516  007A9C  D003               	goto	i2u1199_40
 31517  007A9E  6A01               	clrf	??_lcdIrqHandler^0,c
 31518  007AA0  2A01               	incf	??_lcdIrqHandler^0,f,c
 31519  007AA2  D001               	goto	i2u1200_48
 31520  007AA4                     i2u1199_40:
 31521  007AA4  6A01               	clrf	??_lcdIrqHandler^0,c
 31522  007AA6                     i2u1200_48:
 31523  007AA6  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31524  007AA8  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31525  007AAA  50BA               	movf	186,w,c	;volatile
 31526  007AAC  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31527  007AAE  0BDF               	andlw	-33
 31528  007AB0  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31529  007AB2  6EBA               	movwf	186,c	;volatile
 31530                           
 31531                           ;LiquidCrystal_I2C.c: 48:         LATBbits.LATB5 = (byte&0x08)?1:0;
 31532  007AB4  A602               	btfss	lcdIrqHandler@byte^0,3,c
 31533  007AB6  D003               	goto	i2u1201_40
 31534  007AB8  6A01               	clrf	??_lcdIrqHandler^0,c
 31535  007ABA  2A01               	incf	??_lcdIrqHandler^0,f,c
 31536  007ABC  D001               	goto	i2u1202_48
 31537  007ABE                     i2u1201_40:
 31538  007ABE  6A01               	clrf	??_lcdIrqHandler^0,c
 31539  007AC0                     i2u1202_48:
 31540  007AC0  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31541  007AC2  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31542  007AC4  50BB               	movf	187,w,c	;volatile
 31543  007AC6  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31544  007AC8  0BDF               	andlw	-33
 31545  007ACA  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31546  007ACC  6EBB               	movwf	187,c	;volatile
 31547                           
 31548                           ;LiquidCrystal_I2C.c: 49:         parBuffPtr++;
 31549  007ACE  0100               	movlb	0	; () banked
 31550  007AD0  2BC3               	incf	_parBuffPtr& (0+255),f,b	;volatile
 31551                           
 31552                           ; BSR set to: 0
 31553                           ;LiquidCrystal_I2C.c: 51:         TMR6_Start();
 31554  007AD2  ECEB  F052         	call	i2_TMR6_Start	;wreg free
 31555                           
 31556                           ; BSR set to: 0
 31557                           ;LiquidCrystal_I2C.c: 53:         LATAbits.LATA7=0;
 31558  007AD6  9EBA               	bcf	186,7,c	;volatile
 31559                           
 31560                           ;LiquidCrystal_I2C.c: 54:     } else {
 31561  007AD8  0012               	return	
 31562  007ADA                     i2l13087:
 31563                           
 31564                           ; BSR set to: 0
 31565                           ;LiquidCrystal_I2C.c: 55:         lcdBusy = 0;
 31566  007ADA  0E00               	movlw	0
 31567  007ADC  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 31568                           
 31569                           ; BSR set to: 0
 31570  007ADE  0012               	return		;funcret
 31571  007AE0                     __end_of_lcdIrqHandler:
 31572                           	opt callstack 0
 31573                           
 31574 ;; *************** function i2_TMR6_Start *****************
 31575 ;; Defined at:
 31576 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 31577 ;; Parameters:    Size  Location     Type
 31578 ;;		None
 31579 ;; Auto vars:     Size  Location     Type
 31580 ;;		None
 31581 ;; Return value:  Size  Location     Type
 31582 ;;                  1    wreg      void 
 31583 ;; Registers used:
 31584 ;;		None
 31585 ;; Tracked objects:
 31586 ;;		On entry : 3F/0
 31587 ;;		On exit  : 3F/0
 31588 ;;		Unchanged: 3F/0
 31589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31594 ;;Total ram usage:        0 bytes
 31595 ;; Hardware stack levels used:    1
 31596 ;; This function calls:
 31597 ;;		Nothing
 31598 ;; This function is called by:
 31599 ;;		_lcdIrqHandler
 31600 ;; This function uses a non-reentrant model
 31601 ;;
 31602                           
 31603                           	psect	text157
 31604  00A5D6                     __ptext157:
 31605                           	opt callstack 0
 31606  00A5D6                     i2_TMR6_Start:
 31607                           	opt callstack 10
 31608                           
 31609                           ; BSR set to: 0
 31610                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 31611                           
 31612                           ; BSR set to: 0
 31613                           ;incstack = 0
 31614  00A5D6  8E94               	bsf	148,7,c	;volatile
 31615                           
 31616                           ; BSR set to: 0
 31617  00A5D8  0012               	return		;funcret
 31618  00A5DA                     __end_ofi2_TMR6_Start:
 31619                           	opt callstack 0
 31620                           
 31621 ;; *************** function _TMR4_ISR *****************
 31622 ;; Defined at:
 31623 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 31624 ;; Parameters:    Size  Location     Type
 31625 ;;		None
 31626 ;; Auto vars:     Size  Location     Type
 31627 ;;		None
 31628 ;; Return value:  Size  Location     Type
 31629 ;;                  1    wreg      void 
 31630 ;; Registers used:
 31631 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31632 ;; Tracked objects:
 31633 ;;		On entry : 3F/39
 31634 ;;		On exit  : 0/0
 31635 ;;		Unchanged: 0/0
 31636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31641 ;;Total ram usage:        0 bytes
 31642 ;; Hardware stack levels used:    1
 31643 ;; Hardware stack levels required when called:    1
 31644 ;; This function calls:
 31645 ;;		Absolute function
 31646 ;;		_SV2DelayOpen
 31647 ;;		_TMR4_DefaultInterruptHandler
 31648 ;; This function is called by:
 31649 ;;		_INTERRUPT_InterruptManager
 31650 ;; This function uses a non-reentrant model
 31651 ;;
 31652                           
 31653                           	psect	text158
 31654  00A026                     __ptext158:
 31655                           	opt callstack 0
 31656  00A026                     _TMR4_ISR:
 31657                           	opt callstack 11
 31658                           
 31659                           ; BSR set to: 57
 31660                           ;mcc_generated_files/tmr4.c: 169:     PIR7bits.TMR4IF = 0;
 31661                           
 31662                           ; BSR set to: 0
 31663                           ;incstack = 0
 31664  00A026  91A7               	bcf	167,0,b	;volatile
 31665                           
 31666                           ; BSR set to: 57
 31667                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
 31668  00A028  0102               	movlb	2	; () banked
 31669  00A02A  51EA               	movf	_TMR4_InterruptHandler& (0+255),w,b
 31670  00A02C  11EB               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 31671  00A02E  B4D8               	btfsc	status,2,c
 31672  00A030  0012               	return	
 31673                           
 31674                           ; BSR set to: 2
 31675                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
 31676  00A032  D801               	call	i2u1257_48
 31677  00A034  0012               	return	
 31678  00A036                     i2u1257_48:
 31679  00A036  0005               	push	
 31680  00A038  6EFA               	movwf	pclath,c
 31681  00A03A  51EA               	movf	_TMR4_InterruptHandler& (0+255),w,b
 31682  00A03C  6EFD               	movwf	tosl,c
 31683  00A03E  51EB               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 31684  00A040  6EFE               	movwf	tosh,c
 31685  00A042  6AFF               	clrf	tosu,c
 31686  00A044  50FA               	movf	pclath,w,c
 31687  00A046  0012               	return		;indir
 31688  00A048                     __end_of_TMR4_ISR:
 31689                           	opt callstack 0
 31690                           
 31691 ;; *************** function _SV2DelayOpen *****************
 31692 ;; Defined at:
 31693 ;;		line 165 in file "main.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;		None
 31696 ;; Auto vars:     Size  Location     Type
 31697 ;;		None
 31698 ;; Return value:  Size  Location     Type
 31699 ;;                  1    wreg      void 
 31700 ;; Registers used:
 31701 ;;		wreg, status,2
 31702 ;; Tracked objects:
 31703 ;;		On entry : 3F/2
 31704 ;;		On exit  : 3F/1
 31705 ;;		Unchanged: 0/0
 31706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31711 ;;Total ram usage:        0 bytes
 31712 ;; Hardware stack levels used:    1
 31713 ;; This function calls:
 31714 ;;		Nothing
 31715 ;; This function is called by:
 31716 ;;		_main
 31717 ;;		_TMR4_ISR
 31718 ;; This function uses a non-reentrant model
 31719 ;;
 31720                           
 31721                           	psect	text159
 31722  00A43A                     __ptext159:
 31723                           	opt callstack 0
 31724  00A43A                     _SV2DelayOpen:
 31725                           	opt callstack 11
 31726                           
 31727                           ; BSR set to: 2
 31728                           ;main.c: 166:     if (initInspSubState) {
 31729                           
 31730                           ;incstack = 0
 31731  00A43A  0101               	movlb	1	; () banked
 31732  00A43C  51C6               	movf	_initInspSubState& (0+255),w,b
 31733  00A43E  B4D8               	btfsc	status,2,c
 31734  00A440  0012               	return	
 31735                           
 31736                           ; BSR set to: 1
 31737                           ;main.c: 167:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
 31738  00A442  94BA               	bcf	186,2,c	;volatile
 31739  00A444  86BC               	bsf	188,3,c	;volatile
 31740                           
 31741                           ; BSR set to: 1
 31742  00A446  0012               	return		;funcret
 31743  00A448                     __end_of_SV2DelayOpen:
 31744                           	opt callstack 0
 31745                           
 31746 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 31747 ;; Defined at:
 31748 ;;		line 182 in file "mcc_generated_files/tmr4.c"
 31749 ;; Parameters:    Size  Location     Type
 31750 ;;		None
 31751 ;; Auto vars:     Size  Location     Type
 31752 ;;		None
 31753 ;; Return value:  Size  Location     Type
 31754 ;;                  1    wreg      void 
 31755 ;; Registers used:
 31756 ;;		None
 31757 ;; Tracked objects:
 31758 ;;		On entry : 3F/2
 31759 ;;		On exit  : 3F/2
 31760 ;;		Unchanged: 3F/0
 31761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31766 ;;Total ram usage:        0 bytes
 31767 ;; Hardware stack levels used:    1
 31768 ;; This function calls:
 31769 ;;		Nothing
 31770 ;; This function is called by:
 31771 ;;		_TMR4_Initialize
 31772 ;;		_TMR4_ISR
 31773 ;; This function uses a non-reentrant model
 31774 ;;
 31775                           
 31776                           	psect	text160
 31777  00A5FE                     __ptext160:
 31778                           	opt callstack 0
 31779  00A5FE                     _TMR4_DefaultInterruptHandler:
 31780                           	opt callstack 11
 31781                           
 31782                           ; BSR set to: 2
 31783                           
 31784                           ; BSR set to: 1
 31785                           ;incstack = 0
 31786  00A5FE  0012               	return		;funcret
 31787  00A600                     __end_of_TMR4_DefaultInterruptHandler:
 31788                           	opt callstack 0
 31789                           
 31790 ;; *************** function _TMR2_ISR *****************
 31791 ;; Defined at:
 31792 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 31793 ;; Parameters:    Size  Location     Type
 31794 ;;		None
 31795 ;; Auto vars:     Size  Location     Type
 31796 ;;		None
 31797 ;; Return value:  Size  Location     Type
 31798 ;;                  1    wreg      void 
 31799 ;; Registers used:
 31800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31801 ;; Tracked objects:
 31802 ;;		On entry : 3F/39
 31803 ;;		On exit  : 0/0
 31804 ;;		Unchanged: 0/0
 31805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31810 ;;Total ram usage:        0 bytes
 31811 ;; Hardware stack levels used:    1
 31812 ;; Hardware stack levels required when called:   11
 31813 ;; This function calls:
 31814 ;;		Absolute function
 31815 ;;		_TMR2_DefaultInterruptHandler
 31816 ;;		_vMeasureIsr
 31817 ;; This function is called by:
 31818 ;;		_INTERRUPT_InterruptManager
 31819 ;; This function uses a non-reentrant model
 31820 ;;
 31821                           
 31822                           	psect	text161
 31823  00A048                     __ptext161:
 31824                           	opt callstack 0
 31825  00A048                     _TMR2_ISR:
 31826                           	opt callstack 1
 31827                           
 31828                           ; BSR set to: 57
 31829                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 31830                           
 31831                           ; BSR set to: 2
 31832                           ;incstack = 0
 31833  00A048  95A4               	bcf	164,2,b	;volatile
 31834                           
 31835                           ; BSR set to: 57
 31836                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 31837  00A04A  0102               	movlb	2	; () banked
 31838  00A04C  51EC               	movf	_TMR2_InterruptHandler& (0+255),w,b
 31839  00A04E  11ED               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 31840  00A050  B4D8               	btfsc	status,2,c
 31841  00A052  0012               	return	
 31842                           
 31843                           ; BSR set to: 2
 31844                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 31845  00A054  D801               	call	i2u2010_48
 31846  00A056  0012               	return	
 31847  00A058                     i2u2010_48:
 31848  00A058  0005               	push	
 31849  00A05A  6EFA               	movwf	pclath,c
 31850  00A05C  51EC               	movf	_TMR2_InterruptHandler& (0+255),w,b
 31851  00A05E  6EFD               	movwf	tosl,c
 31852  00A060  51ED               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 31853  00A062  6EFE               	movwf	tosh,c
 31854  00A064  6AFF               	clrf	tosu,c
 31855  00A066  50FA               	movf	pclath,w,c
 31856  00A068  0012               	return		;indir
 31857  00A06A                     __end_of_TMR2_ISR:
 31858                           	opt callstack 0
 31859                           
 31860 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 31861 ;; Defined at:
 31862 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 31863 ;; Parameters:    Size  Location     Type
 31864 ;;		None
 31865 ;; Auto vars:     Size  Location     Type
 31866 ;;		None
 31867 ;; Return value:  Size  Location     Type
 31868 ;;                  1    wreg      void 
 31869 ;; Registers used:
 31870 ;;		None
 31871 ;; Tracked objects:
 31872 ;;		On entry : 3F/2
 31873 ;;		On exit  : 3F/2
 31874 ;;		Unchanged: 3F/0
 31875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31880 ;;Total ram usage:        0 bytes
 31881 ;; Hardware stack levels used:    1
 31882 ;; This function calls:
 31883 ;;		Nothing
 31884 ;; This function is called by:
 31885 ;;		_TMR2_Initialize
 31886 ;;		_TMR2_ISR
 31887 ;; This function uses a non-reentrant model
 31888 ;;
 31889                           
 31890                           	psect	text162
 31891  00A600                     __ptext162:
 31892                           	opt callstack 0
 31893  00A600                     _TMR2_DefaultInterruptHandler:
 31894                           	opt callstack 11
 31895                           
 31896                           ; BSR set to: 2
 31897                           
 31898                           ;incstack = 0
 31899  00A600  0012               	return		;funcret
 31900  00A602                     __end_of_TMR2_DefaultInterruptHandler:
 31901                           	opt callstack 0
 31902                           
 31903 ;; *************** function _vMeasureIsr *****************
 31904 ;; Defined at:
 31905 ;;		line 12 in file "vMeasure.c"
 31906 ;; Parameters:    Size  Location     Type
 31907 ;;		None
 31908 ;; Auto vars:     Size  Location     Type
 31909 ;;  instP           2   37[BANK0 ] short 
 31910 ;;  v2              2   35[BANK0 ] unsigned short 
 31911 ;;  v1              2   33[BANK0 ] unsigned short 
 31912 ;; Return value:  Size  Location     Type
 31913 ;;                  1    wreg      void 
 31914 ;; Registers used:
 31915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31916 ;; Tracked objects:
 31917 ;;		On entry : 3F/2
 31918 ;;		On exit  : 4/0
 31919 ;;		Unchanged: 0/0
 31920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31922 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31924 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31925 ;;Total ram usage:        8 bytes
 31926 ;; Hardware stack levels used:    1
 31927 ;; Hardware stack levels required when called:   10
 31928 ;; This function calls:
 31929 ;;		_isqrt
 31930 ;;		i2_aCaptGetResult
 31931 ;; This function is called by:
 31932 ;;		_vMeasureInit
 31933 ;;		_TMR2_ISR
 31934 ;; This function uses a non-reentrant model
 31935 ;;
 31936                           
 31937                           	psect	text163
 31938  008440                     __ptext163:
 31939                           	opt callstack 0
 31940  008440                     _vMeasureIsr:
 31941                           	opt callstack 1
 31942                           
 31943                           ; BSR set to: 2
 31944                           ;vMeasure.c: 13:     int16_t instP;;vMeasure.c: 14:     uint16_t v1, v2;;vMeasure.c: 15:
      +                               if (aCaptGetResult(VolPSensor, &instP)) {
 31945                           
 31946                           ; BSR set to: 2
 31947                           ;incstack = 0
 31948  008440  0E85               	movlw	low vMeasureIsr@instP
 31949  008442  0100               	movlb	0	; () banked
 31950  008444  6F7F               	movwf	i2aCaptGetResult@outVal& (0+255),b
 31951  008446  6B80               	clrf	(i2aCaptGetResult@outVal+1)& (0+255),b
 31952  008448  0E01               	movlw	1
 31953  00844A  EC4E  F033         	call	i2_aCaptGetResult
 31954  00844E  0900               	iorlw	0
 31955  008450  B4D8               	btfsc	status,2,c
 31956  008452  0012               	return	
 31957                           
 31958                           ;vMeasure.c: 16:         if (instP > 0) {
 31959  008454  0100               	movlb	0	; () banked
 31960  008456  BF86               	btfsc	(vMeasureIsr@instP+1)& (0+255),7,b
 31961  008458  D029               	goto	i2l18937
 31962  00845A  5186               	movf	(vMeasureIsr@instP+1)& (0+255),w,b
 31963  00845C  E103               	bnz	i2u1968_40
 31964  00845E  0585               	decf	vMeasureIsr@instP& (0+255),w,b
 31965  008460  A0D8               	btfss	status,0,c
 31966  008462  D024               	goto	i2l18937
 31967  008464                     i2u1968_40:
 31968                           
 31969                           ; BSR set to: 0
 31970                           ;vMeasure.c: 17:             v1 = instP << 4;
 31971  008464  0060  F214  F05E   	movff	vMeasureIsr@instP,??_vMeasureIsr
 31972  00846A  0060  F218  F05F   	movff	vMeasureIsr@instP+1,??_vMeasureIsr+1
 31973  008470  3A5E               	swapf	??_vMeasureIsr^0,f,c
 31974  008472  3A5F               	swapf	(??_vMeasureIsr+1)^0,f,c
 31975  008474  0EF0               	movlw	240
 31976  008476  165F               	andwf	(??_vMeasureIsr+1)^0,f,c
 31977  008478  505E               	movf	??_vMeasureIsr^0,w,c
 31978  00847A  0B0F               	andlw	15
 31979  00847C  125F               	iorwf	(??_vMeasureIsr+1)^0,f,c
 31980  00847E  0EF0               	movlw	240
 31981  008480  165E               	andwf	??_vMeasureIsr^0,f,c
 31982  008482  0060  F178  F081   	movff	??_vMeasureIsr,vMeasureIsr@v1
 31983  008488  0060  F17C  F082   	movff	??_vMeasureIsr+1,vMeasureIsr@v1+1
 31984                           
 31985                           ; BSR set to: 0
 31986                           ;vMeasure.c: 18:             v2 = isqrt(v1);
 31987  00848E  0060  F204  F001   	movff	vMeasureIsr@v1,isqrt@x
 31988  008494  0060  F208  F002   	movff	vMeasureIsr@v1+1,isqrt@x+1
 31989  00849A  EC7C  F041         	call	_isqrt	;wreg free
 31990  00849E  0060  F004  F083   	movff	?_isqrt,vMeasureIsr@v2
 31991  0084A4  0060  F008  F084   	movff	?_isqrt+1,vMeasureIsr@v2+1
 31992                           
 31993                           ;vMeasure.c: 19:         } else {
 31994  0084AA  D004               	goto	i2l18939
 31995  0084AC                     i2l18937:
 31996                           
 31997                           ; BSR set to: 0
 31998                           ;vMeasure.c: 21:             v2 = 0;
 31999  0084AC  0E00               	movlw	0
 32000  0084AE  6F84               	movwf	(vMeasureIsr@v2+1)& (0+255),b
 32001  0084B0  0E00               	movlw	0
 32002  0084B2  6F83               	movwf	vMeasureIsr@v2& (0+255),b
 32003  0084B4                     i2l18939:
 32004                           
 32005                           ; BSR set to: 0
 32006                           ;vMeasure.c: 23:         if (v2 > 20) {
 32007  0084B4  5184               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 32008  0084B6  E104               	bnz	i2u1969_40
 32009  0084B8  0E15               	movlw	21
 32010  0084BA  5D83               	subwf	vMeasureIsr@v2& (0+255),w,b
 32011  0084BC  A0D8               	btfss	status,0,c
 32012  0084BE  0012               	return	
 32013  0084C0                     i2u1969_40:
 32014                           
 32015                           ; BSR set to: 0
 32016                           ;vMeasure.c: 24:             volume = volume + v2;
 32017  0084C0  5183               	movf	vMeasureIsr@v2& (0+255),w,b
 32018  0084C2  0102               	movlb	2	; () banked
 32019  0084C4  252B               	addwf	_volume& (0+255),w,b
 32020  0084C6  6F2B               	movwf	_volume& (0+255),b
 32021  0084C8  0100               	movlb	0	; () banked
 32022  0084CA  5184               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 32023  0084CC  0102               	movlb	2	; () banked
 32024  0084CE  212C               	addwfc	(_volume+1)& (0+255),w,b
 32025  0084D0  6F2C               	movwf	(_volume+1)& (0+255),b
 32026  0084D2  0E00               	movlw	0
 32027  0084D4  212D               	addwfc	(_volume+2)& (0+255),w,b
 32028  0084D6  6F2D               	movwf	(_volume+2)& (0+255),b
 32029  0084D8  0E00               	movlw	0
 32030  0084DA  212E               	addwfc	(_volume+3)& (0+255),w,b
 32031  0084DC  6F2E               	movwf	(_volume+3)& (0+255),b
 32032  0084DE  0012               	return		;funcret
 32033  0084E0                     __end_of_vMeasureIsr:
 32034                           	opt callstack 0
 32035                           
 32036 ;; *************** function i2_aCaptGetResult *****************
 32037 ;; Defined at:
 32038 ;;		line 159 in file "aCapture.c"
 32039 ;; Parameters:    Size  Location     Type
 32040 ;;  sel             1    wreg     enum E16104
 32041 ;;  outVal          2   31[BANK0 ] PTR short 
 32042 ;;		 -> MonitorMsgForcedSend@vddVal(2), SelfTest@vddVal(2), flowChk@aPVal(2), pressureSensorChk@aPVal(2), 
 32043 ;;		 -> pressureSensorChk@mPVal(2), vMeasureIsr@instP(2), bdP2(2), bdP1(2), 
 32044 ;;		 -> pAvgShort(2), main@tmpVal(2), pAvgUShort(2), pInst(2), 
 32045 ;; Auto vars:     Size  Location     Type
 32046 ;;  sel             1   88[COMRAM] enum E16104
 32047 ;;  aCaptGetResu    4   89[COMRAM] unsigned long 
 32048 ;;  aCaptGetResu    1   87[COMRAM] unsigned char 
 32049 ;; Return value:  Size  Location     Type
 32050 ;;                  1    wreg      _Bool 
 32051 ;; Registers used:
 32052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32053 ;; Tracked objects:
 32054 ;;		On entry : 3F/0
 32055 ;;		On exit  : 4/0
 32056 ;;		Unchanged: 0/0
 32057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32059 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32061 ;;      Totals:        10       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32062 ;;Total ram usage:       12 bytes
 32063 ;; Hardware stack levels used:    1
 32064 ;; Hardware stack levels required when called:    9
 32065 ;; This function calls:
 32066 ;;		i2_printf
 32067 ;; This function is called by:
 32068 ;;		_vMeasureIsr
 32069 ;; This function uses a non-reentrant model
 32070 ;;
 32071                           
 32072                           	psect	text164
 32073  00669C                     __ptext164:
 32074                           	opt callstack 0
 32075  00669C                     i2_aCaptGetResult:
 32076                           	opt callstack 1
 32077                           
 32078                           ;incstack = 0
 32079                           ;i2aCaptGetResult@sel stored from wreg
 32080  00669C  6E59               	movwf	i2aCaptGetResult@sel^0,c
 32081                           
 32082                           ;aCapture.c: 160:     uint32_t lclRaw;;aCapture.c: 161:     uint8_t lclValid;;aCapture.c
      +                          : 164:     PIE1bits.ADTIE = 0;
 32083  00669E  0139               	movlb	57	; () banked
 32084  0066A0  9791               	bcf	145,3,b	;volatile
 32085                           
 32086                           ; BSR set to: 57
 32087                           ;aCapture.c: 165:     lclRaw=resultTbl[sel];
 32088  0066A2  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32089  0066A4  0D04               	mullw	4
 32090  0066A6  0E73               	movlw	low _resultTbl
 32091  0066A8  24F3               	addwf	243,w,c
 32092  0066AA  6ED9               	movwf	fsr2l,c
 32093  0066AC  0E02               	movlw	high _resultTbl
 32094  0066AE  20F4               	addwfc	prodh,w,c
 32095  0066B0  6EDA               	movwf	fsr2h,c
 32096  0066B2  006F FF78  F05A    	movff	postinc2,i2aCaptGetResult@lclRaw
 32097  0066B8  006F FF78  F05B    	movff	postinc2,i2aCaptGetResult@lclRaw+1
 32098  0066BE  006F FF78  F05C    	movff	postinc2,i2aCaptGetResult@lclRaw+2
 32099  0066C4  006F FF78  F05D    	movff	postinc2,i2aCaptGetResult@lclRaw+3
 32100                           
 32101                           ; BSR set to: 57
 32102                           ;aCapture.c: 166:     lclValid=resultTblVal[sel];
 32103  0066CA  0E24               	movlw	low _resultTblVal
 32104  0066CC  2459               	addwf	i2aCaptGetResult@sel^0,w,c
 32105  0066CE  6ED9               	movwf	fsr2l,c
 32106  0066D0  6ADA               	clrf	fsr2h,c
 32107  0066D2  0E02               	movlw	high _resultTblVal
 32108  0066D4  22DA               	addwfc	fsr2h,f,c
 32109  0066D6  50DF               	movf	indf2,w,c
 32110  0066D8  6E58               	movwf	i2aCaptGetResult@lclValid^0,c
 32111                           
 32112                           ; BSR set to: 57
 32113                           ;aCapture.c: 167:     PIE1bits.ADTIE = 1;
 32114  0066DA  8791               	bsf	145,3,b	;volatile
 32115                           
 32116                           ; BSR set to: 57
 32117                           ;aCapture.c: 169:     if (lclValid == 0) {
 32118  0066DC  5058               	movf	i2aCaptGetResult@lclValid^0,w,c
 32119  0066DE  A4D8               	btfss	status,2,c
 32120  0066E0  D066               	goto	i2l18327
 32121                           
 32122                           ; BSR set to: 57
 32123                           ;aCapture.c: 170:         return 0;
 32124  0066E2  0E00               	movlw	0
 32125  0066E4  0012               	return	
 32126  0066E6                     i2l18317:
 32127                           
 32128                           ; BSR set to: 57
 32129                           ;aCapture.c: 177:             lclRaw=lclRaw>>9;
 32130  0066E6  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32131  0066EC  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32132  0066F2  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32133  0066F8  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32134  0066FE  0E0A               	movlw	10
 32135  006700  D005               	goto	i2u1890_40
 32136  006702                     i2u1890_45:
 32137  006702  90D8               	bcf	status,0,c
 32138  006704  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32139  006706  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32140  006708  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32141  00670A  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32142  00670C                     i2u1890_40:
 32143  00670C  2EE8               	decfsz	wreg,f,c
 32144  00670E  D7F9               	goto	i2u1890_45
 32145  006710  D041               	goto	L57
 32146  006712                     i2l18319:
 32147                           
 32148                           ; BSR set to: 57
 32149                           ;aCapture.c: 180:             lclRaw=lclRaw>>6;
 32150  006712  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32151  006718  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32152  00671E  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32153  006724  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32154  00672A  0E07               	movlw	7
 32155  00672C  D005               	goto	i2u1891_40
 32156  00672E                     i2u1891_45:
 32157  00672E  90D8               	bcf	status,0,c
 32158  006730  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32159  006732  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32160  006734  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32161  006736  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32162  006738                     i2u1891_40:
 32163  006738  2EE8               	decfsz	wreg,f,c
 32164  00673A  D7F9               	goto	i2u1891_45
 32165  00673C  D02B               	goto	L57
 32166  00673E                     i2l18321:
 32167                           
 32168                           ; BSR set to: 57
 32169                           ;aCapture.c: 183:             lclRaw=lclRaw>>4;
 32170  00673E  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32171  006744  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32172  00674A  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32173  006750  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32174  006756  0E05               	movlw	5
 32175  006758  D005               	goto	i2u1892_40
 32176  00675A                     i2u1892_45:
 32177  00675A  90D8               	bcf	status,0,c
 32178  00675C  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32179  00675E  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32180  006760  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32181  006762  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32182  006764                     i2u1892_40:
 32183  006764  2EE8               	decfsz	wreg,f,c
 32184  006766  D7F9               	goto	i2u1892_45
 32185  006768  D015               	goto	L57
 32186  00676A                     i2l18323:
 32187                           
 32188                           ; BSR set to: 57
 32189                           ;aCapture.c: 186:             lclRaw=lclRaw>>2;
 32190  00676A  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32191  006770  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32192  006776  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32193  00677C  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32194  006782  0E03               	movlw	3
 32195  006784  D005               	goto	i2u1893_40
 32196  006786                     i2u1893_45:
 32197  006786  90D8               	bcf	status,0,c
 32198  006788  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32199  00678A  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32200  00678C  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32201  00678E  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32202  006790                     i2u1893_40:
 32203  006790  2EE8               	decfsz	wreg,f,c
 32204  006792  D7F9               	goto	i2u1893_45
 32205  006794                     L57:
 32206  006794  0060  F150  F05A   	movff	??i2_aCaptGetResult,i2aCaptGetResult@lclRaw
 32207  00679A  0060  F154  F05B   	movff	??i2_aCaptGetResult+1,i2aCaptGetResult@lclRaw+1
 32208  0067A0  0060  F158  F05C   	movff	??i2_aCaptGetResult+2,i2aCaptGetResult@lclRaw+2
 32209  0067A6  0060  F15C  F05D   	movff	??i2_aCaptGetResult+3,i2aCaptGetResult@lclRaw+3
 32210                           
 32211                           ;aCapture.c: 187:             break;
 32212  0067AC  D09E               	goto	i2l18357
 32213  0067AE                     i2l18327:
 32214                           
 32215                           ; BSR set to: 57
 32216  0067AE  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32217  0067B0  6E54               	movwf	??i2_aCaptGetResult^0,c
 32218  0067B2  6A55               	clrf	(??i2_aCaptGetResult+1)^0,c
 32219                           
 32220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32221                           ; Switch size 1, requested type "simple"
 32222                           ; Number of cases is 1, Range of values is 0 to 0
 32223                           ; switch strategies available:
 32224                           ; Name         Instructions Cycles
 32225                           ; simple_byte            4     3 (average)
 32226                           ;	Chosen strategy is simple_byte
 32227  0067B4  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32228  0067B6  0A00               	xorlw	0	; case 0
 32229  0067B8  A4D8               	btfss	status,2,c
 32230  0067BA  D097               	goto	i2l18357
 32231                           
 32232                           ; BSR set to: 57
 32233                           ; Switch size 1, requested type "simple"
 32234                           ; Number of cases is 4, Range of values is 3 to 6
 32235                           ; switch strategies available:
 32236                           ; Name         Instructions Cycles
 32237                           ; simple_byte           13     7 (average)
 32238                           ;	Chosen strategy is simple_byte
 32239  0067BC  5054               	movf	??i2_aCaptGetResult^0,w,c
 32240  0067BE  0A03               	xorlw	3	; case 3
 32241  0067C0  B4D8               	btfsc	status,2,c
 32242  0067C2  D7D3               	goto	i2l18323
 32243  0067C4  0A07               	xorlw	7	; case 4
 32244  0067C6  B4D8               	btfsc	status,2,c
 32245  0067C8  D7BA               	goto	i2l18321
 32246  0067CA  0A01               	xorlw	1	; case 5
 32247  0067CC  B4D8               	btfsc	status,2,c
 32248  0067CE  D7A1               	goto	i2l18319
 32249  0067D0  0A03               	xorlw	3	; case 6
 32250  0067D2  B4D8               	btfsc	status,2,c
 32251  0067D4  D788               	goto	i2l18317
 32252  0067D6  D089               	goto	i2l18357
 32253  0067D8                     i2l1990:
 32254                           
 32255                           ; BSR set to: 57
 32256                           ;aCapture.c: 199:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 32257                           
 32258                           ; BSR set to: 57
 32259  0067D8  0060  F7D4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32260  0067DE  0060  F7D8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32261  0067E4  0E00               	movlw	0
 32262  0067E6  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32263  0067E8  0EFF               	movlw	255
 32264  0067EA  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32265  0067EC  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32266  0067EE  5054               	movf	??i2_aCaptGetResult^0,w,c
 32267  0067F0  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32268  0067F2  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32269  0067F4  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32270  0067F6  5056               	movf	(??i2_aCaptGetResult+2)^0,w,c
 32271  0067F8  585C               	subwfb	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32272  0067FA  5057               	movf	(??i2_aCaptGetResult+3)^0,w,c
 32273  0067FC  585D               	subwfb	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32274  0067FE  B0D8               	btfsc	status,0,c
 32275  006800  D022               	goto	i2l18335
 32276                           
 32277                           ; BSR set to: 57
 32278  006802  0060  F7D4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32279  006808  0060  F7D8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32280  00680E  0E00               	movlw	0
 32281  006810  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32282  006812  0EFF               	movlw	255
 32283  006814  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32284  006816  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32285  006818  505A               	movf	i2aCaptGetResult@lclRaw^0,w,c
 32286  00681A  5C54               	subwf	??i2_aCaptGetResult^0,w,c
 32287  00681C  6E5A               	movwf	i2aCaptGetResult@lclRaw^0,c
 32288  00681E  505B               	movf	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32289  006820  5855               	subwfb	(??i2_aCaptGetResult+1)^0,w,c
 32290  006822  6E5B               	movwf	(i2aCaptGetResult@lclRaw+1)^0,c
 32291  006824  505C               	movf	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32292  006826  5856               	subwfb	(??i2_aCaptGetResult+2)^0,w,c
 32293  006828  6E5C               	movwf	(i2aCaptGetResult@lclRaw+2)^0,c
 32294  00682A  505D               	movf	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32295  00682C  5857               	subwfb	(??i2_aCaptGetResult+3)^0,w,c
 32296  00682E  6E5D               	movwf	(i2aCaptGetResult@lclRaw+3)^0,c
 32297                           
 32298                           ; BSR set to: 57
 32299                           ;aCapture.c: 200:                 *outVal = - (lclRaw/1);
 32300  006830  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32301  006836  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32302  00683C  1E54               	comf	??i2_aCaptGetResult^0,f,c
 32303  00683E  1E55               	comf	(??i2_aCaptGetResult+1)^0,f,c
 32304  006840  4A54               	infsnz	??i2_aCaptGetResult^0,f,c
 32305  006842  2A55               	incf	(??i2_aCaptGetResult+1)^0,f,c
 32306  006844  D036               	goto	L59
 32307  006846                     i2l18335:
 32308                           
 32309                           ; BSR set to: 57
 32310                           ;aCapture.c: 202:                 lclRaw = lclRaw - mainPSensCal;
 32311  006846  0060  F7D4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32312  00684C  0060  F7D8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32313  006852  0E00               	movlw	0
 32314  006854  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32315  006856  0EFF               	movlw	255
 32316  006858  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32317  00685A  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32318  00685C  5054               	movf	??i2_aCaptGetResult^0,w,c
 32319  00685E  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32320  006860  6E5A               	movwf	i2aCaptGetResult@lclRaw^0,c
 32321  006862  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32322  006864  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32323  006866  6E5B               	movwf	(i2aCaptGetResult@lclRaw+1)^0,c
 32324  006868  5056               	movf	(??i2_aCaptGetResult+2)^0,w,c
 32325  00686A  585C               	subwfb	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32326  00686C  6E5C               	movwf	(i2aCaptGetResult@lclRaw+2)^0,c
 32327  00686E  5057               	movf	(??i2_aCaptGetResult+3)^0,w,c
 32328  006870  585D               	subwfb	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32329  006872  6E5D               	movwf	(i2aCaptGetResult@lclRaw+3)^0,c
 32330                           
 32331                           ; BSR set to: 57
 32332                           ;aCapture.c: 203:                 *outVal=(lclRaw/1);
 32333  006874  0060  F1FF  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 32334  00687A  0060  F203  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 32335  006880  0060  F16B  FFDE   	movff	i2aCaptGetResult@lclRaw,postinc2
 32336  006886  0060  F16F  FFDD   	movff	i2aCaptGetResult@lclRaw+1,postdec2
 32337  00688C                     i2l18339:
 32338                           
 32339                           ;aCapture.c: 205:             return 1;
 32340  00688C  0E01               	movlw	1
 32341  00688E  0012               	return	
 32342  006890                     i2l18343:
 32343                           
 32344                           ; BSR set to: 57
 32345                           ;aCapture.c: 207:             *outVal = (lclRaw - auxPSensCal)/1;
 32346  006890  0102               	movlb	2	; () banked
 32347  006892  51E6               	movf	_auxPSensCal& (0+255),w,b
 32348  006894  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32349  006896  6E54               	movwf	??i2_aCaptGetResult^0,c
 32350  006898  51E7               	movf	(_auxPSensCal+1)& (0+255),w,b
 32351  00689A  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32352  00689C  6E55               	movwf	(??i2_aCaptGetResult+1)^0,c
 32353  00689E  D009               	goto	L59
 32354  0068A0                     i2l18349:
 32355                           
 32356                           ; BSR set to: 57
 32357                           ;aCapture.c: 210:             *outVal = lclRaw<<1;
 32358  0068A0  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32359  0068A6  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32360  0068AC  90D8               	bcf	status,0,c
 32361  0068AE  3654               	rlcf	??i2_aCaptGetResult^0,f,c
 32362  0068B0  3655               	rlcf	(??i2_aCaptGetResult+1)^0,f,c
 32363  0068B2                     L59:
 32364  0068B2  0060  F1FF  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 32365  0068B8  0060  F203  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 32366  0068BE  0060  F153  FFDE   	movff	??i2_aCaptGetResult,postinc2
 32367  0068C4  0060  F157  FFDD   	movff	??i2_aCaptGetResult+1,postdec2
 32368  0068CA  D7E0               	goto	i2l18339
 32369  0068CC                     i2l1996:
 32370                           
 32371                           ; BSR set to: 57
 32372                           ;aCapture.c: 214:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",104);
 32373  0068CC  94BA               	bcf	186,2,c	;volatile
 32374  0068CE  96BC               	bcf	188,3,c	;volatile
 32375  0068D0  96BA               	bcf	186,3,c	;volatile
 32376                           
 32377                           ; BSR set to: 57
 32378  0068D2  0EB1               	movlw	low STR_28
 32379  0068D4  0100               	movlb	0	; () banked
 32380  0068D6  6F7B               	movwf	i2printf@fmt& (0+255),b
 32381  0068D8  0EFF               	movlw	high STR_28
 32382  0068DA  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 32383  0068DC  0E00               	movlw	0
 32384  0068DE  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 32385  0068E0  0E68               	movlw	104
 32386  0068E2  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 32387  0068E4  EC87  F04F         	call	i2_printf	;wreg free
 32388                           
 32389                           ;aCapture.c: 215:     }
 32390  0068E8  0012               	return	
 32391  0068EA                     i2l18357:
 32392                           
 32393                           ; BSR set to: 57
 32394  0068EA  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32395  0068EC  6E54               	movwf	??i2_aCaptGetResult^0,c
 32396  0068EE  6A55               	clrf	(??i2_aCaptGetResult+1)^0,c
 32397                           
 32398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32399                           ; Switch size 1, requested type "simple"
 32400                           ; Number of cases is 1, Range of values is 0 to 0
 32401                           ; switch strategies available:
 32402                           ; Name         Instructions Cycles
 32403                           ; simple_byte            4     3 (average)
 32404                           ;	Chosen strategy is simple_byte
 32405  0068F0  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32406  0068F2  0A00               	xorlw	0	; case 0
 32407  0068F4  A4D8               	btfss	status,2,c
 32408  0068F6  D7EA               	goto	i2l1996
 32409                           
 32410                           ; BSR set to: 57
 32411                           ; Switch size 1, requested type "simple"
 32412                           ; Number of cases is 7, Range of values is 0 to 6
 32413                           ; switch strategies available:
 32414                           ; Name         Instructions Cycles
 32415                           ; simple_byte           22    12 (average)
 32416                           ;	Chosen strategy is simple_byte
 32417  0068F8  5054               	movf	??i2_aCaptGetResult^0,w,c
 32418  0068FA  0A00               	xorlw	0	; case 0
 32419  0068FC  B4D8               	btfsc	status,2,c
 32420  0068FE  D76C               	goto	i2l1990
 32421  006900  0A01               	xorlw	1	; case 1
 32422  006902  B4D8               	btfsc	status,2,c
 32423  006904  D7C5               	goto	i2l18343
 32424  006906  0A03               	xorlw	3	; case 2
 32425  006908  B4D8               	btfsc	status,2,c
 32426  00690A  D7CA               	goto	i2l18349
 32427  00690C  0A01               	xorlw	1	; case 3
 32428  00690E  B4D8               	btfsc	status,2,c
 32429  006910  D763               	goto	i2l1990
 32430  006912  0A07               	xorlw	7	; case 4
 32431  006914  B4D8               	btfsc	status,2,c
 32432  006916  D760               	goto	i2l1990
 32433  006918  0A01               	xorlw	1	; case 5
 32434  00691A  B4D8               	btfsc	status,2,c
 32435  00691C  D75D               	goto	i2l1990
 32436  00691E  0A03               	xorlw	3	; case 6
 32437  006920  B4D8               	btfsc	status,2,c
 32438  006922  D75A               	goto	i2l1990
 32439  006924  D7D3               	goto	i2l1996
 32440  006926                     __end_ofi2_aCaptGetResult:
 32441                           	opt callstack 0
 32442                           
 32443 ;; *************** function _isqrt *****************
 32444 ;; Defined at:
 32445 ;;		line 3 in file "cmath.c"
 32446 ;; Parameters:    Size  Location     Type
 32447 ;;  x               2    0[COMRAM] unsigned short 
 32448 ;; Auto vars:     Size  Location     Type
 32449 ;;  one             2    8[COMRAM] unsigned short 
 32450 ;;  res             2    6[COMRAM] unsigned short 
 32451 ;;  op              2    4[COMRAM] unsigned short 
 32452 ;; Return value:  Size  Location     Type
 32453 ;;                  2    0[COMRAM] unsigned short 
 32454 ;; Registers used:
 32455 ;;		wreg, status,2, status,0
 32456 ;; Tracked objects:
 32457 ;;		On entry : 3F/0
 32458 ;;		On exit  : 3F/0
 32459 ;;		Unchanged: 3F/0
 32460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32462 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32464 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32465 ;;Total ram usage:       10 bytes
 32466 ;; Hardware stack levels used:    1
 32467 ;; This function calls:
 32468 ;;		Nothing
 32469 ;; This function is called by:
 32470 ;;		_vMeasureIsr
 32471 ;; This function uses a non-reentrant model
 32472 ;;
 32473                           
 32474                           	psect	text165
 32475  0082F8                     __ptext165:
 32476                           	opt callstack 0
 32477  0082F8                     _isqrt:
 32478                           	opt callstack 10
 32479                           
 32480                           ; BSR set to: 0
 32481                           ;cmath.c: 3: uint16_t isqrt(uint16_t x);cmath.c: 4: {;cmath.c: 5:     uint16_t op, res, 
      +                          one;;cmath.c: 7:     op = x;
 32482                           
 32483                           ;incstack = 0
 32484  0082F8  0060  F004  F005   	movff	isqrt@x,isqrt@op
 32485  0082FE  0060  F008  F006   	movff	isqrt@x+1,isqrt@op+1
 32486                           
 32487                           ; BSR set to: 0
 32488                           ;cmath.c: 8:     res = 0;
 32489  008304  0E00               	movlw	0
 32490  008306  6E08               	movwf	(isqrt@res+1)^0,c
 32491  008308  0E00               	movlw	0
 32492  00830A  6E07               	movwf	isqrt@res^0,c
 32493                           
 32494                           ;cmath.c: 11:     one = 1 << 14;
 32495  00830C  0E40               	movlw	64
 32496  00830E  6E0A               	movwf	(isqrt@one+1)^0,c
 32497  008310  0E00               	movlw	0
 32498  008312  6E09               	movwf	isqrt@one^0,c
 32499                           
 32500                           ;cmath.c: 12:     while (one > op) one >>= 2;
 32501  008314  D006               	goto	i2l12337
 32502  008316                     i2l12335:
 32503                           
 32504                           ; BSR set to: 0
 32505  008316  90D8               	bcf	status,0,c
 32506  008318  320A               	rrcf	(isqrt@one+1)^0,f,c
 32507  00831A  3209               	rrcf	isqrt@one^0,f,c
 32508  00831C  90D8               	bcf	status,0,c
 32509  00831E  320A               	rrcf	(isqrt@one+1)^0,f,c
 32510  008320  3209               	rrcf	isqrt@one^0,f,c
 32511  008322                     i2l12337:
 32512                           
 32513                           ; BSR set to: 0
 32514  008322  5009               	movf	isqrt@one^0,w,c
 32515  008324  5C05               	subwf	isqrt@op^0,w,c
 32516  008326  500A               	movf	(isqrt@one+1)^0,w,c
 32517  008328  5806               	subwfb	(isqrt@op+1)^0,w,c
 32518  00832A  B0D8               	btfsc	status,0,c
 32519  00832C  D02D               	goto	i2l3007
 32520  00832E  D7F3               	goto	i2l12335
 32521  008330                     i2l12339:
 32522                           
 32523                           ; BSR set to: 0
 32524                           ;cmath.c: 15:         if (op >= res + one) {
 32525  008330  5009               	movf	isqrt@one^0,w,c
 32526  008332  2407               	addwf	isqrt@res^0,w,c
 32527  008334  6E03               	movwf	??_isqrt^0,c
 32528  008336  500A               	movf	(isqrt@one+1)^0,w,c
 32529  008338  2008               	addwfc	(isqrt@res+1)^0,w,c
 32530  00833A  6E04               	movwf	(??_isqrt+1)^0,c
 32531  00833C  5003               	movf	??_isqrt^0,w,c
 32532  00833E  5C05               	subwf	isqrt@op^0,w,c
 32533  008340  5004               	movf	(??_isqrt+1)^0,w,c
 32534  008342  5806               	subwfb	(isqrt@op+1)^0,w,c
 32535  008344  A0D8               	btfss	status,0,c
 32536  008346  D017               	goto	i2l12343
 32537                           
 32538                           ; BSR set to: 0
 32539                           ;cmath.c: 16:             op -= res + one;
 32540  008348  5009               	movf	isqrt@one^0,w,c
 32541  00834A  2407               	addwf	isqrt@res^0,w,c
 32542  00834C  6E03               	movwf	??_isqrt^0,c
 32543  00834E  500A               	movf	(isqrt@one+1)^0,w,c
 32544  008350  2008               	addwfc	(isqrt@res+1)^0,w,c
 32545  008352  6E04               	movwf	(??_isqrt+1)^0,c
 32546  008354  5003               	movf	??_isqrt^0,w,c
 32547  008356  5E05               	subwf	isqrt@op^0,f,c
 32548  008358  5004               	movf	(??_isqrt+1)^0,w,c
 32549  00835A  5A06               	subwfb	(isqrt@op+1)^0,f,c
 32550                           
 32551                           ;cmath.c: 17:             res += one << 1;
 32552  00835C  0060  F024  F003   	movff	isqrt@one,??_isqrt
 32553  008362  0060  F028  F004   	movff	isqrt@one+1,??_isqrt+1
 32554  008368  90D8               	bcf	status,0,c
 32555  00836A  3603               	rlcf	??_isqrt^0,f,c
 32556  00836C  3604               	rlcf	(??_isqrt+1)^0,f,c
 32557  00836E  5003               	movf	??_isqrt^0,w,c
 32558  008370  2607               	addwf	isqrt@res^0,f,c
 32559  008372  5004               	movf	(??_isqrt+1)^0,w,c
 32560  008374  2208               	addwfc	(isqrt@res+1)^0,f,c
 32561  008376                     i2l12343:
 32562                           
 32563                           ; BSR set to: 0
 32564                           ;cmath.c: 19:         res >>= 1;
 32565  008376  90D8               	bcf	status,0,c
 32566  008378  3208               	rrcf	(isqrt@res+1)^0,f,c
 32567  00837A  3207               	rrcf	isqrt@res^0,f,c
 32568                           
 32569                           ; BSR set to: 0
 32570                           ;cmath.c: 20:         one >>= 2;
 32571  00837C  90D8               	bcf	status,0,c
 32572  00837E  320A               	rrcf	(isqrt@one+1)^0,f,c
 32573  008380  3209               	rrcf	isqrt@one^0,f,c
 32574  008382  90D8               	bcf	status,0,c
 32575  008384  320A               	rrcf	(isqrt@one+1)^0,f,c
 32576  008386  3209               	rrcf	isqrt@one^0,f,c
 32577  008388                     i2l3007:
 32578                           
 32579                           ; BSR set to: 0
 32580                           ;cmath.c: 14:     while (one != 0) {
 32581  008388  5009               	movf	isqrt@one^0,w,c
 32582  00838A  100A               	iorwf	(isqrt@one+1)^0,w,c
 32583  00838C  A4D8               	btfss	status,2,c
 32584  00838E  D7D0               	goto	i2l12339
 32585                           
 32586                           ; BSR set to: 0
 32587                           ;cmath.c: 22:     return res;
 32588  008390  0060  F01C  F001   	movff	isqrt@res,?_isqrt
 32589  008396  0060  F020  F002   	movff	isqrt@res+1,?_isqrt+1
 32590                           
 32591                           ; BSR set to: 0
 32592  00839C  0012               	return		;funcret
 32593  00839E                     __end_of_isqrt:
 32594                           	opt callstack 0
 32595                           
 32596 ;; *************** function _I2C2_MasterIsr *****************
 32597 ;; Defined at:
 32598 ;;		line 348 in file "mcc_generated_files/i2c2_master.c"
 32599 ;; Parameters:    Size  Location     Type
 32600 ;;		None
 32601 ;; Auto vars:     Size  Location     Type
 32602 ;;		None
 32603 ;; Return value:  Size  Location     Type
 32604 ;;                  1    wreg      void 
 32605 ;; Registers used:
 32606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32607 ;; Tracked objects:
 32608 ;;		On entry : 3F/0
 32609 ;;		On exit  : 3F/2
 32610 ;;		Unchanged: 0/0
 32611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32616 ;;Total ram usage:        0 bytes
 32617 ;; Hardware stack levels used:    1
 32618 ;; Hardware stack levels required when called:   15
 32619 ;; This function calls:
 32620 ;;		_I2C2_MasterFsm
 32621 ;; This function is called by:
 32622 ;;		_I2C2_Open
 32623 ;;		_INTERRUPT_InterruptManager
 32624 ;; This function uses a non-reentrant model
 32625 ;;
 32626                           
 32627                           	psect	text166
 32628  00A594                     __ptext166:
 32629                           	opt callstack 0
 32630  00A594                     _I2C2_MasterIsr:
 32631                           	opt callstack 0
 32632                           
 32633                           ; BSR set to: 0
 32634                           ;mcc_generated_files/i2c2_master.c: 350:     I2C2_MasterFsm();
 32635                           
 32636                           ; BSR set to: 0
 32637                           ;incstack = 0
 32638 ;; hardware stack exceeded
 32639  00A594  EC02  F046         	call	_I2C2_MasterFsm	;wreg free
 32640                           
 32641                           ; BSR set to: 2
 32642  00A598  0012               	return		;funcret
 32643  00A59A                     __end_of_I2C2_MasterIsr:
 32644                           	opt callstack 0
 32645                           
 32646 ;; *************** function _I2C2_MasterFsm *****************
 32647 ;; Defined at:
 32648 ;;		line 353 in file "mcc_generated_files/i2c2_master.c"
 32649 ;; Parameters:    Size  Location     Type
 32650 ;;		None
 32651 ;; Auto vars:     Size  Location     Type
 32652 ;;		None
 32653 ;; Return value:  Size  Location     Type
 32654 ;;                  1    wreg      void 
 32655 ;; Registers used:
 32656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32657 ;; Tracked objects:
 32658 ;;		On entry : 3F/0
 32659 ;;		On exit  : 3F/2
 32660 ;;		Unchanged: 0/0
 32661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32666 ;;Total ram usage:        2 bytes
 32667 ;; Hardware stack levels used:    1
 32668 ;; Hardware stack levels required when called:   14
 32669 ;; This function calls:
 32670 ;;		_I2C2_ClearInterruptFlags
 32671 ;;		_I2C2_DO_ADDRESS_NACK
 32672 ;;		_I2C2_DO_BUS_COLLISION
 32673 ;;		_I2C2_DO_BUS_ERROR
 32674 ;;		_I2C2_DO_IDLE
 32675 ;;		_I2C2_DO_RESET
 32676 ;;		_I2C2_DO_RX
 32677 ;;		_I2C2_DO_RX_ACK
 32678 ;;		_I2C2_DO_RX_NACK_RESTART
 32679 ;;		_I2C2_DO_RX_NACK_STOP
 32680 ;;		_I2C2_DO_SEND_RESTART
 32681 ;;		_I2C2_DO_SEND_RESTART_READ
 32682 ;;		_I2C2_DO_SEND_RESTART_WRITE
 32683 ;;		_I2C2_DO_SEND_STOP
 32684 ;;		_I2C2_DO_TX
 32685 ;;		_I2C2_DO_TX_ACK
 32686 ;;		_I2C2_DO_TX_EMPTY
 32687 ;;		_I2C2_MasterIsNack
 32688 ;;		i2_I2C2_DO_RX_EMPTY
 32689 ;;		i2_I2C2_DO_SEND_ADR_READ
 32690 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 32691 ;; This function is called by:
 32692 ;;		_I2C2_MasterIsr
 32693 ;; This function uses a non-reentrant model
 32694 ;;
 32695                           
 32696                           	psect	text167
 32697  008C04                     __ptext167:
 32698                           	opt callstack 0
 32699  008C04                     _I2C2_MasterFsm:
 32700                           	opt callstack 0
 32701                           
 32702                           ; BSR set to: 0
 32703                           ;mcc_generated_files/i2c2_master.c: 355:     I2C2_ClearInterruptFlags();
 32704                           
 32705                           ; BSR set to: 2
 32706                           ;incstack = 0
 32707 ;; hardware stack exceeded
 32708  008C04  EC1A  F04E         	call	_I2C2_ClearInterruptFlags	;wreg free
 32709                           
 32710                           ; BSR set to: 61
 32711                           ;mcc_generated_files/i2c2_master.c: 357:     if(I2C2_Status.addressNackCheck && I2C2_Mas
      +                          terIsNack())
 32712  008C08  0102               	movlb	2	; () banked
 32713  008C0A  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 32714  008C0C  0B03               	andlw	3
 32715  008C0E  0900               	iorlw	0
 32716  008C10  B4D8               	btfsc	status,2,c
 32717  008C12  D008               	goto	i2l18523
 32718                           
 32719                           ; BSR set to: 2
 32720  008C14  EC32  F052         	call	_I2C2_MasterIsNack	;wreg free
 32721  008C18  0900               	iorlw	0
 32722  008C1A  B4D8               	btfsc	status,2,c
 32723  008C1C  D003               	goto	i2l18523
 32724                           
 32725                           ; BSR set to: 61
 32726                           ;mcc_generated_files/i2c2_master.c: 358:     {;mcc_generated_files/i2c2_master.c: 359:  
      +                                 I2C2_Status.state = I2C2_ADDRESS_NACK;
 32727  008C1E  0E10               	movlw	16
 32728  008C20  0102               	movlb	2	; () banked
 32729  008C22  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 32730  008C24                     i2l18523:
 32731                           
 32732                           ;mcc_generated_files/i2c2_master.c: 361:     I2C2_Status.state = fsmStateTable[I2C2_Stat
      +                          us.state]();
 32733  008C24  0102               	movlb	2	; () banked
 32734  008C26  5121               	movf	(_I2C2_Status+33)& (0+255),w,b
 32735  008C28  0D02               	mullw	2
 32736  008C2A  0E6F               	movlw	low _fsmStateTable
 32737  008C2C  24F3               	addwf	243,w,c
 32738  008C2E  6EF6               	movwf	tblptrl,c
 32739  008C30  0EFA               	movlw	high _fsmStateTable
 32740  008C32  20F4               	addwfc	244,w,c
 32741  008C34  6EF7               	movwf	tblptrh,c
 32742  008C36                     	if	1	;There are 3 active tblptr bytes
 32743  008C36  6AF8               	clrf	tblptru,c
 32744  008C38  0E00               	movlw	low (__mediumconst shr (0+16))
 32745  008C3A  22F8               	addwfc	tblptru,f,c
 32746  008C3C                     	endif
 32747  008C3C  0009               	tblrd		*+
 32748  008C3E  006F FFD4  F00D    	movff	tablat,??_I2C2_MasterFsm
 32749  008C44  0009               	tblrd		*+
 32750  008C46  006F FFD4  F00E    	movff	tablat,??_I2C2_MasterFsm+1
 32751  008C4C  D801               	call	i2u1897_48
 32752  008C4E  D009               	goto	i2u1897_49
 32753  008C50                     i2u1897_48:
 32754  008C50  0005               	push	
 32755  008C52  6EFA               	movwf	pclath,c
 32756  008C54  500D               	movf	??_I2C2_MasterFsm^0,w,c
 32757  008C56  6EFD               	movwf	tosl,c
 32758  008C58  500E               	movf	(??_I2C2_MasterFsm+1)^0,w,c
 32759  008C5A  6EFE               	movwf	tosh,c
 32760  008C5C  6AFF               	clrf	tosu,c
 32761  008C5E  50FA               	movf	pclath,w,c
 32762  008C60  0012               	return		;indir
 32763  008C62                     i2u1897_49:
 32764  008C62  0102               	movlb	2	; () banked
 32765  008C64  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 32766                           
 32767                           ; BSR set to: 2
 32768  008C66  0012               	return		;funcret
 32769  008C68                     __end_of_I2C2_MasterFsm:
 32770                           	opt callstack 0
 32771                           
 32772 ;; *************** function i2_I2C2_DO_RX_EMPTY *****************
 32773 ;; Defined at:
 32774 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 32775 ;; Parameters:    Size  Location     Type
 32776 ;;		None
 32777 ;; Auto vars:     Size  Location     Type
 32778 ;;		None
 32779 ;; Return value:  Size  Location     Type
 32780 ;;                  1    wreg      enum E16447
 32781 ;; Registers used:
 32782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32783 ;; Tracked objects:
 32784 ;;		On entry : 3F/2
 32785 ;;		On exit  : 0/0
 32786 ;;		Unchanged: 0/0
 32787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32792 ;;Total ram usage:        2 bytes
 32793 ;; Hardware stack levels used:    1
 32794 ;; Hardware stack levels required when called:   10
 32795 ;; This function calls:
 32796 ;;		Absolute function
 32797 ;;		i2_I2C2_CallbackReturnReset
 32798 ;;		i2_I2C2_CallbackReturnStop
 32799 ;;		i2_I2C2_MasterDisableRestart
 32800 ;;		i2_I2C2_MasterEnableRestart
 32801 ;;		i2_I2C2_MasterSetCounter
 32802 ;;		i2_I2C2_NackCb
 32803 ;;		i2_rd1RegCompleteHandler
 32804 ;;		i2_rd2RegCompleteHandler
 32805 ;;		i2_rdBlkRegCompleteHandler
 32806 ;;		i2_wr1RegCompleteHandler
 32807 ;;		i2_wr2RegCompleteHandler
 32808 ;; This function is called by:
 32809 ;;		_I2C2_DO_RX
 32810 ;;		i2_I2C2_DO_SEND_ADR_READ
 32811 ;; This function uses a non-reentrant model
 32812 ;;
 32813                           
 32814                           	psect	text168
 32815  008884                     __ptext168:
 32816                           	opt callstack 0
 32817  008884                     i2_I2C2_DO_RX_EMPTY:
 32818                           	opt callstack 0
 32819                           
 32820                           ; BSR set to: 2
 32821                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 32822                           
 32823                           ; BSR set to: 2
 32824                           ;incstack = 0
 32825 ;; hardware stack exceeded
 32826  008884  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 32827                           
 32828                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 32829  008886  D016               	goto	i2l17447
 32830  008888                     i2l17419:
 32831                           
 32832                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 32833  008888  ECD9  F052         	call	i2_I2C2_MasterEnableRestart	;wreg free
 32834                           
 32835                           ; BSR set to: 61
 32836                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 32837  00888C  0E08               	movlw	8
 32838  00888E  0012               	return	
 32839  008890                     i2l17425:
 32840                           
 32841                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 32842  008890  ECD9  F052         	call	i2_I2C2_MasterEnableRestart	;wreg free
 32843                           
 32844                           ; BSR set to: 61
 32845                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 32846  008894  0E07               	movlw	7
 32847  008896  0012               	return	
 32848  008898                     i2l17431:
 32849                           
 32850                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 32851  008898  0102               	movlb	2	; () banked
 32852  00889A  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 32853  00889C  EC9C  F052         	call	i2_I2C2_MasterSetCounter
 32854                           
 32855                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 32856  0088A0  0E04               	movlw	4
 32857  0088A2  0012               	return	
 32858  0088A4                     i2l17437:
 32859                           
 32860                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 32861  0088A4  0E07               	movlw	7
 32862  0088A6  0102               	movlb	2	; () banked
 32863  0088A8  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 32864  0088AA  A4D8               	btfss	status,2,c
 32865                           
 32866                           ; BSR set to: 2
 32867                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 32868  0088AC  ECDC  F052         	call	i2_I2C2_MasterDisableRestart	;wreg free
 32869                           
 32870                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 32871  0088B0  0E0F               	movlw	15
 32872  0088B2  0012               	return	
 32873  0088B4                     i2l17447:
 32874                           
 32875                           ; BSR set to: 2
 32876  0088B4  0060  F830  F005   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 32877  0088BA  0060  F834  F006   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 32878  0088C0  D801               	call	i2u1788_48
 32879  0088C2  D009               	goto	i2u1788_49
 32880  0088C4                     i2u1788_48:
 32881  0088C4  0005               	push	
 32882  0088C6  6EFA               	movwf	pclath,c
 32883  0088C8  5100               	movf	_I2C2_Status& (0+255),w,b
 32884  0088CA  6EFD               	movwf	tosl,c
 32885  0088CC  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 32886  0088CE  6EFE               	movwf	tosh,c
 32887  0088D0  6AFF               	clrf	tosu,c
 32888  0088D2  50FA               	movf	pclath,w,c
 32889  0088D4  0012               	return		;indir
 32890  0088D6                     i2u1788_49:
 32891  0088D6  6E07               	movwf	??i2_I2C2_DO_RX_EMPTY^0,c
 32892  0088D8  6A08               	clrf	(??i2_I2C2_DO_RX_EMPTY+1)^0,c
 32893                           
 32894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32895                           ; Switch size 1, requested type "simple"
 32896                           ; Number of cases is 1, Range of values is 0 to 0
 32897                           ; switch strategies available:
 32898                           ; Name         Instructions Cycles
 32899                           ; simple_byte            4     3 (average)
 32900                           ;	Chosen strategy is simple_byte
 32901  0088DA  5008               	movf	(??i2_I2C2_DO_RX_EMPTY+1)^0,w,c
 32902  0088DC  0A00               	xorlw	0	; case 0
 32903  0088DE  A4D8               	btfss	status,2,c
 32904  0088E0  D7E1               	goto	i2l17437
 32905                           
 32906                           ; Switch size 1, requested type "simple"
 32907                           ; Number of cases is 4, Range of values is 1 to 4
 32908                           ; switch strategies available:
 32909                           ; Name         Instructions Cycles
 32910                           ; simple_byte           13     7 (average)
 32911                           ;	Chosen strategy is simple_byte
 32912  0088E2  5007               	movf	??i2_I2C2_DO_RX_EMPTY^0,w,c
 32913  0088E4  0A01               	xorlw	1	; case 1
 32914  0088E6  B4D8               	btfsc	status,2,c
 32915  0088E8  D7DD               	goto	i2l17437
 32916  0088EA  0A03               	xorlw	3	; case 2
 32917  0088EC  B4D8               	btfsc	status,2,c
 32918  0088EE  D7D0               	goto	i2l17425
 32919  0088F0  0A01               	xorlw	1	; case 3
 32920  0088F2  B4D8               	btfsc	status,2,c
 32921  0088F4  D7C9               	goto	i2l17419
 32922  0088F6  0A07               	xorlw	7	; case 4
 32923  0088F8  B4D8               	btfsc	status,2,c
 32924  0088FA  D7CE               	goto	i2l17431
 32925  0088FC  D7D3               	goto	i2l17437
 32926  0088FE                     __end_ofi2_I2C2_DO_RX_EMPTY:
 32927                           	opt callstack 0
 32928                           
 32929 ;; *************** function i2_I2C2_DO_SEND_ADR_READ *****************
 32930 ;; Defined at:
 32931 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 32932 ;; Parameters:    Size  Location     Type
 32933 ;;		None
 32934 ;; Auto vars:     Size  Location     Type
 32935 ;;		None
 32936 ;; Return value:  Size  Location     Type
 32937 ;;                  1    wreg      enum E16447
 32938 ;; Registers used:
 32939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32940 ;; Tracked objects:
 32941 ;;		On entry : 0/2
 32942 ;;		On exit  : 0/0
 32943 ;;		Unchanged: 0/0
 32944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32949 ;;Total ram usage:        0 bytes
 32950 ;; Hardware stack levels used:    1
 32951 ;; Hardware stack levels required when called:   11
 32952 ;; This function calls:
 32953 ;;		i2_I2C2_DO_RX_EMPTY
 32954 ;;		i2_I2C2_MasterSendTxData
 32955 ;; This function is called by:
 32956 ;;		_I2C2_DO_SEND_RESTART_READ
 32957 ;; This function uses a non-reentrant model
 32958 ;;
 32959                           
 32960                           	psect	text169
 32961  00A06A                     __ptext169:
 32962                           	opt callstack 0
 32963  00A06A                     i2_I2C2_DO_SEND_ADR_READ:
 32964                           	opt callstack 0
 32965                           
 32966                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 32967                           
 32968                           ;incstack = 0
 32969 ;; hardware stack exceeded
 32970  00A06A  0102               	movlb	2	; () banked
 32971  00A06C  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 32972  00A06E  0BFC               	andlw	-4
 32973  00A070  0902               	iorlw	2
 32974  00A072  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 32975                           
 32976                           ; BSR set to: 2
 32977                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 32978  00A074  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 32979  00A076  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 32980  00A078  B4D8               	btfsc	status,2,c
 32981                           
 32982                           ; BSR set to: 2
 32983                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 32984  00A07A  EC42  F044         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 32985                           
 32986                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 32987  00A07E  80D8               	bsf	status,0,c
 32988  00A080  0102               	movlb	2	; () banked
 32989  00A082  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 32990  00A084  EC97  F052         	call	i2_I2C2_MasterSendTxData
 32991                           
 32992                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 32993  00A088  0E04               	movlw	4
 32994  00A08A  0012               	return		;funcret
 32995  00A08C                     __end_ofi2_I2C2_DO_SEND_ADR_READ:
 32996                           	opt callstack 0
 32997                           
 32998 ;; *************** function _I2C2_DO_BUS_ERROR *****************
 32999 ;; Defined at:
 33000 ;;		line 597 in file "mcc_generated_files/i2c2_master.c"
 33001 ;; Parameters:    Size  Location     Type
 33002 ;;		None
 33003 ;; Auto vars:     Size  Location     Type
 33004 ;;		None
 33005 ;; Return value:  Size  Location     Type
 33006 ;;                  1    wreg      enum E16447
 33007 ;; Registers used:
 33008 ;;		wreg, status,2, cstack
 33009 ;; Tracked objects:
 33010 ;;		On entry : 3F/2
 33011 ;;		On exit  : 3F/2
 33012 ;;		Unchanged: 0/0
 33013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33018 ;;Total ram usage:        0 bytes
 33019 ;; Hardware stack levels used:    1
 33020 ;; Hardware stack levels required when called:    1
 33021 ;; This function calls:
 33022 ;;		_I2C2_MasterResetBus
 33023 ;; This function is called by:
 33024 ;;		_I2C2_MasterFsm
 33025 ;; This function uses a non-reentrant model
 33026 ;;
 33027                           
 33028                           	psect	text170
 33029  00A36E                     __ptext170:
 33030                           	opt callstack 0
 33031  00A36E                     _I2C2_DO_BUS_ERROR:
 33032                           	opt callstack 9
 33033                           
 33034                           ; BSR set to: 2
 33035                           ;mcc_generated_files/i2c2_master.c: 599:     I2C2_MasterResetBus();
 33036                           
 33037                           ;incstack = 0
 33038  00A36E  ECA1  F052         	call	_I2C2_MasterResetBus	;wreg free
 33039                           
 33040                           ; BSR set to: 61
 33041                           ;mcc_generated_files/i2c2_master.c: 600:     I2C2_Status.busy = 0;
 33042  00A372  0102               	movlb	2	; () banked
 33043  00A374  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33044                           
 33045                           ; BSR set to: 2
 33046                           ;mcc_generated_files/i2c2_master.c: 601:     I2C2_Status.error = I2C2_FAIL;
 33047  00A376  0E02               	movlw	2
 33048  00A378  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33049                           
 33050                           ; BSR set to: 2
 33051                           ;mcc_generated_files/i2c2_master.c: 602:     return I2C2_RESET;
 33052  00A37A  0E0F               	movlw	15
 33053                           
 33054                           ; BSR set to: 2
 33055  00A37C  0012               	return		;funcret
 33056  00A37E                     __end_of_I2C2_DO_BUS_ERROR:
 33057                           	opt callstack 0
 33058                           
 33059 ;; *************** function _I2C2_DO_BUS_COLLISION *****************
 33060 ;; Defined at:
 33061 ;;		line 581 in file "mcc_generated_files/i2c2_master.c"
 33062 ;; Parameters:    Size  Location     Type
 33063 ;;		None
 33064 ;; Auto vars:     Size  Location     Type
 33065 ;;		None
 33066 ;; Return value:  Size  Location     Type
 33067 ;;                  1    wreg      enum E16447
 33068 ;; Registers used:
 33069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33070 ;; Tracked objects:
 33071 ;;		On entry : 3F/2
 33072 ;;		On exit  : 0/0
 33073 ;;		Unchanged: 0/0
 33074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33079 ;;Total ram usage:        2 bytes
 33080 ;; Hardware stack levels used:    1
 33081 ;; Hardware stack levels required when called:   13
 33082 ;; This function calls:
 33083 ;;		Absolute function
 33084 ;;		_I2C2_DO_RESET
 33085 ;;		_I2C2_DO_SEND_RESTART_READ
 33086 ;;		_I2C2_DO_SEND_RESTART_WRITE
 33087 ;;		i2_I2C2_CallbackReturnReset
 33088 ;;		i2_I2C2_CallbackReturnStop
 33089 ;;		i2_I2C2_MasterClearIrq
 33090 ;;		i2_I2C2_NackCb
 33091 ;;		i2_rd1RegCompleteHandler
 33092 ;;		i2_rd2RegCompleteHandler
 33093 ;;		i2_rdBlkRegCompleteHandler
 33094 ;;		i2_wr1RegCompleteHandler
 33095 ;;		i2_wr2RegCompleteHandler
 33096 ;; This function is called by:
 33097 ;;		_I2C2_MasterFsm
 33098 ;; This function uses a non-reentrant model
 33099 ;;
 33100                           
 33101                           	psect	text171
 33102  008E48                     __ptext171:
 33103                           	opt callstack 0
 33104  008E48                     _I2C2_DO_BUS_COLLISION:
 33105                           	opt callstack 0
 33106                           
 33107                           ; BSR set to: 2
 33108                           ;mcc_generated_files/i2c2_master.c: 584:     I2C2_MasterClearIrq();
 33109                           
 33110                           ; BSR set to: 2
 33111                           ;incstack = 0
 33112 ;; hardware stack exceeded
 33113  008E48  ECBA  F052         	call	i2_I2C2_MasterClearIrq	;wreg free
 33114                           
 33115                           ; BSR set to: 61
 33116                           ;mcc_generated_files/i2c2_master.c: 586:     I2C2_Status.error = I2C2_FAIL;
 33117  008E4C  0E02               	movlw	2
 33118  008E4E  0102               	movlb	2	; () banked
 33119  008E50  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33120                           
 33121                           ;mcc_generated_files/i2c2_master.c: 587:     switch (I2C2_Status.callbackTable[I2C2_WRIT
      +                          E_COLLISION](I2C2_Status.callbackPayload[I2C2_WRITE_COLLISION])) {
 33122  008E52  D009               	goto	i2l17977
 33123  008E54                     i2l17963:
 33124                           
 33125                           ;mcc_generated_files/i2c2_master.c: 589:         return I2C2_DO_SEND_RESTART_READ();
 33126  008E54  EC2B  F052         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 33127  008E58  0012               	return	
 33128  008E5A                     i2l17967:
 33129                           
 33130                           ;mcc_generated_files/i2c2_master.c: 591:         return I2C2_DO_SEND_RESTART_WRITE();
 33131  008E5A  ECEF  F052         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 33132  008E5E  0012               	return	
 33133  008E60                     i2l17971:
 33134                           
 33135                           ;mcc_generated_files/i2c2_master.c: 593:         return I2C2_DO_RESET();
 33136  008E60  ECBF  F051         	call	_I2C2_DO_RESET	;wreg free
 33137  008E64  0012               	return	
 33138  008E66                     i2l17977:
 33139                           
 33140                           ; BSR set to: 2
 33141  008E66  0060  F838  F005   	movff	_I2C2_Status+14,i2rd1RegCompleteHandler@ptr
 33142  008E6C  0060  F83C  F006   	movff	_I2C2_Status+15,i2rd1RegCompleteHandler@ptr+1
 33143  008E72  D801               	call	i2u1846_48
 33144  008E74  D009               	goto	i2u1846_49
 33145  008E76                     i2u1846_48:
 33146  008E76  0005               	push	
 33147  008E78  6EFA               	movwf	pclath,c
 33148  008E7A  5102               	movf	(_I2C2_Status+2)& (0+255),w,b
 33149  008E7C  6EFD               	movwf	tosl,c
 33150  008E7E  5103               	movf	(_I2C2_Status+3)& (0+255),w,b
 33151  008E80  6EFE               	movwf	tosh,c
 33152  008E82  6AFF               	clrf	tosu,c
 33153  008E84  50FA               	movf	pclath,w,c
 33154  008E86  0012               	return		;indir
 33155  008E88                     i2u1846_49:
 33156  008E88  6E07               	movwf	??_I2C2_DO_BUS_COLLISION^0,c
 33157  008E8A  6A08               	clrf	(??_I2C2_DO_BUS_COLLISION+1)^0,c
 33158                           
 33159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33160                           ; Switch size 1, requested type "simple"
 33161                           ; Number of cases is 1, Range of values is 0 to 0
 33162                           ; switch strategies available:
 33163                           ; Name         Instructions Cycles
 33164                           ; simple_byte            4     3 (average)
 33165                           ;	Chosen strategy is simple_byte
 33166  008E8C  5008               	movf	(??_I2C2_DO_BUS_COLLISION+1)^0,w,c
 33167  008E8E  0A00               	xorlw	0	; case 0
 33168  008E90  A4D8               	btfss	status,2,c
 33169  008E92  D7E6               	goto	i2l17971
 33170                           
 33171                           ; Switch size 1, requested type "simple"
 33172                           ; Number of cases is 2, Range of values is 2 to 3
 33173                           ; switch strategies available:
 33174                           ; Name         Instructions Cycles
 33175                           ; simple_byte            7     4 (average)
 33176                           ;	Chosen strategy is simple_byte
 33177  008E94  5007               	movf	??_I2C2_DO_BUS_COLLISION^0,w,c
 33178  008E96  0A02               	xorlw	2	; case 2
 33179  008E98  B4D8               	btfsc	status,2,c
 33180  008E9A  D7DC               	goto	i2l17963
 33181  008E9C  0A01               	xorlw	1	; case 3
 33182  008E9E  B4D8               	btfsc	status,2,c
 33183  008EA0  D7DC               	goto	i2l17967
 33184  008EA2  D7DE               	goto	i2l17971
 33185  008EA4                     __end_of_I2C2_DO_BUS_COLLISION:
 33186                           	opt callstack 0
 33187                           
 33188 ;; *************** function _I2C2_DO_ADDRESS_NACK *****************
 33189 ;; Defined at:
 33190 ;;		line 566 in file "mcc_generated_files/i2c2_master.c"
 33191 ;; Parameters:    Size  Location     Type
 33192 ;;		None
 33193 ;; Auto vars:     Size  Location     Type
 33194 ;;		None
 33195 ;; Return value:  Size  Location     Type
 33196 ;;                  1    wreg      enum E16447
 33197 ;; Registers used:
 33198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33199 ;; Tracked objects:
 33200 ;;		On entry : 3F/2
 33201 ;;		On exit  : 0/0
 33202 ;;		Unchanged: 0/0
 33203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33208 ;;Total ram usage:        2 bytes
 33209 ;; Hardware stack levels used:    1
 33210 ;; Hardware stack levels required when called:   10
 33211 ;; This function calls:
 33212 ;;		Absolute function
 33213 ;;		_I2C2_DO_SEND_RESTART
 33214 ;;		i2_I2C2_CallbackReturnReset
 33215 ;;		i2_I2C2_CallbackReturnStop
 33216 ;;		i2_I2C2_NackCb
 33217 ;;		i2_rd1RegCompleteHandler
 33218 ;;		i2_rd2RegCompleteHandler
 33219 ;;		i2_rdBlkRegCompleteHandler
 33220 ;;		i2_wr1RegCompleteHandler
 33221 ;;		i2_wr2RegCompleteHandler
 33222 ;; This function is called by:
 33223 ;;		_I2C2_MasterFsm
 33224 ;; This function uses a non-reentrant model
 33225 ;;
 33226                           
 33227                           	psect	text172
 33228  009164                     __ptext172:
 33229                           	opt callstack 0
 33230  009164                     _I2C2_DO_ADDRESS_NACK:
 33231                           	opt callstack 0
 33232                           
 33233                           ; BSR set to: 2
 33234                           ;mcc_generated_files/i2c2_master.c: 568:     I2C2_Status.addressNackCheck = 0;
 33235                           
 33236                           ;incstack = 0
 33237  009164  0EFC               	movlw	-4
 33238  009166  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 33239                           
 33240                           ;mcc_generated_files/i2c2_master.c: 569:     I2C2_Status.error = I2C2_FAIL;
 33241  009168  0E02               	movlw	2
 33242  00916A  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33243                           
 33244                           ; BSR set to: 2
 33245                           ;mcc_generated_files/i2c2_master.c: 570:     I2C2_Status.busy = 0;
 33246  00916C  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33247                           
 33248                           ;mcc_generated_files/i2c2_master.c: 571:     switch(I2C2_Status.callbackTable[I2C2_ADDR_
      +                          NACK](I2C2_Status.callbackPayload[I2C2_ADDR_NACK]))
 33249  00916E  D005               	goto	i2l17951
 33250  009170                     i2l17941:
 33251                           
 33252                           ;mcc_generated_files/i2c2_master.c: 575:             return I2C2_DO_SEND_RESTART();
 33253  009170  ECED  F052         	call	_I2C2_DO_SEND_RESTART	;wreg free
 33254  009174  0012               	return	
 33255  009176                     i2l17945:
 33256                           
 33257                           ;mcc_generated_files/i2c2_master.c: 577:             return I2C2_RESET;
 33258  009176  0E0F               	movlw	15
 33259  009178  0012               	return	
 33260  00917A                     i2l17951:
 33261                           
 33262                           ; BSR set to: 2
 33263  00917A  0060  F840  F005   	movff	_I2C2_Status+16,i2rd1RegCompleteHandler@ptr
 33264  009180  0060  F844  F006   	movff	_I2C2_Status+17,i2rd1RegCompleteHandler@ptr+1
 33265  009186  D801               	call	i2u1845_48
 33266  009188  D009               	goto	i2u1845_49
 33267  00918A                     i2u1845_48:
 33268  00918A  0005               	push	
 33269  00918C  6EFA               	movwf	pclath,c
 33270  00918E  5104               	movf	(_I2C2_Status+4)& (0+255),w,b
 33271  009190  6EFD               	movwf	tosl,c
 33272  009192  5105               	movf	(_I2C2_Status+5)& (0+255),w,b
 33273  009194  6EFE               	movwf	tosh,c
 33274  009196  6AFF               	clrf	tosu,c
 33275  009198  50FA               	movf	pclath,w,c
 33276  00919A  0012               	return		;indir
 33277  00919C                     i2u1845_49:
 33278  00919C  6E07               	movwf	??_I2C2_DO_ADDRESS_NACK^0,c
 33279  00919E  6A08               	clrf	(??_I2C2_DO_ADDRESS_NACK+1)^0,c
 33280                           
 33281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33282                           ; Switch size 1, requested type "simple"
 33283                           ; Number of cases is 1, Range of values is 0 to 0
 33284                           ; switch strategies available:
 33285                           ; Name         Instructions Cycles
 33286                           ; simple_byte            4     3 (average)
 33287                           ;	Chosen strategy is simple_byte
 33288  0091A0  5008               	movf	(??_I2C2_DO_ADDRESS_NACK+1)^0,w,c
 33289  0091A2  0A00               	xorlw	0	; case 0
 33290  0091A4  A4D8               	btfss	status,2,c
 33291  0091A6  D7E7               	goto	i2l17945
 33292                           
 33293                           ; Switch size 1, requested type "simple"
 33294                           ; Number of cases is 2, Range of values is 2 to 3
 33295                           ; switch strategies available:
 33296                           ; Name         Instructions Cycles
 33297                           ; simple_byte            7     4 (average)
 33298                           ;	Chosen strategy is simple_byte
 33299  0091A8  5007               	movf	??_I2C2_DO_ADDRESS_NACK^0,w,c
 33300  0091AA  0A02               	xorlw	2	; case 2
 33301  0091AC  B4D8               	btfsc	status,2,c
 33302  0091AE  D7E0               	goto	i2l17941
 33303  0091B0  0A01               	xorlw	1	; case 3
 33304  0091B2  B4D8               	btfsc	status,2,c
 33305  0091B4  D7DD               	goto	i2l17941
 33306  0091B6  D7DF               	goto	i2l17945
 33307  0091B8                     __end_of_I2C2_DO_ADDRESS_NACK:
 33308                           	opt callstack 0
 33309                           
 33310 ;; *************** function _I2C2_DO_RESET *****************
 33311 ;; Defined at:
 33312 ;;		line 559 in file "mcc_generated_files/i2c2_master.c"
 33313 ;; Parameters:    Size  Location     Type
 33314 ;;		None
 33315 ;; Auto vars:     Size  Location     Type
 33316 ;;		None
 33317 ;; Return value:  Size  Location     Type
 33318 ;;                  1    wreg      enum E16447
 33319 ;; Registers used:
 33320 ;;		wreg, status,2, cstack
 33321 ;; Tracked objects:
 33322 ;;		On entry : 0/2
 33323 ;;		On exit  : 3F/2
 33324 ;;		Unchanged: 0/0
 33325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33330 ;;Total ram usage:        0 bytes
 33331 ;; Hardware stack levels used:    1
 33332 ;; Hardware stack levels required when called:    1
 33333 ;; This function calls:
 33334 ;;		_I2C2_MasterResetBus
 33335 ;; This function is called by:
 33336 ;;		_I2C2_DO_BUS_COLLISION
 33337 ;;		_I2C2_MasterFsm
 33338 ;; This function uses a non-reentrant model
 33339 ;;
 33340                           
 33341                           	psect	text173
 33342  00A37E                     __ptext173:
 33343                           	opt callstack 0
 33344  00A37E                     _I2C2_DO_RESET:
 33345                           	opt callstack 9
 33346                           
 33347                           ;mcc_generated_files/i2c2_master.c: 561:     I2C2_MasterResetBus();
 33348                           
 33349                           ;incstack = 0
 33350  00A37E  ECA1  F052         	call	_I2C2_MasterResetBus	;wreg free
 33351                           
 33352                           ; BSR set to: 61
 33353                           ;mcc_generated_files/i2c2_master.c: 562:     I2C2_Status.busy = 0;
 33354  00A382  0102               	movlb	2	; () banked
 33355  00A384  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33356                           
 33357                           ; BSR set to: 2
 33358                           ;mcc_generated_files/i2c2_master.c: 563:     I2C2_Status.error = I2C2_NOERR;
 33359  00A386  0E00               	movlw	0
 33360  00A388  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33361                           
 33362                           ; BSR set to: 2
 33363                           ;mcc_generated_files/i2c2_master.c: 564:     return I2C2_RESET;
 33364  00A38A  0E0F               	movlw	15
 33365                           
 33366                           ; BSR set to: 2
 33367  00A38C  0012               	return		;funcret
 33368  00A38E                     __end_of_I2C2_DO_RESET:
 33369                           	opt callstack 0
 33370                           
 33371 ;; *************** function _I2C2_DO_RX_NACK_RESTART *****************
 33372 ;; Defined at:
 33373 ;;		line 553 in file "mcc_generated_files/i2c2_master.c"
 33374 ;; Parameters:    Size  Location     Type
 33375 ;;		None
 33376 ;; Auto vars:     Size  Location     Type
 33377 ;;		None
 33378 ;; Return value:  Size  Location     Type
 33379 ;;                  1    wreg      enum E16447
 33380 ;; Registers used:
 33381 ;;		wreg, cstack
 33382 ;; Tracked objects:
 33383 ;;		On entry : 3F/2
 33384 ;;		On exit  : 3F/3D
 33385 ;;		Unchanged: 0/0
 33386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33391 ;;Total ram usage:        0 bytes
 33392 ;; Hardware stack levels used:    1
 33393 ;; Hardware stack levels required when called:    1
 33394 ;; This function calls:
 33395 ;;		_I2C2_MasterSendNack
 33396 ;; This function is called by:
 33397 ;;		_I2C2_MasterFsm
 33398 ;; This function uses a non-reentrant model
 33399 ;;
 33400                           
 33401                           	psect	text174
 33402  00A55C                     __ptext174:
 33403                           	opt callstack 0
 33404  00A55C                     _I2C2_DO_RX_NACK_RESTART:
 33405                           	opt callstack 9
 33406                           
 33407                           ; BSR set to: 2
 33408                           ;mcc_generated_files/i2c2_master.c: 555:     I2C2_MasterSendNack();
 33409                           
 33410                           ; BSR set to: 2
 33411                           ;incstack = 0
 33412  00A55C  ECD0  F052         	call	_I2C2_MasterSendNack	;wreg free
 33413                           
 33414                           ; BSR set to: 61
 33415                           ;mcc_generated_files/i2c2_master.c: 556:     return I2C2_SEND_RESTART;
 33416  00A560  0E09               	movlw	9
 33417                           
 33418                           ; BSR set to: 61
 33419  00A562  0012               	return		;funcret
 33420  00A564                     __end_of_I2C2_DO_RX_NACK_RESTART:
 33421                           	opt callstack 0
 33422                           
 33423 ;; *************** function _I2C2_DO_RX_NACK_STOP *****************
 33424 ;; Defined at:
 33425 ;;		line 546 in file "mcc_generated_files/i2c2_master.c"
 33426 ;; Parameters:    Size  Location     Type
 33427 ;;		None
 33428 ;; Auto vars:     Size  Location     Type
 33429 ;;		None
 33430 ;; Return value:  Size  Location     Type
 33431 ;;                  1    wreg      enum E16447
 33432 ;; Registers used:
 33433 ;;		wreg, status,2, cstack
 33434 ;; Tracked objects:
 33435 ;;		On entry : 3F/2
 33436 ;;		On exit  : 3F/2
 33437 ;;		Unchanged: 0/0
 33438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33443 ;;Total ram usage:        0 bytes
 33444 ;; Hardware stack levels used:    1
 33445 ;; Hardware stack levels required when called:    1
 33446 ;; This function calls:
 33447 ;;		_I2C2_DO_IDLE
 33448 ;;		_I2C2_MasterSendNack
 33449 ;;		_I2C2_MasterStop
 33450 ;; This function is called by:
 33451 ;;		_I2C2_MasterFsm
 33452 ;; This function uses a non-reentrant model
 33453 ;;
 33454                           
 33455                           	psect	text175
 33456  00A448                     __ptext175:
 33457                           	opt callstack 0
 33458  00A448                     _I2C2_DO_RX_NACK_STOP:
 33459                           	opt callstack 9
 33460                           
 33461                           ; BSR set to: 2
 33462                           ;mcc_generated_files/i2c2_master.c: 548:     I2C2_MasterSendNack();
 33463                           
 33464                           ; BSR set to: 61
 33465                           ;incstack = 0
 33466  00A448  ECD0  F052         	call	_I2C2_MasterSendNack	;wreg free
 33467                           
 33468                           ;mcc_generated_files/i2c2_master.c: 549:     I2C2_MasterStop();
 33469  00A44C  ECCD  F052         	call	_I2C2_MasterStop	;wreg free
 33470                           
 33471                           ; BSR set to: 61
 33472                           ;mcc_generated_files/i2c2_master.c: 550:     return I2C2_DO_IDLE();
 33473  00A450  EC65  F052         	call	_I2C2_DO_IDLE	;wreg free
 33474                           
 33475                           ; BSR set to: 2
 33476  00A454  0012               	return		;funcret
 33477  00A456                     __end_of_I2C2_DO_RX_NACK_STOP:
 33478                           	opt callstack 0
 33479                           
 33480 ;; *************** function _I2C2_DO_TX_ACK *****************
 33481 ;; Defined at:
 33482 ;;		line 540 in file "mcc_generated_files/i2c2_master.c"
 33483 ;; Parameters:    Size  Location     Type
 33484 ;;		None
 33485 ;; Auto vars:     Size  Location     Type
 33486 ;;		None
 33487 ;; Return value:  Size  Location     Type
 33488 ;;                  1    wreg      enum E16447
 33489 ;; Registers used:
 33490 ;;		wreg, cstack
 33491 ;; Tracked objects:
 33492 ;;		On entry : 3F/2
 33493 ;;		On exit  : 3F/3D
 33494 ;;		Unchanged: 0/0
 33495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33500 ;;Total ram usage:        0 bytes
 33501 ;; Hardware stack levels used:    1
 33502 ;; Hardware stack levels required when called:    1
 33503 ;; This function calls:
 33504 ;;		_I2C2_MasterSendAck
 33505 ;; This function is called by:
 33506 ;;		_I2C2_MasterFsm
 33507 ;; This function uses a non-reentrant model
 33508 ;;
 33509                           
 33510                           	psect	text176
 33511  00A564                     __ptext176:
 33512                           	opt callstack 0
 33513  00A564                     _I2C2_DO_TX_ACK:
 33514                           	opt callstack 9
 33515                           
 33516                           ; BSR set to: 2
 33517                           ;mcc_generated_files/i2c2_master.c: 542:     I2C2_MasterSendAck();
 33518                           
 33519                           ; BSR set to: 2
 33520                           ;incstack = 0
 33521  00A564  ECD3  F052         	call	_I2C2_MasterSendAck	;wreg free
 33522                           
 33523                           ; BSR set to: 61
 33524                           ;mcc_generated_files/i2c2_master.c: 543:     return I2C2_TX;
 33525  00A568  0E03               	movlw	3
 33526                           
 33527                           ; BSR set to: 61
 33528  00A56A  0012               	return		;funcret
 33529  00A56C                     __end_of_I2C2_DO_TX_ACK:
 33530                           	opt callstack 0
 33531                           
 33532 ;; *************** function _I2C2_DO_RX_ACK *****************
 33533 ;; Defined at:
 33534 ;;		line 534 in file "mcc_generated_files/i2c2_master.c"
 33535 ;; Parameters:    Size  Location     Type
 33536 ;;		None
 33537 ;; Auto vars:     Size  Location     Type
 33538 ;;		None
 33539 ;; Return value:  Size  Location     Type
 33540 ;;                  1    wreg      enum E16447
 33541 ;; Registers used:
 33542 ;;		wreg, cstack
 33543 ;; Tracked objects:
 33544 ;;		On entry : 3F/2
 33545 ;;		On exit  : 3F/3D
 33546 ;;		Unchanged: 0/0
 33547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33552 ;;Total ram usage:        0 bytes
 33553 ;; Hardware stack levels used:    1
 33554 ;; Hardware stack levels required when called:    1
 33555 ;; This function calls:
 33556 ;;		_I2C2_MasterSendAck
 33557 ;; This function is called by:
 33558 ;;		_I2C2_MasterFsm
 33559 ;; This function uses a non-reentrant model
 33560 ;;
 33561                           
 33562                           	psect	text177
 33563  00A56C                     __ptext177:
 33564                           	opt callstack 0
 33565  00A56C                     _I2C2_DO_RX_ACK:
 33566                           	opt callstack 9
 33567                           
 33568                           ; BSR set to: 2
 33569                           ;mcc_generated_files/i2c2_master.c: 536:     I2C2_MasterSendAck();
 33570                           
 33571                           ; BSR set to: 61
 33572                           ;incstack = 0
 33573  00A56C  ECD3  F052         	call	_I2C2_MasterSendAck	;wreg free
 33574                           
 33575                           ; BSR set to: 61
 33576                           ;mcc_generated_files/i2c2_master.c: 537:     return I2C2_RX;
 33577  00A570  0E04               	movlw	4
 33578                           
 33579                           ; BSR set to: 61
 33580  00A572  0012               	return		;funcret
 33581  00A574                     __end_of_I2C2_DO_RX_ACK:
 33582                           	opt callstack 0
 33583                           
 33584 ;; *************** function _I2C2_DO_SEND_STOP *****************
 33585 ;; Defined at:
 33586 ;;		line 523 in file "mcc_generated_files/i2c2_master.c"
 33587 ;; Parameters:    Size  Location     Type
 33588 ;;		None
 33589 ;; Auto vars:     Size  Location     Type
 33590 ;;		None
 33591 ;; Return value:  Size  Location     Type
 33592 ;;                  1    wreg      enum E16447
 33593 ;; Registers used:
 33594 ;;		wreg, status,2, cstack
 33595 ;; Tracked objects:
 33596 ;;		On entry : 3F/2
 33597 ;;		On exit  : 0/0
 33598 ;;		Unchanged: 0/0
 33599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33604 ;;Total ram usage:        0 bytes
 33605 ;; Hardware stack levels used:    1
 33606 ;; Hardware stack levels required when called:    1
 33607 ;; This function calls:
 33608 ;;		_I2C2_MasterGetCounter
 33609 ;;		_I2C2_MasterStop
 33610 ;;		i2_I2C2_MasterSendTxData
 33611 ;;		i2_I2C2_MasterSetCounter
 33612 ;; This function is called by:
 33613 ;;		_I2C2_MasterFsm
 33614 ;; This function uses a non-reentrant model
 33615 ;;
 33616                           
 33617                           	psect	text178
 33618  00A18C                     __ptext178:
 33619                           	opt callstack 0
 33620  00A18C                     _I2C2_DO_SEND_STOP:
 33621                           	opt callstack 9
 33622                           
 33623                           ; BSR set to: 2
 33624                           ;mcc_generated_files/i2c2_master.c: 525:     I2C2_MasterStop();
 33625                           
 33626                           ; BSR set to: 61
 33627                           ;incstack = 0
 33628  00A18C  ECCD  F052         	call	_I2C2_MasterStop	;wreg free
 33629                           
 33630                           ; BSR set to: 61
 33631                           ;mcc_generated_files/i2c2_master.c: 526:     if(I2C2_MasterGetCounter())
 33632  00A190  ECF1  F052         	call	_I2C2_MasterGetCounter	;wreg free
 33633  00A194  0900               	iorlw	0
 33634  00A196  B4D8               	btfsc	status,2,c
 33635  00A198  D006               	goto	i2l12073
 33636                           
 33637                           ; BSR set to: 61
 33638                           ;mcc_generated_files/i2c2_master.c: 527:     {;mcc_generated_files/i2c2_master.c: 528:  
      +                                 I2C2_MasterSetCounter(0);
 33639  00A19A  0E00               	movlw	0
 33640  00A19C  EC9C  F052         	call	i2_I2C2_MasterSetCounter
 33641                           
 33642                           ;mcc_generated_files/i2c2_master.c: 529:         I2C2_MasterSendTxData(0);
 33643  00A1A0  0E00               	movlw	0
 33644  00A1A2  EC97  F052         	call	i2_I2C2_MasterSendTxData
 33645  00A1A6                     i2l12073:
 33646                           
 33647                           ;mcc_generated_files/i2c2_master.c: 531:     return I2C2_IDLE;
 33648  00A1A6  0E00               	movlw	0
 33649  00A1A8  0012               	return		;funcret
 33650  00A1AA                     __end_of_I2C2_DO_SEND_STOP:
 33651                           	opt callstack 0
 33652                           
 33653 ;; *************** function _I2C2_DO_SEND_RESTART *****************
 33654 ;; Defined at:
 33655 ;;		line 518 in file "mcc_generated_files/i2c2_master.c"
 33656 ;; Parameters:    Size  Location     Type
 33657 ;;		None
 33658 ;; Auto vars:     Size  Location     Type
 33659 ;;		None
 33660 ;; Return value:  Size  Location     Type
 33661 ;;                  1    wreg      enum E16447
 33662 ;; Registers used:
 33663 ;;		wreg
 33664 ;; Tracked objects:
 33665 ;;		On entry : 0/2
 33666 ;;		On exit  : 0/0
 33667 ;;		Unchanged: 0/0
 33668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33673 ;;Total ram usage:        0 bytes
 33674 ;; Hardware stack levels used:    1
 33675 ;; This function calls:
 33676 ;;		Nothing
 33677 ;; This function is called by:
 33678 ;;		_I2C2_DO_ADDRESS_NACK
 33679 ;;		_I2C2_MasterFsm
 33680 ;; This function uses a non-reentrant model
 33681 ;;
 33682                           
 33683                           	psect	text179
 33684  00A5DA                     __ptext179:
 33685                           	opt callstack 0
 33686  00A5DA                     _I2C2_DO_SEND_RESTART:
 33687                           	opt callstack 10
 33688                           
 33689                           ;mcc_generated_files/i2c2_master.c: 520:     return I2C2_SEND_ADR_READ;
 33690                           
 33691                           ;incstack = 0
 33692  00A5DA  0E01               	movlw	1
 33693  00A5DC  0012               	return		;funcret
 33694  00A5DE                     __end_of_I2C2_DO_SEND_RESTART:
 33695                           	opt callstack 0
 33696                           
 33697 ;; *************** function _I2C2_DO_SEND_RESTART_WRITE *****************
 33698 ;; Defined at:
 33699 ;;		line 512 in file "mcc_generated_files/i2c2_master.c"
 33700 ;; Parameters:    Size  Location     Type
 33701 ;;		None
 33702 ;; Auto vars:     Size  Location     Type
 33703 ;;		None
 33704 ;; Return value:  Size  Location     Type
 33705 ;;                  1    wreg      enum E16447
 33706 ;; Registers used:
 33707 ;;		wreg
 33708 ;; Tracked objects:
 33709 ;;		On entry : 0/2
 33710 ;;		On exit  : 0/0
 33711 ;;		Unchanged: 0/0
 33712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33717 ;;Total ram usage:        0 bytes
 33718 ;; Hardware stack levels used:    1
 33719 ;; This function calls:
 33720 ;;		Nothing
 33721 ;; This function is called by:
 33722 ;;		_I2C2_DO_TX
 33723 ;;		_I2C2_DO_BUS_COLLISION
 33724 ;;		_I2C2_MasterFsm
 33725 ;; This function uses a non-reentrant model
 33726 ;;
 33727                           
 33728                           	psect	text180
 33729  00A5DE                     __ptext180:
 33730                           	opt callstack 0
 33731  00A5DE                     _I2C2_DO_SEND_RESTART_WRITE:
 33732                           	opt callstack 9
 33733                           
 33734                           ;mcc_generated_files/i2c2_master.c: 514:     return I2C2_SEND_ADR_WRITE;
 33735                           
 33736                           ;incstack = 0
 33737  00A5DE  0E02               	movlw	2
 33738  00A5E0  0012               	return		;funcret
 33739  00A5E2                     __end_of_I2C2_DO_SEND_RESTART_WRITE:
 33740                           	opt callstack 0
 33741                           
 33742 ;; *************** function _I2C2_DO_SEND_RESTART_READ *****************
 33743 ;; Defined at:
 33744 ;;		line 506 in file "mcc_generated_files/i2c2_master.c"
 33745 ;; Parameters:    Size  Location     Type
 33746 ;;		None
 33747 ;; Auto vars:     Size  Location     Type
 33748 ;;		None
 33749 ;; Return value:  Size  Location     Type
 33750 ;;                  1    wreg      enum E16447
 33751 ;; Registers used:
 33752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33753 ;; Tracked objects:
 33754 ;;		On entry : 0/2
 33755 ;;		On exit  : 0/0
 33756 ;;		Unchanged: 0/0
 33757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33762 ;;Total ram usage:        0 bytes
 33763 ;; Hardware stack levels used:    1
 33764 ;; Hardware stack levels required when called:   12
 33765 ;; This function calls:
 33766 ;;		i2_I2C2_DO_SEND_ADR_READ
 33767 ;;		i2_I2C2_MasterSetCounter
 33768 ;; This function is called by:
 33769 ;;		_I2C2_DO_TX
 33770 ;;		_I2C2_DO_BUS_COLLISION
 33771 ;;		_I2C2_MasterFsm
 33772 ;; This function uses a non-reentrant model
 33773 ;;
 33774                           
 33775                           	psect	text181
 33776  00A456                     __ptext181:
 33777                           	opt callstack 0
 33778  00A456                     _I2C2_DO_SEND_RESTART_READ:
 33779                           	opt callstack 0
 33780                           
 33781                           ;mcc_generated_files/i2c2_master.c: 508:     I2C2_MasterSetCounter(I2C2_Status.data_leng
      +                          th);
 33782                           
 33783                           ;incstack = 0
 33784 ;; hardware stack exceeded
 33785  00A456  0102               	movlb	2	; () banked
 33786  00A458  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 33787  00A45A  EC9C  F052         	call	i2_I2C2_MasterSetCounter
 33788                           
 33789                           ;mcc_generated_files/i2c2_master.c: 509:     return I2C2_DO_SEND_ADR_READ();
 33790  00A45E  EC35  F050         	call	i2_I2C2_DO_SEND_ADR_READ	;wreg free
 33791  00A462  0012               	return		;funcret
 33792  00A464                     __end_of_I2C2_DO_SEND_RESTART_READ:
 33793                           	opt callstack 0
 33794                           
 33795 ;; *************** function _I2C2_DO_TX_EMPTY *****************
 33796 ;; Defined at:
 33797 ;;		line 462 in file "mcc_generated_files/i2c2_master.c"
 33798 ;; Parameters:    Size  Location     Type
 33799 ;;		None
 33800 ;; Auto vars:     Size  Location     Type
 33801 ;;		None
 33802 ;; Return value:  Size  Location     Type
 33803 ;;                  1    wreg      enum E16447
 33804 ;; Registers used:
 33805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33806 ;; Tracked objects:
 33807 ;;		On entry : 3F/2
 33808 ;;		On exit  : 0/0
 33809 ;;		Unchanged: 0/0
 33810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33815 ;;Total ram usage:        2 bytes
 33816 ;; Hardware stack levels used:    1
 33817 ;; Hardware stack levels required when called:   10
 33818 ;; This function calls:
 33819 ;;		Absolute function
 33820 ;;		i2_I2C2_CallbackReturnReset
 33821 ;;		i2_I2C2_CallbackReturnStop
 33822 ;;		i2_I2C2_MasterDisableRestart
 33823 ;;		i2_I2C2_MasterEnableRestart
 33824 ;;		i2_I2C2_MasterSetCounter
 33825 ;;		i2_I2C2_NackCb
 33826 ;;		i2_rd1RegCompleteHandler
 33827 ;;		i2_rd2RegCompleteHandler
 33828 ;;		i2_rdBlkRegCompleteHandler
 33829 ;;		i2_wr1RegCompleteHandler
 33830 ;;		i2_wr2RegCompleteHandler
 33831 ;; This function is called by:
 33832 ;;		_I2C2_DO_TX
 33833 ;;		_I2C2_MasterFsm
 33834 ;; This function uses a non-reentrant model
 33835 ;;
 33836                           
 33837                           	psect	text182
 33838  008C68                     __ptext182:
 33839                           	opt callstack 0
 33840  008C68                     _I2C2_DO_TX_EMPTY:
 33841                           	opt callstack 0
 33842                           
 33843                           ; BSR set to: 2
 33844                           ;mcc_generated_files/i2c2_master.c: 464:     I2C2_Status.bufferFree = 1;
 33845                           
 33846                           ;incstack = 0
 33847  008C68  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 33848                           
 33849                           ;mcc_generated_files/i2c2_master.c: 465:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 33850  008C6A  D00E               	goto	i2l17667
 33851  008C6C                     i2l17647:
 33852                           
 33853                           ;mcc_generated_files/i2c2_master.c: 468:             I2C2_MasterEnableRestart();
 33854  008C6C  ECD9  F052         	call	i2_I2C2_MasterEnableRestart	;wreg free
 33855                           
 33856                           ; BSR set to: 61
 33857                           ;mcc_generated_files/i2c2_master.c: 469:             return I2C2_SEND_RESTART_READ;
 33858  008C70  0E07               	movlw	7
 33859  008C72  0012               	return	
 33860  008C74                     i2l17653:
 33861                           
 33862                           ;mcc_generated_files/i2c2_master.c: 472:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 33863  008C74  0102               	movlb	2	; () banked
 33864  008C76  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 33865  008C78  EC9C  F052         	call	i2_I2C2_MasterSetCounter
 33866                           
 33867                           ;mcc_generated_files/i2c2_master.c: 473:             return I2C2_TX;
 33868  008C7C  0E03               	movlw	3
 33869  008C7E  0012               	return	
 33870  008C80                     i2l17659:
 33871                           
 33872                           ;mcc_generated_files/i2c2_master.c: 476:             I2C2_MasterDisableRestart();
 33873  008C80  ECDC  F052         	call	i2_I2C2_MasterDisableRestart	;wreg free
 33874                           
 33875                           ; BSR set to: 61
 33876                           ;mcc_generated_files/i2c2_master.c: 477:             return I2C2_SEND_STOP;
 33877  008C84  0E0A               	movlw	10
 33878  008C86  0012               	return	
 33879  008C88                     i2l17667:
 33880                           
 33881                           ; BSR set to: 2
 33882  008C88  0060  F830  F005   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 33883  008C8E  0060  F834  F006   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 33884  008C94  D801               	call	i2u1803_48
 33885  008C96  D009               	goto	i2u1803_49
 33886  008C98                     i2u1803_48:
 33887  008C98  0005               	push	
 33888  008C9A  6EFA               	movwf	pclath,c
 33889  008C9C  5100               	movf	_I2C2_Status& (0+255),w,b
 33890  008C9E  6EFD               	movwf	tosl,c
 33891  008CA0  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 33892  008CA2  6EFE               	movwf	tosh,c
 33893  008CA4  6AFF               	clrf	tosu,c
 33894  008CA6  50FA               	movf	pclath,w,c
 33895  008CA8  0012               	return		;indir
 33896  008CAA                     i2u1803_49:
 33897  008CAA  6E07               	movwf	??_I2C2_DO_TX_EMPTY^0,c
 33898  008CAC  6A08               	clrf	(??_I2C2_DO_TX_EMPTY+1)^0,c
 33899                           
 33900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33901                           ; Switch size 1, requested type "simple"
 33902                           ; Number of cases is 1, Range of values is 0 to 0
 33903                           ; switch strategies available:
 33904                           ; Name         Instructions Cycles
 33905                           ; simple_byte            4     3 (average)
 33906                           ;	Chosen strategy is simple_byte
 33907  008CAE  5008               	movf	(??_I2C2_DO_TX_EMPTY+1)^0,w,c
 33908  008CB0  0A00               	xorlw	0	; case 0
 33909  008CB2  A4D8               	btfss	status,2,c
 33910  008CB4  D7E5               	goto	i2l17659
 33911                           
 33912                           ; Switch size 1, requested type "simple"
 33913                           ; Number of cases is 3, Range of values is 1 to 4
 33914                           ; switch strategies available:
 33915                           ; Name         Instructions Cycles
 33916                           ; simple_byte           10     6 (average)
 33917                           ;	Chosen strategy is simple_byte
 33918  008CB6  5007               	movf	??_I2C2_DO_TX_EMPTY^0,w,c
 33919  008CB8  0A01               	xorlw	1	; case 1
 33920  008CBA  B4D8               	btfsc	status,2,c
 33921  008CBC  D7E1               	goto	i2l17659
 33922  008CBE  0A03               	xorlw	3	; case 2
 33923  008CC0  B4D8               	btfsc	status,2,c
 33924  008CC2  D7D4               	goto	i2l17647
 33925  008CC4  0A06               	xorlw	6	; case 4
 33926  008CC6  B4D8               	btfsc	status,2,c
 33927  008CC8  D7D5               	goto	i2l17653
 33928  008CCA  D7DA               	goto	i2l17659
 33929  008CCC                     __end_of_I2C2_DO_TX_EMPTY:
 33930                           	opt callstack 0
 33931                           
 33932 ;; *************** function _I2C2_DO_RX *****************
 33933 ;; Defined at:
 33934 ;;		line 438 in file "mcc_generated_files/i2c2_master.c"
 33935 ;; Parameters:    Size  Location     Type
 33936 ;;		None
 33937 ;; Auto vars:     Size  Location     Type
 33938 ;;  retFsmState     1    2[COMRAM] enum E16447
 33939 ;; Return value:  Size  Location     Type
 33940 ;;                  1    wreg      enum E16447
 33941 ;; Registers used:
 33942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33943 ;; Tracked objects:
 33944 ;;		On entry : 3F/2
 33945 ;;		On exit  : 0/0
 33946 ;;		Unchanged: 0/0
 33947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33952 ;;Total ram usage:        3 bytes
 33953 ;; Hardware stack levels used:    1
 33954 ;; Hardware stack levels required when called:   11
 33955 ;; This function calls:
 33956 ;;		_I2C2_MasterGetRxData
 33957 ;;		_I2C2_MasterIsRxBufFull
 33958 ;;		i2_I2C2_DO_RX_EMPTY
 33959 ;; This function is called by:
 33960 ;;		_I2C2_MasterFsm
 33961 ;; This function uses a non-reentrant model
 33962 ;;
 33963                           
 33964                           	psect	text183
 33965  008808                     __ptext183:
 33966                           	opt callstack 0
 33967  008808                     _I2C2_DO_RX:
 33968                           	opt callstack 0
 33969                           
 33970                           ; BSR set to: 2
 33971                           ;mcc_generated_files/i2c2_master.c: 440:     if(!I2C2_MasterIsRxBufFull())
 33972                           
 33973                           ;incstack = 0
 33974 ;; hardware stack exceeded
 33975  008808  EC39  F052         	call	_I2C2_MasterIsRxBufFull	;wreg free
 33976  00880C  0900               	iorlw	0
 33977  00880E  A4D8               	btfss	status,2,c
 33978  008810  D002               	goto	i2l17913
 33979  008812                     i2u1842_40:
 33980                           
 33981                           ;mcc_generated_files/i2c2_master.c: 441:     {;mcc_generated_files/i2c2_master.c: 442:  
      +                                 return I2C2_RX;
 33982  008812  0E04               	movlw	4
 33983  008814  0012               	return	
 33984  008816                     i2l17913:
 33985                           
 33986                           ; BSR set to: 61
 33987                           ;mcc_generated_files/i2c2_master.c: 444:     if(I2C2_Status.addressNackCheck)
 33988  008816  0102               	movlb	2	; () banked
 33989  008818  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 33990  00881A  0B03               	andlw	3
 33991  00881C  0900               	iorlw	0
 33992  00881E  B4D8               	btfsc	status,2,c
 33993  008820  D00C               	goto	i2l1080
 33994                           
 33995                           ; BSR set to: 2
 33996                           ;mcc_generated_files/i2c2_master.c: 445:     {;mcc_generated_files/i2c2_master.c: 446:  
      +                                 I2C2_Status.addressNackCheck--;
 33997  008822  0E01               	movlw	1
 33998  008824  6E01               	movwf	??_I2C2_DO_RX^0,c
 33999  008826  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34000  008828  0B03               	andlw	3
 34001  00882A  6E02               	movwf	(??_I2C2_DO_RX+1)^0,c
 34002  00882C  5001               	movf	??_I2C2_DO_RX^0,w,c
 34003  00882E  5E02               	subwf	(??_I2C2_DO_RX+1)^0,f,c
 34004  008830  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34005  008832  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 34006  008834  0BFC               	andlw	-4
 34007  008836  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 34008  008838  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34009  00883A                     i2l1080:
 34010                           
 34011                           ; BSR set to: 2
 34012                           ;mcc_generated_files/i2c2_master.c: 449:     if(--I2C2_Status.data_length)
 34013  00883A  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 34014  00883C  A0D8               	btfss	status,0,c
 34015  00883E  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 34016  008840  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 34017  008842  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 34018  008844  B4D8               	btfsc	status,2,c
 34019  008846  D00D               	goto	i2l17927
 34020                           
 34021                           ; BSR set to: 2
 34022                           ;mcc_generated_files/i2c2_master.c: 450:     {;mcc_generated_files/i2c2_master.c: 451:  
      +                                 *I2C2_Status.data_ptr++ = I2C2_MasterGetRxData();
 34023  008848  ECD6  F052         	call	_I2C2_MasterGetRxData	;wreg free
 34024  00884C  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 34025  008852  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 34026  008858  6EDF               	movwf	indf2,c
 34027                           
 34028                           ; BSR set to: 61
 34029  00885A  0102               	movlb	2	; () banked
 34030  00885C  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 34031  00885E  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 34032  008860  D7D8               	goto	i2u1842_40
 34033  008862                     i2l17927:
 34034                           
 34035                           ; BSR set to: 2
 34036                           ;mcc_generated_files/i2c2_master.c: 455:     {;mcc_generated_files/i2c2_master.c: 456:  
      +                                 i2c2_fsm_states_t retFsmState = I2C2_DO_RX_EMPTY();
 34037  008862  EC42  F044         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 34038  008866  6E03               	movwf	I2C2_DO_RX@retFsmState^0,c
 34039                           
 34040                           ;mcc_generated_files/i2c2_master.c: 457:         *I2C2_Status.data_ptr++ = I2C2_MasterGe
      +                          tRxData();
 34041  008868  ECD6  F052         	call	_I2C2_MasterGetRxData	;wreg free
 34042  00886C  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 34043  008872  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 34044  008878  6EDF               	movwf	indf2,c
 34045                           
 34046                           ; BSR set to: 61
 34047  00887A  0102               	movlb	2	; () banked
 34048  00887C  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 34049  00887E  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 34050                           
 34051                           ; BSR set to: 2
 34052                           ;mcc_generated_files/i2c2_master.c: 458:         return retFsmState;
 34053  008880  5003               	movf	I2C2_DO_RX@retFsmState^0,w,c
 34054  008882  0012               	return		;funcret
 34055  008884                     __end_of_I2C2_DO_RX:
 34056                           	opt callstack 0
 34057                           
 34058 ;; *************** function _I2C2_DO_TX *****************
 34059 ;; Defined at:
 34060 ;;		line 405 in file "mcc_generated_files/i2c2_master.c"
 34061 ;; Parameters:    Size  Location     Type
 34062 ;;		None
 34063 ;; Auto vars:     Size  Location     Type
 34064 ;;  retFsmState     1    9[COMRAM] enum E16447
 34065 ;;  dataTx          1    8[COMRAM] unsigned char 
 34066 ;; Return value:  Size  Location     Type
 34067 ;;                  1    wreg      enum E16447
 34068 ;; Registers used:
 34069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34070 ;; Tracked objects:
 34071 ;;		On entry : 3F/2
 34072 ;;		On exit  : 0/0
 34073 ;;		Unchanged: 0/0
 34074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34076 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34079 ;;Total ram usage:        6 bytes
 34080 ;; Hardware stack levels used:    1
 34081 ;; Hardware stack levels required when called:   13
 34082 ;; This function calls:
 34083 ;;		Absolute function
 34084 ;;		_I2C2_DO_SEND_RESTART_READ
 34085 ;;		_I2C2_DO_SEND_RESTART_WRITE
 34086 ;;		_I2C2_DO_TX_EMPTY
 34087 ;;		_I2C2_MasterIsNack
 34088 ;;		_I2C2_MasterIsTxBufEmpty
 34089 ;;		i2_I2C2_CallbackReturnReset
 34090 ;;		i2_I2C2_CallbackReturnStop
 34091 ;;		i2_I2C2_MasterSendTxData
 34092 ;;		i2_I2C2_NackCb
 34093 ;;		i2_rd1RegCompleteHandler
 34094 ;;		i2_rd2RegCompleteHandler
 34095 ;;		i2_rdBlkRegCompleteHandler
 34096 ;;		i2_wr1RegCompleteHandler
 34097 ;;		i2_wr2RegCompleteHandler
 34098 ;; This function is called by:
 34099 ;;		_I2C2_MasterFsm
 34100 ;; This function uses a non-reentrant model
 34101 ;;
 34102                           
 34103                           	psect	text184
 34104  007AE0                     __ptext184:
 34105                           	opt callstack 0
 34106  007AE0                     _I2C2_DO_TX:
 34107                           	opt callstack 0
 34108                           
 34109                           ; BSR set to: 2
 34110                           ;mcc_generated_files/i2c2_master.c: 407:     if(I2C2_MasterIsNack())
 34111                           
 34112                           ;incstack = 0
 34113 ;; hardware stack exceeded
 34114  007AE0  EC32  F052         	call	_I2C2_MasterIsNack	;wreg free
 34115  007AE4  0900               	iorlw	0
 34116  007AE6  A4D8               	btfss	status,2,c
 34117  007AE8  D009               	goto	i2l17869
 34118  007AEA  D02C               	goto	i2l17871
 34119  007AEC                     i2l17855:
 34120                           
 34121                           ;mcc_generated_files/i2c2_master.c: 412:                 return I2C2_DO_SEND_RESTART_REA
      +                          D();
 34122  007AEC  EC2B  F052         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 34123  007AF0  0012               	return	
 34124  007AF2                     i2l17859:
 34125                           
 34126                           ;mcc_generated_files/i2c2_master.c: 414:                   return I2C2_DO_SEND_RESTART_W
      +                          RITE();
 34127  007AF2  ECEF  F052         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 34128  007AF6  0012               	return	
 34129  007AF8                     i2l17863:
 34130                           
 34131                           ;mcc_generated_files/i2c2_master.c: 418:                 return I2C2_IDLE;
 34132  007AF8  0E00               	movlw	0
 34133  007AFA  0012               	return	
 34134  007AFC                     i2l17869:
 34135                           
 34136                           ; BSR set to: 61
 34137  007AFC  0060  F848  F005   	movff	_I2C2_Status+18,i2rd1RegCompleteHandler@ptr
 34138  007B02  0060  F84C  F006   	movff	_I2C2_Status+19,i2rd1RegCompleteHandler@ptr+1
 34139  007B08  D801               	call	i2u1838_48
 34140  007B0A  D00A               	goto	i2u1838_49
 34141  007B0C                     i2u1838_48:
 34142  007B0C  0005               	push	
 34143  007B0E  6EFA               	movwf	pclath,c
 34144  007B10  0102               	movlb	2	; () banked
 34145  007B12  5106               	movf	(_I2C2_Status+6)& (0+255),w,b
 34146  007B14  6EFD               	movwf	tosl,c
 34147  007B16  5107               	movf	(_I2C2_Status+7)& (0+255),w,b
 34148  007B18  6EFE               	movwf	tosh,c
 34149  007B1A  6AFF               	clrf	tosu,c
 34150  007B1C  50FA               	movf	pclath,w,c
 34151  007B1E  0012               	return		;indir
 34152  007B20                     i2u1838_49:
 34153  007B20  6E07               	movwf	??_I2C2_DO_TX^0,c
 34154  007B22  6A08               	clrf	(??_I2C2_DO_TX+1)^0,c
 34155                           
 34156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34157                           ; Switch size 1, requested type "simple"
 34158                           ; Number of cases is 1, Range of values is 0 to 0
 34159                           ; switch strategies available:
 34160                           ; Name         Instructions Cycles
 34161                           ; simple_byte            4     3 (average)
 34162                           ;	Chosen strategy is simple_byte
 34163  007B24  5008               	movf	(??_I2C2_DO_TX+1)^0,w,c
 34164  007B26  0A00               	xorlw	0	; case 0
 34165  007B28  A4D8               	btfss	status,2,c
 34166  007B2A  D7E6               	goto	i2l17863
 34167                           
 34168                           ; Switch size 1, requested type "simple"
 34169                           ; Number of cases is 4, Range of values is 1 to 4
 34170                           ; switch strategies available:
 34171                           ; Name         Instructions Cycles
 34172                           ; simple_byte           13     7 (average)
 34173                           ;	Chosen strategy is simple_byte
 34174  007B2C  5007               	movf	??_I2C2_DO_TX^0,w,c
 34175  007B2E  0A01               	xorlw	1	; case 1
 34176  007B30  B4D8               	btfsc	status,2,c
 34177  007B32  D7E2               	goto	i2l17863
 34178  007B34  0A03               	xorlw	3	; case 2
 34179  007B36  B4D8               	btfsc	status,2,c
 34180  007B38  D7D9               	goto	i2l17855
 34181  007B3A  0A01               	xorlw	1	; case 3
 34182  007B3C  B4D8               	btfsc	status,2,c
 34183  007B3E  D7D9               	goto	i2l17859
 34184  007B40  0A07               	xorlw	7	; case 4
 34185  007B42  D7DA               	goto	i2l17863
 34186  007B44                     i2l17871:
 34187                           
 34188                           ; BSR set to: 61
 34189  007B44  EC6B  F052         	call	_I2C2_MasterIsTxBufEmpty	;wreg free
 34190  007B48  0900               	iorlw	0
 34191  007B4A  B4D8               	btfsc	status,2,c
 34192  007B4C  D036               	goto	i2l17897
 34193                           
 34194                           ; BSR set to: 61
 34195                           ;mcc_generated_files/i2c2_master.c: 422:     {;mcc_generated_files/i2c2_master.c: 423:  
      +                                 if(I2C2_Status.addressNackCheck)
 34196  007B4E  0102               	movlb	2	; () banked
 34197  007B50  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34198  007B52  0B03               	andlw	3
 34199  007B54  0900               	iorlw	0
 34200  007B56  B4D8               	btfsc	status,2,c
 34201  007B58  D00C               	goto	i2l17877
 34202                           
 34203                           ; BSR set to: 2
 34204                           ;mcc_generated_files/i2c2_master.c: 424:         {;mcc_generated_files/i2c2_master.c: 42
      +                          5:             I2C2_Status.addressNackCheck--;
 34205  007B5A  0E01               	movlw	1
 34206  007B5C  6E07               	movwf	??_I2C2_DO_TX^0,c
 34207  007B5E  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34208  007B60  0B03               	andlw	3
 34209  007B62  6E08               	movwf	(??_I2C2_DO_TX+1)^0,c
 34210  007B64  5007               	movf	??_I2C2_DO_TX^0,w,c
 34211  007B66  5E08               	subwf	(??_I2C2_DO_TX+1)^0,f,c
 34212  007B68  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34213  007B6A  1808               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 34214  007B6C  0BFC               	andlw	-4
 34215  007B6E  1808               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 34216  007B70  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34217  007B72                     i2l17877:
 34218                           
 34219                           ; BSR set to: 2
 34220                           ;mcc_generated_files/i2c2_master.c: 427:         uint8_t dataTx = *I2C2_Status.data_ptr+
      +                          +;
 34221  007B72  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 34222  007B78  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 34223  007B7E  50DF               	movf	indf2,w,c
 34224  007B80  6E09               	movwf	I2C2_DO_TX@dataTx^0,c
 34225                           
 34226                           ; BSR set to: 2
 34227  007B82  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 34228  007B84  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 34229                           
 34230                           ; BSR set to: 2
 34231                           ;mcc_generated_files/i2c2_master.c: 428:         i2c2_fsm_states_t retFsmState = (--I2C2
      +                          _Status.data_length)?I2C2_TX:I2C2_DO_TX_EMPTY();
 34232  007B86  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 34233  007B88  A0D8               	btfss	status,0,c
 34234  007B8A  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 34235  007B8C  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 34236  007B8E  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 34237  007B90  A4D8               	btfss	status,2,c
 34238  007B92  D007               	goto	i2l17885
 34239                           
 34240                           ; BSR set to: 2
 34241  007B94  EC34  F046         	call	_I2C2_DO_TX_EMPTY	;wreg free
 34242  007B98  6E07               	movwf	??_I2C2_DO_TX^0,c
 34243  007B9A  5007               	movf	??_I2C2_DO_TX^0,w,c
 34244  007B9C  6E0B               	movwf	_I2C2_DO_TX$2655^0,c
 34245  007B9E  6A0C               	clrf	(_I2C2_DO_TX$2655+1)^0,c
 34246  007BA0  D004               	goto	i2l17887
 34247  007BA2                     i2l17885:
 34248                           
 34249                           ; BSR set to: 2
 34250  007BA2  0E00               	movlw	0
 34251  007BA4  6E0C               	movwf	(_I2C2_DO_TX$2655+1)^0,c
 34252  007BA6  0E03               	movlw	3
 34253  007BA8  6E0B               	movwf	_I2C2_DO_TX$2655^0,c
 34254  007BAA                     i2l17887:
 34255  007BAA  0060  F02C  F00A   	movff	_I2C2_DO_TX$2655,I2C2_DO_TX@retFsmState
 34256                           
 34257                           ;mcc_generated_files/i2c2_master.c: 429:         I2C2_MasterSendTxData(dataTx);
 34258  007BB0  5009               	movf	I2C2_DO_TX@dataTx^0,w,c
 34259  007BB2  EC97  F052         	call	i2_I2C2_MasterSendTxData
 34260                           
 34261                           ;mcc_generated_files/i2c2_master.c: 430:         return retFsmState;
 34262  007BB6  500A               	movf	I2C2_DO_TX@retFsmState^0,w,c
 34263  007BB8  0012               	return	
 34264  007BBA                     i2l17897:
 34265                           
 34266                           ; BSR set to: 61
 34267                           ;mcc_generated_files/i2c2_master.c: 433:     {;mcc_generated_files/i2c2_master.c: 434:  
      +                                 return I2C2_TX;
 34268  007BBA  0E03               	movlw	3
 34269  007BBC  0012               	return		;funcret
 34270  007BBE                     __end_of_I2C2_DO_TX:
 34271                           	opt callstack 0
 34272                           
 34273 ;; *************** function _I2C2_DO_IDLE *****************
 34274 ;; Defined at:
 34275 ;;		line 380 in file "mcc_generated_files/i2c2_master.c"
 34276 ;; Parameters:    Size  Location     Type
 34277 ;;		None
 34278 ;; Auto vars:     Size  Location     Type
 34279 ;;		None
 34280 ;; Return value:  Size  Location     Type
 34281 ;;                  1    wreg      enum E16447
 34282 ;; Registers used:
 34283 ;;		wreg, status,2
 34284 ;; Tracked objects:
 34285 ;;		On entry : 0/2
 34286 ;;		On exit  : 3F/2
 34287 ;;		Unchanged: 0/0
 34288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34293 ;;Total ram usage:        0 bytes
 34294 ;; Hardware stack levels used:    1
 34295 ;; This function calls:
 34296 ;;		Nothing
 34297 ;; This function is called by:
 34298 ;;		_I2C2_DO_RX_NACK_STOP
 34299 ;;		_I2C2_MasterFsm
 34300 ;; This function uses a non-reentrant model
 34301 ;;
 34302                           
 34303                           	psect	text185
 34304  00A4CA                     __ptext185:
 34305                           	opt callstack 0
 34306  00A4CA                     _I2C2_DO_IDLE:
 34307                           	opt callstack 9
 34308                           
 34309                           ;mcc_generated_files/i2c2_master.c: 382:     I2C2_Status.busy = 0;
 34310                           
 34311                           ;incstack = 0
 34312  00A4CA  0102               	movlb	2	; () banked
 34313  00A4CC  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 34314                           
 34315                           ; BSR set to: 2
 34316                           ;mcc_generated_files/i2c2_master.c: 383:     I2C2_Status.error = I2C2_NOERR;
 34317  00A4CE  0E00               	movlw	0
 34318  00A4D0  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 34319                           
 34320                           ; BSR set to: 2
 34321                           ;mcc_generated_files/i2c2_master.c: 384:     return I2C2_RESET;
 34322  00A4D2  0E0F               	movlw	15
 34323                           
 34324                           ; BSR set to: 2
 34325  00A4D4  0012               	return		;funcret
 34326  00A4D6                     __end_of_I2C2_DO_IDLE:
 34327                           	opt callstack 0
 34328                           
 34329 ;; *************** function i2_I2C2_DO_SEND_ADR_WRITE *****************
 34330 ;; Defined at:
 34331 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 34332 ;; Parameters:    Size  Location     Type
 34333 ;;		None
 34334 ;; Auto vars:     Size  Location     Type
 34335 ;;		None
 34336 ;; Return value:  Size  Location     Type
 34337 ;;                  1    wreg      enum E16447
 34338 ;; Registers used:
 34339 ;;		wreg, status,2, status,0, cstack
 34340 ;; Tracked objects:
 34341 ;;		On entry : 0/0
 34342 ;;		On exit  : 0/0
 34343 ;;		Unchanged: 0/0
 34344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34349 ;;Total ram usage:        0 bytes
 34350 ;; Hardware stack levels used:    1
 34351 ;; Hardware stack levels required when called:    1
 34352 ;; This function calls:
 34353 ;;		i2_I2C2_MasterSendTxData
 34354 ;; This function is called by:
 34355 ;; This function uses a non-reentrant model
 34356 ;;
 34357                           
 34358                           	psect	text186
 34359  00A252                     __ptext186:
 34360                           	opt callstack 0
 34361  00A252                     i2_I2C2_DO_SEND_ADR_WRITE:
 34362                           	opt callstack 9
 34363                           
 34364                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 34365                           
 34366                           ; BSR set to: 2
 34367                           ;incstack = 0
 34368  00A252  0102               	movlb	2	; () banked
 34369  00A254  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34370  00A256  0BFC               	andlw	-4
 34371  00A258  0902               	iorlw	2
 34372  00A25A  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34373                           
 34374                           ; BSR set to: 2
 34375                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 34376  00A25C  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 34377  00A25E  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 34378  00A260  EC97  F052         	call	i2_I2C2_MasterSendTxData
 34379                           
 34380                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 34381  00A264  0E03               	movlw	3
 34382  00A266  0012               	return		;funcret
 34383  00A268                     __end_ofi2_I2C2_DO_SEND_ADR_WRITE:
 34384                           	opt callstack 0
 34385                           
 34386 ;; *************** function _I2C2_MasterIsTxBufEmpty *****************
 34387 ;; Defined at:
 34388 ;;		line 741 in file "mcc_generated_files/i2c2_master.c"
 34389 ;; Parameters:    Size  Location     Type
 34390 ;;		None
 34391 ;; Auto vars:     Size  Location     Type
 34392 ;;		None
 34393 ;; Return value:  Size  Location     Type
 34394 ;;                  1    wreg      _Bool 
 34395 ;; Registers used:
 34396 ;;		wreg
 34397 ;; Tracked objects:
 34398 ;;		On entry : 3F/3D
 34399 ;;		On exit  : 3F/3D
 34400 ;;		Unchanged: 0/0
 34401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34406 ;;Total ram usage:        0 bytes
 34407 ;; Hardware stack levels used:    1
 34408 ;; This function calls:
 34409 ;;		Nothing
 34410 ;; This function is called by:
 34411 ;;		_I2C2_DO_TX
 34412 ;; This function uses a non-reentrant model
 34413 ;;
 34414                           
 34415                           	psect	text187
 34416  00A4D6                     __ptext187:
 34417                           	opt callstack 0
 34418  00A4D6                     _I2C2_MasterIsTxBufEmpty:
 34419                           	opt callstack 9
 34420                           
 34421                           ; BSR set to: 61
 34422                           ;mcc_generated_files/i2c2_master.c: 743:     return I2C2STAT1bits.TXBE;
 34423                           
 34424                           ;incstack = 0
 34425  00A4D6  AB62               	btfss	98,5,b	;volatile
 34426  00A4D8  D002               	goto	i2u1021_40
 34427  00A4DA  0E01               	movlw	1
 34428  00A4DC  0012               	return	
 34429  00A4DE                     i2u1021_40:
 34430  00A4DE  0E00               	movlw	0
 34431                           
 34432                           ; BSR set to: 61
 34433  00A4E0  0012               	return		;funcret
 34434  00A4E2                     __end_of_I2C2_MasterIsTxBufEmpty:
 34435                           	opt callstack 0
 34436                           
 34437 ;; *************** function _I2C2_MasterIsNack *****************
 34438 ;; Defined at:
 34439 ;;		line 714 in file "mcc_generated_files/i2c2_master.c"
 34440 ;; Parameters:    Size  Location     Type
 34441 ;;		None
 34442 ;; Auto vars:     Size  Location     Type
 34443 ;;		None
 34444 ;; Return value:  Size  Location     Type
 34445 ;;                  1    wreg      _Bool 
 34446 ;; Registers used:
 34447 ;;		wreg
 34448 ;; Tracked objects:
 34449 ;;		On entry : 3F/2
 34450 ;;		On exit  : 3F/3D
 34451 ;;		Unchanged: 0/0
 34452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34457 ;;Total ram usage:        0 bytes
 34458 ;; Hardware stack levels used:    1
 34459 ;; This function calls:
 34460 ;;		Nothing
 34461 ;; This function is called by:
 34462 ;;		_I2C2_MasterFsm
 34463 ;;		_I2C2_DO_TX
 34464 ;; This function uses a non-reentrant model
 34465 ;;
 34466                           
 34467                           	psect	text188
 34468  00A464                     __ptext188:
 34469                           	opt callstack 0
 34470  00A464                     _I2C2_MasterIsNack:
 34471                           	opt callstack 10
 34472                           
 34473                           ; BSR set to: 2
 34474                           ;mcc_generated_files/i2c2_master.c: 716:     return I2C2CON1bits.ACKSTAT;
 34475                           
 34476                           ; BSR set to: 61
 34477                           ;incstack = 0
 34478  00A464  013D               	movlb	61	; () banked
 34479  00A466  AB5E               	btfss	94,5,b	;volatile
 34480  00A468  D002               	goto	i2u1017_40
 34481  00A46A  0E01               	movlw	1
 34482  00A46C  0012               	return	
 34483  00A46E                     i2u1017_40:
 34484  00A46E  0E00               	movlw	0
 34485                           
 34486                           ; BSR set to: 61
 34487  00A470  0012               	return		;funcret
 34488  00A472                     __end_of_I2C2_MasterIsNack:
 34489                           	opt callstack 0
 34490                           
 34491 ;; *************** function _I2C2_MasterGetCounter *****************
 34492 ;; Defined at:
 34493 ;;		line 676 in file "mcc_generated_files/i2c2_master.c"
 34494 ;; Parameters:    Size  Location     Type
 34495 ;;		None
 34496 ;; Auto vars:     Size  Location     Type
 34497 ;;		None
 34498 ;; Return value:  Size  Location     Type
 34499 ;;                  1    wreg      unsigned char 
 34500 ;; Registers used:
 34501 ;;		wreg, status,2
 34502 ;; Tracked objects:
 34503 ;;		On entry : 3F/3D
 34504 ;;		On exit  : 3F/3D
 34505 ;;		Unchanged: 0/0
 34506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34511 ;;Total ram usage:        0 bytes
 34512 ;; Hardware stack levels used:    1
 34513 ;; This function calls:
 34514 ;;		Nothing
 34515 ;; This function is called by:
 34516 ;;		_I2C2_DO_SEND_STOP
 34517 ;; This function uses a non-reentrant model
 34518 ;;
 34519                           
 34520                           	psect	text189
 34521  00A5E2                     __ptext189:
 34522                           	opt callstack 0
 34523  00A5E2                     _I2C2_MasterGetCounter:
 34524                           	opt callstack 9
 34525                           
 34526                           ; BSR set to: 61
 34527                           ;mcc_generated_files/i2c2_master.c: 678:     return I2C2CNT;
 34528                           
 34529                           ; BSR set to: 61
 34530                           ;incstack = 0
 34531  00A5E2  5156               	movf	86,w,b	;volatile
 34532                           
 34533                           ; BSR set to: 61
 34534  00A5E4  0012               	return		;funcret
 34535  00A5E6                     __end_of_I2C2_MasterGetCounter:
 34536                           	opt callstack 0
 34537                           
 34538 ;; *************** function _I2C2_MasterStop *****************
 34539 ;; Defined at:
 34540 ;;		line 708 in file "mcc_generated_files/i2c2_master.c"
 34541 ;; Parameters:    Size  Location     Type
 34542 ;;		None
 34543 ;; Auto vars:     Size  Location     Type
 34544 ;;		None
 34545 ;; Return value:  Size  Location     Type
 34546 ;;                  1    wreg      void 
 34547 ;; Registers used:
 34548 ;;		None
 34549 ;; Tracked objects:
 34550 ;;		On entry : 0/2
 34551 ;;		On exit  : 3F/3D
 34552 ;;		Unchanged: 0/0
 34553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34558 ;;Total ram usage:        0 bytes
 34559 ;; Hardware stack levels used:    1
 34560 ;; This function calls:
 34561 ;;		Nothing
 34562 ;; This function is called by:
 34563 ;;		_I2C2_DO_SEND_STOP
 34564 ;;		_I2C2_DO_RX_NACK_STOP
 34565 ;; This function uses a non-reentrant model
 34566 ;;
 34567                           
 34568                           	psect	text190
 34569  00A59A                     __ptext190:
 34570                           	opt callstack 0
 34571  00A59A                     _I2C2_MasterStop:
 34572                           	opt callstack 9
 34573                           
 34574                           ;mcc_generated_files/i2c2_master.c: 711:     I2C2CON0bits.S = 0;
 34575                           
 34576                           ; BSR set to: 61
 34577                           ;incstack = 0
 34578  00A59A  013D               	movlb	61	; () banked
 34579  00A59C  9B5D               	bcf	93,5,b	;volatile
 34580                           
 34581                           ; BSR set to: 61
 34582  00A59E  0012               	return		;funcret
 34583  00A5A0                     __end_of_I2C2_MasterStop:
 34584                           	opt callstack 0
 34585                           
 34586 ;; *************** function _I2C2_MasterSendNack *****************
 34587 ;; Defined at:
 34588 ;;		line 724 in file "mcc_generated_files/i2c2_master.c"
 34589 ;; Parameters:    Size  Location     Type
 34590 ;;		None
 34591 ;; Auto vars:     Size  Location     Type
 34592 ;;		None
 34593 ;; Return value:  Size  Location     Type
 34594 ;;                  1    wreg      void 
 34595 ;; Registers used:
 34596 ;;		None
 34597 ;; Tracked objects:
 34598 ;;		On entry : 3F/2
 34599 ;;		On exit  : 3F/3D
 34600 ;;		Unchanged: 0/0
 34601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34606 ;;Total ram usage:        0 bytes
 34607 ;; Hardware stack levels used:    1
 34608 ;; This function calls:
 34609 ;;		Nothing
 34610 ;; This function is called by:
 34611 ;;		_I2C2_DO_RX_NACK_STOP
 34612 ;;		_I2C2_DO_RX_NACK_RESTART
 34613 ;; This function uses a non-reentrant model
 34614 ;;
 34615                           
 34616                           	psect	text191
 34617  00A5A0                     __ptext191:
 34618                           	opt callstack 0
 34619  00A5A0                     _I2C2_MasterSendNack:
 34620                           	opt callstack 9
 34621                           
 34622                           ; BSR set to: 2
 34623                           ;mcc_generated_files/i2c2_master.c: 726:     I2C2CON1bits.ACKDT = 1;
 34624                           
 34625                           ; BSR set to: 61
 34626                           ;incstack = 0
 34627  00A5A0  013D               	movlb	61	; () banked
 34628  00A5A2  8D5E               	bsf	94,6,b	;volatile
 34629                           
 34630                           ; BSR set to: 61
 34631  00A5A4  0012               	return		;funcret
 34632  00A5A6                     __end_of_I2C2_MasterSendNack:
 34633                           	opt callstack 0
 34634                           
 34635 ;; *************** function _I2C2_MasterSendAck *****************
 34636 ;; Defined at:
 34637 ;;		line 719 in file "mcc_generated_files/i2c2_master.c"
 34638 ;; Parameters:    Size  Location     Type
 34639 ;;		None
 34640 ;; Auto vars:     Size  Location     Type
 34641 ;;		None
 34642 ;; Return value:  Size  Location     Type
 34643 ;;                  1    wreg      void 
 34644 ;; Registers used:
 34645 ;;		None
 34646 ;; Tracked objects:
 34647 ;;		On entry : 3F/2
 34648 ;;		On exit  : 3F/3D
 34649 ;;		Unchanged: 0/0
 34650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34655 ;;Total ram usage:        0 bytes
 34656 ;; Hardware stack levels used:    1
 34657 ;; This function calls:
 34658 ;;		Nothing
 34659 ;; This function is called by:
 34660 ;;		_I2C2_DO_RX_ACK
 34661 ;;		_I2C2_DO_TX_ACK
 34662 ;; This function uses a non-reentrant model
 34663 ;;
 34664                           
 34665                           	psect	text192
 34666  00A5A6                     __ptext192:
 34667                           	opt callstack 0
 34668  00A5A6                     _I2C2_MasterSendAck:
 34669                           	opt callstack 9
 34670                           
 34671                           ; BSR set to: 2
 34672                           ;mcc_generated_files/i2c2_master.c: 721:     I2C2CON1bits.ACKDT = 0;
 34673                           
 34674                           ; BSR set to: 61
 34675                           ;incstack = 0
 34676  00A5A6  013D               	movlb	61	; () banked
 34677  00A5A8  9D5E               	bcf	94,6,b	;volatile
 34678                           
 34679                           ; BSR set to: 61
 34680  00A5AA  0012               	return		;funcret
 34681  00A5AC                     __end_of_I2C2_MasterSendAck:
 34682                           	opt callstack 0
 34683                           
 34684 ;; *************** function _I2C2_MasterIsRxBufFull *****************
 34685 ;; Defined at:
 34686 ;;		line 736 in file "mcc_generated_files/i2c2_master.c"
 34687 ;; Parameters:    Size  Location     Type
 34688 ;;		None
 34689 ;; Auto vars:     Size  Location     Type
 34690 ;;		None
 34691 ;; Return value:  Size  Location     Type
 34692 ;;                  1    wreg      _Bool 
 34693 ;; Registers used:
 34694 ;;		wreg
 34695 ;; Tracked objects:
 34696 ;;		On entry : 3F/2
 34697 ;;		On exit  : 3F/3D
 34698 ;;		Unchanged: 0/0
 34699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34704 ;;Total ram usage:        0 bytes
 34705 ;; Hardware stack levels used:    1
 34706 ;; This function calls:
 34707 ;;		Nothing
 34708 ;; This function is called by:
 34709 ;;		_I2C2_DO_RX
 34710 ;; This function uses a non-reentrant model
 34711 ;;
 34712                           
 34713                           	psect	text193
 34714  00A472                     __ptext193:
 34715                           	opt callstack 0
 34716  00A472                     _I2C2_MasterIsRxBufFull:
 34717                           	opt callstack 9
 34718                           
 34719                           ; BSR set to: 2
 34720                           ;mcc_generated_files/i2c2_master.c: 738:     return I2C2STAT1bits.RXBF;
 34721                           
 34722                           ; BSR set to: 61
 34723                           ;incstack = 0
 34724  00A472  013D               	movlb	61	; () banked
 34725  00A474  A162               	btfss	98,0,b	;volatile
 34726  00A476  D002               	goto	i2u1023_40
 34727  00A478  0E01               	movlw	1
 34728  00A47A  0012               	return	
 34729  00A47C                     i2u1023_40:
 34730  00A47C  0E00               	movlw	0
 34731                           
 34732                           ; BSR set to: 61
 34733  00A47E  0012               	return		;funcret
 34734  00A480                     __end_of_I2C2_MasterIsRxBufFull:
 34735                           	opt callstack 0
 34736                           
 34737 ;; *************** function _I2C2_MasterGetRxData *****************
 34738 ;; Defined at:
 34739 ;;		line 666 in file "mcc_generated_files/i2c2_master.c"
 34740 ;; Parameters:    Size  Location     Type
 34741 ;;		None
 34742 ;; Auto vars:     Size  Location     Type
 34743 ;;		None
 34744 ;; Return value:  Size  Location     Type
 34745 ;;                  1    wreg      unsigned char 
 34746 ;; Registers used:
 34747 ;;		wreg, status,2
 34748 ;; Tracked objects:
 34749 ;;		On entry : 0/2
 34750 ;;		On exit  : 3F/3D
 34751 ;;		Unchanged: 0/0
 34752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34757 ;;Total ram usage:        0 bytes
 34758 ;; Hardware stack levels used:    1
 34759 ;; This function calls:
 34760 ;;		Nothing
 34761 ;; This function is called by:
 34762 ;;		_I2C2_DO_RX
 34763 ;; This function uses a non-reentrant model
 34764 ;;
 34765                           
 34766                           	psect	text194
 34767  00A5AC                     __ptext194:
 34768                           	opt callstack 0
 34769  00A5AC                     _I2C2_MasterGetRxData:
 34770                           	opt callstack 9
 34771                           
 34772                           ;mcc_generated_files/i2c2_master.c: 668:     return I2C2RXB;
 34773                           
 34774                           ; BSR set to: 61
 34775                           ;incstack = 0
 34776  00A5AC  013D               	movlb	61	; () banked
 34777  00A5AE  5154               	movf	84,w,b	;volatile
 34778                           
 34779                           ; BSR set to: 61
 34780  00A5B0  0012               	return		;funcret
 34781  00A5B2                     __end_of_I2C2_MasterGetRxData:
 34782                           	opt callstack 0
 34783                           
 34784 ;; *************** function i2_I2C2_MasterClearIrq *****************
 34785 ;; Defined at:
 34786 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 34787 ;; Parameters:    Size  Location     Type
 34788 ;;		None
 34789 ;; Auto vars:     Size  Location     Type
 34790 ;;		None
 34791 ;; Return value:  Size  Location     Type
 34792 ;;                  1    wreg      void 
 34793 ;; Registers used:
 34794 ;;		wreg, status,2
 34795 ;; Tracked objects:
 34796 ;;		On entry : 3F/2
 34797 ;;		On exit  : 3F/3D
 34798 ;;		Unchanged: 0/0
 34799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34804 ;;Total ram usage:        0 bytes
 34805 ;; Hardware stack levels used:    1
 34806 ;; This function calls:
 34807 ;;		Nothing
 34808 ;; This function is called by:
 34809 ;;		_I2C2_DO_BUS_COLLISION
 34810 ;; This function uses a non-reentrant model
 34811 ;;
 34812                           
 34813                           	psect	text195
 34814  00A574                     __ptext195:
 34815                           	opt callstack 0
 34816  00A574                     i2_I2C2_MasterClearIrq:
 34817                           	opt callstack 9
 34818                           
 34819                           ; BSR set to: 2
 34820                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 34821                           
 34822                           ; BSR set to: 61
 34823                           ;incstack = 0
 34824  00A574  0E00               	movlw	0
 34825  00A576  013D               	movlb	61	; () banked
 34826  00A578  6F63               	movwf	99,b	;volatile
 34827                           
 34828                           ; BSR set to: 61
 34829  00A57A  0012               	return		;funcret
 34830  00A57C                     __end_ofi2_I2C2_MasterClearIrq:
 34831                           	opt callstack 0
 34832                           
 34833 ;; *************** function i2_I2C2_MasterSendTxData *****************
 34834 ;; Defined at:
 34835 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 34836 ;; Parameters:    Size  Location     Type
 34837 ;;  data            1    wreg     unsigned char 
 34838 ;; Auto vars:     Size  Location     Type
 34839 ;;  data            1    0[COMRAM] unsigned char 
 34840 ;; Return value:  Size  Location     Type
 34841 ;;                  1    wreg      void 
 34842 ;; Registers used:
 34843 ;;		wreg
 34844 ;; Tracked objects:
 34845 ;;		On entry : 0/2
 34846 ;;		On exit  : 0/0
 34847 ;;		Unchanged: 0/0
 34848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34853 ;;Total ram usage:        1 bytes
 34854 ;; Hardware stack levels used:    1
 34855 ;; This function calls:
 34856 ;;		Nothing
 34857 ;; This function is called by:
 34858 ;;		_I2C2_DO_TX
 34859 ;;		_I2C2_DO_SEND_STOP
 34860 ;;		i2_I2C2_DO_SEND_ADR_READ
 34861 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 34862 ;; This function uses a non-reentrant model
 34863 ;;
 34864                           
 34865                           	psect	text196
 34866  00A52E                     __ptext196:
 34867                           	opt callstack 0
 34868  00A52E                     i2_I2C2_MasterSendTxData:
 34869                           	opt callstack 9
 34870                           
 34871                           ; BSR set to: 61
 34872                           ;incstack = 0
 34873                           ;i2I2C2_MasterSendTxData@data stored from wreg
 34874  00A52E  6E01               	movwf	i2I2C2_MasterSendTxData@data^0,c
 34875                           
 34876                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 34877  00A530  0060  F007  FD55   	movff	i2I2C2_MasterSendTxData@data,15701	;volatile
 34878  00A536  0012               	return		;funcret
 34879  00A538                     __end_ofi2_I2C2_MasterSendTxData:
 34880                           	opt callstack 0
 34881                           
 34882 ;; *************** function i2_I2C2_MasterSetCounter *****************
 34883 ;; Defined at:
 34884 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 34885 ;; Parameters:    Size  Location     Type
 34886 ;;  counter         1    wreg     unsigned char 
 34887 ;; Auto vars:     Size  Location     Type
 34888 ;;  counter         1    0[COMRAM] unsigned char 
 34889 ;; Return value:  Size  Location     Type
 34890 ;;                  1    wreg      void 
 34891 ;; Registers used:
 34892 ;;		wreg
 34893 ;; Tracked objects:
 34894 ;;		On entry : 0/2
 34895 ;;		On exit  : 0/0
 34896 ;;		Unchanged: 0/0
 34897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34902 ;;Total ram usage:        1 bytes
 34903 ;; Hardware stack levels used:    1
 34904 ;; This function calls:
 34905 ;;		Nothing
 34906 ;; This function is called by:
 34907 ;;		_I2C2_DO_TX_EMPTY
 34908 ;;		_I2C2_DO_SEND_RESTART_READ
 34909 ;;		_I2C2_DO_SEND_STOP
 34910 ;;		i2_I2C2_DO_RX_EMPTY
 34911 ;; This function uses a non-reentrant model
 34912 ;;
 34913                           
 34914                           	psect	text197
 34915  00A538                     __ptext197:
 34916                           	opt callstack 0
 34917  00A538                     i2_I2C2_MasterSetCounter:
 34918                           	opt callstack 8
 34919                           
 34920                           ;incstack = 0
 34921                           ;i2I2C2_MasterSetCounter@counter stored from wreg
 34922  00A538  6E01               	movwf	i2I2C2_MasterSetCounter@counter^0,c
 34923                           
 34924                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 34925  00A53A  0060  F007  FD56   	movff	i2I2C2_MasterSetCounter@counter,15702	;volatile
 34926  00A540  0012               	return		;funcret
 34927  00A542                     __end_ofi2_I2C2_MasterSetCounter:
 34928                           	opt callstack 0
 34929                           
 34930 ;; *************** function i2_I2C2_MasterEnableRestart *****************
 34931 ;; Defined at:
 34932 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 34933 ;; Parameters:    Size  Location     Type
 34934 ;;		None
 34935 ;; Auto vars:     Size  Location     Type
 34936 ;;		None
 34937 ;; Return value:  Size  Location     Type
 34938 ;;                  1    wreg      void 
 34939 ;; Registers used:
 34940 ;;		None
 34941 ;; Tracked objects:
 34942 ;;		On entry : 0/2
 34943 ;;		On exit  : 3F/3D
 34944 ;;		Unchanged: 0/0
 34945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34950 ;;Total ram usage:        0 bytes
 34951 ;; Hardware stack levels used:    1
 34952 ;; This function calls:
 34953 ;;		Nothing
 34954 ;; This function is called by:
 34955 ;;		_I2C2_DO_TX_EMPTY
 34956 ;;		i2_I2C2_DO_RX_EMPTY
 34957 ;; This function uses a non-reentrant model
 34958 ;;
 34959                           
 34960                           	psect	text198
 34961  00A5B2                     __ptext198:
 34962                           	opt callstack 0
 34963  00A5B2                     i2_I2C2_MasterEnableRestart:
 34964                           	opt callstack 8
 34965                           
 34966                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 34967                           
 34968                           ;incstack = 0
 34969  00A5B2  013D               	movlb	61	; () banked
 34970  00A5B4  8D5D               	bsf	93,6,b	;volatile
 34971                           
 34972                           ; BSR set to: 61
 34973  00A5B6  0012               	return		;funcret
 34974  00A5B8                     __end_ofi2_I2C2_MasterEnableRestart:
 34975                           	opt callstack 0
 34976                           
 34977 ;; *************** function i2_I2C2_MasterDisableRestart *****************
 34978 ;; Defined at:
 34979 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 34980 ;; Parameters:    Size  Location     Type
 34981 ;;		None
 34982 ;; Auto vars:     Size  Location     Type
 34983 ;;		None
 34984 ;; Return value:  Size  Location     Type
 34985 ;;                  1    wreg      void 
 34986 ;; Registers used:
 34987 ;;		None
 34988 ;; Tracked objects:
 34989 ;;		On entry : 0/2
 34990 ;;		On exit  : 3F/3D
 34991 ;;		Unchanged: 0/0
 34992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34997 ;;Total ram usage:        0 bytes
 34998 ;; Hardware stack levels used:    1
 34999 ;; This function calls:
 35000 ;;		Nothing
 35001 ;; This function is called by:
 35002 ;;		_I2C2_DO_TX_EMPTY
 35003 ;;		i2_I2C2_DO_RX_EMPTY
 35004 ;; This function uses a non-reentrant model
 35005 ;;
 35006                           
 35007                           	psect	text199
 35008  00A5B8                     __ptext199:
 35009                           	opt callstack 0
 35010  00A5B8                     i2_I2C2_MasterDisableRestart:
 35011                           	opt callstack 8
 35012                           
 35013                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 35014                           
 35015                           ; BSR set to: 61
 35016                           ;incstack = 0
 35017  00A5B8  013D               	movlb	61	; () banked
 35018  00A5BA  9D5D               	bcf	93,6,b	;volatile
 35019                           
 35020                           ; BSR set to: 61
 35021  00A5BC  0012               	return		;funcret
 35022  00A5BE                     __end_ofi2_I2C2_MasterDisableRestart:
 35023                           	opt callstack 0
 35024                           
 35025 ;; *************** function _I2C2_MasterResetBus *****************
 35026 ;; Defined at:
 35027 ;;		line 686 in file "mcc_generated_files/i2c2_master.c"
 35028 ;; Parameters:    Size  Location     Type
 35029 ;;		None
 35030 ;; Auto vars:     Size  Location     Type
 35031 ;;		None
 35032 ;; Return value:  Size  Location     Type
 35033 ;;                  1    wreg      void 
 35034 ;; Registers used:
 35035 ;;		None
 35036 ;; Tracked objects:
 35037 ;;		On entry : 0/2
 35038 ;;		On exit  : 3F/3D
 35039 ;;		Unchanged: 0/0
 35040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35045 ;;Total ram usage:        0 bytes
 35046 ;; Hardware stack levels used:    1
 35047 ;; This function calls:
 35048 ;;		Nothing
 35049 ;; This function is called by:
 35050 ;;		_I2C2_DO_RESET
 35051 ;;		_I2C2_DO_BUS_ERROR
 35052 ;; This function uses a non-reentrant model
 35053 ;;
 35054                           
 35055                           	psect	text200
 35056  00A542                     __ptext200:
 35057                           	opt callstack 0
 35058  00A542                     _I2C2_MasterResetBus:
 35059                           	opt callstack 9
 35060                           
 35061                           ;mcc_generated_files/i2c2_master.c: 689:     I2C2CON0bits.EN = 0;
 35062                           
 35063                           ; BSR set to: 61
 35064                           ;incstack = 0
 35065  00A542  013D               	movlb	61	; () banked
 35066  00A544  9F5D               	bcf	93,7,b	;volatile
 35067                           
 35068                           ;mcc_generated_files/i2c2_master.c: 691:     I2C2STAT1bits.CLRBF = 1;
 35069  00A546  8562               	bsf	98,2,b	;volatile
 35070                           
 35071                           ;mcc_generated_files/i2c2_master.c: 693:     I2C2CON0bits.EN = 1;
 35072  00A548  8F5D               	bsf	93,7,b	;volatile
 35073                           
 35074                           ; BSR set to: 61
 35075  00A54A  0012               	return		;funcret
 35076  00A54C                     __end_of_I2C2_MasterResetBus:
 35077                           	opt callstack 0
 35078                           
 35079 ;; *************** function i2_I2C2_NackCb *****************
 35080 ;; Defined at:
 35081 ;;		line 13 in file "i2c2_mux.c"
 35082 ;; Parameters:    Size  Location     Type
 35083 ;;  ptr             2    4[COMRAM] PTR void 
 35084 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35085 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35086 ;; Auto vars:     Size  Location     Type
 35087 ;;		None
 35088 ;; Return value:  Size  Location     Type
 35089 ;;                  1    wreg      enum E16390
 35090 ;; Registers used:
 35091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35092 ;; Tracked objects:
 35093 ;;		On entry : 3F/2
 35094 ;;		On exit  : 3C/0
 35095 ;;		Unchanged: 0/0
 35096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35101 ;;Total ram usage:        2 bytes
 35102 ;; Hardware stack levels used:    1
 35103 ;; Hardware stack levels required when called:    9
 35104 ;; This function calls:
 35105 ;;		i2_I2C2_CallbackReturnStop
 35106 ;;		i2_printf
 35107 ;; This function is called by:
 35108 ;;		_I2C2_DO_RX_EMPTY
 35109 ;;		i2_I2C2_DO_RX_EMPTY
 35110 ;;		_I2C2_DO_TX_EMPTY
 35111 ;;		_I2C2_DO_TX
 35112 ;;		_I2C2_DO_ADDRESS_NACK
 35113 ;;		_I2C2_DO_BUS_COLLISION
 35114 ;; This function uses a non-reentrant model
 35115 ;;
 35116                           
 35117                           	psect	text201
 35118  009AB0                     __ptext201:
 35119                           	opt callstack 0
 35120  009AB0                     i2_I2C2_NackCb:
 35121                           	opt callstack 0
 35122                           
 35123                           ; BSR set to: 2
 35124                           ;i2c2_mux.c: 14:     printf ("I2C2 E\n");
 35125                           
 35126                           ; BSR set to: 61
 35127                           ;incstack = 0
 35128 ;; hardware stack exceeded
 35129  009AB0  0ECA               	movlw	low STR_61
 35130  009AB2  0100               	movlb	0	; () banked
 35131  009AB4  6F7B               	movwf	i2printf@fmt& (0+255),b
 35132  009AB6  0EFF               	movlw	high STR_61
 35133  009AB8  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 35134  009ABA  EC87  F04F         	call	i2_printf	;wreg free
 35135                           
 35136                           ; BSR set to: 2
 35137                           ;i2c2_mux.c: 15:     if (currentTrfAddr == 0x50) {
 35138  009ABE  0E50               	movlw	80
 35139  009AC0  0101               	movlb	1	; () banked
 35140  009AC2  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 35141  009AC4  A4D8               	btfss	status,2,c
 35142  009AC6  D003               	goto	i2l17245
 35143                           
 35144                           ; BSR set to: 1
 35145                           ;i2c2_mux.c: 16:         lastI2C2MAckResponse = 0;
 35146  009AC8  0E00               	movlw	0
 35147  009ACA  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 35148                           
 35149                           ;i2c2_mux.c: 17:     } else {
 35150  009ACC  D003               	goto	i2l17247
 35151  009ACE                     i2l17245:
 35152                           
 35153                           ; BSR set to: 1
 35154                           ;i2c2_mux.c: 18:         lastI2C2LAckResponse = 0;
 35155  009ACE  0E00               	movlw	0
 35156  009AD0  0102               	movlb	2	; () banked
 35157  009AD2  6F4D               	movwf	_lastI2C2LAckResponse& (0+255),b
 35158  009AD4                     i2l17247:
 35159                           
 35160                           ;i2c2_mux.c: 20:     return I2C2_CallbackReturnStop(((void*)0));
 35161  009AD4  0E00               	movlw	0
 35162  009AD6  6E05               	movwf	i2I2C2_CallbackReturnStop@funPtr^0,c
 35163  009AD8  0E00               	movlw	0
 35164  009ADA  6E06               	movwf	(i2I2C2_CallbackReturnStop@funPtr+1)^0,c
 35165  009ADC  ECF5  F052         	call	i2_I2C2_CallbackReturnStop	;wreg free
 35166  009AE0  0012               	return		;funcret
 35167  009AE2                     __end_ofi2_I2C2_NackCb:
 35168                           	opt callstack 0
 35169                           
 35170 ;; *************** function i2_I2C2_CallbackReturnReset *****************
 35171 ;; Defined at:
 35172 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 35173 ;; Parameters:    Size  Location     Type
 35174 ;;  funPtr          2    4[COMRAM] PTR void 
 35175 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35176 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35177 ;; Auto vars:     Size  Location     Type
 35178 ;;		None
 35179 ;; Return value:  Size  Location     Type
 35180 ;;                  1    wreg      enum E358
 35181 ;; Registers used:
 35182 ;;		wreg
 35183 ;; Tracked objects:
 35184 ;;		On entry : 3F/2
 35185 ;;		On exit  : 3F/2
 35186 ;;		Unchanged: 3F/0
 35187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35192 ;;Total ram usage:        2 bytes
 35193 ;; Hardware stack levels used:    1
 35194 ;; This function calls:
 35195 ;;		Nothing
 35196 ;; This function is called by:
 35197 ;;		_I2C2_DO_RX_EMPTY
 35198 ;;		i2_I2C2_DO_RX_EMPTY
 35199 ;;		_I2C2_DO_TX_EMPTY
 35200 ;;		_I2C2_DO_TX
 35201 ;;		_I2C2_DO_ADDRESS_NACK
 35202 ;;		_I2C2_DO_BUS_COLLISION
 35203 ;; This function uses a non-reentrant model
 35204 ;;
 35205                           
 35206                           	psect	text202
 35207  00A5E6                     __ptext202:
 35208                           	opt callstack 0
 35209  00A5E6                     i2_I2C2_CallbackReturnReset:
 35210                           	opt callstack 8
 35211                           
 35212                           ; BSR set to: 2
 35213                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 35214                           
 35215                           ;incstack = 0
 35216  00A5E6  0E05               	movlw	5
 35217                           
 35218                           ; BSR set to: 2
 35219  00A5E8  0012               	return		;funcret
 35220  00A5EA                     __end_ofi2_I2C2_CallbackReturnReset:
 35221                           	opt callstack 0
 35222                           
 35223 ;; *************** function i2_I2C2_CallbackReturnStop *****************
 35224 ;; Defined at:
 35225 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 35226 ;; Parameters:    Size  Location     Type
 35227 ;;  funPtr          2    4[COMRAM] PTR void 
 35228 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35229 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35230 ;; Auto vars:     Size  Location     Type
 35231 ;;		None
 35232 ;; Return value:  Size  Location     Type
 35233 ;;                  1    wreg      enum E358
 35234 ;; Registers used:
 35235 ;;		wreg
 35236 ;; Tracked objects:
 35237 ;;		On entry : 3C/2
 35238 ;;		On exit  : 3C/0
 35239 ;;		Unchanged: 3C/0
 35240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35245 ;;Total ram usage:        2 bytes
 35246 ;; Hardware stack levels used:    1
 35247 ;; This function calls:
 35248 ;;		Nothing
 35249 ;; This function is called by:
 35250 ;;		i2_I2C2_SetCallback
 35251 ;;		i2_I2C2_NackCb
 35252 ;;		_I2C2_DO_RX_EMPTY
 35253 ;;		i2_I2C2_DO_RX_EMPTY
 35254 ;;		_I2C2_DO_TX_EMPTY
 35255 ;;		_I2C2_DO_TX
 35256 ;;		_I2C2_DO_ADDRESS_NACK
 35257 ;;		_I2C2_DO_BUS_COLLISION
 35258 ;; This function uses a non-reentrant model
 35259 ;;
 35260                           
 35261                           	psect	text203
 35262  00A5EA                     __ptext203:
 35263                           	opt callstack 0
 35264  00A5EA                     i2_I2C2_CallbackReturnStop:
 35265                           	opt callstack 7
 35266                           
 35267                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 35268                           
 35269                           ; BSR set to: 2
 35270                           ;incstack = 0
 35271  00A5EA  0E01               	movlw	1
 35272  00A5EC  0012               	return		;funcret
 35273  00A5EE                     __end_ofi2_I2C2_CallbackReturnStop:
 35274                           	opt callstack 0
 35275                           
 35276 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 35277 ;; Defined at:
 35278 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35279 ;; Parameters:    Size  Location     Type
 35280 ;;  ptr             2    4[COMRAM] PTR void 
 35281 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35282 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35283 ;; Auto vars:     Size  Location     Type
 35284 ;;		None
 35285 ;; Return value:  Size  Location     Type
 35286 ;;                  1    wreg      enum E358
 35287 ;; Registers used:
 35288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35289 ;; Tracked objects:
 35290 ;;		On entry : 3F/2
 35291 ;;		On exit  : 0/0
 35292 ;;		Unchanged: 0/0
 35293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35298 ;;Total ram usage:        2 bytes
 35299 ;; Hardware stack levels used:    1
 35300 ;; Hardware stack levels required when called:    2
 35301 ;; This function calls:
 35302 ;;		i2_I2C2_SetBuffer
 35303 ;;		i2_I2C2_SetDataCompleteCallback
 35304 ;; This function is called by:
 35305 ;;		_I2C2_DO_RX_EMPTY
 35306 ;;		i2_I2C2_DO_RX_EMPTY
 35307 ;;		_I2C2_DO_TX_EMPTY
 35308 ;;		_I2C2_DO_TX
 35309 ;;		_I2C2_DO_ADDRESS_NACK
 35310 ;;		_I2C2_DO_BUS_COLLISION
 35311 ;; This function uses a non-reentrant model
 35312 ;;
 35313                           
 35314                           	psect	text204
 35315  0092AE                     __ptext204:
 35316                           	opt callstack 0
 35317  0092AE                     i2_rdBlkRegCompleteHandler:
 35318                           	opt callstack 6
 35319                           
 35320                           ; BSR set to: 2
 35321                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 35322                           
 35323                           ;incstack = 0
 35324  0092AE  EE20 F002          	lfsr	2,2
 35325  0092B2  5005               	movf	i2rdBlkRegCompleteHandler@ptr^0,w,c
 35326  0092B4  26D9               	addwf	fsr2l,f,c
 35327  0092B6  5006               	movf	(i2rdBlkRegCompleteHandler@ptr+1)^0,w,c
 35328  0092B8  22DA               	addwfc	fsr2h,f,c
 35329  0092BA  006F FF78  F001    	movff	postinc2,i2I2C2_SetBuffer@buffer
 35330  0092C0  006F FF74  F002    	movff	postdec2,i2I2C2_SetBuffer@buffer+1
 35331  0092C6  0060  F017  FFD9   	movff	i2rdBlkRegCompleteHandler@ptr,fsr2l
 35332  0092CC  0060  F01B  FFDA   	movff	i2rdBlkRegCompleteHandler@ptr+1,fsr2h
 35333  0092D2  006F FF78  F003    	movff	postinc2,i2I2C2_SetBuffer@bufferSize
 35334  0092D8  006F FF74  F004    	movff	postdec2,i2I2C2_SetBuffer@bufferSize+1
 35335  0092DE  ECA7  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35336                           
 35337                           ; BSR set to: 2
 35338                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35339  0092E2  0E00               	movlw	0
 35340  0092E4  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35341  0092E6  0E00               	movlw	0
 35342  0092E8  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35343  0092EA  0E00               	movlw	0
 35344  0092EC  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35345  0092EE  0E00               	movlw	0
 35346  0092F0  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35347  0092F2  EC97  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35348                           
 35349                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 35350  0092F6  0E02               	movlw	2
 35351  0092F8  0012               	return		;funcret
 35352  0092FA                     __end_ofi2_rdBlkRegCompleteHandler:
 35353                           	opt callstack 0
 35354                           
 35355 ;; *************** function i2_wr1RegCompleteHandler *****************
 35356 ;; Defined at:
 35357 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35358 ;; Parameters:    Size  Location     Type
 35359 ;;  ptr             2    4[COMRAM] PTR void 
 35360 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35361 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35362 ;; Auto vars:     Size  Location     Type
 35363 ;;		None
 35364 ;; Return value:  Size  Location     Type
 35365 ;;                  1    wreg      enum E358
 35366 ;; Registers used:
 35367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35368 ;; Tracked objects:
 35369 ;;		On entry : 3F/2
 35370 ;;		On exit  : 0/0
 35371 ;;		Unchanged: 0/0
 35372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35377 ;;Total ram usage:        2 bytes
 35378 ;; Hardware stack levels used:    1
 35379 ;; Hardware stack levels required when called:    2
 35380 ;; This function calls:
 35381 ;;		i2_I2C2_SetBuffer
 35382 ;;		i2_I2C2_SetDataCompleteCallback
 35383 ;; This function is called by:
 35384 ;;		_I2C2_DO_RX_EMPTY
 35385 ;;		i2_I2C2_DO_RX_EMPTY
 35386 ;;		_I2C2_DO_TX_EMPTY
 35387 ;;		_I2C2_DO_TX
 35388 ;;		_I2C2_DO_ADDRESS_NACK
 35389 ;;		_I2C2_DO_BUS_COLLISION
 35390 ;; This function uses a non-reentrant model
 35391 ;;
 35392                           
 35393                           	psect	text205
 35394  009B74                     __ptext205:
 35395                           	opt callstack 0
 35396  009B74                     i2_wr1RegCompleteHandler:
 35397                           	opt callstack 6
 35398                           
 35399                           ; BSR set to: 2
 35400                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 35401                           
 35402                           ;incstack = 0
 35403  009B74  0060  F014  F001   	movff	i2wr1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35404  009B7A  0060  F018  F002   	movff	i2wr1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35405  009B80  0E00               	movlw	0
 35406  009B82  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35407  009B84  0E01               	movlw	1
 35408  009B86  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35409  009B88  ECA7  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35410                           
 35411                           ; BSR set to: 2
 35412                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35413  009B8C  0E00               	movlw	0
 35414  009B8E  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35415  009B90  0E00               	movlw	0
 35416  009B92  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35417  009B94  0E00               	movlw	0
 35418  009B96  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35419  009B98  0E00               	movlw	0
 35420  009B9A  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35421  009B9C  EC97  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35422                           
 35423                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 35424  009BA0  0E04               	movlw	4
 35425  009BA2  0012               	return		;funcret
 35426  009BA4                     __end_ofi2_wr1RegCompleteHandler:
 35427                           	opt callstack 0
 35428                           
 35429 ;; *************** function i2_rd2RegCompleteHandler *****************
 35430 ;; Defined at:
 35431 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35432 ;; Parameters:    Size  Location     Type
 35433 ;;  ptr             2    4[COMRAM] PTR void 
 35434 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35435 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35436 ;; Auto vars:     Size  Location     Type
 35437 ;;		None
 35438 ;; Return value:  Size  Location     Type
 35439 ;;                  1    wreg      enum E358
 35440 ;; Registers used:
 35441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35442 ;; Tracked objects:
 35443 ;;		On entry : 3F/2
 35444 ;;		On exit  : 0/0
 35445 ;;		Unchanged: 0/0
 35446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35451 ;;Total ram usage:        2 bytes
 35452 ;; Hardware stack levels used:    1
 35453 ;; Hardware stack levels required when called:    2
 35454 ;; This function calls:
 35455 ;;		i2_I2C2_SetBuffer
 35456 ;;		i2_I2C2_SetDataCompleteCallback
 35457 ;; This function is called by:
 35458 ;;		_I2C2_DO_RX_EMPTY
 35459 ;;		i2_I2C2_DO_RX_EMPTY
 35460 ;;		_I2C2_DO_TX_EMPTY
 35461 ;;		_I2C2_DO_TX
 35462 ;;		_I2C2_DO_ADDRESS_NACK
 35463 ;;		_I2C2_DO_BUS_COLLISION
 35464 ;; This function uses a non-reentrant model
 35465 ;;
 35466                           
 35467                           	psect	text206
 35468  009BA4                     __ptext206:
 35469                           	opt callstack 0
 35470  009BA4                     i2_rd2RegCompleteHandler:
 35471                           	opt callstack 6
 35472                           
 35473                           ; BSR set to: 2
 35474                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 35475                           
 35476                           ;incstack = 0
 35477  009BA4  0060  F014  F001   	movff	i2rd2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35478  009BAA  0060  F018  F002   	movff	i2rd2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35479  009BB0  0E00               	movlw	0
 35480  009BB2  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35481  009BB4  0E02               	movlw	2
 35482  009BB6  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35483  009BB8  ECA7  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35484                           
 35485                           ; BSR set to: 2
 35486                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35487  009BBC  0E00               	movlw	0
 35488  009BBE  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35489  009BC0  0E00               	movlw	0
 35490  009BC2  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35491  009BC4  0E00               	movlw	0
 35492  009BC6  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35493  009BC8  0E00               	movlw	0
 35494  009BCA  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35495  009BCC  EC97  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35496                           
 35497                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 35498  009BD0  0E02               	movlw	2
 35499  009BD2  0012               	return		;funcret
 35500  009BD4                     __end_ofi2_rd2RegCompleteHandler:
 35501                           	opt callstack 0
 35502                           
 35503 ;; *************** function i2_rd1RegCompleteHandler *****************
 35504 ;; Defined at:
 35505 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35506 ;; Parameters:    Size  Location     Type
 35507 ;;  ptr             2    4[COMRAM] PTR void 
 35508 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35509 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35510 ;; Auto vars:     Size  Location     Type
 35511 ;;		None
 35512 ;; Return value:  Size  Location     Type
 35513 ;;                  1    wreg      enum E358
 35514 ;; Registers used:
 35515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35516 ;; Tracked objects:
 35517 ;;		On entry : 3F/2
 35518 ;;		On exit  : 0/0
 35519 ;;		Unchanged: 0/0
 35520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35525 ;;Total ram usage:        2 bytes
 35526 ;; Hardware stack levels used:    1
 35527 ;; Hardware stack levels required when called:    2
 35528 ;; This function calls:
 35529 ;;		i2_I2C2_SetBuffer
 35530 ;;		i2_I2C2_SetDataCompleteCallback
 35531 ;; This function is called by:
 35532 ;;		_I2C2_DO_RX_EMPTY
 35533 ;;		i2_I2C2_DO_RX_EMPTY
 35534 ;;		_I2C2_DO_TX_EMPTY
 35535 ;;		_I2C2_DO_TX
 35536 ;;		_I2C2_DO_ADDRESS_NACK
 35537 ;;		_I2C2_DO_BUS_COLLISION
 35538 ;; This function uses a non-reentrant model
 35539 ;;
 35540                           
 35541                           	psect	text207
 35542  009BD4                     __ptext207:
 35543                           	opt callstack 0
 35544  009BD4                     i2_rd1RegCompleteHandler:
 35545                           	opt callstack 6
 35546                           
 35547                           ; BSR set to: 2
 35548                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 35549                           
 35550                           ;incstack = 0
 35551  009BD4  0060  F014  F001   	movff	i2rd1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35552  009BDA  0060  F018  F002   	movff	i2rd1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35553  009BE0  0E00               	movlw	0
 35554  009BE2  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35555  009BE4  0E01               	movlw	1
 35556  009BE6  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35557  009BE8  ECA7  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35558                           
 35559                           ; BSR set to: 2
 35560                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35561  009BEC  0E00               	movlw	0
 35562  009BEE  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35563  009BF0  0E00               	movlw	0
 35564  009BF2  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35565  009BF4  0E00               	movlw	0
 35566  009BF6  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35567  009BF8  0E00               	movlw	0
 35568  009BFA  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35569  009BFC  EC97  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35570                           
 35571                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 35572  009C00  0E02               	movlw	2
 35573  009C02  0012               	return		;funcret
 35574  009C04                     __end_ofi2_rd1RegCompleteHandler:
 35575                           	opt callstack 0
 35576                           
 35577 ;; *************** function i2_wr2RegCompleteHandler *****************
 35578 ;; Defined at:
 35579 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35580 ;; Parameters:    Size  Location     Type
 35581 ;;  ptr             2    4[COMRAM] PTR void 
 35582 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35583 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35584 ;; Auto vars:     Size  Location     Type
 35585 ;;		None
 35586 ;; Return value:  Size  Location     Type
 35587 ;;                  1    wreg      enum E358
 35588 ;; Registers used:
 35589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35590 ;; Tracked objects:
 35591 ;;		On entry : 3F/2
 35592 ;;		On exit  : 0/0
 35593 ;;		Unchanged: 0/0
 35594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35599 ;;Total ram usage:        2 bytes
 35600 ;; Hardware stack levels used:    1
 35601 ;; Hardware stack levels required when called:    2
 35602 ;; This function calls:
 35603 ;;		i2_I2C2_SetBuffer
 35604 ;;		i2_I2C2_SetDataCompleteCallback
 35605 ;; This function is called by:
 35606 ;;		_I2C2_DO_RX_EMPTY
 35607 ;;		i2_I2C2_DO_RX_EMPTY
 35608 ;;		_I2C2_DO_TX_EMPTY
 35609 ;;		_I2C2_DO_TX
 35610 ;;		_I2C2_DO_ADDRESS_NACK
 35611 ;;		_I2C2_DO_BUS_COLLISION
 35612 ;; This function uses a non-reentrant model
 35613 ;;
 35614                           
 35615                           	psect	text208
 35616  009C04                     __ptext208:
 35617                           	opt callstack 0
 35618  009C04                     i2_wr2RegCompleteHandler:
 35619                           	opt callstack 6
 35620                           
 35621                           ; BSR set to: 2
 35622                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 35623                           
 35624                           ;incstack = 0
 35625  009C04  0060  F014  F001   	movff	i2wr2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35626  009C0A  0060  F018  F002   	movff	i2wr2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35627  009C10  0E00               	movlw	0
 35628  009C12  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35629  009C14  0E02               	movlw	2
 35630  009C16  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35631  009C18  ECA7  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35632                           
 35633                           ; BSR set to: 2
 35634                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35635  009C1C  0E00               	movlw	0
 35636  009C1E  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35637  009C20  0E00               	movlw	0
 35638  009C22  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35639  009C24  0E00               	movlw	0
 35640  009C26  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35641  009C28  0E00               	movlw	0
 35642  009C2A  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35643  009C2C  EC97  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35644                           
 35645                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 35646  009C30  0E04               	movlw	4
 35647  009C32  0012               	return		;funcret
 35648  009C34                     __end_ofi2_wr2RegCompleteHandler:
 35649                           	opt callstack 0
 35650                           
 35651 ;; *************** function i2_I2C2_SetDataCompleteCallback *****************
 35652 ;; Defined at:
 35653 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 35654 ;; Parameters:    Size  Location     Type
 35655 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 35656 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 35657 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 35658 ;;  ptr             2    7[COMRAM] PTR void 
 35659 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35660 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35661 ;; Auto vars:     Size  Location     Type
 35662 ;;		None
 35663 ;; Return value:  Size  Location     Type
 35664 ;;                  1    wreg      void 
 35665 ;; Registers used:
 35666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35667 ;; Tracked objects:
 35668 ;;		On entry : 3F/2
 35669 ;;		On exit  : 0/0
 35670 ;;		Unchanged: 0/0
 35671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35675 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35676 ;;Total ram usage:        4 bytes
 35677 ;; Hardware stack levels used:    1
 35678 ;; Hardware stack levels required when called:    1
 35679 ;; This function calls:
 35680 ;;		i2_I2C2_SetCallback
 35681 ;; This function is called by:
 35682 ;;		i2_rd1RegCompleteHandler
 35683 ;;		i2_rd2RegCompleteHandler
 35684 ;;		i2_wr1RegCompleteHandler
 35685 ;;		i2_wr2RegCompleteHandler
 35686 ;;		i2_rdBlkRegCompleteHandler
 35687 ;; This function uses a non-reentrant model
 35688 ;;
 35689                           
 35690                           	psect	text209
 35691  00A12E                     __ptext209:
 35692                           	opt callstack 0
 35693  00A12E                     i2_I2C2_SetDataCompleteCallback:
 35694                           	opt callstack 6
 35695                           
 35696                           ; BSR set to: 2
 35697                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 35698                           
 35699                           ;incstack = 0
 35700  00A12E  0060  F018  F001   	movff	i2I2C2_SetDataCompleteCallback@cb,i2I2C2_SetCallback@cb
 35701  00A134  0060  F01C  F002   	movff	i2I2C2_SetDataCompleteCallback@cb+1,i2I2C2_SetCallback@cb+1
 35702  00A13A  0060  F020  F003   	movff	i2I2C2_SetDataCompleteCallback@ptr,i2I2C2_SetCallback@ptr
 35703  00A140  0060  F024  F004   	movff	i2I2C2_SetDataCompleteCallback@ptr+1,i2I2C2_SetCallback@ptr+1
 35704  00A146  0E00               	movlw	0
 35705  00A148  ECBB  F044         	call	i2_I2C2_SetCallback
 35706  00A14C  0012               	return		;funcret
 35707  00A14E                     __end_ofi2_I2C2_SetDataCompleteCallback:
 35708                           	opt callstack 0
 35709                           
 35710 ;; *************** function i2_I2C2_SetCallback *****************
 35711 ;; Defined at:
 35712 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 35713 ;; Parameters:    Size  Location     Type
 35714 ;;  idx             1    wreg     enum E16468
 35715 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 35716 ;;		 -> I2C2_NackCb(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 35717 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 35718 ;;  ptr             2    2[COMRAM] PTR void 
 35719 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35720 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35721 ;; Auto vars:     Size  Location     Type
 35722 ;;  idx             1    4[COMRAM] enum E16468
 35723 ;; Return value:  Size  Location     Type
 35724 ;;                  1    wreg      void 
 35725 ;; Registers used:
 35726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35727 ;; Tracked objects:
 35728 ;;		On entry : 3F/2
 35729 ;;		On exit  : 0/0
 35730 ;;		Unchanged: 0/0
 35731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35735 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35736 ;;Total ram usage:        5 bytes
 35737 ;; Hardware stack levels used:    1
 35738 ;; This function calls:
 35739 ;;		Nothing
 35740 ;; This function is called by:
 35741 ;;		i2_I2C2_SetDataCompleteCallback
 35742 ;; This function uses a non-reentrant model
 35743 ;;
 35744                           
 35745                           	psect	text210
 35746  008976                     __ptext210:
 35747                           	opt callstack 0
 35748  008976                     i2_I2C2_SetCallback:
 35749                           	opt callstack 6
 35750                           
 35751                           ;incstack = 0
 35752                           ;i2I2C2_SetCallback@idx stored from wreg
 35753  008976  6E05               	movwf	i2I2C2_SetCallback@idx^0,c
 35754                           
 35755                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 35756  008978  5001               	movf	i2I2C2_SetCallback@cb^0,w,c
 35757  00897A  1002               	iorwf	(i2I2C2_SetCallback@cb+1)^0,w,c
 35758  00897C  B4D8               	btfsc	status,2,c
 35759  00897E  D01D               	goto	i2l11065
 35760                           
 35761                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 35762  008980  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35763  008982  0D02               	mullw	2
 35764  008984  0E00               	movlw	low _I2C2_Status
 35765  008986  24F3               	addwf	243,w,c
 35766  008988  6ED9               	movwf	fsr2l,c
 35767  00898A  0E02               	movlw	high _I2C2_Status
 35768  00898C  20F4               	addwfc	prodh,w,c
 35769  00898E  6EDA               	movwf	fsr2h,c
 35770  008990  0060  F007  FFDE   	movff	i2I2C2_SetCallback@cb,postinc2
 35771  008996  0060  F00B  FFDD   	movff	i2I2C2_SetCallback@cb+1,postdec2
 35772                           
 35773                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 35774  00899C  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35775  00899E  0D02               	mullw	2
 35776  0089A0  0E0C               	movlw	low (_I2C2_Status+12)
 35777  0089A2  24F3               	addwf	243,w,c
 35778  0089A4  6ED9               	movwf	fsr2l,c
 35779  0089A6  0E02               	movlw	high (_I2C2_Status+12)
 35780  0089A8  20F4               	addwfc	prodh,w,c
 35781  0089AA  6EDA               	movwf	fsr2h,c
 35782  0089AC  0060  F00F  FFDE   	movff	i2I2C2_SetCallback@ptr,postinc2
 35783  0089B2  0060  F013  FFDD   	movff	i2I2C2_SetCallback@ptr+1,postdec2
 35784                           
 35785                           ;mcc_generated_files/i2c2_master.c: 340:     }
 35786  0089B8  0012               	return	
 35787  0089BA                     i2l11065:
 35788                           
 35789                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 35790  0089BA  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35791  0089BC  0D02               	mullw	2
 35792  0089BE  0E00               	movlw	low _I2C2_Status
 35793  0089C0  24F3               	addwf	243,w,c
 35794  0089C2  6ED9               	movwf	fsr2l,c
 35795  0089C4  0E02               	movlw	high _I2C2_Status
 35796  0089C6  20F4               	addwfc	prodh,w,c
 35797  0089C8  6EDA               	movwf	fsr2h,c
 35798  0089CA  0EEA               	movlw	low i2_I2C2_CallbackReturnStop
 35799  0089CC  6EDE               	movwf	postinc2,c
 35800  0089CE  0EA5               	movlw	high i2_I2C2_CallbackReturnStop
 35801  0089D0  6EDD               	movwf	postdec2,c
 35802                           
 35803                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 35804  0089D2  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35805  0089D4  0D02               	mullw	2
 35806  0089D6  0E0C               	movlw	low (_I2C2_Status+12)
 35807  0089D8  24F3               	addwf	243,w,c
 35808  0089DA  6ED9               	movwf	fsr2l,c
 35809  0089DC  0E02               	movlw	high (_I2C2_Status+12)
 35810  0089DE  20F4               	addwfc	prodh,w,c
 35811  0089E0  6EDA               	movwf	fsr2h,c
 35812  0089E2  0E00               	movlw	0
 35813  0089E4  6EDE               	movwf	postinc2,c
 35814  0089E6  0E00               	movlw	0
 35815  0089E8  6EDD               	movwf	postdec2,c
 35816  0089EA  0012               	return		;funcret
 35817  0089EC                     __end_ofi2_I2C2_SetCallback:
 35818                           	opt callstack 0
 35819                           
 35820 ;; *************** function i2_I2C2_SetBuffer *****************
 35821 ;; Defined at:
 35822 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 35823 ;; Parameters:    Size  Location     Type
 35824 ;;  buffer          2    0[COMRAM] PTR void 
 35825 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 35826 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 35827 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 35828 ;;  bufferSize      2    2[COMRAM] unsigned int 
 35829 ;; Auto vars:     Size  Location     Type
 35830 ;;		None
 35831 ;; Return value:  Size  Location     Type
 35832 ;;                  1    wreg      void 
 35833 ;; Registers used:
 35834 ;;		wreg, status,2, status,0
 35835 ;; Tracked objects:
 35836 ;;		On entry : 3F/2
 35837 ;;		On exit  : 3F/2
 35838 ;;		Unchanged: 0/0
 35839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35844 ;;Total ram usage:        4 bytes
 35845 ;; Hardware stack levels used:    1
 35846 ;; This function calls:
 35847 ;;		Nothing
 35848 ;; This function is called by:
 35849 ;;		i2_rd1RegCompleteHandler
 35850 ;;		i2_rd2RegCompleteHandler
 35851 ;;		i2_wr1RegCompleteHandler
 35852 ;;		i2_wr2RegCompleteHandler
 35853 ;;		i2_rdBlkRegCompleteHandler
 35854 ;; This function uses a non-reentrant model
 35855 ;;
 35856                           
 35857                           	psect	text211
 35858  00A14E                     __ptext211:
 35859                           	opt callstack 0
 35860  00A14E                     i2_I2C2_SetBuffer:
 35861                           	opt callstack 7
 35862                           
 35863                           ; BSR set to: 2
 35864                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 35865                           
 35866                           ;incstack = 0
 35867  00A14E  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 35868  00A150  0012               	return	
 35869                           
 35870                           ; BSR set to: 2
 35871                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 35872  00A152  0060  F004  F21D   	movff	i2I2C2_SetBuffer@buffer,_I2C2_Status+29
 35873  00A158  0060  F008  F21E   	movff	i2I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 35874                           
 35875                           ; BSR set to: 2
 35876                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 35877  00A15E  0060  F00C  F21F   	movff	i2I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 35878  00A164  0060  F010  F220   	movff	i2I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 35879                           
 35880                           ; BSR set to: 2
 35881                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 35882  00A16A  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 35883                           
 35884                           ; BSR set to: 2
 35885  00A16C  0012               	return		;funcret
 35886  00A16E                     __end_ofi2_I2C2_SetBuffer:
 35887                           	opt callstack 0
 35888                           
 35889 ;; *************** function _I2C2_ClearInterruptFlags *****************
 35890 ;; Defined at:
 35891 ;;		line 364 in file "mcc_generated_files/i2c2_master.c"
 35892 ;; Parameters:    Size  Location     Type
 35893 ;;		None
 35894 ;; Auto vars:     Size  Location     Type
 35895 ;;		None
 35896 ;; Return value:  Size  Location     Type
 35897 ;;                  1    wreg      void 
 35898 ;; Registers used:
 35899 ;;		wreg, status,2, cstack
 35900 ;; Tracked objects:
 35901 ;;		On entry : 3F/0
 35902 ;;		On exit  : 3F/3D
 35903 ;;		Unchanged: 0/0
 35904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35909 ;;Total ram usage:        0 bytes
 35910 ;; Hardware stack levels used:    1
 35911 ;; Hardware stack levels required when called:    1
 35912 ;; This function calls:
 35913 ;;		_I2C2_MasterClearCountFlag
 35914 ;;		_I2C2_MasterClearNackFlag
 35915 ;;		_I2C2_MasterClearStopFlag
 35916 ;;		_I2C2_MasterIsCountFlagSet
 35917 ;;		_I2C2_MasterIsNackFlagSet
 35918 ;;		_I2C2_MasterIsStopFlagSet
 35919 ;; This function is called by:
 35920 ;;		_I2C2_MasterFsm
 35921 ;; This function uses a non-reentrant model
 35922 ;;
 35923                           
 35924                           	psect	text212
 35925  009C34                     __ptext212:
 35926                           	opt callstack 0
 35927  009C34                     _I2C2_ClearInterruptFlags:
 35928                           	opt callstack 9
 35929                           
 35930                           ; BSR set to: 0
 35931                           ;mcc_generated_files/i2c2_master.c: 366:     if(I2C2_MasterIsCountFlagSet())
 35932                           
 35933                           ; BSR set to: 2
 35934                           ;incstack = 0
 35935  009C34  EC40  F052         	call	_I2C2_MasterIsCountFlagSet	;wreg free
 35936  009C38  0900               	iorlw	0
 35937  009C3A  B4D8               	btfsc	status,2,c
 35938  009C3C  D003               	goto	i2l11973
 35939                           
 35940                           ; BSR set to: 61
 35941                           ;mcc_generated_files/i2c2_master.c: 367:     {;mcc_generated_files/i2c2_master.c: 368:  
      +                                 I2C2_MasterClearCountFlag();
 35942  009C3E  ECFB  F052         	call	_I2C2_MasterClearCountFlag	;wreg free
 35943                           
 35944                           ;mcc_generated_files/i2c2_master.c: 369:     }
 35945  009C42  0012               	return	
 35946  009C44                     i2l11973:
 35947                           
 35948                           ; BSR set to: 61
 35949  009C44  EC71  F052         	call	_I2C2_MasterIsStopFlagSet	;wreg free
 35950  009C48  0900               	iorlw	0
 35951  009C4A  B4D8               	btfsc	status,2,c
 35952  009C4C  D003               	goto	i2l11977
 35953                           
 35954                           ; BSR set to: 61
 35955                           ;mcc_generated_files/i2c2_master.c: 371:     {;mcc_generated_files/i2c2_master.c: 372:  
      +                                 I2C2_MasterClearStopFlag();
 35956  009C4E  ECF7  F052         	call	_I2C2_MasterClearStopFlag	;wreg free
 35957                           
 35958                           ;mcc_generated_files/i2c2_master.c: 373:     }
 35959  009C52  0012               	return	
 35960  009C54                     i2l11977:
 35961                           
 35962                           ; BSR set to: 61
 35963  009C54  EC77  F052         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 35964  009C58  0900               	iorlw	0
 35965  009C5A  B4D8               	btfsc	status,2,c
 35966  009C5C  0012               	return	
 35967                           
 35968                           ; BSR set to: 61
 35969                           ;mcc_generated_files/i2c2_master.c: 375:     {;mcc_generated_files/i2c2_master.c: 376:  
      +                                 I2C2_MasterClearNackFlag();
 35970  009C5E  ECF9  F052         	call	_I2C2_MasterClearNackFlag	;wreg free
 35971                           
 35972                           ; BSR set to: 61
 35973  009C62  0012               	return		;funcret
 35974  009C64                     __end_of_I2C2_ClearInterruptFlags:
 35975                           	opt callstack 0
 35976                           
 35977 ;; *************** function _I2C2_MasterIsStopFlagSet *****************
 35978 ;; Defined at:
 35979 ;;		line 746 in file "mcc_generated_files/i2c2_master.c"
 35980 ;; Parameters:    Size  Location     Type
 35981 ;;		None
 35982 ;; Auto vars:     Size  Location     Type
 35983 ;;		None
 35984 ;; Return value:  Size  Location     Type
 35985 ;;                  1    wreg      _Bool 
 35986 ;; Registers used:
 35987 ;;		wreg
 35988 ;; Tracked objects:
 35989 ;;		On entry : 3F/3D
 35990 ;;		On exit  : 3F/3D
 35991 ;;		Unchanged: 0/0
 35992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35997 ;;Total ram usage:        0 bytes
 35998 ;; Hardware stack levels used:    1
 35999 ;; This function calls:
 36000 ;;		Nothing
 36001 ;; This function is called by:
 36002 ;;		_I2C2_ClearInterruptFlags
 36003 ;; This function uses a non-reentrant model
 36004 ;;
 36005                           
 36006                           	psect	text213
 36007  00A4E2                     __ptext213:
 36008                           	opt callstack 0
 36009  00A4E2                     _I2C2_MasterIsStopFlagSet:
 36010                           	opt callstack 9
 36011                           
 36012                           ; BSR set to: 61
 36013                           ;mcc_generated_files/i2c2_master.c: 748:     return I2C2PIRbits.PCIF;
 36014                           
 36015                           ; BSR set to: 61
 36016                           ;incstack = 0
 36017  00A4E2  A563               	btfss	99,2,b	;volatile
 36018  00A4E4  D002               	goto	i2u1019_40
 36019  00A4E6  0E01               	movlw	1
 36020  00A4E8  0012               	return	
 36021  00A4EA                     i2u1019_40:
 36022  00A4EA  0E00               	movlw	0
 36023                           
 36024                           ; BSR set to: 61
 36025  00A4EC  0012               	return		;funcret
 36026  00A4EE                     __end_of_I2C2_MasterIsStopFlagSet:
 36027                           	opt callstack 0
 36028                           
 36029 ;; *************** function _I2C2_MasterIsNackFlagSet *****************
 36030 ;; Defined at:
 36031 ;;		line 756 in file "mcc_generated_files/i2c2_master.c"
 36032 ;; Parameters:    Size  Location     Type
 36033 ;;		None
 36034 ;; Auto vars:     Size  Location     Type
 36035 ;;		None
 36036 ;; Return value:  Size  Location     Type
 36037 ;;                  1    wreg      _Bool 
 36038 ;; Registers used:
 36039 ;;		wreg
 36040 ;; Tracked objects:
 36041 ;;		On entry : 3F/3D
 36042 ;;		On exit  : 3F/3D
 36043 ;;		Unchanged: 0/0
 36044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36049 ;;Total ram usage:        0 bytes
 36050 ;; Hardware stack levels used:    1
 36051 ;; This function calls:
 36052 ;;		Nothing
 36053 ;; This function is called by:
 36054 ;;		_I2C2_ClearInterruptFlags
 36055 ;; This function uses a non-reentrant model
 36056 ;;
 36057                           
 36058                           	psect	text214
 36059  00A4EE                     __ptext214:
 36060                           	opt callstack 0
 36061  00A4EE                     _I2C2_MasterIsNackFlagSet:
 36062                           	opt callstack 9
 36063                           
 36064                           ; BSR set to: 61
 36065                           ;mcc_generated_files/i2c2_master.c: 758:     return I2C2ERRbits.NACKIF;
 36066                           
 36067                           ; BSR set to: 61
 36068                           ;incstack = 0
 36069  00A4EE  A960               	btfss	96,4,b	;volatile
 36070  00A4F0  D002               	goto	i2u1020_40
 36071  00A4F2  0E01               	movlw	1
 36072  00A4F4  0012               	return	
 36073  00A4F6                     i2u1020_40:
 36074  00A4F6  0E00               	movlw	0
 36075                           
 36076                           ; BSR set to: 61
 36077  00A4F8  0012               	return		;funcret
 36078  00A4FA                     __end_of_I2C2_MasterIsNackFlagSet:
 36079                           	opt callstack 0
 36080                           
 36081 ;; *************** function _I2C2_MasterIsCountFlagSet *****************
 36082 ;; Defined at:
 36083 ;;		line 751 in file "mcc_generated_files/i2c2_master.c"
 36084 ;; Parameters:    Size  Location     Type
 36085 ;;		None
 36086 ;; Auto vars:     Size  Location     Type
 36087 ;;		None
 36088 ;; Return value:  Size  Location     Type
 36089 ;;                  1    wreg      _Bool 
 36090 ;; Registers used:
 36091 ;;		wreg
 36092 ;; Tracked objects:
 36093 ;;		On entry : 3F/0
 36094 ;;		On exit  : 3F/3D
 36095 ;;		Unchanged: 0/0
 36096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36101 ;;Total ram usage:        0 bytes
 36102 ;; Hardware stack levels used:    1
 36103 ;; This function calls:
 36104 ;;		Nothing
 36105 ;; This function is called by:
 36106 ;;		_I2C2_ClearInterruptFlags
 36107 ;; This function uses a non-reentrant model
 36108 ;;
 36109                           
 36110                           	psect	text215
 36111  00A480                     __ptext215:
 36112                           	opt callstack 0
 36113  00A480                     _I2C2_MasterIsCountFlagSet:
 36114                           	opt callstack 9
 36115                           
 36116                           ; BSR set to: 0
 36117                           ;mcc_generated_files/i2c2_master.c: 753:     return I2C2PIRbits.CNTIF;
 36118                           
 36119                           ; BSR set to: 61
 36120                           ;incstack = 0
 36121  00A480  013D               	movlb	61	; () banked
 36122  00A482  AF63               	btfss	99,7,b	;volatile
 36123  00A484  D002               	goto	i2u1018_40
 36124  00A486  0E01               	movlw	1
 36125  00A488  0012               	return	
 36126  00A48A                     i2u1018_40:
 36127  00A48A  0E00               	movlw	0
 36128                           
 36129                           ; BSR set to: 61
 36130  00A48C  0012               	return		;funcret
 36131  00A48E                     __end_of_I2C2_MasterIsCountFlagSet:
 36132                           	opt callstack 0
 36133                           
 36134 ;; *************** function _I2C2_MasterClearStopFlag *****************
 36135 ;; Defined at:
 36136 ;;		line 761 in file "mcc_generated_files/i2c2_master.c"
 36137 ;; Parameters:    Size  Location     Type
 36138 ;;		None
 36139 ;; Auto vars:     Size  Location     Type
 36140 ;;		None
 36141 ;; Return value:  Size  Location     Type
 36142 ;;                  1    wreg      void 
 36143 ;; Registers used:
 36144 ;;		None
 36145 ;; Tracked objects:
 36146 ;;		On entry : 3F/3D
 36147 ;;		On exit  : 3F/3D
 36148 ;;		Unchanged: 0/0
 36149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36154 ;;Total ram usage:        0 bytes
 36155 ;; Hardware stack levels used:    1
 36156 ;; This function calls:
 36157 ;;		Nothing
 36158 ;; This function is called by:
 36159 ;;		_I2C2_ClearInterruptFlags
 36160 ;; This function uses a non-reentrant model
 36161 ;;
 36162                           
 36163                           	psect	text216
 36164  00A5EE                     __ptext216:
 36165                           	opt callstack 0
 36166  00A5EE                     _I2C2_MasterClearStopFlag:
 36167                           	opt callstack 9
 36168                           
 36169                           ; BSR set to: 61
 36170                           ;mcc_generated_files/i2c2_master.c: 763:     I2C2PIRbits.PCIF = 0;
 36171                           
 36172                           ; BSR set to: 61
 36173                           ;incstack = 0
 36174  00A5EE  9563               	bcf	99,2,b	;volatile
 36175                           
 36176                           ; BSR set to: 61
 36177  00A5F0  0012               	return		;funcret
 36178  00A5F2                     __end_of_I2C2_MasterClearStopFlag:
 36179                           	opt callstack 0
 36180                           
 36181 ;; *************** function _I2C2_MasterClearNackFlag *****************
 36182 ;; Defined at:
 36183 ;;		line 771 in file "mcc_generated_files/i2c2_master.c"
 36184 ;; Parameters:    Size  Location     Type
 36185 ;;		None
 36186 ;; Auto vars:     Size  Location     Type
 36187 ;;		None
 36188 ;; Return value:  Size  Location     Type
 36189 ;;                  1    wreg      void 
 36190 ;; Registers used:
 36191 ;;		None
 36192 ;; Tracked objects:
 36193 ;;		On entry : 3F/3D
 36194 ;;		On exit  : 3F/3D
 36195 ;;		Unchanged: 0/0
 36196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36201 ;;Total ram usage:        0 bytes
 36202 ;; Hardware stack levels used:    1
 36203 ;; This function calls:
 36204 ;;		Nothing
 36205 ;; This function is called by:
 36206 ;;		_I2C2_ClearInterruptFlags
 36207 ;; This function uses a non-reentrant model
 36208 ;;
 36209                           
 36210                           	psect	text217
 36211  00A5F2                     __ptext217:
 36212                           	opt callstack 0
 36213  00A5F2                     _I2C2_MasterClearNackFlag:
 36214                           	opt callstack 9
 36215                           
 36216                           ; BSR set to: 61
 36217                           ;mcc_generated_files/i2c2_master.c: 773:     I2C2ERRbits.NACKIF = 0;
 36218                           
 36219                           ; BSR set to: 61
 36220                           ;incstack = 0
 36221  00A5F2  9960               	bcf	96,4,b	;volatile
 36222                           
 36223                           ; BSR set to: 61
 36224  00A5F4  0012               	return		;funcret
 36225  00A5F6                     __end_of_I2C2_MasterClearNackFlag:
 36226                           	opt callstack 0
 36227                           
 36228 ;; *************** function _I2C2_MasterClearCountFlag *****************
 36229 ;; Defined at:
 36230 ;;		line 766 in file "mcc_generated_files/i2c2_master.c"
 36231 ;; Parameters:    Size  Location     Type
 36232 ;;		None
 36233 ;; Auto vars:     Size  Location     Type
 36234 ;;		None
 36235 ;; Return value:  Size  Location     Type
 36236 ;;                  1    wreg      void 
 36237 ;; Registers used:
 36238 ;;		None
 36239 ;; Tracked objects:
 36240 ;;		On entry : 3F/3D
 36241 ;;		On exit  : 3F/3D
 36242 ;;		Unchanged: 0/0
 36243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36248 ;;Total ram usage:        0 bytes
 36249 ;; Hardware stack levels used:    1
 36250 ;; This function calls:
 36251 ;;		Nothing
 36252 ;; This function is called by:
 36253 ;;		_I2C2_ClearInterruptFlags
 36254 ;; This function uses a non-reentrant model
 36255 ;;
 36256                           
 36257                           	psect	text218
 36258  00A5F6                     __ptext218:
 36259                           	opt callstack 0
 36260  00A5F6                     _I2C2_MasterClearCountFlag:
 36261                           	opt callstack 9
 36262                           
 36263                           ; BSR set to: 61
 36264                           ;mcc_generated_files/i2c2_master.c: 768:     I2C2PIRbits.CNTIF = 0;
 36265                           
 36266                           ; BSR set to: 61
 36267                           ;incstack = 0
 36268  00A5F6  9F63               	bcf	99,7,b	;volatile
 36269                           
 36270                           ; BSR set to: 61
 36271  00A5F8  0012               	return		;funcret
 36272  00A5FA                     __end_of_I2C2_MasterClearCountFlag:
 36273                           	opt callstack 0
 36274                           
 36275 ;; *************** function _ADCC_ThresholdISR *****************
 36276 ;; Defined at:
 36277 ;;		line 307 in file "mcc_generated_files/adcc.c"
 36278 ;; Parameters:    Size  Location     Type
 36279 ;;		None
 36280 ;; Auto vars:     Size  Location     Type
 36281 ;;		None
 36282 ;; Return value:  Size  Location     Type
 36283 ;;                  1    wreg      void 
 36284 ;; Registers used:
 36285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36286 ;; Tracked objects:
 36287 ;;		On entry : 3F/39
 36288 ;;		On exit  : 0/0
 36289 ;;		Unchanged: 0/0
 36290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36295 ;;Total ram usage:        0 bytes
 36296 ;; Hardware stack levels used:    1
 36297 ;; Hardware stack levels required when called:   11
 36298 ;; This function calls:
 36299 ;;		Absolute function
 36300 ;;		_ADCC_DefaultInterruptHandler
 36301 ;;		_adcCaptureIsr
 36302 ;; This function is called by:
 36303 ;;		_INTERRUPT_InterruptManager
 36304 ;; This function uses a non-reentrant model
 36305 ;;
 36306                           
 36307                           	psect	text219
 36308  00A08C                     __ptext219:
 36309                           	opt callstack 0
 36310  00A08C                     _ADCC_ThresholdISR:
 36311                           	opt callstack 1
 36312                           
 36313                           ; BSR set to: 57
 36314                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADTIF = 0;
 36315                           
 36316                           ; BSR set to: 61
 36317                           ;incstack = 0
 36318  00A08C  97A1               	bcf	161,3,b	;volatile
 36319                           
 36320                           ; BSR set to: 57
 36321                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADTI_InterruptHandler)
 36322  00A08E  0102               	movlb	2	; () banked
 36323  00A090  51F8               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36324  00A092  11F9               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36325  00A094  B4D8               	btfsc	status,2,c
 36326  00A096  0012               	return	
 36327                           
 36328                           ; BSR set to: 2
 36329                           ;mcc_generated_files/adcc.c: 313:         ADCC_ADTI_InterruptHandler();
 36330  00A098  D801               	call	i2u2008_48
 36331  00A09A  0012               	return	
 36332  00A09C                     i2u2008_48:
 36333  00A09C  0005               	push	
 36334  00A09E  6EFA               	movwf	pclath,c
 36335  00A0A0  51F8               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36336  00A0A2  6EFD               	movwf	tosl,c
 36337  00A0A4  51F9               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36338  00A0A6  6EFE               	movwf	tosh,c
 36339  00A0A8  6AFF               	clrf	tosu,c
 36340  00A0AA  50FA               	movf	pclath,w,c
 36341  00A0AC  0012               	return		;indir
 36342  00A0AE                     __end_of_ADCC_ThresholdISR:
 36343                           	opt callstack 0
 36344                           
 36345 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 36346 ;; Defined at:
 36347 ;;		line 319 in file "mcc_generated_files/adcc.c"
 36348 ;; Parameters:    Size  Location     Type
 36349 ;;		None
 36350 ;; Auto vars:     Size  Location     Type
 36351 ;;		None
 36352 ;; Return value:  Size  Location     Type
 36353 ;;                  1    wreg      void 
 36354 ;; Registers used:
 36355 ;;		None
 36356 ;; Tracked objects:
 36357 ;;		On entry : 3F/2
 36358 ;;		On exit  : 3F/2
 36359 ;;		Unchanged: 3F/0
 36360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36365 ;;Total ram usage:        0 bytes
 36366 ;; Hardware stack levels used:    1
 36367 ;; This function calls:
 36368 ;;		Nothing
 36369 ;; This function is called by:
 36370 ;;		_ADCC_Initialize
 36371 ;;		_ADCC_ThresholdISR
 36372 ;; This function uses a non-reentrant model
 36373 ;;
 36374                           
 36375                           	psect	text220
 36376  00A602                     __ptext220:
 36377                           	opt callstack 0
 36378  00A602                     _ADCC_DefaultInterruptHandler:
 36379                           	opt callstack 11
 36380                           
 36381                           ; BSR set to: 2
 36382                           
 36383                           ;incstack = 0
 36384  00A602  0012               	return		;funcret
 36385  00A604                     __end_of_ADCC_DefaultInterruptHandler:
 36386                           	opt callstack 0
 36387                           
 36388 ;; *************** function _adcCaptureIsr *****************
 36389 ;; Defined at:
 36390 ;;		line 43 in file "aCapture.c"
 36391 ;; Parameters:    Size  Location     Type
 36392 ;;		None
 36393 ;; Auto vars:     Size  Location     Type
 36394 ;;  adcData         4   31[BANK0 ] unsigned long 
 36395 ;;  adcSel          1   35[BANK0 ] enum E16104
 36396 ;; Return value:  Size  Location     Type
 36397 ;;                  1    wreg      void 
 36398 ;; Registers used:
 36399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36400 ;; Tracked objects:
 36401 ;;		On entry : 3F/2
 36402 ;;		On exit  : 3D/0
 36403 ;;		Unchanged: 0/0
 36404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36406 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36407 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36408 ;;      Totals:         8       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36409 ;;Total ram usage:       13 bytes
 36410 ;; Hardware stack levels used:    1
 36411 ;; Hardware stack levels required when called:   10
 36412 ;; This function calls:
 36413 ;;		_ADCC_GetFilterValue
 36414 ;;		i2_ADCC_StartConversion
 36415 ;;		i2___lmul
 36416 ;;		i2_adcGetCh
 36417 ;;		i2_printf
 36418 ;; This function is called by:
 36419 ;;		_aCaptureInit
 36420 ;;		_ADCC_ThresholdISR
 36421 ;; This function uses a non-reentrant model
 36422 ;;
 36423                           
 36424                           	psect	text221
 36425  0058B4                     __ptext221:
 36426                           	opt callstack 0
 36427  0058B4                     _adcCaptureIsr:
 36428                           	opt callstack 1
 36429                           
 36430                           ; BSR set to: 2
 36431                           ;aCapture.c: 46:     uint32_t adcData;;aCapture.c: 47:     aSrcTyp adcSel;;aCapture.c: 4
      +                          9:     adcData = ADCC_GetFilterValue();
 36432                           
 36433                           ; BSR set to: 2
 36434                           ;incstack = 0
 36435  0058B4  EC34  F051         	call	_ADCC_GetFilterValue	;wreg free
 36436  0058B8  0060  F004  F07F   	movff	?_ADCC_GetFilterValue,adcCaptureIsr@adcData
 36437  0058BE  0060  F008  F080   	movff	?_ADCC_GetFilterValue+1,adcCaptureIsr@adcData+1
 36438  0058C4  0100               	movlb	0	; () banked
 36439  0058C6  6B81               	clrf	(adcCaptureIsr@adcData+2)& (0+255),b
 36440  0058C8  6B82               	clrf	(adcCaptureIsr@adcData+3)& (0+255),b
 36441                           
 36442                           ; BSR set to: 0
 36443                           ;aCapture.c: 51:     adcSel=curASrc;
 36444  0058CA  0060  F330  F083   	movff	_curASrc,adcCaptureIsr@adcSel
 36445                           
 36446                           ; BSR set to: 0
 36447                           ;aCapture.c: 54:     curASrc++;
 36448  0058D0  2BCC               	incf	_curASrc& (0+255),f,b
 36449                           
 36450                           ; BSR set to: 0
 36451                           ;aCapture.c: 55:     if (curASrc==3){
 36452  0058D2  0E03               	movlw	3
 36453  0058D4  19CC               	xorwf	_curASrc& (0+255),w,b
 36454  0058D6  A4D8               	btfss	status,2,c
 36455  0058D8  D002               	goto	i2l18815
 36456                           
 36457                           ; BSR set to: 0
 36458                           ;aCapture.c: 56:         curASrc=0;
 36459  0058DA  0E00               	movlw	0
 36460  0058DC  6FCC               	movwf	_curASrc& (0+255),b
 36461  0058DE                     i2l18815:
 36462                           
 36463                           ; BSR set to: 0
 36464                           ;aCapture.c: 58:     if (curASrc <= VolPSensor ){
 36465  0058DE  0E02               	movlw	2
 36466  0058E0  61CC               	cpfslt	_curASrc& (0+255),b
 36467  0058E2  D004               	goto	i2l1939
 36468                           
 36469                           ; BSR set to: 0
 36470                           ;aCapture.c: 59:         ADCON0bits.ADON = 0;
 36471  0058E4  013E               	movlb	62	; () banked
 36472  0058E6  9FF8               	bcf	248,7,b	;volatile
 36473                           
 36474                           ; BSR set to: 62
 36475                           ;aCapture.c: 61:         ADREF = 0x00;
 36476  0058E8  0E00               	movlw	0
 36477  0058EA  D003               	goto	L60
 36478  0058EC                     i2l1939:
 36479                           
 36480                           ; BSR set to: 0
 36481                           ;aCapture.c: 63:         ADCON0bits.ADON = 0;
 36482  0058EC  013E               	movlb	62	; () banked
 36483  0058EE  9FF8               	bcf	248,7,b	;volatile
 36484                           
 36485                           ; BSR set to: 62
 36486                           ;aCapture.c: 65:         ADREF = 0x03;
 36487  0058F0  0E03               	movlw	3
 36488  0058F2                     L60:
 36489  0058F2  6FFD               	movwf	253,b	;volatile
 36490                           
 36491                           ; BSR set to: 62
 36492                           ;aCapture.c: 67:     ADCC_StartConversion(adcGetCh(curASrc));
 36493  0058F4  0100               	movlb	0	; () banked
 36494  0058F6  51CC               	movf	_curASrc& (0+255),w,b
 36495  0058F8  ECDC  F048         	call	i2_adcGetCh
 36496  0058FC  ECCF  F051         	call	i2_ADCC_StartConversion
 36497                           
 36498                           ; BSR set to: 62
 36499                           ;aCapture.c: 70:     if (adcSel<3){
 36500  005900  0E03               	movlw	3
 36501  005902  0100               	movlb	0	; () banked
 36502  005904  6183               	cpfslt	adcCaptureIsr@adcSel& (0+255),b
 36503  005906  D164               	goto	i2l1941
 36504                           
 36505                           ; BSR set to: 0
 36506                           ;aCapture.c: 71:         resultTbl[adcSel]=adcData;
 36507  005908  5183               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 36508  00590A  0D04               	mullw	4
 36509  00590C  0E73               	movlw	low _resultTbl
 36510  00590E  24F3               	addwf	243,w,c
 36511  005910  6ED9               	movwf	fsr2l,c
 36512  005912  0E02               	movlw	high _resultTbl
 36513  005914  20F4               	addwfc	prodh,w,c
 36514  005916  6EDA               	movwf	fsr2h,c
 36515  005918  0060  F1FF  FFDE   	movff	adcCaptureIsr@adcData,postinc2
 36516  00591E  0060  F203  FFDE   	movff	adcCaptureIsr@adcData+1,postinc2
 36517  005924  0060  F207  FFDE   	movff	adcCaptureIsr@adcData+2,postinc2
 36518  00592A  0060  F20B  FFDE   	movff	adcCaptureIsr@adcData+3,postinc2
 36519                           
 36520                           ; BSR set to: 0
 36521                           ;aCapture.c: 73:         resultTblVal[adcSel]++;
 36522  005930  0E24               	movlw	low _resultTblVal
 36523  005932  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36524  005934  6ED9               	movwf	fsr2l,c
 36525  005936  6ADA               	clrf	fsr2h,c
 36526  005938  0E02               	movlw	high _resultTblVal
 36527  00593A  22DA               	addwfc	fsr2h,f,c
 36528  00593C  2ADF               	incf	indf2,f,c
 36529                           
 36530                           ; BSR set to: 0
 36531                           ;aCapture.c: 74:         if (resultTblVal[adcSel]==0){
 36532  00593E  0E24               	movlw	low _resultTblVal
 36533  005940  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36534  005942  6ED9               	movwf	fsr2l,c
 36535  005944  6ADA               	clrf	fsr2h,c
 36536  005946  0E02               	movlw	high _resultTblVal
 36537  005948  22DA               	addwfc	fsr2h,f,c
 36538  00594A  50DF               	movf	indf2,w,c
 36539  00594C  A4D8               	btfss	status,2,c
 36540  00594E  D008               	goto	i2l18835
 36541                           
 36542                           ; BSR set to: 0
 36543                           ;aCapture.c: 75:             resultTblVal[adcSel]=1;
 36544  005950  0E24               	movlw	low _resultTblVal
 36545  005952  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36546  005954  6ED9               	movwf	fsr2l,c
 36547  005956  6ADA               	clrf	fsr2h,c
 36548  005958  0E02               	movlw	high _resultTblVal
 36549  00595A  22DA               	addwfc	fsr2h,f,c
 36550  00595C  0E01               	movlw	1
 36551  00595E  6EDF               	movwf	indf2,c
 36552  005960                     i2l18835:
 36553                           
 36554                           ; BSR set to: 0
 36555                           ;aCapture.c: 78:         if (adcSel == MainPSensor) {
 36556  005960  5183               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 36557  005962  A4D8               	btfss	status,2,c
 36558  005964  0012               	return	
 36559                           
 36560                           ; BSR set to: 0
 36561                           ;aCapture.c: 81:             resultTbl[Flt0PSensor]=(3*resultTbl[Flt0PSensor]+(adcData<<
      +                          2))>>2;
 36562  005966  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36563  00596C  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36564  005972  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36565  005978  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36566  00597E  0E02               	movlw	2
 36567  005980                     i2u1950_45:
 36568  005980  90D8               	bcf	status,0,c
 36569  005982  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36570  005984  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36571  005986  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36572  005988  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36573  00598A  2EE8               	decfsz	wreg,f,c
 36574  00598C  D7F9               	goto	i2u1950_45
 36575  00598E  0060  F9FC  F001   	movff	_resultTbl+12,i2___lmul@multiplier
 36576  005994  0060  FA00  F002   	movff	_resultTbl+13,i2___lmul@multiplier+1
 36577  00599A  0060  FA04  F003   	movff	_resultTbl+14,i2___lmul@multiplier+2
 36578  0059A0  0060  FA08  F004   	movff	_resultTbl+15,i2___lmul@multiplier+3
 36579  0059A6  0E03               	movlw	3
 36580  0059A8  6E05               	movwf	i2___lmul@multiplicand^0,c
 36581  0059AA  0E00               	movlw	0
 36582  0059AC  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36583  0059AE  0E00               	movlw	0
 36584  0059B0  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36585  0059B2  0E00               	movlw	0
 36586  0059B4  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36587  0059B6  ECF5  F046         	call	i2___lmul	;wreg free
 36588  0059BA  5057               	movf	??_adcCaptureIsr^0,w,c
 36589  0059BC  2401               	addwf	?i2___lmul^0,w,c
 36590  0059BE  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36591  0059C0  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36592  0059C2  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36593  0059C4  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36594  0059C6  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36595  0059C8  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36596  0059CA  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36597  0059CC  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36598  0059CE  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36599  0059D0  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36600  0059D2  0E03               	movlw	3
 36601  0059D4  D005               	goto	i2u1951_40
 36602  0059D6                     i2u1951_45:
 36603  0059D6  90D8               	bcf	status,0,c
 36604  0059D8  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36605  0059DA  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36606  0059DC  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36607  0059DE  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36608  0059E0                     i2u1951_40:
 36609  0059E0  2EE8               	decfsz	wreg,f,c
 36610  0059E2  D7F9               	goto	i2u1951_45
 36611  0059E4  0060  F16C  F27F   	movff	??_adcCaptureIsr+4,_resultTbl+12
 36612  0059EA  0060  F170  F280   	movff	??_adcCaptureIsr+5,_resultTbl+13
 36613  0059F0  0060  F174  F281   	movff	??_adcCaptureIsr+6,_resultTbl+14
 36614  0059F6  0060  F178  F282   	movff	??_adcCaptureIsr+7,_resultTbl+15
 36615                           
 36616                           ;aCapture.c: 83:             resultTbl[Flt1PSensor]=(15*resultTbl[Flt1PSensor]+(adcData<
      +                          <4))>>4;
 36617  0059FC  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36618  005A02  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36619  005A08  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36620  005A0E  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36621  005A14  0E04               	movlw	4
 36622  005A16                     i2u1952_45:
 36623  005A16  90D8               	bcf	status,0,c
 36624  005A18  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36625  005A1A  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36626  005A1C  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36627  005A1E  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36628  005A20  2EE8               	decfsz	wreg,f,c
 36629  005A22  D7F9               	goto	i2u1952_45
 36630  005A24  0060  FA0C  F001   	movff	_resultTbl+16,i2___lmul@multiplier
 36631  005A2A  0060  FA10  F002   	movff	_resultTbl+17,i2___lmul@multiplier+1
 36632  005A30  0060  FA14  F003   	movff	_resultTbl+18,i2___lmul@multiplier+2
 36633  005A36  0060  FA18  F004   	movff	_resultTbl+19,i2___lmul@multiplier+3
 36634  005A3C  0E0F               	movlw	15
 36635  005A3E  6E05               	movwf	i2___lmul@multiplicand^0,c
 36636  005A40  0E00               	movlw	0
 36637  005A42  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36638  005A44  0E00               	movlw	0
 36639  005A46  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36640  005A48  0E00               	movlw	0
 36641  005A4A  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36642  005A4C  ECF5  F046         	call	i2___lmul	;wreg free
 36643  005A50  5057               	movf	??_adcCaptureIsr^0,w,c
 36644  005A52  2401               	addwf	?i2___lmul^0,w,c
 36645  005A54  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36646  005A56  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36647  005A58  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36648  005A5A  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36649  005A5C  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36650  005A5E  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36651  005A60  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36652  005A62  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36653  005A64  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36654  005A66  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36655  005A68  0E05               	movlw	5
 36656  005A6A  D005               	goto	i2u1953_40
 36657  005A6C                     i2u1953_45:
 36658  005A6C  90D8               	bcf	status,0,c
 36659  005A6E  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36660  005A70  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36661  005A72  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36662  005A74  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36663  005A76                     i2u1953_40:
 36664  005A76  2EE8               	decfsz	wreg,f,c
 36665  005A78  D7F9               	goto	i2u1953_45
 36666  005A7A  0060  F16C  F283   	movff	??_adcCaptureIsr+4,_resultTbl+16
 36667  005A80  0060  F170  F284   	movff	??_adcCaptureIsr+5,_resultTbl+17
 36668  005A86  0060  F174  F285   	movff	??_adcCaptureIsr+6,_resultTbl+18
 36669  005A8C  0060  F178  F286   	movff	??_adcCaptureIsr+7,_resultTbl+19
 36670                           
 36671                           ;aCapture.c: 85:             resultTbl[Flt2PSensor]=(63*resultTbl[Flt2PSensor]+(adcData<
      +                          <6))>>6;
 36672  005A92  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36673  005A98  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36674  005A9E  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36675  005AA4  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36676  005AAA  0E06               	movlw	6
 36677  005AAC                     i2u1954_45:
 36678  005AAC  90D8               	bcf	status,0,c
 36679  005AAE  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36680  005AB0  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36681  005AB2  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36682  005AB4  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36683  005AB6  2EE8               	decfsz	wreg,f,c
 36684  005AB8  D7F9               	goto	i2u1954_45
 36685  005ABA  0060  FA1C  F001   	movff	_resultTbl+20,i2___lmul@multiplier
 36686  005AC0  0060  FA20  F002   	movff	_resultTbl+21,i2___lmul@multiplier+1
 36687  005AC6  0060  FA24  F003   	movff	_resultTbl+22,i2___lmul@multiplier+2
 36688  005ACC  0060  FA28  F004   	movff	_resultTbl+23,i2___lmul@multiplier+3
 36689  005AD2  0E3F               	movlw	63
 36690  005AD4  6E05               	movwf	i2___lmul@multiplicand^0,c
 36691  005AD6  0E00               	movlw	0
 36692  005AD8  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36693  005ADA  0E00               	movlw	0
 36694  005ADC  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36695  005ADE  0E00               	movlw	0
 36696  005AE0  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36697  005AE2  ECF5  F046         	call	i2___lmul	;wreg free
 36698  005AE6  5057               	movf	??_adcCaptureIsr^0,w,c
 36699  005AE8  2401               	addwf	?i2___lmul^0,w,c
 36700  005AEA  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36701  005AEC  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36702  005AEE  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36703  005AF0  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36704  005AF2  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36705  005AF4  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36706  005AF6  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36707  005AF8  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36708  005AFA  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36709  005AFC  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36710  005AFE  0E07               	movlw	7
 36711  005B00  D005               	goto	i2u1955_40
 36712  005B02                     i2u1955_45:
 36713  005B02  90D8               	bcf	status,0,c
 36714  005B04  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36715  005B06  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36716  005B08  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36717  005B0A  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36718  005B0C                     i2u1955_40:
 36719  005B0C  2EE8               	decfsz	wreg,f,c
 36720  005B0E  D7F9               	goto	i2u1955_45
 36721  005B10  0060  F16C  F287   	movff	??_adcCaptureIsr+4,_resultTbl+20
 36722  005B16  0060  F170  F288   	movff	??_adcCaptureIsr+5,_resultTbl+21
 36723  005B1C  0060  F174  F289   	movff	??_adcCaptureIsr+6,_resultTbl+22
 36724  005B22  0060  F178  F28A   	movff	??_adcCaptureIsr+7,_resultTbl+23
 36725                           
 36726                           ;aCapture.c: 87:             resultTbl[Flt3PSensor]=(511*resultTbl[Flt3PSensor]+(adcData
      +                          <<9))>>9;
 36727  005B28  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36728  005B2E  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36729  005B34  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36730  005B3A  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36731  005B40  0E09               	movlw	9
 36732  005B42                     i2u1956_45:
 36733  005B42  90D8               	bcf	status,0,c
 36734  005B44  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36735  005B46  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36736  005B48  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36737  005B4A  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36738  005B4C  2EE8               	decfsz	wreg,f,c
 36739  005B4E  D7F9               	goto	i2u1956_45
 36740  005B50  0060  FA2C  F001   	movff	_resultTbl+24,i2___lmul@multiplier
 36741  005B56  0060  FA30  F002   	movff	_resultTbl+25,i2___lmul@multiplier+1
 36742  005B5C  0060  FA34  F003   	movff	_resultTbl+26,i2___lmul@multiplier+2
 36743  005B62  0060  FA38  F004   	movff	_resultTbl+27,i2___lmul@multiplier+3
 36744  005B68  0EFF               	movlw	255
 36745  005B6A  6E05               	movwf	i2___lmul@multiplicand^0,c
 36746  005B6C  0E01               	movlw	1
 36747  005B6E  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36748  005B70  0E00               	movlw	0
 36749  005B72  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36750  005B74  0E00               	movlw	0
 36751  005B76  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36752  005B78  ECF5  F046         	call	i2___lmul	;wreg free
 36753  005B7C  5057               	movf	??_adcCaptureIsr^0,w,c
 36754  005B7E  2401               	addwf	?i2___lmul^0,w,c
 36755  005B80  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36756  005B82  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36757  005B84  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36758  005B86  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36759  005B88  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36760  005B8A  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36761  005B8C  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36762  005B8E  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36763  005B90  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36764  005B92  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36765  005B94  0E0A               	movlw	10
 36766  005B96  D005               	goto	i2u1957_40
 36767  005B98                     i2u1957_45:
 36768  005B98  90D8               	bcf	status,0,c
 36769  005B9A  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36770  005B9C  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36771  005B9E  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36772  005BA0  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36773  005BA2                     i2u1957_40:
 36774  005BA2  2EE8               	decfsz	wreg,f,c
 36775  005BA4  D7F9               	goto	i2u1957_45
 36776  005BA6  0060  F16C  F28B   	movff	??_adcCaptureIsr+4,_resultTbl+24
 36777  005BAC  0060  F170  F28C   	movff	??_adcCaptureIsr+5,_resultTbl+25
 36778  005BB2  0060  F174  F28D   	movff	??_adcCaptureIsr+6,_resultTbl+26
 36779  005BB8  0060  F178  F28E   	movff	??_adcCaptureIsr+7,_resultTbl+27
 36780                           
 36781                           ; BSR set to: 0
 36782                           ;aCapture.c: 89:             resultTblVal[Flt0PSensor]=resultTblVal[MainPSensor];
 36783  005BBE  C224  F227         	movff	_resultTblVal,_resultTblVal+3
 36784                           
 36785                           ; BSR set to: 0
 36786                           ;aCapture.c: 90:             resultTblVal[Flt1PSensor]=resultTblVal[MainPSensor];
 36787  005BC2  C224  F228         	movff	_resultTblVal,_resultTblVal+4
 36788                           
 36789                           ; BSR set to: 0
 36790                           ;aCapture.c: 91:             resultTblVal[Flt2PSensor]=resultTblVal[MainPSensor];
 36791  005BC6  C224  F229         	movff	_resultTblVal,_resultTblVal+5
 36792                           
 36793                           ; BSR set to: 0
 36794                           ;aCapture.c: 92:             resultTblVal[Flt3PSensor]=resultTblVal[MainPSensor];
 36795  005BCA  C224  F22A         	movff	_resultTblVal,_resultTblVal+6
 36796  005BCE  0012               	return	
 36797  005BD0                     i2l1941:
 36798                           
 36799                           ; BSR set to: 0
 36800                           ;aCapture.c: 96:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;printf
      +                          ("Fatal %d",101);
 36801  005BD0  94BA               	bcf	186,2,c	;volatile
 36802  005BD2  96BC               	bcf	188,3,c	;volatile
 36803  005BD4  96BA               	bcf	186,3,c	;volatile
 36804                           
 36805                           ; BSR set to: 0
 36806  005BD6  0EB1               	movlw	low STR_28
 36807  005BD8  6F7B               	movwf	i2printf@fmt& (0+255),b
 36808  005BDA  0EFF               	movlw	high STR_28
 36809  005BDC  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 36810  005BDE  0E00               	movlw	0
 36811  005BE0  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 36812  005BE2  0E65               	movlw	101
 36813  005BE4  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 36814  005BE6  EC87  F04F         	call	i2_printf	;wreg free
 36815  005BEA  0012               	return		;funcret
 36816  005BEC                     __end_of_adcCaptureIsr:
 36817                           	opt callstack 0
 36818                           
 36819 ;; *************** function i2_adcGetCh *****************
 36820 ;; Defined at:
 36821 ;;		line 25 in file "aCapture.c"
 36822 ;; Parameters:    Size  Location     Type
 36823 ;;  sel             1    wreg     enum E16104
 36824 ;; Auto vars:     Size  Location     Type
 36825 ;;  sel             1   85[COMRAM] enum E16104
 36826 ;; Return value:  Size  Location     Type
 36827 ;;                  1    wreg      enum E16053
 36828 ;; Registers used:
 36829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36830 ;; Tracked objects:
 36831 ;;		On entry : 3F/0
 36832 ;;		On exit  : 0/0
 36833 ;;		Unchanged: 0/0
 36834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36838 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36839 ;;Total ram usage:        3 bytes
 36840 ;; Hardware stack levels used:    1
 36841 ;; Hardware stack levels required when called:    9
 36842 ;; This function calls:
 36843 ;;		i2_printf
 36844 ;; This function is called by:
 36845 ;;		_adcCaptureIsr
 36846 ;; This function uses a non-reentrant model
 36847 ;;
 36848                           
 36849                           	psect	text222
 36850  0091B8                     __ptext222:
 36851                           	opt callstack 0
 36852  0091B8                     i2_adcGetCh:
 36853                           	opt callstack 1
 36854                           
 36855                           ;incstack = 0
 36856                           ;i2adcGetCh@sel stored from wreg
 36857  0091B8  6E56               	movwf	i2adcGetCh@sel^0,c
 36858                           
 36859                           ;aCapture.c: 26:     switch (sel){
 36860  0091BA  D016               	goto	i2l18293
 36861  0091BC                     i2l18267:
 36862                           
 36863                           ;aCapture.c: 28:             return channel_ANE1;
 36864  0091BC  0E21               	movlw	33
 36865  0091BE  0012               	return	
 36866  0091C0                     i2l18273:
 36867                           
 36868                           ;aCapture.c: 31:             return channel_ANE2;
 36869  0091C0  0E22               	movlw	34
 36870  0091C2  0012               	return	
 36871  0091C4                     i2l18279:
 36872                           
 36873                           ;aCapture.c: 34:             return channel_ANE0;
 36874  0091C4  0E20               	movlw	32
 36875  0091C6  0012               	return	
 36876  0091C8                     i2l1935:
 36877                           
 36878                           ;aCapture.c: 38:            LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pri
      +                          ntf("Fatal %d",100);
 36879  0091C8  94BA               	bcf	186,2,c	;volatile
 36880  0091CA  96BC               	bcf	188,3,c	;volatile
 36881  0091CC  96BA               	bcf	186,3,c	;volatile
 36882  0091CE  0EB1               	movlw	low STR_28
 36883  0091D0  0100               	movlb	0	; () banked
 36884  0091D2  6F7B               	movwf	i2printf@fmt& (0+255),b
 36885  0091D4  0EFF               	movlw	high STR_28
 36886  0091D6  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 36887  0091D8  0E00               	movlw	0
 36888  0091DA  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 36889  0091DC  0E64               	movlw	100
 36890  0091DE  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 36891  0091E0  EC87  F04F         	call	i2_printf	;wreg free
 36892                           
 36893                           ; BSR set to: 2
 36894                           ;aCapture.c: 39:            return -1;
 36895  0091E4  0EFF               	movlw	255
 36896  0091E6  0012               	return	
 36897  0091E8                     i2l18293:
 36898  0091E8  5056               	movf	i2adcGetCh@sel^0,w,c
 36899  0091EA  6E54               	movwf	??i2_adcGetCh^0,c
 36900  0091EC  6A55               	clrf	(??i2_adcGetCh+1)^0,c
 36901                           
 36902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36903                           ; Switch size 1, requested type "simple"
 36904                           ; Number of cases is 1, Range of values is 0 to 0
 36905                           ; switch strategies available:
 36906                           ; Name         Instructions Cycles
 36907                           ; simple_byte            4     3 (average)
 36908                           ;	Chosen strategy is simple_byte
 36909  0091EE  5055               	movf	(??i2_adcGetCh+1)^0,w,c
 36910  0091F0  0A00               	xorlw	0	; case 0
 36911  0091F2  A4D8               	btfss	status,2,c
 36912  0091F4  D7E9               	goto	i2l1935
 36913                           
 36914                           ; Switch size 1, requested type "simple"
 36915                           ; Number of cases is 3, Range of values is 0 to 2
 36916                           ; switch strategies available:
 36917                           ; Name         Instructions Cycles
 36918                           ; simple_byte           10     6 (average)
 36919                           ;	Chosen strategy is simple_byte
 36920  0091F6  5054               	movf	??i2_adcGetCh^0,w,c
 36921  0091F8  0A00               	xorlw	0	; case 0
 36922  0091FA  B4D8               	btfsc	status,2,c
 36923  0091FC  D7DF               	goto	i2l18267
 36924  0091FE  0A01               	xorlw	1	; case 1
 36925  009200  B4D8               	btfsc	status,2,c
 36926  009202  D7DE               	goto	i2l18273
 36927  009204  0A03               	xorlw	3	; case 2
 36928  009206  B4D8               	btfsc	status,2,c
 36929  009208  D7DD               	goto	i2l18279
 36930  00920A  D7DE               	goto	i2l1935
 36931  00920C                     __end_ofi2_adcGetCh:
 36932                           	opt callstack 0
 36933                           
 36934 ;; *************** function i2_printf *****************
 36935 ;; Defined at:
 36936 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 36937 ;; Parameters:    Size  Location     Type
 36938 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 36939 ;;		 -> STR_104(10), STR_101(10), STR_100(8), STR_97(10), 
 36940 ;;		 -> STR_96(8), STR_93(10), STR_92(6), STR_90(7), 
 36941 ;;		 -> STR_85(27), STR_84(9), STR_82(10), STR_72(10), 
 36942 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 36943 ;;		 -> STR_65(38), STR_63(9), STR_62(9), STR_61(8), 
 36944 ;;		 -> STR_34(9), STR_33(9), STR_32(9), STR_31(9), 
 36945 ;;		 -> STR_30(9), STR_29(9), STR_28(9), STR_27(49), 
 36946 ;;		 -> STR_26(20), STR_25(36), STR_24(27), STR_23(20), 
 36947 ;;		 -> STR_22(28), STR_21(5), STR_19(16), STR_18(14), 
 36948 ;;		 -> STR_17(33), STR_16(20), STR_15(74), STR_14(40), 
 36949 ;;		 -> STR_13(47), STR_12(7), STR_11(7), STR_10(55), 
 36950 ;;		 -> STR_4(20), STR_3(11), STR_1(27), 
 36951 ;; Auto vars:     Size  Location     Type
 36952 ;;  printf          2   81[COMRAM] PTR void [1]
 36953 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 36954 ;;  printf          2    0        int 
 36955 ;; Return value:  Size  Location     Type
 36956 ;;                  2   27[BANK0 ] int 
 36957 ;; Registers used:
 36958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36959 ;; Tracked objects:
 36960 ;;		On entry : 3F/0
 36961 ;;		On exit  : 3F/2
 36962 ;;		Unchanged: 0/0
 36963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36967 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36968 ;;Total ram usage:        8 bytes
 36969 ;; Hardware stack levels used:    1
 36970 ;; Hardware stack levels required when called:    8
 36971 ;; This function calls:
 36972 ;;		i2_vfprintf
 36973 ;; This function is called by:
 36974 ;;		_adcCaptureIsr
 36975 ;;		i2_adcGetCh
 36976 ;;		i2_aCaptGetResult
 36977 ;;		i2_I2C2_NackCb
 36978 ;; This function uses a non-reentrant model
 36979 ;;
 36980                           
 36981                           	psect	text223
 36982  009F0E                     __ptext223:
 36983                           	opt callstack 0
 36984  009F0E                     i2_printf:
 36985                           	opt callstack 1
 36986                           
 36987                           ; BSR set to: 0
 36988                           
 36989                           ;incstack = 0
 36990  009F0E  0E7D               	movlw	low (?i2_printf+2)
 36991  009F10  6E52               	movwf	i2printf@ap^0,c
 36992  009F12  6A53               	clrf	(i2printf@ap+1)^0,c
 36993                           
 36994                           ; BSR set to: 0
 36995  009F14  0E00               	movlw	0
 36996  009F16  6F75               	movwf	i2vfprintf@fp& (0+255),b
 36997  009F18  0E00               	movlw	0
 36998  009F1A  6F76               	movwf	(i2vfprintf@fp+1)& (0+255),b
 36999  009F1C  0060  F1EC  F077   	movff	i2printf@fmt,i2vfprintf@fmt
 37000  009F22  0060  F1F0  F078   	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 37001  009F28  0E52               	movlw	low i2printf@ap
 37002  009F2A  6F79               	movwf	i2vfprintf@ap& (0+255),b
 37003  009F2C  6B7A               	clrf	(i2vfprintf@ap+1)& (0+255),b
 37004  009F2E  EC9C  F045         	call	i2_vfprintf	;wreg free
 37005                           
 37006                           ; BSR set to: 2
 37007  009F32  0012               	return		;funcret
 37008  009F34                     __end_ofi2_printf:
 37009                           	opt callstack 0
 37010                           
 37011 ;; *************** function i2_vfprintf *****************
 37012 ;; Defined at:
 37013 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 37014 ;; Parameters:    Size  Location     Type
 37015 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
 37016 ;;		 -> sprintf@f(6), NULL(0), 
 37017 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
 37018 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 37019 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 37020 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 37021 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 37022 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 37023 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 37024 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 37025 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 37026 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 37027 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 37028 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 37029 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 37030 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 37031 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 37032 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 37033 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 37034 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 37035 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 37036 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 37037 ;;		 -> STR_1(27), 
 37038 ;;  ap              2   25[BANK0 ] PTR PTR void 
 37039 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 37040 ;; Auto vars:     Size  Location     Type
 37041 ;;  vfprintf        2   77[COMRAM] PTR unsigned char 
 37042 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 37043 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 37044 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 37045 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 37046 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 37047 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 37048 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 37049 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 37050 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 37051 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 37052 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 37053 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 37054 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 37055 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 37056 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 37057 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 37058 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 37059 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 37060 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 37061 ;;		 -> STR_1(27), 
 37062 ;; Return value:  Size  Location     Type
 37063 ;;                  2   21[BANK0 ] int 
 37064 ;; Registers used:
 37065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37066 ;; Tracked objects:
 37067 ;;		On entry : 3F/0
 37068 ;;		On exit  : 3F/2
 37069 ;;		Unchanged: 0/0
 37070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37071 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37074 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37075 ;;Total ram usage:        8 bytes
 37076 ;; Hardware stack levels used:    1
 37077 ;; Hardware stack levels required when called:    7
 37078 ;; This function calls:
 37079 ;;		i2_vfpfcnvrt
 37080 ;; This function is called by:
 37081 ;;		i2_printf
 37082 ;; This function uses a non-reentrant model
 37083 ;;
 37084                           
 37085                           	psect	text224
 37086  008B38                     __ptext224:
 37087                           	opt callstack 0
 37088  008B38                     i2_vfprintf:
 37089                           	opt callstack 1
 37090                           
 37091                           ; BSR set to: 0
 37092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 37093                           
 37094                           ; BSR set to: 2
 37095                           ;incstack = 0
 37096  008B38  0060  F1DC  F04E   	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 37097  008B3E  0060  F1E0  F04F   	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 37098                           
 37099                           ; BSR set to: 0
 37100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 37101  008B44  0E00               	movlw	0
 37102  008B46  0102               	movlb	2	; () banked
 37103  008B48  6F33               	movwf	(_nout+1)& (0+255),b
 37104  008B4A  0E00               	movlw	0
 37105  008B4C  6F32               	movwf	_nout& (0+255),b
 37106                           
 37107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 37108  008B4E  D015               	goto	i2l17103
 37109  008B50                     i2l17101:
 37110                           
 37111                           ; BSR set to: 2
 37112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 37113  008B50  0060  F1D4  F045   	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 37114  008B56  0060  F1D8  F046   	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 37115  008B5C  0E4E               	movlw	low i2vfprintf@cfmt
 37116  008B5E  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 37117  008B60  0060  F1E4  F048   	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 37118  008B66  0060  F1E8  F049   	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 37119  008B6C  ECE3  F024         	call	i2_vfpfcnvrt	;wreg free
 37120  008B70  5045               	movf	?i2_vfpfcnvrt^0,w,c
 37121  008B72  0102               	movlb	2	; () banked
 37122  008B74  2732               	addwf	_nout& (0+255),f,b
 37123  008B76  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 37124  008B78  2333               	addwfc	(_nout+1)& (0+255),f,b
 37125  008B7A                     i2l17103:
 37126                           
 37127                           ; BSR set to: 2
 37128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 37129  008B7A  0060  F13B  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 37130  008B80  0060  F13F  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 37131  008B86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37132  008B86  6AF8               	clrf	tblptru,c
 37133  008B88                     	endif
 37134  008B88                     	if	0	;tblptru may be non-zero
 37135  008B88                     	endif
 37136  008B88  0008               	tblrd		*
 37137  008B8A  50F5               	movf	tablat,w,c
 37138  008B8C  0900               	iorlw	0
 37139  008B8E  A4D8               	btfss	status,2,c
 37140  008B90  D7DF               	goto	i2l17101
 37141                           
 37142                           ; BSR set to: 2
 37143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 37144  008B92  0060  F8C8  F075   	movff	_nout,?i2_vfprintf
 37145  008B98  0060  F8CC  F076   	movff	_nout+1,?i2_vfprintf+1
 37146                           
 37147                           ; BSR set to: 2
 37148  008B9E  0012               	return		;funcret
 37149  008BA0                     __end_ofi2_vfprintf:
 37150                           	opt callstack 0
 37151                           
 37152 ;; *************** function i2_vfpfcnvrt *****************
 37153 ;; Defined at:
 37154 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 37155 ;; Parameters:    Size  Location     Type
 37156 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 37157 ;;		 -> sprintf@f(6), NULL(0), 
 37158 ;;  fmt             1   70[COMRAM] PTR PTR unsigned char 
 37159 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 37160 ;;  ap              2   71[COMRAM] PTR PTR void 
 37161 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 37162 ;; Auto vars:     Size  Location     Type
 37163 ;;  vfpfcnvrt       8    8[BANK0 ] unsigned long long 
 37164 ;;  vfpfcnvrt       8    0[BANK0 ] long long 
 37165 ;;  vfpfcnvrt       4    0        long long 
 37166 ;;  vfpfcnvrt       3    0        PTR void 
 37167 ;;  vfpfcnvrt       3    0        unsigned char [3]
 37168 ;;  vfpfcnvrt       3    0        PTR unsigned char 
 37169 ;;  vfpfcnvrt       2   17[BANK0 ] int 
 37170 ;;  vfpfcnvrt       2    0        int 
 37171 ;;  vfpfcnvrt       1   16[BANK0 ] unsigned char 
 37172 ;; Return value:  Size  Location     Type
 37173 ;;                  2   68[COMRAM] int 
 37174 ;; Registers used:
 37175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37176 ;; Tracked objects:
 37177 ;;		On entry : 3D/2
 37178 ;;		On exit  : 0/0
 37179 ;;		Unchanged: 0/0
 37180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37181 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37182 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37184 ;;      Totals:         9      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37185 ;;Total ram usage:       30 bytes
 37186 ;; Hardware stack levels used:    1
 37187 ;; Hardware stack levels required when called:    6
 37188 ;; This function calls:
 37189 ;;		i2_atoi
 37190 ;;		i2_dtoa
 37191 ;;		i2_fputc
 37192 ;;		i2_isdigit
 37193 ;;		i2_xtoa
 37194 ;; This function is called by:
 37195 ;;		i2_vfprintf
 37196 ;; This function uses a non-reentrant model
 37197 ;;
 37198                           
 37199                           	psect	text225
 37200  0049C6                     __ptext225:
 37201                           	opt callstack 0
 37202  0049C6                     i2_vfpfcnvrt:
 37203                           	opt callstack 1
 37204                           
 37205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 37206                           
 37207                           ; BSR set to: 2
 37208                           ;incstack = 0
 37209  0049C6  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37210  0049C8  6ED9               	movwf	fsr2l,c
 37211  0049CA  6ADA               	clrf	fsr2h,c
 37212  0049CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 37213  0049D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 37214  0049D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37215  0049D8  6AF8               	clrf	tblptru,c
 37216  0049DA                     	endif
 37217  0049DA                     	if	0	;tblptru may be non-zero
 37218  0049DA                     	endif
 37219  0049DA  0008               	tblrd		*
 37220  0049DC  50F5               	movf	tablat,w,c
 37221  0049DE  0A25               	xorlw	37
 37222  0049E0  A4D8               	btfss	status,2,c
 37223  0049E2  D1EF               	goto	i2l17063
 37224                           
 37225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 37226  0049E4  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37227  0049E6  6ED9               	movwf	fsr2l,c
 37228  0049E8  6ADA               	clrf	fsr2h,c
 37229  0049EA  2ADE               	incf	postinc2,f,c
 37230  0049EC  0E00               	movlw	0
 37231  0049EE  22DD               	addwfc	postdec2,f,c
 37232                           
 37233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 37234  0049F0  0E00               	movlw	0
 37235  0049F2  0100               	movlb	0	; () banked
 37236  0049F4  6FB3               	movwf	(_width+1)& (0+255),b
 37237  0049F6  0E00               	movlw	0
 37238  0049F8  6FB2               	movwf	_width& (0+255),b
 37239  0049FA  C0B2  F0B6         	movff	_width,_flags
 37240  0049FE  C0B3  F0B7         	movff	_width+1,_flags+1
 37241                           
 37242                           ; BSR set to: 0
 37243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 37244  004A02  69B4               	setf	_prec& (0+255),b
 37245  004A04  69B5               	setf	(_prec+1)& (0+255),b
 37246                           
 37247                           ; BSR set to: 0
 37248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 37249  004A06  0E00               	movlw	0
 37250  004A08  6F72               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 37251  004A0A  0E00               	movlw	0
 37252  004A0C  D013               	goto	L61
 37253  004A0E                     i2l16975:
 37254                           
 37255                           ; BSR set to: 0
 37256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 37257  004A0E  81B6               	bsf	_flags& (0+255),0,b
 37258  004A10                     i2l16977:
 37259                           
 37260                           ; BSR set to: 0
 37261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 37262  004A10  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37263  004A12  6ED9               	movwf	fsr2l,c
 37264  004A14  6ADA               	clrf	fsr2h,c
 37265  004A16  2ADE               	incf	postinc2,f,c
 37266  004A18  0E00               	movlw	0
 37267  004A1A  22DD               	addwfc	postdec2,f,c
 37268                           
 37269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 37270  004A1C  D030               	goto	i2l17001
 37271  004A1E                     i2l16979:
 37272                           
 37273                           ; BSR set to: 0
 37274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 37275  004A1E  83B6               	bsf	_flags& (0+255),1,b
 37276  004A20  D7F7               	goto	i2l16977
 37277  004A22                     i2l16983:
 37278                           
 37279                           ; BSR set to: 0
 37280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 37281  004A22  85B6               	bsf	_flags& (0+255),2,b
 37282  004A24  D7F5               	goto	i2l16977
 37283  004A26                     i2l16987:
 37284                           
 37285                           ; BSR set to: 0
 37286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 37287  004A26  87B6               	bsf	_flags& (0+255),3,b
 37288  004A28  D7F3               	goto	i2l16977
 37289  004A2A                     i2l16991:
 37290                           
 37291                           ; BSR set to: 0
 37292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 37293  004A2A  89B6               	bsf	_flags& (0+255),4,b
 37294  004A2C  D7F1               	goto	i2l16977
 37295  004A2E                     i2l16995:
 37296                           
 37297                           ; BSR set to: 0
 37298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 37299  004A2E  0E00               	movlw	0
 37300  004A30  6F72               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 37301  004A32  0E01               	movlw	1
 37302  004A34                     L61:
 37303  004A34  6F71               	movwf	i2vfpfcnvrt@done& (0+255),b
 37304                           
 37305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 37306  004A36  D023               	goto	i2l17001
 37307  004A38                     i2l16999:
 37308                           
 37309                           ; BSR set to: 0
 37310  004A38  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37311  004A3A  6ED9               	movwf	fsr2l,c
 37312  004A3C  6ADA               	clrf	fsr2h,c
 37313  004A3E  006F FF7B FFF6     	movff	postinc2,tblptrl
 37314  004A44  006F FF77 FFF7     	movff	postdec2,tblptrh
 37315  004A4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37316  004A4A  6AF8               	clrf	tblptru,c
 37317  004A4C                     	endif
 37318  004A4C                     	if	0	;tblptru may be non-zero
 37319  004A4C                     	endif
 37320  004A4C  0008               	tblrd		*
 37321  004A4E  50F5               	movf	tablat,w,c
 37322  004A50  6E4A               	movwf	??i2_vfpfcnvrt^0,c
 37323  004A52  6A4B               	clrf	(??i2_vfpfcnvrt+1)^0,c
 37324                           
 37325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37326                           ; Switch size 1, requested type "simple"
 37327                           ; Number of cases is 1, Range of values is 0 to 0
 37328                           ; switch strategies available:
 37329                           ; Name         Instructions Cycles
 37330                           ; simple_byte            4     3 (average)
 37331                           ;	Chosen strategy is simple_byte
 37332  004A54  504B               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 37333  004A56  0A00               	xorlw	0	; case 0
 37334  004A58  A4D8               	btfss	status,2,c
 37335  004A5A  D7E9               	goto	i2l16995
 37336                           
 37337                           ; BSR set to: 0
 37338                           ; Switch size 1, requested type "simple"
 37339                           ; Number of cases is 5, Range of values is 32 to 48
 37340                           ; switch strategies available:
 37341                           ; Name         Instructions Cycles
 37342                           ; simple_byte           16     9 (average)
 37343                           ;	Chosen strategy is simple_byte
 37344  004A5C  504A               	movf	??i2_vfpfcnvrt^0,w,c
 37345  004A5E  0A20               	xorlw	32	; case 32
 37346  004A60  B4D8               	btfsc	status,2,c
 37347  004A62  D7E1               	goto	i2l16987
 37348  004A64  0A03               	xorlw	3	; case 35
 37349  004A66  B4D8               	btfsc	status,2,c
 37350  004A68  D7E0               	goto	i2l16991
 37351  004A6A  0A08               	xorlw	8	; case 43
 37352  004A6C  B4D8               	btfsc	status,2,c
 37353  004A6E  D7D9               	goto	i2l16983
 37354  004A70  0A06               	xorlw	6	; case 45
 37355  004A72  B4D8               	btfsc	status,2,c
 37356  004A74  D7CC               	goto	i2l16975
 37357  004A76  0A1D               	xorlw	29	; case 48
 37358  004A78  B4D8               	btfsc	status,2,c
 37359  004A7A  D7D1               	goto	i2l16979
 37360  004A7C  D7D8               	goto	i2l16995
 37361  004A7E                     i2l17001:
 37362                           
 37363                           ; BSR set to: 0
 37364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 37365  004A7E  5171               	movf	i2vfpfcnvrt@done& (0+255),w,b
 37366  004A80  1172               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 37367  004A82  B4D8               	btfsc	status,2,c
 37368  004A84  D7D9               	goto	i2l16999
 37369                           
 37370                           ; BSR set to: 0
 37371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 37372  004A86  B1B6               	btfsc	_flags& (0+255),0,b
 37373                           
 37374                           ; BSR set to: 0
 37375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 37376  004A88  93B6               	bcf	_flags& (0+255),1,b
 37377                           
 37378                           ; BSR set to: 0
 37379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 37380  004A8A  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37381  004A8C  6ED9               	movwf	fsr2l,c
 37382  004A8E  6ADA               	clrf	fsr2h,c
 37383  004A90  006F FF7B FFF6     	movff	postinc2,tblptrl
 37384  004A96  006F FF77 FFF7     	movff	postdec2,tblptrh
 37385  004A9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37386  004A9C  6AF8               	clrf	tblptru,c
 37387  004A9E                     	endif
 37388  004A9E                     	if	0	;tblptru may be non-zero
 37389  004A9E                     	endif
 37390  004A9E  0008               	tblrd		*
 37391  004AA0  50F5               	movf	tablat,w,c
 37392  004AA2  0A2A               	xorlw	42
 37393  004AA4  A4D8               	btfss	status,2,c
 37394  004AA6  D02A               	goto	i2l17013
 37395                           
 37396                           ; BSR set to: 0
 37397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 37398  004AA8  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37399  004AAA  6ED9               	movwf	fsr2l,c
 37400  004AAC  6ADA               	clrf	fsr2h,c
 37401  004AAE  2ADE               	incf	postinc2,f,c
 37402  004AB0  0E00               	movlw	0
 37403  004AB2  22DD               	addwfc	postdec2,f,c
 37404                           
 37405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 37406  004AB4  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37407  004ABA  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37408  004AC0  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37409  004AC6  0E02               	movlw	2
 37410  004AC8  26DE               	addwf	postinc2,f,c
 37411  004ACA  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37412  004AD0  0E00               	movlw	0
 37413  004AD2  22DD               	addwfc	postdec2,f,c
 37414  004AD4  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37415  004ADA  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37416  004AE0  006F FF78  F0B2    	movff	postinc2,_width
 37417  004AE6  006F FF74  F0B3    	movff	postdec2,_width+1
 37418                           
 37419                           ; BSR set to: 0
 37420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 37421  004AEC  AFB3               	btfss	(_width+1)& (0+255),7,b
 37422  004AEE  D044               	goto	i2u1763_40
 37423                           
 37424                           ; BSR set to: 0
 37425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 37426  004AF0  81B6               	bsf	_flags& (0+255),0,b
 37427                           
 37428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 37429  004AF2  6DB2               	negf	_width& (0+255),b
 37430  004AF4  1FB3               	comf	(_width+1)& (0+255),f,b
 37431  004AF6  B0D8               	btfsc	status,0,c
 37432  004AF8  2BB3               	incf	(_width+1)& (0+255),f,b
 37433  004AFA  D03E               	goto	i2u1763_40
 37434  004AFC                     i2l17013:
 37435                           
 37436                           ; BSR set to: 0
 37437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 37438  004AFC  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37439  004AFE  6ED9               	movwf	fsr2l,c
 37440  004B00  6ADA               	clrf	fsr2h,c
 37441  004B02  006F FF78  F008    	movff	postinc2,i2atoi@s
 37442  004B08  006F FF74  F009    	movff	postdec2,i2atoi@s+1
 37443  004B0E  EC64  F037         	call	i2_atoi	;wreg free
 37444  004B12  0060  F020  F0B2   	movff	?i2_atoi,_width
 37445  004B18  0060  F024  F0B3   	movff	?i2_atoi+1,_width+1
 37446                           
 37447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 37448  004B1E  D006               	goto	i2l17017
 37449  004B20                     i2l17015:
 37450                           
 37451                           ; BSR set to: 0
 37452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 37453  004B20  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37454  004B22  6ED9               	movwf	fsr2l,c
 37455  004B24  6ADA               	clrf	fsr2h,c
 37456  004B26  2ADE               	incf	postinc2,f,c
 37457  004B28  0E00               	movlw	0
 37458  004B2A  22DD               	addwfc	postdec2,f,c
 37459  004B2C                     i2l17017:
 37460  004B2C  0ED0               	movlw	208
 37461  004B2E  6E4A               	movwf	??i2_vfpfcnvrt^0,c
 37462  004B30  0EFF               	movlw	255
 37463  004B32  6E4B               	movwf	(??i2_vfpfcnvrt+1)^0,c
 37464  004B34  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37465  004B36  6ED9               	movwf	fsr2l,c
 37466  004B38  6ADA               	clrf	fsr2h,c
 37467  004B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 37468  004B40  006F FF77 FFF7     	movff	postdec2,tblptrh
 37469  004B46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37470  004B46  6AF8               	clrf	tblptru,c
 37471  004B48                     	endif
 37472  004B48                     	if	0	;tblptru may be non-zero
 37473  004B48                     	endif
 37474  004B48  0008               	tblrd		*
 37475  004B4A  50F5               	movf	tablat,w,c
 37476  004B4C  6E4C               	movwf	(??i2_vfpfcnvrt+2)^0,c
 37477  004B4E  6A4D               	clrf	(??i2_vfpfcnvrt+3)^0,c
 37478  004B50  504A               	movf	??i2_vfpfcnvrt^0,w,c
 37479  004B52  264C               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 37480  004B54  504B               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 37481  004B56  224D               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 37482  004B58  504D               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 37483  004B5A  E106               	bnz	i2u1761_40
 37484  004B5C  0E0A               	movlw	10
 37485  004B5E  5C4C               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 37486  004B60  B0D8               	btfsc	status,0,c
 37487  004B62  D002               	goto	i2u1761_40
 37488  004B64  0E01               	movlw	1
 37489  004B66  D001               	goto	i2u1762_40
 37490  004B68                     i2u1761_40:
 37491  004B68  0E00               	movlw	0
 37492  004B6A                     i2u1762_40:
 37493  004B6A  0100               	movlb	0	; () banked
 37494  004B6C  6F73               	movwf	i2_vfpfcnvrt$4917& (0+255),b
 37495  004B6E  6B74               	clrf	(i2_vfpfcnvrt$4917+1)& (0+255),b
 37496                           
 37497                           ; BSR set to: 0
 37498  004B70  5173               	movf	i2_vfpfcnvrt$4917& (0+255),w,b
 37499  004B72  1174               	iorwf	(i2_vfpfcnvrt$4917+1)& (0+255),w,b
 37500  004B74  A4D8               	btfss	status,2,c
 37501  004B76  D7D4               	goto	i2l17015
 37502  004B78                     i2u1763_40:
 37503                           
 37504                           ; BSR set to: 0
 37505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 37506  004B78  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37507  004B7A  6ED9               	movwf	fsr2l,c
 37508  004B7C  6ADA               	clrf	fsr2h,c
 37509  004B7E  006F FF7B FFF6     	movff	postinc2,tblptrl
 37510  004B84  006F FF77 FFF7     	movff	postdec2,tblptrh
 37511  004B8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37512  004B8A  6AF8               	clrf	tblptru,c
 37513  004B8C                     	endif
 37514  004B8C                     	if	0	;tblptru may be non-zero
 37515  004B8C                     	endif
 37516  004B8C  0008               	tblrd		*
 37517  004B8E  50F5               	movf	tablat,w,c
 37518  004B90  0A64               	xorlw	100
 37519  004B92  B4D8               	btfsc	status,2,c
 37520  004B94  D00F               	goto	i2u1765_40
 37521                           
 37522                           ; BSR set to: 0
 37523  004B96  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37524  004B98  6ED9               	movwf	fsr2l,c
 37525  004B9A  6ADA               	clrf	fsr2h,c
 37526  004B9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 37527  004BA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 37528  004BA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37529  004BA8  6AF8               	clrf	tblptru,c
 37530  004BAA                     	endif
 37531  004BAA                     	if	0	;tblptru may be non-zero
 37532  004BAA                     	endif
 37533  004BAA  0008               	tblrd		*
 37534  004BAC  50F5               	movf	tablat,w,c
 37535  004BAE  0A69               	xorlw	105
 37536  004BB0  A4D8               	btfss	status,2,c
 37537  004BB2  D052               	goto	i2l17033
 37538  004BB4                     i2u1765_40:
 37539                           
 37540                           ; BSR set to: 0
 37541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 37542  004BB4  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37543  004BB6  6ED9               	movwf	fsr2l,c
 37544  004BB8  6ADA               	clrf	fsr2h,c
 37545  004BBA  2ADE               	incf	postinc2,f,c
 37546  004BBC  0E00               	movlw	0
 37547  004BBE  22DD               	addwfc	postdec2,f,c
 37548                           
 37549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 37550  004BC0  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37551  004BC6  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37552  004BCC  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37553  004BD2  0E02               	movlw	2
 37554  004BD4  26DE               	addwf	postinc2,f,c
 37555  004BD6  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37556  004BDC  0E00               	movlw	0
 37557  004BDE  22DD               	addwfc	postdec2,f,c
 37558  004BE0  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37559  004BE6  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37560  004BEC  006F FF78  F060    	movff	postinc2,i2vfpfcnvrt@ll
 37561  004BF2  006F FF74  F061    	movff	postdec2,i2vfpfcnvrt@ll+1
 37562  004BF8  0E00               	movlw	0
 37563  004BFA  BF61               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 37564  004BFC  0EFF               	movlw	-1
 37565  004BFE  6F62               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 37566  004C00  6F63               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 37567  004C02  6F64               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 37568  004C04  6F65               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 37569  004C06  6F66               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 37570  004C08  6F67               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 37571                           
 37572                           ; BSR set to: 0
 37573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 37574  004C0A  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 37575  004C10  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 37576  004C16  0060  F180  F020   	movff	i2vfpfcnvrt@ll,i2dtoa@d
 37577  004C1C  0060  F184  F021   	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 37578  004C22  0060  F188  F022   	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 37579  004C28  0060  F18C  F023   	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 37580  004C2E  0060  F190  F024   	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 37581  004C34  0060  F194  F025   	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 37582  004C3A  0060  F198  F026   	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 37583  004C40  0060  F19C  F027   	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 37584  004C46  EC5F  F02F         	call	i2_dtoa	;wreg free
 37585  004C4A  0060  F078  F045   	movff	?i2_dtoa,?i2_vfpfcnvrt
 37586  004C50  0060  F07C  F046   	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 37587  004C56  0012               	return	
 37588  004C58                     i2l17033:
 37589                           
 37590                           ; BSR set to: 0
 37591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 37592  004C58  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37593  004C5A  6ED9               	movwf	fsr2l,c
 37594  004C5C  6ADA               	clrf	fsr2h,c
 37595  004C5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 37596  004C64  006F FF77 FFF7     	movff	postdec2,tblptrh
 37597  004C6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37598  004C6A  6AF8               	clrf	tblptru,c
 37599  004C6C                     	endif
 37600  004C6C                     	if	0	;tblptru may be non-zero
 37601  004C6C                     	endif
 37602  004C6C  0008               	tblrd		*
 37603  004C6E  50F5               	movf	tablat,w,c
 37604  004C70  0A78               	xorlw	120
 37605  004C72  B4D8               	btfsc	status,2,c
 37606  004C74  D00F               	goto	i2u1767_40
 37607                           
 37608                           ; BSR set to: 0
 37609  004C76  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37610  004C78  6ED9               	movwf	fsr2l,c
 37611  004C7A  6ADA               	clrf	fsr2h,c
 37612  004C7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 37613  004C82  006F FF77 FFF7     	movff	postdec2,tblptrh
 37614  004C88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37615  004C88  6AF8               	clrf	tblptru,c
 37616  004C8A                     	endif
 37617  004C8A                     	if	0	;tblptru may be non-zero
 37618  004C8A                     	endif
 37619  004C8A  0008               	tblrd		*
 37620  004C8C  50F5               	movf	tablat,w,c
 37621  004C8E  0A58               	xorlw	88
 37622  004C90  A4D8               	btfss	status,2,c
 37623  004C92  D066               	goto	i2l17047
 37624  004C94                     i2u1767_40:
 37625                           
 37626                           ; BSR set to: 0
 37627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 37628  004C94  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37629  004C96  6ED9               	movwf	fsr2l,c
 37630  004C98  6ADA               	clrf	fsr2h,c
 37631  004C9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 37632  004CA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 37633  004CA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37634  004CA6  6AF8               	clrf	tblptru,c
 37635  004CA8                     	endif
 37636  004CA8                     	if	0	;tblptru may be non-zero
 37637  004CA8                     	endif
 37638  004CA8  0008               	tblrd		*
 37639  004CAA  006F FFD4  F070    	movff	tablat,i2vfpfcnvrt@c
 37640                           
 37641                           ; BSR set to: 0
 37642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 37643  004CB0  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37644  004CB2  6ED9               	movwf	fsr2l,c
 37645  004CB4  6ADA               	clrf	fsr2h,c
 37646  004CB6  2ADE               	incf	postinc2,f,c
 37647  004CB8  0E00               	movlw	0
 37648  004CBA  22DD               	addwfc	postdec2,f,c
 37649                           
 37650                           ; BSR set to: 0
 37651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 37652  004CBC  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37653  004CC2  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37654  004CC8  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37655  004CCE  0E02               	movlw	2
 37656  004CD0  26DE               	addwf	postinc2,f,c
 37657  004CD2  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37658  004CD8  0E00               	movlw	0
 37659  004CDA  22DD               	addwfc	postdec2,f,c
 37660  004CDC  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37661  004CE2  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37662  004CE8  006F FF78  F04C    	movff	postinc2,??i2_vfpfcnvrt+2
 37663  004CEE  006F FF74  F04D    	movff	postdec2,??i2_vfpfcnvrt+3
 37664  004CF4  0060  F130  F068   	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 37665  004CFA  0060  F134  F069   	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 37666  004D00  6B6A               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 37667  004D02  6B6B               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 37668  004D04  6B6C               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 37669  004D06  6B6D               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 37670  004D08  6B6E               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 37671  004D0A  6B6F               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 37672                           
 37673                           ; BSR set to: 0
 37674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 37675  004D0C  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 37676  004D12  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 37677  004D18  0060  F1A0  F020   	movff	i2vfpfcnvrt@llu,i2xtoa@d
 37678  004D1E  0060  F1A4  F021   	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 37679  004D24  0060  F1A8  F022   	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 37680  004D2A  0060  F1AC  F023   	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 37681  004D30  0060  F1B0  F024   	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 37682  004D36  0060  F1B4  F025   	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 37683  004D3C  0060  F1B8  F026   	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 37684  004D42  0060  F1BC  F027   	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 37685  004D48  0060  F1C0  F028   	movff	i2vfpfcnvrt@c,i2xtoa@x
 37686  004D4E  EC93  F034         	call	i2_xtoa	;wreg free
 37687  004D52  0060  F078  F045   	movff	?i2_xtoa,?i2_vfpfcnvrt
 37688  004D58  0060  F07C  F046   	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 37689  004D5E  0012               	return	
 37690  004D60                     i2l17047:
 37691                           
 37692                           ; BSR set to: 0
 37693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 37694  004D60  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37695  004D62  6ED9               	movwf	fsr2l,c
 37696  004D64  6ADA               	clrf	fsr2h,c
 37697  004D66  006F FF7B FFF6     	movff	postinc2,tblptrl
 37698  004D6C  006F FF77 FFF7     	movff	postdec2,tblptrh
 37699  004D72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37700  004D72  6AF8               	clrf	tblptru,c
 37701  004D74                     	endif
 37702  004D74                     	if	0	;tblptru may be non-zero
 37703  004D74                     	endif
 37704  004D74  0008               	tblrd		*
 37705  004D76  50F5               	movf	tablat,w,c
 37706  004D78  0A25               	xorlw	37
 37707  004D7A  A4D8               	btfss	status,2,c
 37708  004D7C  D017               	goto	i2l17057
 37709                           
 37710                           ; BSR set to: 0
 37711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 37712  004D7E  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37713  004D80  6ED9               	movwf	fsr2l,c
 37714  004D82  6ADA               	clrf	fsr2h,c
 37715  004D84  2ADE               	incf	postinc2,f,c
 37716  004D86  0E00               	movlw	0
 37717  004D88  22DD               	addwfc	postdec2,f,c
 37718                           
 37719                           ; BSR set to: 0
 37720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 37721  004D8A  0E00               	movlw	0
 37722  004D8C  6E04               	movwf	(i2fputc@c+1)^0,c
 37723  004D8E  0E25               	movlw	37
 37724  004D90  6E03               	movwf	i2fputc@c^0,c
 37725  004D92  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 37726  004D98  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 37727  004D9E  ECD2  F040         	call	i2_fputc	;wreg free
 37728  004DA2                     i2l17053:
 37729                           
 37730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 37731  004DA2  0E00               	movlw	0
 37732  004DA4  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 37733  004DA6  0E01               	movlw	1
 37734  004DA8  6E45               	movwf	?i2_vfpfcnvrt^0,c
 37735  004DAA  0012               	return	
 37736  004DAC                     i2l17057:
 37737                           
 37738                           ; BSR set to: 0
 37739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 37740  004DAC  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37741  004DAE  6ED9               	movwf	fsr2l,c
 37742  004DB0  6ADA               	clrf	fsr2h,c
 37743  004DB2  2ADE               	incf	postinc2,f,c
 37744  004DB4  0E00               	movlw	0
 37745  004DB6  22DD               	addwfc	postdec2,f,c
 37746                           
 37747                           ; BSR set to: 0
 37748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 37749  004DB8  0E00               	movlw	0
 37750  004DBA  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 37751  004DBC  0E00               	movlw	0
 37752  004DBE  6E45               	movwf	?i2_vfpfcnvrt^0,c
 37753  004DC0  0012               	return	
 37754  004DC2                     i2l17063:
 37755                           
 37756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 37757  004DC2  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37758  004DC4  6ED9               	movwf	fsr2l,c
 37759  004DC6  6ADA               	clrf	fsr2h,c
 37760  004DC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 37761  004DCE  006F FF77 FFF7     	movff	postdec2,tblptrh
 37762  004DD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37763  004DD4  6AF8               	clrf	tblptru,c
 37764  004DD6                     	endif
 37765  004DD6                     	if	0	;tblptru may be non-zero
 37766  004DD6                     	endif
 37767  004DD6  0008               	tblrd		*
 37768  004DD8  50F5               	movf	tablat,w,c
 37769  004DDA  6E03               	movwf	i2fputc@c^0,c
 37770  004DDC  6A04               	clrf	(i2fputc@c+1)^0,c
 37771  004DDE  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 37772  004DE4  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 37773  004DEA  ECD2  F040         	call	i2_fputc	;wreg free
 37774                           
 37775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 37776  004DEE  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37777  004DF0  6ED9               	movwf	fsr2l,c
 37778  004DF2  6ADA               	clrf	fsr2h,c
 37779  004DF4  2ADE               	incf	postinc2,f,c
 37780  004DF6  0E00               	movlw	0
 37781  004DF8  22DD               	addwfc	postdec2,f,c
 37782  004DFA  D7D3               	goto	i2l17053
 37783  004DFC                     __end_ofi2_vfpfcnvrt:
 37784                           	opt callstack 0
 37785                           
 37786 ;; *************** function i2_xtoa *****************
 37787 ;; Defined at:
 37788 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 37789 ;; Parameters:    Size  Location     Type
 37790 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 37791 ;;		 -> sprintf@f(6), NULL(0), 
 37792 ;;  d               8   31[COMRAM] unsigned long long 
 37793 ;;  x               1   39[COMRAM] unsigned char 
 37794 ;; Auto vars:     Size  Location     Type
 37795 ;;  xtoa            8   56[COMRAM] unsigned long long 
 37796 ;;  xtoa            2   66[COMRAM] int 
 37797 ;;  xtoa            2   64[COMRAM] int 
 37798 ;;  xtoa            2   54[COMRAM] int 
 37799 ;;  xtoa            2   52[COMRAM] int 
 37800 ;; Return value:  Size  Location     Type
 37801 ;;                  2   29[COMRAM] int 
 37802 ;; Registers used:
 37803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37804 ;; Tracked objects:
 37805 ;;		On entry : 3F/0
 37806 ;;		On exit  : 0/0
 37807 ;;		Unchanged: 0/0
 37808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37809 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37810 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37811 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37812 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37813 ;;Total ram usage:       39 bytes
 37814 ;; Hardware stack levels used:    1
 37815 ;; Hardware stack levels required when called:    5
 37816 ;; This function calls:
 37817 ;;		i2_isalpha
 37818 ;;		i2_isupper
 37819 ;;		i2_pad
 37820 ;;		i2_toupper
 37821 ;; This function is called by:
 37822 ;;		i2_vfpfcnvrt
 37823 ;; This function uses a non-reentrant model
 37824 ;;
 37825                           
 37826                           	psect	text226
 37827  006926                     __ptext226:
 37828                           	opt callstack 0
 37829  006926                     i2_xtoa:
 37830                           	opt callstack 1
 37831                           
 37832                           ; BSR set to: 0
 37833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 37834                           
 37835                           ;incstack = 0
 37836  006926  AFB5               	btfss	(_prec+1)& (0+255),7,b
 37837                           
 37838                           ; BSR set to: 0
 37839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 37840  006928  93B6               	bcf	_flags& (0+255),1,b
 37841                           
 37842                           ; BSR set to: 0
 37843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 37844  00692A  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 37845  00692C  D005               	goto	i2u1731_40
 37846  00692E  51B5               	movf	(_prec+1)& (0+255),w,b
 37847  006930  E108               	bnz	i2l3110
 37848  006932  05B4               	decf	_prec& (0+255),w,b
 37849  006934  B0D8               	btfsc	status,0,c
 37850  006936  D005               	goto	i2l3110
 37851  006938                     i2u1731_40:
 37852                           
 37853                           ; BSR set to: 0
 37854  006938  0E00               	movlw	0
 37855  00693A  6E36               	movwf	(i2xtoa@p+1)^0,c
 37856  00693C  0E01               	movlw	1
 37857  00693E  6E35               	movwf	i2xtoa@p^0,c
 37858  006940  D006               	goto	i2l3112
 37859  006942                     i2l3110:
 37860                           
 37861                           ; BSR set to: 0
 37862  006942  0060  F2D0  F035   	movff	_prec,i2xtoa@p
 37863  006948  0060  F2D4  F036   	movff	_prec+1,i2xtoa@p+1
 37864  00694E                     i2l3112:
 37865                           
 37866                           ; BSR set to: 0
 37867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 37868  00694E  0060  F2C8  F037   	movff	_width,i2xtoa@w
 37869  006954  0060  F2CC  F038   	movff	_width+1,i2xtoa@w+1
 37870                           
 37871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 37872  00695A  A9B6               	btfss	_flags& (0+255),4,b
 37873  00695C  D004               	goto	i2l16851
 37874                           
 37875                           ; BSR set to: 0
 37876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 37877  00695E  0EFE               	movlw	254
 37878  006960  2637               	addwf	i2xtoa@w^0,f,c
 37879  006962  0EFF               	movlw	255
 37880  006964  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 37881  006966                     i2l16851:
 37882                           
 37883                           ; BSR set to: 0
 37884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 37885  006966  0060  F080  F039   	movff	i2xtoa@d,i2xtoa@n
 37886  00696C  0060  F084  F03A   	movff	i2xtoa@d+1,i2xtoa@n+1
 37887  006972  0060  F088  F03B   	movff	i2xtoa@d+2,i2xtoa@n+2
 37888  006978  0060  F08C  F03C   	movff	i2xtoa@d+3,i2xtoa@n+3
 37889  00697E  0060  F090  F03D   	movff	i2xtoa@d+4,i2xtoa@n+4
 37890  006984  0060  F094  F03E   	movff	i2xtoa@d+5,i2xtoa@n+5
 37891  00698A  0060  F098  F03F   	movff	i2xtoa@d+6,i2xtoa@n+6
 37892  006990  0060  F09C  F040   	movff	i2xtoa@d+7,i2xtoa@n+7
 37893                           
 37894                           ; BSR set to: 0
 37895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 37896  006996  0E00               	movlw	0
 37897  006998  6E42               	movwf	(i2xtoa@i+1)^0,c
 37898  00699A  0E1F               	movlw	31
 37899  00699C  6E41               	movwf	i2xtoa@i^0,c
 37900                           
 37901                           ; BSR set to: 0
 37902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 37903  00699E  0E00               	movlw	0
 37904  0069A0  0102               	movlb	2	; () banked
 37905  0069A2  6F72               	movwf	(_dbuf+31)& (0+255),b
 37906                           
 37907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 37908  0069A4  D0A8               	goto	i2l16887
 37909  0069A6                     i2l16857:
 37910                           
 37911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 37912  0069A6  0641               	decf	i2xtoa@i^0,f,c
 37913  0069A8  A0D8               	btfss	status,0,c
 37914  0069AA  0642               	decf	(i2xtoa@i+1)^0,f,c
 37915                           
 37916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 37917  0069AC  0E0F               	movlw	15
 37918  0069AE  1439               	andwf	i2xtoa@n^0,w,c
 37919  0069B0  6E43               	movwf	i2xtoa@c^0,c
 37920  0069B2  6A44               	clrf	(i2xtoa@c+1)^0,c
 37921                           
 37922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 37923  0069B4  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 37924  0069B6  D008               	goto	i2l16865
 37925  0069B8  5044               	movf	(i2xtoa@c+1)^0,w,c
 37926  0069BA  E104               	bnz	i2u1733_40
 37927  0069BC  0E0A               	movlw	10
 37928  0069BE  5C43               	subwf	i2xtoa@c^0,w,c
 37929  0069C0  A0D8               	btfss	status,0,c
 37930  0069C2  D002               	goto	i2l16865
 37931  0069C4                     i2u1733_40:
 37932  0069C4  0E57               	movlw	87
 37933  0069C6  D001               	goto	L62
 37934  0069C8                     i2l16865:
 37935  0069C8  0E30               	movlw	48
 37936  0069CA                     L62:
 37937  0069CA  2443               	addwf	i2xtoa@c^0,w,c
 37938  0069CC  6E43               	movwf	i2xtoa@c^0,c
 37939  0069CE  0E00               	movlw	0
 37940  0069D0  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 37941  0069D2  6E44               	movwf	(i2xtoa@c+1)^0,c
 37942                           
 37943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 37944  0069D4  0EBF               	movlw	191
 37945  0069D6  6E29               	movwf	??i2_xtoa^0,c
 37946  0069D8  0EFF               	movlw	255
 37947  0069DA  6E2A               	movwf	(??i2_xtoa+1)^0,c
 37948  0069DC  5028               	movf	i2xtoa@x^0,w,c
 37949  0069DE  6E2B               	movwf	(??i2_xtoa+2)^0,c
 37950  0069E0  6A2C               	clrf	(??i2_xtoa+3)^0,c
 37951  0069E2  5029               	movf	??i2_xtoa^0,w,c
 37952  0069E4  262B               	addwf	(??i2_xtoa+2)^0,f,c
 37953  0069E6  502A               	movf	(??i2_xtoa+1)^0,w,c
 37954  0069E8  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 37955  0069EA  502C               	movf	(??i2_xtoa+3)^0,w,c
 37956  0069EC  E106               	bnz	i2u1734_40
 37957  0069EE  0E1A               	movlw	26
 37958  0069F0  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 37959  0069F2  B0D8               	btfsc	status,0,c
 37960  0069F4  D002               	goto	i2u1734_40
 37961  0069F6  0E01               	movlw	1
 37962  0069F8  D001               	goto	i2u1735_40
 37963  0069FA                     i2u1734_40:
 37964  0069FA  0E00               	movlw	0
 37965  0069FC                     i2u1735_40:
 37966  0069FC  6E31               	movwf	i2_xtoa$4902^0,c
 37967  0069FE  6A32               	clrf	(i2_xtoa$4902+1)^0,c
 37968  006A00  5031               	movf	i2_xtoa$4902^0,w,c
 37969  006A02  1032               	iorwf	(i2_xtoa$4902+1)^0,w,c
 37970  006A04  B4D8               	btfsc	status,2,c
 37971  006A06  D02B               	goto	i2l16879
 37972  006A08  0E9F               	movlw	159
 37973  006A0A  6E29               	movwf	??i2_xtoa^0,c
 37974  006A0C  0EFF               	movlw	255
 37975  006A0E  6E2A               	movwf	(??i2_xtoa+1)^0,c
 37976  006A10  0E20               	movlw	32
 37977  006A12  1043               	iorwf	i2xtoa@c^0,w,c
 37978  006A14  6E2B               	movwf	(??i2_xtoa+2)^0,c
 37979  006A16  0E00               	movlw	0
 37980  006A18  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 37981  006A1A  6E2C               	movwf	(??i2_xtoa+3)^0,c
 37982  006A1C  5029               	movf	??i2_xtoa^0,w,c
 37983  006A1E  262B               	addwf	(??i2_xtoa+2)^0,f,c
 37984  006A20  502A               	movf	(??i2_xtoa+1)^0,w,c
 37985  006A22  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 37986  006A24  502C               	movf	(??i2_xtoa+3)^0,w,c
 37987  006A26  E106               	bnz	i2u1737_40
 37988  006A28  0E1A               	movlw	26
 37989  006A2A  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 37990  006A2C  B0D8               	btfsc	status,0,c
 37991  006A2E  D002               	goto	i2u1737_40
 37992  006A30  0E01               	movlw	1
 37993  006A32  D001               	goto	i2u1738_40
 37994  006A34                     i2u1737_40:
 37995  006A34  0E00               	movlw	0
 37996  006A36                     i2u1738_40:
 37997  006A36  6E33               	movwf	i2_xtoa$4903^0,c
 37998  006A38  6A34               	clrf	(i2_xtoa$4903+1)^0,c
 37999  006A3A  5033               	movf	i2_xtoa$4903^0,w,c
 38000  006A3C  1034               	iorwf	(i2_xtoa$4903+1)^0,w,c
 38001  006A3E  B4D8               	btfsc	status,2,c
 38002  006A40  D00E               	goto	i2l16879
 38003                           
 38004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 38005  006A42  0060  F10C  F007   	movff	i2xtoa@c,i2toupper@c
 38006  006A48  0060  F110  F008   	movff	i2xtoa@c+1,i2toupper@c+1
 38007  006A4E  EC06  F049         	call	i2_toupper	;wreg free
 38008  006A52  0060  F01C  F043   	movff	?i2_toupper,i2xtoa@c
 38009  006A58  0060  F020  F044   	movff	?i2_toupper+1,i2xtoa@c+1
 38010  006A5E                     i2l16879:
 38011                           
 38012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 38013  006A5E  0E53               	movlw	low _dbuf
 38014  006A60  2441               	addwf	i2xtoa@i^0,w,c
 38015  006A62  6ED9               	movwf	fsr2l,c
 38016  006A64  0E02               	movlw	high _dbuf
 38017  006A66  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38018  006A68  6EDA               	movwf	fsr2h,c
 38019  006A6A  0060  F10F  FFDF   	movff	i2xtoa@c,indf2
 38020                           
 38021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 38022  006A70  0635               	decf	i2xtoa@p^0,f,c
 38023  006A72  A0D8               	btfss	status,0,c
 38024  006A74  0636               	decf	(i2xtoa@p+1)^0,f,c
 38025                           
 38026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 38027  006A76  0637               	decf	i2xtoa@w^0,f,c
 38028  006A78  A0D8               	btfss	status,0,c
 38029  006A7A  0638               	decf	(i2xtoa@w+1)^0,f,c
 38030                           
 38031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 38032  006A7C  0060  F0E4  F029   	movff	i2xtoa@n,??i2_xtoa
 38033  006A82  0060  F0E8  F02A   	movff	i2xtoa@n+1,??i2_xtoa+1
 38034  006A88  0060  F0EC  F02B   	movff	i2xtoa@n+2,??i2_xtoa+2
 38035  006A8E  0060  F0F0  F02C   	movff	i2xtoa@n+3,??i2_xtoa+3
 38036  006A94  0060  F0F4  F02D   	movff	i2xtoa@n+4,??i2_xtoa+4
 38037  006A9A  0060  F0F8  F02E   	movff	i2xtoa@n+5,??i2_xtoa+5
 38038  006AA0  0060  F0FC  F02F   	movff	i2xtoa@n+6,??i2_xtoa+6
 38039  006AA6  0060  F100  F030   	movff	i2xtoa@n+7,??i2_xtoa+7
 38040  006AAC  0E05               	movlw	5
 38041  006AAE  D009               	goto	i2u1740_40
 38042  006AB0                     i2u1740_45:
 38043  006AB0  90D8               	bcf	status,0,c
 38044  006AB2  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 38045  006AB4  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 38046  006AB6  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 38047  006AB8  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 38048  006ABA  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 38049  006ABC  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 38050  006ABE  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 38051  006AC0  3229               	rrcf	??i2_xtoa^0,f,c
 38052  006AC2                     i2u1740_40:
 38053  006AC2  2EE8               	decfsz	wreg,f,c
 38054  006AC4  D7F5               	goto	i2u1740_45
 38055  006AC6  0060  F0A4  F039   	movff	??i2_xtoa,i2xtoa@n
 38056  006ACC  0060  F0A8  F03A   	movff	??i2_xtoa+1,i2xtoa@n+1
 38057  006AD2  0060  F0AC  F03B   	movff	??i2_xtoa+2,i2xtoa@n+2
 38058  006AD8  0060  F0B0  F03C   	movff	??i2_xtoa+3,i2xtoa@n+3
 38059  006ADE  0060  F0B4  F03D   	movff	??i2_xtoa+4,i2xtoa@n+4
 38060  006AE4  0060  F0B8  F03E   	movff	??i2_xtoa+5,i2xtoa@n+5
 38061  006AEA  0060  F0BC  F03F   	movff	??i2_xtoa+6,i2xtoa@n+6
 38062  006AF0  0060  F0C0  F040   	movff	??i2_xtoa+7,i2xtoa@n+7
 38063  006AF6                     i2l16887:
 38064                           
 38065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38066  006AF6  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 38067  006AF8  D021               	goto	i2u1745_40
 38068  006AFA  5042               	movf	(i2xtoa@i+1)^0,w,c
 38069  006AFC  E104               	bnz	i2u1741_40
 38070  006AFE  0E02               	movlw	2
 38071  006B00  5C41               	subwf	i2xtoa@i^0,w,c
 38072  006B02  A0D8               	btfss	status,0,c
 38073  006B04  D01B               	goto	i2u1745_40
 38074  006B06                     i2u1741_40:
 38075  006B06  5039               	movf	i2xtoa@n^0,w,c
 38076  006B08  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 38077  006B0A  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 38078  006B0C  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 38079  006B0E  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 38080  006B10  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 38081  006B12  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 38082  006B14  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 38083  006B16  A4D8               	btfss	status,2,c
 38084  006B18  D746               	goto	i2l16857
 38085  006B1A  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 38086  006B1C  D005               	goto	i2u1743_40
 38087  006B1E  5036               	movf	(i2xtoa@p+1)^0,w,c
 38088  006B20  E102               	bnz	i2u1743_41
 38089  006B22  0435               	decf	i2xtoa@p^0,w,c
 38090  006B24  B0D8               	btfsc	status,0,c
 38091  006B26                     i2u1743_41:
 38092  006B26  D73F               	goto	i2l16857
 38093  006B28                     i2u1743_40:
 38094  006B28  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 38095  006B2A  D008               	goto	i2u1745_40
 38096  006B2C  5038               	movf	(i2xtoa@w+1)^0,w,c
 38097  006B2E  E103               	bnz	i2u1744_40
 38098  006B30  0437               	decf	i2xtoa@w^0,w,c
 38099  006B32  A0D8               	btfss	status,0,c
 38100  006B34  D003               	goto	i2u1745_40
 38101  006B36                     i2u1744_40:
 38102  006B36  0100               	movlb	0	; () banked
 38103  006B38  B3B6               	btfsc	_flags& (0+255),1,b
 38104  006B3A  D735               	goto	i2l16857
 38105  006B3C                     i2u1745_40:
 38106                           
 38107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 38108  006B3C  0100               	movlb	0	; () banked
 38109  006B3E  A9B6               	btfss	_flags& (0+255),4,b
 38110  006B40  D017               	goto	i2l16903
 38111                           
 38112                           ; BSR set to: 0
 38113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 38114  006B42  0641               	decf	i2xtoa@i^0,f,c
 38115  006B44  A0D8               	btfss	status,0,c
 38116  006B46  0642               	decf	(i2xtoa@i+1)^0,f,c
 38117                           
 38118                           ; BSR set to: 0
 38119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 38120  006B48  0E53               	movlw	low _dbuf
 38121  006B4A  2441               	addwf	i2xtoa@i^0,w,c
 38122  006B4C  6ED9               	movwf	fsr2l,c
 38123  006B4E  0E02               	movlw	high _dbuf
 38124  006B50  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38125  006B52  6EDA               	movwf	fsr2h,c
 38126  006B54  0060  F0A3  FFDF   	movff	i2xtoa@x,indf2
 38127                           
 38128                           ; BSR set to: 0
 38129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 38130  006B5A  0641               	decf	i2xtoa@i^0,f,c
 38131  006B5C  A0D8               	btfss	status,0,c
 38132  006B5E  0642               	decf	(i2xtoa@i+1)^0,f,c
 38133                           
 38134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 38135  006B60  0E53               	movlw	low _dbuf
 38136  006B62  2441               	addwf	i2xtoa@i^0,w,c
 38137  006B64  6ED9               	movwf	fsr2l,c
 38138  006B66  0E02               	movlw	high _dbuf
 38139  006B68  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38140  006B6A  6EDA               	movwf	fsr2h,c
 38141  006B6C  0E30               	movlw	48
 38142  006B6E  6EDF               	movwf	indf2,c
 38143  006B70                     i2l16903:
 38144                           
 38145                           ; BSR set to: 0
 38146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 38147  006B70  0060  F078  F013   	movff	i2xtoa@fp,i2pad@fp
 38148  006B76  0060  F07C  F014   	movff	i2xtoa@fp+1,i2pad@fp+1
 38149  006B7C  0E53               	movlw	low _dbuf
 38150  006B7E  2441               	addwf	i2xtoa@i^0,w,c
 38151  006B80  6E15               	movwf	i2pad@buf^0,c
 38152  006B82  0E02               	movlw	high _dbuf
 38153  006B84  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38154  006B86  6E16               	movwf	(i2pad@buf+1)^0,c
 38155  006B88  0060  F0DC  F017   	movff	i2xtoa@w,i2pad@p
 38156  006B8E  0060  F0E0  F018   	movff	i2xtoa@w+1,i2pad@p+1
 38157  006B94  EC6E  F03F         	call	i2_pad	;wreg free
 38158  006B98  0060  F04C  F01E   	movff	?i2_pad,?i2_xtoa
 38159  006B9E  0060  F050  F01F   	movff	?i2_pad+1,?i2_xtoa+1
 38160  006BA4  0012               	return		;funcret
 38161  006BA6                     __end_ofi2_xtoa:
 38162                           	opt callstack 0
 38163                           
 38164 ;; *************** function i2_toupper *****************
 38165 ;; Defined at:
 38166 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 38167 ;; Parameters:    Size  Location     Type
 38168 ;;  c               2    6[COMRAM] int 
 38169 ;; Auto vars:     Size  Location     Type
 38170 ;;		None
 38171 ;; Return value:  Size  Location     Type
 38172 ;;                  2    6[COMRAM] int 
 38173 ;; Registers used:
 38174 ;;		wreg, status,2, status,0
 38175 ;; Tracked objects:
 38176 ;;		On entry : 0/2
 38177 ;;		On exit  : 0/0
 38178 ;;		Unchanged: 0/0
 38179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38183 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38184 ;;Total ram usage:        8 bytes
 38185 ;; Hardware stack levels used:    1
 38186 ;; Hardware stack levels required when called:    1
 38187 ;; This function calls:
 38188 ;;		i2_islower
 38189 ;; This function is called by:
 38190 ;;		i2_xtoa
 38191 ;; This function uses a non-reentrant model
 38192 ;;
 38193                           
 38194                           	psect	text227
 38195  00920C                     __ptext227:
 38196                           	opt callstack 0
 38197  00920C                     i2_toupper:
 38198                           	opt callstack 4
 38199                           
 38200                           ;incstack = 0
 38201  00920C  0E9F               	movlw	159
 38202  00920E  6E09               	movwf	??i2_toupper^0,c
 38203  009210  0EFF               	movlw	255
 38204  009212  6E0A               	movwf	(??i2_toupper+1)^0,c
 38205  009214  0060  F01C  F00B   	movff	i2toupper@c,??i2_toupper+2
 38206  00921A  0060  F020  F00C   	movff	i2toupper@c+1,??i2_toupper+3
 38207  009220  5009               	movf	??i2_toupper^0,w,c
 38208  009222  260B               	addwf	(??i2_toupper+2)^0,f,c
 38209  009224  500A               	movf	(??i2_toupper+1)^0,w,c
 38210  009226  220C               	addwfc	(??i2_toupper+3)^0,f,c
 38211  009228  500C               	movf	(??i2_toupper+3)^0,w,c
 38212  00922A  E106               	bnz	i2u1699_40
 38213  00922C  0E1A               	movlw	26
 38214  00922E  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 38215  009230  B0D8               	btfsc	status,0,c
 38216  009232  D002               	goto	i2u1699_40
 38217  009234  0E01               	movlw	1
 38218  009236  D001               	goto	i2u1700_40
 38219  009238                     i2u1699_40:
 38220  009238  0E00               	movlw	0
 38221  00923A                     i2u1700_40:
 38222  00923A  6E0D               	movwf	i2_toupper$5483^0,c
 38223  00923C  6A0E               	clrf	(i2_toupper$5483+1)^0,c
 38224  00923E  500D               	movf	i2_toupper$5483^0,w,c
 38225  009240  100E               	iorwf	(i2_toupper$5483+1)^0,w,c
 38226  009242  B4D8               	btfsc	status,2,c
 38227  009244  D005               	goto	i2l3957
 38228  009246  0E5F               	movlw	95
 38229  009248  1407               	andwf	i2toupper@c^0,w,c
 38230  00924A  6E07               	movwf	?i2_toupper^0,c
 38231  00924C  6A08               	clrf	(?i2_toupper+1)^0,c
 38232  00924E  0012               	return	
 38233  009250                     i2l3957:
 38234  009250  0060  F01C  F007   	movff	i2toupper@c,?i2_toupper
 38235  009256  0060  F020  F008   	movff	i2toupper@c+1,?i2_toupper+1
 38236  00925C  0012               	return		;funcret
 38237  00925E                     __end_ofi2_toupper:
 38238                           	opt callstack 0
 38239                           
 38240 ;; *************** function i2_islower *****************
 38241 ;; Defined at:
 38242 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 38243 ;; Parameters:    Size  Location     Type
 38244 ;;  c               2    0[COMRAM] int 
 38245 ;; Auto vars:     Size  Location     Type
 38246 ;;		None
 38247 ;; Return value:  Size  Location     Type
 38248 ;;                  2    0[COMRAM] int 
 38249 ;; Registers used:
 38250 ;;		wreg, status,2, status,0
 38251 ;; Tracked objects:
 38252 ;;		On entry : 0/0
 38253 ;;		On exit  : 0/0
 38254 ;;		Unchanged: 0/0
 38255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38260 ;;Total ram usage:        6 bytes
 38261 ;; Hardware stack levels used:    1
 38262 ;; This function calls:
 38263 ;;		Nothing
 38264 ;; This function is called by:
 38265 ;;		i2_toupper
 38266 ;; This function uses a non-reentrant model
 38267 ;;
 38268                           
 38269                           	psect	text228
 38270  00994A                     __ptext228:
 38271                           	opt callstack 0
 38272  00994A                     i2_islower:
 38273                           	opt callstack 4
 38274                           
 38275                           ;incstack = 0
 38276  00994A  0E9F               	movlw	159
 38277  00994C  6E03               	movwf	??i2_islower^0,c
 38278  00994E  0EFF               	movlw	255
 38279  009950  6E04               	movwf	(??i2_islower+1)^0,c
 38280  009952  0060  F004  F005   	movff	i2islower@c,??i2_islower+2
 38281  009958  0060  F008  F006   	movff	i2islower@c+1,??i2_islower+3
 38282  00995E  5003               	movf	??i2_islower^0,w,c
 38283  009960  2605               	addwf	(??i2_islower+2)^0,f,c
 38284  009962  5004               	movf	(??i2_islower+1)^0,w,c
 38285  009964  2206               	addwfc	(??i2_islower+3)^0,f,c
 38286  009966  5006               	movf	(??i2_islower+3)^0,w,c
 38287  009968  E106               	bnz	i2u1632_40
 38288  00996A  0E1A               	movlw	26
 38289  00996C  5C05               	subwf	(??i2_islower+2)^0,w,c
 38290  00996E  B0D8               	btfsc	status,0,c
 38291  009970  D002               	goto	i2u1632_40
 38292  009972  0E01               	movlw	1
 38293  009974  D001               	goto	i2u1633_40
 38294  009976                     i2u1632_40:
 38295  009976  0E00               	movlw	0
 38296  009978                     i2u1633_40:
 38297  009978  6E01               	movwf	?i2_islower^0,c
 38298  00997A  6A02               	clrf	(?i2_islower+1)^0,c
 38299  00997C  0012               	return		;funcret
 38300  00997E                     __end_ofi2_islower:
 38301                           	opt callstack 0
 38302                           
 38303 ;; *************** function i2_isupper *****************
 38304 ;; Defined at:
 38305 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 38306 ;; Parameters:    Size  Location     Type
 38307 ;;  c               2    0[COMRAM] int 
 38308 ;; Auto vars:     Size  Location     Type
 38309 ;;		None
 38310 ;; Return value:  Size  Location     Type
 38311 ;;                  2    0[COMRAM] int 
 38312 ;; Registers used:
 38313 ;;		wreg, status,2, status,0
 38314 ;; Tracked objects:
 38315 ;;		On entry : 0/0
 38316 ;;		On exit  : 0/0
 38317 ;;		Unchanged: 0/0
 38318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38321 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38323 ;;Total ram usage:        6 bytes
 38324 ;; Hardware stack levels used:    1
 38325 ;; This function calls:
 38326 ;;		Nothing
 38327 ;; This function is called by:
 38328 ;;		i2_xtoa
 38329 ;; This function uses a non-reentrant model
 38330 ;;
 38331                           
 38332                           	psect	text229
 38333  00997E                     __ptext229:
 38334                           	opt callstack 0
 38335  00997E                     i2_isupper:
 38336                           	opt callstack 5
 38337                           
 38338                           ;incstack = 0
 38339  00997E  0EBF               	movlw	191
 38340  009980  6E03               	movwf	??i2_isupper^0,c
 38341  009982  0EFF               	movlw	255
 38342  009984  6E04               	movwf	(??i2_isupper+1)^0,c
 38343  009986  0060  F004  F005   	movff	i2isupper@c,??i2_isupper+2
 38344  00998C  0060  F008  F006   	movff	i2isupper@c+1,??i2_isupper+3
 38345  009992  5003               	movf	??i2_isupper^0,w,c
 38346  009994  2605               	addwf	(??i2_isupper+2)^0,f,c
 38347  009996  5004               	movf	(??i2_isupper+1)^0,w,c
 38348  009998  2206               	addwfc	(??i2_isupper+3)^0,f,c
 38349  00999A  5006               	movf	(??i2_isupper+3)^0,w,c
 38350  00999C  E106               	bnz	i2u1697_40
 38351  00999E  0E1A               	movlw	26
 38352  0099A0  5C05               	subwf	(??i2_isupper+2)^0,w,c
 38353  0099A2  B0D8               	btfsc	status,0,c
 38354  0099A4  D002               	goto	i2u1697_40
 38355  0099A6  0E01               	movlw	1
 38356  0099A8  D001               	goto	i2u1698_40
 38357  0099AA                     i2u1697_40:
 38358  0099AA  0E00               	movlw	0
 38359  0099AC                     i2u1698_40:
 38360  0099AC  6E01               	movwf	?i2_isupper^0,c
 38361  0099AE  6A02               	clrf	(?i2_isupper+1)^0,c
 38362  0099B0  0012               	return		;funcret
 38363  0099B2                     __end_ofi2_isupper:
 38364                           	opt callstack 0
 38365                           
 38366 ;; *************** function i2_isalpha *****************
 38367 ;; Defined at:
 38368 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 38369 ;; Parameters:    Size  Location     Type
 38370 ;;  c               2    0[COMRAM] int 
 38371 ;; Auto vars:     Size  Location     Type
 38372 ;;		None
 38373 ;; Return value:  Size  Location     Type
 38374 ;;                  2    0[COMRAM] int 
 38375 ;; Registers used:
 38376 ;;		wreg, status,2, status,0
 38377 ;; Tracked objects:
 38378 ;;		On entry : 0/0
 38379 ;;		On exit  : 0/0
 38380 ;;		Unchanged: 0/0
 38381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38384 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38385 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38386 ;;Total ram usage:        6 bytes
 38387 ;; Hardware stack levels used:    1
 38388 ;; This function calls:
 38389 ;;		Nothing
 38390 ;; This function is called by:
 38391 ;;		i2_xtoa
 38392 ;; This function uses a non-reentrant model
 38393 ;;
 38394                           
 38395                           	psect	text230
 38396  0099B2                     __ptext230:
 38397                           	opt callstack 0
 38398  0099B2                     i2_isalpha:
 38399                           	opt callstack 5
 38400                           
 38401                           ;incstack = 0
 38402  0099B2  0E9F               	movlw	159
 38403  0099B4  6E03               	movwf	??i2_isalpha^0,c
 38404  0099B6  0EFF               	movlw	255
 38405  0099B8  6E04               	movwf	(??i2_isalpha+1)^0,c
 38406  0099BA  0E20               	movlw	32
 38407  0099BC  1001               	iorwf	i2isalpha@c^0,w,c
 38408  0099BE  6E05               	movwf	(??i2_isalpha+2)^0,c
 38409  0099C0  0E00               	movlw	0
 38410  0099C2  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 38411  0099C4  6E06               	movwf	(??i2_isalpha+3)^0,c
 38412  0099C6  5003               	movf	??i2_isalpha^0,w,c
 38413  0099C8  2605               	addwf	(??i2_isalpha+2)^0,f,c
 38414  0099CA  5004               	movf	(??i2_isalpha+1)^0,w,c
 38415  0099CC  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 38416  0099CE  5006               	movf	(??i2_isalpha+3)^0,w,c
 38417  0099D0  E106               	bnz	i2u1691_40
 38418  0099D2  0E1A               	movlw	26
 38419  0099D4  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 38420  0099D6  B0D8               	btfsc	status,0,c
 38421  0099D8  D002               	goto	i2u1691_40
 38422  0099DA  0E01               	movlw	1
 38423  0099DC  D001               	goto	i2u1692_40
 38424  0099DE                     i2u1691_40:
 38425  0099DE  0E00               	movlw	0
 38426  0099E0                     i2u1692_40:
 38427  0099E0  6E01               	movwf	?i2_isalpha^0,c
 38428  0099E2  6A02               	clrf	(?i2_isalpha+1)^0,c
 38429  0099E4  0012               	return		;funcret
 38430  0099E6                     __end_ofi2_isalpha:
 38431                           	opt callstack 0
 38432                           
 38433 ;; *************** function i2_dtoa *****************
 38434 ;; Defined at:
 38435 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 38436 ;; Parameters:    Size  Location     Type
 38437 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 38438 ;;		 -> sprintf@f(6), NULL(0), 
 38439 ;;  d               8   31[COMRAM] long long 
 38440 ;; Auto vars:     Size  Location     Type
 38441 ;;  dtoa            8   55[COMRAM] long long 
 38442 ;;  dtoa            2   63[COMRAM] int 
 38443 ;;  dtoa            2   53[COMRAM] int 
 38444 ;;  dtoa            2   51[COMRAM] int 
 38445 ;;  dtoa            2   49[COMRAM] int 
 38446 ;; Return value:  Size  Location     Type
 38447 ;;                  2   29[COMRAM] int 
 38448 ;; Registers used:
 38449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38450 ;; Tracked objects:
 38451 ;;		On entry : 3F/0
 38452 ;;		On exit  : 0/0
 38453 ;;		Unchanged: 0/0
 38454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38455 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38456 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38457 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38458 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38459 ;;Total ram usage:       36 bytes
 38460 ;; Hardware stack levels used:    1
 38461 ;; Hardware stack levels required when called:    5
 38462 ;; This function calls:
 38463 ;;		i2___aodiv
 38464 ;;		i2___aomod
 38465 ;;		i2_abs
 38466 ;;		i2_pad
 38467 ;; This function is called by:
 38468 ;;		i2_vfpfcnvrt
 38469 ;; This function uses a non-reentrant model
 38470 ;;
 38471                           
 38472                           	psect	text231
 38473  005EBE                     __ptext231:
 38474                           	opt callstack 0
 38475  005EBE                     i2_dtoa:
 38476                           	opt callstack 1
 38477                           
 38478                           ; BSR set to: 0
 38479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 38480                           
 38481                           ;incstack = 0
 38482  005EBE  0060  F080  F038   	movff	i2dtoa@d,i2dtoa@n
 38483  005EC4  0060  F084  F039   	movff	i2dtoa@d+1,i2dtoa@n+1
 38484  005ECA  0060  F088  F03A   	movff	i2dtoa@d+2,i2dtoa@n+2
 38485  005ED0  0060  F08C  F03B   	movff	i2dtoa@d+3,i2dtoa@n+3
 38486  005ED6  0060  F090  F03C   	movff	i2dtoa@d+4,i2dtoa@n+4
 38487  005EDC  0060  F094  F03D   	movff	i2dtoa@d+5,i2dtoa@n+5
 38488  005EE2  0060  F098  F03E   	movff	i2dtoa@d+6,i2dtoa@n+6
 38489  005EE8  0060  F09C  F03F   	movff	i2dtoa@d+7,i2dtoa@n+7
 38490                           
 38491                           ; BSR set to: 0
 38492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 38493  005EEE  AE3F               	btfss	(i2dtoa@n+7)^0,7,c
 38494  005EF0  D002               	goto	i2u1715_40
 38495  005EF2  0E01               	movlw	1
 38496  005EF4  D001               	goto	i2u1716_40
 38497  005EF6                     i2u1715_40:
 38498  005EF6  0E00               	movlw	0
 38499  005EF8                     i2u1716_40:
 38500  005EF8  6E36               	movwf	i2dtoa@s^0,c
 38501  005EFA  6A37               	clrf	(i2dtoa@s+1)^0,c
 38502                           
 38503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 38504  005EFC  5036               	movf	i2dtoa@s^0,w,c
 38505  005EFE  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38506  005F00  B4D8               	btfsc	status,2,c
 38507  005F02  D010               	goto	i2l16785
 38508                           
 38509                           ; BSR set to: 0
 38510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 38511  005F04  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 38512  005F06  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 38513  005F08  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 38514  005F0A  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 38515  005F0C  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 38516  005F0E  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 38517  005F10  1E39               	comf	(i2dtoa@n+1)^0,f,c
 38518  005F12  6C38               	negf	i2dtoa@n^0,c
 38519  005F14  0E00               	movlw	0
 38520  005F16  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 38521  005F18  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 38522  005F1A  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 38523  005F1C  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 38524  005F1E  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 38525  005F20  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 38526  005F22  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 38527  005F24                     i2l16785:
 38528                           
 38529                           ; BSR set to: 0
 38530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 38531  005F24  AFB5               	btfss	(_prec+1)& (0+255),7,b
 38532                           
 38533                           ; BSR set to: 0
 38534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 38535  005F26  93B6               	bcf	_flags& (0+255),1,b
 38536                           
 38537                           ; BSR set to: 0
 38538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 38539  005F28  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 38540  005F2A  D005               	goto	i2u1719_40
 38541  005F2C  51B5               	movf	(_prec+1)& (0+255),w,b
 38542  005F2E  E108               	bnz	i2l3085
 38543  005F30  05B4               	decf	_prec& (0+255),w,b
 38544  005F32  B0D8               	btfsc	status,0,c
 38545  005F34  D005               	goto	i2l3085
 38546  005F36                     i2u1719_40:
 38547                           
 38548                           ; BSR set to: 0
 38549  005F36  0E00               	movlw	0
 38550  005F38  6E33               	movwf	(i2dtoa@p+1)^0,c
 38551  005F3A  0E01               	movlw	1
 38552  005F3C  6E32               	movwf	i2dtoa@p^0,c
 38553  005F3E  D006               	goto	i2l3087
 38554  005F40                     i2l3085:
 38555                           
 38556                           ; BSR set to: 0
 38557  005F40  0060  F2D0  F032   	movff	_prec,i2dtoa@p
 38558  005F46  0060  F2D4  F033   	movff	_prec+1,i2dtoa@p+1
 38559  005F4C                     i2l3087:
 38560                           
 38561                           ; BSR set to: 0
 38562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 38563  005F4C  0060  F2C8  F034   	movff	_width,i2dtoa@w
 38564  005F52  0060  F2CC  F035   	movff	_width+1,i2dtoa@w+1
 38565                           
 38566                           ; BSR set to: 0
 38567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 38568  005F58  5036               	movf	i2dtoa@s^0,w,c
 38569  005F5A  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38570  005F5C  A4D8               	btfss	status,2,c
 38571  005F5E  D002               	goto	i2u1721_40
 38572                           
 38573                           ; BSR set to: 0
 38574  005F60  A5B6               	btfss	_flags& (0+255),2,b
 38575  005F62  D003               	goto	i2l16799
 38576  005F64                     i2u1721_40:
 38577                           
 38578                           ; BSR set to: 0
 38579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 38580  005F64  0634               	decf	i2dtoa@w^0,f,c
 38581  005F66  A0D8               	btfss	status,0,c
 38582  005F68  0635               	decf	(i2dtoa@w+1)^0,f,c
 38583  005F6A                     i2l16799:
 38584                           
 38585                           ; BSR set to: 0
 38586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 38587  005F6A  0E00               	movlw	0
 38588  005F6C  6E41               	movwf	(i2dtoa@i+1)^0,c
 38589  005F6E  0E1F               	movlw	31
 38590  005F70  6E40               	movwf	i2dtoa@i^0,c
 38591                           
 38592                           ; BSR set to: 0
 38593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 38594  005F72  0E00               	movlw	0
 38595  005F74  0102               	movlb	2	; () banked
 38596  005F76  6F72               	movwf	(_dbuf+31)& (0+255),b
 38597                           
 38598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38599  005F78  D09E               	goto	i2l16813
 38600  005F7A                     i2l16803:
 38601                           
 38602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 38603  005F7A  0640               	decf	i2dtoa@i^0,f,c
 38604  005F7C  A0D8               	btfss	status,0,c
 38605  005F7E  0641               	decf	(i2dtoa@i+1)^0,f,c
 38606                           
 38607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 38608  005F80  0E53               	movlw	low _dbuf
 38609  005F82  2440               	addwf	i2dtoa@i^0,w,c
 38610  005F84  6ED9               	movwf	fsr2l,c
 38611  005F86  0E02               	movlw	high _dbuf
 38612  005F88  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 38613  005F8A  6EDA               	movwf	fsr2h,c
 38614  005F8C  0060  F0E0  F001   	movff	i2dtoa@n,i2___aomod@dividend
 38615  005F92  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aomod@dividend+1
 38616  005F98  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aomod@dividend+2
 38617  005F9E  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aomod@dividend+3
 38618  005FA4  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aomod@dividend+4
 38619  005FAA  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aomod@dividend+5
 38620  005FB0  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aomod@dividend+6
 38621  005FB6  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aomod@dividend+7
 38622  005FBC  0E0A               	movlw	10
 38623  005FBE  6E09               	movwf	i2___aomod@divisor^0,c
 38624  005FC0  0E00               	movlw	0
 38625  005FC2  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 38626  005FC4  0E00               	movlw	0
 38627  005FC6  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 38628  005FC8  0E00               	movlw	0
 38629  005FCA  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 38630  005FCC  0E00               	movlw	0
 38631  005FCE  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 38632  005FD0  0E00               	movlw	0
 38633  005FD2  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 38634  005FD4  0E00               	movlw	0
 38635  005FD6  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 38636  005FD8  0E00               	movlw	0
 38637  005FDA  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 38638  005FDC  ECC1  F03A         	call	i2___aomod	;wreg free
 38639  005FE0  0060  F004  F028   	movff	?i2___aomod,??i2_dtoa
 38640  005FE6  0060  F008  F029   	movff	?i2___aomod+1,??i2_dtoa+1
 38641  005FEC  0060  F00C  F02A   	movff	?i2___aomod+2,??i2_dtoa+2
 38642  005FF2  0060  F010  F02B   	movff	?i2___aomod+3,??i2_dtoa+3
 38643  005FF8  0060  F014  F02C   	movff	?i2___aomod+4,??i2_dtoa+4
 38644  005FFE  0060  F018  F02D   	movff	?i2___aomod+5,??i2_dtoa+5
 38645  006004  0060  F01C  F02E   	movff	?i2___aomod+6,??i2_dtoa+6
 38646  00600A  0060  F020  F02F   	movff	?i2___aomod+7,??i2_dtoa+7
 38647  006010  0060  F0A0  F013   	movff	??i2_dtoa,i2abs@a
 38648  006016  0060  F0A8  F014   	movff	??i2_dtoa+2,i2abs@a+1
 38649  00601C  EC36  F04B         	call	i2_abs	;wreg free
 38650  006020  5013               	movf	?i2_abs^0,w,c
 38651  006022  0F30               	addlw	48
 38652  006024  6EDF               	movwf	indf2,c
 38653                           
 38654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 38655  006026  0632               	decf	i2dtoa@p^0,f,c
 38656  006028  A0D8               	btfss	status,0,c
 38657  00602A  0633               	decf	(i2dtoa@p+1)^0,f,c
 38658                           
 38659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 38660  00602C  0634               	decf	i2dtoa@w^0,f,c
 38661  00602E  A0D8               	btfss	status,0,c
 38662  006030  0635               	decf	(i2dtoa@w+1)^0,f,c
 38663                           
 38664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 38665  006032  0060  F0E0  F001   	movff	i2dtoa@n,i2___aodiv@dividend
 38666  006038  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 38667  00603E  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 38668  006044  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 38669  00604A  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 38670  006050  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 38671  006056  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 38672  00605C  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 38673  006062  0E0A               	movlw	10
 38674  006064  6E09               	movwf	i2___aodiv@divisor^0,c
 38675  006066  0E00               	movlw	0
 38676  006068  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 38677  00606A  0E00               	movlw	0
 38678  00606C  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 38679  00606E  0E00               	movlw	0
 38680  006070  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 38681  006072  0E00               	movlw	0
 38682  006074  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 38683  006076  0E00               	movlw	0
 38684  006078  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 38685  00607A  0E00               	movlw	0
 38686  00607C  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 38687  00607E  0E00               	movlw	0
 38688  006080  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 38689  006082  EC7B  F039         	call	i2___aodiv	;wreg free
 38690  006086  0060  F004  F038   	movff	?i2___aodiv,i2dtoa@n
 38691  00608C  0060  F008  F039   	movff	?i2___aodiv+1,i2dtoa@n+1
 38692  006092  0060  F00C  F03A   	movff	?i2___aodiv+2,i2dtoa@n+2
 38693  006098  0060  F010  F03B   	movff	?i2___aodiv+3,i2dtoa@n+3
 38694  00609E  0060  F014  F03C   	movff	?i2___aodiv+4,i2dtoa@n+4
 38695  0060A4  0060  F018  F03D   	movff	?i2___aodiv+5,i2dtoa@n+5
 38696  0060AA  0060  F01C  F03E   	movff	?i2___aodiv+6,i2dtoa@n+6
 38697  0060B0  0060  F020  F03F   	movff	?i2___aodiv+7,i2dtoa@n+7
 38698  0060B6                     i2l16813:
 38699                           
 38700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38701  0060B6  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 38702  0060B8  D020               	goto	i2u1726_40
 38703  0060BA  5041               	movf	(i2dtoa@i+1)^0,w,c
 38704  0060BC  E103               	bnz	i2u1722_40
 38705  0060BE  0440               	decf	i2dtoa@i^0,w,c
 38706  0060C0  A0D8               	btfss	status,0,c
 38707  0060C2  D01B               	goto	i2u1726_40
 38708  0060C4                     i2u1722_40:
 38709  0060C4  5038               	movf	i2dtoa@n^0,w,c
 38710  0060C6  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 38711  0060C8  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 38712  0060CA  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 38713  0060CC  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 38714  0060CE  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 38715  0060D0  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 38716  0060D2  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 38717  0060D4  A4D8               	btfss	status,2,c
 38718  0060D6  D751               	goto	i2l16803
 38719  0060D8  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 38720  0060DA  D005               	goto	i2u1724_40
 38721  0060DC  5033               	movf	(i2dtoa@p+1)^0,w,c
 38722  0060DE  E102               	bnz	i2u1724_41
 38723  0060E0  0432               	decf	i2dtoa@p^0,w,c
 38724  0060E2  B0D8               	btfsc	status,0,c
 38725  0060E4                     i2u1724_41:
 38726  0060E4  D74A               	goto	i2l16803
 38727  0060E6                     i2u1724_40:
 38728  0060E6  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 38729  0060E8  D008               	goto	i2u1726_40
 38730  0060EA  5035               	movf	(i2dtoa@w+1)^0,w,c
 38731  0060EC  E103               	bnz	i2u1725_40
 38732  0060EE  0434               	decf	i2dtoa@w^0,w,c
 38733  0060F0  A0D8               	btfss	status,0,c
 38734  0060F2  D003               	goto	i2u1726_40
 38735  0060F4                     i2u1725_40:
 38736  0060F4  0100               	movlb	0	; () banked
 38737  0060F6  B3B6               	btfsc	_flags& (0+255),1,b
 38738  0060F8  D740               	goto	i2l16803
 38739  0060FA                     i2u1726_40:
 38740                           
 38741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 38742  0060FA  5036               	movf	i2dtoa@s^0,w,c
 38743  0060FC  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38744  0060FE  A4D8               	btfss	status,2,c
 38745  006100  D003               	goto	i2u1728_40
 38746  006102  0100               	movlb	0	; () banked
 38747  006104  A5B6               	btfss	_flags& (0+255),2,b
 38748  006106  D018               	goto	i2l16837
 38749  006108                     i2u1728_40:
 38750                           
 38751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 38752  006108  0640               	decf	i2dtoa@i^0,f,c
 38753  00610A  A0D8               	btfss	status,0,c
 38754  00610C  0641               	decf	(i2dtoa@i+1)^0,f,c
 38755                           
 38756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 38757  00610E  5036               	movf	i2dtoa@s^0,w,c
 38758  006110  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38759  006112  A4D8               	btfss	status,2,c
 38760  006114  D004               	goto	i2l16833
 38761  006116  0E00               	movlw	0
 38762  006118  6E31               	movwf	(i2_dtoa$4891+1)^0,c
 38763  00611A  0E2B               	movlw	43
 38764  00611C  D003               	goto	L63
 38765  00611E                     i2l16833:
 38766  00611E  0E00               	movlw	0
 38767  006120  6E31               	movwf	(i2_dtoa$4891+1)^0,c
 38768  006122  0E2D               	movlw	45
 38769  006124                     L63:
 38770  006124  6E30               	movwf	i2_dtoa$4891^0,c
 38771  006126  0E53               	movlw	low _dbuf
 38772  006128  2440               	addwf	i2dtoa@i^0,w,c
 38773  00612A  6ED9               	movwf	fsr2l,c
 38774  00612C  0E02               	movlw	high _dbuf
 38775  00612E  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 38776  006130  6EDA               	movwf	fsr2h,c
 38777  006132  0060  F0C3  FFDF   	movff	i2_dtoa$4891,indf2
 38778  006138                     i2l16837:
 38779                           
 38780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 38781  006138  0060  F078  F013   	movff	i2dtoa@fp,i2pad@fp
 38782  00613E  0060  F07C  F014   	movff	i2dtoa@fp+1,i2pad@fp+1
 38783  006144  0E53               	movlw	low _dbuf
 38784  006146  2440               	addwf	i2dtoa@i^0,w,c
 38785  006148  6E15               	movwf	i2pad@buf^0,c
 38786  00614A  0E02               	movlw	high _dbuf
 38787  00614C  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 38788  00614E  6E16               	movwf	(i2pad@buf+1)^0,c
 38789  006150  0060  F0D0  F017   	movff	i2dtoa@w,i2pad@p
 38790  006156  0060  F0D4  F018   	movff	i2dtoa@w+1,i2pad@p+1
 38791  00615C  EC6E  F03F         	call	i2_pad	;wreg free
 38792  006160  0060  F04C  F01E   	movff	?i2_pad,?i2_dtoa
 38793  006166  0060  F050  F01F   	movff	?i2_pad+1,?i2_dtoa+1
 38794  00616C  0012               	return		;funcret
 38795  00616E                     __end_ofi2_dtoa:
 38796                           	opt callstack 0
 38797                           
 38798 ;; *************** function i2_pad *****************
 38799 ;; Defined at:
 38800 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 38801 ;; Parameters:    Size  Location     Type
 38802 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 38803 ;;		 -> sprintf@f(6), NULL(0), 
 38804 ;;  buf             2   20[COMRAM] PTR unsigned char 
 38805 ;;		 -> dbuf(32), 
 38806 ;;  p               2   22[COMRAM] int 
 38807 ;; Auto vars:     Size  Location     Type
 38808 ;;  pad             2   27[COMRAM] int 
 38809 ;;  pad             2   25[COMRAM] int 
 38810 ;; Return value:  Size  Location     Type
 38811 ;;                  2   18[COMRAM] int 
 38812 ;; Registers used:
 38813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38814 ;; Tracked objects:
 38815 ;;		On entry : 0/0
 38816 ;;		On exit  : 0/0
 38817 ;;		Unchanged: 0/0
 38818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38819 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38822 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38823 ;;Total ram usage:       11 bytes
 38824 ;; Hardware stack levels used:    1
 38825 ;; Hardware stack levels required when called:    4
 38826 ;; This function calls:
 38827 ;;		i2_fputc
 38828 ;;		i2_fputs
 38829 ;;		i2_strlen
 38830 ;; This function is called by:
 38831 ;;		i2_dtoa
 38832 ;;		i2_xtoa
 38833 ;; This function uses a non-reentrant model
 38834 ;;
 38835                           
 38836                           	psect	text232
 38837  007EDC                     __ptext232:
 38838                           	opt callstack 0
 38839  007EDC                     i2_pad:
 38840                           	opt callstack 1
 38841                           
 38842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 38843                           
 38844                           ;incstack = 0
 38845  007EDC  0100               	movlb	0	; () banked
 38846  007EDE  A1B6               	btfss	_flags& (0+255),0,b
 38847  007EE0  D00E               	goto	i2l16527
 38848                           
 38849                           ; BSR set to: 0
 38850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 38851  007EE2  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 38852  007EE8  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 38853  007EEE  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 38854  007EF4  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 38855  007EFA  EC17  F04B         	call	i2_fputs	;wreg free
 38856  007EFE                     i2l16527:
 38857                           
 38858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 38859  007EFE  BE18               	btfsc	(i2pad@p+1)^0,7,c
 38860  007F00  D007               	goto	i2l16531
 38861  007F02  0060  F05C  F01C   	movff	i2pad@p,i2pad@w
 38862  007F08  0060  F060  F01D   	movff	i2pad@p+1,i2pad@w+1
 38863  007F0E  D004               	goto	i2l3074
 38864  007F10                     i2l16531:
 38865  007F10  0E00               	movlw	0
 38866  007F12  6E1D               	movwf	(i2pad@w+1)^0,c
 38867  007F14  0E00               	movlw	0
 38868  007F16  6E1C               	movwf	i2pad@w^0,c
 38869  007F18                     i2l3074:
 38870                           
 38871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 38872  007F18  0E00               	movlw	0
 38873  007F1A  6E1B               	movwf	(i2pad@i+1)^0,c
 38874  007F1C  0E00               	movlw	0
 38875  007F1E  6E1A               	movwf	i2pad@i^0,c
 38876                           
 38877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 38878  007F20  D00E               	goto	i2l16537
 38879  007F22                     i2l16533:
 38880                           
 38881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 38882  007F22  0E00               	movlw	0
 38883  007F24  6E04               	movwf	(i2fputc@c+1)^0,c
 38884  007F26  0E20               	movlw	32
 38885  007F28  6E03               	movwf	i2fputc@c^0,c
 38886  007F2A  0060  F04C  F005   	movff	i2pad@fp,i2fputc@fp
 38887  007F30  0060  F050  F006   	movff	i2pad@fp+1,i2fputc@fp+1
 38888  007F36  ECD2  F040         	call	i2_fputc	;wreg free
 38889                           
 38890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 38891  007F3A  4A1A               	infsnz	i2pad@i^0,f,c
 38892  007F3C  2A1B               	incf	(i2pad@i+1)^0,f,c
 38893  007F3E                     i2l16537:
 38894                           
 38895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 38896  007F3E  501C               	movf	i2pad@w^0,w,c
 38897  007F40  5C1A               	subwf	i2pad@i^0,w,c
 38898  007F42  501B               	movf	(i2pad@i+1)^0,w,c
 38899  007F44  0A80               	xorlw	128
 38900  007F46  6E19               	movwf	??i2_pad^0,c
 38901  007F48  501D               	movf	(i2pad@w+1)^0,w,c
 38902  007F4A  0A80               	xorlw	128
 38903  007F4C  5819               	subwfb	??i2_pad^0,w,c
 38904  007F4E  A0D8               	btfss	status,0,c
 38905  007F50  D7E8               	goto	i2l16533
 38906                           
 38907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 38908  007F52  0100               	movlb	0	; () banked
 38909  007F54  B1B6               	btfsc	_flags& (0+255),0,b
 38910  007F56  D00E               	goto	i2l16541
 38911                           
 38912                           ; BSR set to: 0
 38913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 38914  007F58  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 38915  007F5E  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 38916  007F64  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 38917  007F6A  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 38918  007F70  EC17  F04B         	call	i2_fputs	;wreg free
 38919  007F74                     i2l16541:
 38920                           
 38921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 38922  007F74  0060  F054  F001   	movff	i2pad@buf,i2strlen@s
 38923  007F7A  0060  F058  F002   	movff	i2pad@buf+1,i2strlen@s+1
 38924  007F80  EC71  F04D         	call	i2_strlen	;wreg free
 38925  007F84  501C               	movf	i2pad@w^0,w,c
 38926  007F86  2401               	addwf	?i2_strlen^0,w,c
 38927  007F88  6E13               	movwf	?i2_pad^0,c
 38928  007F8A  501D               	movf	(i2pad@w+1)^0,w,c
 38929  007F8C  2002               	addwfc	(?i2_strlen+1)^0,w,c
 38930  007F8E  6E14               	movwf	(?i2_pad+1)^0,c
 38931  007F90  0012               	return		;funcret
 38932  007F92                     __end_ofi2_pad:
 38933                           	opt callstack 0
 38934                           
 38935 ;; *************** function i2_strlen *****************
 38936 ;; Defined at:
 38937 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 38938 ;; Parameters:    Size  Location     Type
 38939 ;;  s               2    0[COMRAM] PTR const unsigned char 
 38940 ;;		 -> dbuf(32), 
 38941 ;; Auto vars:     Size  Location     Type
 38942 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 38943 ;;		 -> dbuf(32), 
 38944 ;; Return value:  Size  Location     Type
 38945 ;;                  2    0[COMRAM] unsigned int 
 38946 ;; Registers used:
 38947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38948 ;; Tracked objects:
 38949 ;;		On entry : 0/0
 38950 ;;		On exit  : 0/0
 38951 ;;		Unchanged: 0/0
 38952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38957 ;;Total ram usage:        4 bytes
 38958 ;; Hardware stack levels used:    1
 38959 ;; This function calls:
 38960 ;;		Nothing
 38961 ;; This function is called by:
 38962 ;;		i2_pad
 38963 ;; This function uses a non-reentrant model
 38964 ;;
 38965                           
 38966                           	psect	text233
 38967  009AE2                     __ptext233:
 38968                           	opt callstack 0
 38969  009AE2                     i2_strlen:
 38970                           	opt callstack 4
 38971                           
 38972                           ;incstack = 0
 38973  009AE2  0060  F004  F003   	movff	i2strlen@s,i2strlen@a
 38974  009AE8  0060  F008  F004   	movff	i2strlen@s+1,i2strlen@a+1
 38975  009AEE  D002               	goto	i2l16343
 38976  009AF0                     i2l16341:
 38977  009AF0  4A01               	infsnz	i2strlen@s^0,f,c
 38978  009AF2  2A02               	incf	(i2strlen@s+1)^0,f,c
 38979  009AF4                     i2l16343:
 38980  009AF4  0060  F007  FFD9   	movff	i2strlen@s,fsr2l
 38981  009AFA  0060  F00B  FFDA   	movff	i2strlen@s+1,fsr2h
 38982  009B00  50DF               	movf	indf2,w,c
 38983  009B02  A4D8               	btfss	status,2,c
 38984  009B04  D7F5               	goto	i2l16341
 38985  009B06  5003               	movf	i2strlen@a^0,w,c
 38986  009B08  5C01               	subwf	i2strlen@s^0,w,c
 38987  009B0A  6E01               	movwf	?i2_strlen^0,c
 38988  009B0C  5004               	movf	(i2strlen@a+1)^0,w,c
 38989  009B0E  5802               	subwfb	(i2strlen@s+1)^0,w,c
 38990  009B10  6E02               	movwf	(?i2_strlen+1)^0,c
 38991  009B12  0012               	return		;funcret
 38992  009B14                     __end_ofi2_strlen:
 38993                           	opt callstack 0
 38994                           
 38995 ;; *************** function i2_fputs *****************
 38996 ;; Defined at:
 38997 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 38998 ;; Parameters:    Size  Location     Type
 38999 ;;  s               2   11[COMRAM] PTR const unsigned char 
 39000 ;;		 -> dbuf(32), 
 39001 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 39002 ;;		 -> sprintf@f(6), NULL(0), 
 39003 ;; Auto vars:     Size  Location     Type
 39004 ;;  fputs           2   16[COMRAM] int 
 39005 ;;  fputs           1   15[COMRAM] unsigned char 
 39006 ;; Return value:  Size  Location     Type
 39007 ;;                  2   11[COMRAM] int 
 39008 ;; Registers used:
 39009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39010 ;; Tracked objects:
 39011 ;;		On entry : 3F/0
 39012 ;;		On exit  : 0/0
 39013 ;;		Unchanged: 0/0
 39014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39016 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39018 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39019 ;;Total ram usage:        7 bytes
 39020 ;; Hardware stack levels used:    1
 39021 ;; Hardware stack levels required when called:    3
 39022 ;; This function calls:
 39023 ;;		i2_fputc
 39024 ;; This function is called by:
 39025 ;;		i2_pad
 39026 ;; This function uses a non-reentrant model
 39027 ;;
 39028                           
 39029                           	psect	text234
 39030  00962E                     __ptext234:
 39031                           	opt callstack 0
 39032  00962E                     i2_fputs:
 39033                           	opt callstack 1
 39034                           
 39035                           ; BSR set to: 0
 39036                           
 39037                           ;incstack = 0
 39038  00962E  0E00               	movlw	0
 39039  009630  6E12               	movwf	(i2fputs@i+1)^0,c
 39040  009632  0E00               	movlw	0
 39041  009634  6E11               	movwf	i2fputs@i^0,c
 39042  009636  D00E               	goto	i2l16337
 39043  009638                     i2l16333:
 39044  009638  0060  F040  F003   	movff	i2fputs@c,i2fputc@c
 39045  00963E  6A04               	clrf	(i2fputc@c+1)^0,c
 39046  009640  0060  F038  F005   	movff	i2fputs@fp,i2fputc@fp
 39047  009646  0060  F03C  F006   	movff	i2fputs@fp+1,i2fputc@fp+1
 39048  00964C  ECD2  F040         	call	i2_fputc	;wreg free
 39049  009650  4A11               	infsnz	i2fputs@i^0,f,c
 39050  009652  2A12               	incf	(i2fputs@i+1)^0,f,c
 39051  009654                     i2l16337:
 39052  009654  5011               	movf	i2fputs@i^0,w,c
 39053  009656  240C               	addwf	i2fputs@s^0,w,c
 39054  009658  6ED9               	movwf	fsr2l,c
 39055  00965A  5012               	movf	(i2fputs@i+1)^0,w,c
 39056  00965C  200D               	addwfc	(i2fputs@s+1)^0,w,c
 39057  00965E  6EDA               	movwf	fsr2h,c
 39058  009660  50DF               	movf	indf2,w,c
 39059  009662  6E10               	movwf	i2fputs@c^0,c
 39060  009664  5010               	movf	i2fputs@c^0,w,c
 39061  009666  B4D8               	btfsc	status,2,c
 39062  009668  0012               	return	
 39063  00966A  D7E6               	goto	i2l16333
 39064  00966C                     __end_ofi2_fputs:
 39065                           	opt callstack 0
 39066                           
 39067 ;; *************** function i2_fputc *****************
 39068 ;; Defined at:
 39069 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 39070 ;; Parameters:    Size  Location     Type
 39071 ;;  c               2    2[COMRAM] int 
 39072 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 39073 ;;		 -> sprintf@f(6), NULL(0), 
 39074 ;; Auto vars:     Size  Location     Type
 39075 ;;		None
 39076 ;; Return value:  Size  Location     Type
 39077 ;;                  2    2[COMRAM] int 
 39078 ;; Registers used:
 39079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39080 ;; Tracked objects:
 39081 ;;		On entry : 0/0
 39082 ;;		On exit  : 0/0
 39083 ;;		Unchanged: 0/0
 39084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39087 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39089 ;;Total ram usage:        9 bytes
 39090 ;; Hardware stack levels used:    1
 39091 ;; Hardware stack levels required when called:    2
 39092 ;; This function calls:
 39093 ;;		i2_putch
 39094 ;; This function is called by:
 39095 ;;		i2_pad
 39096 ;;		i2_vfpfcnvrt
 39097 ;;		i2_fputs
 39098 ;; This function uses a non-reentrant model
 39099 ;;
 39100                           
 39101                           	psect	text235
 39102  0081A4                     __ptext235:
 39103                           	opt callstack 0
 39104  0081A4                     i2_fputc:
 39105                           	opt callstack 1
 39106                           
 39107                           ;incstack = 0
 39108  0081A4  5005               	movf	i2fputc@fp^0,w,c
 39109  0081A6  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 39110  0081A8  B4D8               	btfsc	status,2,c
 39111  0081AA  D004               	goto	i2u1598_40
 39112  0081AC  5005               	movf	i2fputc@fp^0,w,c
 39113  0081AE  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 39114  0081B0  A4D8               	btfss	status,2,c
 39115  0081B2  D004               	goto	i2l16177
 39116  0081B4                     i2u1598_40:
 39117  0081B4  5003               	movf	i2fputc@c^0,w,c
 39118  0081B6  EC68  F051         	call	i2_putch
 39119  0081BA  0012               	return	
 39120  0081BC                     i2l16177:
 39121  0081BC  EE20 F004          	lfsr	2,4
 39122  0081C0  5005               	movf	i2fputc@fp^0,w,c
 39123  0081C2  26D9               	addwf	fsr2l,f,c
 39124  0081C4  5006               	movf	(i2fputc@fp+1)^0,w,c
 39125  0081C6  22DA               	addwfc	fsr2h,f,c
 39126  0081C8  50DE               	movf	postinc2,w,c
 39127  0081CA  10DE               	iorwf	postinc2,w,c
 39128  0081CC  B4D8               	btfsc	status,2,c
 39129  0081CE  D016               	goto	i2u1600_40
 39130  0081D0  EE20 F004          	lfsr	2,4
 39131  0081D4  5005               	movf	i2fputc@fp^0,w,c
 39132  0081D6  26D9               	addwf	fsr2l,f,c
 39133  0081D8  5006               	movf	(i2fputc@fp+1)^0,w,c
 39134  0081DA  22DA               	addwfc	fsr2h,f,c
 39135  0081DC  EE10 F002          	lfsr	1,2
 39136  0081E0  5005               	movf	i2fputc@fp^0,w,c
 39137  0081E2  26E1               	addwf	fsr1l,f,c
 39138  0081E4  5006               	movf	(i2fputc@fp+1)^0,w,c
 39139  0081E6  22E2               	addwfc	fsr1h,f,c
 39140  0081E8  50DE               	movf	postinc2,w,c
 39141  0081EA  5CE6               	subwf	postinc1,w,c
 39142  0081EC  50E6               	movf	postinc1,w,c
 39143  0081EE  0A80               	xorlw	128
 39144  0081F0  6E0B               	movwf	(??i2_fputc+4)^0,c
 39145  0081F2  50DE               	movf	postinc2,w,c
 39146  0081F4  0A80               	xorlw	128
 39147  0081F6  580B               	subwfb	(??i2_fputc+4)^0,w,c
 39148  0081F8  B0D8               	btfsc	status,0,c
 39149  0081FA  0012               	return	
 39150  0081FC                     i2u1600_40:
 39151  0081FC  EE20 F002          	lfsr	2,2
 39152  008200  5005               	movf	i2fputc@fp^0,w,c
 39153  008202  26D9               	addwf	fsr2l,f,c
 39154  008204  5006               	movf	(i2fputc@fp+1)^0,w,c
 39155  008206  22DA               	addwfc	fsr2h,f,c
 39156  008208  006F FF78  F007    	movff	postinc2,??i2_fputc
 39157  00820E  006F FF74  F008    	movff	postdec2,??i2_fputc+1
 39158  008214  0060  F017  FFD9   	movff	i2fputc@fp,fsr2l
 39159  00821A  0060  F01B  FFDA   	movff	i2fputc@fp+1,fsr2h
 39160  008220  006F FF78  F009    	movff	postinc2,??i2_fputc+2
 39161  008226  006F FF74  F00A    	movff	postdec2,??i2_fputc+3
 39162  00822C  5007               	movf	??i2_fputc^0,w,c
 39163  00822E  2409               	addwf	(??i2_fputc+2)^0,w,c
 39164  008230  6ED9               	movwf	fsr2l,c
 39165  008232  5008               	movf	(??i2_fputc+1)^0,w,c
 39166  008234  200A               	addwfc	(??i2_fputc+3)^0,w,c
 39167  008236  6EDA               	movwf	fsr2h,c
 39168  008238  0060  F00F  FFDF   	movff	i2fputc@c,indf2
 39169  00823E  EE20 F002          	lfsr	2,2
 39170  008242  5005               	movf	i2fputc@fp^0,w,c
 39171  008244  26D9               	addwf	fsr2l,f,c
 39172  008246  5006               	movf	(i2fputc@fp+1)^0,w,c
 39173  008248  22DA               	addwfc	fsr2h,f,c
 39174  00824A  2ADE               	incf	postinc2,f,c
 39175  00824C  0E00               	movlw	0
 39176  00824E  22DD               	addwfc	postdec2,f,c
 39177  008250  0012               	return		;funcret
 39178  008252                     __end_ofi2_fputc:
 39179                           	opt callstack 0
 39180                           
 39181 ;; *************** function i2_putch *****************
 39182 ;; Defined at:
 39183 ;;		line 23 in file "main.c"
 39184 ;; Parameters:    Size  Location     Type
 39185 ;;  byte            1    wreg     unsigned char 
 39186 ;; Auto vars:     Size  Location     Type
 39187 ;;  byte            1    1[COMRAM] unsigned char 
 39188 ;; Return value:  Size  Location     Type
 39189 ;;                  1    wreg      void 
 39190 ;; Registers used:
 39191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39192 ;; Tracked objects:
 39193 ;;		On entry : 0/0
 39194 ;;		On exit  : 3F/39
 39195 ;;		Unchanged: 0/0
 39196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39201 ;;Total ram usage:        1 bytes
 39202 ;; Hardware stack levels used:    1
 39203 ;; Hardware stack levels required when called:    1
 39204 ;; This function calls:
 39205 ;;		i2_UART1_Write
 39206 ;;		i2_UART1_is_tx_ready
 39207 ;; This function is called by:
 39208 ;;		i2_fputc
 39209 ;; This function uses a non-reentrant model
 39210 ;;
 39211                           
 39212                           	psect	text236
 39213  00A2D0                     __ptext236:
 39214                           	opt callstack 0
 39215  00A2D0                     i2_putch:
 39216                           	opt callstack 1
 39217                           
 39218                           ;incstack = 0
 39219                           ;i2putch@byte stored from wreg
 39220  00A2D0  6E02               	movwf	i2putch@byte^0,c
 39221  00A2D2                     
 39222                           ;main.c: 24:     while (!UART1_is_tx_ready());
 39223  00A2D2  ECC7  F051         	call	i2_UART1_is_tx_ready	;wreg free
 39224  00A2D6  0900               	iorlw	0
 39225  00A2D8  B4D8               	btfsc	status,2,c
 39226  00A2DA  D7FB               	goto	i2l16143
 39227                           
 39228                           ; BSR set to: 0
 39229                           ;main.c: 25:     UART1_Write(byte);
 39230  00A2DC  5002               	movf	i2putch@byte^0,w,c
 39231  00A2DE  EC97  F04A         	call	i2_UART1_Write
 39232                           
 39233                           ; BSR set to: 57
 39234  00A2E2  0012               	return		;funcret
 39235  00A2E4                     __end_ofi2_putch:
 39236                           	opt callstack 0
 39237                           
 39238 ;; *************** function i2_UART1_is_tx_ready *****************
 39239 ;; Defined at:
 39240 ;;		line 152 in file "mcc_generated_files/uart1.c"
 39241 ;; Parameters:    Size  Location     Type
 39242 ;;		None
 39243 ;; Auto vars:     Size  Location     Type
 39244 ;;		None
 39245 ;; Return value:  Size  Location     Type
 39246 ;;                  1    wreg      _Bool 
 39247 ;; Registers used:
 39248 ;;		wreg, status,2
 39249 ;; Tracked objects:
 39250 ;;		On entry : 0/0
 39251 ;;		On exit  : 3F/0
 39252 ;;		Unchanged: 0/0
 39253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39258 ;;Total ram usage:        0 bytes
 39259 ;; Hardware stack levels used:    1
 39260 ;; This function calls:
 39261 ;;		Nothing
 39262 ;; This function is called by:
 39263 ;;		i2_putch
 39264 ;; This function uses a non-reentrant model
 39265 ;;
 39266                           
 39267                           	psect	text237
 39268  00A38E                     __ptext237:
 39269                           	opt callstack 0
 39270  00A38E                     i2_UART1_is_tx_ready:
 39271                           	opt callstack 1
 39272                           
 39273                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 39274                           
 39275                           ; BSR set to: 57
 39276                           ;incstack = 0
 39277  00A38E  0100               	movlb	0	; () banked
 39278  00A390  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 39279  00A392  B4D8               	btfsc	status,2,c
 39280  00A394  D002               	goto	i2u1583_40
 39281  00A396  0E01               	movlw	1
 39282  00A398  0012               	return	
 39283  00A39A                     i2u1583_40:
 39284  00A39A  0E00               	movlw	0
 39285                           
 39286                           ; BSR set to: 0
 39287  00A39C  0012               	return		;funcret
 39288  00A39E                     __end_ofi2_UART1_is_tx_ready:
 39289                           	opt callstack 0
 39290                           
 39291 ;; *************** function i2_UART1_Write *****************
 39292 ;; Defined at:
 39293 ;;		line 191 in file "mcc_generated_files/uart1.c"
 39294 ;; Parameters:    Size  Location     Type
 39295 ;;  txData          1    wreg     unsigned char 
 39296 ;; Auto vars:     Size  Location     Type
 39297 ;;  txData          1    0[COMRAM] unsigned char 
 39298 ;; Return value:  Size  Location     Type
 39299 ;;                  1    wreg      void 
 39300 ;; Registers used:
 39301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39302 ;; Tracked objects:
 39303 ;;		On entry : 3F/0
 39304 ;;		On exit  : 3F/39
 39305 ;;		Unchanged: 0/0
 39306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39311 ;;Total ram usage:        1 bytes
 39312 ;; Hardware stack levels used:    1
 39313 ;; This function calls:
 39314 ;;		Nothing
 39315 ;; This function is called by:
 39316 ;;		i2_putch
 39317 ;; This function uses a non-reentrant model
 39318 ;;
 39319                           
 39320                           	psect	text238
 39321  00952E                     __ptext238:
 39322                           	opt callstack 0
 39323  00952E                     i2_UART1_Write:
 39324                           	opt callstack 1
 39325                           
 39326                           ; BSR set to: 0
 39327                           ;incstack = 0
 39328                           ;i2UART1_Write@txData stored from wreg
 39329  00952E  6E01               	movwf	i2UART1_Write@txData^0,c
 39330  009530                     
 39331                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 39332                           
 39333                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 39334  009530  0100               	movlb	0	; () banked
 39335  009532  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 39336  009534  B4D8               	btfsc	status,2,c
 39337  009536  D7FC               	goto	i2l16111
 39338                           
 39339                           ; BSR set to: 0
 39340                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 39341  009538  0139               	movlb	57	; () banked
 39342  00953A  B993               	btfsc	147,4,b	;volatile
 39343  00953C  D004               	goto	i2l456
 39344                           
 39345                           ; BSR set to: 57
 39346                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 39347  00953E  0060  F007  FDEA   	movff	i2UART1_Write@txData,15850	;volatile
 39348                           
 39349                           ;mcc_generated_files/uart1.c: 200:     }
 39350  009544  D012               	goto	i2l16127
 39351  009546                     i2l456:
 39352                           
 39353                           ; BSR set to: 57
 39354                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 39355  009546  9993               	bcf	147,4,b	;volatile
 39356                           
 39357                           ; BSR set to: 57
 39358                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 39359  009548  0E50               	movlw	low _uart1TxBuffer
 39360  00954A  0100               	movlb	0	; () banked
 39361  00954C  25CF               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 39362  00954E  6ED9               	movwf	fsr2l,c
 39363  009550  6ADA               	clrf	fsr2h,c
 39364  009552  0E03               	movlw	high _uart1TxBuffer
 39365  009554  22DA               	addwfc	fsr2h,f,c
 39366  009556  0060  F007  FFDF   	movff	i2UART1_Write@txData,indf2
 39367                           
 39368                           ; BSR set to: 0
 39369  00955C  2BCF               	incf	_uart1TxHead& (0+255),f,b	;volatile
 39370                           
 39371                           ; BSR set to: 0
 39372                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 39373  00955E  0E3F               	movlw	63
 39374  009560  65CF               	cpfsgt	_uart1TxHead& (0+255),b
 39375  009562  D002               	goto	i2l16125
 39376                           
 39377                           ; BSR set to: 0
 39378                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 39379  009564  0E00               	movlw	0
 39380  009566  6FCF               	movwf	_uart1TxHead& (0+255),b	;volatile
 39381  009568                     i2l16125:
 39382                           
 39383                           ; BSR set to: 0
 39384                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 39385  009568  07D4               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 39386  00956A                     i2l16127:
 39387                           
 39388                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 39389  00956A  0139               	movlb	57	; () banked
 39390  00956C  8993               	bsf	147,4,b	;volatile
 39391                           
 39392                           ; BSR set to: 57
 39393  00956E  0012               	return		;funcret
 39394  009570                     __end_ofi2_UART1_Write:
 39395                           	opt callstack 0
 39396                           
 39397 ;; *************** function i2_abs *****************
 39398 ;; Defined at:
 39399 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 39400 ;; Parameters:    Size  Location     Type
 39401 ;;  a               2   18[COMRAM] int 
 39402 ;; Auto vars:     Size  Location     Type
 39403 ;;		None
 39404 ;; Return value:  Size  Location     Type
 39405 ;;                  2   18[COMRAM] int 
 39406 ;; Registers used:
 39407 ;;		wreg, status,2, status,0
 39408 ;; Tracked objects:
 39409 ;;		On entry : 0/2
 39410 ;;		On exit  : 0/0
 39411 ;;		Unchanged: 0/0
 39412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39417 ;;Total ram usage:        4 bytes
 39418 ;; Hardware stack levels used:    1
 39419 ;; This function calls:
 39420 ;;		Nothing
 39421 ;; This function is called by:
 39422 ;;		i2_dtoa
 39423 ;; This function uses a non-reentrant model
 39424 ;;
 39425                           
 39426                           	psect	text239
 39427  00966C                     __ptext239:
 39428                           	opt callstack 0
 39429  00966C                     i2_abs:
 39430                           	opt callstack 5
 39431                           
 39432                           ; BSR set to: 57
 39433                           ;incstack = 0
 39434  00966C  BE14               	btfsc	(i2abs@a+1)^0,7,c
 39435  00966E  D005               	goto	i2u1690_40
 39436  009670  5014               	movf	(i2abs@a+1)^0,w,c
 39437  009672  E114               	bnz	i2l3852
 39438  009674  0413               	decf	i2abs@a^0,w,c
 39439  009676  B0D8               	btfsc	status,0,c
 39440  009678  D011               	goto	i2l3852
 39441  00967A                     i2u1690_40:
 39442  00967A  0060  F04C  F015   	movff	i2abs@a,??i2_abs
 39443  009680  0060  F050  F016   	movff	i2abs@a+1,??i2_abs+1
 39444  009686  1E15               	comf	??i2_abs^0,f,c
 39445  009688  1E16               	comf	(??i2_abs+1)^0,f,c
 39446  00968A  4A15               	infsnz	??i2_abs^0,f,c
 39447  00968C  2A16               	incf	(??i2_abs+1)^0,f,c
 39448  00968E  0060  F054  F013   	movff	??i2_abs,?i2_abs
 39449  009694  0060  F058  F014   	movff	??i2_abs+1,?i2_abs+1
 39450  00969A  0012               	return	
 39451  00969C                     i2l3852:
 39452  00969C  0060  F04C  F013   	movff	i2abs@a,?i2_abs
 39453  0096A2  0060  F050  F014   	movff	i2abs@a+1,?i2_abs+1
 39454  0096A8  0012               	return		;funcret
 39455  0096AA                     __end_ofi2_abs:
 39456                           	opt callstack 0
 39457                           
 39458 ;; *************** function i2___aomod *****************
 39459 ;; Defined at:
 39460 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 39461 ;; Parameters:    Size  Location     Type
 39462 ;;  dividend        8    0[COMRAM] long long 
 39463 ;;  divisor         8    8[COMRAM] long long 
 39464 ;; Auto vars:     Size  Location     Type
 39465 ;;  __aomod         1   17[COMRAM] unsigned char 
 39466 ;;  __aomod         1   16[COMRAM] unsigned char 
 39467 ;; Return value:  Size  Location     Type
 39468 ;;                  8    0[COMRAM] long long 
 39469 ;; Registers used:
 39470 ;;		wreg, status,2, status,0
 39471 ;; Tracked objects:
 39472 ;;		On entry : 0/2
 39473 ;;		On exit  : 0/0
 39474 ;;		Unchanged: 0/0
 39475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39476 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39479 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39480 ;;Total ram usage:       18 bytes
 39481 ;; Hardware stack levels used:    1
 39482 ;; This function calls:
 39483 ;;		Nothing
 39484 ;; This function is called by:
 39485 ;;		i2_dtoa
 39486 ;; This function uses a non-reentrant model
 39487 ;;
 39488                           
 39489                           	psect	text240
 39490  007582                     __ptext240:
 39491                           	opt callstack 0
 39492  007582                     i2___aomod:
 39493                           	opt callstack 5
 39494                           
 39495                           ;incstack = 0
 39496  007582  0E00               	movlw	0
 39497  007584  6E12               	movwf	i2___aomod@sign^0,c
 39498  007586  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
 39499  007588  D012               	goto	i2l16603
 39500  00758A  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 39501  00758C  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 39502  00758E  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 39503  007590  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 39504  007592  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 39505  007594  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 39506  007596  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 39507  007598  6C01               	negf	i2___aomod@dividend^0,c
 39508  00759A  0E00               	movlw	0
 39509  00759C  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 39510  00759E  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 39511  0075A0  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 39512  0075A2  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 39513  0075A4  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 39514  0075A6  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 39515  0075A8  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 39516  0075AA  0E01               	movlw	1
 39517  0075AC  6E12               	movwf	i2___aomod@sign^0,c
 39518  0075AE                     i2l16603:
 39519  0075AE  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 39520  0075B0  D010               	goto	i2l16607
 39521  0075B2  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 39522  0075B4  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 39523  0075B6  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 39524  0075B8  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 39525  0075BA  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 39526  0075BC  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 39527  0075BE  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 39528  0075C0  6C09               	negf	i2___aomod@divisor^0,c
 39529  0075C2  0E00               	movlw	0
 39530  0075C4  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 39531  0075C6  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 39532  0075C8  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 39533  0075CA  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 39534  0075CC  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 39535  0075CE  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 39536  0075D0  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 39537  0075D2                     i2l16607:
 39538  0075D2  5009               	movf	i2___aomod@divisor^0,w,c
 39539  0075D4  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 39540  0075D6  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 39541  0075D8  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 39542  0075DA  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 39543  0075DC  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 39544  0075DE  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 39545  0075E0  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 39546  0075E2  B4D8               	btfsc	status,2,c
 39547  0075E4  D03C               	goto	i2l16623
 39548  0075E6  0E01               	movlw	1
 39549  0075E8  6E11               	movwf	i2___aomod@counter^0,c
 39550  0075EA  D00A               	goto	i2l16613
 39551  0075EC                     i2l16611:
 39552  0075EC  90D8               	bcf	status,0,c
 39553  0075EE  3609               	rlcf	i2___aomod@divisor^0,f,c
 39554  0075F0  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 39555  0075F2  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 39556  0075F4  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 39557  0075F6  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 39558  0075F8  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 39559  0075FA  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 39560  0075FC  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 39561  0075FE  2A11               	incf	i2___aomod@counter^0,f,c
 39562  007600                     i2l16613:
 39563  007600  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 39564  007602  D7F4               	goto	i2l16611
 39565  007604                     i2u1687_40:
 39566  007604  5009               	movf	i2___aomod@divisor^0,w,c
 39567  007606  5C01               	subwf	i2___aomod@dividend^0,w,c
 39568  007608  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 39569  00760A  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 39570  00760C  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 39571  00760E  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 39572  007610  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 39573  007612  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 39574  007614  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 39575  007616  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 39576  007618  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 39577  00761A  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 39578  00761C  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 39579  00761E  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 39580  007620  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 39581  007622  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 39582  007624  A0D8               	btfss	status,0,c
 39583  007626  D010               	goto	i2l16619
 39584  007628  5009               	movf	i2___aomod@divisor^0,w,c
 39585  00762A  5E01               	subwf	i2___aomod@dividend^0,f,c
 39586  00762C  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 39587  00762E  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 39588  007630  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 39589  007632  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 39590  007634  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 39591  007636  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 39592  007638  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 39593  00763A  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 39594  00763C  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 39595  00763E  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 39596  007640  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 39597  007642  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 39598  007644  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 39599  007646  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 39600  007648                     i2l16619:
 39601  007648  90D8               	bcf	status,0,c
 39602  00764A  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 39603  00764C  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 39604  00764E  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 39605  007650  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 39606  007652  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 39607  007654  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 39608  007656  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 39609  007658  3209               	rrcf	i2___aomod@divisor^0,f,c
 39610  00765A  2E11               	decfsz	i2___aomod@counter^0,f,c
 39611  00765C  D7D3               	goto	i2u1687_40
 39612  00765E                     i2l16623:
 39613  00765E  5012               	movf	i2___aomod@sign^0,w,c
 39614  007660  B4D8               	btfsc	status,2,c
 39615  007662  D010               	goto	i2l16627
 39616  007664  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 39617  007666  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 39618  007668  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 39619  00766A  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 39620  00766C  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 39621  00766E  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 39622  007670  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 39623  007672  6C01               	negf	i2___aomod@dividend^0,c
 39624  007674  0E00               	movlw	0
 39625  007676  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 39626  007678  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 39627  00767A  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 39628  00767C  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 39629  00767E  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 39630  007680  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 39631  007682  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 39632  007684                     i2l16627:
 39633  007684  0060  F004  F001   	movff	i2___aomod@dividend,?i2___aomod
 39634  00768A  0060  F008  F002   	movff	i2___aomod@dividend+1,?i2___aomod+1
 39635  007690  0060  F00C  F003   	movff	i2___aomod@dividend+2,?i2___aomod+2
 39636  007696  0060  F010  F004   	movff	i2___aomod@dividend+3,?i2___aomod+3
 39637  00769C  0060  F014  F005   	movff	i2___aomod@dividend+4,?i2___aomod+4
 39638  0076A2  0060  F018  F006   	movff	i2___aomod@dividend+5,?i2___aomod+5
 39639  0076A8  0060  F01C  F007   	movff	i2___aomod@dividend+6,?i2___aomod+6
 39640  0076AE  0060  F020  F008   	movff	i2___aomod@dividend+7,?i2___aomod+7
 39641  0076B4  0012               	return		;funcret
 39642  0076B6                     __end_ofi2___aomod:
 39643                           	opt callstack 0
 39644                           
 39645 ;; *************** function i2___aodiv *****************
 39646 ;; Defined at:
 39647 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 39648 ;; Parameters:    Size  Location     Type
 39649 ;;  dividend        8    0[COMRAM] long long 
 39650 ;;  divisor         8    8[COMRAM] long long 
 39651 ;; Auto vars:     Size  Location     Type
 39652 ;;  __aodiv         8   18[COMRAM] long long 
 39653 ;;  __aodiv         1   17[COMRAM] unsigned char 
 39654 ;;  __aodiv         1   16[COMRAM] unsigned char 
 39655 ;; Return value:  Size  Location     Type
 39656 ;;                  8    0[COMRAM] long long 
 39657 ;; Registers used:
 39658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39659 ;; Tracked objects:
 39660 ;;		On entry : 0/2
 39661 ;;		On exit  : 0/0
 39662 ;;		Unchanged: 0/0
 39663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39664 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39665 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39667 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39668 ;;Total ram usage:       26 bytes
 39669 ;; Hardware stack levels used:    1
 39670 ;; This function calls:
 39671 ;;		Nothing
 39672 ;; This function is called by:
 39673 ;;		i2_dtoa
 39674 ;; This function uses a non-reentrant model
 39675 ;;
 39676                           
 39677                           	psect	text241
 39678  0072F6                     __ptext241:
 39679                           	opt callstack 0
 39680  0072F6                     i2___aodiv:
 39681                           	opt callstack 5
 39682                           
 39683                           ;incstack = 0
 39684  0072F6  0E00               	movlw	0
 39685  0072F8  6E12               	movwf	i2___aodiv@sign^0,c
 39686  0072FA  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 39687  0072FC  D012               	goto	i2l16559
 39688  0072FE  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 39689  007300  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 39690  007302  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 39691  007304  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 39692  007306  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 39693  007308  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 39694  00730A  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 39695  00730C  6C09               	negf	i2___aodiv@divisor^0,c
 39696  00730E  0E00               	movlw	0
 39697  007310  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 39698  007312  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 39699  007314  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 39700  007316  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 39701  007318  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 39702  00731A  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 39703  00731C  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 39704  00731E  0E01               	movlw	1
 39705  007320  6E12               	movwf	i2___aodiv@sign^0,c
 39706  007322                     i2l16559:
 39707  007322  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
 39708  007324  D012               	goto	i2l16565
 39709  007326  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 39710  007328  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 39711  00732A  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 39712  00732C  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 39713  00732E  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 39714  007330  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 39715  007332  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 39716  007334  6C01               	negf	i2___aodiv@dividend^0,c
 39717  007336  0E00               	movlw	0
 39718  007338  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 39719  00733A  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 39720  00733C  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 39721  00733E  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 39722  007340  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 39723  007342  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 39724  007344  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 39725  007346  0E01               	movlw	1
 39726  007348  1A12               	xorwf	i2___aodiv@sign^0,f,c
 39727  00734A                     i2l16565:
 39728  00734A  EE20  F013         	lfsr	2,i2___aodiv@quotient
 39729  00734E  0E07               	movlw	7
 39730  007350                     i2u1679_41:
 39731  007350  6ADE               	clrf	postinc2,c
 39732  007352  06E8               	decf	wreg,f,c
 39733  007354  E2FD               	bc	i2u1679_41
 39734  007356  5009               	movf	i2___aodiv@divisor^0,w,c
 39735  007358  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 39736  00735A  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 39737  00735C  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 39738  00735E  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 39739  007360  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 39740  007362  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 39741  007364  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 39742  007366  B4D8               	btfsc	status,2,c
 39743  007368  D046               	goto	i2l16587
 39744  00736A  0E01               	movlw	1
 39745  00736C  6E11               	movwf	i2___aodiv@counter^0,c
 39746  00736E  D00A               	goto	i2l16573
 39747  007370                     i2l16571:
 39748  007370  90D8               	bcf	status,0,c
 39749  007372  3609               	rlcf	i2___aodiv@divisor^0,f,c
 39750  007374  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 39751  007376  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 39752  007378  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 39753  00737A  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 39754  00737C  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 39755  00737E  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 39756  007380  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 39757  007382  2A11               	incf	i2___aodiv@counter^0,f,c
 39758  007384                     i2l16573:
 39759  007384  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 39760  007386  D7F4               	goto	i2l16571
 39761  007388                     i2u1681_40:
 39762  007388  90D8               	bcf	status,0,c
 39763  00738A  3613               	rlcf	i2___aodiv@quotient^0,f,c
 39764  00738C  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 39765  00738E  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 39766  007390  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 39767  007392  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 39768  007394  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 39769  007396  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 39770  007398  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 39771  00739A  5009               	movf	i2___aodiv@divisor^0,w,c
 39772  00739C  5C01               	subwf	i2___aodiv@dividend^0,w,c
 39773  00739E  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 39774  0073A0  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 39775  0073A2  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 39776  0073A4  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 39777  0073A6  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 39778  0073A8  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 39779  0073AA  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 39780  0073AC  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 39781  0073AE  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 39782  0073B0  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 39783  0073B2  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 39784  0073B4  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 39785  0073B6  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 39786  0073B8  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 39787  0073BA  A0D8               	btfss	status,0,c
 39788  0073BC  D011               	goto	i2l16583
 39789  0073BE  5009               	movf	i2___aodiv@divisor^0,w,c
 39790  0073C0  5E01               	subwf	i2___aodiv@dividend^0,f,c
 39791  0073C2  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 39792  0073C4  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 39793  0073C6  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 39794  0073C8  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 39795  0073CA  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 39796  0073CC  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 39797  0073CE  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 39798  0073D0  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 39799  0073D2  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 39800  0073D4  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 39801  0073D6  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 39802  0073D8  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 39803  0073DA  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 39804  0073DC  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 39805  0073DE  8013               	bsf	i2___aodiv@quotient^0,0,c
 39806  0073E0                     i2l16583:
 39807  0073E0  90D8               	bcf	status,0,c
 39808  0073E2  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 39809  0073E4  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 39810  0073E6  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 39811  0073E8  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 39812  0073EA  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 39813  0073EC  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 39814  0073EE  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 39815  0073F0  3209               	rrcf	i2___aodiv@divisor^0,f,c
 39816  0073F2  2E11               	decfsz	i2___aodiv@counter^0,f,c
 39817  0073F4  D7C9               	goto	i2u1681_40
 39818  0073F6                     i2l16587:
 39819  0073F6  5012               	movf	i2___aodiv@sign^0,w,c
 39820  0073F8  B4D8               	btfsc	status,2,c
 39821  0073FA  D010               	goto	i2l16591
 39822  0073FC  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 39823  0073FE  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 39824  007400  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 39825  007402  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 39826  007404  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 39827  007406  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 39828  007408  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 39829  00740A  6C13               	negf	i2___aodiv@quotient^0,c
 39830  00740C  0E00               	movlw	0
 39831  00740E  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 39832  007410  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 39833  007412  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 39834  007414  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 39835  007416  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 39836  007418  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 39837  00741A  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 39838  00741C                     i2l16591:
 39839  00741C  0060  F04C  F001   	movff	i2___aodiv@quotient,?i2___aodiv
 39840  007422  0060  F050  F002   	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 39841  007428  0060  F054  F003   	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 39842  00742E  0060  F058  F004   	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 39843  007434  0060  F05C  F005   	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 39844  00743A  0060  F060  F006   	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 39845  007440  0060  F064  F007   	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 39846  007446  0060  F068  F008   	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 39847  00744C  0012               	return		;funcret
 39848  00744E                     __end_ofi2___aodiv:
 39849                           	opt callstack 0
 39850                           
 39851 ;; *************** function i2_atoi *****************
 39852 ;; Defined at:
 39853 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 39854 ;; Parameters:    Size  Location     Type
 39855 ;;  s               2    7[COMRAM] PTR const unsigned char 
 39856 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 39857 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 39858 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 39859 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 39860 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 39861 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 39862 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 39863 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 39864 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 39865 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 39866 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 39867 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 39868 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 39869 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 39870 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 39871 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 39872 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 39873 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 39874 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 39875 ;;		 -> STR_1(27), 
 39876 ;; Auto vars:     Size  Location     Type
 39877 ;;  atoi            2   20[COMRAM] int 
 39878 ;;  atoi            2   13[COMRAM] int 
 39879 ;; Return value:  Size  Location     Type
 39880 ;;                  2    7[COMRAM] int 
 39881 ;; Registers used:
 39882 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39883 ;; Tracked objects:
 39884 ;;		On entry : 3F/0
 39885 ;;		On exit  : 0/0
 39886 ;;		Unchanged: 0/0
 39887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39889 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39891 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39892 ;;Total ram usage:       15 bytes
 39893 ;; Hardware stack levels used:    1
 39894 ;; Hardware stack levels required when called:    1
 39895 ;; This function calls:
 39896 ;;		i2___wmul
 39897 ;;		i2_isdigit
 39898 ;;		i2_isspace
 39899 ;; This function is called by:
 39900 ;;		i2_vfpfcnvrt
 39901 ;; This function uses a non-reentrant model
 39902 ;;
 39903                           
 39904                           	psect	text242
 39905  006EC8                     __ptext242:
 39906                           	opt callstack 0
 39907  006EC8                     i2_atoi:
 39908                           	opt callstack 5
 39909                           
 39910                           ; BSR set to: 0
 39911                           
 39912                           ;incstack = 0
 39913  006EC8  0E00               	movlw	0
 39914  006ECA  6E16               	movwf	(i2atoi@n+1)^0,c
 39915  006ECC  0E00               	movlw	0
 39916  006ECE  6E15               	movwf	i2atoi@n^0,c
 39917  006ED0  0E00               	movlw	0
 39918  006ED2  6E0F               	movwf	(i2atoi@neg+1)^0,c
 39919  006ED4  0E00               	movlw	0
 39920  006ED6  6E0E               	movwf	i2atoi@neg^0,c
 39921  006ED8  D002               	goto	i2l16911
 39922  006EDA                     i2l16909:
 39923                           
 39924                           ; BSR set to: 0
 39925  006EDA  4A08               	infsnz	i2atoi@s^0,f,c
 39926  006EDC  2A09               	incf	(i2atoi@s+1)^0,f,c
 39927  006EDE                     i2l16911:
 39928                           
 39929                           ; BSR set to: 0
 39930  006EDE  0E01               	movlw	1
 39931  006EE0  6E14               	movwf	i2_atoi$5376^0,c
 39932                           
 39933                           ; BSR set to: 0
 39934  006EE2  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 39935  006EE8  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 39936  006EEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39937  006EEE  6AF8               	clrf	tblptru,c
 39938  006EF0                     	endif
 39939  006EF0                     	if	0	;tblptru may be non-zero
 39940  006EF0                     	endif
 39941  006EF0  0008               	tblrd		*
 39942  006EF2  50F5               	movf	tablat,w,c
 39943  006EF4  0A20               	xorlw	32
 39944  006EF6  B4D8               	btfsc	status,2,c
 39945  006EF8  D01B               	goto	i2l16919
 39946                           
 39947                           ; BSR set to: 0
 39948  006EFA  0EF7               	movlw	247
 39949  006EFC  6E0A               	movwf	??i2_atoi^0,c
 39950  006EFE  0EFF               	movlw	255
 39951  006F00  6E0B               	movwf	(??i2_atoi+1)^0,c
 39952  006F02  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 39953  006F08  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 39954  006F0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39955  006F0E  6AF8               	clrf	tblptru,c
 39956  006F10                     	endif
 39957  006F10                     	if	0	;tblptru may be non-zero
 39958  006F10                     	endif
 39959  006F10  0008               	tblrd		*
 39960  006F12  50F5               	movf	tablat,w,c
 39961  006F14  6E0C               	movwf	(??i2_atoi+2)^0,c
 39962  006F16  6A0D               	clrf	(??i2_atoi+3)^0,c
 39963  006F18  500A               	movf	??i2_atoi^0,w,c
 39964  006F1A  260C               	addwf	(??i2_atoi+2)^0,f,c
 39965  006F1C  500B               	movf	(??i2_atoi+1)^0,w,c
 39966  006F1E  220D               	addwfc	(??i2_atoi+3)^0,f,c
 39967  006F20  500D               	movf	(??i2_atoi+3)^0,w,c
 39968  006F22  E104               	bnz	i2u1748_40
 39969  006F24  0E05               	movlw	5
 39970  006F26  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 39971  006F28  A0D8               	btfss	status,0,c
 39972  006F2A  D002               	goto	i2l16919
 39973  006F2C                     i2u1748_40:
 39974                           
 39975                           ; BSR set to: 0
 39976  006F2C  0E00               	movlw	0
 39977  006F2E  6E14               	movwf	i2_atoi$5376^0,c
 39978  006F30                     i2l16919:
 39979                           
 39980                           ; BSR set to: 0
 39981  006F30  0060  F050  F010   	movff	i2_atoi$5376,i2_atoi$5375
 39982  006F36  6A11               	clrf	(i2_atoi$5375+1)^0,c
 39983                           
 39984                           ; BSR set to: 0
 39985  006F38  5010               	movf	i2_atoi$5375^0,w,c
 39986  006F3A  1011               	iorwf	(i2_atoi$5375+1)^0,w,c
 39987  006F3C  B4D8               	btfsc	status,2,c
 39988  006F3E  D008               	goto	i2l16929
 39989  006F40  D7CC               	goto	i2l16909
 39990  006F42                     i2l16925:
 39991                           
 39992                           ; BSR set to: 0
 39993  006F42  0E00               	movlw	0
 39994  006F44  6E0F               	movwf	(i2atoi@neg+1)^0,c
 39995  006F46  0E01               	movlw	1
 39996  006F48  6E0E               	movwf	i2atoi@neg^0,c
 39997  006F4A                     i2l16927:
 39998  006F4A  4A08               	infsnz	i2atoi@s^0,f,c
 39999  006F4C  2A09               	incf	(i2atoi@s+1)^0,f,c
 40000  006F4E  D036               	goto	i2l16935
 40001  006F50                     i2l16929:
 40002                           
 40003                           ; BSR set to: 0
 40004  006F50  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40005  006F56  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40006  006F5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40007  006F5C  6AF8               	clrf	tblptru,c
 40008  006F5E                     	endif
 40009  006F5E                     	if	0	;tblptru may be non-zero
 40010  006F5E                     	endif
 40011  006F5E  0008               	tblrd		*
 40012  006F60  50F5               	movf	tablat,w,c
 40013  006F62  6E0A               	movwf	??i2_atoi^0,c
 40014  006F64  6A0B               	clrf	(??i2_atoi+1)^0,c
 40015                           
 40016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40017                           ; Switch size 1, requested type "simple"
 40018                           ; Number of cases is 1, Range of values is 0 to 0
 40019                           ; switch strategies available:
 40020                           ; Name         Instructions Cycles
 40021                           ; simple_byte            4     3 (average)
 40022                           ;	Chosen strategy is simple_byte
 40023  006F66  500B               	movf	(??i2_atoi+1)^0,w,c
 40024  006F68  0A00               	xorlw	0	; case 0
 40025  006F6A  A4D8               	btfss	status,2,c
 40026  006F6C  D027               	goto	i2l16935
 40027                           
 40028                           ; BSR set to: 0
 40029                           ; Switch size 1, requested type "simple"
 40030                           ; Number of cases is 2, Range of values is 43 to 45
 40031                           ; switch strategies available:
 40032                           ; Name         Instructions Cycles
 40033                           ; simple_byte            7     4 (average)
 40034                           ;	Chosen strategy is simple_byte
 40035  006F6E  500A               	movf	??i2_atoi^0,w,c
 40036  006F70  0A2B               	xorlw	43	; case 43
 40037  006F72  B4D8               	btfsc	status,2,c
 40038  006F74  D7EA               	goto	i2l16927
 40039  006F76  0A06               	xorlw	6	; case 45
 40040  006F78  B4D8               	btfsc	status,2,c
 40041  006F7A  D7E3               	goto	i2l16925
 40042  006F7C  D01F               	goto	i2l16935
 40043  006F7E                     i2l16931:
 40044  006F7E  0060  F054  F001   	movff	i2atoi@n,i2___wmul@multiplier
 40045  006F84  0060  F058  F002   	movff	i2atoi@n+1,i2___wmul@multiplier+1
 40046  006F8A  0E00               	movlw	0
 40047  006F8C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 40048  006F8E  0E0A               	movlw	10
 40049  006F90  6E03               	movwf	i2___wmul@multiplicand^0,c
 40050  006F92  ECBC  F04E         	call	i2___wmul	;wreg free
 40051  006F96  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40052  006F9C  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40053  006FA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40054  006FA2  6AF8               	clrf	tblptru,c
 40055  006FA4                     	endif
 40056  006FA4                     	if	0	;tblptru may be non-zero
 40057  006FA4                     	endif
 40058  006FA4  0008               	tblrd		*
 40059  006FA6  50F5               	movf	tablat,w,c
 40060  006FA8  5E01               	subwf	?i2___wmul^0,f,c
 40061  006FAA  0E00               	movlw	0
 40062  006FAC  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 40063  006FAE  0E30               	movlw	48
 40064  006FB0  2401               	addwf	?i2___wmul^0,w,c
 40065  006FB2  6E15               	movwf	i2atoi@n^0,c
 40066  006FB4  0E00               	movlw	0
 40067  006FB6  2002               	addwfc	(?i2___wmul+1)^0,w,c
 40068  006FB8  6E16               	movwf	(i2atoi@n+1)^0,c
 40069  006FBA  D7C7               	goto	i2l16927
 40070  006FBC                     i2l16935:
 40071  006FBC  0ED0               	movlw	208
 40072  006FBE  6E0A               	movwf	??i2_atoi^0,c
 40073  006FC0  0EFF               	movlw	255
 40074  006FC2  6E0B               	movwf	(??i2_atoi+1)^0,c
 40075  006FC4  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40076  006FCA  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40077  006FD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40078  006FD0  6AF8               	clrf	tblptru,c
 40079  006FD2                     	endif
 40080  006FD2                     	if	0	;tblptru may be non-zero
 40081  006FD2                     	endif
 40082  006FD2  0008               	tblrd		*
 40083  006FD4  50F5               	movf	tablat,w,c
 40084  006FD6  6E0C               	movwf	(??i2_atoi+2)^0,c
 40085  006FD8  6A0D               	clrf	(??i2_atoi+3)^0,c
 40086  006FDA  500A               	movf	??i2_atoi^0,w,c
 40087  006FDC  260C               	addwf	(??i2_atoi+2)^0,f,c
 40088  006FDE  500B               	movf	(??i2_atoi+1)^0,w,c
 40089  006FE0  220D               	addwfc	(??i2_atoi+3)^0,f,c
 40090  006FE2  500D               	movf	(??i2_atoi+3)^0,w,c
 40091  006FE4  E106               	bnz	i2u1750_40
 40092  006FE6  0E0A               	movlw	10
 40093  006FE8  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 40094  006FEA  B0D8               	btfsc	status,0,c
 40095  006FEC  D002               	goto	i2u1750_40
 40096  006FEE  0E01               	movlw	1
 40097  006FF0  D001               	goto	i2u1751_40
 40098  006FF2                     i2u1750_40:
 40099  006FF2  0E00               	movlw	0
 40100  006FF4                     i2u1751_40:
 40101  006FF4  6E12               	movwf	i2_atoi$5377^0,c
 40102  006FF6  6A13               	clrf	(i2_atoi$5377+1)^0,c
 40103  006FF8  5012               	movf	i2_atoi$5377^0,w,c
 40104  006FFA  1013               	iorwf	(i2_atoi$5377+1)^0,w,c
 40105  006FFC  A4D8               	btfss	status,2,c
 40106  006FFE  D7BF               	goto	i2l16931
 40107  007000  500E               	movf	i2atoi@neg^0,w,c
 40108  007002  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 40109  007004  A4D8               	btfss	status,2,c
 40110  007006  D011               	goto	i2l3883
 40111  007008  0060  F054  F00A   	movff	i2atoi@n,??i2_atoi
 40112  00700E  0060  F058  F00B   	movff	i2atoi@n+1,??i2_atoi+1
 40113  007014  1E0A               	comf	??i2_atoi^0,f,c
 40114  007016  1E0B               	comf	(??i2_atoi+1)^0,f,c
 40115  007018  4A0A               	infsnz	??i2_atoi^0,f,c
 40116  00701A  2A0B               	incf	(??i2_atoi+1)^0,f,c
 40117  00701C  0060  F028  F008   	movff	??i2_atoi,?i2_atoi
 40118  007022  0060  F02C  F009   	movff	??i2_atoi+1,?i2_atoi+1
 40119  007028  0012               	return	
 40120  00702A                     i2l3883:
 40121  00702A  0060  F054  F008   	movff	i2atoi@n,?i2_atoi
 40122  007030  0060  F058  F009   	movff	i2atoi@n+1,?i2_atoi+1
 40123  007036  0012               	return		;funcret
 40124  007038                     __end_ofi2_atoi:
 40125                           	opt callstack 0
 40126                           
 40127 ;; *************** function i2_isspace *****************
 40128 ;; Defined at:
 40129 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 40130 ;; Parameters:    Size  Location     Type
 40131 ;;  c               2    0[COMRAM] int 
 40132 ;; Auto vars:     Size  Location     Type
 40133 ;;		None
 40134 ;; Return value:  Size  Location     Type
 40135 ;;                  2    0[COMRAM] int 
 40136 ;; Registers used:
 40137 ;;		wreg, status,2, status,0
 40138 ;; Tracked objects:
 40139 ;;		On entry : 0/0
 40140 ;;		On exit  : 0/0
 40141 ;;		Unchanged: 0/0
 40142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40145 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40146 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40147 ;;Total ram usage:        7 bytes
 40148 ;; Hardware stack levels used:    1
 40149 ;; This function calls:
 40150 ;;		Nothing
 40151 ;; This function is called by:
 40152 ;;		i2_atoi
 40153 ;; This function uses a non-reentrant model
 40154 ;;
 40155                           
 40156                           	psect	text243
 40157  0094A8                     __ptext243:
 40158                           	opt callstack 0
 40159  0094A8                     i2_isspace:
 40160                           	opt callstack 5
 40161                           
 40162                           ;incstack = 0
 40163  0094A8  0E01               	movlw	1
 40164  0094AA  6E07               	movwf	i2_isspace$5402^0,c
 40165  0094AC  0E20               	movlw	32
 40166  0094AE  1801               	xorwf	i2isspace@c^0,w,c
 40167  0094B0  1002               	iorwf	(i2isspace@c+1)^0,w,c
 40168  0094B2  B4D8               	btfsc	status,2,c
 40169  0094B4  D016               	goto	i2l16651
 40170  0094B6  0EF7               	movlw	247
 40171  0094B8  6E03               	movwf	??i2_isspace^0,c
 40172  0094BA  0EFF               	movlw	255
 40173  0094BC  6E04               	movwf	(??i2_isspace+1)^0,c
 40174  0094BE  0060  F004  F005   	movff	i2isspace@c,??i2_isspace+2
 40175  0094C4  0060  F008  F006   	movff	i2isspace@c+1,??i2_isspace+3
 40176  0094CA  5003               	movf	??i2_isspace^0,w,c
 40177  0094CC  2605               	addwf	(??i2_isspace+2)^0,f,c
 40178  0094CE  5004               	movf	(??i2_isspace+1)^0,w,c
 40179  0094D0  2206               	addwfc	(??i2_isspace+3)^0,f,c
 40180  0094D2  5006               	movf	(??i2_isspace+3)^0,w,c
 40181  0094D4  E104               	bnz	i2u1696_40
 40182  0094D6  0E05               	movlw	5
 40183  0094D8  5C05               	subwf	(??i2_isspace+2)^0,w,c
 40184  0094DA  A0D8               	btfss	status,0,c
 40185  0094DC  D002               	goto	i2l16651
 40186  0094DE                     i2u1696_40:
 40187  0094DE  0E00               	movlw	0
 40188  0094E0  6E07               	movwf	i2_isspace$5402^0,c
 40189  0094E2                     i2l16651:
 40190  0094E2  0060  F01C  F001   	movff	i2_isspace$5402,?i2_isspace
 40191  0094E8  6A02               	clrf	(?i2_isspace+1)^0,c
 40192  0094EA  0012               	return		;funcret
 40193  0094EC                     __end_ofi2_isspace:
 40194                           	opt callstack 0
 40195                           
 40196 ;; *************** function i2_isdigit *****************
 40197 ;; Defined at:
 40198 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 40199 ;; Parameters:    Size  Location     Type
 40200 ;;  c               2    0[COMRAM] int 
 40201 ;; Auto vars:     Size  Location     Type
 40202 ;;		None
 40203 ;; Return value:  Size  Location     Type
 40204 ;;                  2    0[COMRAM] int 
 40205 ;; Registers used:
 40206 ;;		wreg, status,2, status,0
 40207 ;; Tracked objects:
 40208 ;;		On entry : 0/0
 40209 ;;		On exit  : 0/0
 40210 ;;		Unchanged: 0/0
 40211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40216 ;;Total ram usage:        6 bytes
 40217 ;; Hardware stack levels used:    1
 40218 ;; This function calls:
 40219 ;;		Nothing
 40220 ;; This function is called by:
 40221 ;;		i2_vfpfcnvrt
 40222 ;;		i2_atoi
 40223 ;; This function uses a non-reentrant model
 40224 ;;
 40225                           
 40226                           	psect	text244
 40227  0099E6                     __ptext244:
 40228                           	opt callstack 0
 40229  0099E6                     i2_isdigit:
 40230                           	opt callstack 6
 40231                           
 40232                           ;incstack = 0
 40233  0099E6  0ED0               	movlw	208
 40234  0099E8  6E03               	movwf	??i2_isdigit^0,c
 40235  0099EA  0EFF               	movlw	255
 40236  0099EC  6E04               	movwf	(??i2_isdigit+1)^0,c
 40237  0099EE  0060  F004  F005   	movff	i2isdigit@c,??i2_isdigit+2
 40238  0099F4  0060  F008  F006   	movff	i2isdigit@c+1,??i2_isdigit+3
 40239  0099FA  5003               	movf	??i2_isdigit^0,w,c
 40240  0099FC  2605               	addwf	(??i2_isdigit+2)^0,f,c
 40241  0099FE  5004               	movf	(??i2_isdigit+1)^0,w,c
 40242  009A00  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 40243  009A02  5006               	movf	(??i2_isdigit+3)^0,w,c
 40244  009A04  E106               	bnz	i2u1693_40
 40245  009A06  0E0A               	movlw	10
 40246  009A08  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 40247  009A0A  B0D8               	btfsc	status,0,c
 40248  009A0C  D002               	goto	i2u1693_40
 40249  009A0E  0E01               	movlw	1
 40250  009A10  D001               	goto	i2u1694_40
 40251  009A12                     i2u1693_40:
 40252  009A12  0E00               	movlw	0
 40253  009A14                     i2u1694_40:
 40254  009A14  6E01               	movwf	?i2_isdigit^0,c
 40255  009A16  6A02               	clrf	(?i2_isdigit+1)^0,c
 40256  009A18  0012               	return		;funcret
 40257  009A1A                     __end_ofi2_isdigit:
 40258                           	opt callstack 0
 40259                           
 40260 ;; *************** function i2___wmul *****************
 40261 ;; Defined at:
 40262 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 40263 ;; Parameters:    Size  Location     Type
 40264 ;;  multiplier      2    0[COMRAM] unsigned int 
 40265 ;;  multiplicand    2    2[COMRAM] unsigned int 
 40266 ;; Auto vars:     Size  Location     Type
 40267 ;;  __wmul          2    4[COMRAM] unsigned int 
 40268 ;; Return value:  Size  Location     Type
 40269 ;;                  2    0[COMRAM] unsigned int 
 40270 ;; Registers used:
 40271 ;;		wreg, status,2, status,0, prodl, prodh
 40272 ;; Tracked objects:
 40273 ;;		On entry : 0/0
 40274 ;;		On exit  : 0/0
 40275 ;;		Unchanged: 0/0
 40276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40281 ;;Total ram usage:        6 bytes
 40282 ;; Hardware stack levels used:    1
 40283 ;; This function calls:
 40284 ;;		Nothing
 40285 ;; This function is called by:
 40286 ;;		i2_atoi
 40287 ;; This function uses a non-reentrant model
 40288 ;;
 40289                           
 40290                           	psect	text245
 40291  009D78                     __ptext245:
 40292                           	opt callstack 0
 40293  009D78                     i2___wmul:
 40294                           	opt callstack 5
 40295                           
 40296                           ;incstack = 0
 40297  009D78  5001               	movf	i2___wmul@multiplier^0,w,c
 40298  009D7A  0203               	mulwf	i2___wmul@multiplicand^0,c
 40299  009D7C  006F FFCC  F005    	movff	prodl,i2___wmul@product
 40300  009D82  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
 40301  009D88  5001               	movf	i2___wmul@multiplier^0,w,c
 40302  009D8A  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 40303  009D8C  50F3               	movf	243,w,c
 40304  009D8E  2606               	addwf	(i2___wmul@product+1)^0,f,c
 40305  009D90  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 40306  009D92  0203               	mulwf	i2___wmul@multiplicand^0,c
 40307  009D94  50F3               	movf	243,w,c
 40308  009D96  2606               	addwf	(i2___wmul@product+1)^0,f,c
 40309  009D98  0060  F014  F001   	movff	i2___wmul@product,?i2___wmul
 40310  009D9E  0060  F018  F002   	movff	i2___wmul@product+1,?i2___wmul+1
 40311  009DA4  0012               	return		;funcret
 40312  009DA6                     __end_ofi2___wmul:
 40313                           	opt callstack 0
 40314                           
 40315 ;; *************** function i2___lmul *****************
 40316 ;; Defined at:
 40317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 40318 ;; Parameters:    Size  Location     Type
 40319 ;;  multiplier      4    0[COMRAM] unsigned long 
 40320 ;;  multiplicand    4    4[COMRAM] unsigned long 
 40321 ;; Auto vars:     Size  Location     Type
 40322 ;;  __lmul          4    8[COMRAM] unsigned long 
 40323 ;; Return value:  Size  Location     Type
 40324 ;;                  4    0[COMRAM] unsigned long 
 40325 ;; Registers used:
 40326 ;;		wreg, status,2, status,0
 40327 ;; Tracked objects:
 40328 ;;		On entry : 3F/0
 40329 ;;		On exit  : 3F/0
 40330 ;;		Unchanged: 3F/0
 40331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40333 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40335 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40336 ;;Total ram usage:       12 bytes
 40337 ;; Hardware stack levels used:    1
 40338 ;; This function calls:
 40339 ;;		Nothing
 40340 ;; This function is called by:
 40341 ;;		_adcCaptureIsr
 40342 ;; This function uses a non-reentrant model
 40343 ;;
 40344                           
 40345                           	psect	text246
 40346  008DEA                     __ptext246:
 40347                           	opt callstack 0
 40348  008DEA                     i2___lmul:
 40349                           	opt callstack 10
 40350                           
 40351                           ; BSR set to: 0
 40352                           
 40353                           ;incstack = 0
 40354  008DEA  0E00               	movlw	0
 40355  008DEC  6E09               	movwf	i2___lmul@product^0,c
 40356  008DEE  0E00               	movlw	0
 40357  008DF0  6E0A               	movwf	(i2___lmul@product+1)^0,c
 40358  008DF2  0E00               	movlw	0
 40359  008DF4  6E0B               	movwf	(i2___lmul@product+2)^0,c
 40360  008DF6  0E00               	movlw	0
 40361  008DF8  6E0C               	movwf	(i2___lmul@product+3)^0,c
 40362  008DFA                     i2l12579:
 40363                           
 40364                           ; BSR set to: 0
 40365  008DFA  A001               	btfss	i2___lmul@multiplier^0,0,c
 40366  008DFC  D008               	goto	i2l12583
 40367                           
 40368                           ; BSR set to: 0
 40369  008DFE  5005               	movf	i2___lmul@multiplicand^0,w,c
 40370  008E00  2609               	addwf	i2___lmul@product^0,f,c
 40371  008E02  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 40372  008E04  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 40373  008E06  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 40374  008E08  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 40375  008E0A  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 40376  008E0C  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 40377  008E0E                     i2l12583:
 40378                           
 40379                           ; BSR set to: 0
 40380  008E0E  90D8               	bcf	status,0,c
 40381  008E10  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 40382  008E12  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 40383  008E14  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 40384  008E16  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 40385                           
 40386                           ; BSR set to: 0
 40387  008E18  90D8               	bcf	status,0,c
 40388  008E1A  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 40389  008E1C  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 40390  008E1E  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 40391  008E20  3201               	rrcf	i2___lmul@multiplier^0,f,c
 40392  008E22  5001               	movf	i2___lmul@multiplier^0,w,c
 40393  008E24  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 40394  008E26  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 40395  008E28  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 40396  008E2A  A4D8               	btfss	status,2,c
 40397  008E2C  D7E6               	goto	i2l12579
 40398                           
 40399                           ; BSR set to: 0
 40400  008E2E  0060  F024  F001   	movff	i2___lmul@product,?i2___lmul
 40401  008E34  0060  F028  F002   	movff	i2___lmul@product+1,?i2___lmul+1
 40402  008E3A  0060  F02C  F003   	movff	i2___lmul@product+2,?i2___lmul+2
 40403  008E40  0060  F030  F004   	movff	i2___lmul@product+3,?i2___lmul+3
 40404                           
 40405                           ; BSR set to: 0
 40406  008E46  0012               	return		;funcret
 40407  008E48                     __end_ofi2___lmul:
 40408                           	opt callstack 0
 40409                           
 40410 ;; *************** function i2_ADCC_StartConversion *****************
 40411 ;; Defined at:
 40412 ;;		line 120 in file "mcc_generated_files/adcc.c"
 40413 ;; Parameters:    Size  Location     Type
 40414 ;;  channel         1    wreg     enum E16053
 40415 ;; Auto vars:     Size  Location     Type
 40416 ;;  channel         1    0[COMRAM] enum E16053
 40417 ;; Return value:  Size  Location     Type
 40418 ;;                  1    wreg      void 
 40419 ;; Registers used:
 40420 ;;		wreg
 40421 ;; Tracked objects:
 40422 ;;		On entry : 0/0
 40423 ;;		On exit  : 3F/3E
 40424 ;;		Unchanged: 0/0
 40425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40430 ;;Total ram usage:        1 bytes
 40431 ;; Hardware stack levels used:    1
 40432 ;; This function calls:
 40433 ;;		Nothing
 40434 ;; This function is called by:
 40435 ;;		_adcCaptureIsr
 40436 ;; This function uses a non-reentrant model
 40437 ;;
 40438                           
 40439                           	psect	text247
 40440  00A39E                     __ptext247:
 40441                           	opt callstack 0
 40442  00A39E                     i2_ADCC_StartConversion:
 40443                           	opt callstack 10
 40444                           
 40445                           ; BSR set to: 0
 40446                           ;incstack = 0
 40447                           ;i2ADCC_StartConversion@channel stored from wreg
 40448  00A39E  6E01               	movwf	i2ADCC_StartConversion@channel^0,c
 40449                           
 40450                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 40451  00A3A0  0060  F007  FEF1   	movff	i2ADCC_StartConversion@channel,16113	;volatile
 40452                           
 40453                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 40454  00A3A6  013E               	movlb	62	; () banked
 40455  00A3A8  8FF8               	bsf	248,7,b	;volatile
 40456                           
 40457                           ; BSR set to: 62
 40458                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 40459  00A3AA  81F8               	bsf	248,0,b	;volatile
 40460                           
 40461                           ; BSR set to: 62
 40462  00A3AC  0012               	return		;funcret
 40463  00A3AE                     __end_ofi2_ADCC_StartConversion:
 40464                           	opt callstack 0
 40465                           
 40466 ;; *************** function _ADCC_GetFilterValue *****************
 40467 ;; Defined at:
 40468 ;;		line 231 in file "mcc_generated_files/adcc.c"
 40469 ;; Parameters:    Size  Location     Type
 40470 ;;		None
 40471 ;; Auto vars:     Size  Location     Type
 40472 ;;		None
 40473 ;; Return value:  Size  Location     Type
 40474 ;;                  2    0[COMRAM] unsigned short 
 40475 ;; Registers used:
 40476 ;;		wreg, status,2, status,0
 40477 ;; Tracked objects:
 40478 ;;		On entry : 3F/2
 40479 ;;		On exit  : 3F/3E
 40480 ;;		Unchanged: 0/0
 40481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40486 ;;Total ram usage:        4 bytes
 40487 ;; Hardware stack levels used:    1
 40488 ;; This function calls:
 40489 ;;		Nothing
 40490 ;; This function is called by:
 40491 ;;		_adcCaptureIsr
 40492 ;; This function uses a non-reentrant model
 40493 ;;
 40494                           
 40495                           	psect	text248
 40496  00A268                     __ptext248:
 40497                           	opt callstack 0
 40498  00A268                     _ADCC_GetFilterValue:
 40499                           	opt callstack 10
 40500                           
 40501                           ; BSR set to: 2
 40502                           ;mcc_generated_files/adcc.c: 234:     return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 40503                           
 40504                           ; BSR set to: 62
 40505                           ;incstack = 0
 40506  00A268  013E               	movlb	62	; () banked
 40507  00A26A  51E7               	movf	231,w,b	;volatile
 40508  00A26C  6E04               	movwf	(??_ADCC_GetFilterValue+1)^0,c
 40509  00A26E  6A03               	clrf	??_ADCC_GetFilterValue^0,c
 40510  00A270  51E6               	movf	230,w,b	;volatile
 40511  00A272  2403               	addwf	??_ADCC_GetFilterValue^0,w,c
 40512  00A274  6E01               	movwf	?_ADCC_GetFilterValue^0,c
 40513  00A276  0E00               	movlw	0
 40514  00A278  2004               	addwfc	(??_ADCC_GetFilterValue+1)^0,w,c
 40515  00A27A  6E02               	movwf	(?_ADCC_GetFilterValue+1)^0,c
 40516                           
 40517                           ; BSR set to: 62
 40518  00A27C  0012               	return		;funcret
 40519  00A27E                     __end_of_ADCC_GetFilterValue:
 40520                           	opt callstack 0
 40521                           
 40522                           ;
 40523                           ; Interrupt Vector Table @ 0x8
 40524                           ;
 40525                           
 40526                           	psect	ivt0x8
 40527  000008                     __pivt0x8:
 40528                           	opt callstack 0
 40529  000008                     ivt0x8_base:
 40530                           	opt callstack 0
 40531                           
 40532                           ; high-priority vector
 40533  000008  EF23  F040         	goto	_INTERRUPT_InterruptManager
 40534  000018                     	org	16
 40535                           
 40536                           ; low-priority vector
 40537  000018  00FF               	reset	
 40538                           
 40539                           	psect	text249
 40540  000000                     __ptext249:
 40541                           	opt callstack 0
 40542                           
 40543                           	psect	rparam
 40544  0000                     tosu	equ	0x3FFF
 40545                           tosh	equ	0x3FFE
 40546                           tosl	equ	0x3FFD
 40547                           stkptr	equ	0x3FFC
 40548                           pclatu	equ	0x3FFB
 40549                           pclath	equ	0x3FFA
 40550                           pcl	equ	0x3FF9
 40551                           tblptru	equ	0x3FF8
 40552                           tblptrh	equ	0x3FF7
 40553                           tblptrl	equ	0x3FF6
 40554                           tablat	equ	0x3FF5
 40555                           prodh	equ	0x3FF4
 40556                           prodl	equ	0x3FF3
 40557                           indf0	equ	0x3FEF
 40558                           postinc0	equ	0x3FEE
 40559                           postdec0	equ	0x3FED
 40560                           preinc0	equ	0x3FEC
 40561                           plusw0	equ	0x3FEB
 40562                           fsr0h	equ	0x3FEA
 40563                           fsr0l	equ	0x3FE9
 40564                           wreg	equ	0x3FE8
 40565                           indf1	equ	0x3FE7
 40566                           postinc1	equ	0x3FE6
 40567                           postdec1	equ	0x3FE5
 40568                           preinc1	equ	0x3FE4
 40569                           plusw1	equ	0x3FE3
 40570                           fsr1h	equ	0x3FE2
 40571                           fsr1l	equ	0x3FE1
 40572                           bsr	equ	0x3FE0
 40573                           indf2	equ	0x3FDF
 40574                           postinc2	equ	0x3FDE
 40575                           postdec2	equ	0x3FDD
 40576                           preinc2	equ	0x3FDC
 40577                           plusw2	equ	0x3FDB
 40578                           fsr2h	equ	0x3FDA
 40579                           fsr2l	equ	0x3FD9
 40580                           status	equ	0x3FD8


Data Sizes:
    Strings     1386
    Constant    38
    Data        32
    BSS         492
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     79     117
    BANK1           256    145     256
    BANK2           256      4     254
    BANK3           256     49     193
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    I2C2_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_DO_TX$6105$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$6111$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6117$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6122	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6117	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_DO_TX_EMPTY$6116	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$6111	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_DO_TX$6110	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX$6105	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_MasterFsm$6104	const PTR FTN()enum E16447 size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    I2C2_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_NackCb@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$0$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_104(CODE[10]), STR_101(CODE[10]), STR_100(CODE[8]), STR_97(CODE[10]), 
		 -> STR_96(CODE[8]), STR_93(CODE[10]), STR_92(CODE[6]), STR_90(CODE[7]), 
		 -> STR_85(CODE[27]), STR_84(CODE[9]), STR_82(CODE[10]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_63(CODE[9]), STR_62(CODE[9]), STR_61(CODE[8]), 
		 -> STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), STR_31(CODE[9]), 
		 -> STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[49]), 
		 -> STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), STR_23(CODE[20]), 
		 -> STR_22(CODE[28]), STR_21(CODE[5]), STR_19(CODE[16]), STR_18(CODE[14]), 
		 -> STR_17(CODE[33]), STR_16(CODE[20]), STR_15(CODE[74]), STR_14(CODE[40]), 
		 -> STR_13(CODE[47]), STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[55]), 
		 -> STR_4(CODE[20]), STR_3(CODE[11]), STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_87(CODE[17]), STR_75(CODE[18]), 
		 -> STR_64(CODE[19]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_20(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S5415_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[49]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), 
		 -> STR_23(CODE[20]), STR_22(CODE[28]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[49]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), 
		 -> STR_23(CODE[20]), STR_22(CODE[28]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[49]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), 
		 -> STR_23(CODE[20]), STR_22(CODE[28]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printstrblock@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_103(CODE[17]), STR_102(CODE[17]), STR_99(CODE[17]), STR_98(CODE[17]), 
		 -> STR_95(CODE[18]), STR_94(CODE[17]), STR_91(CODE[17]), STR_89(CODE[17]), 
		 -> STR_88(CODE[17]), STR_86(CODE[17]), STR_83(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[17]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[17]), 
		 -> STR_76(CODE[17]), STR_74(CODE[17]), STR_73(CODE[14]), STR_71(CODE[14]), 
		 -> STR_69(CODE[18]), lcdTopRow(BANK2[20]), STR_36(CODE[17]), STR_35(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[19]), STR_2(CODE[17]), 

    printstr@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_103(CODE[17]), STR_102(CODE[17]), STR_99(CODE[17]), STR_98(CODE[17]), 
		 -> STR_95(CODE[18]), STR_94(CODE[17]), STR_91(CODE[17]), STR_89(CODE[17]), 
		 -> STR_88(CODE[17]), STR_86(CODE[17]), STR_83(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[17]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[17]), 
		 -> STR_76(CODE[17]), STR_74(CODE[17]), STR_73(CODE[14]), STR_71(CODE[14]), 
		 -> STR_69(CODE[18]), lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), STR_36(CODE[17]), 
		 -> STR_35(CODE[17]), lcdBtnRRow(BANK2[10]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[19]), STR_2(CODE[17]), 

    timeElapsedR@prevTime	PTR unsigned short  size(2) Largest target is 2
		 -> monTstamp(BANK2[2]), SelfTest@tstamp(BANK3[2]), flowChk@tstamp(BANK1[2]), pressureSensorChk@tstamp(BANK1[2]), 
		 -> main@printTime(BANK3[2]), rCycleTime(BANK1[2]), 

    aCaptGetResult@outVal	PTR short  size(2) Largest target is 2
		 -> MonitorMsgForcedSend@vddVal(BANK1[2]), SelfTest@vddVal(BANK3[2]), flowChk@aPVal(BANK1[2]), pressureSensorChk@aPVal(BANK1[2]), 
		 -> pressureSensorChk@mPVal(BANK1[2]), vMeasureIsr@instP(BANK0[2]), bdP2(BANK0[2]), bdP1(BANK1[2]), 
		 -> pAvgShort(BANK1[2]), main@tmpVal(BANK3[2]), pAvgUShort(BANK1[2]), pInst(BANK1[2]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> lcdIrqHandler(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> lcdIrqHandler(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SV2DelayOpen(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SV2DelayOpen(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    I2C2_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), 

    I2C2_SetDataNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C2_SetDataNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), 

    I2C2_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C2_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), Absolute function(), 

    I2C2_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetBuffer@buffer	PTR void  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> i2_rd1RegCompleteHandler(), i2_rd2RegCompleteHandler(), i2_wr1RegCompleteHandler(), i2_wr2RegCompleteHandler(), 
		 -> i2_rdBlkRegCompleteHandler(), i2_I2C2_NackCb(), i2_I2C2_CallbackReturnReset(), i2_I2C2_CallbackReturnStop(), 
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E16447[19] size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S97$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR6_ISR->_lcdIrqHandler
    _TMR2_ISR->_vMeasureIsr
    _vMeasureIsr->i2_aCaptGetResult
    i2_aCaptGetResult->i2_printf
    _I2C2_MasterIsr->_I2C2_MasterFsm
    _I2C2_MasterFsm->_I2C2_DO_TX
    _I2C2_DO_TX->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX->i2_I2C2_NackCb
    _I2C2_DO_TX->i2_rd1RegCompleteHandler
    _I2C2_DO_TX->i2_rd2RegCompleteHandler
    _I2C2_DO_TX->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX->i2_wr1RegCompleteHandler
    _I2C2_DO_TX->i2_wr2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX_EMPTY->i2_I2C2_NackCb
    _I2C2_DO_TX_EMPTY->i2_rd1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rd2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSendTxData
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSetCounter
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnReset
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnStop
    _I2C2_DO_BUS_COLLISION->i2_I2C2_NackCb
    _I2C2_DO_BUS_COLLISION->i2_rd1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rd2RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rdBlkRegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_RESTART_READ->i2_I2C2_MasterSetCounter
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnReset
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnStop
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_NackCb
    i2_I2C2_DO_RX_EMPTY->i2_rd1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rd2RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rdBlkRegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnReset
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnStop
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_NackCb
    _I2C2_DO_ADDRESS_NACK->i2_rd1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rd2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rdBlkRegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr2RegCompleteHandler
    i2_wr2RegCompleteHandler->i2_I2C2_SetBuffer
    i2_wr1RegCompleteHandler->i2_I2C2_SetBuffer
    i2_rdBlkRegCompleteHandler->i2_I2C2_SetBuffer
    i2_rd2RegCompleteHandler->i2_I2C2_SetBuffer
    i2_rd1RegCompleteHandler->i2_I2C2_SetBuffer
    i2_I2C2_SetDataCompleteCallback->i2_I2C2_SetCallback
    _ADCC_ThresholdISR->_adcCaptureIsr
    _adcCaptureIsr->i2_adcGetCh
    i2_adcGetCh->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART1_Write
    i2_abs->i2___aomod
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _main->___fltol
    _vMeasureInit->_TMR2_SetInterruptHandler
    _screenInit->_LcdI2CInit
    _blink->_command
    _LcdI2CInit->_timeDelayMs
    _home->_timeDelayMs
    _display->_command
    _clear->_timeDelayMs
    ___fltol->___fladd
    ___fladd->___xxtofl
    _keyReadEC->_timeDiff
    _timeDiff->_timeGet
    _vMeasureGet->___lldiv
    ___lldiv->___lmul
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR1_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _timeElapsedR->_TMR1_ReadTimer
    _timeDelayMs->_timeElapsed
    _timeElapsed->_TMR1_ReadTimer
    _noBacklight->_expanderWriteBlock
    _backlight->_expanderWriteBlock
    _expanderWriteBlock->_send4bits
    _setCursor->_command
    _command->_send
    _send->_send4bits
    _printstrblock->_printstr
    _keyRead->_keyPeek
    _keyPeek->_digitalReadC
    _keyPeek->_digitalReadD
    _timeGet->_TMR1_ReadTimer
    _sprintf->_vfprintf
    _bRateGet->___awdiv
    ___awdiv->___wmul
    _I2C2_DO_SEND_ADR_WRITE->_I2C2_MasterSendTxData
    _wr2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _I2C2_SetDataCompleteCallback->_I2C2_SetCallback
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->___wmul
    ___wmul->_timeDiff
    _I2C2_MOpen->_I2C2_SetAddressNackCallback
    _I2C2_MOpen->_I2C2_SetDataNackCallback
    _I2C2_SetDataNackCallback->_I2C2_SetCallback
    _I2C2_SetAddressNackCallback->_I2C2_SetCallback
    _I2C2_Open->_I2C2_SetInterruptHandler
    _MonitorMsgBusy->_I2C2_MClose
    _I2C2_MClose->_I2C2_Close

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_vMeasureIsr
    _vMeasureIsr->i2_aCaptGetResult
    i2_aCaptGetResult->i2_printf
    _ADCC_ThresholdISR->_adcCaptureIsr
    _adcCaptureIsr->i2_printf
    i2_adcGetCh->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _inspOSMeasure->_printf
    _aCaptureInit->_adcGetCh
    _adcGetCh->_printf
    _SelfTest->_pressureSensorChk
    _pressureSensorChk->_aCaptGetResult
    _aCaptureOffSet->_printf
    _aCaptRstFlt->_printf
    _flowChk->_MonitorMsgSendBlock
    _aCaptureOffGet->_printf
    _MonitorMsgSend->_MonitorMsgForcedSend
    _MenuMng->_printf
    _CtrlPowerOff->_MonitorMsgSendBlock
    _screenMng->_sprintf
    _MonitorMsgSendBlock->_MonitorMsgForcedSend
    _MonitorMsgForcedSend->_aCaptGetResult
    _sprintf->_vfprintf
    _aCaptGetResult->_printf
    _I2C2_DO_SEND_ADR_READ->_I2C2_DO_RX_EMPTY
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnReset
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnStop
    _I2C2_DO_RX_EMPTY->_I2C2_NackCb
    _I2C2_DO_RX_EMPTY->_rd1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rd2RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rdBlkRegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr2RegCompleteHandler
    _I2C2_NackCb->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_SelfTest

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_SelfTest

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0 1577415
                                             15 BANK3     34    34      0
                       _CtrlPowerOff
                       _I2C2_MuxInit
                            _MenuMng
                    _MonitorErrorClr
                    _MonitorErrorSet
                        _MonitorInit
                     _MonitorMsgBusy
                     _MonitorMsgSend
                _MonitorMsgSendBlock
                  _SYSTEM_Initialize
                           _SelfTest
           _TMR4_SetInterruptHandler
                         _TMR4_Start
                            ___awdiv
                            ___fladd
                            ___fltol
                            ___ltdiv
                            ___lwdiv
                             ___tmul
                             ___wmul
                           ___xxtofl
                     _aCaptGetResult
                        _aCaptRstFlt
                       _aCaptureInit
                           _bRateGet
                          _bRateInit
                          _bRateUpdt
                      _inspOSMeasure
                            _keyPeek
                            _keyRead
                          _keyReadEC
                        _keyReadInit
                             _printf
                      _printstrblock
                         _screenInit
                          _screenMng
                       _setBacklight
                          _setCursor
                            _sprintf
                        _timeDelayMs
                           _timeDiff
                        _timeElapsed
                       _timeElapsedR
                            _timeGet
                           _timeInit
                        _vMeasureGet
                       _vMeasureInit
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureInit                                         0     0      0     211
           _TMR2_SetInterruptHandler
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timeInit                                             0     0      0       0
                    _TMR0_StartTimer
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _screenInit                                           0     0      0   47888
                         _LcdI2CInit
                              _blink
                              _clear
                      _printstrblock
                          _setCursor
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (2) _blink                                                0     0      0    1078
                            _command
 ---------------------------------------------------------------------------------
 (2) _LcdI2CInit                                           3     1      2   24560
                                             63 BANK0      3     1      2
           _TMR6_SetInterruptHandler
                              _clear
                            _command
                            _display
                 _expanderWriteBlock
                               _home
                          _send4bits
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (3) _home                                                 0     0      0    7147
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (3) _display                                              0     0      0    1078
                            _command
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0    7147
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (1) _inspOSMeasure                                       13    13      0   47375
                                             96 BANK1     13    13      0
                             ___lmul
                            ___ltdiv
                             ___tmul
                             ___wmul
                             _printf
                        _vMeasureGet
 ---------------------------------------------------------------------------------
 (2) ___ltdiv                                             10     4      6     961
                                             43 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _bRateUpdt                                            4     4      0      31
                                             43 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _bRateInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aCaptureInit                                         2     2      0   29477
                                             99 BANK1      2     2      0
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
                           _adcGetCh
 ---------------------------------------------------------------------------------
 (2) _adcGetCh                                             3     3      0   29136
                                             96 BANK1      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                             73 BANK0      6     2      4
                                              0 BANK1      4     4      0
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    3402
                                             57 BANK0     16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SelfTest                                            27    27      0  709430
                                              0 BANK2      4     4      0
                                              0 BANK3     15    15      0
                _MonitorMsgSendBlock
                     _aCaptGetResult
                     _aCaptureOffSet
                            _flowChk
                            _keyPeek
                          _keyReadEC
                        _keyReadInit
                  _pressureSensorChk
                             _printf
                      _printstrblock
                       _setBacklight
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
 ---------------------------------------------------------------------------------
 (2) _pressureSensorChk                                   37    35      2  171008
                                            108 BANK1     37    35      2
                             ___lmul
                     _aCaptGetResult
                        _aCaptRstFlt
                     _aCaptureOffSet
                             _printf
                      _printstrblock
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
 ---------------------------------------------------------------------------------
 (3) _aCaptureOffSet                                       3     1      2   29589
                                             96 BANK1      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _aCaptRstFlt                                          5     5      0   29260
                                             96 BANK1      5     5      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _keyReadInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyReadEC                                            3     3      0    5134
                                             59 BANK0      3     3      0
                            _keyPeek
                           _timeDiff
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeDiff                                             6     2      4    4512
                                             53 BANK0      6     2      4
                            _timeGet (ARG)
 ---------------------------------------------------------------------------------
 (2) _flowChk                                             18    18      0  267175
                                            115 BANK1     18    18      0
                _MonitorMsgSendBlock
                             ___flge
                            ___lldiv
                             ___lmul
                           ___xxtofl
                     _aCaptGetResult
                     _aCaptureOffGet
                             _printf
                      _printstrblock
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
                        _vMeasureGet
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureRst                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vMeasureGet                                          6     4      2     635
                                             68 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             55 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _aCaptureOffGet                                       3     1      2   29167
                                             96 BANK1      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                             43 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1616
                                             43 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                             57 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1328
                    _ADCC_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     484
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             43 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MonitorMsgSend                                       1     1      0  126701
                                            114 BANK1      1     1      0
               _MonitorMsgForcedSend
                       _timeElapsedR
 ---------------------------------------------------------------------------------
 (1) _timeElapsedR                                        10     6      4    1914
                                             51 BANK0     10     6      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _MonitorInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuMng                                             15    15      0   35271
                                             96 BANK1     15    15      0
                            ___awdiv
                            ___lwdiv
                            _keyRead
                             _printf
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _I2C2_MuxInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CtrlPowerOff                                         0     0      0  223399
                _MonitorMsgSendBlock
                       _PrintStrBusy
                            _keyRead
                             _printf
                      _printstrblock
                          _screenMng
                       _setBacklight
                          _setCursor
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (1) _timeDelayMs                                          4     2      2    6069
                                             59 BANK0      4     2      2
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeElapsed                                          8     4      4    2392
                                             51 BANK0      8     4      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _setBacklight                                         1     1      0    1619
                                             48 BANK0      1     1      0
                          _backlight
                        _noBacklight
 ---------------------------------------------------------------------------------
 (2) _noBacklight                                          0     0      0     794
                 _expanderWriteBlock
 ---------------------------------------------------------------------------------
 (2) _backlight                                            0     0      0     794
                 _expanderWriteBlock
 ---------------------------------------------------------------------------------
 (3) _expanderWriteBlock                                   1     1      0     794
                                             47 BANK0      1     1      0
                          _send4bits
 ---------------------------------------------------------------------------------
 (1) _screenMng                                            4     4      0   52200
                                             92 BANK1      4     4      0
                       _PrintStrBusy
                            ___lwdiv
                             ___tmul
                             ___wmul
                           _printstr
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setCursor                                           10     9      1    5351
                                             50 BANK0     10     9      1
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              1     1      0    1078
                                             49 BANK0      1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (3) _send                                                 2     1      1    1047
                                             47 BANK0      2     1      1
                          _send4bits
 ---------------------------------------------------------------------------------
 (4) _send4bits                                            4     3      1     763
                                             43 BANK0      4     3      1
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6    6616
                                             43 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1141
                                             43 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _printstrblock                                        2     0      2    3683
                                             47 BANK0      2     0      2
                       _PrintStrBusy
                           _printstr
 ---------------------------------------------------------------------------------
 (2) _printstr                                             4     2      2     592
                                             43 BANK0      4     2      2
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (5) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PrintStrBusy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyRead                                              5     5      0     452
                                             48 BANK0      5     5      0
                            _keyPeek
 ---------------------------------------------------------------------------------
 (2) _keyPeek                                              2     2      0     322
                                             46 BANK0      2     2      0
                       _digitalReadC
                       _digitalReadD
 ---------------------------------------------------------------------------------
 (3) _digitalReadD                                         3     3      0      31
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _digitalReadC                                         3     3      0      31
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _MonitorMsgSendBlock                                  1     1      0  124920
                                            114 BANK1      1     1      0
                          _I2C2_MAck
                     _MonitorMsgBusy
               _MonitorMsgForcedSend
 ---------------------------------------------------------------------------------
 (4) _MonitorMsgForcedSend                                 6     6      0  124756
                                            108 BANK1      6     6      0
                          _I2C2_MAck
                        _I2C2_MClose
                         _I2C2_MOpen
               _I2C2_MasterOperation
                     _I2C2_SetBuffer
                    _MonitorErrorClr
                    _MonitorErrorSet
                     _aCaptGetResult
                           _bRateGet
                            _sprintf
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeGet                                              2     0      2     102
                                             51 BANK0      2     0      2
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                       8     6      2     102
                                             43 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   30556
                                             70 BANK1     22    10     12
                            ___lldiv (ARG)
                             ___lmul (ARG)
                            ___lwdiv (ARG)
                             ___tmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _bRateGet                                             0     0      0    1705
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1705
                                             65 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _aCaptGetResult                                      12    10      2   31784
                                             96 BANK1     12    10      2
                             _printf
 ---------------------------------------------------------------------------------
 (5) _MonitorErrorSet                                      1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _MonitorErrorClr                                      1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterOperation                                 2     2      0   53953
                                            100 BANK1      2     2      0
              _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_SEND_ADR_WRITE
              _I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (6) _I2C2_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C2_DO_SEND_ADR_READ                                0     0      0   53823
                   _I2C2_DO_RX_EMPTY
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterSendTxData                                1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_DO_RX_EMPTY                                     2     2      0   53792
                                             98 BANK1      2     2      0
                   Absolute function *
           _I2C2_CallbackReturnReset *
            _I2C2_CallbackReturnStop *
          _I2C2_MasterDisableRestart
           _I2C2_MasterEnableRestart
              _I2C2_MasterSetCounter
                        _I2C2_NackCb *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4883
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4887
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C2_SetDataCompleteCallback                         4     0      4    2699
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C2_SetBuffer                                       4     0      4    2122
                                             43 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C2_NackCb                                          2     0      2   29345
                                             96 BANK1      2     0      2
            _I2C2_CallbackReturnStop
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26     4     22   29105
                                             70 BANK1     26     4     22
                             ___tmul (ARG)
                           _bRateGet (ARG)
                            _keyPeek (ARG)
                           _timeDiff (ARG)
                            _timeGet (ARG)
                        _vMeasureGet (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24799
                                             77 BANK0      2     2      0
                                             64 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    40      5   23867
                                             72 BANK0      5     0      5
                                             39 BANK1     25    25      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5903
                                              0 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             49 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6139
                                              0 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3873
                                             61 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             43 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1630
                                             54 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1130
                                             45 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                             44 BANK0      1     1      0
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (9) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             61 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             43 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             43 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    8945
                                             65 BANK0      6     4      2
                                              0 BANK1      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             43 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7842
                                             59 BANK0      6     2      4
                           _timeDiff (ARG)
                            _timeGet (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C2_CallbackReturnStop                              2     0      2      90
                                             96 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterSetCounter                                1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C2_MasterDisableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C2_CallbackReturnReset                             2     0      2       0
                                             96 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MOpen                                           1     1      0    3963
                                             52 BANK0      1     1      0
                          _I2C2_Open
        _I2C2_SetAddressNackCallback
           _I2C2_SetDataNackCallback
 ---------------------------------------------------------------------------------
 (6) _I2C2_SetDataNackCallback                             4     0      4    1419
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C2_SetAddressNackCallback                          4     0      4    2259
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C2_SetCallback                                    5     1      4    1037
                                             43 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C2_Open                                            2     2      0     189
                                             45 BANK0      2     2      0
                _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
                    _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (7) _I2C2_SetInterruptHandler                             2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MonitorMsgBusy                                       0     0      0     133
                        _I2C2_MClose
 ---------------------------------------------------------------------------------
 (5) _I2C2_MClose                                          1     1      0     133
                                             44 BANK0      1     1      0
                         _I2C2_Close
 ---------------------------------------------------------------------------------
 (6) _I2C2_Close                                           1     1      0      37
                                             43 BANK0      1     1      0
                _I2C2_MasterClearIrq
                   _I2C2_MasterClose
              _I2C2_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INTERRUPT_InterruptManager                          4     4      0  215737
                                             39 BANK0      4     4      0
                   Absolute function *
                  _ADCC_ThresholdISR
                     _I2C2_MasterIsr *
                           _TMR2_ISR
                           _TMR4_ISR
                           _TMR6_ISR
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR6_ISR                                            0     0      0     155
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                      _lcdIrqHandler *
 ---------------------------------------------------------------------------------
 (20) _lcdIrqHandler                                       2     2      0     155
                                              0 COMRAM     2     2      0
                       i2_TMR6_Start
 ---------------------------------------------------------------------------------
 (21) i2_TMR6_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
                       _SV2DelayOpen *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _SV2DelayOpen                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR2_ISR                                            0     0      0   13026
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                        _vMeasureIsr *
 ---------------------------------------------------------------------------------
 (20) _vMeasureIsr                                         8     8      0   13026
                                             93 COMRAM     2     2      0
                                             33 BANK0      6     6      0
                              _isqrt
                   i2_aCaptGetResult
 ---------------------------------------------------------------------------------
 (21) i2_aCaptGetResult                                   12    10      2   12454
                                             83 COMRAM    10    10      0
                                             31 BANK0      2     0      2
                           i2_printf
 ---------------------------------------------------------------------------------
 (21) _isqrt                                              10     8      2     326
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (20) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _I2C2_MasterIsr                                      0     0      0  178306
                     _I2C2_MasterFsm
 ---------------------------------------------------------------------------------
 (20) _I2C2_MasterFsm                                      2     2      0  178306
                                             12 COMRAM     2     2      0
           _I2C2_ClearInterruptFlags
               _I2C2_DO_ADDRESS_NACK *
              _I2C2_DO_BUS_COLLISION *
                  _I2C2_DO_BUS_ERROR *
                       _I2C2_DO_IDLE *
                      _I2C2_DO_RESET *
                         _I2C2_DO_RX *
                     _I2C2_DO_RX_ACK *
            _I2C2_DO_RX_NACK_RESTART *
               _I2C2_DO_RX_NACK_STOP *
               _I2C2_DO_SEND_RESTART *
          _I2C2_DO_SEND_RESTART_READ *
         _I2C2_DO_SEND_RESTART_WRITE *
                  _I2C2_DO_SEND_STOP *
                         _I2C2_DO_TX *
                     _I2C2_DO_TX_ACK *
                   _I2C2_DO_TX_EMPTY *
                  _I2C2_MasterIsNack
                 i2_I2C2_DO_RX_EMPTY *
            i2_I2C2_DO_SEND_ADR_READ *
           i2_I2C2_DO_SEND_ADR_WRITE *
 ---------------------------------------------------------------------------------
 (21) i2_I2C2_DO_SEND_ADR_WRITE                            0     0      0      22
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX                                          6     6      0   48692
                                              6 COMRAM     6     6      0
                   Absolute function *
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
                   _I2C2_DO_TX_EMPTY
                  _I2C2_MasterIsNack
            _I2C2_MasterIsTxBufEmpty
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
            i2_I2C2_MasterSendTxData
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsTxBufEmpty                             0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX_EMPTY                                    2     2      0   16181
                                              6 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_SEND_STOP                                   0     0      0      44
              _I2C2_MasterGetCounter
                    _I2C2_MasterStop
            i2_I2C2_MasterSendTxData
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterGetCounter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_NACK_STOP                                0     0      0       0
                       _I2C2_DO_IDLE
                _I2C2_MasterSendNack
                    _I2C2_MasterStop
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C2_MasterSendNack
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX                                          3     3      0   16215
                                              0 COMRAM     3     3      0
               _I2C2_MasterGetRxData
             _I2C2_MasterIsRxBufFull
                 i2_I2C2_DO_RX_EMPTY
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsRxBufFull                              0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_BUS_ERROR                                   0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_BUS_COLLISION                               2     2      0   32384
                                              6 COMRAM     2     2      0
                   Absolute function *
                      _I2C2_DO_RESET
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
              i2_I2C2_MasterClearIrq
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_SEND_RESTART_WRITE                          0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_SEND_RESTART_READ                           0     0      0   16225
            i2_I2C2_DO_SEND_ADR_READ
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (21) i2_I2C2_DO_SEND_ADR_READ                             0     0      0   16203
                 i2_I2C2_DO_RX_EMPTY
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_MasterSendTxData                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_DO_RX_EMPTY                                  2     2      0   16181
                                              6 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterSetCounter                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterEnableRestart                          0     0      0       0
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterDisableRestart                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RESET                                       0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterResetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_ADDRESS_NACK                                2     2      0   16159
                                              6 COMRAM     2     2      0
                   Absolute function *
               _I2C2_DO_SEND_RESTART
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (23) i2_wr2RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_wr1RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rdBlkRegCompleteHandler                           2     0      2     858
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rd2RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rd1RegCompleteHandler                             2     0      2     966
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_SetDataCompleteCallback                      4     0      4     510
                                              5 COMRAM     4     0      4
                 i2_I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (25) i2_I2C2_SetCallback                                  5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_SetBuffer                                    4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_NackCb                                       2     0      2   11801
                                              4 COMRAM     2     0      2
          i2_I2C2_CallbackReturnStop
                           i2_printf
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_CallbackReturnStop                           2     0      2      26
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_CallbackReturnReset                          2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_SEND_RESTART                                0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_ClearInterruptFlags                            0     0      0       0
          _I2C2_MasterClearCountFlag
           _I2C2_MasterClearNackFlag
           _I2C2_MasterClearStopFlag
          _I2C2_MasterIsCountFlagSet
           _I2C2_MasterIsNackFlagSet
           _I2C2_MasterIsStopFlagSet
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsStopFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsNackFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsCountFlagSet                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearStopFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearNackFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearCountFlag                           0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_ThresholdISR                                   0     0      0   24250
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                      _adcCaptureIsr *
 ---------------------------------------------------------------------------------
 (20) _adcCaptureIsr                                      13    13      0   24250
                                             86 COMRAM     8     8      0
                                             31 BANK0      5     5      0
                _ADCC_GetFilterValue
             i2_ADCC_StartConversion
                           i2___lmul
                         i2_adcGetCh
                           i2_printf
 ---------------------------------------------------------------------------------
 (21) i2_adcGetCh                                          3     3      0   11806
                                             83 COMRAM     3     3      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (22) i2_printf                                            8     4      4   11775
                                             79 COMRAM     4     4      0
                                             27 BANK0      4     0      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (23) i2_vfprintf                                          8     2      6   11542
                                             77 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (24) i2_vfpfcnvrt                                        45    40      5   11162
                                             68 COMRAM     9     4      5
                                              0 BANK0     21    21      0
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (25) i2_xtoa                                             39    28     11    3753
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (26) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (27) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (25) i2_dtoa                                             36    26     10    4269
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (26) i2_pad                                              11     5      6    2388
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (27) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (27) i2_fputs                                             7     3      4     970
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (28) i2_fputc                                             9     5      4     690
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (29) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                      i2_UART1_Write
                i2_UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (30) i2_UART1_is_tx_ready                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (30) i2_UART1_Write                                       1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (26) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (26) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (26) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (25) i2_atoi                                             15    13      2    1045
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (26) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (25) i2_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (21) i2___lmul                                           12     4      8     300
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (21) i2_ADCC_StartConversion                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (21) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 30
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtrlPowerOff
     _MonitorMsgSendBlock
       _I2C2_MAck
       _MonitorMsgBusy
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
       _MonitorMsgForcedSend
         _I2C2_MAck
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
         _I2C2_MOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
           _I2C2_SetAddressNackCallback
             _I2C2_SetCallback
           _I2C2_SetDataNackCallback
             _I2C2_SetCallback
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _I2C2_NackCb *
                 _I2C2_CallbackReturnStop
                 _printf
                   ___tmul (ARG)
                   _bRateGet (ARG)
                     ___awdiv
                       ___wmul (ARG)
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                   _keyPeek (ARG)
                     _digitalReadC
                     _digitalReadD
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                   _vMeasureGet (ARG)
                     ___lldiv
                       ___lmul (ARG)
                   _vfprintf (ARG)
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _isdigit
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                         _toupper
                           _islower
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
         _I2C2_SetBuffer
         _MonitorErrorClr
         _MonitorErrorSet
         _aCaptGetResult
           _printf
             ___tmul (ARG)
             _bRateGet (ARG)
               ___awdiv
                 ___wmul (ARG)
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
             _keyPeek (ARG)
               _digitalReadC
               _digitalReadD
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
             _vMeasureGet (ARG)
               ___lldiv
                 ___lmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
         _bRateGet
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _sprintf
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwdiv (ARG)
           ___tmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
         _timeGet
           _TMR1_ReadTimer
     _PrintStrBusy
     _keyRead
       _keyPeek
         _digitalReadC
         _digitalReadD
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _screenMng
       _PrintStrBusy
       ___lwdiv
       ___tmul
       ___wmul
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
       _printstr
         _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _setBacklight
       _backlight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
       _noBacklight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
   _I2C2_MuxInit
   _MenuMng
     ___awdiv
       ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
     ___lwdiv
     _keyRead
       _keyPeek
         _digitalReadC
         _digitalReadD
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _MonitorErrorClr
   _MonitorErrorSet
   _MonitorInit
   _MonitorMsgBusy
     _I2C2_MClose
       _I2C2_Close
         _I2C2_MasterClearIrq
         _I2C2_MasterClose
         _I2C2_MasterDisableIrq
   _MonitorMsgSend
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
         _I2C2_SetAddressNackCallback
           _I2C2_SetCallback
         _I2C2_SetDataNackCallback
           _I2C2_SetCallback
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _I2C2_NackCb *
               _I2C2_CallbackReturnStop
               _printf
                 ___tmul (ARG)
                 _bRateGet (ARG)
                   ___awdiv
                     ___wmul (ARG)
                       _timeDiff (ARG)
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                 _keyPeek (ARG)
                   _digitalReadC
                   _digitalReadD
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
                 _vMeasureGet (ARG)
                   ___lldiv
                     ___lmul (ARG)
                 _vfprintf (ARG)
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _isdigit
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                       _toupper
                         _islower
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _bRateGet
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeGet
         _TMR1_ReadTimer
     _timeElapsedR
       _TMR1_ReadTimer
   _MonitorMsgSendBlock
     _I2C2_MAck
     _MonitorMsgBusy
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
         _I2C2_SetAddressNackCallback
           _I2C2_SetCallback
         _I2C2_SetDataNackCallback
           _I2C2_SetCallback
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _I2C2_NackCb *
               _I2C2_CallbackReturnStop
               _printf
                 ___tmul (ARG)
                 _bRateGet (ARG)
                   ___awdiv
                     ___wmul (ARG)
                       _timeDiff (ARG)
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                 _keyPeek (ARG)
                   _digitalReadC
                   _digitalReadD
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
                 _vMeasureGet (ARG)
                   ___lldiv
                     ___lmul (ARG)
                 _vfprintf (ARG)
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _isdigit
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                       _toupper
                         _islower
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _bRateGet
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeGet
         _TMR1_ReadTimer
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetTxInterruptHandler
   _SelfTest
     _MonitorMsgSendBlock
       _I2C2_MAck
       _MonitorMsgBusy
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
       _MonitorMsgForcedSend
         _I2C2_MAck
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
         _I2C2_MOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
           _I2C2_SetAddressNackCallback
             _I2C2_SetCallback
           _I2C2_SetDataNackCallback
             _I2C2_SetCallback
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _I2C2_NackCb *
                 _I2C2_CallbackReturnStop
                 _printf
                   ___tmul (ARG)
                   _bRateGet (ARG)
                     ___awdiv
                       ___wmul (ARG)
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                   _keyPeek (ARG)
                     _digitalReadC
                     _digitalReadD
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                   _vMeasureGet (ARG)
                     ___lldiv
                       ___lmul (ARG)
                   _vfprintf (ARG)
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _isdigit
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                         _toupper
                           _islower
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
         _I2C2_SetBuffer
         _MonitorErrorClr
         _MonitorErrorSet
         _aCaptGetResult
           _printf
             ___tmul (ARG)
             _bRateGet (ARG)
               ___awdiv
                 ___wmul (ARG)
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
             _keyPeek (ARG)
               _digitalReadC
               _digitalReadD
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
             _vMeasureGet (ARG)
               ___lldiv
                 ___lmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
         _bRateGet
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _sprintf
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwdiv (ARG)
           ___tmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
         _timeGet
           _TMR1_ReadTimer
     _aCaptGetResult
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _aCaptureOffSet
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _flowChk
       _MonitorMsgSendBlock
         _I2C2_MAck
         _MonitorMsgBusy
           _I2C2_MClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
         _MonitorMsgForcedSend
           _I2C2_MAck
           _I2C2_MClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
           _I2C2_MOpen
             _I2C2_Open
               _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
               _I2C2_MasterOpen
               _I2C2_SetInterruptHandler
             _I2C2_SetAddressNackCallback
               _I2C2_SetCallback
             _I2C2_SetDataNackCallback
               _I2C2_SetCallback
           _I2C2_MasterOperation
             _I2C2_DO_SEND_ADR_READ
               _I2C2_DO_RX_EMPTY
                 Absolute function(Fake) *
                 _I2C2_CallbackReturnReset *
                 _I2C2_CallbackReturnStop *
                 _I2C2_MasterDisableRestart *
                 _I2C2_MasterEnableRestart *
                 _I2C2_MasterSetCounter *
                 _I2C2_NackCb *
                   _I2C2_CallbackReturnStop
                   _printf
                     ___tmul (ARG)
                     _bRateGet (ARG)
                       ___awdiv
                         ___wmul (ARG)
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                     _keyPeek (ARG)
                       _digitalReadC
                       _digitalReadD
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                     _vMeasureGet (ARG)
                       ___lldiv
                         ___lmul (ARG)
                     _vfprintf (ARG)
                       _vfpfcnvrt
                         _atoi
                           ___wmul
                             _timeDiff (ARG)
                               _timeGet (ARG)
                                 _TMR1_ReadTimer
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _isdigit
                           _isspace
                         _dtoa
                           ___aodiv
                           ___aomod
                           _abs
                             ___aomod (ARG)
                           _pad
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                             _fputs
                               _fputc
                                 _putch
                                   _UART1_Write
                                   _UART1_is_tx_ready
                             _strlen
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _isdigit
                         _xtoa
                           _isalpha
                           _isupper
                           _pad
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                             _fputs
                               _fputc
                                 _putch
                                   _UART1_Write
                                   _UART1_is_tx_ready
                             _strlen
                           _toupper
                             _islower
                 _rd1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
               _I2C2_MasterSendTxData
             _I2C2_DO_SEND_ADR_WRITE
               _I2C2_MasterSendTxData
             _I2C2_MasterSetCounter
           _I2C2_SetBuffer
           _MonitorErrorClr
           _MonitorErrorSet
           _aCaptGetResult
             _printf
               ___tmul (ARG)
               _bRateGet (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
               _keyPeek (ARG)
                 _digitalReadC
                 _digitalReadD
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
               _vMeasureGet (ARG)
                 ___lldiv
                   ___lmul (ARG)
               _vfprintf (ARG)
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                       _timeDiff (ARG)
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _fputs
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                       _strlen
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _isdigit
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _fputs
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                       _strlen
                     _toupper
                       _islower
           _bRateGet
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _sprintf
             ___lldiv (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwdiv (ARG)
             ___tmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
           _timeGet
             _TMR1_ReadTimer
       ___flge
         ___xxtofl (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___xxtofl
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptureOffGet
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _printstrblock
         _PrintStrBusy
         _printstr
           _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
       _timeElapsedR
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
       _vMeasureGet
         ___lldiv
           ___lmul (ARG)
       _vMeasureRst
     _keyPeek
       _digitalReadC
       _digitalReadD
     _keyReadEC
       _keyPeek
         _digitalReadC
         _digitalReadD
       _timeDiff
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _keyReadInit
     _pressureSensorChk
       ___lmul
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptRstFlt
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptureOffSet
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _printstrblock
         _PrintStrBusy
         _printstr
           _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
       _timeElapsedR
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _setBacklight
       _backlight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
       _noBacklight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwdiv (ARG)
       ___tmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _timeElapsedR
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _TMR4_SetInterruptHandler
   _TMR4_Start
   ___awdiv
     ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
   ___fladd
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___ltdiv
   ___lwdiv
   ___tmul
   ___wmul
     _timeDiff (ARG)
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet (ARG)
       _TMR1_ReadTimer
   ___xxtofl
   _aCaptGetResult
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _aCaptRstFlt
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _aCaptureInit
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
     _adcGetCh
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
   _bRateGet
     ___awdiv
       ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
   _bRateInit
   _bRateUpdt
   _inspOSMeasure
     ___lmul
     ___ltdiv
     ___tmul
     ___wmul
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _vMeasureGet
       ___lldiv
         ___lmul (ARG)
   _keyPeek
     _digitalReadC
     _digitalReadD
   _keyRead
     _keyPeek
       _digitalReadC
       _digitalReadD
   _keyReadEC
     _keyPeek
       _digitalReadC
       _digitalReadD
     _timeDiff
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _keyReadInit
   _printf
     ___tmul (ARG)
     _bRateGet (ARG)
       ___awdiv
         ___wmul (ARG)
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
     _keyPeek (ARG)
       _digitalReadC
       _digitalReadD
     _timeDiff (ARG)
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet (ARG)
       _TMR1_ReadTimer
     _vMeasureGet (ARG)
       ___lldiv
         ___lmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
           _toupper
             _islower
   _printstrblock
     _PrintStrBusy
     _printstr
       _TMR6_Start
   _screenInit
     _LcdI2CInit
       _TMR6_SetInterruptHandler
       _clear
         _command
           _send
             _send4bits
               _TMR6_Start
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _command
         _send
           _send4bits
             _TMR6_Start
       _display
         _command
           _send
             _send4bits
               _TMR6_Start
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
       _home
         _command
           _send
             _send4bits
               _TMR6_Start
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _send4bits
         _TMR6_Start
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
     _blink
       _command
         _send
           _send4bits
             _TMR6_Start
     _clear
       _command
         _send
           _send4bits
             _TMR6_Start
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
   _screenMng
     _PrintStrBusy
     ___lwdiv
     ___tmul
     ___wmul
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
     _printstr
       _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwdiv (ARG)
       ___tmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _setBacklight
     _backlight
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
     _noBacklight
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
   _setCursor
     _command
       _send
         _send4bits
           _TMR6_Start
   _sprintf
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     ___lwdiv (ARG)
     ___tmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
           _toupper
             _islower
   _timeDelayMs
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _timeDiff
     _timeGet (ARG)
       _TMR1_ReadTimer
   _timeElapsed
     _TMR1_ReadTimer
   _timeElapsedR
     _TMR1_ReadTimer
   _timeGet
     _TMR1_ReadTimer
   _timeInit
     _TMR0_StartTimer
     _TMR1_StartTimer
   _vMeasureGet
     ___lldiv
       ___lmul (ARG)
   _vMeasureInit
     _TMR2_SetInterruptHandler
     _TMR2_Start
   _vMeasureRst

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcCaptureIsr *
       _ADCC_GetFilterValue
       i2_ADCC_StartConversion
       i2___lmul
       i2_adcGetCh
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
                 i2_toupper
                   i2_islower
       i2_printf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
                 i2_UART1_is_tx_ready
             i2_isdigit
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                 i2_strlen
               i2_toupper
                 i2_islower
   _I2C2_MasterIsr *
     _I2C2_MasterFsm
       _I2C2_ClearInterruptFlags
         _I2C2_MasterClearCountFlag
         _I2C2_MasterClearNackFlag
         _I2C2_MasterClearStopFlag
         _I2C2_MasterIsCountFlagSet
         _I2C2_MasterIsNackFlagSet
         _I2C2_MasterIsStopFlagSet
       _I2C2_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_COLLISION *
         Absolute function(Fake) *
         _I2C2_DO_RESET *
           _I2C2_MasterResetBus
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_I2C2_NackCb *
                 i2_I2C2_CallbackReturnStop
                 i2_printf
                   i2_vfprintf
                     i2_vfpfcnvrt
                       i2_atoi
                         i2___wmul
                         i2_isdigit
                         i2_isspace
                       i2_dtoa
                         i2___aodiv
                         i2___aomod
                         i2_abs
                           i2___aomod (ARG)
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_isdigit
                       i2_xtoa
                         i2_isalpha
                         i2_isupper
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                         i2_toupper
                           i2_islower
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterClearIrq *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_ERROR *
         _I2C2_MasterResetBus
       _I2C2_DO_IDLE *
       _I2C2_DO_RESET *
         _I2C2_MasterResetBus
       _I2C2_DO_RX *
         _I2C2_MasterGetRxData
         _I2C2_MasterIsRxBufFull
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
       _I2C2_DO_RX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_RX_NACK_RESTART *
         _I2C2_MasterSendNack
       _I2C2_DO_RX_NACK_STOP *
         _I2C2_DO_IDLE
         _I2C2_MasterSendNack
         _I2C2_MasterStop
       _I2C2_DO_SEND_RESTART *
       _I2C2_DO_SEND_RESTART_READ *
         i2_I2C2_DO_SEND_ADR_READ
           i2_I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             i2_I2C2_CallbackReturnReset *
             i2_I2C2_CallbackReturnStop *
             i2_I2C2_MasterDisableRestart *
             i2_I2C2_MasterEnableRestart *
             i2_I2C2_MasterSetCounter *
             i2_I2C2_NackCb *
               i2_I2C2_CallbackReturnStop
               i2_printf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_isdigit
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                         i2_strlen
                       i2_toupper
                         i2_islower
             i2_rd1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rd2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rdBlkRegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
           i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_SEND_RESTART_WRITE *
       _I2C2_DO_SEND_STOP *
         _I2C2_MasterGetCounter
         _I2C2_MasterStop
         i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_TX *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_I2C2_NackCb *
                 i2_I2C2_CallbackReturnStop
                 i2_printf
                   i2_vfprintf
                     i2_vfpfcnvrt
                       i2_atoi
                         i2___wmul
                         i2_isdigit
                         i2_isspace
                       i2_dtoa
                         i2___aodiv
                         i2___aomod
                         i2_abs
                           i2___aomod (ARG)
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_isdigit
                       i2_xtoa
                         i2_isalpha
                         i2_isupper
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                         i2_toupper
                           i2_islower
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         _I2C2_DO_TX_EMPTY *
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         _I2C2_MasterIsNack *
         _I2C2_MasterIsTxBufEmpty *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterSendTxData *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_TX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_TX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_MasterIsNack *
       i2_I2C2_DO_RX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       i2_I2C2_DO_SEND_ADR_READ *
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         i2_I2C2_MasterSendTxData
       i2_I2C2_DO_SEND_ADR_WRITE *
         i2_I2C2_MasterSendTxData
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _vMeasureIsr *
       _isqrt
       i2_aCaptGetResult
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
                 i2_toupper
                   i2_islower
   _TMR4_ISR *
     Absolute function(Fake) *
     _SV2DelayOpen *
     _TMR4_DefaultInterruptHandler *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _lcdIrqHandler *
       i2_TMR6_Start
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     31      C1      11       75.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      4      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     91     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      75       5       73.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     393      32        0.0%
DATA                 0      0     393       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 22 17:22:27 2020

                                ?_vMeasureGet 00A4                                  ?_vMeasureIsr 0001  
                                ?_vMeasureRst 0001              __end_of_TMR2_SetInterruptHandler A41E  
                               ?_vMeasureInit 0001                            _I2C2_MasterSendAck A5A6  
                       _I2C2_DO_BUS_COLLISION 8E48                       _I2C2_MasterIsTxBufEmpty A4D6  
                                 __CFG_CP$OFF 000000                                    i2_adcGetCh 91B8  
                                          _IP 01FB                                ?_adcCaptureIsr 0001  
                                ___awdiv@sign 00A6                        __end_of_FVR_Initialize A554  
                         ___wmul@multiplicand 009D                           _I2C2_MasterSendNack A5A0  
                        _I2C2_DO_ADDRESS_NACK 9164                                  _chHighVAlarm 01BA  
                       __end_ofi2_UART1_Write 9570                 I2C2_SetAddressNackCallback@cb 0090  
                        ?_I2C2_MasterClearIrq 0001                                   __CFG_LVP$ON 000000  
                    __end_of_I2C2_SetCallback 8976                           _I2C2_MasterResetBus A542  
                               ?_CtrlPowerOff 0001                                           l456 9504  
                                         _BPM 01FC                           ?_I2C2_MasterSendAck 0001  
                          i2___aodiv@quotient 0013                    pressureSensorChk@mPValMean 0185  
                             _timer1ReloadVal 02EE                                           _abs 95F0  
                                         _pad 7F92                                    _LcdI2CInit 76B6  
            __end_ofi2_I2C2_DO_SEND_ADR_WRITE A268                       __size_of_PMD_Initialize 0024  
                             _TMR2_Initialize 9CC0                                           prod 003FF3  
                                         tosl 003FFD                                           wreg 003FE8  
                    ?i2_rd1RegCompleteHandler 0005                           __end_ofi2_vfpfcnvrt 4DFC  
                    _I2C2_ClearInterruptFlags 9C34             __end_of_I2C2_MasterIsCountFlagSet A48E  
                                _rSV2ValveCRT 019B                                  _rSV2ValveORT 019D  
                   ??_I2C2_DO_RX_NACK_RESTART 0001                            _UART1_Transmit_ISR 9A7E  
                               __CFG_BBEN$OFF 000000                      ?i2_wr1RegCompleteHandler 0005  
          __size_of_I2C2_DO_SEND_RESTART_READ 000E                                  _rSV3ValveORT 0199  
            __end_of_I2C2_CallbackReturnReset A51A                    ?_I2C2_DO_SEND_RESTART_READ 0001  
                                __CFG_ZCD$OFF 000000                           MonitorErrorClr@flag 008B  
                                ___fltol@exp1 00AE                             ?i2_I2C2_SetBuffer 0001  
                                ?_keyReadInit 0001                                          ?_abs 009D  
                     ??_rd2RegCompleteHandler 0094                                          l3110 618E  
                                        l3112 619A                                          l2082 85D0  
                                        l2091 9418                                          l3204 8550  
                                        l2425 2AF2                                          l3074 7FCC  
                                        l2427 2B06                                          l1804 1316  
                                        l1740 0406                                          l3085 5C72  
                                        l3087 5C7E                                          l1751 0784  
                                        l3442 7C52                                          l2491 2DA6  
                                        l1739 033C                                          l2820 5296  
                                        l1684 4FF4                                          l2821 52A2  
                        _ADCC_StartConversion A2E4                                          l1935 9076  
                                        l1775 0CB0                                          l2818 528A  
                                        l3722 57A2                                          l3706 56D0  
                                        l1786 1028                                          l1963 9372  
                                        l1955 9328                                          l3731 580A  
                                        l3707 56AE                                          l3643 8A48  
                                        l2676 8BEC                                          l2844 3AE8  
                                        l3732 5806                                          l1973 78B0  
                                        l1877 27A2                                          l1990 654A  
                     ?_I2C2_DO_SEND_ADR_WRITE 0001                                          ?_pad 009D  
                                        l2688 9D68                                          l3832 7088  
                                        l3648 8A3C                                          l1969 78F8  
                                        l2970 6BEE                                          l2858 3C68  
                                        l2795 40D8                                          l3852 9620  
                                        l1996 6644                                          l3668 9056  
                                        l3839 710E                                          l2978 6C86  
                                        l3883 6EBA                                          l2979 6C8C  
                                        l3957 9156                                          STR_1 FC9C  
                                        STR_2 FEE3                                          STR_3 FF6B  
                                        STR_4 FD08                                          STR_5 FD68  
                                        STR_6 FEF4                                          STR_7 FEE3  
                                        STR_8 FEE3                                          STR_9 FEE3  
                        _I2C2_MasterOperation 9464                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        _T6PR 003F93                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PEEP 01FA                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                   I2C2_MasterSendTxData@data 008B                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                        ?_I2C2_MasterSendNack 0001                         ?_I2C2_MasterEnableIrq 0001  
              __size_of_I2C2_DO_SEND_ADR_READ 0026                       ??_wr2RegCompleteHandler 0094  
                                        _MaxP 01FF                                          _MaxV 01FE  
                       ?_I2C2_MasterGetRxData 0001                 __end_of_I2C2_DO_SEND_ADR_READ 9F0E  
                                        _bdP1 01E9                                          _bdP2 00D2  
                               __CFG_FCMEN$ON 000000                            ??i2_I2C2_SetBuffer 0005  
                         ?_UART1_Transmit_ISR 0001                                          _chIP 01BE  
                              ?_printstrblock 008F                                          _pAdj 01A3  
                                        abs@a 009D                                          _vAdj 023E  
                                        _dbuf 0253                          ?_I2C2_MasterResetBus 0001  
                  pressureSensorChk@chkResult 017C                                          _atoi 6D3A  
                                        _main 001E                                          _dtoa 5BEC  
                                        _home A210                                          _send 9E76  
                                        _prec 00B4                               _TMR0_StartTimer A5C6  
                                        _nout 0232                                          pad@i 00A4  
                                        pad@p 00A1                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 00A6                                          fsr2l 003FD9  
                        ??_I2C2_MasterSendAck 0001                                   main@tmpUVal 03B7  
                                        _xtoa 616E                                   main@tmpVal2 03BB  
                       ??_MonitorMsgSendBlock 00AF                                   i2_atoi$5375 0010  
                                 i2_atoi$5376 0014                     __size_of_I2C2_DO_RX_EMPTY 0082  
                                 i2_atoi$5377 0012                                          prodh 003FF4  
                                        prodl 003FF3                                          start 001A  
                              _MonitorMsgBusy A32C                                _MonitorMsgSend 9DFE  
                             __end_ofi2_fputc 8252             __size_of_I2C2_SetDataNackCallback 0020  
                               i2_I2C2_NackCb 9AB0                         _I2C2_NackCb$intlevel0 96EC  
                             __end_ofi2_fputs 966C                     __size_of_I2C2_DO_TX_EMPTY 0064  
               ??_UART1_SetTxInterruptHandler 008D                     ?_I2C2_SetDataNackCallback 0090  
                             __end_ofi2_putch A2E4                              ??_I2C2_MasterFsm 000D  
                               __CFG_CSWEN$ON 000000                    i2rd1RegCompleteHandler@ptr 0005  
                            ??_I2C2_MasterIsr 000F                         _lastI2CMonTrfResponse 024C  
            __size_ofi2_I2C2_MasterSetCounter 000A                        ??_MonitorMsgForcedSend 016C  
                  ??_TMR4_SetInterruptHandler 008D                         _I2C2_MasterSetCounter A4BE  
                                 i2_dtoa$4891 0030                          aCaptGetResult@lclRaw 0168  
                         MonitorErrorSet@flag 008B                                  ___param_bank 000000  
            __size_ofi2_I2C2_MasterSendTxData 000A                    ??_I2C2_MasterIsNackFlagSet 0001  
                              ??_vMeasureInit 008D                         _I2C2_MasterSendTxData A4B2  
                                command@value 0091              __size_of_rdBlkRegCompleteHandler 0056  
                             __end_of_MenuMng 31AE                          aCaptGetResult@outVal 0160  
                                       ??_abs 009F                                         ??_pad 00A3  
                  __size_of_UART1_is_tx_ready 0010                                    i2_vfprintf 8B38  
                     __end_of_TMR0_Initialize A252                              ??_I2C2_SetBuffer 008F  
                 ??_I2C2_MasterDisableRestart 008B                                    _HighVAlarm 01FD  
                       ?_I2C2_DO_ADDRESS_NACK 0001                               ?_FVR_Initialize 0001  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0001  
                           __end_of_I2C2_MAck A594                 __end_of_OSCILLATOR_Initialize A1F8  
                       ??_I2C2_MasterClearIrq 008B                   ?_I2C2_DO_SEND_RESTART_WRITE 0001  
                                       l20011 30AA                                         l20003 3044  
                                       l20031 3178                                         l20009 30A2  
                                       l20017 30B8                                         l20121 55E4  
                                       l20019 30FC                                         l20027 311A  
                                       l20029 316C                                         l20205 572C  
                                       l20117 55E0                                         l21013 1EC2  
                                       l20223 57C6                                         l20215 5792  
                                       l21007 1EB4                                ??_CtrlPowerOff 00AF  
                                       l20233 57DC                                         l20129 5604  
                                       l20305 7D02                                         l20073 7DDE  
                                       l20065 7D9A                                         l21017 1ED2  
                                       l20171 56BC                                         l20323 7D42  
                                       l20315 7D1A                                         l21115 240C  
                                       l21035 1F50                                         l21019 1ED8  
                                       l20173 56C0                                         l20093 5598  
                                       l20317 7D26                                         l20309 7D12  
                                       l20069 7DB2                                         l21133 25B2  
                                       l21029 1F12                                         l20501 0328  
                                       l20413 00CA                                         l20271 588E  
                                       l20239 57E6                                         l20159 565E  
                                       l20079 7E00                                         l21151 2678  
                                       l21063 209C                                         l20273 5890  
                                       l20097 559C                                         l21145 2624  
                                       l21049 1FAA                                         l21081 2184  
                                       l20425 00FE                                         l20409 00BC  
                                       l20267 5886                                         l20259 5860  
                                       l20195 5716                                         l20187 56F4  
                                       l20531 0574                                         l20515 040E  
                                       l21171 299C                                         l20197 571A  
                                       l20605 082E                                         l20525 04D0  
                                       l20461 01A2                                         l21095 2286  
                                       l21079 217C                                         l21167 27AA  
                                       l20623 0882                                         l20535 05DC  
                                       l20471 01C4                                         l20439 0146  
                                       l20289 7CAC                                         l20713 0E1E  
                                       l20617 0874                                         l20529 0562  
                                       l20537 05E4                                         l20393 006A  
                                       l20811 13D8                                         l20803 131E  
                                       l20731 0F30                                         l20619 0878  
                                       l20475 01D4                                         l20395 006E  
                                       l16101 A2AA                                         l20901 19E2  
                                       l20821 1570                                         l20741 0FB0  
                                       l20717 0E42                                         l20573 07A2  
                                       l20557 0736                                         l20485 02A4  
                                       l20815 14A0                                         l20807 1358  
                                       l20727 0ED6                                         l20647 094C  
                                       l20831 1710                                         l20591 07E4  
                                       l20825 1586                                         l20745 0FC8  
                                       l20737 0F98                                         l20649 0952  
                                       l20585 07CE                                         l16203 8028  
                                       l20915 1AA8                                         l20499 0322  
                                       l16301 74CC                                         l20909 1A54  
                                       l20829 159A                                         l20693 0CB4  
                                       l20589 07DE                                         l16311 752A  
                                       l16135 810E                                         l16151 95BA  
                                       l20919 1AB4                                         l20847 17A2  
                                       l20679 0C18                                         l16161 9A5E  
                                       l20881 192E                                         l20865 18B6  
                                       l20849 17A8                                         l16315 7550  
                                       l16307 7514                                         l16083 94EE  
                                       l16155 95D8                                         l16411 5E80  
                                       l17211 87A0                                         l20875 18F8  
                                       l20795 12D4                                         l20947 1CB2  
                                       l20699 0CE2                                         l16501 6DCA  
                                       l16261 722C                                         l16253 71F2  
                                       l17205 8798                                         l20973 1DB0  
                                       l16327 945A                                         l16503 6DD2  
                                       l16271 7288                                         l16247 71CA  
                                       l16159 9A5A                                         l16407 5E66  
                                       l16431 61F8                                         l18015 9ED8  
                                       l18007 9EB6                                         l18103 78CC  
                                       l20967 1D84                                         l20799 12FA  
                                       l20983 1E46                                         l16505 6E02  
                                       l16097 9526                                         l16193 7FC4  
                                       l16425 61B6                                         l17161 970A  
                                       l17217 87AC                                         l18009 9EC6  
                                       l18033 8D4E                                         l20889 1966  
                                       l16259 7218                                         l16275 729E  
                                       l16291 747A                                         l16099 9528  
                                       l16195 7FD6                                         l17163 9710  
                                       l17227 87BC                                         l18043 8D5E  
                                       l18027 8D32                                         l18203 9024  
                                       l18115 9314                                         l20979 1DC6  
                                       l16509 6E48                                         l16189 7FB2  
                                       l16373 5CA2                                         l16453 62B2  
                                       l16461 634C                                         l17501 6458  
                                       l17413 866C                                         l17405 8654  
                                       l18205 902C                                         l19021 447A  
                                       l17319 9E4A                                         l16279 72C4  
                                       l16295 749E                                         l16199 7FF4  
                                       l16359 5C52                                         l16439 621C  
                                       l16703 45EA                                         l17503 6484  
                                       l17511 6520                                         l18215 904C  
                                       l18231 70BE                                         l18127 935E  
                                       l19015 445A                                         l16377 5CB4  
                                       l16721 46E8                                         l16705 4634  
                                       l17505 64B0                                         l17409 865E  
                                       l18049 8D7C                                         l18161 93AA  
                                       l18233 70C4                                         l18225 70A0  
                                       l19113 53D0                                         l19041 4568  
                                       l19025 44C6                                         l17603 8BF2  
                                       l16483 6D4E                                         l16299 74B8  
                                       l16387 5DF8                                         l17523 65FE  
                                       l17507 64DC                                         l18075 8D10  
                                       l18171 8DB0                                         l18243 7134  
                                       l18235 70D0                                         l19131 5470  
                                       l16493 6DAC                                         l16485 6D54  
                                       l16477 63CA                                         l16717 46B6  
                                       l17533 6618                                         l17541 6660  
                                       l17381 8606                                         l17701 791A  
                                       l18157 939A                                         l17357 8F72  
                                       l18261 7184                                         l18245 7140  
                                       l18237 70F6                                         l18085 9A3E  
                                       l18093 77E0                                         l19037 4556  
                                       l17623 9D74                                         l17607 8C00  
                                       l16751 4926                                         l16719 46DA  
                                       l17199 8790                                         l17527 6602  
                                       l17519 65B8                                         l17711 79B4  
                                       l17359 8F7E                                         l18183 7C26  
                                       l18167 8D9C                                         l19127 545C  
                                       l18095 780A                                         l16761 4974  
                                       l16737 481C                                         l16681 45BA  
                                       l17473 94A2                                         l17393 862C  
                                       l17801 6CF8                                         l17369 8FA8  
                                       l18193 7C8A                                         l18097 7834  
                                       l19233 4DFE                                         l19241 4E10  
                                       l17619 9D6E                                         l17299 843A  
                                       l16499 6DC0                                         l16691 45D4  
                                       l16683 45C8                                         l17395 8634  
                                       l17387 8616                                         l18603 35FA  
                                       l18187 7C3C                                         l18179 7BF2  
                                       l19075 52B0                                         l18099 785E  
                                       l19235 4E02                                         l19243 4E3C  
                                       l16757 4968                                         l17469 9498  
                                       l17717 79F8                                         l18541 3220  
                                       l19333 82D2                                         l19149 553A  
                                       l19093 5336                                         l19077 52D4  
                                       l19237 4E06                                         l16695 45DA  
                                       l16687 45CE                                         l16679 45B6  
                                       l16767 498A                                         l17807 6D0E  
                                       l18551 32BC                                         l18543 325E  
                                       l18703 A20A                                         l17567 9B40  
                                       l19319 828E                                         l17823 8502  
                                       l19159 5568                                         l19087 5304  
                                       l19511 3C06                                         l19175 8A08  
                                       l19255 4EE8                                         l19239 4E0A  
                                       l16961 8AE2                                         l17761 6C70  
                                       l17737 6BE6                                         l18713 93EA  
                                       l18617 362E                                         l18561 3388  
                                       l18553 32FE                                         l18545 3274  
                                       l17825 850E                                         l19097 5356  
                                       l19521 3C5E                                         l19409 3926  
                                       l19177 8A12                                         l19249 4E9A  
                                       l16955 8944                                         l16699 45E0  
                                       l16963 8B12                                         l17771 6C9C  
                                       l17763 6C76                                         l18651 3782  
                                       l18643 3746                                         l18635 370A  
                                       l18571 3410                                         l17835 8542  
                                       l19603 3E1E                                         l19419 3946  
                                       l19347 926C                                         l19291 5164  
                                       l19275 5054                                         l17757 6C4C  
                                       l17749 6C14                                         l18661 37F2  
                                       l18629 36A8                                         l18573 3452  
                                       l18565 33C8                                         l19621 3E74  
                                       l19509 3BFE                                         l19269 4FB2  
                                       l18901 778E                                         l17783 6CBC  
                                       l18655 37A0                                         l18647 3764  
                                       l18639 3728                                         l18591 35A8  
                                       l18583 34DA                                         l18559 3346  
                                       l17679 9926                                         l19711 2A46  
                                       l19551 3D08                                         l19527 3C6C  
                                       l19463 3A4E                                         l19287 514C  
                                       l17777 6CAC                                         l18681 3860  
                                       l18673 3828                                         l19801 2BEC  
                                       l19721 2A96                                         l19705 2A28  
                                       l18761 85E8                                         l19545 3CD6  
                                       l19529 3C88                                         l18913 77B6  
                                       l17795 6CE2                                         l17699 7910  
                                       l18683 386E                                         l18675 3836  
                                       l18691 3898                                         l18659 37DE  
                                       l18667 380E                                         l18587 351C  
                                       l18579 34BC                                         l18595 35D0  
                                       l19731 2AC6                                         l19723 2AA8  
                                       l18747 858E                                         l19571 3D78  
                                       l19491 3B34                                         l19475 3ABE  
                                       l19483 3B0A                                         l18771 906A  
                                       l18923 77D2                                         l17789 6CCC  
                                       l18685 387C                                         l18677 3844  
                                       l19717 2A82                                         l18765 85EE  
                                       l19637 3ECA                                         l19581 3DBA  
                                       l19469 3A80                                         l18909 77AA  
                                       l18687 388A                                         l18679 3852  
                                       l19911 2D86                                         l19903 2D4C  
                                       l19751 2B26                                         l19743 2B14  
                                       l19655 3F2A                                         l19575 3D94  
                                       l18783 9072                                         l18919 77C6  
                               ___fltol@sign1 00AD                                         l19905 2D64  
                                       l19841 2C8E                                         l19833 2C3A  
                                       l19825 2C1C                                         l19817 2C0A  
                                       l19809 2BFA                                         l19737 2AFC  
                                       l18953 4000                                         l19665 3F7E  
                                       l18777 906E                                         l19931 2E1C  
                                       l19923 2DDC                                         l19907 2D6C  
                                       l19843 2C96                                         l18963 40FA  
                                       l18947 3FC8                                         l18883 7738  
                                       l19941 2E70                                         l19845 2CA4  
                                       l19757 2B3E                                         l18973 4152  
                                       l18957 4020                                         l18797 9094  
                                       l18877 771A                                         l17999 96CE  
                                       l19951 2EBE                                         l19943 2E78  
                                       l19927 2DFC                                         l19919 2DC4  
                                       l19767 2B54                                         l19759 2B44  
                                       l18975 420A                                         l18895 7774  
                                       l19937 2E5A                                         l19849 2CAC  
                                       l19689 29E2                                         l18969 4132  
                                       l18985 422A                                         l18889 7756  
                                       l19971 2F5C                                         l19963 2F28  
                                       l19939 2E62                                         l19891 2D20  
                                       l19883 2D0E                                         l19875 2CFC  
                                       l19867 2CEC                                         l19795 2BDA  
                                       l19787 2BCA                                         l19779 2BBE  
                                       l19949 2EB6                                         l19957 2ECC  
                                       l19991 2FD0                                         l19983 2F92  
                                       l19967 2F48                                         l19959 2F10  
                                       l19987 2FB2                                         l19979 2F78  
                                       l19899 2D34                                         l19997 302E  
                                       l19999 3036                               __end_of___aodiv 72F6  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
        __end_of_I2C2_SetDataCompleteCallback A0EE         __size_of_I2C2_SetDataCompleteCallback 0020  
            ??i2_I2C2_SetDataCompleteCallback 000A               ?i2_I2C2_SetDataCompleteCallback 0006  
                                       ?_atoi 00A1                  _I2C2_SetDataCompleteCallback A0CE  
                             __end_of___fladd 58B4                                         ?_main 0001  
                                       ?_dtoa 0100                                         _ADCLK 003EFF  
                             __end_of___aomod 7582                                         ?_home 0001  
                           __end_of_I2C2_Open 8440                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 867A  
                                       ?_send 008F                                         STR_10 FADF  
                                       STR_11 FFE7                                         STR_20 FFF4  
                                       STR_12 FFE0                                         STR_21 FFFA  
                                       STR_13 FB47                                         STR_30 FFB1  
                                       STR_22 FC4A                                         STR_14 FB76  
                                       STR_31 FFB1                                         STR_23 FCCC  
                                       STR_15 FA95                                         STR_40 FCB7  
                                       STR_32 FFB1                                         STR_16 FCE0  
                                       STR_24 FC81                                         STR_33 FFB1  
                                       STR_41 FD55                                         STR_17 FC0D  
                                       STR_25 FBE9                                 __CFG_WDTE$OFF 000000  
                                       STR_42 FCB7                                         STR_34 FFA8  
                                       STR_50 FF3D                                         STR_18 FF23  
                                       STR_26 FCF4                                         STR_43 FD55  
                                       STR_19 FF05                                         STR_35 FED2  
                                       STR_51 FD42                                         STR_27 FB16  
                                       STR_44 FCB7                                         STR_28 FFB1  
                                       STR_52 FF8A                                         STR_60 FF60  
                                       STR_36 FEB0                                         STR_53 FF8A  
                                       STR_45 FCB7                                         STR_29 FFB1  
                                       STR_61 FFCA                                         STR_37 FCB7  
                                       STR_62 FFB1                                         STR_46 FD55  
                                       STR_70 FF80                                         STR_54 FF55  
                                       STR_38 FD55                                         STR_63 FFB1  
                                       STR_47 FD55                                         STR_55 FF9E  
                                       STR_71 FF15                                         STR_39 FEC1  
                                       STR_72 FF80                                         STR_56 FF94  
                                       STR_48 FE9F                                         STR_80 FE5B  
                                       STR_64 FD2F                                         _ADRPT 003EEC  
                                       STR_73 FF15                                         STR_57 FF49  
                                       STR_49 FE8E                                         STR_81 FDD3  
                                       STR_65 FB9E                                         STR_82 FF80  
                                       STR_90 FFD9                                         STR_58 FF31  
                                       STR_74 FE06                                         STR_66 FBC4  
                                       STR_59 FF8A                                         STR_83 FF15  
                                       STR_91 FE6C                                         STR_75 FD9F  
                                       STR_67 FC2E                                         STR_84 FFB1  
                                       STR_92 FFEE                                         STR_76 FDF5  
                                       STR_68 FD1C                                         STR_77 FE06  
                                       STR_93 FF80                                         STR_69 FD7B  
                                       STR_85 FC66                                         STR_86 FE28  
                                       STR_94 FE17                                         STR_78 FDB1  
                                       STR_87 FE7D                                         STR_79 FDE4  
                                       STR_95 FD8D                                         STR_88 FE28  
                                       STR_96 FFC2                                         STR_97 FF80  
                                       STR_89 FDC2                                         STR_98 FE17  
                                       STR_99 FE4A                               __end_of___fltol 7D5C  
                             _TMR1_StartTimer A5C2                               aCaptureInit@idx 0163  
                             __end_of___lldiv 856A                                         _T1CLK 003FB5  
                                       u21000 2E4C                                         u20200 515C  
                                       u20050 8A16                                         u20130 4F0A  
                                       u21020 2EA8                                         u20140 4F18  
                             ___awdiv@divisor 00A3                                         u21101 2FA8  
                                       u20230 9290                                         u20150 4F56  
                                       ?_xtoa 0100                                         u20400 3D06  
                                       u20320 3B2E                                         _T1CON 003FB2  
                                       u21121 2FF6                                         u21130 3020  
                                       u21050 2F54                                         u20330 3B9A  
                                       u20250 396C                                         _U1P1H 003DED  
                                       u20155 4F4E                                         u20340 3BAA  
                                       u20260 39B4                                         u20180 5122  
                                       u22100 0750                                         _U1P2H 003DEF  
                                       u21141 306A                                         u21150 3094  
                                       u20350 3C2A                                         u22030 048A  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u21320 5682                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         u20185 5118  
                                       u20610 2A40                                         u21330 5692  
                                       _U1P3L 003DF0                                         u21091 2F90  
                                       u22035 0480                                         u20620 2A7A  
                                       u21500 57EA                                         u21340 5694  
                                       u23100 21A0                                         u20390 3D04  
                                       u22230 0ACA                                         u22070 0580  
                                       u21520 5800                                         u23040 1FA2  
                                       u22080 05A4                                         u22065 0528  
                                       u20810 2C34                                         u21370 56D8  
                                       u23130 21E6                                         u22090 06FA  
                                       u16100 913E                                         u21620 7C9A  
                                       u23108 21A4                                         u22500 1252  
                                       u22260 0C90                                         u22085 059C  
                                       u16110 9140                                         u20910 2D64  
                                       u20830 2C80                                         u21630 7CD4  
                                       u22190 08E0                                         u23080 2110  
                                       u22520 1298                                         _T4CON 003FA0  
                                       u16130 990E                                         u16050 95FE  
                                       u20930 2D9E                                         u23170 2466  
                                       u21635 7CC8                                         u22355 0F88  
                                       u16140 9910                                         u16060 98A2  
                                       u21580 586C                                         u22460 11A2  
                                       _T2HLT 003FAD                                         u22605 13C8  
                                       u16070 98A4                                         u17110 4776  
                                       u20950 2DBE                                         u21670 7D2C  
                                       u22710 17D4                                         u22630 14AE  
                                       u22550 12CA                                         u21910 00DC  
                                       u16400 5C9A                                         u16080 98D8  
                                       u22640 14C0                                         u22480 11E0  
                                       u22625 147E                                         u22385 100E  
                                       u16250 74D0                                         u16410 5E08  
                                       u16090 98DA                                         u17130 4858  
                                       u20970 2DF4                                         u22650 1560  
                                       u16171 71F8                               __end_of___ltdiv 8A5C  
                                       u22395 106E                                         u16340 5C24  
                                       u16500 6182                                         u20980 2E14  
                                       u22820 19DA                                         u22740 181A  
                                       u16190 7230                                         u16430 5E2A  
                                       u16350 5C26                                         u17070 472A  
                                       u18110 9D46                                         u22910 1CCC  
                                       u22718 17D8                                         u16431 5E28  
                                       u22655 1558                                         u16440 5E38  
                                       u16600 635E                                         u16520 6218  
                                       u17080 472C                                         u18104 9D32  
                                       _T6CON 003F94                                         u18105 9D2E  
                                       u18050 A33A                                         u16290 9456  
                                       u16450 5E3E                                         u16530 624E  
                                       u17090 4738                                         u22930 1D36  
                                       u22690 1736                                         u21970 01DE  
                                       u16700 6E80                                         u16380 5C66  
                                       u16620 6380                                         u16540 6250  
                                       u18140 7952                                         u19020 31DC  
                                       _T4HLT 003FA1                                         u16621 637E  
                                       u15910 814E                                         u16470 5E4E  
                                       u16630 638E                                         u18150 7994  
                                       u21990 0278                                __CFG_DEBUG$OFF 000000  
                                       u16640 6394                                         u16560 6288  
                                       u18080 9D18                                         u15770 A36A  
                                       u16570 628A                                         u18250 6C68  
                                       u18074 9D04                                         u18170 79DE  
                                       u22970 1DF4                                         u22890 1BCC  
                                       u18075 9D00                                         u18147 7944  
                                       u18180 79E4                                         u18157 7986  
                                       u16670 6DA6                                         u15950 986C  
                                       u16590 6318                                         u18350 8512  
                                       u15960 986E                                         u19160 356A  
                                       u18177 79D0                                         u16690 6E7E  
                                       u15890 8106                                         u19410 85DA  
                                       u22978 1DF8                                         u16595 6306  
                             __end_of___lwdiv 9064                                         u19180 35F2  
                                       u19420 85DC                                         _T6HLT 003F95  
                                       u19165 3560                                         u18605 7824  
                                       u19350 93E6                                         u18471 96B6  
                                       u18615 784E                                         u17920 647E  
                                       u17840 8638                                         u18625 7878  
                  _ADCC_ADTI_InterruptHandler 02F8                                         u17930 64AA  
                                       u17748 87CC                                         u17940 64D6  
                                       u17749 87DE                                         u17925 6474  
                                       u17950 6502                                         u17935 64A0  
                                       u17945 64CC                                         u18770 9030  
                                       u18850 714A                                         u17955 64F8  
                                       u18595 77FA                                         u19900 44E2  
                                       _T2TMR 003FAA                                         u19910 44FE  
                                       u19815 4268                                         u19735 4032  
                                       u19920 4512                                         u19840 43E8  
                                       u19816 426E                                         _U1UIR 003DF8  
                                       u19825 42B2                                         u19817 427C  
                                       u19745 40AA                                         u19930 452A  
                                       u19850 4404                                         u19826 42B8  
                                       u19746 40B0                                         _T2RST 003FAF  
                                       u19827 42C6                                         u19747 40BE  
                                       u19940 4542                                         u19860 441A  
                                       u19950 4556                                         u19870 442E  
                                       u19880 4444                                         u19785 4164  
                                       u19890 445A                                         _U1TXB 003DEA  
                                       u19795 41DC                                         u19796 41E2  
                                       _T4TMR 003F9E                                         u19797 41F0  
                                       _T4RST 003FA3                                         i2l340 80A6  
                                       i2l342 80AE                                         i2l334 8078  
                                       i2l344 80BA                                         i2l336 8096  
                                       i2l346 80C6                                         i2l338 809E  
                                       i2l347 80DC                                         i2l348 80D2  
                                       _T6TMR 003F92                                         i2l462 9AAA  
                                       i2l456 9546                                         _T6RST 003F97  
                             ___awdiv@counter 00A5                                         _OSCEN 0039DD  
                       _rValveActuationTstamp 01A1                                  vfpfcnvrt@fmt 00AA  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 0133  
                                       _TMR1H 003FB1                                         _TMR0L 003FB6  
                                       _TMR1L 003FB0                                         _PORTC 003FCC  
                                       _PORTD 003FCD                  ?_I2C2_SetAddressNackCallback 0090  
                      ?_I2C2_MasterGetCounter 0001                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                 ??_aCaptRstFlt 0160  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         i2_abs 966C  
                                       i2_pad 7EDC                               _TMR4_Initialize 9C92  
                    ?i2_I2C2_DO_SEND_ADR_READ 0001                           ___lmul@multiplicand 008F  
                                       __Addr 01C0             __size_of_TMR6_SetInterruptHandler 000E  
                                       _chBPM 01BF                     ?_TMR6_SetInterruptHandler 008B  
                             __end_of_command A35E                              __end_of_TMR2_ISR A06A  
                               __CFG_WRTB$OFF 000000                        ?_I2C2_MasterDisableIrq 0001  
                             __end_of_display A49A                                 __CFG_WRTC$OFF 000000  
                            __end_of_TMR4_ISR A048                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR6_ISR A026                               __end_of_flowChk 556C  
                                       __cols 0252                __end_of_I2C2_DO_SEND_ADR_WRITE A1E0  
                                  i2isalpha@c 0001                                         _pCtrl 01E7  
                     __size_of_aCaptGetResult 0294                               __end_of_keyPeek 8D8C  
                                  i2isdigit@c 0001                               __end_of_keyRead 941E  
                                       _clear A226                                         _pInst 01EF  
                                       _blink A3AE                      ?_I2C2_CallbackReturnStop 0160  
                                       _flags 00B6                         pressureSensorChk@time 016C  
                                       _tInsp 023C                                         __rows 0251  
                                 ?_TMR2_Start 0001                                         _intIP 01B3  
                                       _keysC 02E1                                         _keysD 02DB  
                       ?_ADCC_StartConversion 0001                                         _fputc 80F6  
                             __end_of_isalpha 98E0                                         _fputs 95B0  
                             __end_of_isdigit 9916                                   ?_TMR4_Start 0001  
                  pressureSensorChk@offsetCal 0179                                         _lungC 01DF  
                                       _lungR 02CD                                         _isqrt 82F8  
                       ?_I2C2_MasterOperation 0001                            __CFG_MCLRE$EXTMCLR 000000  
                                       atoi@n 0107                                         pad@fp 009D  
                                       atoi@s 00A1                                         _width 00B2  
                                       _putch A2A8                                   ?_TMR6_Start 0001  
                       I2C2_Close@returnValue 008B                               _I2C2_DO_TX$2655 000B  
                                       dtoa@d 0102                                         dtoa@i 0122  
                                       dtoa@n 011A                                         dtoa@p 0114  
                                       dtoa@s 0118                                         dtoa@w 0116  
                                 keyReadEC@ch 009D             __end_of_I2C2_DO_SEND_RESTART_READ A464  
                             __end_of_islower 9874                               __end_of_isspace 9464  
                       ??_I2C2_MasterSendNack 0001                                SelfTest@initOk 039E  
                     __end_of_TMR1_Initialize 95B0                               __end_of_isupper 98AA  
                             __end_of_timeGet A308                                         pclath 003FFA  
                                       tablat 003FF5                                SelfTest@vddVal 039C  
                            __end_ofi2___lmul 8E48                          _I2C2_DO_RX_NACK_STOP A448  
                       ??_I2C2_MasterResetBus 0001                              __end_ofi2___wmul 9DA6  
                                       plusw1 003FE3                                         plusw2 003FDB  
                             _MonitorErrorClr A31A                               _MonitorErrorSet A308  
                __size_of_ADCC_GetFilterValue 0016                                    i2islower@c 0001  
                      __end_of_MonitorMsgBusy A33E                                         status 003FD8  
                                  i2isspace@c 0001                        __end_of_MonitorMsgSend 9E28  
                              SelfTest@tstamp 0396                               __end_of_sprintf 900C  
                                       xtoa@c 0125                                         xtoa@d 0102  
                                       xtoa@i 0123                                         xtoa@n 011B  
                                       xtoa@p 0117                             timeElapsed@intDur 0099  
                                       xtoa@w 0119                                         xtoa@x 010A  
                                ??_I2C2_DO_RX 0001                                  ??_I2C2_DO_TX 0007  
                             __end_of_toupper 9164              _UART1_DefaultFramingErrorHandler 000000  
                          __size_ofi2___aodiv 0158                                ?i2_I2C2_NackCb 0005  
                          __size_ofi2___aomod 0134                                  ??_I2C2_MOpen 0094  
                                  i2isupper@c 0001                                  ??_I2C2_Close 008B  
                            __end_ofi2_printf 9F34                          __end_of_digitalReadC 9D4A  
                        __end_of_digitalReadD 9D1C                      _I2C2_MasterIsStopFlagSet A4E2  
              ??_TMR6_DefaultInterruptHandler 0001                                  _toupper$5483 0097  
                            __end_ofi2_strlen 9B14                             ??_I2C2_MasterOpen 008B  
                               _fsmStateTable FA6F                     ??_I2C2_MasterIsTxBufEmpty 0001  
                           ??_I2C2_MasterStop 0001                             ??_I2C2_Initialize 008B  
                             __initialization 867A                             aCaptGetResult@sel 0167  
                               send4bits@mode 008B                        ?_I2C2_DO_BUS_COLLISION 0001  
                          i2_I2C2_SetCallback 8976                                  __end_of_atoi 6EC8  
                                __end_of_main 29B0                                  __end_of_dtoa 5EBE  
                             ??_adcCaptureIsr 0057                                  __end_of_home A226  
                            i2_aCaptGetResult 669C                                  __end_of_send 9E9C  
                                  i2printf@ap 0052                                  __end_of_xtoa 6408  
                          _expanderWriteBlock A33E                                 i2adcGetCh@sel 0056  
                              __CFG_SAFEN$OFF 000000                                   ?i2_adcGetCh 0001  
                          __size_ofi2_isalpha 0034                       __end_of_TMR2_Initialize 9CEE  
         __end_of_I2C2_SetAddressNackCallback A12E                   _I2C2_SetAddressNackCallback A10E  
                          __size_ofi2_isdigit 0034                   ?_INTERRUPT_InterruptManager 0001  
                                flowChk@aPVal 0183                                   i2_vfpfcnvrt 49C6  
                                ?_UART1_Write 0001                            __size_ofi2_islower 0034  
                          __size_ofi2_isspace 0044                                 i2vfpfcnvrt@ap 0048  
                               i2vfpfcnvrt@fp 0045               __end_ofi2_rd1RegCompleteHandler 9C04  
                               i2vfpfcnvrt@ll 0060                                   i2_xtoa$4902 0031  
                                 i2_xtoa$4903 0033                            __size_ofi2_isupper 0034  
                         ?i2_I2C2_SetCallback 0001                                _keyReadEC$4077 009C  
                                      ??_atoi 00A3                      _TMR2_SetInterruptHandler A410  
                                      ??_main 039F                                        ??_dtoa 010A  
                                      ??_home 009F                                        ??_send 0090  
                            __end_of_SelfTest 3F8E                                __CFG_PR1WAY$ON 000000  
               i2ADCC_StartConversion@channel 0001                                        ??_xtoa 010B  
                            main@pInspOSScale 03BD                                 __activetblptr 000003  
                        _rVLowActuationTstamp 00B8               __end_ofi2_wr1RegCompleteHandler 9BA4  
                               ?_aCaptureInit 0001                           ?_expanderWriteBlock 0001  
        __size_of_UART1_SetTxInterruptHandler 000E                                   ?_LcdI2CInit 009F  
                                      ?i2_abs 0013                            __size_ofi2_toupper 0052  
                                      ?i2_pad 0013                    i2wr1RegCompleteHandler@ptr 0005  
                           lcdIrqHandler@byte 0002                              __end_of_bRateGet 9FC0  
                          __end_of_I2C2_DO_RX 8884                            __end_of_I2C2_DO_TX 7BBE  
                             _TMR6_Initialize 9C64                              _UART1_Initialize 8700  
                                  i2toupper@c 0007                                 vMeasureIsr@v1 0081  
                               vMeasureIsr@v2 0083                 ??_I2C2_SetAddressNackCallback 0094  
                          __end_of_I2C2_MOpen 8C04                       ??i2_I2C2_MasterClearIrq 0001  
                          __end_of_I2C2_Close 9E50                                        ?_clear 0001  
                                      ?_blink 0001                              __end_of_adcGetCh 90BA  
                     __end_of_TMR0_StartTimer A5CA                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      ?_fputc 008D                                        _ADLTHH 003EDF  
                                      STR_100 FFBA                                        _ADLTHL 003EDE  
                                      STR_101 FF80                                        STR_102 FE17  
                                      ?_fputs 0096                                        STR_103 FE39  
                                      STR_104 FF76                                        STR_105 FFD2  
                                      STR_106 FEED                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      ?_isqrt 0001                             I2C2_MClose@trfRsp 008C  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 00A1  
                                      _ADUTHL 003EE0                      i2_I2C2_DO_SEND_ADR_WRITE A252  
                      ??_I2C2_MasterEnableIrq 008B                  ?i2_I2C2_MasterDisableRestart 0001  
                   _I2C2_MasterDisableRestart A588                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                               ??_printstrblock 0091  
                                      _RB1I2C 003A5A                        ??_I2C2_MasterGetRxData 0001  
                                      _T1GATE 003FB4                                        _RB2I2C 003A5B  
                                      _T1GCON 003FB3                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                           __end_of_aCaptRstFlt 78FE  
                                      _RB1PPS 003A09               _I2C2_DO_SEND_ADR_READ$intlevel0 9EEE  
                         i2UART1_Write@txData 0001                                        _RB2PPS 003A0A  
                       ?_I2C2_DO_RX_NACK_STOP 0001                                        _RC1PPS 003A11  
                               ??_MonitorInit 008B                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                __displaymode 00C6                                        i2l1080 883A  
                                      i2l3110 6942                                        i2l3007 8388  
                                      i2l3112 694E                                __CFG_WDTCCS$SC 000000  
                                      i2l3074 7F18                                        i2l3085 5F40  
                                      i2l3087 5F4C                                        i2l1941 5BD0  
                                      i2l1935 91C8                                        i2l1939 58EC  
                                      i2l1990 67D8                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l3852 969C                                        i2l1996 68CC  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l3883 702A                                        i2l3957 9250  
                                      _FVRCON 003EC1                                     ??i2_fputc 0007  
                                   ??i2_fputs 0010                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 013C                          ??i2_I2C2_SetCallback 0005  
                             flowChk@aPValMax 017E                               flowChk@aPValMin 017A  
                                   ??i2_putch 0002                              i2___lmul@product 0009  
                 ?i2_I2C2_CallbackReturnReset 0005                      _I2C2_CallbackReturnReset A510  
                           _pressureSensorChk 3F8E                         _UART1_SetErrorHandler A3E6  
                             ?_MonitorMsgBusy 0001                                        _BdTrig 01F9  
                             ?_MonitorMsgSend 0001                                i2___aodiv@sign 0012  
                                 INTSTAT_ADDR 0000D3                              __end_of___xxtofl 719E  
                                      i2abs@a 0013                          ??_expanderWriteBlock 008F  
                                ?_timeDelayMs 009B                                        i2_atoi 6EC8  
                                      i2_dtoa 5EBE                                        i2pad@i 001A  
                                      i2pad@p 0017                     pressureSensorChk@aPValMax 0181  
                                      i2pad@w 001C                     pressureSensorChk@aPValMin 0183  
                                   ??_MenuMng 0160                                        i2_xtoa 6926  
                                ?_timeElapsed 0093                            ?_pressureSensorChk 016C  
                      ?_I2C2_MasterSetCounter 0001                        __size_of_inspOSMeasure 0414  
                        __size_of_noBacklight 000C                                        _eBRate 00BF  
                      ?_I2C2_MasterSendTxData 0001                          _rVMedActuationTstamp 019F  
                              __CFG_XINST$OFF 000000                          _effectiveFlowRateInv 01D1  
                      pressureSensorChk@aPVal 018F                                        _chPEEP 01BC  
                                vfprintf@cfmt 00AD                                        ___flge 7BBE  
                      pressureSensorChk@mPVal 018D                                i2___aomod@sign 0012  
                        I2C2_SetBuffer@buffer 008B                                        _chMaxP 01BD  
                                      _chMaxV 01B9             __size_of_I2C2_MasterClearNackFlag 0004  
                                      ___lmul 8D8C                       __end_of_TMR1_StartTimer A5C6  
                           _ADCC_ThresholdISR A08C                                     ??___aodiv 009B  
                                      ___tmul 938E                                 i2vfprintf@fmt 0077  
                                   ??___fladd 00A1                     ?_I2C2_MasterClearNackFlag 0001  
                                   ??___aomod 009B                                        ___wmul 9B44  
                                   ??___awdiv 00A5                                        _pExpOS 01E1  
                              __CFG_STVREN$ON 000000                                     ??___fltol 0100  
                                   ??___lldiv 009F                        ??_I2C2_DO_ADDRESS_NACK 0007  
                                   ??___ltdiv 0091                           MonitorMsgSend@state 0172  
                                   ??___lwdiv 008F                           __size_of_TMR2_Start 0004  
                         ??_pressureSensorChk 016E                                   ?i2_vfprintf 0075  
                          keyReadEC@longPress 009B                          __size_of_vMeasureGet 005A  
                         __size_of_TMR4_Start 0004                          __size_of_vMeasureIsr 00A0  
                        __size_of_vMeasureRst 001C                              ?_TMR0_Initialize 0001  
                          ?_ADCC_ThresholdISR 0001                       __end_of_TMR4_Initialize 9CC0  
                         __size_of_TMR6_Start 0004                                        clear_0 86C4  
                                      clear_1 86D0                                        clear_2 86DC  
                                      clear_3 86E8                              ___awdiv@quotient 00A7  
             __end_ofi2_I2C2_DO_SEND_ADR_READ A08C                     pressureSensorChk@mPValMax 017D  
                   pressureSensorChk@mPValMin 017F                                        _printf 9DD2  
                                      pad@buf 009F                                ??_aCaptureInit 00AF  
                                      dtoa@fp 0100                                     ??_command 0091  
                                      _strlen 9A4C                                        _volume 022B  
                                   ??_display 0092                                     ??_flowChk 0173  
                                   ??_keyPeek 008E                                     ??_keyRead 0090  
                             _ADCC_Initialize 8A5C          __end_of_TMR4_DefaultInterruptHandler A600  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler A5FE  
             __end_of_I2C2_CallbackReturnStop A524                                        fputc@c 008D  
                              _PMD_Initialize 9F58                            __size_of_bRateInit 0024  
                            __end_of_timeDiff 9A4C                                        fputs@c 009A  
                                      fputs@i 009B                             __end_ofi2___aodiv 744E  
                                      fputs@s 0096                                     ??_isalpha 008D  
                                   ??_isdigit 008D                             __end_ofi2___aomod 76B6  
                            __end_of_timeInit A510                            __size_of_bRateUpdt 00C8  
                               main@printTime 03B4                   ??_I2C2_MasterIsCountFlagSet 0001  
                         ??_ADCC_ThresholdISR 005F                                        isqrt@x 0001  
                                   ??_islower 008D                                  __mediumconst FA6E  
                                   ??_isspace 008D                                        tblptrh 003FF7  
                                   ??_isupper 008D                                        tblptrl 003FF6  
                                   ??_timeGet 0095                                        tblptru 003FF8  
                      ??_ADCC_StartConversion 008B                       __end_of_MonitorErrorClr A32C  
                            __end_of_printstr 7A02                       __end_of_MonitorErrorSet A31A  
                          timeElapsedR@intDur 0099                        ??_I2C2_MasterOperation 00AF  
            i2I2C2_CallbackReturnReset@funPtr 0005                I2C2_CallbackReturnReset@funPtr 0160  
                          i2___aomod@dividend 0001                              __end_of_vfprintf 8B38  
                        __end_of_vMeasureInit 9E76      TMR6_SetInterruptHandler@InterruptHandler 008B  
    TMR4_SetInterruptHandler@InterruptHandler 008B      I2C2_SetInterruptHandler@InterruptHandler 008B  
    TMR2_SetInterruptHandler@InterruptHandler 008B   UART1_SetTxInterruptHandler@InterruptHandler 008B  
ADCC_SetADTIInterruptHandler@InterruptHandler 008B          __end_of_UART1_SetOverrunErrorHandler A3D8  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler A3CA  
                   _UART1_DefaultErrorHandler 000000                                     ??_sprintf 00AF  
                             flowChk@maxFlowL 0178                               _pValveActuation 01E5  
                                      xtoa@fp 0100                                     ??_toupper 0093  
           __size_of_I2C2_MasterClearStopFlag 0004                                 main@tstScreen 03AE  
                          timeElapsed@intTime 0097                               flowChk@minFlowL 0180  
                   ?_I2C2_MasterClearStopFlag 0001                 __size_of_INTERRUPT_Initialize 0004  
                   __end_of_pressureSensorChk 456E                 __size_of_I2C2_DO_SEND_RESTART 0004  
                                  ___flge@ff1 0099                                    ___flge@ff2 009D  
                            ?_TMR1_Initialize 0001                                  ___xxtofl@arg 0095  
                           __end_ofi2_isalpha 99E6                             __end_ofi2_isdigit 9A1A  
                                ___xxtofl@exp 0094                             _SYSTEM_Initialize 9808  
                                ___xxtofl@val 008B                           __size_ofi2_adcGetCh 0054  
                               ??_I2C2_MClose 008C                 ??i2_I2C2_MasterDisableRestart 0001  
                                  __accesstop 0060                       __end_of__initialization 86FA  
                               ?_setBacklight 0001                               ??i2_I2C2_NackCb 0007  
                           __end_ofi2_islower 997E                          __size_of_keyReadInit 0014  
                           __end_ofi2_isspace 94EC                       ?_I2C2_MasterIsRxBufFull 0001  
                           ?_I2C2_MasterClose 0001                             __end_ofi2_isupper 99B2  
                              _screenMng$6103 015E                          __end_of_CtrlPowerOff 82F8  
                               ??_I2C2_NackCb 00AF                            ?_SYSTEM_Initialize 0001  
                            I2C2_MOpen@trfRsp 0094                              _I2C2_DO_RX_EMPTY 8786  
                               ___rparam_used 000001             _rdBlkRegCompleteHandler$intlevel0 90C0  
                                  ___fltol@f1 00A9                            __size_of_backlight 000C  
                    I2C2_SetBuffer@bufferSize 008D                       i2_I2C2_MasterSetCounter A538  
                          ??_I2C2_MasterClose 008B                              _I2C2_DO_TX_EMPTY 8C68  
                     i2_I2C2_MasterSendTxData A52E                             __end_ofi2_toupper 925E  
                                 SelfTest@idx 0392                     __end_of_ADCC_ThresholdISR A0AE  
                               __end_ofi2_abs 96AA                           __end_of_MonitorInit A5FC  
                         __size_of_LcdI2CInit 0124                                 __end_ofi2_pad 7F92  
                  ?i2_rdBlkRegCompleteHandler 0005                       _rdBlkRegCompleteHandler 90BA  
                        _lastI2C2LTrfResponse 024E                                __pcstackCOMRAM 0001  
                              send4bits@value 008C                        aCaptGetResult@lclValid 0166  
                                __pidataBANK1 A4FA                                  __pidataBANK2 A27E  
                         ??_SYSTEM_Initialize 008D                                 __end_of_clear A23C  
                                   ?_TMR2_ISR 0001                                 __end_of_blink A3BC  
                       __end_of_lcdIrqHandler 7AE0                                     ?_TMR4_ISR 0001  
                                   ?_TMR6_ISR 0001                                 __end_of_fputc 81A4  
                               __end_of_fputs 95F0                    ??_I2C2_ClearInterruptFlags 0001  
                               __end_of_isqrt 839E                                aCaptRstFlt@sel 0164  
                               __end_of_putch A2BC                                   i2printf@fmt 007B  
                            ?_TMR2_Initialize 0001                       __end_of_TMR6_Initialize 9C92  
                      __end_of_PMD_Initialize 9F7C                                    _pAvgUShort 01EB  
                                  _chVentMode 024F                                     ?i2___lmul 0001  
                                   ?i2___wmul 0001                             ?_I2C2_SetCallback 008B  
                ??i2_I2C2_MasterEnableRestart 0001                    I2C2_SetDataNackCallback@cb 0090  
                               _inspOSMeasure 4DFC                                       ??i2_abs 0015  
                                 i2putch@byte 0002                                       ??i2_pad 0019  
                                 _aCaptRstFlt 77DA                       __size_of_TMR1_ReadTimer 002C  
                   _UART1_FramingErrorHandler 02F4                            ??_I2C2_SetCallback 008F  
               ?_TMR4_DefaultInterruptHandler 0001                          _lastI2C2MTrfResponse 00C0  
                              _aCaptGetResult 6408                                i2vfpfcnvrt@fmt 0047  
                                   ?i2_printf 007B                                i2vfpfcnvrt@llu 0068  
                 ADCC_StartConversion@channel 008B                                timeDiff@intDur 0099  
                     __size_of_aCaptureOffGet 004A                              timeDelayMs@delms 009B  
            __end_of_I2C2_SetDataNackCallback A10E                                       ??_clear 009F  
                                   ?i2_strlen 0001                                       ??_blink 0092  
                     __size_of_aCaptureOffSet 004A                              ?_TMR0_StartTimer 0001  
                      ??_I2C2_DO_RX_NACK_STOP 0001                                       ??_fputc 0091  
                   __end_of_SYSTEM_Initialize 983E                                       ??_fputs 009A  
                                     ??_isqrt 0003                         __end_of_I2C2_DO_RESET A38E  
                 ??_I2C2_DO_SEND_RESTART_READ 0002                               __CFG_IVT1WAY$ON 000000  
                                     ??_putch 008C                         _I2C2_InterruptHandler 00BC  
                              timeDiff@startT 0095                                 ?i2_TMR6_Start 0001  
                               flowChk@initOk 0182                            __size_of_keyReadEC 0088  
                                  __pbssBANK0 00AF                                    __pbssBANK1 0191  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
              __end_of_I2C2_MasterIsRxBufFull A480                 ?_UART1_SetOverrunErrorHandler 008B  
                              ??_setBacklight 0090                        ?_UART1_SetErrorHandler 008B  
                  __end_ofi2_I2C2_DO_RX_EMPTY 88FE                         __size_of_digitalReadC 002E  
                       __size_of_digitalReadD 002E                __size_of_rd2RegCompleteHandler 003A  
           __size_of_I2C2_SetInterruptHandler 000E                           __size_ofi2_vfprintf 0068  
               __end_of_rd2RegCompleteHandler 9794                     ?_I2C2_SetInterruptHandler 008B  
                             __CFG_MVECEN$OFF 000000                                 flowChk@tstamp 017C  
              __size_of_wr2RegCompleteHandler 003A                 __end_of_wr2RegCompleteHandler 9808  
                                     ?i2_atoi 0008                                       ?i2_dtoa 001E  
                       _TMR4_InterruptHandler 02EA              __size_ofi2_rd1RegCompleteHandler 0030  
                       _rd1RegCompleteHandler 9794                                    _rCycleTime 01CF  
                                     ?i2_xtoa 001E                                       IVTBASEH 003FD6  
                   _I2C2_MasterIsCountFlagSet A480                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                     ?_SelfTest 0001  
                           __end_of_bRateInit 9F58                             __end_of_bRateUpdt 7E24  
                        i2I2C2_SetCallback@cb 0001              __size_ofi2_wr1RegCompleteHandler 0030  
                       _wr1RegCompleteHandler 9720                              ??_FVR_Initialize 008B  
             _rd1RegCompleteHandler$intlevel0 979A               _wr1RegCompleteHandler$intlevel0 9726  
                            vMeasureIsr@instP 0085                            __size_of_send4bits 005A  
                           aCaptureOffGet@sel 0162                      rd1RegCompleteHandler@ptr 0160  
                         __end_of_I2C2_MClose 9D78             __end_ofi2_rdBlkRegCompleteHandler 92FA  
                                   ?_bRateGet 0001                                       ?___flge 0099  
                                  _lcdBtnRRow 02C1                                       ?___lmul 008B  
         __size_ofi2_I2C2_MasterEnableRestart 0006                     __size_ofi2_I2C2_SetBuffer 0020  
                                     _I2C2CLK 003D65                                       ?___tmul 008B  
                                     _I2C2CNT 003D56                                       _I2C2ERR 003D60  
                                     ?___wmul 009B                                       _I2C2PIE 003D64  
                                     _I2C2PIR 003D63                           __end_of_I2C2_NackCb 9720  
                            ?_TMR1_StartTimer 0001                                       _I2C2RXB 003D54  
                                     _I2C2TXB 003D55                               __CFG_PPS1WAY$ON 000000  
            __end_of_TMR6_SetInterruptHandler A402                                    ??_TMR2_ISR 0060  
                              i2_toupper$5483 000D                                    ??_TMR4_ISR 0001  
                     __end_of_ADCC_Initialize 8ACA                                    ??_TMR6_ISR 0003  
                          __size_of_setCursor 003C                                     ?_adcGetCh 0001  
        __size_ofi2_I2C2_MasterDisableRestart 0006                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                            __size_of_screenMng 0726  
                           aCaptureOffSet@sel 0162                                ___lmul@product 0093  
        __end_of_ADCC_SetADTIInterruptHandler A42C         __size_of_ADCC_SetADTIInterruptHandler 000E  
                _ADCC_SetADTIInterruptHandler A41E                       ??_I2C2_MasterGetCounter 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                  __size_ofi2_UART1_is_tx_ready 0010  
                                     ?_printf 0146                               ?_PMD_Initialize 0001  
                         _ADCC_GetFilterValue A268                                    _lcdPrintBR 01CD  
                                  _lcdPrintTR 01CE                                       ?_strlen 008B  
                                  ??i2___lmul 0009                                    ??i2___wmul 0005  
                                     _U1ERRIE 003DFA                                ?_inspOSMeasure 0001  
                                     _U1ERRIR 003DF9                       ??_I2C2_MasterDisableIrq 008B  
                                     _T4INPPS 003ACB                                       _T6INPPS 003ACC  
                         __CFG_PWRTS$PWRT_OFF 000000                                       i2l11065 89BA  
                            main@vInspOSScale 03B2                                       i2l12073 A1A6  
                                     i2l12343 8376                                       i2l12335 8316  
                                     i2l12337 8322                                       i2l12339 8330  
                                     i2l13087 7ADA                        __end_of_aCaptGetResult 669C  
                        __size_of_UART1_Write 0042                                       i2l12583 8E0E  
                                     i2l16111 9530                                       i2l13463 9AA6  
                                     i2l17001 4A7E                                       i2l12579 8DFA  
                                     i2l16125 9568                                       i2l17013 4AFC  
                                     i2l17101 8B50                                       i2l11973 9C44  
                                     i2l16127 956A                                       i2l16143 A2D2  
                                     i2l17015 4B20                                       i2l17103 8B7A  
                                     i2l17033 4C58                                       i2l17017 4B2C  
                                     i2l11977 9C54                                       i2l16333 9638  
                                     i2l16341 9AF0                                       i2l17053 4DA2  
                                     i2l16343 9AF4                                       i2l17047 4D60  
                                     i2l17063 4DC2                                       i2l16177 81BC  
                                     i2l16337 9654                                       i2l17057 4DAC  
                                     i2l16611 75EC                                       i2l16603 75AE  
                                     i2l16531 7F10                                       i2l16613 7600  
                                     i2l16541 7F74                                       i2l16533 7F22  
                                     i2l17245 9ACE                                       i2l16623 765E  
                                     i2l16607 75D2                                       i2l16527 7EFE  
                                     i2l17247 9AD4                                       i2l17431 8898  
                                     i2l16537 7F3E                                       i2l17425 8890  
                                     i2l18321 673E                                       i2l16651 94E2  
                                     i2l16571 7370                                       i2l16627 7684  
                                     i2l16619 7648                                       i2l16803 5F7A  
                                     i2l17419 8888                                       i2l18323 676A  
                                     i2l16573 7384                                       i2l16565 734A  
                                     i2l16813 60B6                                       i2l17437 88A4  
                                     i2l18317 66E6                                       i2l16911 6EDE  
                                     i2l16591 741C                                       i2l16583 73E0  
                                     i2l16559 7322                                       i2l16903 6B70  
                                     i2l17447 88B4                                       i2l18343 6890  
                                     i2l18335 6846                                       i2l18319 6712  
                                     i2l18327 67AE                                       i2l16833 611E  
                                     i2l18273 91C0                                       i2l16931 6F7E  
                                     i2l16587 73F6                                       i2l16851 6966  
                                     i2l18267 91BC                                       i2l18523 8C24  
                                     i2l18339 688C                                       i2l16925 6F42  
                                     i2l16909 6EDA                                       i2l16837 6138  
                                     i2l18293 91E8                                       i2l17653 8C74  
                                     i2l18349 68A0                                       i2l18357 68EA  
                                     i2l16935 6FBC                                       i2l16927 6F4A  
                                     i2l16919 6F30                                       i2l18279 91C4  
                                     i2l17647 8C6C                                       i2l16929 6F50  
                                     i2l16785 5F24                                       i2l16865 69C8  
                                     i2l16857 69A6                                       i2l17913 8816  
                                     i2l17659 8C80                                       i2l17667 8C88  
                                     i2l17941 9170                                       i2l16799 5F6A  
                                     i2l16879 6A5E                                       i2l16887 6AF6  
                                     i2l16991 4A2A                                       i2l16983 4A22  
                                     i2l16975 4A0E                                       i2l18815 58DE  
                                     i2l17863 7AF8                                       i2l17855 7AEC  
                                     i2l17871 7B44                                       i2l17927 8862  
                                     i2l17951 917A                                       i2l16977 4A10  
                                     i2l17945 9176                                       i2l16995 4A2E  
                                     i2l16987 4A26                                       i2l16979 4A1E  
                                     i2l18835 5960                                       i2l17859 7AF2  
                                     i2l17971 8E60                                       i2l17963 8E54  
                                     i2l17885 7BA2                                       i2l17877 7B72  
                                     i2l17869 7AFC                                       i2l16999 4A38  
                                     i2l17887 7BAA                                       i2l17967 8E5A  
                                     i2l17897 7BBA                                       i2l17977 8E66  
                                     i2l18937 84AC                                       i2l18939 84B4  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 008B  
                           __end_of_backlight A4B2                                     _I2C2_MAck A58E  
                                  _pQuantaExp 01D3                      ?i2_rd2RegCompleteHandler 0005  
                                _digitalReadC 9D1C                                  _digitalReadD 9CEE  
           __size_of_I2C2_MasterEnableRestart 0006                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                     _I2C2_Open 839E  
                          __size_of_vfpfcnvrt 0458                     ?_I2C2_MasterEnableRestart 0001  
                     __size_of_I2C2_DO_RX_ACK 0008                       __size_of_I2C2_DO_TX_ACK 0008  
                            flowChk@aPValMean 0176                                    ??i2_printf 0050  
                                     _OSCTUNE 0039DE                              ?_MonitorErrorClr 0001  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                    ?i2_wr2RegCompleteHandler 0005                                       _SLRCONE 003A83  
                            ?_MonitorErrorSet 0001                                    ??i2_strlen 0003  
                          _inspOSMeasure$6100 0164                                  ??_TMR2_Start 008B  
                    __end_ofi2_aCaptGetResult 6926                                       _OSCheck 01C3  
                                ??_TMR4_Start 008B                                ??i2_TMR6_Start 0001  
                  ??_I2C2_MasterIsStopFlagSet 0001                                  ??_TMR6_Start 008B  
                 __end_of_MonitorMsgSendBlock 9EE8                               _I2C2_MasterOpen 9FE2  
                               ?_SV2DelayOpen 0001                               _I2C2_MasterStop A59A  
                             _I2C2_Initialize 9F7C                    __size_of_pressureSensorChk 05E0  
                                     i2_fputc 81A4                                       i2_fputs 962E  
                                 _MonitorInit A5FA                          ?_ADCC_GetFilterValue 0001  
                   ??i2_I2C2_MasterSetCounter 0001                                       i2atoi@n 0015  
                                     i2pad@fp 0013                                       i2atoi@s 0008  
                                     i2_putch A2D0                                       i2dtoa@d 0020  
                                     i2dtoa@i 0040                                       i2dtoa@n 0038  
                                     i2dtoa@p 0032                                       i2dtoa@s 0036  
                                     i2dtoa@w 0034                     ??i2_I2C2_MasterSendTxData 0001  
                                     _i2cBuff 0300                                 ?_timeElapsedR 0093  
                   ??_rdBlkRegCompleteHandler 0094                        __size_ofi2_UART1_Write 0042  
                        __end_of_aCaptureInit 92AE                   __size_of_I2C2_MasterSendAck 0006  
                     ??_I2C2_DO_BUS_COLLISION 0007              __size_ofi2_I2C2_DO_SEND_ADR_READ 0022  
                                  _parBuffLen 00C2                         _I2C2_DO_SEND_ADR_READ 9EE8  
                                     _MenuMng 29B0                               __size_ofi2_atoi 0170  
                                  _parBuffPtr 00C3                               __size_ofi2_dtoa 02B0  
                                  ??_SelfTest 02FA                                    _ctrlStatus 01C8  
                             __size_ofi2_xtoa 0280                                       i2xtoa@c 0043  
                                     i2xtoa@d 0020                                       i2xtoa@i 0041  
                                     i2xtoa@n 0039                                       i2xtoa@p 0035  
                                     i2xtoa@w 0037                                       i2xtoa@x 0028  
                                     __Hparam 0000                    __size_of_ADCC_ThresholdISR 0022  
                                     __Lparam 0000                      __end_of_UART1_Initialize 8786  
                                   ?_timeDiff 0095              __size_of_I2C2_CallbackReturnStop 000A  
                  ??_TMR2_SetInterruptHandler 008D                          __size_of_timeDelayMs 0034  
                                   ?_timeInit 0001                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                  i2rd2RegCompleteHandler@ptr 0005                   __end_of_I2C2_MasterClearIrq A55C  
                                  ??_bRateGet 00A9                          __size_of_timeElapsed 0030  
                               ?_PrintStrBusy 0001                               __size_of___flge 00D0  
                                     ___aodiv 719E                     _I2C2_DO_SEND_RESTART_READ A456  
                                     ___fladd 556C                                       ___aomod 744E  
                    ??i2_ADCC_StartConversion 0001                                       ___awdiv 85F2  
                             __size_of___lmul 005E                                     ?_printstr 008B  
                                     ___fltol 7C8E                 __size_of_MonitorMsgForcedSend 0194  
                             __size_of___tmul 004A                                       ___lldiv 84E0  
                             __size_of___wmul 0030                                       ___ltdiv 89EC  
                                     ___lwdiv 900C                                  ??i2_adcGetCh 0054  
                         setBacklight@new_val 0090                                    ??_adcGetCh 0160  
                                   ?_vfprintf 0140                                i2vfprintf@cfmt 004E  
                           __end_of_keyReadEC 85F2                            __end_of_TMR2_Start A5C2  
                                ?i2_vfpfcnvrt 0045                                       _sBreath 01C9  
                                     __pcinit 867A                                       _pInspOS 00D0  
                          __end_of_TMR4_Start A5CE                              ?_TMR6_Initialize 0001  
                                     __ramtop 1000                                    _menuStatus 01B7  
                    TMR1_ReadTimer@readValLow 0092                   __size_of_UART1_Transmit_ISR 0032  
                                     _lcdBusy 00C1                            __end_of_TMR6_Start A5D6  
                                  _menuTstamp 0238                                       _curASrc 00CC  
                                     __ptext0 001E                                       __ptext1 9E50  
                                     __ptext2 A5BE                                       __ptext3 A506  
                                     __ptext4 A5C2                                       __ptext5 A5C6  
                                     __ptext6 8EA4                                       __ptext7 A3AE  
                                     __ptext8 76B6                                       __ptext9 A210  
                               ?_I2C2_DO_IDLE 0001            __size_of_I2C2_MasterClearCountFlag 0004  
                             __size_of_printf 002C                                       _command A34E  
                                     _intPEEP 01B1                                       _display A48E  
                    ?_I2C2_DO_RX_NACK_RESTART 0001                                       _vInspOS 01D9  
                  ??i2_I2C2_DO_SEND_ADR_WRITE 0001                 ?_ADCC_SetADTIInterruptHandler 008B  
                                     _flowChk 5210                               __CFG_WRTAPP$OFF 000000  
                   TMR1_ReadTimer@readValHigh 0091                    ?_I2C2_MasterClearCountFlag 0001  
                             __size_of_strlen 0032                                       _keyPeek 8D2C  
                                     _keyRead 93D8                                     _T1CONbits 003FB2  
                     pressureSensorChk@tstamp 017A                                       _intMaxP 01F3  
                                     _intMaxV 01F1                         __size_of_vMeasureInit 0026  
                       _OSCILLATOR_Initialize A1E0                                  ??_LcdI2CInit 00A1  
                                   _T2CONbits 003FAC                                  __size_of_abs 003E  
                                     _lastkey 00CB                         inspOSMeasure@setScale 016A  
                                     _menuVal 0193                                  __size_of_pad 00B4  
                                     _vQuanta 01A5                                       _isalpha 98AA  
                             ?_aCaptGetResult 0160                                       _isdigit 98E0  
                                  ??___xxtofl 008F                                    ?_I2C2_MAck 0001  
                                 _I2C2ERRbits 003D60                                     _T4CONbits 003FA0  
                 __end_of_I2C2_MasterSendNack A5A6                               _ctrlErrorStatus 01CB  
                                     _islower 983E                      ??_PIN_MANAGER_Initialize 008B  
           __size_of_TMR4_SetInterruptHandler 000E                                       _isspace 941E  
                             __CFG_WRTSAF$OFF 000000                      wr1RegCompleteHandler@ptr 0160  
                  ??_I2C2_CallbackReturnReset 0094                                    ?_I2C2_Open 0001  
                   ?_TMR4_SetInterruptHandler 008B             __size_of_I2C2_MasterIsNackFlagSet 000C  
                                     _isupper 9874                                       _timeGet A2F6  
                                 _I2C2PIEbits 003D64                               __displaycontrol 00C7  
                   ?_I2C2_MasterIsNackFlagSet 0001                                     _T6CONbits 003F94  
                 __end_of_I2C2_MasterResetBus A54C                             __end_of_send4bits 8FB2  
                                  _vddValMean 0191                                   _I2C2PIRbits 003D63  
                                     atoi@neg 0100                              ??_MonitorMsgBusy 008D  
                            ??_MonitorMsgSend 00AF                                ??_SV2DelayOpen 0001  
                                 _QuantaCheck 01C2                             _I2C2_DO_BUS_ERROR A36E  
                  __size_of_SYSTEM_Initialize 0036                         __size_of_CtrlPowerOff 00A6  
                                     _sprintf 8FB2               i2I2C2_CallbackReturnStop@funPtr 0005  
               I2C2_CallbackReturnStop@funPtr 0160                  MonitorMsgForcedSend@trfError 016D  
                                     _toupper 9110                __size_ofi2_I2C2_MasterClearIrq 0008  
                        end_of_initialization 86FA                             __end_of_setCursor 96E6  
               __end_ofi2_I2C2_MasterClearIrq A57C                          adcCaptureIsr@adcData 007F  
                i2rdBlkRegCompleteHandler@ptr 0005              __end_of_I2C2_MasterClearNackFlag A5F6  
              ??_TMR4_DefaultInterruptHandler 0001                            ?_I2C2_DO_BUS_ERROR 0001  
                       ??_ADCC_GetFilterValue 0003                             __end_of_screenMng 38D4  
                     ??_I2C2_MasterSetCounter 008B                                ??_timeElapsedR 0097  
                                     fputc@fp 008F                      _I2C2_SetDataNackCallback A0EE  
                                 _I2C2_MClose 9D4A                       ??_I2C2_MasterSendTxData 008B  
                          __end_ofi2_adcGetCh 920C           __end_of_UART1_SetTxInterruptHandler A3CA  
                 _UART1_SetTxInterruptHandler A3BC                                       fputs@fp 0098  
                         i2___wmul@multiplier 0001                                 keyPeek@n_4072 008F  
                      ?_rd1RegCompleteHandler 0160                                    _screenInit 8EA4  
                                   i2u1020_40 A4F6                                     i2u1021_40 A4DE  
                                   i2u1023_40 A47C                                     i2u1017_40 A46E  
                                   i2u1201_40 7ABE                                     i2u1200_48 7AA6  
                                   i2u1018_40 A48A                                     i2u1019_40 A4EA  
                                   i2u2010_48 A058                                     i2u1202_48 7AC0  
                                   i2u2008_48 A09C                                   _I2C2_NackCb 96E6  
                                   i2u1191_40 7A44                                     i2u1190_48 7A2A  
                                   i2u1600_40 81FC                                     i2u1255_48 A014  
                                   i2u1193_40 7A5E                                     i2u1192_48 7A46  
                                   i2u1257_48 A036                                     i2u1195_40 7A74  
                                   i2u1194_48 7A60                                     i2u1700_40 923A  
                                   i2u2171_48 806A                                     i2u1197_40 7A8C  
                                   i2u1196_48 7A76                                     i2u1189_40 7A28  
                                   i2u2173_40 807E                                     i2u1199_40 7AA4  
                                   i2u1198_48 7A8E                                     i2u2174_48 8082  
                                   i2u1632_40 9976                                     i2u1721_40 5F64  
                                   i2u1633_40 9978                                     i2u1722_40 60C4  
                                   i2u1715_40 5EF6                                     i2u1731_40 6938  
                                   i2u1724_40 60E6                                     i2u1716_40 5EF8  
                                   i2u1740_40 6AC2                                     i2u1803_48 8C98  
                                   i2u1724_41 60E4                                     i2u1803_49 8CAA  
                                   i2u1740_45 6AB0                                     i2u1725_40 60F4  
                                   i2u1741_40 6B06                                     i2u1733_40 69C4  
                      ?_wr1RegCompleteHandler 0160                                     i2u1750_40 6FF2  
                                   i2u1726_40 60FA                                     i2u1734_40 69FA  
                                   i2u1751_40 6FF4                                     i2u1583_40 A39A  
                                   i2u1719_40 5F36                                     i2u1743_40 6B28  
                                   i2u1735_40 69FC                                     i2u1743_41 6B26  
                                   i2u1728_40 6108                                     i2u1744_40 6B36  
                                   i2u1681_40 7388                                     i2u1745_40 6B3C  
                                   i2u1737_40 6A34                                     i2u1761_40 4B68  
                                   i2u1690_40 967A                                     i2u1738_40 6A36  
                                   i2u1762_40 4B6A                                     i2u1842_40 8812  
                                   i2u1691_40 99DE                                     i2u1763_40 4B78  
                                   i2u1748_40 6F2C                                     i2u1692_40 99E0  
                                     isqrt@op 0005                                     i2u1693_40 9A12  
                                   i2u1765_40 4BB4                                 ?_I2C2_MuxInit 0001  
                                   i2u1694_40 9A14                                     i2u1598_40 81B4  
                                   i2u1845_48 918A                                     i2u1845_49 919C  
              ??_UART1_SetOverrunErrorHandler 008D                                     i2u1950_45 5980  
                                   i2u1687_40 7604                                     i2u1767_40 4C94  
                                   i2u1951_40 59E0                                     i2u1838_48 7B0C  
                                   i2u1846_48 8E76                                     i2u1679_41 7350  
                                   i2u1838_49 7B20                                     i2u1846_49 8E88  
                                   i2u1951_45 59D6                                     i2u1696_40 94DE  
                                   i2u1952_45 5A16                                     i2u1697_40 99AA  
                                   i2u1953_40 5A76                                     i2u1953_45 5A6C  
                                   i2u1698_40 99AC                                     i2u1890_40 670C  
                                   i2u1954_45 5AAC                                     i2u1890_45 6702  
                             ___lldiv@divisor 009B                                     i2u1699_40 9238  
                                   i2u1955_40 5B0C                                     i2u1891_40 6738  
                                   i2u1955_45 5B02                                     i2u1891_45 672E  
                                   i2u1892_40 6764                              ___ltdiv@dividend 008B  
                                   i2u1956_45 5B42                                     i2u1892_45 675A  
                                   i2u1957_40 5BA2                                     i2u1788_48 88C4  
                                   i2u1893_40 6790                                     i2u1788_49 88D6  
                                   i2u1957_45 5B98                                     i2u1893_45 6786  
                                   i2u1968_40 8464                                     i2u1969_40 84C0  
                                   i2u1897_48 8C50                                     i2u1897_49 8C62  
                                  _monitorMsg 02B7                               ___lldiv@counter 00A3  
                         ??_I2C2_DO_BUS_ERROR 0001                                    ??_timeDiff 0099  
                           _I2C2_DO_SEND_STOP A18C                                    ??_timeInit 008B  
                                 _I2C2_Status 0200                                ??_PrintStrBusy 008B  
                           __end_of_vfpfcnvrt 49C6                            __end_of_LcdI2CInit 77DA  
                                     postdec1 003FE5                                       postdec2 003FDD  
                         timeElapsedR@intTime 009B                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                          ?_I2C2_DO_SEND_STOP 0001                            LcdI2CInit@lcd_Addr 00A1  
                         i2___lmul@multiplier 0001                                    ??_printstr 008D  
                                _vMeasureInit 9E50                              ?_ADCC_Initialize 0001  
                                ??i2_vfprintf 004E                                    ??_vfprintf 00AD  
                       __end_of_adcCaptureIsr 5BEC                                     _EDuration 0246  
                           UART1_Write@txData 008B                            LcdI2CInit@lcd_cols 009F  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@a 008D  
                                     strlen@s 008B                            LcdI2CInit@lcd_rows 00A0  
                             ??_inspOSMeasure 0160                                ??_I2C2_DO_IDLE 0001  
                                  _pressMills 023A                          __end_of_setBacklight A210  
             __end_ofi2_rd2RegCompleteHandler 9BD4              __end_of_I2C2_MasterClearStopFlag A5F2  
                                _mainPSensCal 01F5                          I2C2_Open@returnValue 008E  
          __end_ofi2_I2C2_MasterEnableRestart A5B8                    i2_I2C2_MasterEnableRestart A5B2  
                         timeElapsed@duration 0095               __end_of_rdBlkRegCompleteHandler 9110  
                    _TMR6_SetInterruptHandler A3F4                                 i2_UART1_Write 952E  
                         ??_I2C2_DO_SEND_STOP 0002                                  _CtrlPowerOff 8252  
             __end_ofi2_wr2RegCompleteHandler 9C34                       __size_of_I2C2_MasterFsm 0064  
                     __size_of_I2C2_MasterIsr 0006                                printstrblock@c 008F  
                    __end_of_I2C2_DO_RX_EMPTY 8808                             i2___aodiv@divisor 0009  
                                 ___fladd@grs 00A8                       __end_of_I2C2_MasterOpen A004  
           __end_of_I2C2_MasterClearCountFlag A5FA                       __end_of_I2C2_MasterStop A5A0  
                     __end_of_I2C2_Initialize 9F9E                                _TMR1_ReadTimer 9DA6  
                           i2___aodiv@counter 0011                                     _IDuration 01AD  
                    __end_of_I2C2_DO_TX_EMPTY 8CCC                                 ___xxtofl@sign 0093  
                   __end_of_I2C2_DO_BUS_ERROR A37E                    i2wr2RegCompleteHandler@ptr 0005  
                           _I2C2_MasterIsNack A464                                _aCaptureOffGet 9344  
                            ___ltdiv@quotient 0091                                _aCaptureOffSet 92FA  
                     __size_of_I2C2_SetBuffer 0022                           timeElapsed@prevTime 0093  
                                   i2___aodiv 72F6                                  _intEDuration 0248  
                                   i2___aomod 7582                            ?_I2C2_MasterIsNack 0001  
            _I2C2_DO_SEND_ADR_WRITE$intlevel0 A1CC                              __CFG_FEXTOSC$OFF 000000  
                 i2I2C2_MasterSendTxData@data 0001                                 ??_noBacklight 0090  
                       __end_of_printstrblock 9EC2                 __size_of_I2C2_MasterEnableIrq 0014  
               __size_of_I2C2_MasterGetRxData 0006                            __end_ofi2_vfprintf 8BA0  
                 __size_ofi2_I2C2_SetCallback 0076                       i2_rd1RegCompleteHandler 9BD4  
                      ?_I2C2_DO_SEND_ADR_READ 0001                    rdBlkRegCompleteHandler@ptr 0160  
                    ?_I2C2_MasterIsTxBufEmpty 0001                           ??_I2C2_MasterIsNack 0001  
                                  main@keyTmp 03B6                                  _intIDuration 01AF  
                              ??_I2C2_MuxInit 008B                     __end_of_I2C2_DO_SEND_STOP A1AA  
                                SelfTest@cIdx 0394                   __size_of_expanderWriteBlock 0010  
                     i2_wr1RegCompleteHandler 9B74                                     i2_isalpha 99B2  
                                   i2_isdigit 99E6                                    main@tmpVal 03BF  
                              __end_ofi2_atoi 7038                                __end_ofi2_dtoa 616E  
                                   i2_islower 994A                                     i2_isspace 94A8  
                                _MenuMng$4363 0164                                  _MenuMng$4364 0166  
                                _MenuMng$4365 0168                                  _MenuMng$4366 016A  
                                _MenuMng$4367 016C                                __end_ofi2_xtoa 6BA6  
                                   i2_isupper 997E                                 ??_vMeasureGet 00A6  
                 ??i2_rdBlkRegCompleteHandler 0003                                 ??_vMeasureIsr 005E  
                               ??_vMeasureRst 008B                i2I2C2_MasterSetCounter@counter 0001  
                                   i2atoi@neg 000E                                   adcGetCh@sel 0162  
                            i2_I2C2_SetBuffer A14E                  __end_of_INTERRUPT_Initialize A5D2  
             __end_of_I2C2_DO_RX_NACK_RESTART A564          __end_of_TMR2_DefaultInterruptHandler A602  
       __size_of_TMR2_DefaultInterruptHandler 0002                  _TMR2_DefaultInterruptHandler A600  
                __end_of_I2C2_DO_SEND_RESTART A5DE               __size_ofi2_ADCC_StartConversion 0010  
              ??_ADCC_DefaultInterruptHandler 0001                                     i2_toupper 920C  
                              __end_of___flge 7C8E                          __end_ofi2_TMR6_Start A5DA  
                    I2C2_MasterOperation@read 0164                                __end_of___lmul 8DEA  
                                 _chLowVAlarm 01BB                                __end_of___tmul 93D8  
                                 vfpfcnvrt@ap 00AB                                   vfpfcnvrt@fp 00A8  
                                 vfpfcnvrt@ll 012B                                __end_of___wmul 9B74  
               __size_of_I2C2_DO_ADDRESS_NACK 0054                     __size_of_I2C2_MasterClose 000A  
                           __size_of_TMR2_ISR 0022                             __size_of_TMR4_ISR 0022  
                                   i2fputc@fp 0005                             __size_of_TMR6_ISR 0022  
                              ?i2_UART1_Write 0001                        ?_OSCILLATOR_Initialize 0001  
                                   i2fputs@fp 000E                        __end_of_TMR1_ReadTimer 9DD2  
                    ??_I2C2_DO_SEND_ADR_WRITE 008C                                   printstr@idx 008E  
                   __end_of_I2C2_MasterIsNack A472              __end_of_I2C2_SetInterruptHandler A43A  
                            i2___wmul@product 0005                                __end_of_printf 9DFE  
                                  keyRead@tmp 0092                        __end_of_aCaptureOffGet 938E  
                      __end_of_aCaptureOffSet 9344                                __end_of_strlen 9A7E  
                                 ??_I2C2_MAck 008B                                  ?_aCaptRstFlt 0001  
                         start_initialization 867A                                _I2C2_DO_RX_ACK A56C  
                           __size_ofi2___lmul 005E                                _I2C2_DO_TX_ACK A564  
                          bRateUpdt@triggered 008E                                   ??_I2C2_Open 008D  
                           __size_ofi2___wmul 002E                              _rValveDelayStart 0197  
                    __size_of_TMR0_Initialize 0016                                  send4bits@idx 008D  
             __size_of_PIN_MANAGER_Initialize 00B8                                   __end_of_abs 962E  
                                 __end_of_pad 8046                 ?_I2C2_SetDataCompleteCallback 0090  
                     ??_UART1_SetErrorHandler 008D                                  _lastCycleVol 0244  
                                  ?i2___aodiv 0001                                    ?i2___aomod 0001  
                               ??_keyReadInit 008B                                  i2vfpfcnvrt@c 0070  
               __size_of_ADCC_StartConversion 0012                         __size_of_aCaptureInit 0050  
                                  ivt0x8_base 0008                                     _LowVAlarm 01F7  
               __size_of_I2C2_MasterOperation 0044                             __size_ofi2_printf 0026  
                           __size_ofi2_strlen 0032                                     i2strlen@a 0003  
                                   i2strlen@s 0001                           i2_UART1_is_tx_ready A38E  
                     i2_I2C2_DO_SEND_ADR_READ A06A                   I2C2_SetDataNackCallback@ptr 0092  
                   __size_of_I2C2_SetCallback 0078                                 _uart1TxBuffer 0350  
                                 ?_screenInit 0001                                      ??i2_atoi 000A  
                                    ??i2_dtoa 0028            __size_ofi2_I2C2_CallbackReturnStop 0004  
                       __end_ofi2_I2C2_NackCb 9AE2                                      ??i2_xtoa 0029  
                    _I2C2_MasterClearNackFlag A5F2                                    ?i2_isalpha 0001  
                  ?i2_I2C2_CallbackReturnStop 0005                       _I2C2_CallbackReturnStop A51A  
                                  ?i2_isdigit 0001                                    ?i2_islower 0001  
                                  ?i2_isspace 0001                              __CFG_LPBOREN$OFF 000000  
                                  ?i2_isupper 0001                      __size_of_TMR1_Initialize 0040  
                                 vfprintf@fmt 0142                               setCursor@F16920 02D3  
                         __end_of_noBacklight A4A6                                  i2vfprintf@ap 0079  
                             i2vfpfcnvrt@done 0071                                  i2vfprintf@fp 0075  
                                    ??___flge 00A1                             __size_of_SelfTest 06BA  
                            ??_PMD_Initialize 008B                                      ??___lmul 0093  
                                    ??___tmul 0091                                      ??___wmul 009F  
            __end_of_I2C2_MasterEnableRestart A588                                     _bRateHist 022F  
                                   _bRateInit 9F34                            i2_I2C2_DO_RX_EMPTY 8884  
                                   _bRateUpdt 7D5C                                    ?i2_toupper 0007  
                        __end_of_SV2DelayOpen A448                                   __pdataBANK1 01F5  
                                 __pdataBANK2 02D3                                _currentTrfAddr 01B6  
                           __size_of_bRateGet 0022                 ?_TMR2_DefaultInterruptHandler 0001  
                        ?i2_UART1_is_tx_ready 0001                                      ??_printf 00AF  
                              ___tmul@product 0091                           __end_of_vMeasureGet 8F58  
                         __end_of_vMeasureIsr 84E0                             timeDelayMs@tstamp 009D  
                           i2___aomod@divisor 0009                           __end_of_vMeasureRst A1C6  
                           __size_of_adcGetCh 0056                  ??_I2C2_DO_SEND_RESTART_WRITE 0001  
                              flowChk@flowVal 0175                                      ??_strlen 008D  
                             ?_TMR1_ReadTimer 008B                          __end_of_timeElapsedR 8D2C  
              __size_of_I2C2_MasterGetCounter 0004                             i2___aomod@counter 0011  
                  _I2C2_DO_RX_EMPTY$intlevel0 878C                        __end_of_I2C2_DO_RX_ACK A574  
                                   ___fladd@a 009D                                     ___fladd@b 0099  
               __end_of_I2C2_MasterGetCounter A5E6                           ?i2_I2C2_DO_RX_EMPTY 0001  
                      __end_of_I2C2_DO_TX_ACK A56C                          __size_ofi2_vfpfcnvrt 0436  
                                _aCaptureInit 925E                               ?_aCaptureOffGet 0160  
                             ?_aCaptureOffSet 0160                              ?_I2C2_MasterOpen 0001  
                            ?_I2C2_MasterStop 0001                              ?_I2C2_Initialize 0001  
                       _rVHighActuationTstamp 00BA                __size_of_I2C2_MasterDisableIrq 001E  
              I2C2_SetAddressNackCallback@ptr 0092                     i2_rdBlkRegCompleteHandler 92AE  
                  __size_of_I2C2_DO_BUS_ERROR 0010                 __end_of_I2C2_MasterDisableIrq A18C  
                          _UART1_ErrorHandler 02F0                      MonitorMsgSendBlock@state 0172  
                               __pcstackBANK0 0060                                 __pcstackBANK1 0100  
                               __pcstackBANK2 02FA                      _I2C2_MasterClearStopFlag A5EE  
                               __pcstackBANK3 0390                              ___aodiv@dividend 008B  
                    __size_of_TMR2_Initialize 002E                             __size_of___xxtofl 0166  
                        __end_of_PrintStrBusy A582                                   _pPeepActual 01A9  
         __end_ofi2_I2C2_MasterDisableRestart A5BE                   i2_I2C2_MasterDisableRestart A5B8  
                      i2_ADCC_StartConversion A39E               __end_of_I2C2_MasterIsTxBufEmpty A4E2  
                                   _backlight A4A6             __size_of_I2C2_ClearInterruptFlags 0030  
                           ?i2_aCaptGetResult 007F                     ??i2_rd1RegCompleteHandler 0003  
                   ?_I2C2_ClearInterruptFlags 0001                                   _pInspOSVSet 0240  
                                   _pAvgShort 01ED                        __size_of_lcdIrqHandler 00DE  
                                ?_MonitorInit 0001                 __size_of_I2C2_DO_RX_NACK_STOP 000E  
                                    ?i2_fputc 0003                               vMeasureGet@rawV 00A6  
                                    ?i2_fputs 000C                     ??i2_wr1RegCompleteHandler 0003  
                          ??i2_aCaptGetResult 0054                                      ?i2_putch 0001  
                        __end_of_I2C2_DO_IDLE A4D6                          ??i2_I2C2_DO_RX_EMPTY 0007  
                  __size_of_I2C2_DO_SEND_STOP 001E                                     _atoi$5375 0102  
                                   _atoi$5376 0106                                     _atoi$5377 0104  
                       _TMR6_InterruptHandler 02E8                                     __pnvBANK0 00D4  
                                   __pnvBANK2 02E8              __size_ofi2_rd2RegCompleteHandler 0030  
                         __end_of_keyReadInit A2A8                      i2aCaptGetResult@lclValid 0058  
                                    ?_MenuMng 0001                         _rd2RegCompleteHandler 975A  
                    __size_of_TMR0_StartTimer 0004                         i2I2C2_SetCallback@idx 0005  
                       __end_of_fsmStateTable FA95                         i2I2C2_SetCallback@ptr 0003  
                                   _pInspVSet 01D7             _I2C2_CallbackReturnStop$intlevel0 A520  
              __size_of_I2C2_DO_BUS_COLLISION 005C                                     _main$6101 03AF  
                                   _main$6102 03B9                                     _main$3847 03AA  
                                   _main$3848 03AC              __size_ofi2_wr2RegCompleteHandler 0030  
           __end_ofi2_I2C2_CallbackReturnStop A5EE                              ___lwdiv@dividend 008B  
                      _PIN_MANAGER_Initialize 7E24                        i2aCaptGetResult@lclRaw 005A  
                  MonitorMsgForcedSend@vddVal 0170                 __end_of_I2C2_DO_BUS_COLLISION 8EA4  
                       _wr2RegCompleteHandler 97CE                                     _dtoa$4891 0112  
                  MonitorMsgForcedSend@trfAck 016F                                     _pPlatInsp 01E3  
         __size_of_I2C2_DO_SEND_RESTART_WRITE 0004                             ?_UART1_Initialize 0001  
                                   _lcdBtnRow 028F                      rd2RegCompleteHandler@ptr 0160  
          _I2C2_CallbackReturnReset$intlevel0 A516          __end_of_UART1_SetFramingErrorHandler A3E6  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler A3D8  
                       __size_of_setBacklight 0018                                 __pmediumconst FA6E  
                      i2aCaptGetResult@outVal 007F                                      ?___aodiv 008B  
                                    ?___fladd 0099                                      ?___aomod 008B  
            __end_of_TMR4_SetInterruptHandler A410                                    ?_bRateInit 0001  
                                    ?___awdiv 00A1                                     __ptext100 8786  
                                   __ptext101 96E6                                     __ptext110 9FC0  
                                   __ptext102 A510                              ___aodiv@quotient 009D  
                                   __ptext111 9DD2                                     __ptext103 A51A  
                                   __ptext200 A542                                     __ptext120 7F92  
                                   __ptext112 8ACA                                     __ptext104 90BA  
                                   __ptext201 9AB0                                     __ptext121 9A4C  
                                   __ptext113 456E                                     __ptext105 9720  
                                   __ptext210 8976                                     __ptext202 A5E6  
                                   __ptext130 6D3A                                     __ptext122 95B0  
                                   __ptext114 616E                                     __ptext106 975A  
                                   __ptext211 A14E                                     __ptext203 A5EA  
                                   __ptext131 941E                                     __ptext123 80F6  
                                   __ptext115 9110                                     __ptext107 9794  
                                   __ptext220 A602                                     __ptext212 9C34  
                                   __ptext204 92AE                                     __ptext140 88FE  
                                   __ptext132 98E0                                     __ptext124 A2A8  
                                   __ptext116 983E                                     __ptext108 97CE  
                                   __ptext221 58B4                                     __ptext213 A4E2  
                                   __ptext205 9B74                                     __ptext141 839E  
                                   __ptext133 9B44                                     __ptext125 A35E  
                                   __ptext117 9874                                     __ptext109 A0CE  
                                   __ptext230 99B2                                     __ptext222 91B8  
                                   __ptext214 A4EE                                     __ptext206 9BA4  
                                   __ptext150 A524                                     __ptext142 A42C  
                                   __ptext134 A4BE                                     __ptext126 94EC  
                                   __ptext118 98AA                                     __ptext231 5EBE  
                                   __ptext223 9F0E                                     __ptext215 A480  
                                   __ptext207 9BD4                                     __ptext151 A554  
                                   __ptext143 9FE2                                     __ptext135 A582  
                                   __ptext127 95F0                                     __ptext119 5BEC  
                                   __ptext240 7582                                     __ptext232 7EDC  
                                   __ptext224 8B38                                     __ptext216 A5EE  
                                   __ptext208 9C04                                     __ptext160 A5FE  
                                   __ptext152 8046                                     __ptext144 A2BC  
                                   __ptext136 A588                                     __ptext128 744E  
                                   __ptext241 72F6                                     __ptext233 9AE2  
                                   __ptext225 49C6                                     __ptext217 A5F2  
                                   __ptext209 A12E                                     __ptext161 A048  
                                   __ptext153 9A7E                                     __ptext145 A58E  
                                   __ptext137 8BA0                                     __ptext129 719E  
                                   __ptext242 6EC8                                     __ptext234 962E  
                                   __ptext226 6926                                     __ptext218 A5F6  
                                   __ptext170 A36E                                     __ptext162 A600  
                                   __ptext154 A004                                     __ptext146 A32C  
                                   __ptext138 A0EE                                     __ptext243 94A8  
                                   __ptext235 81A4                                     __ptext227 920C  
                                   __ptext219 A08C                                     __ptext171 8E48  
                                   __ptext163 8440                                     __ptext155 A5FC  
                                   __ptext147 9D4A                                     __ptext139 A10E  
                                   __ptext244 99E6                                     __ptext236 A2D0  
                                   __ptext228 994A                                     __ptext180 A5DE  
                                   __ptext172 9164                                     __ptext164 669C  
                                   __ptext156 7A02                                     __ptext148 9E28  
                                   __ptext245 9D78                                     __ptext237 A38E  
                                   __ptext229 997E                                     __ptext181 A456  
                                   __ptext173 A37E                                     __ptext165 82F8  
                                   __ptext157 A5D6                                     __ptext149 A16E  
                                   __ptext246 8DEA                                     __ptext238 952E  
                                   __ptext190 A59A                                     __ptext182 8C68  
                                   __ptext174 A55C                                     __ptext166 A594  
                                   __ptext158 A026                                     __ptext247 A39E  
                                   __ptext239 966C                                     __ptext191 A5A0  
                                   __ptext183 8808                                     __ptext175 A448  
                                   __ptext167 8C04                                     __ptext159 A43A  
                                   __ptext248 A268                                     __ptext192 A5A6  
                                   __ptext184 7AE0                                     __ptext176 A564  
                                   __ptext168 8884                                     __ptext249 0000  
                                   __ptext193 A472                                     __ptext185 A4CA  
                                   __ptext177 A56C                                     __ptext169 A06A  
                                   __ptext194 A5AC                                     __ptext186 A252  
                                   __ptext178 A18C                                     __ptext195 A574  
                                   __ptext187 A4D6                                     __ptext179 A5DA  
                                   __ptext196 A52E                                     __ptext188 A464  
                                   __ptext197 A538                                     __ptext189 A5E2  
                                   __ptext198 A5B2                                     __ptext199 A5B8  
                                    ?___fltol 00A9              __end_of_I2C2_MasterIsNackFlagSet A4FA  
                                    ?___lldiv 0097                                    ?_bRateUpdt 0001  
                           __size_of_timeDiff 0032                                      ?___ltdiv 008B  
                           __size_of_timeInit 000A                                      ?___lwdiv 008B  
                          ??_UART1_Initialize 008D                                     __numlines 00C5  
                                    _I2C2CON0 003D5D                                      _I2C2CON1 003D5E  
                                    _I2C2CON2 003D5F                                     _lcdTopRow 02A3  
                             ??i2_UART1_Write 0001                              ??_aCaptGetResult 0162  
                            I2C2_DO_TX@dataTx 0009                        __size_of_I2C2_DO_RESET 0010  
                       ??i2_UART1_is_tx_ready 0001                              _uart1RxLastError 00CD  
                               ??_UART1_Write 008B                  ??_INTERRUPT_InterruptManager 0087  
                           __size_of_printstr 0104                             __size_of_vfprintf 006E  
                                    ?_command 0001                                _I2C2_MasterFsm 8C04  
                              _I2C2_MasterIsr A594                                      ?_display 0001  
                                    ?_flowChk 0001                               ?_I2C2_DO_RX_ACK 0001  
                                    ?_keyPeek 0001                                      ?_keyRead 0001  
             __size_of_I2C2_DO_SEND_ADR_WRITE 001A                    __size_of_I2C2_MasterIsNack 000E  
                      __CFG_BBSIZE$BBSIZE_512 000000                                     _intBdTrig 024A  
                             ?_I2C2_DO_TX_ACK 0001                   ??_I2C2_MasterClearCountFlag 0001  
                                   _keyFilter 00C9                           __size_of_screenInit 005A  
                                   _keyReadEC 856A                      __size_of_TMR1_StartTimer 0004  
            _UART1_DefaultOverrunErrorHandler 000000                                      ?_isalpha 008B  
                        __end_of_I2C2_MuxInit A0CE                                      ?_isdigit 008B  
                            i2I2C2_NackCb@ptr 0005                                __size_ofi2_abs 003E  
                              __size_ofi2_pad 00B6                                      ?_islower 008B  
                                    ?_isspace 008B                    ??_I2C2_SetDataNackCallback 0094  
                                    ?_isupper 008B                                      ?_timeGet 0093  
                              _I2C2_SetBuffer 9FC0                      __size_of_TMR4_Initialize 002E  
                       I2C2_DO_RX@retFsmState 0003                  __end_of_MonitorMsgForcedSend 6D3A  
                                   _lastkeyEC 00CA                              ___lwdiv@quotient 0090  
                    _I2C2_SetInterruptHandler A42C                                __size_of_clear 0016  
                                 ??i2___aodiv 0011                                   _lcdPrintBRR 01CC  
                              __size_of_blink 000E                                  setCursor@col 009B  
                                 ??i2___aomod 0011                                  setCursor@row 0092  
                                    ?_sprintf 0146                                __size_of_fputc 00AE  
                                  ?_backlight 0001                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0040                       ??_rd1RegCompleteHandler 0094  
                                    ?_toupper 0091                     ??i2_I2C2_DO_SEND_ADR_READ 0001  
                              __size_of_isqrt 00A6                                      _T4CLKCON 003FA2  
                              __size_of_putch 0014                          _INTERRUPT_Initialize A5CE  
                                    _T6CLKCON 003F96                          _I2C2_DO_SEND_RESTART A5DA  
                                  _I2C2SDAPPS 003AE4                    __end_of_I2C2_MasterSendAck A5AC  
                                   _send4bits 8F58                                    _I2C2SCLPPS 003AE3  
                     ??_wr1RegCompleteHandler 0094              __size_of_I2C2_DO_RX_NACK_RESTART 0008  
                        inspOSMeasure@tmpUVal 0168                     ??_I2C2_CallbackReturnStop 0094  
              ??_I2C2_SetDataCompleteCallback 0094                             ??_TMR0_Initialize 008B  
                                ?_I2C2_MClose 0001               I2C2_MasterOperation@returnValue 0165  
                                _setBacklight A1F8                                ___wmul@product 009F  
                                 _noBacklight A49A                                     _monTstamp 02CB  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 008B  
                                    _LATBbits 003FBB                                      _LATCbits 003FBC  
                                    _LATDbits 003FBD                                 ??_timeDelayMs 009D  
                                 _auxPSensCal 02E6                  ??i2_I2C2_CallbackReturnReset 0005  
                    __size_of_MonitorErrorClr 0012                                    _I2C2_DO_RX 8808  
                         adcCaptureIsr@adcSel 0083                                    _I2C2_DO_TX 7AE0  
              __size_of_I2C2_MasterSetCounter 000C                                  ?_I2C2_NackCb 0160  
                                   _setCursor 96AA                      __size_of_MonitorErrorSet 0012  
               __end_of_I2C2_MasterSetCounter A4CA                                      _PIE1bits 003991  
              __size_of_I2C2_MasterSendTxData 000C                                 ??_timeElapsed 0097  
                                 _pQuantaInsp 01D5                                      _PIE3bits 003993  
                                    _PIE4bits 003994                                      _PIE5bits 003995  
                                 ??i2_isalpha 0003                                      _PIE6bits 003996  
                                 ??i2_isdigit 0003                                      _PIE7bits 003997  
               __end_of_I2C2_MasterSendTxData A4BE                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                                    _I2C2_MOpen 8BA0  
                                   _screenMng 31AE                  __size_of_MonitorMsgSendBlock 0026  
                                  _I2C2_Close 9E28                         __size_ofi2_TMR6_Start 0004  
                                 ??i2_islower 0003                                   ??i2_isspace 0003  
         __size_of_INTERRUPT_InterruptManager 00B0                              i2_vfpfcnvrt$4917 0073  
                             ___ltdiv@divisor 008E                                      _PIR1bits 0039A1  
                                 ??i2_isupper 0003                                      _PIR3bits 0039A3  
                                    _PIR4bits 0039A4                                      _PIR5bits 0039A5  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR9bits 0039A9                               ___ltdiv@counter 0094  
                  ??_TMR6_SetInterruptHandler 008D                                   _vMeasureGet 8EFE  
                                 _vMeasureIsr 8440                                   _vMeasureRst A1AA  
           __size_of_I2C2_MasterIsStopFlagSet 000C                                     _resultTbl 0273  
                               _I2C2STAT1bits 003D62                                      _TMR2_ISR A048  
                   ?_I2C2_MasterIsStopFlagSet 0001                                      _TMR4_ISR A026  
                  __end_of_UART1_Transmit_ISR 9AB0                                      _TMR6_ISR A004  
                                 ??i2_toupper 0009                 ?_UART1_SetFramingErrorHandler 008B  
                               _lcdIrqHandler 7A02                        __end_of_I2C2_MasterFsm 8C68  
                      __end_of_I2C2_MasterIsr A59A                                     _vfpfcnvrt 456E  
                            _I2C2_MasterClose A524                                     _xtoa$4902 0113  
                                   _xtoa$4903 0115                             ??_TMR1_Initialize 008B  
                                  _ADCON0bits 003EF8                             ___wmul@multiplier 009B  
                 ?i2_I2C2_MasterEnableRestart 0001                      _I2C2_MasterEnableRestart A582  
                __size_of_I2C2_MasterClearIrq 0008                                      i2___lmul 8DEA  
                                    i2___wmul 9D78                              I2C2_Open@address 008D  
                     __size_of_FVR_Initialize 0008                        __end_of_I2C2_SetBuffer 9FE2  
                                  ?_keyReadEC 0001                             ?_I2C2_DO_RX_EMPTY 0001  
                    ??_I2C2_MasterIsRxBufFull 0001                ??_TMR2_DefaultInterruptHandler 0001  
           __size_of_TMR2_SetInterruptHandler 000E                           ___tmul@multiplicand 008E  
                   ?_TMR2_SetInterruptHandler 008B                             ?_I2C2_DO_TX_EMPTY 0001  
                 __end_of_ADCC_GetFilterValue A27E                           __end_of_UART1_Write 952E  
                    wr2RegCompleteHandler@ptr 0160                                      i2_printf 9F0E  
                                    i2pad@buf 0015                                  _isspace$5402 0091  
         __size_ofi2_I2C2_CallbackReturnReset 0004                          aCaptureOffSet@offVal 0160  
                          ??_I2C2_DO_RX_EMPTY 0162                      __size_of_TMR6_Initialize 002E  
                                    i2dtoa@fp 001E                                      i2_strlen 9AE2  
                        __size_of_aCaptRstFlt 0124                      ?i2_I2C2_MasterSetCounter 0001  
                    __end_ofi2_I2C2_SetBuffer A16E                                    vfpfcnvrt@c 013B  
                          ??_I2C2_DO_TX_EMPTY 0007                      ?i2_I2C2_MasterSendTxData 0001  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 008B  
                     ??_I2C2_DO_SEND_ADR_READ 00AF                                     copy_data0 868E  
                                   copy_data1 86B0                                      i2fputc@c 0003  
                       ?_INTERRUPT_Initialize 0001                                   _keyReadInit A294  
                                    i2fputs@c 0010                      ?_rdBlkRegCompleteHandler 0160  
                                    i2fputs@i 0011                                      i2fputs@s 000C  
                       ?_I2C2_DO_SEND_RESTART 0001                                     keyRead@ch 0094  
                                i2_TMR6_Start A5D6                                 _I2C2_DO_RESET A37E  
                                  ?_send4bits 008B                  __size_of_I2C2_MasterSendNack 0006  
                      _uart1TxBufferRemaining 00D4                             ??_TMR2_Initialize 008D  
           __size_ofi2_I2C2_DO_SEND_ADR_WRITE 0016                         i2_I2C2_MasterClearIrq A574  
                            _I2C2_SetCallback 88FE                              __size_ofi2_fputc 00AE  
                            __size_ofi2_fputs 003E                        ?_rd2RegCompleteHandler 0160  
                __size_of_I2C2_MasterResetBus 000A                     ?i2_I2C2_DO_SEND_ADR_WRITE 0001  
                      _I2C2_DO_SEND_ADR_WRITE A1C6                     _I2C2_MasterClearCountFlag A5F6  
                            __size_ofi2_putch 0014                                    ?_setCursor 0092  
      __end_ofi2_I2C2_SetDataCompleteCallback A14E       __size_ofi2_I2C2_SetDataCompleteCallback 0020  
              i2_I2C2_SetDataCompleteCallback A12E                                      i2xtoa@fp 001E  
                      ?_wr2RegCompleteHandler 0160                                      _SelfTest 38D4  
                                  ?_screenMng 0001                         __size_of_SV2DelayOpen 000E  
             _wr2RegCompleteHandler$intlevel0 97D4               _rd2RegCompleteHandler$intlevel0 9760  
                                    __Hrparam 0000             __size_of_I2C2_CallbackReturnReset 000A  
                            __size_of_MenuMng 07FE                     ?_I2C2_CallbackReturnReset 0160  
                                  vfprintf@ap 0144                                      __Lrparam 0000  
                                  vfprintf@fp 0140                        i2I2C2_SetBuffer@buffer 0001  
                          __CFG_BOREN$SBORDIS 000000                         TMR1_ReadTimer@readVal 008F  
                      expanderWriteBlock@data 008F                                      _bRateGet 9F9E  
                                    _bRateCnt 00BE                                      _VentMode 01F8  
                                    _bRatePtr 00AF                                   ??_bRateInit 008B  
                         __end_of_timeDelayMs 994A                         __size_of_timeElapsedR 0060  
          __size_of_I2C2_MasterDisableRestart 0006                                   ??_bRateUpdt 008B  
                              ?_lcdIrqHandler 0001                                      _chBdTrig 0250  
                     ??_OSCILLATOR_Initialize 008B                             ??_TMR0_StartTimer 008B  
                            __size_of___aodiv 0158                    ?_I2C2_MasterDisableRestart 0001  
                         __end_of_timeElapsed 9B44                              __size_of___fladd 0348  
                                    _adcGetCh 9064                              __size_of___aomod 0134  
                            __size_of___awdiv 0088                              __size_of___fltol 00CE  
                       i2___wmul@multiplicand 0003                              __size_of___lldiv 008A  
                __end_of_I2C2_MasterEnableIrq A2D0                               ?_I2C2_MasterFsm 0001  
                             ?_I2C2_MasterIsr 0001                                    ?_vfpfcnvrt 00A8  
                            __size_of___ltdiv 0070                  __end_of_I2C2_MasterGetRxData A5B2  
                            __size_of___lwdiv 0058              __size_of_I2C2_MasterIsTxBufEmpty 000C  
          __end_of_I2C2_DO_SEND_RESTART_WRITE A5E2                    _I2C2_DO_SEND_RESTART_WRITE A5DE  
                                 _intVentMode 01CA                               ___aodiv@divisor 0093  
                             ___aodiv@counter 009B                      _TMR4_SetInterruptHandler A402  
                    _I2C2_MasterIsNackFlagSet A4EE                         __end_of_inspOSMeasure 5210  
                       __size_of_PrintStrBusy 0006                                  timeDiff@endT 0097  
                            __size_of_command 0010                              __size_of_display 000C  
                                  sprintf@fmt 0148                               ?_I2C2_SetBuffer 008B  
                            __size_of_flowChk 035C                                      ___xxtofl 7038  
                            __size_of_keyPeek 0060                              __size_of_keyRead 0046  
                                  _T0CON0bits 003FB8                      __size_of_ADCC_Initialize 006E  
                                    _pInspOS2 01DB                                      _pInspOS3 01DD  
                I2C2_MasterSetCounter@counter 008B                                     send@value 0090  
                            __size_of_isalpha 0036                              __size_of_isdigit 0036  
                                    __pivt0x8 0008                               ___lwdiv@divisor 008D  
                                    _pPlatMax 01AB                           i2aCaptGetResult@sel 0059  
                                    _pPlatExp 02CF                                      _lcdBlink 01B8  
                   MonitorMsgForcedSend@state 016E                                  _I2C2CON0bits 003D5D  
                            __size_of_islower 0036                                  _I2C2CON1bits 003D5E  
                            __size_of_isspace 0046                               ___lwdiv@counter 008F  
                                    __ptext10 A48E                                      __ptext11 A226  
                                    __ptext20 556C                                      __ptext12 4DFC  
                                    __ptext21 A5CA                                      __ptext13 89EC  
                                    __ptext30 A1AA                                      __ptext22 38D4  
                                    __ptext14 7D5C                                      __ptext31 8EFE  
                                    __ptext23 3F8E                                      __ptext15 9F34  
                                    __ptext40 A3CA                                      __ptext32 84E0  
                                    __ptext24 92FA                                      __ptext16 925E  
                                    __ptext41 A3D8                                      __ptext33 9344  
                                    __ptext25 77DA                                      __ptext17 9064  
                                    __ptext50 A23C                                      __ptext42 A3E6  
                                    __ptext34 7038                                      __ptext26 A294  
                                    __ptext18 A2E4                                      __ptext51 9F58  
                                    __ptext43 9C64                                      __ptext35 8D8C  
                                    __ptext27 856A                                      __ptext19 7C8E  
                                    __ptext60 8CCC                                      __ptext52 7E24  
                                    __ptext44 A3F4                                      __ptext36 7BBE  
                                    __ptext28 9A1A                                      __ptext61 A5FA  
                                    __ptext53 A1E0                                      __ptext45 9C92  
                                    __ptext37 9808                                      __ptext29 5210  
                                    __ptext70 A33E                                      __ptext62 29B0  
                                    __ptext54 A5CE                                      __ptext46 A402  
                                    __ptext38 8700                                      __ptext71 31AE  
                                    __ptext63 A0AE                                      __ptext55 9F7C  
                                    __ptext47 9CC0                                      __ptext39 A3BC  
                                    __ptext80 A5D2                                      __ptext72 96AA  
                                    __ptext64 8252                                      __ptext56 A54C  
                                    __ptext48 A410                                      __ptext81 A57C  
                                    __ptext73 A34E                                      __ptext65 9916  
                                    __ptext57 8A5C                                      __ptext49 9570  
                                    __ptext90 8FB2                                      __ptext82 93D8  
                                    __ptext74 9E76                                      __ptext66 9B14  
                                    __ptext58 A41E                                      __ptext91 9F9E  
                                    __ptext83 8D2C                                      __ptext75 8F58  
                                    __ptext67 A1F8                                      __ptext59 9DFE  
                                    __ptext92 85F2                                      __ptext84 9CEE  
                                    __ptext76 938E                                      __ptext68 A49A  
                                    __ptext93 6408                                      __ptext85 9D1C  
                                    __ptext77 900C                                      __ptext69 A4A6  
                                    __ptext94 A308                                      __ptext86 9EC2  
                                    __ptext78 9E9C                                      __ptext95 A31A  
                                    __ptext87 6BA6                                      __ptext79 78FE  
                                    __ptext96 9464                                      __ptext88 A2F6  
                                    __ptext97 A1C6                                      __ptext89 9DA6  
                                    __ptext98 9EE8                                      __ptext99 A4B2  
                            __size_of_isupper 0036                              __size_of_timeGet 0012  
                       __size_of_I2C2_DO_IDLE 000C                          _lastI2C2LAckResponse 024D  
                  ??_I2C2_MasterClearNackFlag 0001                                   ??_backlight 0090  
                              ?_I2C2_DO_RESET 0001                                      _rTimeTmp 0195  
              __size_of_UART1_SetErrorHandler 000E                    __end_ofi2_I2C2_SetCallback 89EC  
                           ??_TMR1_StartTimer 008B                 __end_of_UART1_SetErrorHandler A3F4  
                            __size_of_sprintf 005A                                  _SV2DelayOpen A43A  
                            _initInspSubState 01C6                  __end_of_I2C2_DO_ADDRESS_NACK 91B8  
                            __size_of_toupper 0054                                      _vPlateau 0242  
                  __end_of_expanderWriteBlock A34E                        __size_of_adcCaptureIsr 0338  
        __size_of_I2C2_SetAddressNackCallback 0020            __size_ofi2_rdBlkRegCompleteHandler 004C  
                           ??_TMR4_Initialize 008D                       i2_rd2RegCompleteHandler 9BA4  
                               __size_of_atoi 018E                                 __size_of_main 2992  
                               __size_of_dtoa 02D2                                  ??_screenInit 00A2  
                           SelfTest@lcdBLight 0391                                 __size_of_home 0016  
                               __size_of_send 0026                                   ?_I2C2_DO_RX 0001  
                                 ?_I2C2_DO_TX 0001                                 __size_of_xtoa 029A  
                                _timeElapsedR 8CCC                          __size_of_MonitorInit 0002  
                              I2C2_NackCb@ptr 0160                           inspOSMeasure@tmpVal 016B  
                     i2_wr2RegCompleteHandler 9C04                          __CFG_WDTCWS$WDTCWS_7 000000  
                                 ?_I2C2_MOpen 0001                                   ?_I2C2_Close 0001  
                 ??i2_I2C2_CallbackReturnStop 0003                           I2C2_SetCallback@idx 008F  
                     __size_of_MonitorMsgBusy 0012                       __size_of_MonitorMsgSend 002A  
                         I2C2_SetCallback@ptr 008D                                      _timeDiff 9A1A  
                             _vValveActuation 01A7                                      _timeInit A506  
                   _UART1_OverrunErrorHandler 02F2  UART1_SetOverrunErrorHandler@interruptHandler 008B  
                __end_of_ADCC_StartConversion A2F6                              ??_TMR1_ReadTimer 008D  
                __end_of_I2C2_MasterOperation 94A8                          _lastI2C2MAckResponse 01B5  
                                _PrintStrBusy A57C                             ??_MonitorErrorClr 008B  
                           ??_MonitorErrorSet 008B                                      _printstr 78FE  
                        _MonitorMsgForcedSend 6BA6                              __displayfunction 00C8  
                                    _vfprintf 8ACA            __end_of_INTERRUPT_InterruptManager 80F6  
                  _INTERRUPT_InterruptManager 8046                    ??_I2C2_MasterClearStopFlag 0001  
                            ??_aCaptureOffGet 00AF                                     printf@fmt 0146  
                       __size_of_I2C2_MuxInit 0020                              ??_aCaptureOffSet 00AF  
           __end_of_I2C2_MasterDisableRestart A58E              __end_of_I2C2_ClearInterruptFlags 9C64  
                                 _UART1_Write 94EC                             _UART1_is_tx_ready A35E  
                            ___aomod@dividend 008B                                  _I2C2_DO_IDLE A4CA  
                                   printstr@c 008B                        __size_of_printstrblock 0026  
                                    keyPeek@n 008E                               _initExpSubState 01C7  
              ??_UART1_SetFramingErrorHandler 008D               __end_ofi2_I2C2_MasterSetCounter A542  
                                 ??_keyReadEC 009B                                     putch@byte 008C  
                          ?_UART1_is_tx_ready 0001                                _vfpfcnvrt$4917 013E  
             __end_ofi2_I2C2_MasterSendTxData A538                       ?i2_ADCC_StartConversion 0001  
                               ?_digitalReadC 0001                                 ?_digitalReadD 0001  
                       i2___lmul@multiplicand 0005                            __end_of_screenInit 8EFE  
                                 _uart1TxHead 00CF                                   _uart1TxTail 00CE  
             __size_of_I2C2_MasterIsRxBufFull 000E                                      isalpha@c 008B  
                                    isdigit@c 008B                        ??_INTERRUPT_Initialize 008B  
                             digitalReadC@pin 008D                               digitalReadD@pin 008D  
                      ??_I2C2_DO_SEND_RESTART 0001          __end_of_TMR6_DefaultInterruptHandler A5FE  
       __size_of_TMR6_DefaultInterruptHandler 0002                  _TMR6_DefaultInterruptHandler A5FC  
                         ??_UART1_is_tx_ready 008B                       _I2C2_DO_RX_NACK_RESTART A55C  
        __end_of_ADCC_DefaultInterruptHandler A604         __size_of_ADCC_DefaultInterruptHandler 0002  
                _ADCC_DefaultInterruptHandler A602                                      intlevel2 0000  
                           SelfTest@vddValMax 0398                             SelfTest@vddValMin 039A  
                                   sprintf@ap 0154                        ?i2_I2C2_MasterClearIrq 0001  
                                 ??_send4bits 008C                                      send@mode 008F  
          __end_ofi2_I2C2_CallbackReturnReset A5EA                    i2_I2C2_CallbackReturnReset A5E6  
                                _resultTblVal 0224                                      islower@c 008B  
                                    isspace@c 008B                              ___lldiv@dividend 0097  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 008D  
                                    isqrt@one 0009                                      isqrt@res 0007  
                                 ??_setCursor 0093                             __CFG_CLKOUTEN$OFF 000000  
                                 _timeDelayMs 9916                                      isupper@c 008B  
                                 ??_screenMng 015C                          __size_of_I2C2_MClose 002E  
                                 _timeElapsed 9B14                                  _I2C2_MuxInit A0AE  
                          I2C2_SetCallback@cb 008B                          __size_of_I2C2_NackCb 003A  
                             ??_lcdIrqHandler 0001                                 _sv2DelayCheck 01C5  
                       ?_MonitorMsgForcedSend 0001                     __size_ofi2_aCaptGetResult 028A  
                                    printf@ap 015E                             ___tmul@multiplier 008B  
                            ??_I2C2_DO_RX_ACK 0001                               MenuMng@keyPress 016E  
UART1_SetFramingErrorHandler@interruptHandler 008B                              ??_I2C2_DO_TX_ACK 0001  
                   __end_of_UART1_is_tx_ready A36E                  __end_of_I2C2_DO_RX_NACK_STOP A456  
                             ___aomod@divisor 0093                                 ??i2_vfpfcnvrt 004A  
                        timeElapsedR@duration 0095                                   ??_vfpfcnvrt 0127  
                             ___aomod@counter 009B                                 _freeFlowRateF 02D1  
                               _freeFlowRateL 0234                                 _freeFlowRateM 0236  
                               _adcCaptureIsr 58B4                    ??_I2C2_SetInterruptHandler 008D  
                               _sv3DelayCheck 01C4                             SelfTest@tstScreen 0390  
                              _FVR_Initialize A54C                __end_ofi2_ADCC_StartConversion A3AE  
                                    sprintf@f 0156                                      sprintf@s 0146  
          __size_of_I2C2_MasterIsCountFlagSet 000E                                ??_digitalReadC 008B  
                              ??_digitalReadD 008B                     i2_I2C2_CallbackReturnStop A5EA  
                            ___lldiv@quotient 009F                           __size_of_I2C2_DO_RX 007C  
                         __size_of_I2C2_DO_TX 00DE                    ?_I2C2_MasterIsCountFlagSet 0001  
                         _MonitorMsgSendBlock 9EC2                               _TMR0_Initialize A23C  
                        timeElapsedR@prevTime 0093             i2I2C2_SetDataCompleteCallback@ptr 0008  
             I2C2_SetDataCompleteCallback@ptr 0092                        __size_ofi2_I2C2_NackCb 0032  
                                    toupper@c 0091                           __size_of_I2C2_MOpen 0064  
                   __size_of_UART1_Initialize 0086                         _I2C2_MasterGetCounter A5E2  
                         __size_of_I2C2_Close 0028                               ??_I2C2_DO_RESET 0001  
                    _UART1_TxInterruptHandler 02F6                                    _TMR2_Start A5BE  
                       _I2C2_MasterDisableIrq A16E                          setCursor@row_offsets 0093  
                               ___fladd@signs 00A5                    pressureSensorChk@aPValMean 0189  
                       I2C2_DO_TX@retFsmState 000A                                    _TMR4_Start A5CA  
                   ??i2_rd2RegCompleteHandler 0003                                    _TMR6_Start A5D2  
                              i2_isspace$5402 0007                                  ___aodiv@sign 009C  
              ??_ADCC_SetADTIInterruptHandler 008D                __end_of_PIN_MANAGER_Initialize 7EDC  
                           ??_ADCC_Initialize 008D              i2I2C2_SetDataCompleteCallback@cb 0006  
              I2C2_SetDataCompleteCallback@cb 0090                            __size_of_I2C2_MAck 0006  
            __end_of_I2C2_MasterIsStopFlagSet A4EE                      __size_of_I2C2_MasterOpen 0022  
               ?_TMR6_DefaultInterruptHandler 0001                __size_of_rd1RegCompleteHandler 003A  
                   ??i2_wr2RegCompleteHandler 0003                      __size_of_I2C2_MasterStop 0006  
                    __size_of_I2C2_Initialize 0022                            i2___aodiv@dividend 0001  
               __end_of_rd1RegCompleteHandler 97CE                      __end_of_I2C2_MasterClose A52E  
                        _I2C2_MasterEnableIrq A2BC                            __size_of_I2C2_Open 00A2  
                                ___fladd@aexp 00A6                                  ___fladd@bexp 00A7  
               ?_ADCC_DefaultInterruptHandler 0001                          _I2C2_MasterGetRxData A5AC  
                                  _OSCheckInt 01C1                                  ?_noBacklight 0001  
                         _I2C2_MasterClearIrq A554                                 _printstrblock 9E9C  
              __size_of_wr1RegCompleteHandler 003A                 __end_of_wr1RegCompleteHandler 975A  
                ?_UART1_SetTxInterruptHandler 008B                         _TMR2_InterruptHandler 02EC  
                 __size_ofi2_I2C2_DO_RX_EMPTY 007A                    i2I2C2_SetBuffer@bufferSize 0003  
                        ?_MonitorMsgSendBlock 0001                                  ___aomod@sign 009C  
                             _TMR1_Initialize 9570                        _I2C2_MasterIsRxBufFull A472  
                               __backlightval 00C4                   __end_ofi2_UART1_is_tx_ready A39E  
                  ??_I2C2_MasterEnableRestart 008B  
