

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 22 13:04:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1,inline
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1,inline
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1,inline
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1,inline
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1,inline
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1,inline
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1,inline
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1,inline
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1,inline
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1,inline
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1,inline
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   238                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   241  0000                     
   242                           ; Version 2.10
   243                           ; Generated 31/07/2019 GMT
   244                           ; 
   245                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution.
   259                           ; 
   260                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   261                           ;        software without specific prior written permission.
   262                           ; 
   263                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   264                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   265                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   266                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   267                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   268                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   269                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   270                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   271                           ; 
   272                           ; 
   273                           ; Code-generator required, PIC18F46K42 Definitions
   274                           ; 
   275                           ; SFR Addresses
   276  0000                     
   277 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   278  0000                     
   279 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   280  0000                     
   281 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   282  0000                     
   283                           	psect	idataBANK1
   284  007932                     __pidataBANK1:
   285                           	opt callstack 0
   286                           
   287                           ;initializer for _auxPSensCal
   288  007932  03C2               	dw	962
   289                           
   290                           ;initializer for _mainPSensCal
   291  007934  00A4               	dw	164
   292                           
   293                           ;initializer for _HighVAlarm
   294  007936  64                 	db	100
   295                           
   296                           ;initializer for _LowVAlarm
   297  007937  64                 	db	100
   298                           
   299                           ;initializer for _MaxV
   300  007938  64                 	db	100
   301                           
   302                           ;initializer for _PEEP
   303  007939  04                 	db	4
   304                           
   305                           ;initializer for _IP
   306  00793A  04                 	db	4
   307                           
   308                           ;initializer for _BPM
   309  00793B  0A                 	db	10
   310                           
   311                           ;initializer for _MaxP
   312  00793C  04                 	db	4
   313                           
   314                           	psect	idataBANK2
   315  007732                     __pidataBANK2:
   316                           	opt callstack 0
   317                           
   318                           ;initializer for setCursor@F16765
   319  007732  0000               	dw	0
   320  007734  0040               	dw	64
   321  007736  0014               	dw	20
   322  007738  0054               	dw	84
   323                           
   324                           ;initializer for _keysD
   325  00773A  01                 	db	1
   326  00773B  02                 	db	2
   327  00773C  03                 	db	3
   328  00773D  04                 	db	4
   329  00773E  05                 	db	5
   330  00773F  07                 	db	7
   331                           
   332                           ;initializer for _keysC
   333  007740  04                 	db	4
   334  007741  05                 	db	5
   335  007742  06                 	db	6
   336  007743  07                 	db	7
   337                           
   338                           	psect	mediumconst
   339  00FC14                     __pmediumconst:
   340                           	opt callstack 0
   341  00FC14  00                 	db	0
   342  00FC15                     _fsmStateTable:
   343                           	opt callstack 0
   344  00FC15  02                 	db	low _I2C2_DO_IDLE
   345  00FC16  79                 	db	high _I2C2_DO_IDLE
   346  00FC17  AA                 	db	low _I2C2_DO_SEND_ADR_READ
   347  00FC18  73                 	db	high _I2C2_DO_SEND_ADR_READ
   348  00FC19  42                 	db	low _I2C2_DO_SEND_ADR_WRITE
   349  00FC1A  76                 	db	high _I2C2_DO_SEND_ADR_WRITE
   350  00FC1B  D2                 	db	low _I2C2_DO_TX
   351  00FC1C  52                 	db	high _I2C2_DO_TX
   352  00FC1D  EE                 	db	low _I2C2_DO_RX
   353  00FC1E  61                 	db	high _I2C2_DO_RX
   354  00FC1F  A2                 	db	low _I2C2_DO_TX_EMPTY
   355  00FC20  64                 	db	high _I2C2_DO_TX_EMPTY
   356  00FC21  6E                 	db	low _I2C2_DO_RX_EMPTY
   357  00FC22  60                 	db	high _I2C2_DO_RX_EMPTY
   358  00FC23  8E                 	db	low _I2C2_DO_SEND_RESTART_READ
   359  00FC24  78                 	db	high _I2C2_DO_SEND_RESTART_READ
   360  00FC25  0C                 	db	low _I2C2_DO_SEND_RESTART_WRITE
   361  00FC26  7A                 	db	high _I2C2_DO_SEND_RESTART_WRITE
   362  00FC27  08                 	db	low _I2C2_DO_SEND_RESTART
   363  00FC28  7A                 	db	high _I2C2_DO_SEND_RESTART
   364  00FC29  D0                 	db	low _I2C2_DO_SEND_STOP
   365  00FC2A  75                 	db	high _I2C2_DO_SEND_STOP
   366  00FC2B  AC                 	db	low _I2C2_DO_RX_ACK
   367  00FC2C  79                 	db	high _I2C2_DO_RX_ACK
   368  00FC2D  A4                 	db	low _I2C2_DO_TX_ACK
   369  00FC2E  79                 	db	high _I2C2_DO_TX_ACK
   370  00FC2F  80                 	db	low _I2C2_DO_RX_NACK_STOP
   371  00FC30  78                 	db	high _I2C2_DO_RX_NACK_STOP
   372  00FC31  9C                 	db	low _I2C2_DO_RX_NACK_RESTART
   373  00FC32  79                 	db	high _I2C2_DO_RX_NACK_RESTART
   374  00FC33  E0                 	db	low _I2C2_DO_RESET
   375  00FC34  77                 	db	high _I2C2_DO_RESET
   376  00FC35  EA                 	db	low _I2C2_DO_ADDRESS_NACK
   377  00FC36  68                 	db	high _I2C2_DO_ADDRESS_NACK
   378  00FC37  82                 	db	low _I2C2_DO_BUS_COLLISION
   379  00FC38  66                 	db	high _I2C2_DO_BUS_COLLISION
   380  00FC39  D0                 	db	low _I2C2_DO_BUS_ERROR
   381  00FC3A  77                 	db	high _I2C2_DO_BUS_ERROR
   382  00FC3B                     __end_of_fsmStateTable:
   383                           	opt callstack 0
   384  00FC3B                     STR_39:
   385                           
   386                           ; BSR set to: 2
   387  00FC3B  50                 	db	80	;'P'
   388  00FC3C  49                 	db	73	;'I'
   389  00FC3D  20                 	db	32
   390  00FC3E  54                 	db	84	;'T'
   391  00FC3F  20                 	db	32
   392  00FC40  25                 	db	37
   393  00FC41  64                 	db	100	;'d'
   394  00FC42  20                 	db	32
   395  00FC43  2D                 	db	45
   396  00FC44  20                 	db	32
   397  00FC45  56                 	db	86	;'V'
   398  00FC46  6F                 	db	111	;'o'
   399  00FC47  6C                 	db	108	;'l'
   400  00FC48  20                 	db	32
   401  00FC49  25                 	db	37
   402  00FC4A  64                 	db	100	;'d'
   403  00FC4B  20                 	db	32
   404  00FC4C  50                 	db	80	;'P'
   405  00FC4D  69                 	db	105	;'i'
   406  00FC4E  20                 	db	32
   407  00FC4F  25                 	db	37
   408  00FC50  64                 	db	100	;'d'
   409  00FC51  20                 	db	32
   410  00FC52  50                 	db	80	;'P'
   411  00FC53  6E                 	db	110	;'n'
   412  00FC54  20                 	db	32
   413  00FC55  25                 	db	37
   414  00FC56  64                 	db	100	;'d'
   415  00FC57  20                 	db	32
   416  00FC58  50                 	db	80	;'P'
   417  00FC59  64                 	db	100	;'d'
   418  00FC5A  20                 	db	32
   419  00FC5B  25                 	db	37
   420  00FC5C  64                 	db	100	;'d'
   421  00FC5D  2E                 	db	46
   422  00FC5E  20                 	db	32
   423  00FC5F  52                 	db	82	;'R'
   424  00FC60  20                 	db	32
   425  00FC61  25                 	db	37
   426  00FC62  64                 	db	100	;'d'
   427  00FC63  20                 	db	32
   428  00FC64  50                 	db	80	;'P'
   429  00FC65  69                 	db	105	;'i'
   430  00FC66  70                 	db	112	;'p'
   431  00FC67  20                 	db	32
   432  00FC68  25                 	db	37
   433  00FC69  64                 	db	100	;'d'
   434  00FC6A  20                 	db	32
   435  00FC6B  4F                 	db	79	;'O'
   436  00FC6C  53                 	db	83	;'S'
   437  00FC6D  20                 	db	32
   438  00FC6E  25                 	db	37
   439  00FC6F  64                 	db	100	;'d'
   440  00FC70  2E                 	db	46
   441  00FC71  0A                 	db	10
   442  00FC72  00                 	db	0
   443  00FC73                     STR_47:
   444                           
   445                           ; BSR set to: 2
   446  00FC73  50                 	db	80	;'P'
   447  00FC74  45                 	db	69	;'E'
   448  00FC75  20                 	db	32
   449  00FC76  54                 	db	84	;'T'
   450  00FC77  20                 	db	32
   451  00FC78  25                 	db	37
   452  00FC79  64                 	db	100	;'d'
   453  00FC7A  20                 	db	32
   454  00FC7B  2D                 	db	45
   455  00FC7C  20                 	db	32
   456  00FC7D  50                 	db	80	;'P'
   457  00FC7E  69                 	db	105	;'i'
   458  00FC7F  20                 	db	32
   459  00FC80  25                 	db	37
   460  00FC81  64                 	db	100	;'d'
   461  00FC82  20                 	db	32
   462  00FC83  50                 	db	80	;'P'
   463  00FC84  6E                 	db	110	;'n'
   464  00FC85  20                 	db	32
   465  00FC86  25                 	db	37
   466  00FC87  64                 	db	100	;'d'
   467  00FC88  20                 	db	32
   468  00FC89  50                 	db	80	;'P'
   469  00FC8A  64                 	db	100	;'d'
   470  00FC8B  20                 	db	32
   471  00FC8C  25                 	db	37
   472  00FC8D  64                 	db	100	;'d'
   473  00FC8E  2E                 	db	46
   474  00FC8F  20                 	db	32
   475  00FC90  52                 	db	82	;'R'
   476  00FC91  20                 	db	32
   477  00FC92  25                 	db	37
   478  00FC93  64                 	db	100	;'d'
   479  00FC94  20                 	db	32
   480  00FC95  50                 	db	80	;'P'
   481  00FC96  65                 	db	101	;'e'
   482  00FC97  70                 	db	112	;'p'
   483  00FC98  20                 	db	32
   484  00FC99  25                 	db	37
   485  00FC9A  64                 	db	100	;'d'
   486  00FC9B  20                 	db	32
   487  00FC9C  4F                 	db	79	;'O'
   488  00FC9D  53                 	db	83	;'S'
   489  00FC9E  20                 	db	32
   490  00FC9F  25                 	db	37
   491  00FCA0  64                 	db	100	;'d'
   492  00FCA1  0A                 	db	10
   493  00FCA2  00                 	db	0
   494  00FCA3                     STR_20:
   495                           
   496                           ; BSR set to: 2
   497  00FCA3  4D                 	db	77	;'M'
   498  00FCA4  41                 	db	65	;'A'
   499  00FCA5  49                 	db	73	;'I'
   500  00FCA6  4E                 	db	78	;'N'
   501  00FCA7  20                 	db	32
   502  00FCA8  50                 	db	80	;'P'
   503  00FCA9  52                 	db	82	;'R'
   504  00FCAA  45                 	db	69	;'E'
   505  00FCAB  53                 	db	83	;'S'
   506  00FCAC  53                 	db	83	;'S'
   507  00FCAD  55                 	db	85	;'U'
   508  00FCAE  52                 	db	82	;'R'
   509  00FCAF  45                 	db	69	;'E'
   510  00FCB0  2E                 	db	46
   511  00FCB1  20                 	db	32
   512  00FCB2  4D                 	db	77	;'M'
   513  00FCB3  69                 	db	105	;'i'
   514  00FCB4  6E                 	db	110	;'n'
   515  00FCB5  20                 	db	32
   516  00FCB6  25                 	db	37
   517  00FCB7  64                 	db	100	;'d'
   518  00FCB8  20                 	db	32
   519  00FCB9  4D                 	db	77	;'M'
   520  00FCBA  61                 	db	97	;'a'
   521  00FCBB  78                 	db	120	;'x'
   522  00FCBC  20                 	db	32
   523  00FCBD  25                 	db	37
   524  00FCBE  64                 	db	100	;'d'
   525  00FCBF  20                 	db	32
   526  00FCC0  4D                 	db	77	;'M'
   527  00FCC1  45                 	db	69	;'E'
   528  00FCC2  41                 	db	65	;'A'
   529  00FCC3  4E                 	db	78	;'N'
   530  00FCC4  20                 	db	32
   531  00FCC5  25                 	db	37
   532  00FCC6  64                 	db	100	;'d'
   533  00FCC7  0A                 	db	10
   534  00FCC8  00                 	db	0
   535  00FCC9                     STR_21:
   536                           
   537                           ; BSR set to: 2
   538  00FCC9  41                 	db	65	;'A'
   539  00FCCA  55                 	db	85	;'U'
   540  00FCCB  58                 	db	88	;'X'
   541  00FCCC  20                 	db	32
   542  00FCCD  50                 	db	80	;'P'
   543  00FCCE  52                 	db	82	;'R'
   544  00FCCF  45                 	db	69	;'E'
   545  00FCD0  53                 	db	83	;'S'
   546  00FCD1  53                 	db	83	;'S'
   547  00FCD2  55                 	db	85	;'U'
   548  00FCD3  52                 	db	82	;'R'
   549  00FCD4  45                 	db	69	;'E'
   550  00FCD5  2E                 	db	46
   551  00FCD6  20                 	db	32
   552  00FCD7  4D                 	db	77	;'M'
   553  00FCD8  69                 	db	105	;'i'
   554  00FCD9  6E                 	db	110	;'n'
   555  00FCDA  20                 	db	32
   556  00FCDB  25                 	db	37
   557  00FCDC  64                 	db	100	;'d'
   558  00FCDD  20                 	db	32
   559  00FCDE  4D                 	db	77	;'M'
   560  00FCDF  61                 	db	97	;'a'
   561  00FCE0  78                 	db	120	;'x'
   562  00FCE1  20                 	db	32
   563  00FCE2  25                 	db	37
   564  00FCE3  64                 	db	100	;'d'
   565  00FCE4  20                 	db	32
   566  00FCE5  4D                 	db	77	;'M'
   567  00FCE6  45                 	db	69	;'E'
   568  00FCE7  41                 	db	65	;'A'
   569  00FCE8  4E                 	db	78	;'N'
   570  00FCE9  20                 	db	32
   571  00FCEA  25                 	db	37
   572  00FCEB  64                 	db	100	;'d'
   573  00FCEC  0A                 	db	10
   574  00FCED  00                 	db	0
   575  00FCEE                     STR_45:
   576                           
   577                           ; BSR set to: 2
   578  00FCEE  42                 	db	66	;'B'
   579  00FCEF  44                 	db	68	;'D'
   580  00FCF0  20                 	db	32
   581  00FCF1  56                 	db	86	;'V'
   582  00FCF2  4F                 	db	79	;'O'
   583  00FCF3  20                 	db	32
   584  00FCF4  54                 	db	84	;'T'
   585  00FCF5  20                 	db	32
   586  00FCF6  25                 	db	37
   587  00FCF7  64                 	db	100	;'d'
   588  00FCF8  20                 	db	32
   589  00FCF9  2D                 	db	45
   590  00FCFA  20                 	db	32
   591  00FCFB  50                 	db	80	;'P'
   592  00FCFC  69                 	db	105	;'i'
   593  00FCFD  20                 	db	32
   594  00FCFE  25                 	db	37
   595  00FCFF  64                 	db	100	;'d'
   596  00FD00  20                 	db	32
   597  00FD01  50                 	db	80	;'P'
   598  00FD02  35                 	db	53	;'5'
   599  00FD03  30                 	db	48	;'0'
   600  00FD04  20                 	db	32
   601  00FD05  25                 	db	37
   602  00FD06  64                 	db	100	;'d'
   603  00FD07  20                 	db	32
   604  00FD08  50                 	db	80	;'P'
   605  00FD09  32                 	db	50	;'2'
   606  00FD0A  30                 	db	48	;'0'
   607  00FD0B  30                 	db	48	;'0'
   608  00FD0C  30                 	db	48	;'0'
   609  00FD0D  20                 	db	32
   610  00FD0E  25                 	db	37
   611  00FD0F  64                 	db	100	;'d'
   612  00FD10  0A                 	db	10
   613  00FD11  00                 	db	0
   614  00FD12                     STR_42:
   615                           
   616                           ; BSR set to: 2
   617  00FD12  50                 	db	80	;'P'
   618  00FD13  45                 	db	69	;'E'
   619  00FD14  49                 	db	73	;'I'
   620  00FD15  20                 	db	32
   621  00FD16  65                 	db	101	;'e'
   622  00FD17  6E                 	db	110	;'n'
   623  00FD18  64                 	db	100	;'d'
   624  00FD19  20                 	db	32
   625  00FD1A  54                 	db	84	;'T'
   626  00FD1B  20                 	db	32
   627  00FD1C  25                 	db	37
   628  00FD1D  64                 	db	100	;'d'
   629  00FD1E  20                 	db	32
   630  00FD1F  2D                 	db	45
   631  00FD20  20                 	db	32
   632  00FD21  50                 	db	80	;'P'
   633  00FD22  69                 	db	105	;'i'
   634  00FD23  20                 	db	32
   635  00FD24  25                 	db	37
   636  00FD25  64                 	db	100	;'d'
   637  00FD26  20                 	db	32
   638  00FD27  4F                 	db	79	;'O'
   639  00FD28  53                 	db	83	;'S'
   640  00FD29  20                 	db	32
   641  00FD2A  25                 	db	37
   642  00FD2B  64                 	db	100	;'d'
   643  00FD2C  0A                 	db	10
   644  00FD2D  00                 	db	0
   645  00FD2E                     STR_34:
   646                           
   647                           ; BSR set to: 2
   648  00FD2E  50                 	db	80	;'P'
   649  00FD2F  49                 	db	73	;'I'
   650  00FD30  49                 	db	73	;'I'
   651  00FD31  20                 	db	32
   652  00FD32  65                 	db	101	;'e'
   653  00FD33  6E                 	db	110	;'n'
   654  00FD34  64                 	db	100	;'d'
   655  00FD35  20                 	db	32
   656  00FD36  54                 	db	84	;'T'
   657  00FD37  20                 	db	32
   658  00FD38  25                 	db	37
   659  00FD39  64                 	db	100	;'d'
   660  00FD3A  20                 	db	32
   661  00FD3B  2D                 	db	45
   662  00FD3C  20                 	db	32
   663  00FD3D  50                 	db	80	;'P'
   664  00FD3E  69                 	db	105	;'i'
   665  00FD3F  20                 	db	32
   666  00FD40  25                 	db	37
   667  00FD41  64                 	db	100	;'d'
   668  00FD42  20                 	db	32
   669  00FD43  50                 	db	80	;'P'
   670  00FD44  6E                 	db	110	;'n'
   671  00FD45  20                 	db	32
   672  00FD46  25                 	db	37
   673  00FD47  64                 	db	100	;'d'
   674  00FD48  0A                 	db	10
   675  00FD49  00                 	db	0
   676  00FD4A                     STR_44:
   677                           
   678                           ; BSR set to: 2
   679  00FD4A  50                 	db	80	;'P'
   680  00FD4B  45                 	db	69	;'E'
   681  00FD4C  20                 	db	32
   682  00FD4D  4F                 	db	79	;'O'
   683  00FD4E  53                 	db	83	;'S'
   684  00FD4F  43                 	db	67	;'C'
   685  00FD50  20                 	db	32
   686  00FD51  54                 	db	84	;'T'
   687  00FD52  20                 	db	32
   688  00FD53  25                 	db	37
   689  00FD54  64                 	db	100	;'d'
   690  00FD55  20                 	db	32
   691  00FD56  2D                 	db	45
   692  00FD57  20                 	db	32
   693  00FD58  50                 	db	80	;'P'
   694  00FD59  69                 	db	105	;'i'
   695  00FD5A  20                 	db	32
   696  00FD5B  25                 	db	37
   697  00FD5C  64                 	db	100	;'d'
   698  00FD5D  20                 	db	32
   699  00FD5E  50                 	db	80	;'P'
   700  00FD5F  30                 	db	48	;'0'
   701  00FD60  20                 	db	32
   702  00FD61  25                 	db	37
   703  00FD62  64                 	db	100	;'d'
   704  00FD63  0A                 	db	10
   705  00FD64  00                 	db	0
   706  00FD65                     STR_11:
   707                           
   708                           ; BSR set to: 2
   709  00FD65  56                 	db	86	;'V'
   710  00FD66  44                 	db	68	;'D'
   711  00FD67  44                 	db	68	;'D'
   712  00FD68  20                 	db	32
   713  00FD69  4D                 	db	77	;'M'
   714  00FD6A  69                 	db	105	;'i'
   715  00FD6B  6E                 	db	110	;'n'
   716  00FD6C  20                 	db	32
   717  00FD6D  25                 	db	37
   718  00FD6E  64                 	db	100	;'d'
   719  00FD6F  20                 	db	32
   720  00FD70  4D                 	db	77	;'M'
   721  00FD71  61                 	db	97	;'a'
   722  00FD72  78                 	db	120	;'x'
   723  00FD73  20                 	db	32
   724  00FD74  25                 	db	37
   725  00FD75  64                 	db	100	;'d'
   726  00FD76  20                 	db	32
   727  00FD77  4D                 	db	77	;'M'
   728  00FD78  45                 	db	69	;'E'
   729  00FD79  41                 	db	65	;'A'
   730  00FD7A  4E                 	db	78	;'N'
   731  00FD7B  20                 	db	32
   732  00FD7C  25                 	db	37
   733  00FD7D  64                 	db	100	;'d'
   734  00FD7E  0A                 	db	10
   735  00FD7F  00                 	db	0
   736  00FD80                     STR_36:
   737                           
   738                           ; BSR set to: 2
   739  00FD80  50                 	db	80	;'P'
   740  00FD81  49                 	db	73	;'I'
   741  00FD82  4F                 	db	79	;'O'
   742  00FD83  53                 	db	83	;'S'
   743  00FD84  45                 	db	69	;'E'
   744  00FD85  20                 	db	32
   745  00FD86  56                 	db	86	;'V'
   746  00FD87  4F                 	db	79	;'O'
   747  00FD88  20                 	db	32
   748  00FD89  54                 	db	84	;'T'
   749  00FD8A  20                 	db	32
   750  00FD8B  25                 	db	37
   751  00FD8C  64                 	db	100	;'d'
   752  00FD8D  20                 	db	32
   753  00FD8E  2D                 	db	45
   754  00FD8F  20                 	db	32
   755  00FD90  50                 	db	80	;'P'
   756  00FD91  69                 	db	105	;'i'
   757  00FD92  20                 	db	32
   758  00FD93  25                 	db	37
   759  00FD94  64                 	db	100	;'d'
   760  00FD95  0A                 	db	10
   761  00FD96  00                 	db	0
   762  00FD97                     STR_56:
   763                           
   764                           ; BSR set to: 2
   765  00FD97  25                 	db	37
   766  00FD98  32                 	db	50	;'2'
   767  00FD99  64                 	db	100	;'d'
   768  00FD9A  20                 	db	32
   769  00FD9B  25                 	db	37
   770  00FD9C  32                 	db	50	;'2'
   771  00FD9D  64                 	db	100	;'d'
   772  00FD9E  20                 	db	32
   773  00FD9F  20                 	db	32
   774  00FDA0  25                 	db	37
   775  00FDA1  20                 	db	32
   776  00FDA2  32                 	db	50	;'2'
   777  00FDA3  64                 	db	100	;'d'
   778  00FDA4  20                 	db	32
   779  00FDA5  2D                 	db	45
   780  00FDA6  2D                 	db	45
   781  00FDA7  20                 	db	32
   782  00FDA8  2D                 	db	45
   783  00FDA9  2D                 	db	45
   784  00FDAA  2D                 	db	45
   785  00FDAB  00                 	db	0
   786  00FDAC                     STR_58:
   787                           
   788                           ; BSR set to: 2
   789  00FDAC  25                 	db	37
   790  00FDAD  32                 	db	50	;'2'
   791  00FDAE  64                 	db	100	;'d'
   792  00FDAF  20                 	db	32
   793  00FDB0  25                 	db	37
   794  00FDB1  32                 	db	50	;'2'
   795  00FDB2  64                 	db	100	;'d'
   796  00FDB3  20                 	db	32
   797  00FDB4  20                 	db	32
   798  00FDB5  25                 	db	37
   799  00FDB6  32                 	db	50	;'2'
   800  00FDB7  64                 	db	100	;'d'
   801  00FDB8  20                 	db	32
   802  00FDB9  2D                 	db	45
   803  00FDBA  2D                 	db	45
   804  00FDBB  20                 	db	32
   805  00FDBC  2D                 	db	45
   806  00FDBD  2D                 	db	45
   807  00FDBE  2D                 	db	45
   808  00FDBF  00                 	db	0
   809  00FDC0                     STR_57:
   810                           
   811                           ; BSR set to: 2
   812  00FDC0  25                 	db	37
   813  00FDC1  32                 	db	50	;'2'
   814  00FDC2  64                 	db	100	;'d'
   815  00FDC3  20                 	db	32
   816  00FDC4  25                 	db	37
   817  00FDC5  32                 	db	50	;'2'
   818  00FDC6  64                 	db	100	;'d'
   819  00FDC7  20                 	db	32
   820  00FDC8  20                 	db	32
   821  00FDC9  2D                 	db	45
   822  00FDCA  2D                 	db	45
   823  00FDCB  20                 	db	32
   824  00FDCC  25                 	db	37
   825  00FDCD  32                 	db	50	;'2'
   826  00FDCE  64                 	db	100	;'d'
   827  00FDCF  20                 	db	32
   828  00FDD0  25                 	db	37
   829  00FDD1  33                 	db	51	;'3'
   830  00FDD2  64                 	db	100	;'d'
   831  00FDD3  00                 	db	0
   832  00FDD4                     STR_43:
   833                           
   834                           ; BSR set to: 2
   835  00FDD4  50                 	db	80	;'P'
   836  00FDD5  45                 	db	69	;'E'
   837  00FDD6  20                 	db	32
   838  00FDD7  56                 	db	86	;'V'
   839  00FDD8  43                 	db	67	;'C'
   840  00FDD9  20                 	db	32
   841  00FDDA  54                 	db	84	;'T'
   842  00FDDB  20                 	db	32
   843  00FDDC  25                 	db	37
   844  00FDDD  64                 	db	100	;'d'
   845  00FDDE  20                 	db	32
   846  00FDDF  2D                 	db	45
   847  00FDE0  20                 	db	32
   848  00FDE1  50                 	db	80	;'P'
   849  00FDE2  69                 	db	105	;'i'
   850  00FDE3  20                 	db	32
   851  00FDE4  25                 	db	37
   852  00FDE5  64                 	db	100	;'d'
   853  00FDE6  0A                 	db	10
   854  00FDE7  00                 	db	0
   855  00FDE8                     STR_35:
   856                           
   857                           ; BSR set to: 2
   858  00FDE8  50                 	db	80	;'P'
   859  00FDE9  49                 	db	73	;'I'
   860  00FDEA  20                 	db	32
   861  00FDEB  56                 	db	86	;'V'
   862  00FDEC  43                 	db	67	;'C'
   863  00FDED  20                 	db	32
   864  00FDEE  54                 	db	84	;'T'
   865  00FDEF  20                 	db	32
   866  00FDF0  25                 	db	37
   867  00FDF1  64                 	db	100	;'d'
   868  00FDF2  20                 	db	32
   869  00FDF3  2D                 	db	45
   870  00FDF4  20                 	db	32
   871  00FDF5  50                 	db	80	;'P'
   872  00FDF6  69                 	db	105	;'i'
   873  00FDF7  20                 	db	32
   874  00FDF8  25                 	db	37
   875  00FDF9  64                 	db	100	;'d'
   876  00FDFA  0A                 	db	10
   877  00FDFB  00                 	db	0
   878  00FDFC                     STR_46:
   879                           
   880                           ; BSR set to: 2
   881  00FDFC  50                 	db	80	;'P'
   882  00FDFD  45                 	db	69	;'E'
   883  00FDFE  20                 	db	32
   884  00FDFF  56                 	db	86	;'V'
   885  00FE00  4F                 	db	79	;'O'
   886  00FE01  20                 	db	32
   887  00FE02  54                 	db	84	;'T'
   888  00FE03  20                 	db	32
   889  00FE04  25                 	db	37
   890  00FE05  64                 	db	100	;'d'
   891  00FE06  20                 	db	32
   892  00FE07  2D                 	db	45
   893  00FE08  20                 	db	32
   894  00FE09  50                 	db	80	;'P'
   895  00FE0A  69                 	db	105	;'i'
   896  00FE0B  20                 	db	32
   897  00FE0C  25                 	db	37
   898  00FE0D  64                 	db	100	;'d'
   899  00FE0E  0A                 	db	10
   900  00FE0F  00                 	db	0
   901  00FE10                     STR_38:
   902                           
   903                           ; BSR set to: 2
   904  00FE10  50                 	db	80	;'P'
   905  00FE11  49                 	db	73	;'I'
   906  00FE12  20                 	db	32
   907  00FE13  56                 	db	86	;'V'
   908  00FE14  4F                 	db	79	;'O'
   909  00FE15  20                 	db	32
   910  00FE16  54                 	db	84	;'T'
   911  00FE17  20                 	db	32
   912  00FE18  25                 	db	37
   913  00FE19  64                 	db	100	;'d'
   914  00FE1A  20                 	db	32
   915  00FE1B  2D                 	db	45
   916  00FE1C  20                 	db	32
   917  00FE1D  50                 	db	80	;'P'
   918  00FE1E  69                 	db	105	;'i'
   919  00FE1F  20                 	db	32
   920  00FE20  25                 	db	37
   921  00FE21  64                 	db	100	;'d'
   922  00FE22  0A                 	db	10
   923  00FE23  00                 	db	0
   924  00FE24                     STR_30:
   925                           
   926                           ; BSR set to: 2
   927  00FE24  50                 	db	80	;'P'
   928  00FE25  52                 	db	82	;'R'
   929  00FE26  45                 	db	69	;'E'
   930  00FE27  53                 	db	83	;'S'
   931  00FE28  53                 	db	83	;'S'
   932  00FE29  20                 	db	32
   933  00FE2A  2B                 	db	43
   934  00FE2B  20                 	db	32
   935  00FE2C  54                 	db	84	;'T'
   936  00FE2D  4F                 	db	79	;'O'
   937  00FE2E  20                 	db	32
   938  00FE2F  52                 	db	82	;'R'
   939  00FE30  45                 	db	69	;'E'
   940  00FE31  50                 	db	80	;'P'
   941  00FE32  45                 	db	69	;'E'
   942  00FE33  41                 	db	65	;'A'
   943  00FE34  54                 	db	84	;'T'
   944  00FE35  20                 	db	32
   945  00FE36  00                 	db	0
   946  00FE37                     STR_19:
   947                           
   948                           ; BSR set to: 2
   949  00FE37  4D                 	db	77	;'M'
   950  00FE38  53                 	db	83	;'S'
   951  00FE39  3A                 	db	58	;':'
   952  00FE3A  20                 	db	32
   953  00FE3B  25                 	db	37
   954  00FE3C  20                 	db	32
   955  00FE3D  33                 	db	51	;'3'
   956  00FE3E  64                 	db	100	;'d'
   957  00FE3F  20                 	db	32
   958  00FE40  41                 	db	65	;'A'
   959  00FE41  53                 	db	83	;'S'
   960  00FE42  3A                 	db	58	;':'
   961  00FE43  20                 	db	32
   962  00FE44  25                 	db	37
   963  00FE45  20                 	db	32
   964  00FE46  33                 	db	51	;'3'
   965  00FE47  64                 	db	100	;'d'
   966  00FE48  20                 	db	32
   967  00FE49  00                 	db	0
   968  00FE4A                     STR_65:
   969                           
   970                           ; BSR set to: 2
   971  00FE4A  4C                 	db	76	;'L'
   972  00FE4B  4F                 	db	79	;'O'
   973  00FE4C  57                 	db	87	;'W'
   974  00FE4D  20                 	db	32
   975  00FE4E  56                 	db	86	;'V'
   976  00FE4F  2E                 	db	46
   977  00FE50  20                 	db	32
   978  00FE51  41                 	db	65	;'A'
   979  00FE52  4C                 	db	76	;'L'
   980  00FE53  41                 	db	65	;'A'
   981  00FE54  52                 	db	82	;'R'
   982  00FE55  4D                 	db	77	;'M'
   983  00FE56  20                 	db	32
   984  00FE57  25                 	db	37
   985  00FE58  20                 	db	32
   986  00FE59  33                 	db	51	;'3'
   987  00FE5A  64                 	db	100	;'d'
   988  00FE5B  00                 	db	0
   989  00FE5C                     STR_66:
   990                           
   991                           ; BSR set to: 2
   992  00FE5C  48                 	db	72	;'H'
   993  00FE5D  49                 	db	73	;'I'
   994  00FE5E  47                 	db	71	;'G'
   995  00FE5F  48                 	db	72	;'H'
   996  00FE60  56                 	db	86	;'V'
   997  00FE61  2E                 	db	46
   998  00FE62  20                 	db	32
   999  00FE63  41                 	db	65	;'A'
  1000  00FE64  4C                 	db	76	;'L'
  1001  00FE65  41                 	db	65	;'A'
  1002  00FE66  52                 	db	82	;'R'
  1003  00FE67  4D                 	db	77	;'M'
  1004  00FE68  20                 	db	32
  1005  00FE69  25                 	db	37
  1006  00FE6A  20                 	db	32
  1007  00FE6B  33                 	db	51	;'3'
  1008  00FE6C  64                 	db	100	;'d'
  1009  00FE6D  00                 	db	0
  1010  00FE6E                     STR_25:
  1011                           
  1012                           ; BSR set to: 2
  1013  00FE6E  46                 	db	70	;'F'
  1014  00FE6F  4C                 	db	76	;'L'
  1015  00FE70  4F                 	db	79	;'O'
  1016  00FE71  57                 	db	87	;'W'
  1017  00FE72  20                 	db	32
  1018  00FE73  52                 	db	82	;'R'
  1019  00FE74  41                 	db	65	;'A'
  1020  00FE75  54                 	db	84	;'T'
  1021  00FE76  45                 	db	69	;'E'
  1022  00FE77  20                 	db	32
  1023  00FE78  20                 	db	32
  1024  00FE79  20                 	db	32
  1025  00FE7A  20                 	db	32
  1026  00FE7B  20                 	db	32
  1027  00FE7C  20                 	db	32
  1028  00FE7D  20                 	db	32
  1029  00FE7E  20                 	db	32
  1030  00FE7F  00                 	db	0
  1031  00FE80                     STR_22:
  1032                           
  1033                           ; BSR set to: 2
  1034  00FE80  43                 	db	67	;'C'
  1035  00FE81  41                 	db	65	;'A'
  1036  00FE82  4C                 	db	76	;'L'
  1037  00FE83  20                 	db	32
  1038  00FE84  45                 	db	69	;'E'
  1039  00FE85  52                 	db	82	;'R'
  1040  00FE86  52                 	db	82	;'R'
  1041  00FE87  4F                 	db	79	;'O'
  1042  00FE88  52                 	db	82	;'R'
  1043  00FE89  2E                 	db	46
  1044  00FE8A  20                 	db	32
  1045  00FE8B  52                 	db	82	;'R'
  1046  00FE8C  45                 	db	69	;'E'
  1047  00FE8D  54                 	db	84	;'T'
  1048  00FE8E  52                 	db	82	;'R'
  1049  00FE8F  59                 	db	89	;'Y'
  1050  00FE90  20                 	db	32
  1051  00FE91  00                 	db	0
  1052  00FE92                     STR_27:
  1053                           
  1054                           ; BSR set to: 2
  1055  00FE92  46                 	db	70	;'F'
  1056  00FE93  4C                 	db	76	;'L'
  1057  00FE94  4F                 	db	79	;'O'
  1058  00FE95  57                 	db	87	;'W'
  1059  00FE96  3A                 	db	58	;':'
  1060  00FE97  20                 	db	32
  1061  00FE98  25                 	db	37
  1062  00FE99  20                 	db	32
  1063  00FE9A  33                 	db	51	;'3'
  1064  00FE9B  64                 	db	100	;'d'
  1065  00FE9C  20                 	db	32
  1066  00FE9D  4C                 	db	76	;'L'
  1067  00FE9E  2F                 	db	47
  1068  00FE9F  6D                 	db	109	;'m'
  1069  00FEA0  69                 	db	105	;'i'
  1070  00FEA1  6E                 	db	110	;'n'
  1071  00FEA2  20                 	db	32
  1072  00FEA3  00                 	db	0
  1073  00FEA4                     STR_54:
  1074                           
  1075                           ; BSR set to: 2
  1076  00FEA4  45                 	db	69	;'E'
  1077  00FEA5  4D                 	db	77	;'M'
  1078  00FEA6  45                 	db	69	;'E'
  1079  00FEA7  52                 	db	82	;'R'
  1080  00FEA8  47                 	db	71	;'G'
  1081  00FEA9  2E                 	db	46
  1082  00FEAA  52                 	db	82	;'R'
  1083  00FEAB  45                 	db	69	;'E'
  1084  00FEAC  53                 	db	83	;'S'
  1085  00FEAD  50                 	db	80	;'P'
  1086  00FEAE  49                 	db	73	;'I'
  1087  00FEAF  52                 	db	82	;'R'
  1088  00FEB0  41                 	db	65	;'A'
  1089  00FEB1  54                 	db	84	;'T'
  1090  00FEB2  4F                 	db	79	;'O'
  1091  00FEB3  52                 	db	82	;'R'
  1092  00FEB4  00                 	db	0
  1093  00FEB5                     STR_37:
  1094                           
  1095                           ; BSR set to: 2
  1096  00FEB5  50                 	db	80	;'P'
  1097  00FEB6  49                 	db	73	;'I'
  1098  00FEB7  20                 	db	32
  1099  00FEB8  56                 	db	86	;'V'
  1100  00FEB9  4F                 	db	79	;'O'
  1101  00FEBA  20                 	db	32
  1102  00FEBB  54                 	db	84	;'T'
  1103  00FEBC  20                 	db	32
  1104  00FEBD  25                 	db	37
  1105  00FEBE  64                 	db	100	;'d'
  1106  00FEBF  20                 	db	32
  1107  00FEC0  4F                 	db	79	;'O'
  1108  00FEC1  53                 	db	83	;'S'
  1109  00FEC2  56                 	db	86	;'V'
  1110  00FEC3  33                 	db	51	;'3'
  1111  00FEC4  0A                 	db	10
  1112  00FEC5  00                 	db	0
  1113  00FEC6                     STR_4:
  1114                           
  1115                           ; BSR set to: 2
  1116  00FEC6  20                 	db	32
  1117  00FEC7  20                 	db	32
  1118  00FEC8  20                 	db	32
  1119  00FEC9  20                 	db	32
  1120  00FECA  20                 	db	32
  1121  00FECB  20                 	db	32
  1122  00FECC  20                 	db	32
  1123  00FECD  20                 	db	32
  1124  00FECE  20                 	db	32
  1125  00FECF  20                 	db	32
  1126  00FED0  20                 	db	32
  1127  00FED1  20                 	db	32
  1128  00FED2  20                 	db	32
  1129  00FED3  20                 	db	32
  1130  00FED4  20                 	db	32
  1131  00FED5  20                 	db	32
  1132  00FED6  00                 	db	0
  1133  00FED7                     STR_15:
  1134                           
  1135                           ; BSR set to: 2
  1136  00FED7  56                 	db	86	;'V'
  1137  00FED8  44                 	db	68	;'D'
  1138  00FED9  44                 	db	68	;'D'
  1139  00FEDA  20                 	db	32
  1140  00FEDB  4E                 	db	78	;'N'
  1141  00FEDC  4F                 	db	79	;'O'
  1142  00FEDD  49                 	db	73	;'I'
  1143  00FEDE  53                 	db	83	;'S'
  1144  00FEDF  59                 	db	89	;'Y'
  1145  00FEE0  20                 	db	32
  1146  00FEE1  20                 	db	32
  1147  00FEE2  20                 	db	32
  1148  00FEE3  20                 	db	32
  1149  00FEE4  20                 	db	32
  1150  00FEE5  20                 	db	32
  1151  00FEE6  20                 	db	32
  1152  00FEE7  00                 	db	0
  1153  00FEE8                     STR_8:
  1154                           
  1155                           ; BSR set to: 2
  1156  00FEE8  53                 	db	83	;'S'
  1157  00FEE9  45                 	db	69	;'E'
  1158  00FEEA  4C                 	db	76	;'L'
  1159  00FEEB  46                 	db	70	;'F'
  1160  00FEEC  2D                 	db	45
  1161  00FEED  54                 	db	84	;'T'
  1162  00FEEE  45                 	db	69	;'E'
  1163  00FEEF  53                 	db	83	;'S'
  1164  00FEF0  54                 	db	84	;'T'
  1165  00FEF1  2E                 	db	46
  1166  00FEF2  20                 	db	32
  1167  00FEF3  20                 	db	32
  1168  00FEF4  20                 	db	32
  1169  00FEF5  20                 	db	32
  1170  00FEF6  20                 	db	32
  1171  00FEF7  20                 	db	32
  1172  00FEF8  00                 	db	0
  1173  00FEF9                     STR_9:
  1174                           
  1175                           ; BSR set to: 2
  1176  00FEF9  41                 	db	65	;'A'
  1177  00FEFA  49                 	db	73	;'I'
  1178  00FEFB  52                 	db	82	;'R'
  1179  00FEFC  57                 	db	87	;'W'
  1180  00FEFD  41                 	db	65	;'A'
  1181  00FEFE  59                 	db	89	;'Y'
  1182  00FEFF  20                 	db	32
  1183  00FF00  4F                 	db	79	;'O'
  1184  00FF01  50                 	db	80	;'P'
  1185  00FF02  45                 	db	69	;'E'
  1186  00FF03  4E                 	db	78	;'N'
  1187  00FF04  20                 	db	32
  1188  00FF05  20                 	db	32
  1189  00FF06  20                 	db	32
  1190  00FF07  20                 	db	32
  1191  00FF08  20                 	db	32
  1192  00FF09  00                 	db	0
  1193  00FF0A                     STR_28:
  1194                           
  1195                           ; BSR set to: 2
  1196  00FF0A  46                 	db	70	;'F'
  1197  00FF0B  4C                 	db	76	;'L'
  1198  00FF0C  4F                 	db	79	;'O'
  1199  00FF0D  57                 	db	87	;'W'
  1200  00FF0E  20                 	db	32
  1201  00FF0F  54                 	db	84	;'T'
  1202  00FF10  4F                 	db	79	;'O'
  1203  00FF11  4F                 	db	79	;'O'
  1204  00FF12  20                 	db	32
  1205  00FF13  4C                 	db	76	;'L'
  1206  00FF14  4F                 	db	79	;'O'
  1207  00FF15  57                 	db	87	;'W'
  1208  00FF16  20                 	db	32
  1209  00FF17  20                 	db	32
  1210  00FF18  20                 	db	32
  1211  00FF19  20                 	db	32
  1212  00FF1A  00                 	db	0
  1213  00FF1B                     STR_26:
  1214                           
  1215                           ; BSR set to: 2
  1216  00FF1B  46                 	db	70	;'F'
  1217  00FF1C  4C                 	db	76	;'L'
  1218  00FF1D  4F                 	db	79	;'O'
  1219  00FF1E  57                 	db	87	;'W'
  1220  00FF1F  20                 	db	32
  1221  00FF20  54                 	db	84	;'T'
  1222  00FF21  4F                 	db	79	;'O'
  1223  00FF22  4F                 	db	79	;'O'
  1224  00FF23  20                 	db	32
  1225  00FF24  48                 	db	72	;'H'
  1226  00FF25  49                 	db	73	;'I'
  1227  00FF26  47                 	db	71	;'G'
  1228  00FF27  48                 	db	72	;'H'
  1229  00FF28  20                 	db	32
  1230  00FF29  20                 	db	32
  1231  00FF2A  20                 	db	32
  1232  00FF2B  00                 	db	0
  1233  00FF2C                     STR_12:
  1234                           
  1235                           ; BSR set to: 2
  1236  00FF2C  49                 	db	73	;'I'
  1237  00FF2D  4E                 	db	78	;'N'
  1238  00FF2E  54                 	db	84	;'T'
  1239  00FF2F  45                 	db	69	;'E'
  1240  00FF30  52                 	db	82	;'R'
  1241  00FF31  4E                 	db	78	;'N'
  1242  00FF32  41                 	db	65	;'A'
  1243  00FF33  4C                 	db	76	;'L'
  1244  00FF34  20                 	db	32
  1245  00FF35  45                 	db	69	;'E'
  1246  00FF36  52                 	db	82	;'R'
  1247  00FF37  52                 	db	82	;'R'
  1248  00FF38  4F                 	db	79	;'O'
  1249  00FF39  52                 	db	82	;'R'
  1250  00FF3A  20                 	db	32
  1251  00FF3B  20                 	db	32
  1252  00FF3C  00                 	db	0
  1253  00FF3D                     STR_31:
  1254                           
  1255                           ; BSR set to: 2
  1256  00FF3D  50                 	db	80	;'P'
  1257  00FF3E  52                 	db	82	;'R'
  1258  00FF3F  45                 	db	69	;'E'
  1259  00FF40  53                 	db	83	;'S'
  1260  00FF41  53                 	db	83	;'S'
  1261  00FF42  20                 	db	32
  1262  00FF43  2D                 	db	45
  1263  00FF44  20                 	db	32
  1264  00FF45  54                 	db	84	;'T'
  1265  00FF46  4F                 	db	79	;'O'
  1266  00FF47  20                 	db	32
  1267  00FF48  45                 	db	69	;'E'
  1268  00FF49  58                 	db	88	;'X'
  1269  00FF4A  49                 	db	73	;'I'
  1270  00FF4B  54                 	db	84	;'T'
  1271  00FF4C  20                 	db	32
  1272  00FF4D  00                 	db	0
  1273  00FF4E                     STR_32:
  1274                           
  1275                           ; BSR set to: 2
  1276  00FF4E  42                 	db	66	;'B'
  1277  00FF4F  52                 	db	82	;'R'
  1278  00FF50  45                 	db	69	;'E'
  1279  00FF51  41                 	db	65	;'A'
  1280  00FF52  54                 	db	84	;'T'
  1281  00FF53  48                 	db	72	;'H'
  1282  00FF54  20                 	db	32
  1283  00FF55  54                 	db	84	;'T'
  1284  00FF56  4F                 	db	79	;'O'
  1285  00FF57  20                 	db	32
  1286  00FF58  53                 	db	83	;'S'
  1287  00FF59  54                 	db	84	;'T'
  1288  00FF5A  41                 	db	65	;'A'
  1289  00FF5B  52                 	db	82	;'R'
  1290  00FF5C  54                 	db	84	;'T'
  1291  00FF5D  20                 	db	32
  1292  00FF5E  00                 	db	0
  1293  00FF5F                     STR_16:
  1294                           
  1295                           ; BSR set to: 2
  1296  00FF5F  43                 	db	67	;'C'
  1297  00FF60  41                 	db	65	;'A'
  1298  00FF61  4C                 	db	76	;'L'
  1299  00FF62  20                 	db	32
  1300  00FF63  50                 	db	80	;'P'
  1301  00FF64  52                 	db	82	;'R'
  1302  00FF65  45                 	db	69	;'E'
  1303  00FF66  53                 	db	83	;'S'
  1304  00FF67  53                 	db	83	;'S'
  1305  00FF68  20                 	db	32
  1306  00FF69  42                 	db	66	;'B'
  1307  00FF6A  52                 	db	82	;'R'
  1308  00FF6B  45                 	db	69	;'E'
  1309  00FF6C  41                 	db	65	;'A'
  1310  00FF6D  54                 	db	84	;'T'
  1311  00FF6E  48                 	db	72	;'H'
  1312  00FF6F  00                 	db	0
  1313  00FF70                     STR_2:
  1314                           
  1315                           ; BSR set to: 2
  1316  00FF70  20                 	db	32
  1317  00FF71  20                 	db	32
  1318  00FF72  20                 	db	32
  1319  00FF73  20                 	db	32
  1320  00FF74  20                 	db	32
  1321  00FF75  20                 	db	32
  1322  00FF76  20                 	db	32
  1323  00FF77  20                 	db	32
  1324  00FF78  4D                 	db	77	;'M'
  1325  00FF79  2E                 	db	46
  1326  00FF7A  20                 	db	32
  1327  00FF7B  45                 	db	69	;'E'
  1328  00FF7C  52                 	db	82	;'R'
  1329  00FF7D  52                 	db	82	;'R'
  1330  00FF7E  4F                 	db	79	;'O'
  1331  00FF7F  52                 	db	82	;'R'
  1332  00FF80  00                 	db	0
  1333  00FF81                     STR_13:
  1334                           
  1335                           ; BSR set to: 2
  1336  00FF81  56                 	db	86	;'V'
  1337  00FF82  44                 	db	68	;'D'
  1338  00FF83  44                 	db	68	;'D'
  1339  00FF84  20                 	db	32
  1340  00FF85  4F                 	db	79	;'O'
  1341  00FF86  4F                 	db	79	;'O'
  1342  00FF87  4C                 	db	76	;'L'
  1343  00FF88  3A                 	db	58	;':'
  1344  00FF89  20                 	db	32
  1345  00FF8A  25                 	db	37
  1346  00FF8B  20                 	db	32
  1347  00FF8C  33                 	db	51	;'3'
  1348  00FF8D  64                 	db	100	;'d'
  1349  00FF8E  20                 	db	32
  1350  00FF8F  6D                 	db	109	;'m'
  1351  00FF90  56                 	db	86	;'V'
  1352  00FF91  00                 	db	0
  1353  00FF92                     STR_55:
  1354                           
  1355                           ; BSR set to: 2
  1356  00FF92  20                 	db	32
  1357  00FF93  20                 	db	32
  1358  00FF94  43                 	db	67	;'C'
  1359  00FF95  4F                 	db	79	;'O'
  1360  00FF96  4E                 	db	78	;'N'
  1361  00FF97  54                 	db	84	;'T'
  1362  00FF98  52                 	db	82	;'R'
  1363  00FF99  4F                 	db	79	;'O'
  1364  00FF9A  4C                 	db	76	;'L'
  1365  00FF9B  4C                 	db	76	;'L'
  1366  00FF9C  45                 	db	69	;'E'
  1367  00FF9D  52                 	db	82	;'R'
  1368  00FF9E  20                 	db	32
  1369  00FF9F  20                 	db	32
  1370  00FFA0  20                 	db	32
  1371  00FFA1  00                 	db	0
  1372  00FFA2                     STR_1:
  1373                           
  1374                           ; BSR set to: 2
  1375  00FFA2  49                 	db	73	;'I'
  1376  00FFA3  32                 	db	50	;'2'
  1377  00FFA4  43                 	db	67	;'C'
  1378  00FFA5  32                 	db	50	;'2'
  1379  00FFA6  20                 	db	32
  1380  00FFA7  43                 	db	67	;'C'
  1381  00FFA8  6C                 	db	108	;'l'
  1382  00FFA9  6F                 	db	111	;'o'
  1383  00FFAA  73                 	db	115	;'s'
  1384  00FFAB  65                 	db	101	;'e'
  1385  00FFAC  3A                 	db	58	;':'
  1386  00FFAD  20                 	db	32
  1387  00FFAE  25                 	db	37
  1388  00FFAF  64                 	db	100	;'d'
  1389  00FFB0  0A                 	db	10
  1390  00FFB1  00                 	db	0
  1391  00FFB2                     STR_6:
  1392                           
  1393                           ; BSR set to: 2
  1394  00FFB2  49                 	db	73	;'I'
  1395  00FFB3  32                 	db	50	;'2'
  1396  00FFB4  43                 	db	67	;'C'
  1397  00FFB5  32                 	db	50	;'2'
  1398  00FFB6  20                 	db	32
  1399  00FFB7  4F                 	db	79	;'O'
  1400  00FFB8  70                 	db	112	;'p'
  1401  00FFB9  65                 	db	101	;'e'
  1402  00FFBA  6E                 	db	110	;'n'
  1403  00FFBB  3A                 	db	58	;':'
  1404  00FFBC  20                 	db	32
  1405  00FFBD  25                 	db	37
  1406  00FFBE  64                 	db	100	;'d'
  1407  00FFBF  0A                 	db	10
  1408  00FFC0  00                 	db	0
  1409  00FFC1                     STR_5:
  1410                           
  1411                           ; BSR set to: 2
  1412  00FFC1  4D                 	db	77	;'M'
  1413  00FFC2  4F                 	db	79	;'O'
  1414  00FFC3  4E                 	db	78	;'N'
  1415  00FFC4  20                 	db	32
  1416  00FFC5  45                 	db	69	;'E'
  1417  00FFC6  52                 	db	82	;'R'
  1418  00FFC7  52                 	db	82	;'R'
  1419  00FFC8  4F                 	db	79	;'O'
  1420  00FFC9  52                 	db	82	;'R'
  1421  00FFCA  20                 	db	32
  1422  00FFCB  43                 	db	67	;'C'
  1423  00FFCC  4C                 	db	76	;'L'
  1424  00FFCD  52                 	db	82	;'R'
  1425  00FFCE  00                 	db	0
  1426  00FFCF                     STR_40:
  1427                           
  1428                           ; BSR set to: 2
  1429  00FFCF  43                 	db	67	;'C'
  1430  00FFD0  56                 	db	86	;'V'
  1431  00FFD1  3A                 	db	58	;':'
  1432  00FFD2  20                 	db	32
  1433  00FFD3  25                 	db	37
  1434  00FFD4  20                 	db	32
  1435  00FFD5  33                 	db	51	;'3'
  1436  00FFD6  64                 	db	100	;'d'
  1437  00FFD7  20                 	db	32
  1438  00FFD8  00                 	db	0
  1439  00FFD9                     STR_3:
  1440                           
  1441                           ; BSR set to: 2
  1442  00FFD9  4D                 	db	77	;'M'
  1443  00FFDA  4F                 	db	79	;'O'
  1444  00FFDB  4E                 	db	78	;'N'
  1445  00FFDC  20                 	db	32
  1446  00FFDD  45                 	db	69	;'E'
  1447  00FFDE  52                 	db	82	;'R'
  1448  00FFDF  52                 	db	82	;'R'
  1449  00FFE0  4F                 	db	79	;'O'
  1450  00FFE1  52                 	db	82	;'R'
  1451  00FFE2  00                 	db	0
  1452  00FFE3                     STR_53:
  1453                           
  1454                           ; BSR set to: 2
  1455  00FFE3  4B                 	db	75	;'K'
  1456  00FFE4  45                 	db	69	;'E'
  1457  00FFE5  59                 	db	89	;'Y'
  1458  00FFE6  21                 	db	33
  1459  00FFE7  20                 	db	32
  1460  00FFE8  25                 	db	37
  1461  00FFE9  64                 	db	100	;'d'
  1462  00FFEA  0A                 	db	10
  1463  00FFEB  00                 	db	0
  1464  00FFEC                     STR_10:
  1465                           
  1466                           ; BSR set to: 2
  1467  00FFEC  46                 	db	70	;'F'
  1468  00FFED  61                 	db	97	;'a'
  1469  00FFEE  74                 	db	116	;'t'
  1470  00FFEF  61                 	db	97	;'a'
  1471  00FFF0  6C                 	db	108	;'l'
  1472  00FFF1  20                 	db	32
  1473  00FFF2  25                 	db	37
  1474  00FFF3  64                 	db	100	;'d'
  1475  00FFF4  00                 	db	0
  1476  00FFF5                     STR_41:
  1477                           
  1478                           ; BSR set to: 2
  1479  00FFF5  0A                 	db	10
  1480  00FFF6  45                 	db	69	;'E'
  1481  00FFF7  50                 	db	80	;'P'
  1482  00FFF8  0A                 	db	10
  1483  00FFF9  00                 	db	0
  1484  00FFFA                     STR_33:
  1485                           
  1486                           ; BSR set to: 2
  1487  00FFFA  0A                 	db	10
  1488  00FFFB  49                 	db	73	;'I'
  1489  00FFFC  50                 	db	80	;'P'
  1490  00FFFD  0A                 	db	10
  1491  00FFFE  00                 	db	0
  1492  0000                     
  1493                           ; #config settings
  1494  00FFFF  00                 	db	0	; dummy byte at the end
  1495  0000                     
  1496                           	psect	nvBANK0
  1497  0000DB                     __pnvBANK0:
  1498                           	opt callstack 0
  1499  0000DB                     _uart1TxBufferRemaining:
  1500                           	opt callstack 0
  1501  0000DB                     	ds	1
  1502                           
  1503                           	psect	nvBANK2
  1504  0002DF                     __pnvBANK2:
  1505                           	opt callstack 0
  1506  0002DF                     _TMR2_InterruptHandler:
  1507                           	opt callstack 0
  1508  0002DF                     	ds	2
  1509  0002E1                     _timer1ReloadVal:
  1510                           	opt callstack 0
  1511  0002E1                     	ds	2
  1512  0002E3                     _UART1_ErrorHandler:
  1513                           	opt callstack 0
  1514  0002E3                     	ds	2
  1515  0002E5                     _UART1_OverrunErrorHandler:
  1516                           	opt callstack 0
  1517  0002E5                     	ds	2
  1518  0002E7                     _UART1_FramingErrorHandler:
  1519                           	opt callstack 0
  1520  0002E7                     	ds	2
  1521  0002E9                     _UART1_TxInterruptHandler:
  1522                           	opt callstack 0
  1523  0002E9                     	ds	2
  1524  0002EB                     _ADCC_ADTI_InterruptHandler:
  1525                           	opt callstack 0
  1526  0002EB                     	ds	2
  1527  0000                     _PMD7	set	14791
  1528  0000                     _PMD6	set	14790
  1529  0000                     _PMD5	set	14789
  1530  0000                     _PMD4	set	14788
  1531  0000                     _PMD3	set	14787
  1532  0000                     _PMD2	set	14786
  1533  0000                     _PMD1	set	14785
  1534  0000                     _PMD0	set	14784
  1535  0000                     _OSCTUNE	set	14814
  1536  0000                     _OSCFRQ	set	14815
  1537  0000                     _OSCEN	set	14813
  1538  0000                     _OSCCON3	set	14811
  1539  0000                     _OSCCON1	set	14809
  1540  0000                     _PIR4bits	set	14756
  1541  0000                     _PIE4bits	set	14740
  1542  0000                     _PIR5bits	set	14757
  1543  0000                     _PIE5bits	set	14741
  1544  0000                     _PIR6bits	set	14758
  1545  0000                     _PIE6bits	set	14742
  1546  0000                     _PIR3bits	set	14755
  1547  0000                     _PIE3bits	set	14739
  1548  0000                     _PIE1bits	set	14737
  1549  0000                     _PIR1bits	set	14753
  1550  0000                     _I2C2SDAPPS	set	15076
  1551  0000                     _U1RXPPS	set	15077
  1552  0000                     _RC1PPS	set	14865
  1553  0000                     _RB2PPS	set	14858
  1554  0000                     _RB1PPS	set	14857
  1555  0000                     _I2C2SCLPPS	set	15075
  1556  0000                     _INLVLE	set	14980
  1557  0000                     _INLVLD	set	14964
  1558  0000                     _INLVLC	set	14948
  1559  0000                     _INLVLB	set	14932
  1560  0000                     _INLVLA	set	14916
  1561  0000                     _SLRCONE	set	14979
  1562  0000                     _SLRCOND	set	14963
  1563  0000                     _SLRCONC	set	14947
  1564  0000                     _SLRCONB	set	14931
  1565  0000                     _SLRCONA	set	14915
  1566  0000                     _ODCOND	set	14962
  1567  0000                     _ODCONC	set	14946
  1568  0000                     _ODCONB	set	14930
  1569  0000                     _ODCONA	set	14914
  1570  0000                     _ODCONE	set	14978
  1571  0000                     _RD1I2C	set	14971
  1572  0000                     _RD0I2C	set	14970
  1573  0000                     _RC4I2C	set	14955
  1574  0000                     _RC3I2C	set	14954
  1575  0000                     _RB2I2C	set	14939
  1576  0000                     _RB1I2C	set	14938
  1577  0000                     _WPUC	set	14945
  1578  0000                     _WPUA	set	14913
  1579  0000                     _WPUB	set	14929
  1580  0000                     _WPUE	set	14977
  1581  0000                     _WPUD	set	14961
  1582  0000                     _ANSELA	set	14912
  1583  0000                     _ANSELE	set	14976
  1584  0000                     _ANSELB	set	14928
  1585  0000                     _ANSELC	set	14944
  1586  0000                     _ANSELD	set	14960
  1587  0000                     _I2C2PIEbits	set	15716
  1588  0000                     _I2C2PIRbits	set	15715
  1589  0000                     _I2C2ERRbits	set	15712
  1590  0000                     _I2C2CON1bits	set	15710
  1591  0000                     _I2C2TXB	set	15701
  1592  0000                     _I2C2RXB	set	15700
  1593  0000                     _I2C2STAT1bits	set	15714
  1594  0000                     _I2C2CON0bits	set	15709
  1595  0000                     _I2C2CNT	set	15702
  1596  0000                     _I2C2ERR	set	15712
  1597  0000                     _I2C2PIE	set	15716
  1598  0000                     _I2C2PIR	set	15715
  1599  0000                     _I2C2CLK	set	15717
  1600  0000                     _I2C2CON2	set	15711
  1601  0000                     _I2C2CON1	set	15710
  1602  0000                     _I2C2CON0	set	15709
  1603  0000                     _U1TXB	set	15850
  1604  0000                     _U1ERRIE	set	15866
  1605  0000                     _U1ERRIR	set	15865
  1606  0000                     _U1UIR	set	15864
  1607  0000                     _U1FIFO	set	15863
  1608  0000                     _U1BRGH	set	15862
  1609  0000                     _U1BRGL	set	15861
  1610  0000                     _U1CON2	set	15860
  1611  0000                     _U1CON1	set	15859
  1612  0000                     _U1CON0	set	15858
  1613  0000                     _U1P3H	set	15857
  1614  0000                     _U1P3L	set	15856
  1615  0000                     _U1P2H	set	15855
  1616  0000                     _U1P2L	set	15854
  1617  0000                     _U1P1H	set	15853
  1618  0000                     _U1P1L	set	15852
  1619  0000                     _FVRCON	set	16065
  1620  0000                     _ADFLTRL	set	16102
  1621  0000                     _ADFLTRH	set	16103
  1622  0000                     _ADCON0bits	set	16120
  1623  0000                     _ADCON0	set	16120
  1624  0000                     _ADCLK	set	16127
  1625  0000                     _ADACT	set	16126
  1626  0000                     _ADREF	set	16125
  1627  0000                     _ADSTAT	set	16124
  1628  0000                     _ADCON3	set	16123
  1629  0000                     _ADCON2	set	16122
  1630  0000                     _ADCON1	set	16121
  1631  0000                     _ADPREH	set	16119
  1632  0000                     _ADPREL	set	16118
  1633  0000                     _ADCAP	set	16117
  1634  0000                     _ADACQH	set	16116
  1635  0000                     _ADACQL	set	16115
  1636  0000                     _ADPCH	set	16113
  1637  0000                     _ADRPT	set	16108
  1638  0000                     _ADACCU	set	16106
  1639  0000                     _ADSTPTH	set	16101
  1640  0000                     _ADSTPTL	set	16100
  1641  0000                     _ADUTHH	set	16097
  1642  0000                     _ADUTHL	set	16096
  1643  0000                     _ADLTHH	set	16095
  1644  0000                     _ADLTHL	set	16094
  1645  0000                     _PORTC	set	16332
  1646  0000                     _PORTD	set	16333
  1647  0000                     _LATAbits	set	16314
  1648  0000                     _LATDbits	set	16317
  1649  0000                     _T2CONbits	set	16300
  1650  0000                     _T2CON	set	16300
  1651  0000                     _T2TMR	set	16298
  1652  0000                     _T2PR	set	16299
  1653  0000                     _T2RST	set	16303
  1654  0000                     _T2HLT	set	16301
  1655  0000                     _T2CLKCON	set	16302
  1656  0000                     _T0CON0bits	set	16312
  1657  0000                     _T0CON0	set	16312
  1658  0000                     _TMR0L	set	16310
  1659  0000                     _TMR0H	set	16311
  1660  0000                     _T0CON1	set	16313
  1661  0000                     _T1CONbits	set	16306
  1662  0000                     _T1CON	set	16306
  1663  0000                     _TMR1L	set	16304
  1664  0000                     _TMR1H	set	16305
  1665  0000                     _T1CLK	set	16309
  1666  0000                     _T1GATE	set	16308
  1667  0000                     _T1GCON	set	16307
  1668  0000                     _TRISD	set	16325
  1669  0000                     _TRISC	set	16324
  1670  0000                     _TRISB	set	16323
  1671  0000                     _TRISA	set	16322
  1672  0000                     _TRISE	set	16326
  1673  0000                     _LATC	set	16316
  1674  0000                     _LATB	set	16315
  1675  0000                     _LATA	set	16314
  1676  0000                     _LATD	set	16317
  1677  0000                     _LATE	set	16318
  1678  0000                     _INTCON0bits	set	16338
  1679                           
  1680                           	psect	cinit
  1681  005F62                     __pcinit:
  1682                           	opt callstack 0
  1683  005F62                     start_initialization:
  1684                           	opt callstack 0
  1685  005F62                     __initialization:
  1686                           	opt callstack 0
  1687                           
  1688                           ; Initialize objects allocated to BANK2 (18 bytes)
  1689                           ; load TBLPTR registers with __pidataBANK2
  1690  005F62  0E32               	movlw	low __pidataBANK2
  1691  005F64  6EF6               	movwf	tblptrl,c
  1692  005F66  0E77               	movlw	high __pidataBANK2
  1693  005F68  6EF7               	movwf	tblptrh,c
  1694  005F6A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1695  005F6C  6EF8               	movwf	tblptru,c
  1696  005F6E  EE00  F2CD         	lfsr	0,__pdataBANK2
  1697  005F72  EE10 F012          	lfsr	1,18
  1698  005F76                     copy_data0:
  1699  005F76  0009               	tblrd		*+
  1700  005F78  006F FFD7 FFEE     	movff	tablat,postinc0
  1701  005F7E  50E5               	movf	postdec1,w,c
  1702  005F80  50E1               	movf	fsr1l,w,c
  1703  005F82  E1F9               	bnz	copy_data0
  1704                           
  1705                           ; Initialize objects allocated to BANK1 (11 bytes)
  1706                           ; load TBLPTR registers with __pidataBANK1
  1707  005F84  0E32               	movlw	low __pidataBANK1
  1708  005F86  6EF6               	movwf	tblptrl,c
  1709  005F88  0E79               	movlw	high __pidataBANK1
  1710  005F8A  6EF7               	movwf	tblptrh,c
  1711  005F8C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1712  005F8E  6EF8               	movwf	tblptru,c
  1713  005F90  EE00  F1F0         	lfsr	0,__pdataBANK1
  1714  005F94  EE10 F00B          	lfsr	1,11
  1715  005F98                     copy_data1:
  1716  005F98  0009               	tblrd		*+
  1717  005F9A  006F FFD7 FFEE     	movff	tablat,postinc0
  1718  005FA0  50E5               	movf	postdec1,w,c
  1719  005FA2  50E1               	movf	fsr1l,w,c
  1720  005FA4  E1F9               	bnz	copy_data1
  1721                           
  1722                           ; Clear objects allocated to BANK3 (80 bytes)
  1723  005FA6  EE00  F300         	lfsr	0,__pbssBANK3
  1724  005FAA  0E50               	movlw	80
  1725  005FAC                     clear_0:
  1726  005FAC  6AEE               	clrf	postinc0,c
  1727  005FAE  06E8               	decf	wreg,f,c
  1728  005FB0  E1FD               	bnz	clear_0
  1729                           
  1730                           ; Clear objects allocated to BANK2 (153 bytes)
  1731  005FB2  EE00  F200         	lfsr	0,__pbssBANK2
  1732  005FB6  0E99               	movlw	153
  1733  005FB8                     clear_1:
  1734  005FB8  6AEE               	clrf	postinc0,c
  1735  005FBA  06E8               	decf	wreg,f,c
  1736  005FBC  E1FD               	bnz	clear_1
  1737                           
  1738                           ; Clear objects allocated to BANK1 (122 bytes)
  1739  005FBE  EE00  F100         	lfsr	0,__pbssBANK1
  1740  005FC2  0E7A               	movlw	122
  1741  005FC4                     clear_2:
  1742  005FC4  6AEE               	clrf	postinc0,c
  1743  005FC6  06E8               	decf	wreg,f,c
  1744  005FC8  E1FD               	bnz	clear_2
  1745                           
  1746                           ; Clear objects allocated to BANK0 (30 bytes)
  1747  005FCA  EE00  F0BD         	lfsr	0,__pbssBANK0
  1748  005FCE  0E1E               	movlw	30
  1749  005FD0                     clear_3:
  1750  005FD0  6AEE               	clrf	postinc0,c
  1751  005FD2  06E8               	decf	wreg,f,c
  1752  005FD4  E1FD               	bnz	clear_3
  1753                           
  1754                           ;
  1755                           ; Setup IVTBASE
  1756                           ;
  1757  005FD6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1758  005FD8  6ED5               	movwf	213,c
  1759  005FDA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1760  005FDC  6ED6               	movwf	214,c
  1761  005FDE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1762  005FE0  6ED7               	movwf	215,c
  1763  005FE2                     end_of_initialization:
  1764                           	opt callstack 0
  1765  005FE2                     __end_of__initialization:
  1766                           	opt callstack 0
  1767  005FE2  0100               	movlb	0
  1768  005FE4  EF0F  F000         	goto	_main	;jump to C main() function
  1769                           
  1770                           	psect	bssBANK0
  1771  0000BD                     __pbssBANK0:
  1772                           	opt callstack 0
  1773  0000BD                     _bRatePtr:
  1774                           	opt callstack 0
  1775  0000BD                     	ds	3
  1776  0000C0                     _nout:
  1777                           	opt callstack 0
  1778  0000C0                     	ds	2
  1779  0000C2                     _width:
  1780                           	opt callstack 0
  1781  0000C2                     	ds	2
  1782  0000C4                     _prec:
  1783                           	opt callstack 0
  1784  0000C4                     	ds	2
  1785  0000C6                     _flags:
  1786                           	opt callstack 0
  1787  0000C6                     	ds	2
  1788  0000C8                     _menuVal:
  1789                           	opt callstack 0
  1790  0000C8                     	ds	2
  1791  0000CA                     _I2C2_InterruptHandler:
  1792                           	opt callstack 0
  1793  0000CA                     	ds	2
  1794  0000CC                     _lastI2C2MAckResponse:
  1795                           	opt callstack 0
  1796  0000CC                     	ds	1
  1797  0000CD                     _lastI2C2LTrfResponse:
  1798                           	opt callstack 0
  1799  0000CD                     	ds	1
  1800  0000CE                     _lastI2C2MTrfResponse:
  1801                           	opt callstack 0
  1802  0000CE                     	ds	1
  1803  0000CF                     _currentTrfAddr:
  1804                           	opt callstack 0
  1805  0000CF                     	ds	1
  1806  0000D0                     _menuStatus:
  1807                           	opt callstack 0
  1808  0000D0                     	ds	1
  1809  0000D1                     __backlightval:
  1810                           	opt callstack 0
  1811  0000D1                     	ds	1
  1812  0000D2                     __numlines:
  1813                           	opt callstack 0
  1814  0000D2                     	ds	1
  1815  0000D3                     __displaymode:
  1816                           	opt callstack 0
  1817  0000D3                     	ds	1
  1818  0000D4                     __displaycontrol:
  1819                           	opt callstack 0
  1820  0000D4                     	ds	1
  1821  0000D5                     __displayfunction:
  1822                           	opt callstack 0
  1823  0000D5                     	ds	1
  1824  0000D6                     _lastkeyEC:
  1825                           	opt callstack 0
  1826  0000D6                     	ds	1
  1827  0000D7                     _lastkey:
  1828                           	opt callstack 0
  1829  0000D7                     	ds	1
  1830  0000D8                     _curASrc:
  1831                           	opt callstack 0
  1832  0000D8                     	ds	1
  1833  0000D9                     _uart1TxTail:
  1834                           	opt callstack 0
  1835  0000D9                     	ds	1
  1836  0000DA                     _uart1TxHead:
  1837                           	opt callstack 0
  1838  0000DA                     	ds	1
  1839                           
  1840                           	psect	bssBANK1
  1841  000100                     __pbssBANK1:
  1842                           	opt callstack 0
  1843  000100                     _I2C2_Status:
  1844                           	opt callstack 0
  1845  000100                     	ds	36
  1846  000124                     _volume:
  1847                           	opt callstack 0
  1848  000124                     	ds	4
  1849  000128                     _bRateHist:
  1850                           	opt callstack 0
  1851  000128                     	ds	3
  1852  00012B                     _menuTstamp:
  1853                           	opt callstack 0
  1854  00012B                     	ds	2
  1855  00012D                     _pressMills:
  1856                           	opt callstack 0
  1857  00012D                     	ds	2
  1858  00012F                     _openFlowRate:
  1859                           	opt callstack 0
  1860  00012F                     	ds	2
  1861  000131                     _lastCycleVol:
  1862                           	opt callstack 0
  1863  000131                     	ds	2
  1864  000133                     _vddValMean:
  1865                           	opt callstack 0
  1866  000133                     	ds	2
  1867  000135                     _EDuration:
  1868                           	opt callstack 0
  1869  000135                     	ds	2
  1870  000137                     _IDuration:
  1871                           	opt callstack 0
  1872  000137                     	ds	2
  1873  000139                     _intMaxV:
  1874                           	opt callstack 0
  1875  000139                     	ds	2
  1876  00013B                     _intEDuration:
  1877                           	opt callstack 0
  1878  00013B                     	ds	2
  1879  00013D                     _intIDuration:
  1880                           	opt callstack 0
  1881  00013D                     	ds	2
  1882  00013F                     _intPEEP:
  1883                           	opt callstack 0
  1884  00013F                     	ds	2
  1885  000141                     _intIP:
  1886                           	opt callstack 0
  1887  000141                     	ds	2
  1888  000143                     _lastI2C2LAckResponse:
  1889                           	opt callstack 0
  1890  000143                     	ds	1
  1891  000144                     _lcdMenuPrint:
  1892                           	opt callstack 0
  1893  000144                     	ds	1
  1894  000145                     _lcdBlink:
  1895                           	opt callstack 0
  1896  000145                     	ds	1
  1897  000146                     __rows:
  1898                           	opt callstack 0
  1899  000146                     	ds	1
  1900  000147                     __cols:
  1901                           	opt callstack 0
  1902  000147                     	ds	1
  1903  000148                     __Addr:
  1904                           	opt callstack 0
  1905  000148                     	ds	1
  1906  000149                     _lastI2CMonTrfResponse:
  1907                           	opt callstack 0
  1908  000149                     	ds	1
  1909  00014A                     _monError:
  1910                           	opt callstack 0
  1911  00014A                     	ds	1
  1912  00014B                     _monState:
  1913                           	opt callstack 0
  1914  00014B                     	ds	1
  1915  00014C                     _ctrlErrorStatus:
  1916                           	opt callstack 0
  1917  00014C                     	ds	1
  1918  00014D                     _ctrlStatus:
  1919                           	opt callstack 0
  1920  00014D                     	ds	1
  1921  00014E                     _eBRate:
  1922                           	opt callstack 0
  1923  00014E                     	ds	1
  1924  00014F                     _chVentMode:
  1925                           	opt callstack 0
  1926  00014F                     	ds	1
  1927  000150                     _chMaxV:
  1928                           	opt callstack 0
  1929  000150                     	ds	1
  1930  000151                     _chHighVAlarm:
  1931                           	opt callstack 0
  1932  000151                     	ds	1
  1933  000152                     _chLowVAlarm:
  1934                           	opt callstack 0
  1935  000152                     	ds	1
  1936  000153                     _chPEEP:
  1937                           	opt callstack 0
  1938  000153                     	ds	1
  1939  000154                     _chMaxP:
  1940                           	opt callstack 0
  1941  000154                     	ds	1
  1942  000155                     _chIP:
  1943                           	opt callstack 0
  1944  000155                     	ds	1
  1945  000156                     _chBPM:
  1946                           	opt callstack 0
  1947  000156                     	ds	1
  1948  000157                     _VentMode:
  1949                           	opt callstack 0
  1950  000157                     	ds	1
  1951  000158                     _intVentMode:
  1952                           	opt callstack 0
  1953  000158                     	ds	1
  1954  000159                     _lcdPrintTR:
  1955                           	opt callstack 0
  1956  000159                     	ds	1
  1957  00015A                     _lcdPrintBR:
  1958                           	opt callstack 0
  1959  00015A                     	ds	1
  1960  00015B                     _uart1RxLastError:
  1961                           	opt callstack 0
  1962  00015B                     	ds	1
  1963  00015C                     _resultTbl:
  1964                           	opt callstack 0
  1965  00015C                     	ds	28
  1966  000178                     _monTstamp:
  1967                           	opt callstack 0
  1968  000178                     	ds	2
  1969                           
  1970                           	psect	dataBANK1
  1971  0001F0                     __pdataBANK1:
  1972                           	opt callstack 0
  1973  0001F0                     _auxPSensCal:
  1974                           	opt callstack 0
  1975  0001F0                     	ds	2
  1976  0001F2                     _mainPSensCal:
  1977                           	opt callstack 0
  1978  0001F2                     	ds	2
  1979  0001F4                     _HighVAlarm:
  1980                           	opt callstack 0
  1981  0001F4                     	ds	1
  1982  0001F5                     _LowVAlarm:
  1983                           	opt callstack 0
  1984  0001F5                     	ds	1
  1985  0001F6                     _MaxV:
  1986                           	opt callstack 0
  1987  0001F6                     	ds	1
  1988  0001F7                     _PEEP:
  1989                           	opt callstack 0
  1990  0001F7                     	ds	1
  1991  0001F8                     _IP:
  1992                           	opt callstack 0
  1993  0001F8                     	ds	1
  1994  0001F9                     _BPM:
  1995                           	opt callstack 0
  1996  0001F9                     	ds	1
  1997  0001FA                     _MaxP:
  1998                           	opt callstack 0
  1999  0001FA                     	ds	1
  2000                           
  2001                           	psect	bssBANK2
  2002  000200                     __pbssBANK2:
  2003                           	opt callstack 0
  2004  000200                     _uart1TxBuffer:
  2005                           	opt callstack 0
  2006  000200                     	ds	64
  2007  000240                     _resultTblVal:
  2008                           	opt callstack 0
  2009  000240                     	ds	7
  2010  000247                     _dbuf:
  2011                           	opt callstack 0
  2012  000247                     	ds	32
  2013  000267                     _lcdTopRow:
  2014                           	opt callstack 0
  2015  000267                     	ds	20
  2016  00027B                     _lcdBtnRow:
  2017                           	opt callstack 0
  2018  00027B                     	ds	20
  2019  00028F                     _monitorMsg:
  2020                           	opt callstack 0
  2021  00028F                     	ds	10
  2022                           
  2023                           	psect	dataBANK2
  2024  0002CD                     __pdataBANK2:
  2025                           	opt callstack 0
  2026  0002CD                     setCursor@F16765:
  2027                           	opt callstack 0
  2028  0002CD                     	ds	8
  2029  0002D5                     _keysD:
  2030                           	opt callstack 0
  2031  0002D5                     	ds	6
  2032  0002DB                     _keysC:
  2033                           	opt callstack 0
  2034  0002DB                     	ds	4
  2035                           
  2036                           	psect	bssBANK3
  2037  000300                     __pbssBANK3:
  2038                           	opt callstack 0
  2039  000300                     _i2cBuff:
  2040                           	opt callstack 0
  2041  000300                     	ds	80
  2042                           
  2043                           	psect	cstackBANK2
  2044  000299                     __pcstackBANK2:
  2045                           	opt callstack 0
  2046  000299                     _main$4740:
  2047                           	opt callstack 0
  2048                           
  2049                           ; 2 bytes @ 0x0
  2050  000299                     	ds	2
  2051  00029B                     _main$4741:
  2052                           	opt callstack 0
  2053                           
  2054                           ; 2 bytes @ 0x2
  2055  00029B                     	ds	2
  2056  00029D                     main@printTime:
  2057                           	opt callstack 0
  2058                           
  2059                           ; 2 bytes @ 0x4
  2060  00029D                     	ds	2
  2061  00029F                     main@pValveActuation:
  2062                           	opt callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x6
  2065  00029F                     	ds	2
  2066  0002A1                     main@keyTmp:
  2067                           	opt callstack 0
  2068                           
  2069                           ; 1 bytes @ 0x8
  2070  0002A1                     	ds	1
  2071  0002A2                     main@rValveDelayStart:
  2072                           	opt callstack 0
  2073                           
  2074                           ; 2 bytes @ 0x9
  2075  0002A2                     	ds	2
  2076  0002A4                     _main$4739:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 2 bytes @ 0xB
  2080  0002A4                     	ds	2
  2081  0002A6                     main@valveDelayCheck:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 1 bytes @ 0xD
  2085  0002A6                     	ds	1
  2086  0002A7                     main@rTimeTmp:
  2087                           	opt callstack 0
  2088                           
  2089                           ; 2 bytes @ 0xE
  2090  0002A7                     	ds	2
  2091  0002A9                     main@initialSubState:
  2092                           	opt callstack 0
  2093                           
  2094                           ; 1 bytes @ 0x10
  2095  0002A9                     	ds	1
  2096  0002AA                     main@rSV3ValveDelay:
  2097                           	opt callstack 0
  2098                           
  2099                           ; 2 bytes @ 0x11
  2100  0002AA                     	ds	2
  2101  0002AC                     main@rSubCycleTime:
  2102                           	opt callstack 0
  2103                           
  2104                           ; 2 bytes @ 0x13
  2105  0002AC                     	ds	2
  2106  0002AE                     main@pNext:
  2107                           	opt callstack 0
  2108                           
  2109                           ; 2 bytes @ 0x15
  2110  0002AE                     	ds	2
  2111  0002B0                     main@pPlateau:
  2112                           	opt callstack 0
  2113                           
  2114                           ; 2 bytes @ 0x17
  2115  0002B0                     	ds	2
  2116  0002B2                     main@OSCheck:
  2117                           	opt callstack 0
  2118                           
  2119                           ; 1 bytes @ 0x19
  2120  0002B2                     	ds	1
  2121  0002B3                     main@bdP2:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 2 bytes @ 0x1A
  2125  0002B3                     	ds	2
  2126  0002B5                     main@pExpOS:
  2127                           	opt callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x1C
  2130  0002B5                     	ds	2
  2131  0002B7                     main@rValveAcuationTstamp:
  2132                           	opt callstack 0
  2133                           
  2134                           ; 2 bytes @ 0x1E
  2135  0002B7                     	ds	2
  2136  0002B9                     main@pInspOS:
  2137                           	opt callstack 0
  2138                           
  2139                           ; 2 bytes @ 0x20
  2140  0002B9                     	ds	2
  2141  0002BB                     _main$4738:
  2142                           	opt callstack 0
  2143                           
  2144                           ; 2 bytes @ 0x22
  2145  0002BB                     	ds	2
  2146  0002BD                     main@rSV2ValveDelay:
  2147                           	opt callstack 0
  2148                           
  2149                           ; 2 bytes @ 0x24
  2150  0002BD                     	ds	2
  2151  0002BF                     main@pTmp:
  2152                           	opt callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x26
  2155  0002BF                     	ds	2
  2156  0002C1                     main@bdP1:
  2157                           	opt callstack 0
  2158                           
  2159                           ; 2 bytes @ 0x28
  2160  0002C1                     	ds	2
  2161  0002C3                     main@pAvgUShort:
  2162                           	opt callstack 0
  2163                           
  2164                           ; 2 bytes @ 0x2A
  2165  0002C3                     	ds	2
  2166  0002C5                     _main$4737:
  2167                           	opt callstack 0
  2168                           
  2169                           ; 2 bytes @ 0x2C
  2170  0002C5                     	ds	2
  2171  0002C7                     main@pAvgShort:
  2172                           	opt callstack 0
  2173                           
  2174                           ; 2 bytes @ 0x2E
  2175  0002C7                     	ds	2
  2176  0002C9                     main@rCycleTime:
  2177                           	opt callstack 0
  2178                           
  2179                           ; 2 bytes @ 0x30
  2180  0002C9                     	ds	2
  2181  0002CB                     main@pInst:
  2182                           	opt callstack 0
  2183                           
  2184                           ; 2 bytes @ 0x32
  2185  0002CB                     	ds	2
  2186                           
  2187                           	psect	cstackBANK1
  2188  00017A                     __pcstackBANK1:
  2189                           	opt callstack 0
  2190  00017A                     _dtoa$3676:
  2191                           	opt callstack 0
  2192                           
  2193                           ; 2 bytes @ 0x0
  2194  00017A                     	ds	2
  2195  00017C                     dtoa@p:
  2196                           	opt callstack 0
  2197                           
  2198                           ; 2 bytes @ 0x2
  2199  00017C                     	ds	2
  2200  00017E                     dtoa@w:
  2201                           	opt callstack 0
  2202                           
  2203                           ; 2 bytes @ 0x4
  2204  00017E                     	ds	2
  2205  000180                     dtoa@s:
  2206                           	opt callstack 0
  2207                           
  2208                           ; 2 bytes @ 0x6
  2209  000180                     	ds	2
  2210  000182                     dtoa@n:
  2211                           	opt callstack 0
  2212                           
  2213                           ; 8 bytes @ 0x8
  2214  000182                     	ds	8
  2215  00018A                     dtoa@i:
  2216                           	opt callstack 0
  2217                           
  2218                           ; 2 bytes @ 0x10
  2219  00018A                     	ds	2
  2220  00018C                     ??_vfpfcnvrt:
  2221                           
  2222                           ; 1 bytes @ 0x12
  2223  00018C                     	ds	6
  2224  000192                     vfpfcnvrt@ll:
  2225                           	opt callstack 0
  2226                           
  2227                           ; 8 bytes @ 0x18
  2228  000192                     	ds	8
  2229  00019A                     vfpfcnvrt@vp:
  2230                           	opt callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x20
  2233  00019A                     	ds	2
  2234  00019C                     vfpfcnvrt@done:
  2235                           	opt callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x22
  2238  00019C                     	ds	2
  2239  00019E                     _vfpfcnvrt$3691:
  2240                           	opt callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x24
  2243  00019E                     	ds	2
  2244  0001A0                     ?_vfprintf:
  2245                           	opt callstack 0
  2246  0001A0                     vfprintf@fp:
  2247                           	opt callstack 0
  2248                           
  2249                           ; 2 bytes @ 0x26
  2250  0001A0                     	ds	2
  2251  0001A2                     vfprintf@fmt:
  2252                           	opt callstack 0
  2253                           
  2254                           ; 2 bytes @ 0x28
  2255  0001A2                     	ds	2
  2256  0001A4                     vfprintf@ap:
  2257                           	opt callstack 0
  2258                           
  2259                           ; 2 bytes @ 0x2A
  2260  0001A4                     	ds	2
  2261  0001A6                     ?_printf:
  2262                           	opt callstack 0
  2263  0001A6                     ?_sprintf:
  2264                           	opt callstack 0
  2265  0001A6                     sprintf@s:
  2266                           	opt callstack 0
  2267  0001A6                     printf@fmt:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x2C
  2271  0001A6                     	ds	2
  2272  0001A8                     sprintf@fmt:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 2 bytes @ 0x2E
  2276  0001A8                     	ds	12
  2277  0001B4                     sprintf@ap:
  2278                           	opt callstack 0
  2279                           
  2280                           ; 2 bytes @ 0x3A
  2281  0001B4                     	ds	2
  2282  0001B6                     sprintf@f:
  2283                           	opt callstack 0
  2284                           
  2285                           ; 6 bytes @ 0x3C
  2286  0001B6                     	ds	4
  2287  0001BA                     printf@ap:
  2288                           	opt callstack 0
  2289                           
  2290                           ; 2 bytes @ 0x40
  2291  0001BA                     	ds	2
  2292  0001BC                     ??_aCaptRstFlt:
  2293  0001BC                     aCaptureInit@idx:
  2294                           	opt callstack 0
  2295  0001BC                     aCaptureSetOff@offVal:
  2296                           	opt callstack 0
  2297  0001BC                     aCaptGetResult@outVal:
  2298                           	opt callstack 0
  2299                           
  2300                           ; 2 bytes @ 0x42
  2301  0001BC                     	ds	2
  2302  0001BE                     ??_aCaptGetResult:
  2303                           
  2304                           ; 1 bytes @ 0x44
  2305  0001BE                     	ds	4
  2306  0001C2                     aCaptGetResult@lclValid:
  2307                           	opt callstack 0
  2308                           
  2309                           ; 1 bytes @ 0x48
  2310  0001C2                     	ds	1
  2311  0001C3                     aCaptGetResult@sel:
  2312                           	opt callstack 0
  2313                           
  2314                           ; 1 bytes @ 0x49
  2315  0001C3                     	ds	1
  2316  0001C4                     aCaptGetResult@lclRaw:
  2317                           	opt callstack 0
  2318                           
  2319                           ; 4 bytes @ 0x4A
  2320  0001C4                     	ds	4
  2321  0001C8                     MonitorMsgForcedSend@state:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 1 bytes @ 0x4E
  2325  0001C8                     	ds	1
  2326  0001C9                     MonitorMsgForcedSend@trfAck:
  2327                           	opt callstack 0
  2328                           
  2329                           ; 1 bytes @ 0x4F
  2330  0001C9                     	ds	1
  2331  0001CA                     MonitorMsgForcedSend@trfError:
  2332                           	opt callstack 0
  2333                           
  2334                           ; 1 bytes @ 0x50
  2335  0001CA                     	ds	1
  2336  0001CB                     MonitorMsgForcedSend@vddVal:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 2 bytes @ 0x51
  2340  0001CB                     	ds	2
  2341  0001CD                     ??_InitProcedure:
  2342                           
  2343                           ; 1 bytes @ 0x53
  2344  0001CD                     	ds	4
  2345  0001D1                     InitProcedure@lcdBLight:
  2346                           	opt callstack 0
  2347                           
  2348                           ; 1 bytes @ 0x57
  2349  0001D1                     	ds	1
  2350  0001D2                     InitProcedure@vddValMax:
  2351                           	opt callstack 0
  2352                           
  2353                           ; 2 bytes @ 0x58
  2354  0001D2                     	ds	2
  2355  0001D4                     InitProcedure@vddValMin:
  2356                           	opt callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x5A
  2359  0001D4                     	ds	2
  2360  0001D6                     InitProcedure@mPValMax:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x5C
  2364  0001D6                     	ds	2
  2365  0001D8                     InitProcedure@mPValMin:
  2366                           	opt callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x5E
  2369  0001D8                     	ds	2
  2370  0001DA                     InitProcedure@mPValMean:
  2371                           	opt callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x60
  2374  0001DA                     	ds	2
  2375  0001DC                     InitProcedure@tstamp:
  2376                           	opt callstack 0
  2377                           
  2378                           ; 2 bytes @ 0x62
  2379  0001DC                     	ds	2
  2380  0001DE                     InitProcedure@aPValMean:
  2381                           	opt callstack 0
  2382                           
  2383                           ; 2 bytes @ 0x64
  2384  0001DE                     	ds	2
  2385  0001E0                     InitProcedure@aPValMax:
  2386                           	opt callstack 0
  2387                           
  2388                           ; 2 bytes @ 0x66
  2389  0001E0                     	ds	2
  2390  0001E2                     InitProcedure@aPValMin:
  2391                           	opt callstack 0
  2392                           
  2393                           ; 2 bytes @ 0x68
  2394  0001E2                     	ds	2
  2395  0001E4                     InitProcedure@initOk:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 1 bytes @ 0x6A
  2399  0001E4                     	ds	1
  2400  0001E5                     InitProcedure@vddVal:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x6B
  2404  0001E5                     	ds	2
  2405  0001E7                     InitProcedure@mPVal:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 2 bytes @ 0x6D
  2409  0001E7                     	ds	2
  2410  0001E9                     InitProcedure@aPVal:
  2411                           	opt callstack 0
  2412                           
  2413                           ; 2 bytes @ 0x6F
  2414  0001E9                     	ds	2
  2415  0001EB                     ??_main:
  2416                           
  2417                           ; 1 bytes @ 0x71
  2418  0001EB                     	ds	5
  2419                           
  2420                           	psect	cstackBANK0
  2421  000060                     __pcstackBANK0:
  2422                           	opt callstack 0
  2423  000060                     ?i2c2_mux@I2C2_MasterIsNackFlagSet:
  2424  000060                     ?i2_vfprintf:
  2425                           	opt callstack 0
  2426  000060                     i2vfprintf@fp:
  2427                           	opt callstack 0
  2428                           
  2429                           ; 2 bytes @ 0x0
  2430  000060                     	ds	2
  2431  000062                     i2vfprintf@fmt:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x2
  2435  000062                     	ds	2
  2436  000064                     i2vfprintf@ap:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 2 bytes @ 0x4
  2440  000064                     	ds	2
  2441  000066                     ?i2_printf:
  2442                           	opt callstack 0
  2443  000066                     i2printf@fmt:
  2444                           	opt callstack 0
  2445                           
  2446                           ; 2 bytes @ 0x6
  2447  000066                     	ds	6
  2448  00006C                     i2printf@ap:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 2 bytes @ 0xC
  2452  00006C                     	ds	2
  2453  00006E                     ??_adcCaptureIsr:
  2454  00006E                     i2aCaptGetResult@outVal:
  2455                           	opt callstack 0
  2456                           
  2457                           ; 2 bytes @ 0xE
  2458  00006E                     	ds	2
  2459  000070                     ??i2_aCaptGetResult:
  2460                           
  2461                           ; 1 bytes @ 0x10
  2462  000070                     	ds	4
  2463  000074                     i2aCaptGetResult@lclValid:
  2464                           	opt callstack 0
  2465                           
  2466                           ; 1 bytes @ 0x14
  2467  000074                     	ds	1
  2468  000075                     i2aCaptGetResult@sel:
  2469                           	opt callstack 0
  2470                           
  2471                           ; 1 bytes @ 0x15
  2472  000075                     	ds	1
  2473  000076                     adcCaptureIsr@adcData:
  2474                           	opt callstack 0
  2475  000076                     i2aCaptGetResult@lclRaw:
  2476                           	opt callstack 0
  2477                           
  2478                           ; 4 bytes @ 0x16
  2479  000076                     	ds	4
  2480  00007A                     adcCaptureIsr@adcSel:
  2481                           	opt callstack 0
  2482  00007A                     vMeasureIsr@v1:
  2483                           	opt callstack 0
  2484                           
  2485                           ; 2 bytes @ 0x1A
  2486  00007A                     	ds	2
  2487  00007C                     vMeasureIsr@v2:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 2 bytes @ 0x1C
  2491  00007C                     	ds	2
  2492  00007E                     vMeasureIsr@instP:
  2493                           	opt callstack 0
  2494                           
  2495                           ; 2 bytes @ 0x1E
  2496  00007E                     	ds	2
  2497  000080                     ??_INTERRUPT_InterruptManager:
  2498                           
  2499                           ; 1 bytes @ 0x20
  2500  000080                     	ds	4
  2501  000084                     ??_TMR1_Initialize:
  2502  000084                     ??_bRateUpdt:
  2503  000084                     ??_digitalReadD:
  2504  000084                     ??_digitalReadC:
  2505  000084                     ?_strlen:
  2506                           	opt callstack 0
  2507  000084                     ?_isdigit:
  2508                           	opt callstack 0
  2509  000084                     ?_isspace:
  2510                           	opt callstack 0
  2511  000084                     ?_TMR1_ReadTimer:
  2512                           	opt callstack 0
  2513  000084                     ?___wmul:
  2514                           	opt callstack 0
  2515  000084                     ?___lwdiv:
  2516                           	opt callstack 0
  2517  000084                     ?___lmul:
  2518                           	opt callstack 0
  2519  000084                     ?___xxtofl:
  2520                           	opt callstack 0
  2521  000084                     ?___aodiv:
  2522                           	opt callstack 0
  2523  000084                     ?___aomod:
  2524                           	opt callstack 0
  2525  000084                     ADCC_StartConversion@channel:
  2526                           	opt callstack 0
  2527  000084                     UART1_Write@txData:
  2528                           	opt callstack 0
  2529  000084                     I2C2_Close@returnValue:
  2530                           	opt callstack 0
  2531  000084                     I2C2_MasterSendTxData@data:
  2532                           	opt callstack 0
  2533  000084                     I2C2_MasterSetCounter@counter:
  2534                           	opt callstack 0
  2535  000084                     MonitorErrorSet@flag:
  2536                           	opt callstack 0
  2537  000084                     MonitorErrorClr@flag:
  2538                           	opt callstack 0
  2539  000084                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  2540                           	opt callstack 0
  2541  000084                     UART1_SetFramingErrorHandler@interruptHandler:
  2542                           	opt callstack 0
  2543  000084                     UART1_SetOverrunErrorHandler@interruptHandler:
  2544                           	opt callstack 0
  2545  000084                     UART1_SetErrorHandler@interruptHandler:
  2546                           	opt callstack 0
  2547  000084                     UART1_SetTxInterruptHandler@InterruptHandler:
  2548                           	opt callstack 0
  2549  000084                     TMR2_SetInterruptHandler@InterruptHandler:
  2550                           	opt callstack 0
  2551  000084                     I2C2_SetBuffer@buffer:
  2552                           	opt callstack 0
  2553  000084                     I2C2_SetInterruptHandler@InterruptHandler:
  2554                           	opt callstack 0
  2555  000084                     I2C2_SetCallback@cb:
  2556                           	opt callstack 0
  2557  000084                     ___wmul@multiplier:
  2558                           	opt callstack 0
  2559  000084                     ___lwdiv@dividend:
  2560                           	opt callstack 0
  2561  000084                     isdigit@c:
  2562                           	opt callstack 0
  2563  000084                     isspace@c:
  2564                           	opt callstack 0
  2565  000084                     strlen@s:
  2566                           	opt callstack 0
  2567  000084                     ___lmul@multiplier:
  2568                           	opt callstack 0
  2569  000084                     ___xxtofl@val:
  2570                           	opt callstack 0
  2571  000084                     ___aodiv@dividend:
  2572                           	opt callstack 0
  2573  000084                     ___aomod@dividend:
  2574                           	opt callstack 0
  2575                           
  2576                           ; 8 bytes @ 0x24
  2577  000084                     	ds	1
  2578  000085                     putch@byte:
  2579                           	opt callstack 0
  2580  000085                     I2C2_MClose@trfRsp:
  2581                           	opt callstack 0
  2582  000085                     I2C2_LClose@trfRsp:
  2583                           	opt callstack 0
  2584                           
  2585                           ; 1 bytes @ 0x25
  2586  000085                     	ds	1
  2587  000086                     ??_isdigit:
  2588  000086                     ??_isspace:
  2589  000086                     ??_TMR1_ReadTimer:
  2590  000086                     I2C2_Open@address:
  2591                           	opt callstack 0
  2592  000086                     digitalReadD@pin:
  2593                           	opt callstack 0
  2594  000086                     digitalReadC@pin:
  2595                           	opt callstack 0
  2596  000086                     I2C2_SetBuffer@bufferSize:
  2597                           	opt callstack 0
  2598  000086                     I2C2_SetCallback@ptr:
  2599                           	opt callstack 0
  2600  000086                     ___wmul@multiplicand:
  2601                           	opt callstack 0
  2602  000086                     ___lwdiv@divisor:
  2603                           	opt callstack 0
  2604  000086                     fputc@c:
  2605                           	opt callstack 0
  2606  000086                     strlen@a:
  2607                           	opt callstack 0
  2608                           
  2609                           ; 2 bytes @ 0x26
  2610  000086                     	ds	1
  2611  000087                     I2C2_Open@returnValue:
  2612                           	opt callstack 0
  2613  000087                     bRateUpdt@triggered:
  2614                           	opt callstack 0
  2615  000087                     keyPeek@n:
  2616                           	opt callstack 0
  2617                           
  2618                           ; 1 bytes @ 0x27
  2619  000087                     	ds	1
  2620  000088                     ??___xxtofl:
  2621  000088                     I2C2_SetCallback@idx:
  2622                           	opt callstack 0
  2623  000088                     keyPeek@n_3353:
  2624                           	opt callstack 0
  2625  000088                     I2C2_MOpen@trfRsp:
  2626                           	opt callstack 0
  2627  000088                     I2C2_LOpen@trfRsp:
  2628                           	opt callstack 0
  2629  000088                     ___lwdiv@counter:
  2630                           	opt callstack 0
  2631  000088                     TMR1_ReadTimer@readVal:
  2632                           	opt callstack 0
  2633  000088                     ___wmul@product:
  2634                           	opt callstack 0
  2635  000088                     fputc@fp:
  2636                           	opt callstack 0
  2637  000088                     ___lmul@multiplicand:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 4 bytes @ 0x28
  2641  000088                     	ds	1
  2642  000089                     I2C2_SetDataCompleteCallback@cb:
  2643                           	opt callstack 0
  2644  000089                     keyRead@tmp:
  2645                           	opt callstack 0
  2646  000089                     ___lwdiv@quotient:
  2647                           	opt callstack 0
  2648                           
  2649                           ; 2 bytes @ 0x29
  2650  000089                     	ds	1
  2651  00008A                     ??_fputc:
  2652  00008A                     ?___awdiv:
  2653                           	opt callstack 0
  2654  00008A                     TMR1_ReadTimer@readValHigh:
  2655                           	opt callstack 0
  2656  00008A                     _isspace$4166:
  2657                           	opt callstack 0
  2658  00008A                     ___awdiv@dividend:
  2659                           	opt callstack 0
  2660                           
  2661                           ; 2 bytes @ 0x2A
  2662  00008A                     	ds	1
  2663  00008B                     ?_atoi:
  2664                           	opt callstack 0
  2665  00008B                     TMR1_ReadTimer@readValLow:
  2666                           	opt callstack 0
  2667  00008B                     keyRead@ch:
  2668                           	opt callstack 0
  2669  00008B                     I2C2_SetDataCompleteCallback@ptr:
  2670                           	opt callstack 0
  2671  00008B                     atoi@s:
  2672                           	opt callstack 0
  2673                           
  2674                           ; 2 bytes @ 0x2B
  2675  00008B                     	ds	1
  2676  00008C                     ?_timeGet:
  2677                           	opt callstack 0
  2678  00008C                     ___xxtofl@sign:
  2679                           	opt callstack 0
  2680  00008C                     timeElapsedR@prevTime:
  2681                           	opt callstack 0
  2682  00008C                     timeElapsed@prevTime:
  2683                           	opt callstack 0
  2684  00008C                     ___awdiv@divisor:
  2685                           	opt callstack 0
  2686  00008C                     ___lmul@product:
  2687                           	opt callstack 0
  2688  00008C                     ___aodiv@divisor:
  2689                           	opt callstack 0
  2690  00008C                     ___aomod@divisor:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 8 bytes @ 0x2C
  2694  00008C                     	ds	1
  2695  00008D                     ??_atoi:
  2696  00008D                     ___xxtofl@exp:
  2697                           	opt callstack 0
  2698  00008D                     rd1RegCompleteHandler@ptr:
  2699                           	opt callstack 0
  2700  00008D                     rd2RegCompleteHandler@ptr:
  2701                           	opt callstack 0
  2702  00008D                     wr1RegCompleteHandler@ptr:
  2703                           	opt callstack 0
  2704  00008D                     wr2RegCompleteHandler@ptr:
  2705                           	opt callstack 0
  2706  00008D                     rdBlkRegCompleteHandler@ptr:
  2707                           	opt callstack 0
  2708  00008D                     I2C2_CallbackReturnReset@funPtr:
  2709                           	opt callstack 0
  2710                           
  2711                           ; 2 bytes @ 0x2D
  2712  00008D                     	ds	1
  2713  00008E                     ?_timeDiff:
  2714                           	opt callstack 0
  2715  00008E                     ___awdiv@counter:
  2716                           	opt callstack 0
  2717  00008E                     timeDiff@startT:
  2718                           	opt callstack 0
  2719  00008E                     timeElapsedR@duration:
  2720                           	opt callstack 0
  2721  00008E                     timeElapsed@duration:
  2722                           	opt callstack 0
  2723  00008E                     ___xxtofl@arg:
  2724                           	opt callstack 0
  2725                           
  2726                           ; 4 bytes @ 0x2E
  2727  00008E                     	ds	1
  2728  00008F                     ??_I2C2_DO_RX_EMPTY:
  2729  00008F                     ___awdiv@sign:
  2730                           	opt callstack 0
  2731  00008F                     fputs@s:
  2732                           	opt callstack 0
  2733                           
  2734                           ; 2 bytes @ 0x2F
  2735  00008F                     	ds	1
  2736  000090                     ??_timeElapsedR:
  2737  000090                     ?___lldiv:
  2738                           	opt callstack 0
  2739  000090                     ?___aldiv:
  2740                           	opt callstack 0
  2741  000090                     timeDiff@endT:
  2742                           	opt callstack 0
  2743  000090                     timeElapsed@intTime:
  2744                           	opt callstack 0
  2745  000090                     ___awdiv@quotient:
  2746                           	opt callstack 0
  2747  000090                     ___lldiv@dividend:
  2748                           	opt callstack 0
  2749  000090                     ___aldiv@dividend:
  2750                           	opt callstack 0
  2751                           
  2752                           ; 4 bytes @ 0x30
  2753  000090                     	ds	1
  2754  000091                     I2C2_MasterOperation@read:
  2755                           	opt callstack 0
  2756  000091                     atoi@neg:
  2757                           	opt callstack 0
  2758  000091                     fputs@fp:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x31
  2762  000091                     	ds	1
  2763  000092                     ?___fladd:
  2764                           	opt callstack 0
  2765  000092                     I2C2_MasterOperation@returnValue:
  2766                           	opt callstack 0
  2767  000092                     timeDiff@intDur:
  2768                           	opt callstack 0
  2769  000092                     timeElapsedR@intDur:
  2770                           	opt callstack 0
  2771  000092                     timeElapsed@intDur:
  2772                           	opt callstack 0
  2773  000092                     ___fladd@b:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 4 bytes @ 0x32
  2777  000092                     	ds	1
  2778  000093                     expanderWrite@data:
  2779                           	opt callstack 0
  2780  000093                     fputs@c:
  2781                           	opt callstack 0
  2782  000093                     write4bits@i2cBuff:
  2783                           	opt callstack 0
  2784  000093                     printstr@c:
  2785                           	opt callstack 0
  2786  000093                     _atoi$4148:
  2787                           	opt callstack 0
  2788                           
  2789                           ; 2 bytes @ 0x33
  2790  000093                     	ds	1
  2791  000094                     keyReadEC@longPress:
  2792                           	opt callstack 0
  2793  000094                     ___aodiv@counter:
  2794                           	opt callstack 0
  2795  000094                     ___aomod@counter:
  2796                           	opt callstack 0
  2797  000094                     timeElapsedR@intTime:
  2798                           	opt callstack 0
  2799  000094                     timeDelayMs@delms:
  2800                           	opt callstack 0
  2801  000094                     expanderWrite@i2cBuff:
  2802                           	opt callstack 0
  2803  000094                     fputs@i:
  2804                           	opt callstack 0
  2805  000094                     ___lldiv@divisor:
  2806                           	opt callstack 0
  2807  000094                     ___aldiv@divisor:
  2808                           	opt callstack 0
  2809                           
  2810                           ; 4 bytes @ 0x34
  2811  000094                     	ds	1
  2812  000095                     ??_printstr:
  2813  000095                     _keyReadEC$3358:
  2814                           	opt callstack 0
  2815  000095                     write4bits@value:
  2816                           	opt callstack 0
  2817  000095                     ___aodiv@sign:
  2818                           	opt callstack 0
  2819  000095                     ___aomod@sign:
  2820                           	opt callstack 0
  2821  000095                     _atoi$4150:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 2 bytes @ 0x35
  2825  000095                     	ds	1
  2826  000096                     ?_abs:
  2827                           	opt callstack 0
  2828  000096                     ?_pad:
  2829                           	opt callstack 0
  2830  000096                     keyReadEC@ch:
  2831                           	opt callstack 0
  2832  000096                     send@mode:
  2833                           	opt callstack 0
  2834  000096                     printstr@idx:
  2835                           	opt callstack 0
  2836  000096                     setBacklight@new_val:
  2837                           	opt callstack 0
  2838  000096                     timeDelayMs@tstamp:
  2839                           	opt callstack 0
  2840  000096                     pad@fp:
  2841                           	opt callstack 0
  2842  000096                     abs@a:
  2843                           	opt callstack 0
  2844  000096                     ___fladd@a:
  2845                           	opt callstack 0
  2846  000096                     ___aodiv@quotient:
  2847                           	opt callstack 0
  2848                           
  2849                           ; 8 bytes @ 0x36
  2850  000096                     	ds	1
  2851  000097                     send@highnib:
  2852                           	opt callstack 0
  2853  000097                     _atoi$4149:
  2854                           	opt callstack 0
  2855  000097                     printstrblock@c:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 2 bytes @ 0x37
  2859  000097                     	ds	1
  2860  000098                     ??_abs:
  2861  000098                     send@lownib:
  2862                           	opt callstack 0
  2863  000098                     ___aldiv@counter:
  2864                           	opt callstack 0
  2865  000098                     pad@buf:
  2866                           	opt callstack 0
  2867  000098                     atoi@n:
  2868                           	opt callstack 0
  2869  000098                     ___lldiv@quotient:
  2870                           	opt callstack 0
  2871                           
  2872                           ; 4 bytes @ 0x38
  2873  000098                     	ds	1
  2874  000099                     send@value:
  2875                           	opt callstack 0
  2876  000099                     ___aldiv@sign:
  2877                           	opt callstack 0
  2878                           
  2879                           ; 1 bytes @ 0x39
  2880  000099                     	ds	1
  2881  00009A                     ??___fladd:
  2882  00009A                     command@value:
  2883                           	opt callstack 0
  2884  00009A                     pad@p:
  2885                           	opt callstack 0
  2886  00009A                     ___aldiv@quotient:
  2887                           	opt callstack 0
  2888                           
  2889                           ; 4 bytes @ 0x3A
  2890  00009A                     	ds	1
  2891  00009B                     LcdI2CInit@lcd_cols:
  2892                           	opt callstack 0
  2893  00009B                     setCursor@row:
  2894                           	opt callstack 0
  2895                           
  2896                           ; 1 bytes @ 0x3B
  2897  00009B                     	ds	1
  2898  00009C                     ??_pad:
  2899  00009C                     LcdI2CInit@lcd_rows:
  2900                           	opt callstack 0
  2901  00009C                     ___lldiv@counter:
  2902                           	opt callstack 0
  2903  00009C                     setCursor@row_offsets:
  2904                           	opt callstack 0
  2905                           
  2906                           ; 8 bytes @ 0x3C
  2907  00009C                     	ds	1
  2908  00009D                     ?_vMeasureGet:
  2909                           	opt callstack 0
  2910  00009D                     LcdI2CInit@lcd_Addr:
  2911                           	opt callstack 0
  2912  00009D                     pad@i:
  2913                           	opt callstack 0
  2914                           
  2915                           ; 2 bytes @ 0x3D
  2916  00009D                     	ds	1
  2917  00009E                     ?_rPressurePredict:
  2918                           	opt callstack 0
  2919  00009E                     ___fladd@signs:
  2920                           	opt callstack 0
  2921  00009E                     rPressurePredict@delay:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 2 bytes @ 0x3E
  2925  00009E                     	ds	1
  2926  00009F                     ___fladd@aexp:
  2927                           	opt callstack 0
  2928  00009F                     pad@w:
  2929                           	opt callstack 0
  2930  00009F                     vMeasureGet@rawV:
  2931                           	opt callstack 0
  2932                           
  2933                           ; 4 bytes @ 0x3F
  2934  00009F                     	ds	1
  2935  0000A0                     ___fladd@bexp:
  2936                           	opt callstack 0
  2937  0000A0                     rPressurePredict@pInst:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 2 bytes @ 0x40
  2941  0000A0                     	ds	1
  2942  0000A1                     ?_dtoa:
  2943                           	opt callstack 0
  2944  0000A1                     ___fladd@grs:
  2945                           	opt callstack 0
  2946  0000A1                     dtoa@fp:
  2947                           	opt callstack 0
  2948                           
  2949                           ; 2 bytes @ 0x41
  2950  0000A1                     	ds	1
  2951  0000A2                     rPressurePredict@pAvgShort:
  2952                           	opt callstack 0
  2953  0000A2                     ___flge@ff1:
  2954                           	opt callstack 0
  2955                           
  2956                           ; 4 bytes @ 0x42
  2957  0000A2                     	ds	1
  2958  0000A3                     dtoa@d:
  2959                           	opt callstack 0
  2960                           
  2961                           ; 8 bytes @ 0x43
  2962  0000A3                     	ds	1
  2963  0000A4                     ??_rPressurePredict:
  2964  0000A4                     setCursor@col:
  2965                           	opt callstack 0
  2966                           
  2967                           ; 1 bytes @ 0x44
  2968  0000A4                     	ds	1
  2969  0000A5                     
  2970                           ; 1 bytes @ 0x45
  2971  0000A5                     	ds	1
  2972  0000A6                     rPressurePredict@intLVal:
  2973                           	opt callstack 0
  2974  0000A6                     ___flge@ff2:
  2975                           	opt callstack 0
  2976                           
  2977                           ; 4 bytes @ 0x46
  2978  0000A6                     	ds	4
  2979  0000AA                     ??___flge:
  2980                           
  2981                           ; 1 bytes @ 0x4A
  2982  0000AA                     	ds	1
  2983  0000AB                     ??_dtoa:
  2984                           
  2985                           ; 1 bytes @ 0x4B
  2986  0000AB                     	ds	8
  2987  0000B3                     ?_vfpfcnvrt:
  2988                           	opt callstack 0
  2989  0000B3                     vfpfcnvrt@fp:
  2990                           	opt callstack 0
  2991                           
  2992                           ; 2 bytes @ 0x53
  2993  0000B3                     	ds	2
  2994  0000B5                     vfpfcnvrt@fmt:
  2995                           	opt callstack 0
  2996                           
  2997                           ; 1 bytes @ 0x55
  2998  0000B5                     	ds	1
  2999  0000B6                     vfpfcnvrt@ap:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x56
  3003  0000B6                     	ds	2
  3004  0000B8                     vfprintf@cfmt:
  3005                           	opt callstack 0
  3006                           
  3007                           ; 2 bytes @ 0x58
  3008  0000B8                     	ds	2
  3009  0000BA                     ??_MenuMng:
  3010  0000BA                     ??_screenMng:
  3011  0000BA                     ??_MonitorMsgForcedSend:
  3012  0000BA                     ??_adcGetCh:
  3013  0000BA                     aCaptureSetOff@sel:
  3014                           	opt callstack 0
  3015  0000BA                     aCaptRstFlt@sel:
  3016                           	opt callstack 0
  3017                           
  3018                           ; 1 bytes @ 0x5A
  3019  0000BA                     	ds	1
  3020  0000BB                     MonitorMsgSend@state:
  3021                           	opt callstack 0
  3022                           
  3023                           ; 1 bytes @ 0x5B
  3024  0000BB                     	ds	1
  3025  0000BC                     adcGetCh@sel:
  3026                           	opt callstack 0
  3027  0000BC                     MenuMng@keyPress:
  3028                           	opt callstack 0
  3029                           
  3030                           ; 1 bytes @ 0x5C
  3031  0000BC                     	ds	1
  3032  0000BD                     
  3033                           ; 1 bytes @ 0x5D
  3034                           
  3035                           	psect	cstackCOMRAM
  3036  000001                     __pcstackCOMRAM:
  3037                           	opt callstack 0
  3038  000001                     ??_I2C2_DO_RX:
  3039  000001                     ?_ADCC_GetFilterValue:
  3040                           	opt callstack 0
  3041  000001                     ?_isqrt:
  3042                           	opt callstack 0
  3043  000001                     ?i2___wmul:
  3044                           	opt callstack 0
  3045  000001                     ?i2_isdigit:
  3046                           	opt callstack 0
  3047  000001                     ?i2_isspace:
  3048                           	opt callstack 0
  3049  000001                     ?i2_strlen:
  3050                           	opt callstack 0
  3051  000001                     ?i2___lmul:
  3052                           	opt callstack 0
  3053  000001                     ?i2___aodiv:
  3054                           	opt callstack 0
  3055  000001                     ?i2___aomod:
  3056                           	opt callstack 0
  3057  000001                     i2ADCC_StartConversion@channel:
  3058                           	opt callstack 0
  3059  000001                     i2UART1_Write@txData:
  3060                           	opt callstack 0
  3061  000001                     i2I2C2_MasterSendTxData@data:
  3062                           	opt callstack 0
  3063  000001                     i2I2C2_MasterSetCounter@counter:
  3064                           	opt callstack 0
  3065  000001                     isqrt@x:
  3066                           	opt callstack 0
  3067  000001                     i2I2C2_SetBuffer@buffer:
  3068                           	opt callstack 0
  3069  000001                     i2I2C2_SetCallback@cb:
  3070                           	opt callstack 0
  3071  000001                     i2___wmul@multiplier:
  3072                           	opt callstack 0
  3073  000001                     i2isdigit@c:
  3074                           	opt callstack 0
  3075  000001                     i2isspace@c:
  3076                           	opt callstack 0
  3077  000001                     i2strlen@s:
  3078                           	opt callstack 0
  3079  000001                     i2___lmul@multiplier:
  3080                           	opt callstack 0
  3081  000001                     i2___aodiv@dividend:
  3082                           	opt callstack 0
  3083  000001                     i2___aomod@dividend:
  3084                           	opt callstack 0
  3085                           
  3086                           ; 8 bytes @ 0x0
  3087  000001                     	ds	1
  3088  000002                     i2putch@byte:
  3089                           	opt callstack 0
  3090                           
  3091                           ; 1 bytes @ 0x1
  3092  000002                     	ds	1
  3093  000003                     ??_ADCC_GetFilterValue:
  3094  000003                     ??_isqrt:
  3095  000003                     ??i2_isdigit:
  3096  000003                     ??i2_isspace:
  3097  000003                     I2C2_DO_RX@retFsmState:
  3098                           	opt callstack 0
  3099  000003                     i2I2C2_SetBuffer@bufferSize:
  3100                           	opt callstack 0
  3101  000003                     i2I2C2_SetCallback@ptr:
  3102                           	opt callstack 0
  3103  000003                     i2___wmul@multiplicand:
  3104                           	opt callstack 0
  3105  000003                     i2fputc@c:
  3106                           	opt callstack 0
  3107  000003                     i2strlen@a:
  3108                           	opt callstack 0
  3109                           
  3110                           ; 2 bytes @ 0x2
  3111  000003                     	ds	2
  3112  000005                     i2I2C2_SetCallback@idx:
  3113                           	opt callstack 0
  3114  000005                     isqrt@op:
  3115                           	opt callstack 0
  3116  000005                     i2___wmul@product:
  3117                           	opt callstack 0
  3118  000005                     i2fputc@fp:
  3119                           	opt callstack 0
  3120  000005                     i2___lmul@multiplicand:
  3121                           	opt callstack 0
  3122                           
  3123                           ; 4 bytes @ 0x4
  3124  000005                     	ds	1
  3125  000006                     i2I2C2_SetDataCompleteCallback@cb:
  3126                           	opt callstack 0
  3127                           
  3128                           ; 2 bytes @ 0x5
  3129  000006                     	ds	1
  3130  000007                     ??i2_fputc:
  3131  000007                     i2_isspace$4166:
  3132                           	opt callstack 0
  3133  000007                     isqrt@res:
  3134                           	opt callstack 0
  3135                           
  3136                           ; 2 bytes @ 0x6
  3137  000007                     	ds	1
  3138  000008                     ?i2_atoi:
  3139                           	opt callstack 0
  3140  000008                     i2I2C2_SetDataCompleteCallback@ptr:
  3141                           	opt callstack 0
  3142  000008                     i2atoi@s:
  3143                           	opt callstack 0
  3144                           
  3145                           ; 2 bytes @ 0x7
  3146  000008                     	ds	1
  3147  000009                     isqrt@one:
  3148                           	opt callstack 0
  3149  000009                     i2___lmul@product:
  3150                           	opt callstack 0
  3151  000009                     i2___aodiv@divisor:
  3152                           	opt callstack 0
  3153  000009                     i2___aomod@divisor:
  3154                           	opt callstack 0
  3155                           
  3156                           ; 8 bytes @ 0x8
  3157  000009                     	ds	1
  3158  00000A                     ??i2_atoi:
  3159  00000A                     i2rd1RegCompleteHandler@ptr:
  3160                           	opt callstack 0
  3161  00000A                     i2rd2RegCompleteHandler@ptr:
  3162                           	opt callstack 0
  3163  00000A                     i2wr1RegCompleteHandler@ptr:
  3164                           	opt callstack 0
  3165  00000A                     i2wr2RegCompleteHandler@ptr:
  3166                           	opt callstack 0
  3167  00000A                     i2rdBlkRegCompleteHandler@ptr:
  3168                           	opt callstack 0
  3169  00000A                     
  3170                           ; 2 bytes @ 0x9
  3171  00000A                     	ds	2
  3172  00000C                     ??_I2C2_DO_TX:
  3173  00000C                     ??_I2C2_DO_TX_EMPTY:
  3174  00000C                     ??_I2C2_DO_ADDRESS_NACK:
  3175  00000C                     ??_I2C2_DO_BUS_COLLISION:
  3176  00000C                     ??i2_I2C2_DO_RX_EMPTY:
  3177  00000C                     i2fputs@s:
  3178                           	opt callstack 0
  3179                           
  3180                           ; 2 bytes @ 0xB
  3181  00000C                     	ds	2
  3182  00000E                     I2C2_DO_TX@dataTx:
  3183                           	opt callstack 0
  3184  00000E                     i2atoi@neg:
  3185                           	opt callstack 0
  3186  00000E                     i2fputs@fp:
  3187                           	opt callstack 0
  3188                           
  3189                           ; 2 bytes @ 0xD
  3190  00000E                     	ds	1
  3191  00000F                     I2C2_DO_TX@retFsmState:
  3192                           	opt callstack 0
  3193                           
  3194                           ; 1 bytes @ 0xE
  3195  00000F                     	ds	1
  3196  000010                     i2fputs@c:
  3197                           	opt callstack 0
  3198  000010                     _I2C2_DO_TX$2557:
  3199                           	opt callstack 0
  3200  000010                     i2_atoi$4148:
  3201                           	opt callstack 0
  3202                           
  3203                           ; 2 bytes @ 0xF
  3204  000010                     	ds	1
  3205  000011                     i2___aodiv@counter:
  3206                           	opt callstack 0
  3207  000011                     i2___aomod@counter:
  3208                           	opt callstack 0
  3209  000011                     i2fputs@i:
  3210                           	opt callstack 0
  3211                           
  3212                           ; 2 bytes @ 0x10
  3213  000011                     	ds	1
  3214  000012                     ??_I2C2_MasterFsm:
  3215  000012                     i2___aodiv@sign:
  3216                           	opt callstack 0
  3217  000012                     i2___aomod@sign:
  3218                           	opt callstack 0
  3219  000012                     i2_atoi$4150:
  3220                           	opt callstack 0
  3221                           
  3222                           ; 2 bytes @ 0x11
  3223  000012                     	ds	1
  3224  000013                     ?i2_pad:
  3225                           	opt callstack 0
  3226  000013                     ?i2_abs:
  3227                           	opt callstack 0
  3228  000013                     i2pad@fp:
  3229                           	opt callstack 0
  3230  000013                     i2abs@a:
  3231                           	opt callstack 0
  3232  000013                     i2___aodiv@quotient:
  3233                           	opt callstack 0
  3234                           
  3235                           ; 8 bytes @ 0x12
  3236  000013                     	ds	1
  3237  000014                     i2_atoi$4149:
  3238                           	opt callstack 0
  3239                           
  3240                           ; 1 bytes @ 0x13
  3241  000014                     	ds	1
  3242  000015                     ??i2_abs:
  3243  000015                     i2pad@buf:
  3244                           	opt callstack 0
  3245  000015                     i2atoi@n:
  3246                           	opt callstack 0
  3247                           
  3248                           ; 2 bytes @ 0x14
  3249  000015                     	ds	2
  3250  000017                     i2pad@p:
  3251                           	opt callstack 0
  3252                           
  3253                           ; 2 bytes @ 0x16
  3254  000017                     	ds	2
  3255  000019                     ??i2_pad:
  3256                           
  3257                           ; 1 bytes @ 0x18
  3258  000019                     	ds	1
  3259  00001A                     i2pad@i:
  3260                           	opt callstack 0
  3261                           
  3262                           ; 2 bytes @ 0x19
  3263  00001A                     	ds	2
  3264  00001C                     i2pad@w:
  3265                           	opt callstack 0
  3266                           
  3267                           ; 2 bytes @ 0x1B
  3268  00001C                     	ds	2
  3269  00001E                     ?i2_dtoa:
  3270                           	opt callstack 0
  3271  00001E                     i2dtoa@fp:
  3272                           	opt callstack 0
  3273                           
  3274                           ; 2 bytes @ 0x1D
  3275  00001E                     	ds	2
  3276  000020                     i2dtoa@d:
  3277                           	opt callstack 0
  3278                           
  3279                           ; 8 bytes @ 0x1F
  3280  000020                     	ds	8
  3281  000028                     ??i2_dtoa:
  3282                           
  3283                           ; 1 bytes @ 0x27
  3284  000028                     	ds	8
  3285  000030                     i2_dtoa$3676:
  3286                           	opt callstack 0
  3287                           
  3288                           ; 2 bytes @ 0x2F
  3289  000030                     	ds	2
  3290  000032                     i2dtoa@p:
  3291                           	opt callstack 0
  3292                           
  3293                           ; 2 bytes @ 0x31
  3294  000032                     	ds	2
  3295  000034                     i2dtoa@w:
  3296                           	opt callstack 0
  3297                           
  3298                           ; 2 bytes @ 0x33
  3299  000034                     	ds	2
  3300  000036                     i2dtoa@s:
  3301                           	opt callstack 0
  3302                           
  3303                           ; 2 bytes @ 0x35
  3304  000036                     	ds	2
  3305  000038                     i2dtoa@n:
  3306                           	opt callstack 0
  3307                           
  3308                           ; 8 bytes @ 0x37
  3309  000038                     	ds	8
  3310  000040                     i2dtoa@i:
  3311                           	opt callstack 0
  3312                           
  3313                           ; 2 bytes @ 0x3F
  3314  000040                     	ds	2
  3315  000042                     ?i2_vfpfcnvrt:
  3316                           	opt callstack 0
  3317  000042                     i2vfpfcnvrt@fp:
  3318                           	opt callstack 0
  3319                           
  3320                           ; 2 bytes @ 0x41
  3321  000042                     	ds	2
  3322  000044                     i2vfpfcnvrt@fmt:
  3323                           	opt callstack 0
  3324                           
  3325                           ; 1 bytes @ 0x43
  3326  000044                     	ds	1
  3327  000045                     i2vfpfcnvrt@ap:
  3328                           	opt callstack 0
  3329                           
  3330                           ; 2 bytes @ 0x44
  3331  000045                     	ds	2
  3332  000047                     ??i2_vfpfcnvrt:
  3333                           
  3334                           ; 1 bytes @ 0x46
  3335  000047                     	ds	6
  3336  00004D                     i2vfpfcnvrt@ll:
  3337                           	opt callstack 0
  3338                           
  3339                           ; 8 bytes @ 0x4C
  3340  00004D                     	ds	8
  3341  000055                     i2vfpfcnvrt@vp:
  3342                           	opt callstack 0
  3343                           
  3344                           ; 2 bytes @ 0x54
  3345  000055                     	ds	2
  3346  000057                     i2vfpfcnvrt@done:
  3347                           	opt callstack 0
  3348                           
  3349                           ; 2 bytes @ 0x56
  3350  000057                     	ds	2
  3351  000059                     i2_vfpfcnvrt$3691:
  3352                           	opt callstack 0
  3353                           
  3354                           ; 2 bytes @ 0x58
  3355  000059                     	ds	2
  3356  00005B                     i2vfprintf@cfmt:
  3357                           	opt callstack 0
  3358                           
  3359                           ; 2 bytes @ 0x5A
  3360  00005B                     	ds	2
  3361  00005D                     ??_vMeasureIsr:
  3362  00005D                     ??i2_adcGetCh:
  3363  00005D                     
  3364                           ; 1 bytes @ 0x5C
  3365  00005D                     	ds	2
  3366  00005F                     i2adcGetCh@sel:
  3367                           	opt callstack 0
  3368                           
  3369                           ; 1 bytes @ 0x5E
  3370  00005F                     	ds	1
  3371  000060                     
  3372                           ; 1 bytes @ 0x5F
  3373 ;;
  3374 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3375 ;;
  3376 ;; *************** function _main *****************
  3377 ;; Defined at:
  3378 ;;		line 504 in file "main.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  keyTmp          1    8[BANK2 ] unsigned char 
  3383 ;;  pInst           2   50[BANK2 ] short 
  3384 ;;  rCycleTime      2   48[BANK2 ] unsigned short 
  3385 ;;  pAvgShort       2   46[BANK2 ] short 
  3386 ;;  pAvgUShort      2   42[BANK2 ] short 
  3387 ;;  bdP1            2   40[BANK2 ] short 
  3388 ;;  pTmp            2   38[BANK2 ] short 
  3389 ;;  rSV2ValveDel    2   36[BANK2 ] unsigned short 
  3390 ;;  pInspOS         2   32[BANK2 ] short 
  3391 ;;  rValveAcuati    2   30[BANK2 ] unsigned short 
  3392 ;;  pExpOS          2   28[BANK2 ] short 
  3393 ;;  bdP2            2   26[BANK2 ] short 
  3394 ;;  pPlateau        2   23[BANK2 ] short 
  3395 ;;  pNext           2   21[BANK2 ] short 
  3396 ;;  rSubCycleTim    2   19[BANK2 ] unsigned short 
  3397 ;;  rSV3ValveDel    2   17[BANK2 ] unsigned short 
  3398 ;;  rTimeTmp        2   14[BANK2 ] unsigned short 
  3399 ;;  rValveDelayS    2    9[BANK2 ] unsigned short 
  3400 ;;  pValveActuat    2    6[BANK2 ] short 
  3401 ;;  printTime       2    4[BANK2 ] unsigned short 
  3402 ;;  OSCheck         1   25[BANK2 ] _Bool 
  3403 ;;  initialSubSt    1   16[BANK2 ] _Bool 
  3404 ;;  valveDelayCh    1   13[BANK2 ] _Bool 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Locals:         0       0       0      52       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Totals:         0       0       5      52       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;Total ram usage:       57 bytes
  3419 ;; Hardware stack levels required when called:   26
  3420 ;; This function calls:
  3421 ;;		_I2C2_MuxInit
  3422 ;;		_InitProcedure
  3423 ;;		_MenuMng
  3424 ;;		_MonitorErrorClr
  3425 ;;		_MonitorErrorSet
  3426 ;;		_MonitorInit
  3427 ;;		_MonitorMsgForcedSend
  3428 ;;		_MonitorMsgSend
  3429 ;;		_SYSTEM_Initialize
  3430 ;;		___awdiv
  3431 ;;		___fladd
  3432 ;;		___flge
  3433 ;;		___lwdiv
  3434 ;;		___wmul
  3435 ;;		___xxtofl
  3436 ;;		_aCaptGetResult
  3437 ;;		_aCaptRstFlt
  3438 ;;		_aCaptureInit
  3439 ;;		_bRateInit
  3440 ;;		_bRateUpdt
  3441 ;;		_keyPeek
  3442 ;;		_keyRead
  3443 ;;		_keyReadEC
  3444 ;;		_keyReadInit
  3445 ;;		_printf
  3446 ;;		_printstrblock
  3447 ;;		_rPressurePredict
  3448 ;;		_screenInit
  3449 ;;		_screenMng
  3450 ;;		_setCursor
  3451 ;;		_sprintf
  3452 ;;		_timeDelayMs
  3453 ;;		_timeDiff
  3454 ;;		_timeElapsed
  3455 ;;		_timeElapsedR
  3456 ;;		_timeGet
  3457 ;;		_timeInit
  3458 ;;		_vMeasureGet
  3459 ;;		_vMeasureInit
  3460 ;;		_vMeasureRst
  3461 ;; This function is called by:
  3462 ;;		Startup code after reset
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text0
  3467  00001E                     __ptext0:
  3468                           	opt callstack 0
  3469  00001E                     _main:
  3470                           	opt callstack 5
  3471                           
  3472                           ;main.c: 506:     time_t printTime;;main.c: 509:     int16_t pInst, pNext, pAvgShort, pA
      +                          vgUShort;;main.c: 510:     int16_t bdP1, bdP2;;main.c: 511:     int16_t pValveActuation,
      +                           pPlateau, pExpOS, pInspOS;;main.c: 512:     int16_t pTmp;;main.c: 513:     time_t rCycl
      +                          eTime, rSubCycleTime, rValveAcuationTstamp;;main.c: 514:     time_t rSV2ValveDelay, rSV3
      +                          ValveDelay;;main.c: 515:     time_t rValveDelayStart, rTimeTmp;;main.c: 516:     _Bool i
      +                          nitialSubState, valveDelayCheck, OSCheck;;main.c: 519:     SYSTEM_Initialize();
  3473                           
  3474                           ;incstack = 0
  3475  00001E  ECE4  F038         	call	_SYSTEM_Initialize	;wreg free
  3476                           
  3477                           ; BSR set to: 61
  3478                           ;main.c: 521:     PIE1bits.ADIE = 0;
  3479  000022  0139               	movlb	57	; () banked
  3480  000024  9591               	bcf	145,2,b	;volatile
  3481                           
  3482                           ; BSR set to: 57
  3483                           ;main.c: 522:     PIE1bits.ADTIE = 0;
  3484  000026  9791               	bcf	145,3,b	;volatile
  3485                           
  3486                           ; BSR set to: 57
  3487                           ;main.c: 527:     (INTCON0bits.GIE = 1);
  3488  000028  8ED2               	bsf	210,7,c	;volatile
  3489                           
  3490                           ; BSR set to: 57
  3491                           ;main.c: 532:     aCaptureInit();
  3492  00002A  EC9F  F034         	call	_aCaptureInit	;wreg free
  3493                           
  3494                           ; BSR set to: 57
  3495                           ;main.c: 533:     timeInit();
  3496  00002E  EC9F  F03C         	call	_timeInit	;wreg free
  3497                           
  3498                           ; BSR set to: 57
  3499                           ;main.c: 536:     timeDelayMs(50);
  3500  000032  0E00               	movlw	0
  3501  000034  0100               	movlb	0	; () banked
  3502  000036  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  3503  000038  0E32               	movlw	50
  3504  00003A  6F94               	movwf	timeDelayMs@delms& (0+255),b
  3505  00003C  EC71  F037         	call	_timeDelayMs	;wreg free
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;main.c: 539:     rSV2ValveDelay = 20;
  3509  000040  0E00               	movlw	0
  3510  000042  0102               	movlb	2	; () banked
  3511  000044  6FBE               	movwf	(main@rSV2ValveDelay+1)& (0+255),b
  3512  000046  0E14               	movlw	20
  3513  000048  6FBD               	movwf	main@rSV2ValveDelay& (0+255),b
  3514                           
  3515                           ; BSR set to: 2
  3516                           ;main.c: 540:     rSV3ValveDelay = 40;
  3517  00004A  0E00               	movlw	0
  3518  00004C  6FAB               	movwf	(main@rSV3ValveDelay+1)& (0+255),b
  3519  00004E  0E28               	movlw	40
  3520  000050  6FAA               	movwf	main@rSV3ValveDelay& (0+255),b
  3521                           
  3522                           ; BSR set to: 2
  3523                           ;main.c: 543:     pExpOS = 0;
  3524                           
  3525                           ; BSR set to: 2
  3526                           
  3527                           ; BSR set to: 2
  3528  000052  0E00               	movlw	0
  3529  000054  6FB6               	movwf	(main@pExpOS+1)& (0+255),b
  3530  000056  0E00               	movlw	0
  3531  000058  6FB5               	movwf	main@pExpOS& (0+255),b
  3532                           
  3533                           ; BSR set to: 2
  3534                           ;main.c: 544:     pInspOS = 0;
  3535  00005A  0E00               	movlw	0
  3536  00005C  6FBA               	movwf	(main@pInspOS+1)& (0+255),b
  3537  00005E  0E00               	movlw	0
  3538  000060  6FB9               	movwf	main@pInspOS& (0+255),b
  3539                           
  3540                           ; BSR set to: 2
  3541                           ;main.c: 545:     IDuration = ((uint16_t) 60*1000)/(3*BPM);
  3542  000062  0EEA               	movlw	234
  3543  000064  0100               	movlb	0	; () banked
  3544  000066  6F85               	movwf	(___lwdiv@dividend+1)& (0+255),b
  3545  000068  0E60               	movlw	96
  3546  00006A  6F84               	movwf	___lwdiv@dividend& (0+255),b
  3547  00006C  0101               	movlb	1	; () banked
  3548  00006E  51F9               	movf	_BPM& (0+255),w,b
  3549  000070  0D03               	mullw	3
  3550  000072  006F FFCC  F086    	movff	prodl,___lwdiv@divisor
  3551  000078  006F FFD0  F087    	movff	prodh,___lwdiv@divisor+1
  3552  00007E  ECC9  F033         	call	___lwdiv	;wreg free
  3553  000082  0060  F210  F137   	movff	?___lwdiv,_IDuration
  3554  000088  0060  F214  F138   	movff	?___lwdiv+1,_IDuration+1
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;main.c: 546:     EDuration = ((uint16_t) 60*1000/BPM) - IDuration;
  3558  00008E  0EEA               	movlw	234
  3559  000090  6F85               	movwf	(___lwdiv@dividend+1)& (0+255),b
  3560  000092  0E60               	movlw	96
  3561  000094  6F84               	movwf	___lwdiv@dividend& (0+255),b
  3562  000096  0060  F7E4  F086   	movff	_BPM,___lwdiv@divisor
  3563  00009C  6B87               	clrf	(___lwdiv@divisor+1)& (0+255),b
  3564  00009E  ECC9  F033         	call	___lwdiv	;wreg free
  3565  0000A2  0101               	movlb	1	; () banked
  3566  0000A4  5137               	movf	_IDuration& (0+255),w,b
  3567  0000A6  0100               	movlb	0	; () banked
  3568  0000A8  5D84               	subwf	?___lwdiv& (0+255),w,b
  3569  0000AA  0101               	movlb	1	; () banked
  3570  0000AC  6F35               	movwf	_EDuration& (0+255),b
  3571  0000AE  5138               	movf	(_IDuration+1)& (0+255),w,b
  3572  0000B0  0100               	movlb	0	; () banked
  3573  0000B2  5985               	subwfb	(?___lwdiv+1)& (0+255),w,b
  3574  0000B4  0101               	movlb	1	; () banked
  3575  0000B6  6F36               	movwf	(_EDuration+1)& (0+255),b
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;main.c: 547:     vMeasureInit();
  3579  0000B8  ECFB  F039         	call	_vMeasureInit	;wreg free
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;main.c: 548:     lastCycleVol = 0;
  3583  0000BC  0E00               	movlw	0
  3584  0000BE  0101               	movlb	1	; () banked
  3585  0000C0  6F32               	movwf	(_lastCycleVol+1)& (0+255),b
  3586  0000C2  0E00               	movlw	0
  3587  0000C4  6F31               	movwf	_lastCycleVol& (0+255),b
  3588                           
  3589                           ; BSR set to: 1
  3590                           ;main.c: 549:     keyReadInit();
  3591  0000C6  ECB4  F03B         	call	_keyReadInit	;wreg free
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;main.c: 550:     screenInit();
  3595  0000CA  ECF5  F033         	call	_screenInit	;wreg free
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;main.c: 551:     bRateInit();
  3599  0000CE  EC0D  F03A         	call	_bRateInit	;wreg free
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;main.c: 552:     I2C2_MuxInit();
  3603  0000D2  EC13  F03B         	call	_I2C2_MuxInit	;wreg free
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;main.c: 553:     MonitorInit();
  3607  0000D6  EC14  F03D         	call	_MonitorInit	;wreg free
  3608  0000DA                     l16051:
  3609                           
  3610                           ;main.c: 557:         while (!InitProcedure())
  3611  0000DA  ECEF  F00B         	call	_InitProcedure	;wreg free
  3612  0000DE  0900               	iorlw	0
  3613  0000E0  B4D8               	btfsc	status,2,c
  3614  0000E2  D7FB               	goto	l16051
  3615                           
  3616                           ; BSR set to: 1
  3617                           ;main.c: 560:         setCursor(0, 0);
  3618  0000E4  0E00               	movlw	0
  3619  0000E6  0100               	movlb	0	; () banked
  3620  0000E8  6F9B               	movwf	setCursor@row& (0+255),b
  3621  0000EA  0E00               	movlw	0
  3622  0000EC  ECC4  F036         	call	_setCursor
  3623                           
  3624                           ;main.c: 561:         printstrblock("PRESS + TO REPEAT ");
  3625  0000F0  0E24               	movlw	low STR_30
  3626  0000F2  6F97               	movwf	printstrblock@c& (0+255),b
  3627  0000F4  0EFE               	movlw	high STR_30
  3628  0000F6  6F98               	movwf	(printstrblock@c+1)& (0+255),b
  3629  0000F8  EC05  F03B         	call	_printstrblock	;wreg free
  3630                           
  3631                           ;main.c: 562:         setCursor(0, 1);
  3632  0000FC  0E01               	movlw	1
  3633  0000FE  6F9B               	movwf	setCursor@row& (0+255),b
  3634  000100  0E00               	movlw	0
  3635  000102  ECC4  F036         	call	_setCursor
  3636                           
  3637                           ;main.c: 563:         printstrblock("PRESS - TO EXIT ");
  3638  000106  0E3D               	movlw	low STR_31
  3639  000108  6F97               	movwf	printstrblock@c& (0+255),b
  3640  00010A  0EFF               	movlw	high STR_31
  3641  00010C  6F98               	movwf	(printstrblock@c+1)& (0+255),b
  3642  00010E  EC05  F03B         	call	_printstrblock	;wreg free
  3643  000112                     l16055:
  3644                           
  3645                           ;main.c: 565:         keyTmp=keyRead();
  3646  000112  ECC2  F039         	call	_keyRead	;wreg free
  3647  000116  0102               	movlb	2	; () banked
  3648  000118  6FA1               	movwf	main@keyTmp& (0+255),b
  3649                           
  3650                           ; BSR set to: 2
  3651                           ;main.c: 566:         while ((keyTmp != 3)&&(keyTmp != 5)) {
  3652                           
  3653                           ;main.c: 566:         while ((keyTmp != 3)&&(keyTmp != 5)) {
  3654  00011A  0E03               	movlw	3
  3655  00011C  19A1               	xorwf	main@keyTmp& (0+255),w,b
  3656  00011E  B4D8               	btfsc	status,2,c
  3657  000120  D004               	goto	u16180
  3658                           
  3659                           ; BSR set to: 2
  3660  000122  0E05               	movlw	5
  3661  000124  19A1               	xorwf	main@keyTmp& (0+255),w,b
  3662  000126  A4D8               	btfss	status,2,c
  3663  000128  D7F4               	goto	l16055
  3664  00012A                     u16180:
  3665                           
  3666                           ; BSR set to: 2
  3667                           ;main.c: 569:         if (keyTmp == 3){
  3668  00012A  0E03               	movlw	3
  3669  00012C  19A1               	xorwf	main@keyTmp& (0+255),w,b
  3670  00012E  A4D8               	btfss	status,2,c
  3671  000130  D7D4               	goto	l16051
  3672                           
  3673                           ; BSR set to: 2
  3674                           ;main.c: 575:     lcdPrintTR=1;
  3675  000132  0E01               	movlw	1
  3676  000134  0101               	movlb	1	; () banked
  3677  000136  6F59               	movwf	_lcdPrintTR& (0+255),b
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;main.c: 576:     setCursor(0, 1);
  3681  000138  0E01               	movlw	1
  3682  00013A  0100               	movlb	0	; () banked
  3683  00013C  6F9B               	movwf	setCursor@row& (0+255),b
  3684  00013E  0E00               	movlw	0
  3685  000140  ECC4  F036         	call	_setCursor
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;main.c: 577:     printstrblock("BREATH TO START ");
  3689  000144  0E4E               	movlw	low STR_32
  3690  000146  6F97               	movwf	printstrblock@c& (0+255),b
  3691  000148  0EFF               	movlw	high STR_32
  3692  00014A  6F98               	movwf	(printstrblock@c+1)& (0+255),b
  3693  00014C  EC05  F03B         	call	_printstrblock	;wreg free
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 578:     LATDbits.LATD6 = 1;
  3697  000150  8CBD               	bsf	189,6,c	;volatile
  3698                           
  3699                           ;main.c: 579:     while (ctrlStatus != CTRL_RUN) {
  3700  000152  D01A               	goto	l16091
  3701  000154                     l16075:
  3702                           
  3703                           ; BSR set to: 1
  3704                           ;main.c: 581:         MenuMng();
  3705  000154  EC7B  F015         	call	_MenuMng	;wreg free
  3706                           
  3707                           ;main.c: 582:         screenMng();
  3708  000158  EC8B  F017         	call	_screenMng	;wreg free
  3709                           
  3710                           ;main.c: 584:         if (keyReadEC() == -100) {
  3711  00015C  EC6D  F02F         	call	_keyReadEC	;wreg free
  3712  000160  0A9C               	xorlw	156
  3713  000162  A4D8               	btfss	status,2,c
  3714  000164  D011               	goto	l16091
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;main.c: 585:             if (keyPeek() == 4) {
  3718  000166  ECB3  F032         	call	_keyPeek	;wreg free
  3719  00016A  0A04               	xorlw	4
  3720  00016C  A4D8               	btfss	status,2,c
  3721  00016E  D00C               	goto	l16091
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;main.c: 587:                 LATDbits.LATD6 = 0;
  3725  000170  9CBD               	bcf	189,6,c	;volatile
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;main.c: 588:                 ctrlStatus = CTRL_RUN;
  3729  000172  0E02               	movlw	2
  3730  000174  0101               	movlb	1	; () banked
  3731  000176  6F4D               	movwf	_ctrlStatus& (0+255),b
  3732  000178                     l16087:
  3733                           
  3734                           ;main.c: 591:                 while (keyPeek() != -1)
  3735  000178  ECB3  F032         	call	_keyPeek	;wreg free
  3736  00017C  0AFF               	xorlw	255
  3737  00017E  A4D8               	btfss	status,2,c
  3738  000180  D7FB               	goto	l16087
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;main.c: 593:                 keyReadInit();
  3742  000182  ECB4  F03B         	call	_keyReadInit	;wreg free
  3743                           
  3744                           ;main.c: 594:                 break;
  3745  000186  D005               	goto	u16230
  3746  000188                     l16091:
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;main.c: 579:     while (ctrlStatus != CTRL_RUN) {
  3750  000188  0E02               	movlw	2
  3751  00018A  0101               	movlb	1	; () banked
  3752  00018C  194D               	xorwf	_ctrlStatus& (0+255),w,b
  3753  00018E  A4D8               	btfss	status,2,c
  3754  000190  D7E1               	goto	l16075
  3755  000192                     u16230:
  3756                           
  3757                           ;main.c: 600:     monTstamp = timeGet();
  3758  000192  ECBD  F03B         	call	_timeGet	;wreg free
  3759  000196  0060  F230  F178   	movff	?_timeGet,_monTstamp
  3760  00019C  0060  F234  F179   	movff	?_timeGet+1,_monTstamp+1
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;main.c: 601:     if (VentMode == VMODE_PRESSURE){
  3764  0001A2  0101               	movlb	1	; () banked
  3765  0001A4  5157               	movf	_VentMode& (0+255),w,b
  3766  0001A6  A4D8               	btfss	status,2,c
  3767  0001A8  D004               	goto	l16099
  3768                           
  3769                           ; BSR set to: 1
  3770                           ;main.c: 602:         MonitorMsgForcedSend(MONSTATE_RUNP);
  3771  0001AA  0E10               	movlw	16
  3772  0001AC  ECF0  F023         	call	_MonitorMsgForcedSend
  3773                           
  3774                           ;main.c: 603:     } else {
  3775  0001B0  D003               	goto	l16101
  3776  0001B2                     l16099:
  3777                           
  3778                           ; BSR set to: 1
  3779                           ;main.c: 604:         MonitorMsgForcedSend(MONSTATE_RUNV);
  3780  0001B2  0E14               	movlw	20
  3781  0001B4  ECF0  F023         	call	_MonitorMsgForcedSend
  3782  0001B8                     l16101:
  3783                           
  3784                           ;main.c: 663:     rCycleTime = timeGet();
  3785  0001B8  ECBD  F03B         	call	_timeGet	;wreg free
  3786  0001BC  0060  F230  F2C9   	movff	?_timeGet,main@rCycleTime
  3787  0001C2  0060  F234  F2CA   	movff	?_timeGet+1,main@rCycleTime+1
  3788  0001C8                     l16103:
  3789                           
  3790                           ;main.c: 669:         printf ("\nIP\n");
  3791  0001C8  0EFA               	movlw	low STR_33
  3792  0001CA  0101               	movlb	1	; () banked
  3793  0001CC  6FA6               	movwf	printf@fmt& (0+255),b
  3794  0001CE  0EFF               	movlw	high STR_33
  3795  0001D0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3796  0001D2  EC84  F039         	call	_printf	;wreg free
  3797                           
  3798                           ;main.c: 670:         intVentMode = VentMode;
  3799  0001D6  C157  F158         	movff	_VentMode,_intVentMode
  3800                           
  3801                           ;main.c: 671:         if (intVentMode == VMODE_PRESSURE) {
  3802  0001DA  0101               	movlb	1	; () banked
  3803  0001DC  5158               	movf	_intVentMode& (0+255),w,b
  3804  0001DE  A4D8               	btfss	status,2,c
  3805  0001E0  D00C               	goto	l16113
  3806                           
  3807                           ; BSR set to: 1
  3808                           ;main.c: 672:             intIP = ((int16_t) ((0.045*4096+2)/5)*IP);
  3809  0001E2  51F8               	movf	_IP& (0+255),w,b
  3810  0001E4  0D25               	mullw	37
  3811  0001E6  006F FFCC  F141    	movff	prodl,_intIP
  3812  0001EC  006F FFD0  F142    	movff	prodh,_intIP+1
  3813                           
  3814                           ; BSR set to: 1
  3815                           ;main.c: 673:             intMaxV = MaxV;
  3816  0001F2  C1F6  F139         	movff	_MaxV,_intMaxV
  3817  0001F6  6B3A               	clrf	(_intMaxV+1)& (0+255),b
  3818                           
  3819                           ;main.c: 674:         } else {
  3820  0001F8  D008               	goto	l1535
  3821  0001FA                     l16113:
  3822                           
  3823                           ; BSR set to: 1
  3824                           ;main.c: 675:             intIP = ((int16_t) ((0.045*4096+2)/5)*MaxP);
  3825  0001FA  51FA               	movf	_MaxP& (0+255),w,b
  3826  0001FC  0D25               	mullw	37
  3827  0001FE  006F FFCC  F141    	movff	prodl,_intIP
  3828  000204  006F FFD0  F142    	movff	prodh,_intIP+1
  3829  00020A                     l1535:
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;main.c: 677:         intPEEP = ((int16_t) ((0.045*4096+2)/5)*PEEP);
  3833  00020A  51F7               	movf	_PEEP& (0+255),w,b
  3834  00020C  0D25               	mullw	37
  3835  00020E  006F FFCC  F13F    	movff	prodl,_intPEEP
  3836  000214  006F FFD0  F140    	movff	prodh,_intPEEP+1
  3837                           
  3838                           ; BSR set to: 1
  3839                           ;main.c: 678:         intIDuration = ((time_t) IDuration*1);
  3840  00021A  C137  F13D         	movff	_IDuration,_intIDuration
  3841  00021E  C138  F13E         	movff	_IDuration+1,_intIDuration+1
  3842                           
  3843                           ; BSR set to: 1
  3844                           ;main.c: 679:         intEDuration = ((time_t) EDuration*1);
  3845  000222  C135  F13B         	movff	_EDuration,_intEDuration
  3846  000226  C136  F13C         	movff	_EDuration+1,_intEDuration+1
  3847                           
  3848                           ; BSR set to: 1
  3849                           ;main.c: 681:         LATAbits.LATA2 = 1;
  3850  00022A  84BA               	bsf	186,2,c	;volatile
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;main.c: 682:         LATAbits.LATA3 = 1;
  3854  00022C  86BA               	bsf	186,3,c	;volatile
  3855                           
  3856                           ; BSR set to: 1
  3857                           ;main.c: 685:         initialSubState = 1;
  3858  00022E  0E01               	movlw	1
  3859  000230  0102               	movlb	2	; () banked
  3860  000232  6FA9               	movwf	main@initialSubState& (0+255),b
  3861                           
  3862                           ; BSR set to: 2
  3863                           ;main.c: 686:         valveDelayCheck = 1;
  3864  000234  0E01               	movlw	1
  3865  000236  6FA6               	movwf	main@valveDelayCheck& (0+255),b
  3866                           
  3867                           ; BSR set to: 2
  3868                           ;main.c: 687:         OSCheck = 0;
  3869  000238  0E00               	movlw	0
  3870  00023A  6FB2               	movwf	main@OSCheck& (0+255),b
  3871                           
  3872                           ; BSR set to: 2
  3873                           ;main.c: 688:         rValveDelayStart = timeGet();
  3874  00023C  ECBD  F03B         	call	_timeGet	;wreg free
  3875  000240  0060  F230  F2A2   	movff	?_timeGet,main@rValveDelayStart
  3876  000246  0060  F234  F2A3   	movff	?_timeGet+1,main@rValveDelayStart+1
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;main.c: 689:         vMeasureRst();
  3880  00024C  ECF7  F03A         	call	_vMeasureRst	;wreg free
  3881  000250                     l16133:
  3882                           
  3883                           ;main.c: 691:             if (intVentMode == VMODE_PRESSURE){
  3884  000250  0101               	movlb	1	; () banked
  3885  000252  5158               	movf	_intVentMode& (0+255),w,b
  3886  000254  A4D8               	btfss	status,2,c
  3887  000256  D004               	goto	l16137
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;main.c: 692:                 MonitorMsgSend(MONSTATE_RUNP);
  3891  000258  0E10               	movlw	16
  3892  00025A  EC9A  F039         	call	_MonitorMsgSend
  3893                           
  3894                           ;main.c: 693:             } else {
  3895  00025E  D003               	goto	l16139
  3896  000260                     l16137:
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;main.c: 694:                 MonitorMsgSend(MONSTATE_RUNV);
  3900  000260  0E14               	movlw	20
  3901  000262  EC9A  F039         	call	_MonitorMsgSend
  3902  000266                     l16139:
  3903                           
  3904                           ;main.c: 697:             if (timeElapsedR(&rCycleTime, intIDuration)) {
  3905  000266  0EC9               	movlw	low main@rCycleTime
  3906  000268  0100               	movlb	0	; () banked
  3907  00026A  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
  3908  00026C  0E02               	movlw	high main@rCycleTime
  3909  00026E  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  3910  000270  0060  F4F4  F08E   	movff	_intIDuration,timeElapsedR@duration
  3911  000276  0060  F4F8  F08F   	movff	_intIDuration+1,timeElapsedR@duration+1
  3912  00027C  EC83  F032         	call	_timeElapsedR	;wreg free
  3913  000280  0900               	iorlw	0
  3914  000282  B4D8               	btfsc	status,2,c
  3915  000284  D047               	goto	l16159
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;main.c: 699:                 if (initialSubState){
  3919  000286  0102               	movlb	2	; () banked
  3920  000288  51A9               	movf	main@initialSubState& (0+255),w,b
  3921  00028A  B4D8               	btfsc	status,2,c
  3922  00028C  D003               	goto	l16145
  3923                           
  3924                           ; BSR set to: 2
  3925                           ;main.c: 701:                     MonitorErrorSet(MON_IPE);
  3926  00028E  0E20               	movlw	32
  3927  000290  ECC6  F03B         	call	_MonitorErrorSet
  3928  000294                     l16145:
  3929                           
  3930                           ;main.c: 703:                 if (OSCheck) {
  3931  000294  0102               	movlb	2	; () banked
  3932  000296  51B2               	movf	main@OSCheck& (0+255),w,b
  3933  000298  B4D8               	btfsc	status,2,c
  3934  00029A  EF3E  F006         	goto	l16305
  3935                           
  3936                           ; BSR set to: 2
  3937                           ;main.c: 705:                     aCaptGetResult(Flt1PSensor, &pAvgUShort);
  3938                           
  3939                           ; BSR set to: 2
  3940  00029E  0EC3               	movlw	low main@pAvgUShort
  3941  0002A0  0101               	movlb	1	; () banked
  3942  0002A2  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  3943  0002A4  0E02               	movlw	high main@pAvgUShort
  3944  0002A6  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  3945  0002A8  0E04               	movlw	4
  3946  0002AA  ECB9  F020         	call	_aCaptGetResult
  3947                           
  3948                           ;main.c: 706:                     pTmp = pAvgUShort - pValveActuation;
  3949  0002AE  0102               	movlb	2	; () banked
  3950  0002B0  519F               	movf	main@pValveActuation& (0+255),w,b
  3951  0002B2  5DC3               	subwf	main@pAvgUShort& (0+255),w,b
  3952  0002B4  6FBF               	movwf	main@pTmp& (0+255),b
  3953  0002B6  51A0               	movf	(main@pValveActuation+1)& (0+255),w,b
  3954  0002B8  59C4               	subwfb	(main@pAvgUShort+1)& (0+255),w,b
  3955  0002BA  6FC0               	movwf	(main@pTmp+1)& (0+255),b
  3956                           
  3957                           ; BSR set to: 2
  3958                           ;main.c: 707:                     if (pTmp > 0){
  3959  0002BC  BFC0               	btfsc	(main@pTmp+1)& (0+255),7,b
  3960  0002BE  EF3E  F006         	goto	l16305
  3961  0002C2  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  3962  0002C4  E104               	bnz	u16300
  3963  0002C6  05BF               	decf	main@pTmp& (0+255),w,b
  3964  0002C8  A0D8               	btfss	status,0,c
  3965  0002CA  EF3E  F006         	goto	l16305
  3966  0002CE                     u16300:
  3967                           
  3968                           ; BSR set to: 2
  3969                           ;main.c: 708:                         pInspOS = (3*pInspOS + pTmp)>>2;
  3970  0002CE  0060  FAE4  F084   	movff	main@pInspOS,___wmul@multiplier
  3971  0002D4  0060  FAE8  F085   	movff	main@pInspOS+1,___wmul@multiplier+1
  3972  0002DA  0E00               	movlw	0
  3973  0002DC  0100               	movlb	0	; () banked
  3974  0002DE  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3975  0002E0  0E03               	movlw	3
  3976  0002E2  6F86               	movwf	___wmul@multiplicand& (0+255),b
  3977  0002E4  EC40  F039         	call	___wmul	;wreg free
  3978  0002E8  0102               	movlb	2	; () banked
  3979  0002EA  51BF               	movf	main@pTmp& (0+255),w,b
  3980  0002EC  0100               	movlb	0	; () banked
  3981  0002EE  2784               	addwf	?___wmul& (0+255),f,b
  3982  0002F0  0102               	movlb	2	; () banked
  3983  0002F2  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  3984  0002F4  0100               	movlb	0	; () banked
  3985  0002F6  2385               	addwfc	(?___wmul+1)& (0+255),f,b
  3986  0002F8  3585               	rlcf	(?___wmul+1)& (0+255),w,b
  3987  0002FA  3385               	rrcf	(?___wmul+1)& (0+255),f,b
  3988  0002FC  3384               	rrcf	?___wmul& (0+255),f,b
  3989  0002FE  3585               	rlcf	(?___wmul+1)& (0+255),w,b
  3990  000300  3385               	rrcf	(?___wmul+1)& (0+255),f,b
  3991  000302  3384               	rrcf	?___wmul& (0+255),f,b
  3992  000304  0060  F210  F2B9   	movff	?___wmul,main@pInspOS
  3993  00030A  0060  F214  F2BA   	movff	?___wmul+1,main@pInspOS+1
  3994  000310  EF3E  F006         	goto	l16305
  3995  000314                     l16159:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;main.c: 719:                 if (timeElapsed(rCycleTime, ((time_t) 500*1))) {
  3999  000314  0060  FB24  F08C   	movff	main@rCycleTime,timeElapsed@prevTime
  4000  00031A  0060  FB28  F08D   	movff	main@rCycleTime+1,timeElapsed@prevTime+1
  4001  000320  0E01               	movlw	1
  4002  000322  6F8F               	movwf	(timeElapsed@duration+1)& (0+255),b
  4003  000324  0EF4               	movlw	244
  4004  000326  6F8E               	movwf	timeElapsed@duration& (0+255),b
  4005  000328  EC3C  F038         	call	_timeElapsed	;wreg free
  4006  00032C  0900               	iorlw	0
  4007  00032E  A4D8               	btfss	status,2,c
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;main.c: 721:                     LATDbits.LATD6 = 0;
  4011  000330  9CBD               	bcf	189,6,c	;volatile
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;main.c: 723:                 if (initialSubState) {
  4015  000332  0102               	movlb	2	; () banked
  4016  000334  51A9               	movf	main@initialSubState& (0+255),w,b
  4017  000336  B4D8               	btfsc	status,2,c
  4018  000338  D14C               	goto	l16217
  4019                           
  4020                           ; BSR set to: 2
  4021                           ;main.c: 725:                     if (aCaptGetResult(MainPSensor, &pInst)) {
  4022  00033A  0ECB               	movlw	low main@pInst
  4023  00033C  0101               	movlb	1	; () banked
  4024  00033E  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  4025  000340  0E02               	movlw	high main@pInst
  4026  000342  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  4027  000344  0E00               	movlw	0
  4028  000346  ECB9  F020         	call	_aCaptGetResult
  4029  00034A  0900               	iorlw	0
  4030  00034C  B4D8               	btfsc	status,2,c
  4031  00034E  D374               	goto	l16283
  4032                           
  4033                           ;main.c: 728:                         if ((pInspOS < ((int16_t) ((0.045*4096+2)/5)*5)) &
      +                          & (pInspOS > ((int16_t) ((0.045*4096+2)/5)*-5))) {
  4034  000350  0102               	movlb	2	; () banked
  4035  000352  BFBA               	btfsc	(main@pInspOS+1)& (0+255),7,b
  4036  000354  D006               	goto	u16340
  4037  000356  51BA               	movf	(main@pInspOS+1)& (0+255),w,b
  4038  000358  E117               	bnz	l1548
  4039  00035A  0EB9               	movlw	185
  4040  00035C  5DB9               	subwf	main@pInspOS& (0+255),w,b
  4041  00035E  B0D8               	btfsc	status,0,c
  4042  000360  D013               	goto	l1548
  4043  000362                     u16340:
  4044                           
  4045                           ; BSR set to: 2
  4046  000362  AFBA               	btfss	(main@pInspOS+1)& (0+255),7,b
  4047  000364  D006               	goto	u16350
  4048  000366  0E48               	movlw	72
  4049  000368  5DB9               	subwf	main@pInspOS& (0+255),w,b
  4050  00036A  0EFF               	movlw	255
  4051  00036C  59BA               	subwfb	(main@pInspOS+1)& (0+255),w,b
  4052  00036E  A0D8               	btfss	status,0,c
  4053  000370  D00B               	goto	l1548
  4054  000372                     u16350:
  4055                           
  4056                           ; BSR set to: 2
  4057                           ;main.c: 729:                             pTmp = intIP - pInspOS;
  4058  000372  51B9               	movf	main@pInspOS& (0+255),w,b
  4059  000374  0101               	movlb	1	; () banked
  4060  000376  5D41               	subwf	_intIP& (0+255),w,b
  4061  000378  0102               	movlb	2	; () banked
  4062  00037A  6FBF               	movwf	main@pTmp& (0+255),b
  4063  00037C  51BA               	movf	(main@pInspOS+1)& (0+255),w,b
  4064  00037E  0101               	movlb	1	; () banked
  4065  000380  5942               	subwfb	(_intIP+1)& (0+255),w,b
  4066  000382  0102               	movlb	2	; () banked
  4067  000384  6FC0               	movwf	(main@pTmp+1)& (0+255),b
  4068                           
  4069                           ;main.c: 730:                         } else {
  4070  000386  D006               	goto	l16173
  4071  000388                     l1548:
  4072                           
  4073                           ; BSR set to: 2
  4074                           ;main.c: 731:                             pTmp = intIP;
  4075  000388  0060  F504  F2BF   	movff	_intIP,main@pTmp
  4076  00038E  0060  F508  F2C0   	movff	_intIP+1,main@pTmp+1
  4077  000394                     l16173:
  4078                           
  4079                           ; BSR set to: 2
  4080                           ;main.c: 735:                         aCaptGetResult(Flt1PSensor, &pAvgShort);
  4081  000394  0EC7               	movlw	low main@pAvgShort
  4082  000396  0101               	movlb	1	; () banked
  4083  000398  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  4084  00039A  0E02               	movlw	high main@pAvgShort
  4085  00039C  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  4086  00039E  0E04               	movlw	4
  4087  0003A0  ECB9  F020         	call	_aCaptGetResult
  4088                           
  4089                           ;main.c: 736:                         pNext = rPressurePredict(rSV2ValveDelay, pInst, pA
      +                          vgShort);
  4090  0003A4  0060  FAF4  F09E   	movff	main@rSV2ValveDelay,rPressurePredict@delay
  4091  0003AA  0060  FAF8  F09F   	movff	main@rSV2ValveDelay+1,rPressurePredict@delay+1
  4092  0003B0  0060  FB2C  F0A0   	movff	main@pInst,rPressurePredict@pInst
  4093  0003B6  0060  FB30  F0A1   	movff	main@pInst+1,rPressurePredict@pInst+1
  4094  0003BC  0060  FB1C  F0A2   	movff	main@pAvgShort,rPressurePredict@pAvgShort
  4095  0003C2  0060  FB20  F0A3   	movff	main@pAvgShort+1,rPressurePredict@pAvgShort+1
  4096  0003C8  EC05  F02B         	call	_rPressurePredict	;wreg free
  4097  0003CC  0060  F278  F2AE   	movff	?_rPressurePredict,main@pNext
  4098  0003D2  0060  F27C  F2AF   	movff	?_rPressurePredict+1,main@pNext+1
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;main.c: 737:                         if (((pNext > pTmp) || (pInst > pTmp)) && ((VentMo
      +                          de == VMODE_PRESSURE) || (vMeasureGet()<MaxV))) {
  4102  0003D8  0102               	movlb	2	; () banked
  4103  0003DA  51AE               	movf	main@pNext& (0+255),w,b
  4104  0003DC  5DBF               	subwf	main@pTmp& (0+255),w,b
  4105  0003DE  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  4106  0003E0  0A80               	xorlw	128
  4107  0003E2  0101               	movlb	1	; () banked
  4108  0003E4  6FEB               	movwf	??_main& (0+255),b
  4109  0003E6  0102               	movlb	2	; () banked
  4110  0003E8  51AF               	movf	(main@pNext+1)& (0+255),w,b
  4111  0003EA  0A80               	xorlw	128
  4112  0003EC  0101               	movlb	1	; () banked
  4113  0003EE  59EB               	subwfb	??_main& (0+255),w,b
  4114  0003F0  A0D8               	btfss	status,0,c
  4115  0003F2  D00E               	goto	u16370
  4116                           
  4117                           ; BSR set to: 1
  4118  0003F4  0102               	movlb	2	; () banked
  4119  0003F6  51CB               	movf	main@pInst& (0+255),w,b
  4120  0003F8  5DBF               	subwf	main@pTmp& (0+255),w,b
  4121  0003FA  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  4122  0003FC  0A80               	xorlw	128
  4123  0003FE  0101               	movlb	1	; () banked
  4124  000400  6FEB               	movwf	??_main& (0+255),b
  4125  000402  0102               	movlb	2	; () banked
  4126  000404  51CC               	movf	(main@pInst+1)& (0+255),w,b
  4127  000406  0A80               	xorlw	128
  4128  000408  0101               	movlb	1	; () banked
  4129  00040A  59EB               	subwfb	??_main& (0+255),w,b
  4130  00040C  B0D8               	btfsc	status,0,c
  4131  00040E  D08C               	goto	l16201
  4132  000410                     u16370:
  4133                           
  4134                           ; BSR set to: 1
  4135  000410  5157               	movf	_VentMode& (0+255),w,b
  4136  000412  B4D8               	btfsc	status,2,c
  4137  000414  D00A               	goto	u16390
  4138                           
  4139                           ; BSR set to: 1
  4140  000416  EC6F  F033         	call	_vMeasureGet	;wreg free
  4141  00041A  0101               	movlb	1	; () banked
  4142  00041C  51F6               	movf	_MaxV& (0+255),w,b
  4143  00041E  0100               	movlb	0	; () banked
  4144  000420  5D9D               	subwf	?_vMeasureGet& (0+255),w,b
  4145  000422  0E00               	movlw	0
  4146  000424  599E               	subwfb	(?_vMeasureGet+1)& (0+255),w,b
  4147  000426  B0D8               	btfsc	status,0,c
  4148  000428  D07F               	goto	l16201
  4149  00042A                     u16390:
  4150                           
  4151                           ;main.c: 738:                             LATAbits.LATA2 = 0;
  4152  00042A  94BA               	bcf	186,2,c	;volatile
  4153                           
  4154                           ;main.c: 739:                             initialSubState = 0;
  4155  00042C  0E00               	movlw	0
  4156  00042E  0102               	movlb	2	; () banked
  4157  000430  6FA9               	movwf	main@initialSubState& (0+255),b
  4158                           
  4159                           ; BSR set to: 2
  4160                           ;main.c: 740:                             rValveAcuationTstamp = timeGet();
  4161  000432  ECBD  F03B         	call	_timeGet	;wreg free
  4162  000436  0060  F230  F2B7   	movff	?_timeGet,main@rValveAcuationTstamp
  4163  00043C  0060  F234  F2B8   	movff	?_timeGet+1,main@rValveAcuationTstamp+1
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 746:                             pValveActuation = pNext;
  4167  000442  0060  FAB8  F29F   	movff	main@pNext,main@pValveActuation
  4168  000448  0060  FABC  F2A0   	movff	main@pNext+1,main@pValveActuation+1
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 747:                             OSCheck = 1;
  4172  00044E  0E01               	movlw	1
  4173  000450  0102               	movlb	2	; () banked
  4174  000452  6FB2               	movwf	main@OSCheck& (0+255),b
  4175                           
  4176                           ; BSR set to: 2
  4177                           ;main.c: 748:                             pPlateau = 0;
  4178  000454  0E00               	movlw	0
  4179  000456  6FB1               	movwf	(main@pPlateau+1)& (0+255),b
  4180  000458  0E00               	movlw	0
  4181  00045A  6FB0               	movwf	main@pPlateau& (0+255),b
  4182                           
  4183                           ; BSR set to: 2
  4184                           ;main.c: 749:                             printf ("PII end T %d - Pi %d Pn %d\n", timeDi
      +                          ff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * pNext)
      +                           / ((int16_t) ((0.045*4096+2)/5)*1));
  4185  00045C  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  4186  000462  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  4187  000468  0E00               	movlw	0
  4188  00046A  0100               	movlb	0	; () banked
  4189  00046C  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4190  00046E  0E0A               	movlw	10
  4191  000470  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4192  000472  EC40  F039         	call	___wmul	;wreg free
  4193  000476  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4194  00047C  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4195  000482  0E00               	movlw	0
  4196  000484  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4197  000486  0E25               	movlw	37
  4198  000488  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4199  00048A  EC29  F02F         	call	___awdiv	;wreg free
  4200  00048E  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  4201  000494  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;main.c: 749:                             printf ("PII end T %d - Pi %d Pn %d\n", timeDi
      +                          ff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * pNext)
      +                           / ((int16_t) ((0.045*4096+2)/5)*1));
  4205  00049A  0060  FAB8  F084   	movff	main@pNext,___wmul@multiplier
  4206  0004A0  0060  FABC  F085   	movff	main@pNext+1,___wmul@multiplier+1
  4207  0004A6  0E00               	movlw	0
  4208  0004A8  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4209  0004AA  0E0A               	movlw	10
  4210  0004AC  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4211  0004AE  EC40  F039         	call	___wmul	;wreg free
  4212  0004B2  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4213  0004B8  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4214  0004BE  0E00               	movlw	0
  4215  0004C0  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4216  0004C2  0E25               	movlw	37
  4217  0004C4  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4218  0004C6  EC29  F02F         	call	___awdiv	;wreg free
  4219  0004CA  0060  F228  F2BB   	movff	?___awdiv,_main$4738
  4220  0004D0  0060  F22C  F2BC   	movff	?___awdiv+1,_main$4738+1
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;main.c: 749:                             printf ("PII end T %d - Pi %d Pn %d\n", timeDi
      +                          ff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * pNext)
      +                           / ((int16_t) ((0.045*4096+2)/5)*1));
  4224  0004D6  0E2E               	movlw	low STR_34
  4225  0004D8  0101               	movlb	1	; () banked
  4226  0004DA  6FA6               	movwf	printf@fmt& (0+255),b
  4227  0004DC  0EFD               	movlw	high STR_34
  4228  0004DE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4229  0004E0  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  4230  0004E6  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  4231  0004EC  ECBD  F03B         	call	_timeGet	;wreg free
  4232  0004F0  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  4233  0004F6  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  4234  0004FC  ECD8  F037         	call	_timeDiff	;wreg free
  4235  000500  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  4236  000506  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  4237  00050C  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  4238  000512  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  4239  000518  0060  FAEC  F1AC   	movff	_main$4738,?_printf+6
  4240  00051E  0060  FAF0  F1AD   	movff	_main$4738+1,?_printf+7
  4241  000524  EC84  F039         	call	_printf	;wreg free
  4242  000528                     l16201:
  4243                           
  4244                           ;main.c: 751:                         if (valveDelayCheck) {
  4245  000528  0102               	movlb	2	; () banked
  4246  00052A  51A6               	movf	main@valveDelayCheck& (0+255),w,b
  4247  00052C  B4D8               	btfsc	status,2,c
  4248  00052E  D284               	goto	l16283
  4249                           
  4250                           ; BSR set to: 2
  4251                           ;main.c: 754:                             if (pInst > (pAvgShort + ((int16_t) ((0.045*40
      +                          96+2)/5)*1))) {
  4252  000530  0E25               	movlw	37
  4253  000532  25C7               	addwf	main@pAvgShort& (0+255),w,b
  4254  000534  0101               	movlb	1	; () banked
  4255  000536  6FEB               	movwf	??_main& (0+255),b
  4256  000538  0E00               	movlw	0
  4257  00053A  0102               	movlb	2	; () banked
  4258  00053C  21C8               	addwfc	(main@pAvgShort+1)& (0+255),w,b
  4259  00053E  0101               	movlb	1	; () banked
  4260  000540  6FEC               	movwf	(??_main+1)& (0+255),b
  4261  000542  0102               	movlb	2	; () banked
  4262  000544  51CB               	movf	main@pInst& (0+255),w,b
  4263  000546  0101               	movlb	1	; () banked
  4264  000548  5DEB               	subwf	??_main& (0+255),w,b
  4265  00054A  51EC               	movf	(??_main+1)& (0+255),w,b
  4266  00054C  0A80               	xorlw	128
  4267  00054E  6FED               	movwf	(??_main+2)& (0+255),b
  4268  000550  0102               	movlb	2	; () banked
  4269  000552  51CC               	movf	(main@pInst+1)& (0+255),w,b
  4270  000554  0A80               	xorlw	128
  4271  000556  0101               	movlb	1	; () banked
  4272  000558  59ED               	subwfb	(??_main+2)& (0+255),w,b
  4273  00055A  B0D8               	btfsc	status,0,c
  4274  00055C  D26D               	goto	l16283
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;main.c: 755:                                 valveDelayCheck = 0;
  4278  00055E  0E00               	movlw	0
  4279  000560  0102               	movlb	2	; () banked
  4280  000562  6FA6               	movwf	main@valveDelayCheck& (0+255),b
  4281                           
  4282                           ; BSR set to: 2
  4283                           ;main.c: 757:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  4284  000564  0060  FA88  F08E   	movff	main@rValveDelayStart,timeDiff@startT
  4285  00056A  0060  FA8C  F08F   	movff	main@rValveDelayStart+1,timeDiff@startT+1
  4286  000570  ECBD  F03B         	call	_timeGet	;wreg free
  4287  000574  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  4288  00057A  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  4289  000580  ECD8  F037         	call	_timeDiff	;wreg free
  4290  000584  0060  F238  F2A7   	movff	?_timeDiff,main@rTimeTmp
  4291  00058A  0060  F23C  F2A8   	movff	?_timeDiff+1,main@rTimeTmp+1
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;main.c: 758:                                 if (rTimeTmp < ((time_t) 100*1)) {
  4295  000590  0102               	movlb	2	; () banked
  4296  000592  51A8               	movf	(main@rTimeTmp+1)& (0+255),w,b
  4297  000594  E11A               	bnz	l16215
  4298  000596  0E64               	movlw	100
  4299  000598  5DA7               	subwf	main@rTimeTmp& (0+255),w,b
  4300  00059A  B0D8               	btfsc	status,0,c
  4301  00059C  D016               	goto	l16215
  4302                           
  4303                           ; BSR set to: 2
  4304                           ;main.c: 760:                                     rSV2ValveDelay = (rSV2ValveDelay + rTi
      +                          meTmp)>>1;
  4305  00059E  51A7               	movf	main@rTimeTmp& (0+255),w,b
  4306  0005A0  25BD               	addwf	main@rSV2ValveDelay& (0+255),w,b
  4307  0005A2  0101               	movlb	1	; () banked
  4308  0005A4  6FEB               	movwf	??_main& (0+255),b
  4309  0005A6  0102               	movlb	2	; () banked
  4310  0005A8  51A8               	movf	(main@rTimeTmp+1)& (0+255),w,b
  4311  0005AA  21BE               	addwfc	(main@rSV2ValveDelay+1)& (0+255),w,b
  4312  0005AC  0101               	movlb	1	; () banked
  4313  0005AE  6FEC               	movwf	(??_main+1)& (0+255),b
  4314  0005B0  90D8               	bcf	status,0,c
  4315  0005B2  31EC               	rrcf	(??_main+1)& (0+255),w,b
  4316  0005B4  6FED               	movwf	(??_main+2)& (0+255),b
  4317  0005B6  31EB               	rrcf	??_main& (0+255),w,b
  4318  0005B8  0102               	movlb	2	; () banked
  4319  0005BA  6FBD               	movwf	main@rSV2ValveDelay& (0+255),b
  4320  0005BC  0060  F7B4  F2BE   	movff	??_main+2,main@rSV2ValveDelay+1
  4321                           
  4322                           ; BSR set to: 2
  4323                           ;main.c: 762:                                     MonitorErrorClr(MON_SV2E);
  4324  0005C2  0E08               	movlw	8
  4325  0005C4  ECCF  F03B         	call	_MonitorErrorClr
  4326                           
  4327                           ;main.c: 763:                                 } else {
  4328  0005C8  D237               	goto	l16283
  4329  0005CA                     l16215:
  4330                           
  4331                           ; BSR set to: 2
  4332                           ;main.c: 765:                                     MonitorErrorSet(MON_SV2E);
  4333  0005CA  0E08               	movlw	8
  4334  0005CC  ECC6  F03B         	call	_MonitorErrorSet
  4335  0005D0  D233               	goto	l16283
  4336  0005D2                     l16217:
  4337                           
  4338                           ; BSR set to: 2
  4339                           ;main.c: 771:                     MonitorErrorClr(MON_IPE);
  4340  0005D2  0E20               	movlw	32
  4341  0005D4  ECCF  F03B         	call	_MonitorErrorClr
  4342                           
  4343                           ; BSR set to: 1
  4344                           ;main.c: 772:                     if (LATAbits.LATA2) {
  4345  0005D8  A4BA               	btfss	186,2,c	;volatile
  4346  0005DA  D060               	goto	l16233
  4347                           
  4348                           ; BSR set to: 1
  4349                           ;main.c: 773:                         if (timeElapsedR(&rSubCycleTime, ((time_t) 15*1)))
      +                           {
  4350  0005DC  0EAC               	movlw	low main@rSubCycleTime
  4351  0005DE  0100               	movlb	0	; () banked
  4352  0005E0  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
  4353  0005E2  0E02               	movlw	high main@rSubCycleTime
  4354  0005E4  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  4355  0005E6  0E00               	movlw	0
  4356  0005E8  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
  4357  0005EA  0E0F               	movlw	15
  4358  0005EC  6F8E               	movwf	timeElapsedR@duration& (0+255),b
  4359  0005EE  EC83  F032         	call	_timeElapsedR	;wreg free
  4360  0005F2  0900               	iorlw	0
  4361  0005F4  B4D8               	btfsc	status,2,c
  4362  0005F6  D220               	goto	l16283
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;main.c: 774:                             LATAbits.LATA2 = 0;
  4366  0005F8  94BA               	bcf	186,2,c	;volatile
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;main.c: 775:                             rValveAcuationTstamp = timeGet();
  4370  0005FA  ECBD  F03B         	call	_timeGet	;wreg free
  4371  0005FE  0060  F230  F2B7   	movff	?_timeGet,main@rValveAcuationTstamp
  4372  000604  0060  F234  F2B8   	movff	?_timeGet+1,main@rValveAcuationTstamp+1
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;main.c: 776:                             aCaptGetResult(MainPSensor, &pInst);
  4376  00060A  0ECB               	movlw	low main@pInst
  4377  00060C  0101               	movlb	1	; () banked
  4378  00060E  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  4379  000610  0E02               	movlw	high main@pInst
  4380  000612  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  4381  000614  0E00               	movlw	0
  4382  000616  ECB9  F020         	call	_aCaptGetResult
  4383                           
  4384                           ;main.c: 777:                             printf ("PI VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, rValveAcuationTstamp), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  4385  00061A  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  4386  000620  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  4387  000626  0E00               	movlw	0
  4388  000628  0100               	movlb	0	; () banked
  4389  00062A  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4390  00062C  0E0A               	movlw	10
  4391  00062E  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4392  000630  EC40  F039         	call	___wmul	;wreg free
  4393  000634  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4394  00063A  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4395  000640  0E00               	movlw	0
  4396  000642  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4397  000644  0E25               	movlw	37
  4398  000646  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4399  000648  EC29  F02F         	call	___awdiv	;wreg free
  4400  00064C  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  4401  000652  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;main.c: 777:                             printf ("PI VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, rValveAcuationTstamp), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  4405  000658  0EE8               	movlw	low STR_35
  4406  00065A  0101               	movlb	1	; () banked
  4407  00065C  6FA6               	movwf	printf@fmt& (0+255),b
  4408  00065E  0EFD               	movlw	high STR_35
  4409  000660  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4410  000662  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  4411  000668  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  4412  00066E  0060  FADC  F090   	movff	main@rValveAcuationTstamp,timeDiff@endT
  4413  000674  0060  FAE0  F091   	movff	main@rValveAcuationTstamp+1,timeDiff@endT+1
  4414  00067A  ECD8  F037         	call	_timeDiff	;wreg free
  4415  00067E  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  4416  000684  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  4417  00068A  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  4418  000690  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  4419  000696  EC84  F039         	call	_printf	;wreg free
  4420  00069A  D1CE               	goto	l16283
  4421  00069C                     l16233:
  4422                           
  4423                           ; BSR set to: 1
  4424  00069C  0ECB               	movlw	low main@pInst
  4425  00069E  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  4426  0006A0  0E02               	movlw	high main@pInst
  4427  0006A2  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  4428  0006A4  0E00               	movlw	0
  4429  0006A6  ECB9  F020         	call	_aCaptGetResult
  4430  0006AA  0900               	iorlw	0
  4431  0006AC  B4D8               	btfsc	status,2,c
  4432  0006AE  D1C4               	goto	l16283
  4433                           
  4434                           ;main.c: 780:                         if (OSCheck) {
  4435  0006B0  0102               	movlb	2	; () banked
  4436  0006B2  51B2               	movf	main@OSCheck& (0+255),w,b
  4437  0006B4  B4D8               	btfsc	status,2,c
  4438  0006B6  D09F               	goto	l1564
  4439                           
  4440                           ; BSR set to: 2
  4441                           ;main.c: 782:                             aCaptGetResult(Flt1PSensor, &pAvgUShort);
  4442  0006B8  0EC3               	movlw	low main@pAvgUShort
  4443  0006BA  0101               	movlb	1	; () banked
  4444  0006BC  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  4445  0006BE  0E02               	movlw	high main@pAvgUShort
  4446  0006C0  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  4447  0006C2  0E04               	movlw	4
  4448  0006C4  ECB9  F020         	call	_aCaptGetResult
  4449                           
  4450                           ;main.c: 783:                             if (pPlateau < pAvgUShort) {
  4451  0006C8  0102               	movlb	2	; () banked
  4452  0006CA  51C3               	movf	main@pAvgUShort& (0+255),w,b
  4453  0006CC  5DB0               	subwf	main@pPlateau& (0+255),w,b
  4454  0006CE  51B1               	movf	(main@pPlateau+1)& (0+255),w,b
  4455  0006D0  0A80               	xorlw	128
  4456  0006D2  0101               	movlb	1	; () banked
  4457  0006D4  6FEB               	movwf	??_main& (0+255),b
  4458  0006D6  0102               	movlb	2	; () banked
  4459  0006D8  51C4               	movf	(main@pAvgUShort+1)& (0+255),w,b
  4460  0006DA  0A80               	xorlw	128
  4461  0006DC  0101               	movlb	1	; () banked
  4462  0006DE  59EB               	subwfb	??_main& (0+255),w,b
  4463  0006E0  B0D8               	btfsc	status,0,c
  4464  0006E2  D006               	goto	l16243
  4465                           
  4466                           ; BSR set to: 1
  4467                           ;main.c: 784:                                 pPlateau = pAvgUShort;
  4468  0006E4  0060  FB0C  F2B0   	movff	main@pAvgUShort,main@pPlateau
  4469  0006EA  0060  FB10  F2B1   	movff	main@pAvgUShort+1,main@pPlateau+1
  4470  0006F0                     l16243:
  4471                           
  4472                           ; BSR set to: 1
  4473                           ;main.c: 787:                             if (timeElapsed(rValveAcuationTstamp, ((time_t
      +                          ) 150*1) + rSV2ValveDelay)) {
  4474  0006F0  0060  FADC  F08C   	movff	main@rValveAcuationTstamp,timeElapsed@prevTime
  4475  0006F6  0060  FAE0  F08D   	movff	main@rValveAcuationTstamp+1,timeElapsed@prevTime+1
  4476  0006FC  0E96               	movlw	150
  4477  0006FE  0102               	movlb	2	; () banked
  4478  000700  25BD               	addwf	main@rSV2ValveDelay& (0+255),w,b
  4479  000702  0100               	movlb	0	; () banked
  4480  000704  6F8E               	movwf	timeElapsed@duration& (0+255),b
  4481  000706  0E00               	movlw	0
  4482  000708  0102               	movlb	2	; () banked
  4483  00070A  21BE               	addwfc	(main@rSV2ValveDelay+1)& (0+255),w,b
  4484  00070C  0100               	movlb	0	; () banked
  4485  00070E  6F8F               	movwf	(timeElapsed@duration+1)& (0+255),b
  4486  000710  EC3C  F038         	call	_timeElapsed	;wreg free
  4487  000714  0900               	iorlw	0
  4488  000716  B4D8               	btfsc	status,2,c
  4489  000718  D18F               	goto	l16283
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;main.c: 789:                                 pTmp = pPlateau - pValveActuation;
  4493  00071A  0102               	movlb	2	; () banked
  4494  00071C  519F               	movf	main@pValveActuation& (0+255),w,b
  4495  00071E  5DB0               	subwf	main@pPlateau& (0+255),w,b
  4496  000720  6FBF               	movwf	main@pTmp& (0+255),b
  4497  000722  51A0               	movf	(main@pValveActuation+1)& (0+255),w,b
  4498  000724  59B1               	subwfb	(main@pPlateau+1)& (0+255),w,b
  4499  000726  6FC0               	movwf	(main@pTmp+1)& (0+255),b
  4500                           
  4501                           ; BSR set to: 2
  4502                           ;main.c: 790:                                 pInspOS = (3*pInspOS + pTmp)>>2;
  4503  000728  0060  FAE4  F084   	movff	main@pInspOS,___wmul@multiplier
  4504  00072E  0060  FAE8  F085   	movff	main@pInspOS+1,___wmul@multiplier+1
  4505  000734  0E00               	movlw	0
  4506  000736  0100               	movlb	0	; () banked
  4507  000738  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4508  00073A  0E03               	movlw	3
  4509  00073C  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4510  00073E  EC40  F039         	call	___wmul	;wreg free
  4511  000742  0102               	movlb	2	; () banked
  4512  000744  51BF               	movf	main@pTmp& (0+255),w,b
  4513  000746  0100               	movlb	0	; () banked
  4514  000748  2784               	addwf	?___wmul& (0+255),f,b
  4515  00074A  0102               	movlb	2	; () banked
  4516  00074C  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  4517  00074E  0100               	movlb	0	; () banked
  4518  000750  2385               	addwfc	(?___wmul+1)& (0+255),f,b
  4519  000752  3585               	rlcf	(?___wmul+1)& (0+255),w,b
  4520  000754  3385               	rrcf	(?___wmul+1)& (0+255),f,b
  4521  000756  3384               	rrcf	?___wmul& (0+255),f,b
  4522  000758  3585               	rlcf	(?___wmul+1)& (0+255),w,b
  4523  00075A  3385               	rrcf	(?___wmul+1)& (0+255),f,b
  4524  00075C  3384               	rrcf	?___wmul& (0+255),f,b
  4525  00075E  0060  F210  F2B9   	movff	?___wmul,main@pInspOS
  4526  000764  0060  F214  F2BA   	movff	?___wmul+1,main@pInspOS+1
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;main.c: 791:                                 OSCheck = 0;
  4530  00076A  0E00               	movlw	0
  4531  00076C  0102               	movlb	2	; () banked
  4532  00076E  6FB2               	movwf	main@OSCheck& (0+255),b
  4533                           
  4534                           ; BSR set to: 2
  4535                           ;main.c: 792:                                 printf ("PIOSE VO T %d - Pi %d\n", timeDif
      +                          f(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  4536  000770  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  4537  000776  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  4538  00077C  0E00               	movlw	0
  4539  00077E  0100               	movlb	0	; () banked
  4540  000780  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4541  000782  0E0A               	movlw	10
  4542  000784  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4543  000786  EC40  F039         	call	___wmul	;wreg free
  4544  00078A  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4545  000790  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4546  000796  0E00               	movlw	0
  4547  000798  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4548  00079A  0E25               	movlw	37
  4549  00079C  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4550  00079E  EC29  F02F         	call	___awdiv	;wreg free
  4551  0007A2  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  4552  0007A8  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;main.c: 792:                                 printf ("PIOSE VO T %d - Pi %d\n", timeDif
      +                          f(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  4556  0007AE  0E80               	movlw	low STR_36
  4557  0007B0  0101               	movlb	1	; () banked
  4558  0007B2  6FA6               	movwf	printf@fmt& (0+255),b
  4559  0007B4  0EFD               	movlw	high STR_36
  4560  0007B6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4561  0007B8  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  4562  0007BE  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  4563  0007C4  ECBD  F03B         	call	_timeGet	;wreg free
  4564  0007C8  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  4565  0007CE  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  4566  0007D4  ECD8  F037         	call	_timeDiff	;wreg free
  4567  0007D8  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  4568  0007DE  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  4569  0007E4  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  4570  0007EA  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  4571  0007F0  EC84  F039         	call	_printf	;wreg free
  4572  0007F4  D121               	goto	l16283
  4573  0007F6                     l1564:
  4574                           
  4575                           ; BSR set to: 2
  4576                           ;main.c: 796:                             if ((LATAbits.LATA3) && (rSV3ValveDelay > ((ti
      +                          me_t) 50*1)) && ((intIDuration < (rSV3ValveDelay - ((time_t) 50*1))) || timeElapsed(rCyc
      +                          leTime, intIDuration - (rSV3ValveDelay - ((time_t) 50*1))))) {
  4577  0007F6  A6BA               	btfss	186,3,c	;volatile
  4578  0007F8  D060               	goto	l16269
  4579                           
  4580                           ; BSR set to: 2
  4581  0007FA  51AB               	movf	(main@rSV3ValveDelay+1)& (0+255),w,b
  4582  0007FC  E104               	bnz	u16500
  4583  0007FE  0E33               	movlw	51
  4584  000800  5DAA               	subwf	main@rSV3ValveDelay& (0+255),w,b
  4585  000802  A0D8               	btfss	status,0,c
  4586  000804  D05A               	goto	l16269
  4587  000806                     u16500:
  4588                           
  4589                           ; BSR set to: 2
  4590  000806  0ECE               	movlw	206
  4591  000808  0101               	movlb	1	; () banked
  4592  00080A  6FEB               	movwf	??_main& (0+255),b
  4593  00080C  0EFF               	movlw	255
  4594  00080E  6FEC               	movwf	(??_main+1)& (0+255),b
  4595  000810  0060  FAA8  F1ED   	movff	main@rSV3ValveDelay,??_main+2
  4596  000816  0060  FAAC  F1EE   	movff	main@rSV3ValveDelay+1,??_main+3
  4597  00081C  51EB               	movf	??_main& (0+255),w,b
  4598  00081E  27ED               	addwf	(??_main+2)& (0+255),f,b
  4599  000820  51EC               	movf	(??_main+1)& (0+255),w,b
  4600  000822  23EE               	addwfc	(??_main+3)& (0+255),f,b
  4601  000824  51ED               	movf	(??_main+2)& (0+255),w,b
  4602  000826  5D3D               	subwf	_intIDuration& (0+255),w,b
  4603  000828  51EE               	movf	(??_main+3)& (0+255),w,b
  4604  00082A  593E               	subwfb	(_intIDuration+1)& (0+255),w,b
  4605  00082C  A0D8               	btfss	status,0,c
  4606  00082E  D01E               	goto	u16520
  4607                           
  4608                           ; BSR set to: 1
  4609  000830  0060  FB24  F08C   	movff	main@rCycleTime,timeElapsed@prevTime
  4610  000836  0060  FB28  F08D   	movff	main@rCycleTime+1,timeElapsed@prevTime+1
  4611  00083C  0102               	movlb	2	; () banked
  4612  00083E  51AA               	movf	main@rSV3ValveDelay& (0+255),w,b
  4613  000840  0101               	movlb	1	; () banked
  4614  000842  5D3D               	subwf	_intIDuration& (0+255),w,b
  4615  000844  6FEB               	movwf	??_main& (0+255),b
  4616  000846  0102               	movlb	2	; () banked
  4617  000848  51AB               	movf	(main@rSV3ValveDelay+1)& (0+255),w,b
  4618  00084A  0101               	movlb	1	; () banked
  4619  00084C  593E               	subwfb	(_intIDuration+1)& (0+255),w,b
  4620  00084E  6FEC               	movwf	(??_main+1)& (0+255),b
  4621  000850  0E32               	movlw	50
  4622  000852  25EB               	addwf	??_main& (0+255),w,b
  4623  000854  0100               	movlb	0	; () banked
  4624  000856  6F8E               	movwf	timeElapsed@duration& (0+255),b
  4625  000858  0E00               	movlw	0
  4626  00085A  0101               	movlb	1	; () banked
  4627  00085C  21EC               	addwfc	(??_main+1)& (0+255),w,b
  4628  00085E  0100               	movlb	0	; () banked
  4629  000860  6F8F               	movwf	(timeElapsed@duration+1)& (0+255),b
  4630  000862  EC3C  F038         	call	_timeElapsed	;wreg free
  4631  000866  0900               	iorlw	0
  4632  000868  B4D8               	btfsc	status,2,c
  4633  00086A  D027               	goto	l16269
  4634  00086C                     u16520:
  4635                           
  4636                           ;main.c: 797:                                 valveDelayCheck = 1;
  4637  00086C  0E01               	movlw	1
  4638  00086E  0102               	movlb	2	; () banked
  4639  000870  6FA6               	movwf	main@valveDelayCheck& (0+255),b
  4640                           
  4641                           ; BSR set to: 2
  4642                           ;main.c: 798:                                 rValveDelayStart = timeGet();
  4643  000872  ECBD  F03B         	call	_timeGet	;wreg free
  4644  000876  0060  F230  F2A2   	movff	?_timeGet,main@rValveDelayStart
  4645  00087C  0060  F234  F2A3   	movff	?_timeGet+1,main@rValveDelayStart+1
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;main.c: 799:                                 LATAbits.LATA3 = 0;
  4649  000882  96BA               	bcf	186,3,c	;volatile
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;main.c: 800:                                 printf ("PI VO T %d OSV3\n", timeDiff(rCyc
      +                          leTime, rValveDelayStart));
  4653  000884  0EB5               	movlw	low STR_37
  4654  000886  0101               	movlb	1	; () banked
  4655  000888  6FA6               	movwf	printf@fmt& (0+255),b
  4656  00088A  0EFE               	movlw	high STR_37
  4657  00088C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4658  00088E  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  4659  000894  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  4660  00089A  0060  FA88  F090   	movff	main@rValveDelayStart,timeDiff@endT
  4661  0008A0  0060  FA8C  F091   	movff	main@rValveDelayStart+1,timeDiff@endT+1
  4662  0008A6  ECD8  F037         	call	_timeDiff	;wreg free
  4663  0008AA  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  4664  0008B0  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  4665  0008B6  EC84  F039         	call	_printf	;wreg free
  4666  0008BA                     l16269:
  4667                           
  4668                           ;main.c: 802:                             if ((timeElapsed(rValveAcuationTstamp, 32 * rS
      +                          V2ValveDelay / 16) && (pInst < (intIP - ((int16_t) ((0.045*4096+2)/5)*2.5)))) && ((VentM
      +                          ode == VMODE_PRESSURE) || (vMeasureGet()<MaxV))) {
  4669  0008BA  0060  FADC  F08C   	movff	main@rValveAcuationTstamp,timeElapsed@prevTime
  4670  0008C0  0060  FAE0  F08D   	movff	main@rValveAcuationTstamp+1,timeElapsed@prevTime+1
  4671  0008C6  0060  FAF4  F1EB   	movff	main@rSV2ValveDelay,??_main
  4672  0008CC  0060  FAF8  F1EC   	movff	main@rSV2ValveDelay+1,??_main+1
  4673  0008D2  90D8               	bcf	status,0,c
  4674  0008D4  0101               	movlb	1	; () banked
  4675  0008D6  37EB               	rlcf	??_main& (0+255),f,b
  4676  0008D8  37EC               	rlcf	(??_main+1)& (0+255),f,b
  4677  0008DA  0EFF               	movlw	255
  4678  0008DC  15EB               	andwf	??_main& (0+255),w,b
  4679  0008DE  0100               	movlb	0	; () banked
  4680  0008E0  6F8E               	movwf	timeElapsed@duration& (0+255),b
  4681  0008E2  0E0F               	movlw	15
  4682  0008E4  0101               	movlb	1	; () banked
  4683  0008E6  15EC               	andwf	(??_main+1)& (0+255),w,b
  4684  0008E8  0100               	movlb	0	; () banked
  4685  0008EA  6F8F               	movwf	(timeElapsed@duration+1)& (0+255),b
  4686  0008EC  EC3C  F038         	call	_timeElapsed	;wreg free
  4687  0008F0  0900               	iorlw	0
  4688  0008F2  B4D8               	btfsc	status,2,c
  4689  0008F4  D0A1               	goto	l16283
  4690                           
  4691                           ; BSR set to: 0
  4692  0008F6  0060  FB2C  F084   	movff	main@pInst,___xxtofl@val
  4693  0008FC  0060  FB30  F085   	movff	main@pInst+1,___xxtofl@val+1
  4694  000902  0E00               	movlw	0
  4695  000904  BF85               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  4696  000906  0EFF               	movlw	-1
  4697  000908  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
  4698  00090A  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
  4699  00090C  0E01               	movlw	1
  4700  00090E  EC97  F025         	call	___xxtofl
  4701  000912  0060  F210  F0A2   	movff	?___xxtofl,___flge@ff1
  4702  000918  0060  F214  F0A3   	movff	?___xxtofl+1,___flge@ff1+1
  4703  00091E  0060  F218  F0A4   	movff	?___xxtofl+2,___flge@ff1+2
  4704  000924  0060  F21C  F0A5   	movff	?___xxtofl+3,___flge@ff1+3
  4705  00092A  0E00               	movlw	0
  4706  00092C  6F96               	movwf	___fladd@a& (0+255),b
  4707  00092E  0E00               	movlw	0
  4708  000930  6F97               	movwf	(___fladd@a+1)& (0+255),b
  4709  000932  0EB9               	movlw	185
  4710  000934  6F98               	movwf	(___fladd@a+2)& (0+255),b
  4711  000936  0EC2               	movlw	194
  4712  000938  6F99               	movwf	(___fladd@a+3)& (0+255),b
  4713  00093A  0060  F504  F084   	movff	_intIP,___xxtofl@val
  4714  000940  0060  F508  F085   	movff	_intIP+1,___xxtofl@val+1
  4715  000946  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
  4716  000948  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
  4717  00094A  0E00               	movlw	0
  4718  00094C  EC97  F025         	call	___xxtofl
  4719  000950  0060  F210  F092   	movff	?___xxtofl,___fladd@b
  4720  000956  0060  F214  F093   	movff	?___xxtofl+1,___fladd@b+1
  4721  00095C  0060  F218  F094   	movff	?___xxtofl+2,___fladd@b+2
  4722  000962  0060  F21C  F095   	movff	?___xxtofl+3,___fladd@b+3
  4723  000968  EC6F  F019         	call	___fladd	;wreg free
  4724  00096C  0060  F248  F0A6   	movff	?___fladd,___flge@ff2
  4725  000972  0060  F24C  F0A7   	movff	?___fladd+1,___flge@ff2+1
  4726  000978  0060  F250  F0A8   	movff	?___fladd+2,___flge@ff2+2
  4727  00097E  0060  F254  F0A9   	movff	?___fladd+3,___flge@ff2+3
  4728  000984  EC42  F02A         	call	___flge	;wreg free
  4729  000988  B0D8               	btfsc	status,0,c
  4730  00098A  D056               	goto	l16283
  4731                           
  4732                           ; BSR set to: 0
  4733  00098C  0101               	movlb	1	; () banked
  4734  00098E  5157               	movf	_VentMode& (0+255),w,b
  4735  000990  B4D8               	btfsc	status,2,c
  4736  000992  D00A               	goto	u16560
  4737                           
  4738                           ; BSR set to: 1
  4739  000994  EC6F  F033         	call	_vMeasureGet	;wreg free
  4740  000998  0101               	movlb	1	; () banked
  4741  00099A  51F6               	movf	_MaxV& (0+255),w,b
  4742  00099C  0100               	movlb	0	; () banked
  4743  00099E  5D9D               	subwf	?_vMeasureGet& (0+255),w,b
  4744  0009A0  0E00               	movlw	0
  4745  0009A2  599E               	subwfb	(?_vMeasureGet+1)& (0+255),w,b
  4746  0009A4  B0D8               	btfsc	status,0,c
  4747  0009A6  D048               	goto	l16283
  4748  0009A8                     u16560:
  4749                           
  4750                           ;main.c: 804:                                 LATAbits.LATA2 = 1;
  4751  0009A8  84BA               	bsf	186,2,c	;volatile
  4752                           
  4753                           ;main.c: 805:                                 rSubCycleTime = timeGet();
  4754  0009AA  ECBD  F03B         	call	_timeGet	;wreg free
  4755  0009AE  0060  F230  F2AC   	movff	?_timeGet,main@rSubCycleTime
  4756  0009B4  0060  F234  F2AD   	movff	?_timeGet+1,main@rSubCycleTime+1
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;main.c: 806:                                 printf ("PI VO T %d - Pi %d\n", timeDiff(r
      +                          CycleTime, rSubCycleTime), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  4760  0009BA  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  4761  0009C0  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  4762  0009C6  0E00               	movlw	0
  4763  0009C8  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4764  0009CA  0E0A               	movlw	10
  4765  0009CC  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4766  0009CE  EC40  F039         	call	___wmul	;wreg free
  4767  0009D2  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4768  0009D8  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4769  0009DE  0E00               	movlw	0
  4770  0009E0  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4771  0009E2  0E25               	movlw	37
  4772  0009E4  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4773  0009E6  EC29  F02F         	call	___awdiv	;wreg free
  4774  0009EA  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  4775  0009F0  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;main.c: 806:                                 printf ("PI VO T %d - Pi %d\n", timeDiff(r
      +                          CycleTime, rSubCycleTime), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  4779  0009F6  0E10               	movlw	low STR_38
  4780  0009F8  0101               	movlb	1	; () banked
  4781  0009FA  6FA6               	movwf	printf@fmt& (0+255),b
  4782  0009FC  0EFE               	movlw	high STR_38
  4783  0009FE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4784  000A00  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  4785  000A06  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  4786  000A0C  0060  FAB0  F090   	movff	main@rSubCycleTime,timeDiff@endT
  4787  000A12  0060  FAB4  F091   	movff	main@rSubCycleTime+1,timeDiff@endT+1
  4788  000A18  ECD8  F037         	call	_timeDiff	;wreg free
  4789  000A1C  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  4790  000A22  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  4791  000A28  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  4792  000A2E  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  4793  000A34  EC84  F039         	call	_printf	;wreg free
  4794  000A38                     l16283:
  4795                           
  4796                           ;main.c: 812:                 screenMng();
  4797  000A38  EC8B  F017         	call	_screenMng	;wreg free
  4798                           
  4799                           ;main.c: 813:                 MenuMng();
  4800  000A3C  EC7B  F015         	call	_MenuMng	;wreg free
  4801                           
  4802                           ;main.c: 817:             if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  4803  000A40  0E9D               	movlw	low main@printTime
  4804  000A42  0100               	movlb	0	; () banked
  4805  000A44  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
  4806  000A46  0E02               	movlw	high main@printTime
  4807  000A48  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  4808  000A4A  0E00               	movlw	0
  4809  000A4C  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
  4810  000A4E  0E14               	movlw	20
  4811  000A50  6F8E               	movwf	timeElapsedR@duration& (0+255),b
  4812  000A52  EC83  F032         	call	_timeElapsedR	;wreg free
  4813  000A56  0900               	iorlw	0
  4814  000A58  B4D8               	btfsc	status,2,c
  4815  000A5A  EF28  F001         	goto	l16133
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;main.c: 818:                 aCaptGetResult(MainPSensor, &pInst);
  4819  000A5E  0ECB               	movlw	low main@pInst
  4820  000A60  0101               	movlb	1	; () banked
  4821  000A62  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  4822  000A64  0E02               	movlw	high main@pInst
  4823  000A66  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  4824  000A68  0E00               	movlw	0
  4825  000A6A  ECB9  F020         	call	_aCaptGetResult
  4826                           
  4827                           ;main.c: 819:                 aCaptGetResult(Flt1PSensor, &pAvgShort);
  4828  000A6E  0EC7               	movlw	low main@pAvgShort
  4829  000A70  0101               	movlb	1	; () banked
  4830  000A72  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  4831  000A74  0E02               	movlw	high main@pAvgShort
  4832  000A76  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  4833  000A78  0E04               	movlw	4
  4834  000A7A  ECB9  F020         	call	_aCaptGetResult
  4835                           
  4836                           ;main.c: 820:                 pNext = rPressurePredict(rSV2ValveDelay, pInst, pAvgShort)
      +                          ;
  4837  000A7E  0060  FAF4  F09E   	movff	main@rSV2ValveDelay,rPressurePredict@delay
  4838  000A84  0060  FAF8  F09F   	movff	main@rSV2ValveDelay+1,rPressurePredict@delay+1
  4839  000A8A  0060  FB2C  F0A0   	movff	main@pInst,rPressurePredict@pInst
  4840  000A90  0060  FB30  F0A1   	movff	main@pInst+1,rPressurePredict@pInst+1
  4841  000A96  0060  FB1C  F0A2   	movff	main@pAvgShort,rPressurePredict@pAvgShort
  4842  000A9C  0060  FB20  F0A3   	movff	main@pAvgShort+1,rPressurePredict@pAvgShort+1
  4843  000AA2  EC05  F02B         	call	_rPressurePredict	;wreg free
  4844  000AA6  0060  F278  F2AE   	movff	?_rPressurePredict,main@pNext
  4845  000AAC  0060  F27C  F2AF   	movff	?_rPressurePredict+1,main@pNext+1
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;main.c: 821:                 printf ("PI T %d - Vol %d Pi %d Pn %d Pd %d. R %d Pip %d O
      +                          S %d.\n", timeDiff(rCycleTime, timeGet()), vMeasureGet(), (10 * pInst) / ((int16_t) ((0.
      +                          045*4096+2)/5)*1), (10 * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAv
      +                          gShort)) / ((int16_t) ((0.045*4096+2)/5)*1), rSV2ValveDelay, (10 * pPlateau) / ((int16_t
      +                          ) ((0.045*4096+2)/5)*1), (10 * pInspOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  4849  000AB2  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  4850  000AB8  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  4851  000ABE  0E00               	movlw	0
  4852  000AC0  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4853  000AC2  0E0A               	movlw	10
  4854  000AC4  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4855  000AC6  EC40  F039         	call	___wmul	;wreg free
  4856  000ACA  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4857  000AD0  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4858  000AD6  0E00               	movlw	0
  4859  000AD8  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4860  000ADA  0E25               	movlw	37
  4861  000ADC  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4862  000ADE  EC29  F02F         	call	___awdiv	;wreg free
  4863  000AE2  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  4864  000AE8  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;main.c: 821:                 printf ("PI T %d - Vol %d Pi %d Pn %d Pd %d. R %d Pip %d O
      +                          S %d.\n", timeDiff(rCycleTime, timeGet()), vMeasureGet(), (10 * pInst) / ((int16_t) ((0.
      +                          045*4096+2)/5)*1), (10 * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAv
      +                          gShort)) / ((int16_t) ((0.045*4096+2)/5)*1), rSV2ValveDelay, (10 * pPlateau) / ((int16_t
      +                          ) ((0.045*4096+2)/5)*1), (10 * pInspOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  4868  000AEE  0060  FAB8  F084   	movff	main@pNext,___wmul@multiplier
  4869  000AF4  0060  FABC  F085   	movff	main@pNext+1,___wmul@multiplier+1
  4870  000AFA  0E00               	movlw	0
  4871  000AFC  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4872  000AFE  0E0A               	movlw	10
  4873  000B00  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4874  000B02  EC40  F039         	call	___wmul	;wreg free
  4875  000B06  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4876  000B0C  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4877  000B12  0E00               	movlw	0
  4878  000B14  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4879  000B16  0E25               	movlw	37
  4880  000B18  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4881  000B1A  EC29  F02F         	call	___awdiv	;wreg free
  4882  000B1E  0060  F228  F2BB   	movff	?___awdiv,_main$4738
  4883  000B24  0060  F22C  F2BC   	movff	?___awdiv+1,_main$4738+1
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;main.c: 821:                 printf ("PI T %d - Vol %d Pi %d Pn %d Pd %d. R %d Pip %d O
      +                          S %d.\n", timeDiff(rCycleTime, timeGet()), vMeasureGet(), (10 * pInst) / ((int16_t) ((0.
      +                          045*4096+2)/5)*1), (10 * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAv
      +                          gShort)) / ((int16_t) ((0.045*4096+2)/5)*1), rSV2ValveDelay, (10 * pPlateau) / ((int16_t
      +                          ) ((0.045*4096+2)/5)*1), (10 * pInspOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  4887  000B2A  0102               	movlb	2	; () banked
  4888  000B2C  51C7               	movf	main@pAvgShort& (0+255),w,b
  4889  000B2E  5DCB               	subwf	main@pInst& (0+255),w,b
  4890  000B30  0100               	movlb	0	; () banked
  4891  000B32  6F84               	movwf	___wmul@multiplier& (0+255),b
  4892  000B34  0102               	movlb	2	; () banked
  4893  000B36  51C8               	movf	(main@pAvgShort+1)& (0+255),w,b
  4894  000B38  59CC               	subwfb	(main@pInst+1)& (0+255),w,b
  4895  000B3A  0100               	movlb	0	; () banked
  4896  000B3C  6F85               	movwf	(___wmul@multiplier+1)& (0+255),b
  4897  000B3E  0E00               	movlw	0
  4898  000B40  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4899  000B42  0E0A               	movlw	10
  4900  000B44  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4901  000B46  EC40  F039         	call	___wmul	;wreg free
  4902  000B4A  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4903  000B50  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4904  000B56  0E00               	movlw	0
  4905  000B58  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4906  000B5A  0E25               	movlw	37
  4907  000B5C  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4908  000B5E  EC29  F02F         	call	___awdiv	;wreg free
  4909  000B62  0060  F228  F2A4   	movff	?___awdiv,_main$4739
  4910  000B68  0060  F22C  F2A5   	movff	?___awdiv+1,_main$4739+1
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;main.c: 821:                 printf ("PI T %d - Vol %d Pi %d Pn %d Pd %d. R %d Pip %d O
      +                          S %d.\n", timeDiff(rCycleTime, timeGet()), vMeasureGet(), (10 * pInst) / ((int16_t) ((0.
      +                          045*4096+2)/5)*1), (10 * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAv
      +                          gShort)) / ((int16_t) ((0.045*4096+2)/5)*1), rSV2ValveDelay, (10 * pPlateau) / ((int16_t
      +                          ) ((0.045*4096+2)/5)*1), (10 * pInspOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  4914  000B6E  0060  FAC0  F084   	movff	main@pPlateau,___wmul@multiplier
  4915  000B74  0060  FAC4  F085   	movff	main@pPlateau+1,___wmul@multiplier+1
  4916  000B7A  0E00               	movlw	0
  4917  000B7C  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4918  000B7E  0E0A               	movlw	10
  4919  000B80  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4920  000B82  EC40  F039         	call	___wmul	;wreg free
  4921  000B86  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4922  000B8C  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4923  000B92  0E00               	movlw	0
  4924  000B94  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4925  000B96  0E25               	movlw	37
  4926  000B98  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4927  000B9A  EC29  F02F         	call	___awdiv	;wreg free
  4928  000B9E  0060  F228  F299   	movff	?___awdiv,_main$4740
  4929  000BA4  0060  F22C  F29A   	movff	?___awdiv+1,_main$4740+1
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;main.c: 821:                 printf ("PI T %d - Vol %d Pi %d Pn %d Pd %d. R %d Pip %d O
      +                          S %d.\n", timeDiff(rCycleTime, timeGet()), vMeasureGet(), (10 * pInst) / ((int16_t) ((0.
      +                          045*4096+2)/5)*1), (10 * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAv
      +                          gShort)) / ((int16_t) ((0.045*4096+2)/5)*1), rSV2ValveDelay, (10 * pPlateau) / ((int16_t
      +                          ) ((0.045*4096+2)/5)*1), (10 * pInspOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  4933  000BAA  0060  FAE4  F084   	movff	main@pInspOS,___wmul@multiplier
  4934  000BB0  0060  FAE8  F085   	movff	main@pInspOS+1,___wmul@multiplier+1
  4935  000BB6  0E00               	movlw	0
  4936  000BB8  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4937  000BBA  0E0A               	movlw	10
  4938  000BBC  6F86               	movwf	___wmul@multiplicand& (0+255),b
  4939  000BBE  EC40  F039         	call	___wmul	;wreg free
  4940  000BC2  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  4941  000BC8  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  4942  000BCE  0E00               	movlw	0
  4943  000BD0  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4944  000BD2  0E25               	movlw	37
  4945  000BD4  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4946  000BD6  EC29  F02F         	call	___awdiv	;wreg free
  4947  000BDA  0060  F228  F29B   	movff	?___awdiv,_main$4741
  4948  000BE0  0060  F22C  F29C   	movff	?___awdiv+1,_main$4741+1
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;main.c: 821:                 printf ("PI T %d - Vol %d Pi %d Pn %d Pd %d. R %d Pip %d O
      +                          S %d.\n", timeDiff(rCycleTime, timeGet()), vMeasureGet(), (10 * pInst) / ((int16_t) ((0.
      +                          045*4096+2)/5)*1), (10 * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAv
      +                          gShort)) / ((int16_t) ((0.045*4096+2)/5)*1), rSV2ValveDelay, (10 * pPlateau) / ((int16_t
      +                          ) ((0.045*4096+2)/5)*1), (10 * pInspOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  4952  000BE6  0E3B               	movlw	low STR_39
  4953  000BE8  0101               	movlb	1	; () banked
  4954  000BEA  6FA6               	movwf	printf@fmt& (0+255),b
  4955  000BEC  0EFC               	movlw	high STR_39
  4956  000BEE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4957  000BF0  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  4958  000BF6  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  4959  000BFC  ECBD  F03B         	call	_timeGet	;wreg free
  4960  000C00  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  4961  000C06  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  4962  000C0C  ECD8  F037         	call	_timeDiff	;wreg free
  4963  000C10  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  4964  000C16  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  4965  000C1C  EC6F  F033         	call	_vMeasureGet	;wreg free
  4966  000C20  0060  F274  F1AA   	movff	?_vMeasureGet,?_printf+4
  4967  000C26  0060  F278  F1AB   	movff	?_vMeasureGet+1,?_printf+5
  4968  000C2C  0060  FB14  F1AC   	movff	_main$4737,?_printf+6
  4969  000C32  0060  FB18  F1AD   	movff	_main$4737+1,?_printf+7
  4970  000C38  0060  FAEC  F1AE   	movff	_main$4738,?_printf+8
  4971  000C3E  0060  FAF0  F1AF   	movff	_main$4738+1,?_printf+9
  4972  000C44  0060  FA90  F1B0   	movff	_main$4739,?_printf+10
  4973  000C4A  0060  FA94  F1B1   	movff	_main$4739+1,?_printf+11
  4974  000C50  0060  FAF4  F1B2   	movff	main@rSV2ValveDelay,?_printf+12
  4975  000C56  0060  FAF8  F1B3   	movff	main@rSV2ValveDelay+1,?_printf+13
  4976  000C5C  0060  FA64  F1B4   	movff	_main$4740,?_printf+14
  4977  000C62  0060  FA68  F1B5   	movff	_main$4740+1,?_printf+15
  4978  000C68  0060  FA6C  F1B6   	movff	_main$4741,?_printf+16
  4979  000C6E  0060  FA70  F1B7   	movff	_main$4741+1,?_printf+17
  4980  000C74  EC84  F039         	call	_printf	;wreg free
  4981  000C78  EF28  F001         	goto	l16133
  4982  000C7C                     l16305:
  4983                           
  4984                           ;main.c: 835:         lastCycleVol = vMeasureGet();
  4985  000C7C  EC6F  F033         	call	_vMeasureGet	;wreg free
  4986  000C80  0060  F274  F131   	movff	?_vMeasureGet,_lastCycleVol
  4987  000C86  0060  F278  F132   	movff	?_vMeasureGet+1,_lastCycleVol+1
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;main.c: 836:         sprintf(lcdBtnRow, "CV: % 3d ", lastCycleVol);
  4991  000C8C  0E7B               	movlw	low _lcdBtnRow
  4992  000C8E  0101               	movlb	1	; () banked
  4993  000C90  6FA6               	movwf	sprintf@s& (0+255),b
  4994  000C92  0E02               	movlw	high _lcdBtnRow
  4995  000C94  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  4996  000C96  0ECF               	movlw	low STR_40
  4997  000C98  6FA8               	movwf	sprintf@fmt& (0+255),b
  4998  000C9A  0EFF               	movlw	high STR_40
  4999  000C9C  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  5000  000C9E  0060  F4C4  F1AA   	movff	_lastCycleVol,?_sprintf+4
  5001  000CA4  0060  F4C8  F1AB   	movff	_lastCycleVol+1,?_sprintf+5
  5002  000CAA  EC9C  F033         	call	_sprintf	;wreg free
  5003                           
  5004                           ; BSR set to: 1
  5005                           ;main.c: 837:         lcdPrintBR = 1;
  5006  000CAE  0E01               	movlw	1
  5007  000CB0  6F5A               	movwf	_lcdPrintBR& (0+255),b
  5008                           
  5009                           ; BSR set to: 1
  5010                           ;main.c: 842:         printf ("\nEP\n");
  5011  000CB2  0EF5               	movlw	low STR_41
  5012  000CB4  6FA6               	movwf	printf@fmt& (0+255),b
  5013  000CB6  0EFF               	movlw	high STR_41
  5014  000CB8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5015  000CBA  EC84  F039         	call	_printf	;wreg free
  5016                           
  5017                           ;main.c: 844:         aCaptRstFlt(Flt0PSensor);
  5018  000CBE  0E03               	movlw	3
  5019  000CC0  ECD6  F028         	call	_aCaptRstFlt
  5020                           
  5021                           ; BSR set to: 57
  5022                           ;main.c: 845:         aCaptRstFlt(Flt1PSensor);
  5023  000CC4  0E04               	movlw	4
  5024  000CC6  ECD6  F028         	call	_aCaptRstFlt
  5025                           
  5026                           ; BSR set to: 57
  5027                           ;main.c: 847:         rSubCycleTime = timeGet();
  5028  000CCA  ECBD  F03B         	call	_timeGet	;wreg free
  5029  000CCE  0060  F230  F2AC   	movff	?_timeGet,main@rSubCycleTime
  5030  000CD4  0060  F234  F2AD   	movff	?_timeGet+1,main@rSubCycleTime+1
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;main.c: 848:         LATAbits.LATA2 = 0;
  5034  000CDA  94BA               	bcf	186,2,c	;volatile
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;main.c: 849:         if (LATAbits.LATA3){
  5038  000CDC  A6BA               	btfss	186,3,c	;volatile
  5039  000CDE  D00C               	goto	l16329
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;main.c: 850:             LATAbits.LATA3 = 0;
  5043  000CE0  96BA               	bcf	186,3,c	;volatile
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;main.c: 851:             valveDelayCheck = 1;
  5047  000CE2  0E01               	movlw	1
  5048  000CE4  0102               	movlb	2	; () banked
  5049  000CE6  6FA6               	movwf	main@valveDelayCheck& (0+255),b
  5050                           
  5051                           ; BSR set to: 2
  5052                           ;main.c: 852:             rValveDelayStart = timeGet();
  5053  000CE8  ECBD  F03B         	call	_timeGet	;wreg free
  5054  000CEC  0060  F230  F2A2   	movff	?_timeGet,main@rValveDelayStart
  5055  000CF2  0060  F234  F2A3   	movff	?_timeGet+1,main@rValveDelayStart+1
  5056  000CF8                     l16329:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;main.c: 855:         initialSubState = 1;
  5060  000CF8  0E01               	movlw	1
  5061  000CFA  0102               	movlb	2	; () banked
  5062  000CFC  6FA9               	movwf	main@initialSubState& (0+255),b
  5063                           
  5064                           ; BSR set to: 2
  5065                           ;main.c: 856:         OSCheck = 0;
  5066  000CFE  0E00               	movlw	0
  5067  000D00  6FB2               	movwf	main@OSCheck& (0+255),b
  5068  000D02                     l16333:
  5069                           
  5070                           ;main.c: 859:             if (intVentMode == VMODE_PRESSURE){
  5071  000D02  0101               	movlb	1	; () banked
  5072  000D04  5158               	movf	_intVentMode& (0+255),w,b
  5073  000D06  A4D8               	btfss	status,2,c
  5074  000D08  D004               	goto	l16337
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;main.c: 860:                 MonitorMsgSend(MONSTATE_RUNP);
  5078  000D0A  0E10               	movlw	16
  5079  000D0C  EC9A  F039         	call	_MonitorMsgSend
  5080                           
  5081                           ;main.c: 861:             } else {
  5082  000D10  D003               	goto	l16339
  5083  000D12                     l16337:
  5084                           
  5085                           ; BSR set to: 1
  5086                           ;main.c: 862:                 MonitorMsgSend(MONSTATE_RUNV);
  5087  000D12  0E14               	movlw	20
  5088  000D14  EC9A  F039         	call	_MonitorMsgSend
  5089  000D18                     l16339:
  5090                           
  5091                           ;main.c: 864:             if (timeElapsedR(&rCycleTime, intEDuration)) {
  5092  000D18  0EC9               	movlw	low main@rCycleTime
  5093  000D1A  0100               	movlb	0	; () banked
  5094  000D1C  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
  5095  000D1E  0E02               	movlw	high main@rCycleTime
  5096  000D20  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  5097  000D22  0060  F4EC  F08E   	movff	_intEDuration,timeElapsedR@duration
  5098  000D28  0060  F4F0  F08F   	movff	_intEDuration+1,timeElapsedR@duration+1
  5099  000D2E  EC83  F032         	call	_timeElapsedR	;wreg free
  5100  000D32  0900               	iorlw	0
  5101  000D34  B4D8               	btfsc	status,2,c
  5102  000D36  D02A               	goto	l16353
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;main.c: 866:                 bRateUpdt(0);
  5106  000D38  0E00               	movlw	0
  5107  000D3A  EC11  F02C         	call	_bRateUpdt
  5108                           
  5109                           ; BSR set to: 1
  5110                           ;main.c: 867:                 if (initialSubState){
  5111  000D3E  0102               	movlb	2	; () banked
  5112  000D40  51A9               	movf	main@initialSubState& (0+255),w,b
  5113  000D42  B4D8               	btfsc	status,2,c
  5114  000D44  D003               	goto	l16347
  5115                           
  5116                           ; BSR set to: 2
  5117                           ;main.c: 869:                     MonitorErrorSet(MON_EPE);
  5118  000D46  0E10               	movlw	16
  5119  000D48  ECC6  F03B         	call	_MonitorErrorSet
  5120  000D4C                     l16347:
  5121                           
  5122                           ;main.c: 871:                 if (OSCheck) {
  5123  000D4C  0102               	movlb	2	; () banked
  5124  000D4E  51B2               	movf	main@OSCheck& (0+255),w,b
  5125  000D50  B4D8               	btfsc	status,2,c
  5126  000D52  EFE4  F000         	goto	l16103
  5127                           
  5128                           ; BSR set to: 2
  5129                           ;main.c: 872:                     pExpOS = (3*pExpOS)>>2;
  5130  000D56  0060  FAD4  F084   	movff	main@pExpOS,___wmul@multiplier
  5131  000D5C  0060  FAD8  F085   	movff	main@pExpOS+1,___wmul@multiplier+1
  5132  000D62  0E00               	movlw	0
  5133  000D64  0100               	movlb	0	; () banked
  5134  000D66  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5135  000D68  0E03               	movlw	3
  5136  000D6A  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5137  000D6C  EC40  F039         	call	___wmul	;wreg free
  5138  000D70  3585               	rlcf	(?___wmul+1)& (0+255),w,b
  5139  000D72  3385               	rrcf	(?___wmul+1)& (0+255),f,b
  5140  000D74  3384               	rrcf	?___wmul& (0+255),f,b
  5141  000D76  3585               	rlcf	(?___wmul+1)& (0+255),w,b
  5142  000D78  3385               	rrcf	(?___wmul+1)& (0+255),f,b
  5143  000D7A  3384               	rrcf	?___wmul& (0+255),f,b
  5144  000D7C  0060  F210  F2B5   	movff	?___wmul,main@pExpOS
  5145  000D82  0060  F214  F2B6   	movff	?___wmul+1,main@pExpOS+1
  5146  000D88  EFE4  F000         	goto	l16103
  5147  000D8C                     l16353:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;main.c: 876:                 if (initialSubState) {
  5151  000D8C  0102               	movlb	2	; () banked
  5152  000D8E  51A9               	movf	main@initialSubState& (0+255),w,b
  5153  000D90  B4D8               	btfsc	status,2,c
  5154  000D92  D10A               	goto	l16399
  5155                           
  5156                           ; BSR set to: 2
  5157                           ;main.c: 882:                     if (aCaptGetResult(MainPSensor, &pInst)) {
  5158  000D94  0ECB               	movlw	low main@pInst
  5159  000D96  0101               	movlb	1	; () banked
  5160  000D98  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5161  000D9A  0E02               	movlw	high main@pInst
  5162  000D9C  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5163  000D9E  0E00               	movlw	0
  5164  000DA0  ECB9  F020         	call	_aCaptGetResult
  5165  000DA4  0900               	iorlw	0
  5166  000DA6  B4D8               	btfsc	status,2,c
  5167  000DA8  EFD5  F00A         	goto	l16471
  5168                           
  5169                           ;main.c: 883:                         aCaptGetResult(Flt1PSensor, &pAvgShort);
  5170  000DAC  0EC7               	movlw	low main@pAvgShort
  5171  000DAE  0101               	movlb	1	; () banked
  5172  000DB0  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5173  000DB2  0E02               	movlw	high main@pAvgShort
  5174  000DB4  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5175  000DB6  0E04               	movlw	4
  5176  000DB8  ECB9  F020         	call	_aCaptGetResult
  5177                           
  5178                           ;main.c: 887:                         pTmp = intPEEP - pExpOS;
  5179  000DBC  0102               	movlb	2	; () banked
  5180  000DBE  51B5               	movf	main@pExpOS& (0+255),w,b
  5181  000DC0  0101               	movlb	1	; () banked
  5182  000DC2  5D3F               	subwf	_intPEEP& (0+255),w,b
  5183  000DC4  0102               	movlb	2	; () banked
  5184  000DC6  6FBF               	movwf	main@pTmp& (0+255),b
  5185  000DC8  51B6               	movf	(main@pExpOS+1)& (0+255),w,b
  5186  000DCA  0101               	movlb	1	; () banked
  5187  000DCC  5940               	subwfb	(_intPEEP+1)& (0+255),w,b
  5188  000DCE  0102               	movlb	2	; () banked
  5189  000DD0  6FC0               	movwf	(main@pTmp+1)& (0+255),b
  5190                           
  5191                           ; BSR set to: 2
  5192                           ;main.c: 888:                         if (pTmp <= ((int16_t) ((0.045*4096+2)/5)*1)) {
  5193  000DD2  BFC0               	btfsc	(main@pTmp+1)& (0+255),7,b
  5194  000DD4  D006               	goto	u16650
  5195  000DD6  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  5196  000DD8  E108               	bnz	l16365
  5197  000DDA  0E26               	movlw	38
  5198  000DDC  5DBF               	subwf	main@pTmp& (0+255),w,b
  5199  000DDE  B0D8               	btfsc	status,0,c
  5200  000DE0  D004               	goto	l16365
  5201  000DE2                     u16650:
  5202                           
  5203                           ; BSR set to: 2
  5204                           ;main.c: 889:                             pTmp = ((int16_t) ((0.045*4096+2)/5)*1);
  5205  000DE2  0E00               	movlw	0
  5206  000DE4  6FC0               	movwf	(main@pTmp+1)& (0+255),b
  5207  000DE6  0E25               	movlw	37
  5208  000DE8  6FBF               	movwf	main@pTmp& (0+255),b
  5209  000DEA                     l16365:
  5210                           
  5211                           ; BSR set to: 2
  5212                           ;main.c: 891:                         if (pAvgShort < pTmp) {
  5213  000DEA  51BF               	movf	main@pTmp& (0+255),w,b
  5214  000DEC  5DC7               	subwf	main@pAvgShort& (0+255),w,b
  5215  000DEE  51C8               	movf	(main@pAvgShort+1)& (0+255),w,b
  5216  000DF0  0A80               	xorlw	128
  5217  000DF2  0101               	movlb	1	; () banked
  5218  000DF4  6FEB               	movwf	??_main& (0+255),b
  5219  000DF6  0102               	movlb	2	; () banked
  5220  000DF8  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  5221  000DFA  0A80               	xorlw	128
  5222  000DFC  0101               	movlb	1	; () banked
  5223  000DFE  59EB               	subwfb	??_main& (0+255),w,b
  5224  000E00  B0D8               	btfsc	status,0,c
  5225  000E02  D079               	goto	l16383
  5226                           
  5227                           ; BSR set to: 1
  5228                           ;main.c: 892:                             LATAbits.LATA3 = 1;
  5229  000E04  86BA               	bsf	186,3,c	;volatile
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;main.c: 893:                             initialSubState = 0;
  5233  000E06  0E00               	movlw	0
  5234  000E08  0102               	movlb	2	; () banked
  5235  000E0A  6FA9               	movwf	main@initialSubState& (0+255),b
  5236                           
  5237                           ; BSR set to: 2
  5238                           ;main.c: 894:                             rValveAcuationTstamp = timeGet();
  5239  000E0C  ECBD  F03B         	call	_timeGet	;wreg free
  5240  000E10  0060  F230  F2B7   	movff	?_timeGet,main@rValveAcuationTstamp
  5241  000E16  0060  F234  F2B8   	movff	?_timeGet+1,main@rValveAcuationTstamp+1
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;main.c: 895:                             pValveActuation = pInst;
  5245  000E1C  0060  FB2C  F29F   	movff	main@pInst,main@pValveActuation
  5246  000E22  0060  FB30  F2A0   	movff	main@pInst+1,main@pValveActuation+1
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;main.c: 896:                             OSCheck = 1;
  5250  000E28  0E01               	movlw	1
  5251  000E2A  0102               	movlb	2	; () banked
  5252  000E2C  6FB2               	movwf	main@OSCheck& (0+255),b
  5253                           
  5254                           ; BSR set to: 2
  5255                           ;main.c: 897:                             printf ("PEI end T %d - Pi %d OS %d\n", timeDi
      +                          ff(rCycleTime, rValveAcuationTstamp), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (
      +                          10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  5256  000E2E  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  5257  000E34  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  5258  000E3A  0E00               	movlw	0
  5259  000E3C  0100               	movlb	0	; () banked
  5260  000E3E  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5261  000E40  0E0A               	movlw	10
  5262  000E42  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5263  000E44  EC40  F039         	call	___wmul	;wreg free
  5264  000E48  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5265  000E4E  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5266  000E54  0E00               	movlw	0
  5267  000E56  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5268  000E58  0E25               	movlw	37
  5269  000E5A  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5270  000E5C  EC29  F02F         	call	___awdiv	;wreg free
  5271  000E60  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  5272  000E66  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 897:                             printf ("PEI end T %d - Pi %d OS %d\n", timeDi
      +                          ff(rCycleTime, rValveAcuationTstamp), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (
      +                          10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  5276  000E6C  0060  FAD4  F084   	movff	main@pExpOS,___wmul@multiplier
  5277  000E72  0060  FAD8  F085   	movff	main@pExpOS+1,___wmul@multiplier+1
  5278  000E78  0E00               	movlw	0
  5279  000E7A  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5280  000E7C  0E0A               	movlw	10
  5281  000E7E  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5282  000E80  EC40  F039         	call	___wmul	;wreg free
  5283  000E84  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5284  000E8A  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5285  000E90  0E00               	movlw	0
  5286  000E92  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5287  000E94  0E25               	movlw	37
  5288  000E96  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5289  000E98  EC29  F02F         	call	___awdiv	;wreg free
  5290  000E9C  0060  F228  F2BB   	movff	?___awdiv,_main$4738
  5291  000EA2  0060  F22C  F2BC   	movff	?___awdiv+1,_main$4738+1
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;main.c: 897:                             printf ("PEI end T %d - Pi %d OS %d\n", timeDi
      +                          ff(rCycleTime, rValveAcuationTstamp), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (
      +                          10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  5295  000EA8  0E12               	movlw	low STR_42
  5296  000EAA  0101               	movlb	1	; () banked
  5297  000EAC  6FA6               	movwf	printf@fmt& (0+255),b
  5298  000EAE  0EFD               	movlw	high STR_42
  5299  000EB0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5300  000EB2  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  5301  000EB8  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  5302  000EBE  0060  FADC  F090   	movff	main@rValveAcuationTstamp,timeDiff@endT
  5303  000EC4  0060  FAE0  F091   	movff	main@rValveAcuationTstamp+1,timeDiff@endT+1
  5304  000ECA  ECD8  F037         	call	_timeDiff	;wreg free
  5305  000ECE  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  5306  000ED4  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  5307  000EDA  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  5308  000EE0  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  5309  000EE6  0060  FAEC  F1AC   	movff	_main$4738,?_printf+6
  5310  000EEC  0060  FAF0  F1AD   	movff	_main$4738+1,?_printf+7
  5311  000EF2  EC84  F039         	call	_printf	;wreg free
  5312  000EF6                     l16383:
  5313                           
  5314                           ;main.c: 902:                         if (valveDelayCheck) {
  5315  000EF6  0102               	movlb	2	; () banked
  5316  000EF8  51A6               	movf	main@valveDelayCheck& (0+255),w,b
  5317  000EFA  B4D8               	btfsc	status,2,c
  5318  000EFC  D356               	goto	l16471
  5319                           
  5320                           ; BSR set to: 2
  5321                           ;main.c: 905:                             if (pInst < (pAvgShort - ((int16_t) ((0.045*40
      +                          96+2)/5)*1))) {
  5322  000EFE  0EDB               	movlw	219
  5323  000F00  0101               	movlb	1	; () banked
  5324  000F02  6FEB               	movwf	??_main& (0+255),b
  5325  000F04  0EFF               	movlw	255
  5326  000F06  6FEC               	movwf	(??_main+1)& (0+255),b
  5327  000F08  0060  FB1C  F1ED   	movff	main@pAvgShort,??_main+2
  5328  000F0E  0060  FB20  F1EE   	movff	main@pAvgShort+1,??_main+3
  5329  000F14  51EB               	movf	??_main& (0+255),w,b
  5330  000F16  27ED               	addwf	(??_main+2)& (0+255),f,b
  5331  000F18  51EC               	movf	(??_main+1)& (0+255),w,b
  5332  000F1A  23EE               	addwfc	(??_main+3)& (0+255),f,b
  5333  000F1C  51ED               	movf	(??_main+2)& (0+255),w,b
  5334  000F1E  0102               	movlb	2	; () banked
  5335  000F20  5DCB               	subwf	main@pInst& (0+255),w,b
  5336  000F22  51CC               	movf	(main@pInst+1)& (0+255),w,b
  5337  000F24  0A80               	xorlw	128
  5338  000F26  0101               	movlb	1	; () banked
  5339  000F28  6FEF               	movwf	(??_main+4)& (0+255),b
  5340  000F2A  51EE               	movf	(??_main+3)& (0+255),w,b
  5341  000F2C  0A80               	xorlw	128
  5342  000F2E  59EF               	subwfb	(??_main+4)& (0+255),w,b
  5343  000F30  B0D8               	btfsc	status,0,c
  5344  000F32  D33B               	goto	l16471
  5345                           
  5346                           ; BSR set to: 1
  5347                           ;main.c: 906:                                 valveDelayCheck = 0;
  5348  000F34  0E00               	movlw	0
  5349  000F36  0102               	movlb	2	; () banked
  5350  000F38  6FA6               	movwf	main@valveDelayCheck& (0+255),b
  5351                           
  5352                           ; BSR set to: 2
  5353                           ;main.c: 908:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  5354  000F3A  0060  FA88  F08E   	movff	main@rValveDelayStart,timeDiff@startT
  5355  000F40  0060  FA8C  F08F   	movff	main@rValveDelayStart+1,timeDiff@startT+1
  5356  000F46  ECBD  F03B         	call	_timeGet	;wreg free
  5357  000F4A  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  5358  000F50  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  5359  000F56  ECD8  F037         	call	_timeDiff	;wreg free
  5360  000F5A  0060  F238  F2A7   	movff	?_timeDiff,main@rTimeTmp
  5361  000F60  0060  F23C  F2A8   	movff	?_timeDiff+1,main@rTimeTmp+1
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;main.c: 909:                                  if (rTimeTmp < ((time_t) 600*1)) {
  5365  000F66  0E58               	movlw	88
  5366  000F68  0102               	movlb	2	; () banked
  5367  000F6A  5DA7               	subwf	main@rTimeTmp& (0+255),w,b
  5368  000F6C  0E02               	movlw	2
  5369  000F6E  59A8               	subwfb	(main@rTimeTmp+1)& (0+255),w,b
  5370  000F70  B0D8               	btfsc	status,0,c
  5371  000F72  D016               	goto	l16397
  5372                           
  5373                           ; BSR set to: 2
  5374                           ;main.c: 911:                                     rSV3ValveDelay = (rSV3ValveDelay + rTi
      +                          meTmp)>>1;
  5375  000F74  51A7               	movf	main@rTimeTmp& (0+255),w,b
  5376  000F76  25AA               	addwf	main@rSV3ValveDelay& (0+255),w,b
  5377  000F78  0101               	movlb	1	; () banked
  5378  000F7A  6FEB               	movwf	??_main& (0+255),b
  5379  000F7C  0102               	movlb	2	; () banked
  5380  000F7E  51A8               	movf	(main@rTimeTmp+1)& (0+255),w,b
  5381  000F80  21AB               	addwfc	(main@rSV3ValveDelay+1)& (0+255),w,b
  5382  000F82  0101               	movlb	1	; () banked
  5383  000F84  6FEC               	movwf	(??_main+1)& (0+255),b
  5384  000F86  90D8               	bcf	status,0,c
  5385  000F88  31EC               	rrcf	(??_main+1)& (0+255),w,b
  5386  000F8A  6FED               	movwf	(??_main+2)& (0+255),b
  5387  000F8C  31EB               	rrcf	??_main& (0+255),w,b
  5388  000F8E  0102               	movlb	2	; () banked
  5389  000F90  6FAA               	movwf	main@rSV3ValveDelay& (0+255),b
  5390  000F92  0060  F7B4  F2AB   	movff	??_main+2,main@rSV3ValveDelay+1
  5391                           
  5392                           ; BSR set to: 2
  5393                           ;main.c: 913:                                     MonitorErrorClr(MON_SV3E);
  5394  000F98  0E40               	movlw	64
  5395  000F9A  ECCF  F03B         	call	_MonitorErrorClr
  5396                           
  5397                           ;main.c: 914:                                 } else {
  5398  000F9E  D305               	goto	l16471
  5399  000FA0                     l16397:
  5400                           
  5401                           ; BSR set to: 2
  5402                           ;main.c: 916:                                     MonitorErrorSet(MON_SV3E);
  5403  000FA0  0E40               	movlw	64
  5404  000FA2  ECC6  F03B         	call	_MonitorErrorSet
  5405  000FA6  D301               	goto	l16471
  5406  000FA8                     l16399:
  5407                           
  5408                           ; BSR set to: 2
  5409                           ;main.c: 922:                     MonitorErrorClr(MON_EPE);
  5410  000FA8  0E10               	movlw	16
  5411  000FAA  ECCF  F03B         	call	_MonitorErrorClr
  5412                           
  5413                           ; BSR set to: 1
  5414                           ;main.c: 923:                     if (LATAbits.LATA2) {
  5415  000FAE  A4BA               	btfss	186,2,c	;volatile
  5416  000FB0  D062               	goto	l16415
  5417                           
  5418                           ; BSR set to: 1
  5419                           ;main.c: 924:                         if (timeElapsedR(&rSubCycleTime, ((time_t) 15*1)))
      +                           {
  5420  000FB2  0EAC               	movlw	low main@rSubCycleTime
  5421  000FB4  0100               	movlb	0	; () banked
  5422  000FB6  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
  5423  000FB8  0E02               	movlw	high main@rSubCycleTime
  5424  000FBA  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  5425  000FBC  0E00               	movlw	0
  5426  000FBE  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
  5427  000FC0  0E0F               	movlw	15
  5428  000FC2  6F8E               	movwf	timeElapsedR@duration& (0+255),b
  5429  000FC4  EC83  F032         	call	_timeElapsedR	;wreg free
  5430  000FC8  0900               	iorlw	0
  5431  000FCA  B4D8               	btfsc	status,2,c
  5432  000FCC  D2EE               	goto	l16471
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;main.c: 925:                             LATAbits.LATA2 = 0;
  5436  000FCE  94BA               	bcf	186,2,c	;volatile
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;main.c: 926:                             rValveAcuationTstamp = timeGet();
  5440  000FD0  ECBD  F03B         	call	_timeGet	;wreg free
  5441  000FD4  0060  F230  F2B7   	movff	?_timeGet,main@rValveAcuationTstamp
  5442  000FDA  0060  F234  F2B8   	movff	?_timeGet+1,main@rValveAcuationTstamp+1
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;main.c: 927:                             aCaptGetResult(MainPSensor, &pInst);
  5446  000FE0  0ECB               	movlw	low main@pInst
  5447  000FE2  0101               	movlb	1	; () banked
  5448  000FE4  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5449  000FE6  0E02               	movlw	high main@pInst
  5450  000FE8  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5451  000FEA  0E00               	movlw	0
  5452  000FEC  ECB9  F020         	call	_aCaptGetResult
  5453                           
  5454                           ;main.c: 928:                             printf ("PE VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  5455  000FF0  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  5456  000FF6  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  5457  000FFC  0E00               	movlw	0
  5458  000FFE  0100               	movlb	0	; () banked
  5459  001000  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5460  001002  0E0A               	movlw	10
  5461  001004  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5462  001006  EC40  F039         	call	___wmul	;wreg free
  5463  00100A  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5464  001010  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5465  001016  0E00               	movlw	0
  5466  001018  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5467  00101A  0E25               	movlw	37
  5468  00101C  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5469  00101E  EC29  F02F         	call	___awdiv	;wreg free
  5470  001022  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  5471  001028  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;main.c: 928:                             printf ("PE VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1));
  5475  00102E  0ED4               	movlw	low STR_43
  5476  001030  0101               	movlb	1	; () banked
  5477  001032  6FA6               	movwf	printf@fmt& (0+255),b
  5478  001034  0EFD               	movlw	high STR_43
  5479  001036  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5480  001038  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  5481  00103E  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  5482  001044  ECBD  F03B         	call	_timeGet	;wreg free
  5483  001048  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  5484  00104E  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  5485  001054  ECD8  F037         	call	_timeDiff	;wreg free
  5486  001058  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  5487  00105E  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  5488  001064  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  5489  00106A  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  5490  001070  EC84  F039         	call	_printf	;wreg free
  5491  001074  D29A               	goto	l16471
  5492  001076                     l16415:
  5493                           
  5494                           ; BSR set to: 1
  5495  001076  0ECB               	movlw	low main@pInst
  5496  001078  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5497  00107A  0E02               	movlw	high main@pInst
  5498  00107C  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5499  00107E  0E00               	movlw	0
  5500  001080  ECB9  F020         	call	_aCaptGetResult
  5501  001084  0900               	iorlw	0
  5502  001086  B4D8               	btfsc	status,2,c
  5503  001088  D290               	goto	l16471
  5504                           
  5505                           ;main.c: 931:                         if (OSCheck) {
  5506  00108A  0102               	movlb	2	; () banked
  5507  00108C  51B2               	movf	main@OSCheck& (0+255),w,b
  5508  00108E  B4D8               	btfsc	status,2,c
  5509  001090  D0BC               	goto	l16441
  5510                           
  5511                           ; BSR set to: 2
  5512                           ;main.c: 932:                             if (timeElapsed(rValveAcuationTstamp, ((time_t
      +                          ) 350*1) + rSV2ValveDelay)) {
  5513  001092  0060  FADC  F08C   	movff	main@rValveAcuationTstamp,timeElapsed@prevTime
  5514  001098  0060  FAE0  F08D   	movff	main@rValveAcuationTstamp+1,timeElapsed@prevTime+1
  5515  00109E  0E5E               	movlw	94
  5516  0010A0  25BD               	addwf	main@rSV2ValveDelay& (0+255),w,b
  5517  0010A2  0100               	movlb	0	; () banked
  5518  0010A4  6F8E               	movwf	timeElapsed@duration& (0+255),b
  5519  0010A6  0E01               	movlw	1
  5520  0010A8  0102               	movlb	2	; () banked
  5521  0010AA  21BE               	addwfc	(main@rSV2ValveDelay+1)& (0+255),w,b
  5522  0010AC  0100               	movlb	0	; () banked
  5523  0010AE  6F8F               	movwf	(timeElapsed@duration+1)& (0+255),b
  5524  0010B0  EC3C  F038         	call	_timeElapsed	;wreg free
  5525  0010B4  0900               	iorlw	0
  5526  0010B6  B4D8               	btfsc	status,2,c
  5527  0010B8  D278               	goto	l16471
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;main.c: 934:                                 aCaptGetResult(Flt0PSensor, &pAvgUShort);
  5531  0010BA  0EC3               	movlw	low main@pAvgUShort
  5532  0010BC  0101               	movlb	1	; () banked
  5533  0010BE  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5534  0010C0  0E02               	movlw	high main@pAvgUShort
  5535  0010C2  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5536  0010C4  0E03               	movlw	3
  5537  0010C6  ECB9  F020         	call	_aCaptGetResult
  5538                           
  5539                           ;main.c: 935:                                 pPlateau = pAvgUShort;
  5540  0010CA  0060  FB0C  F2B0   	movff	main@pAvgUShort,main@pPlateau
  5541  0010D0  0060  FB10  F2B1   	movff	main@pAvgUShort+1,main@pPlateau+1
  5542                           
  5543                           ;main.c: 937:                                 pTmp = pPlateau - pValveActuation;
  5544  0010D6  0102               	movlb	2	; () banked
  5545  0010D8  519F               	movf	main@pValveActuation& (0+255),w,b
  5546  0010DA  5DB0               	subwf	main@pPlateau& (0+255),w,b
  5547  0010DC  6FBF               	movwf	main@pTmp& (0+255),b
  5548  0010DE  51A0               	movf	(main@pValveActuation+1)& (0+255),w,b
  5549  0010E0  59B1               	subwfb	(main@pPlateau+1)& (0+255),w,b
  5550  0010E2  6FC0               	movwf	(main@pTmp+1)& (0+255),b
  5551                           
  5552                           ; BSR set to: 2
  5553                           ;main.c: 938:                                 pExpOS = (3 * pExpOS + pTmp) / 4;
  5554  0010E4  0060  FAD4  F084   	movff	main@pExpOS,___wmul@multiplier
  5555  0010EA  0060  FAD8  F085   	movff	main@pExpOS+1,___wmul@multiplier+1
  5556  0010F0  0E00               	movlw	0
  5557  0010F2  0100               	movlb	0	; () banked
  5558  0010F4  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5559  0010F6  0E03               	movlw	3
  5560  0010F8  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5561  0010FA  EC40  F039         	call	___wmul	;wreg free
  5562  0010FE  0102               	movlb	2	; () banked
  5563  001100  51BF               	movf	main@pTmp& (0+255),w,b
  5564  001102  0100               	movlb	0	; () banked
  5565  001104  2584               	addwf	?___wmul& (0+255),w,b
  5566  001106  6F8A               	movwf	___awdiv@dividend& (0+255),b
  5567  001108  0102               	movlb	2	; () banked
  5568  00110A  51C0               	movf	(main@pTmp+1)& (0+255),w,b
  5569  00110C  0100               	movlb	0	; () banked
  5570  00110E  2185               	addwfc	(?___wmul+1)& (0+255),w,b
  5571  001110  6F8B               	movwf	(___awdiv@dividend+1)& (0+255),b
  5572  001112  0E00               	movlw	0
  5573  001114  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5574  001116  0E04               	movlw	4
  5575  001118  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5576  00111A  EC29  F02F         	call	___awdiv	;wreg free
  5577  00111E  0060  F228  F2B5   	movff	?___awdiv,main@pExpOS
  5578  001124  0060  F22C  F2B6   	movff	?___awdiv+1,main@pExpOS+1
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;main.c: 940:                                 aCaptRstFlt(Flt2PSensor);
  5582  00112A  0E05               	movlw	5
  5583  00112C  ECD6  F028         	call	_aCaptRstFlt
  5584                           
  5585                           ; BSR set to: 57
  5586                           ;main.c: 941:                                 aCaptRstFlt(Flt3PSensor);
  5587  001130  0E06               	movlw	6
  5588  001132  ECD6  F028         	call	_aCaptRstFlt
  5589                           
  5590                           ; BSR set to: 57
  5591                           ;main.c: 942:                                 OSCheck = 0;
  5592  001136  0E00               	movlw	0
  5593  001138  0102               	movlb	2	; () banked
  5594  00113A  6FB2               	movwf	main@OSCheck& (0+255),b
  5595                           
  5596                           ; BSR set to: 2
  5597                           ;main.c: 943:                                 printf ("PE OSC T %d - Pi %d P0 %d\n", tim
      +                          eDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * pAv
      +                          gUShort) / ((int16_t) ((0.045*4096+2)/5)*1));
  5598  00113C  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  5599  001142  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  5600  001148  0E00               	movlw	0
  5601  00114A  0100               	movlb	0	; () banked
  5602  00114C  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5603  00114E  0E0A               	movlw	10
  5604  001150  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5605  001152  EC40  F039         	call	___wmul	;wreg free
  5606  001156  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5607  00115C  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5608  001162  0E00               	movlw	0
  5609  001164  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5610  001166  0E25               	movlw	37
  5611  001168  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5612  00116A  EC29  F02F         	call	___awdiv	;wreg free
  5613  00116E  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  5614  001174  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;main.c: 943:                                 printf ("PE OSC T %d - Pi %d P0 %d\n", tim
      +                          eDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * pAv
      +                          gUShort) / ((int16_t) ((0.045*4096+2)/5)*1));
  5618  00117A  0060  FB0C  F084   	movff	main@pAvgUShort,___wmul@multiplier
  5619  001180  0060  FB10  F085   	movff	main@pAvgUShort+1,___wmul@multiplier+1
  5620  001186  0E00               	movlw	0
  5621  001188  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5622  00118A  0E0A               	movlw	10
  5623  00118C  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5624  00118E  EC40  F039         	call	___wmul	;wreg free
  5625  001192  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5626  001198  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5627  00119E  0E00               	movlw	0
  5628  0011A0  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5629  0011A2  0E25               	movlw	37
  5630  0011A4  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5631  0011A6  EC29  F02F         	call	___awdiv	;wreg free
  5632  0011AA  0060  F228  F2BB   	movff	?___awdiv,_main$4738
  5633  0011B0  0060  F22C  F2BC   	movff	?___awdiv+1,_main$4738+1
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;main.c: 943:                                 printf ("PE OSC T %d - Pi %d P0 %d\n", tim
      +                          eDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * pAv
      +                          gUShort) / ((int16_t) ((0.045*4096+2)/5)*1));
  5637  0011B6  0E4A               	movlw	low STR_44
  5638  0011B8  0101               	movlb	1	; () banked
  5639  0011BA  6FA6               	movwf	printf@fmt& (0+255),b
  5640  0011BC  0EFD               	movlw	high STR_44
  5641  0011BE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5642  0011C0  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  5643  0011C6  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  5644  0011CC  ECBD  F03B         	call	_timeGet	;wreg free
  5645  0011D0  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  5646  0011D6  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  5647  0011DC  ECD8  F037         	call	_timeDiff	;wreg free
  5648  0011E0  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  5649  0011E6  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  5650  0011EC  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  5651  0011F2  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  5652  0011F8  0060  FAEC  F1AC   	movff	_main$4738,?_printf+6
  5653  0011FE  0060  FAF0  F1AD   	movff	_main$4738+1,?_printf+7
  5654  001204  EC84  F039         	call	_printf	;wreg free
  5655  001208  D1D0               	goto	l16471
  5656  00120A                     l16441:
  5657                           
  5658                           ; BSR set to: 2
  5659                           ;main.c: 949:                             aCaptGetResult(Flt2PSensor, &bdP1);
  5660  00120A  0EC1               	movlw	low main@bdP1
  5661  00120C  0101               	movlb	1	; () banked
  5662  00120E  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5663  001210  0E02               	movlw	high main@bdP1
  5664  001212  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5665  001214  0E05               	movlw	5
  5666  001216  ECB9  F020         	call	_aCaptGetResult
  5667                           
  5668                           ;main.c: 950:                             aCaptGetResult(Flt3PSensor, &bdP2);
  5669  00121A  0EB3               	movlw	low main@bdP2
  5670  00121C  0101               	movlb	1	; () banked
  5671  00121E  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5672  001220  0E02               	movlw	high main@bdP2
  5673  001222  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5674  001224  0E06               	movlw	6
  5675  001226  ECB9  F020         	call	_aCaptGetResult
  5676                           
  5677                           ;main.c: 951:                             if (((bdP1 + ((int16_t) ((0.045*4096+2)/5)*0.5
      +                          )) < bdP2) || (keyPeek() == 4)) {
  5678  00122A  0E00               	movlw	0
  5679  00122C  0100               	movlb	0	; () banked
  5680  00122E  6F96               	movwf	___fladd@a& (0+255),b
  5681  001230  0E00               	movlw	0
  5682  001232  6F97               	movwf	(___fladd@a+1)& (0+255),b
  5683  001234  0E94               	movlw	148
  5684  001236  6F98               	movwf	(___fladd@a+2)& (0+255),b
  5685  001238  0E41               	movlw	65
  5686  00123A  6F99               	movwf	(___fladd@a+3)& (0+255),b
  5687  00123C  0060  FB04  F084   	movff	main@bdP1,___xxtofl@val
  5688  001242  0060  FB08  F085   	movff	main@bdP1+1,___xxtofl@val+1
  5689  001248  0E00               	movlw	0
  5690  00124A  BF85               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5691  00124C  0EFF               	movlw	-1
  5692  00124E  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
  5693  001250  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
  5694  001252  0E01               	movlw	1
  5695  001254  EC97  F025         	call	___xxtofl
  5696  001258  0060  F210  F092   	movff	?___xxtofl,___fladd@b
  5697  00125E  0060  F214  F093   	movff	?___xxtofl+1,___fladd@b+1
  5698  001264  0060  F218  F094   	movff	?___xxtofl+2,___fladd@b+2
  5699  00126A  0060  F21C  F095   	movff	?___xxtofl+3,___fladd@b+3
  5700  001270  EC6F  F019         	call	___fladd	;wreg free
  5701  001274  0060  F248  F0A2   	movff	?___fladd,___flge@ff1
  5702  00127A  0060  F24C  F0A3   	movff	?___fladd+1,___flge@ff1+1
  5703  001280  0060  F250  F0A4   	movff	?___fladd+2,___flge@ff1+2
  5704  001286  0060  F254  F0A5   	movff	?___fladd+3,___flge@ff1+3
  5705  00128C  0060  FACC  F084   	movff	main@bdP2,___xxtofl@val
  5706  001292  0060  FAD0  F085   	movff	main@bdP2+1,___xxtofl@val+1
  5707  001298  0E00               	movlw	0
  5708  00129A  BF85               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5709  00129C  0EFF               	movlw	-1
  5710  00129E  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
  5711  0012A0  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
  5712  0012A2  0E01               	movlw	1
  5713  0012A4  EC97  F025         	call	___xxtofl
  5714  0012A8  0060  F210  F0A6   	movff	?___xxtofl,___flge@ff2
  5715  0012AE  0060  F214  F0A7   	movff	?___xxtofl+1,___flge@ff2+1
  5716  0012B4  0060  F218  F0A8   	movff	?___xxtofl+2,___flge@ff2+2
  5717  0012BA  0060  F21C  F0A9   	movff	?___xxtofl+3,___flge@ff2+3
  5718  0012C0  EC42  F02A         	call	___flge	;wreg free
  5719  0012C4  A0D8               	btfss	status,0,c
  5720  0012C6  D005               	goto	u16760
  5721                           
  5722                           ; BSR set to: 0
  5723  0012C8  ECB3  F032         	call	_keyPeek	;wreg free
  5724  0012CC  0A04               	xorlw	4
  5725  0012CE  A4D8               	btfss	status,2,c
  5726  0012D0  D097               	goto	l16457
  5727  0012D2                     u16760:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;main.c: 953:                                 printf ("BD VO T %d - Pi %d P50 %d P2000 %
      +                          d\n", timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), 
      +                          (10 * bdP1) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * bdP1) / ((int16_t) ((0.045*4096+2)
      +                          /5)*1));
  5731  0012D2  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  5732  0012D8  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  5733  0012DE  0E00               	movlw	0
  5734  0012E0  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5735  0012E2  0E0A               	movlw	10
  5736  0012E4  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5737  0012E6  EC40  F039         	call	___wmul	;wreg free
  5738  0012EA  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5739  0012F0  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5740  0012F6  0E00               	movlw	0
  5741  0012F8  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5742  0012FA  0E25               	movlw	37
  5743  0012FC  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5744  0012FE  EC29  F02F         	call	___awdiv	;wreg free
  5745  001302  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  5746  001308  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  5747                           
  5748                           ;main.c: 953:                                 printf ("BD VO T %d - Pi %d P50 %d P2000 %
      +                          d\n", timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), 
      +                          (10 * bdP1) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * bdP1) / ((int16_t) ((0.045*4096+2)
      +                          /5)*1));
  5749  00130E  0060  FB04  F084   	movff	main@bdP1,___wmul@multiplier
  5750  001314  0060  FB08  F085   	movff	main@bdP1+1,___wmul@multiplier+1
  5751  00131A  0E00               	movlw	0
  5752  00131C  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5753  00131E  0E0A               	movlw	10
  5754  001320  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5755  001322  EC40  F039         	call	___wmul	;wreg free
  5756  001326  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5757  00132C  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5758  001332  0E00               	movlw	0
  5759  001334  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5760  001336  0E25               	movlw	37
  5761  001338  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5762  00133A  EC29  F02F         	call	___awdiv	;wreg free
  5763  00133E  0060  F228  F2BB   	movff	?___awdiv,_main$4738
  5764  001344  0060  F22C  F2BC   	movff	?___awdiv+1,_main$4738+1
  5765                           
  5766                           ;main.c: 953:                                 printf ("BD VO T %d - Pi %d P50 %d P2000 %
      +                          d\n", timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), 
      +                          (10 * bdP1) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * bdP1) / ((int16_t) ((0.045*4096+2)
      +                          /5)*1));
  5767  00134A  0060  FB04  F084   	movff	main@bdP1,___wmul@multiplier
  5768  001350  0060  FB08  F085   	movff	main@bdP1+1,___wmul@multiplier+1
  5769  001356  0E00               	movlw	0
  5770  001358  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5771  00135A  0E0A               	movlw	10
  5772  00135C  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5773  00135E  EC40  F039         	call	___wmul	;wreg free
  5774  001362  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5775  001368  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5776  00136E  0E00               	movlw	0
  5777  001370  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5778  001372  0E25               	movlw	37
  5779  001374  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5780  001376  EC29  F02F         	call	___awdiv	;wreg free
  5781  00137A  0060  F228  F2A4   	movff	?___awdiv,_main$4739
  5782  001380  0060  F22C  F2A5   	movff	?___awdiv+1,_main$4739+1
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;main.c: 953:                                 printf ("BD VO T %d - Pi %d P50 %d P2000 %
      +                          d\n", timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), 
      +                          (10 * bdP1) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * bdP1) / ((int16_t) ((0.045*4096+2)
      +                          /5)*1));
  5786  001386  0EEE               	movlw	low STR_45
  5787  001388  0101               	movlb	1	; () banked
  5788  00138A  6FA6               	movwf	printf@fmt& (0+255),b
  5789  00138C  0EFC               	movlw	high STR_45
  5790  00138E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5791  001390  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  5792  001396  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  5793  00139C  ECBD  F03B         	call	_timeGet	;wreg free
  5794  0013A0  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  5795  0013A6  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  5796  0013AC  ECD8  F037         	call	_timeDiff	;wreg free
  5797  0013B0  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  5798  0013B6  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  5799  0013BC  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  5800  0013C2  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  5801  0013C8  0060  FAEC  F1AC   	movff	_main$4738,?_printf+6
  5802  0013CE  0060  FAF0  F1AD   	movff	_main$4738+1,?_printf+7
  5803  0013D4  0060  FA90  F1AE   	movff	_main$4739,?_printf+8
  5804  0013DA  0060  FA94  F1AF   	movff	_main$4739+1,?_printf+9
  5805  0013E0  EC84  F039         	call	_printf	;wreg free
  5806                           
  5807                           ;main.c: 954:                                 LATDbits.LATD6 = 1;
  5808  0013E4  8CBD               	bsf	189,6,c	;volatile
  5809                           
  5810                           ;main.c: 955:                                 rCycleTime = timeGet();
  5811  0013E6  ECBD  F03B         	call	_timeGet	;wreg free
  5812  0013EA  0060  F230  F2C9   	movff	?_timeGet,main@rCycleTime
  5813  0013F0  0060  F234  F2CA   	movff	?_timeGet+1,main@rCycleTime+1
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;main.c: 956:                                 bRateUpdt(1);
  5817  0013F6  0E01               	movlw	1
  5818  0013F8  EC11  F02C         	call	_bRateUpdt
  5819                           
  5820                           ;main.c: 957:                                 break;
  5821  0013FC  EFE4  F000         	goto	l16103
  5822  001400                     l16457:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;main.c: 961:                             if (timeElapsed(rValveAcuationTstamp, 32 * rSV
      +                          2ValveDelay / 16) && (bdP1 < (intPEEP - ((int16_t) ((0.045*4096+2)/5)*2.5)))) {
  5826  001400  0060  FADC  F08C   	movff	main@rValveAcuationTstamp,timeElapsed@prevTime
  5827  001406  0060  FAE0  F08D   	movff	main@rValveAcuationTstamp+1,timeElapsed@prevTime+1
  5828  00140C  0060  FAF4  F1EB   	movff	main@rSV2ValveDelay,??_main
  5829  001412  0060  FAF8  F1EC   	movff	main@rSV2ValveDelay+1,??_main+1
  5830  001418  90D8               	bcf	status,0,c
  5831  00141A  0101               	movlb	1	; () banked
  5832  00141C  37EB               	rlcf	??_main& (0+255),f,b
  5833  00141E  37EC               	rlcf	(??_main+1)& (0+255),f,b
  5834  001420  0EFF               	movlw	255
  5835  001422  15EB               	andwf	??_main& (0+255),w,b
  5836  001424  0100               	movlb	0	; () banked
  5837  001426  6F8E               	movwf	timeElapsed@duration& (0+255),b
  5838  001428  0E0F               	movlw	15
  5839  00142A  0101               	movlb	1	; () banked
  5840  00142C  15EC               	andwf	(??_main+1)& (0+255),w,b
  5841  00142E  0100               	movlb	0	; () banked
  5842  001430  6F8F               	movwf	(timeElapsed@duration+1)& (0+255),b
  5843  001432  EC3C  F038         	call	_timeElapsed	;wreg free
  5844  001436  0900               	iorlw	0
  5845  001438  B4D8               	btfsc	status,2,c
  5846  00143A  D0B7               	goto	l16471
  5847                           
  5848                           ; BSR set to: 0
  5849  00143C  0060  FB04  F084   	movff	main@bdP1,___xxtofl@val
  5850  001442  0060  FB08  F085   	movff	main@bdP1+1,___xxtofl@val+1
  5851  001448  0E00               	movlw	0
  5852  00144A  BF85               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5853  00144C  0EFF               	movlw	-1
  5854  00144E  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
  5855  001450  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
  5856  001452  0E01               	movlw	1
  5857  001454  EC97  F025         	call	___xxtofl
  5858  001458  0060  F210  F0A2   	movff	?___xxtofl,___flge@ff1
  5859  00145E  0060  F214  F0A3   	movff	?___xxtofl+1,___flge@ff1+1
  5860  001464  0060  F218  F0A4   	movff	?___xxtofl+2,___flge@ff1+2
  5861  00146A  0060  F21C  F0A5   	movff	?___xxtofl+3,___flge@ff1+3
  5862  001470  0E00               	movlw	0
  5863  001472  6F96               	movwf	___fladd@a& (0+255),b
  5864  001474  0E00               	movlw	0
  5865  001476  6F97               	movwf	(___fladd@a+1)& (0+255),b
  5866  001478  0EB9               	movlw	185
  5867  00147A  6F98               	movwf	(___fladd@a+2)& (0+255),b
  5868  00147C  0EC2               	movlw	194
  5869  00147E  6F99               	movwf	(___fladd@a+3)& (0+255),b
  5870  001480  0060  F4FC  F084   	movff	_intPEEP,___xxtofl@val
  5871  001486  0060  F500  F085   	movff	_intPEEP+1,___xxtofl@val+1
  5872  00148C  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
  5873  00148E  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
  5874  001490  0E00               	movlw	0
  5875  001492  EC97  F025         	call	___xxtofl
  5876  001496  0060  F210  F092   	movff	?___xxtofl,___fladd@b
  5877  00149C  0060  F214  F093   	movff	?___xxtofl+1,___fladd@b+1
  5878  0014A2  0060  F218  F094   	movff	?___xxtofl+2,___fladd@b+2
  5879  0014A8  0060  F21C  F095   	movff	?___xxtofl+3,___fladd@b+3
  5880  0014AE  EC6F  F019         	call	___fladd	;wreg free
  5881  0014B2  0060  F248  F0A6   	movff	?___fladd,___flge@ff2
  5882  0014B8  0060  F24C  F0A7   	movff	?___fladd+1,___flge@ff2+1
  5883  0014BE  0060  F250  F0A8   	movff	?___fladd+2,___flge@ff2+2
  5884  0014C4  0060  F254  F0A9   	movff	?___fladd+3,___flge@ff2+3
  5885  0014CA  EC42  F02A         	call	___flge	;wreg free
  5886  0014CE  B0D8               	btfsc	status,0,c
  5887  0014D0  D06C               	goto	l16471
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;main.c: 962:                                 LATAbits.LATA2 = 1;
  5891  0014D2  84BA               	bsf	186,2,c	;volatile
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;main.c: 963:                                 rSubCycleTime = timeGet();
  5895  0014D4  ECBD  F03B         	call	_timeGet	;wreg free
  5896  0014D8  0060  F230  F2AC   	movff	?_timeGet,main@rSubCycleTime
  5897  0014DE  0060  F234  F2AD   	movff	?_timeGet+1,main@rSubCycleTime+1
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;main.c: 964:                                 printf ("PE VO T %d - Pi %d\n", timeDiff(r
      +                          CycleTime, rSubCycleTime), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * bdP1) 
      +                          / ((int16_t) ((0.045*4096+2)/5)*1));
  5901  0014E4  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  5902  0014EA  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  5903  0014F0  0E00               	movlw	0
  5904  0014F2  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5905  0014F4  0E0A               	movlw	10
  5906  0014F6  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5907  0014F8  EC40  F039         	call	___wmul	;wreg free
  5908  0014FC  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5909  001502  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5910  001508  0E00               	movlw	0
  5911  00150A  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5912  00150C  0E25               	movlw	37
  5913  00150E  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5914  001510  EC29  F02F         	call	___awdiv	;wreg free
  5915  001514  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  5916  00151A  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;main.c: 964:                                 printf ("PE VO T %d - Pi %d\n", timeDiff(r
      +                          CycleTime, rSubCycleTime), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * bdP1) 
      +                          / ((int16_t) ((0.045*4096+2)/5)*1));
  5920  001520  0060  FB04  F084   	movff	main@bdP1,___wmul@multiplier
  5921  001526  0060  FB08  F085   	movff	main@bdP1+1,___wmul@multiplier+1
  5922  00152C  0E00               	movlw	0
  5923  00152E  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5924  001530  0E0A               	movlw	10
  5925  001532  6F86               	movwf	___wmul@multiplicand& (0+255),b
  5926  001534  EC40  F039         	call	___wmul	;wreg free
  5927  001538  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  5928  00153E  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  5929  001544  0E00               	movlw	0
  5930  001546  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5931  001548  0E25               	movlw	37
  5932  00154A  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5933  00154C  EC29  F02F         	call	___awdiv	;wreg free
  5934  001550  0060  F228  F2BB   	movff	?___awdiv,_main$4738
  5935  001556  0060  F22C  F2BC   	movff	?___awdiv+1,_main$4738+1
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;main.c: 964:                                 printf ("PE VO T %d - Pi %d\n", timeDiff(r
      +                          CycleTime, rSubCycleTime), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * bdP1) 
      +                          / ((int16_t) ((0.045*4096+2)/5)*1));
  5939  00155C  0EFC               	movlw	low STR_46
  5940  00155E  0101               	movlb	1	; () banked
  5941  001560  6FA6               	movwf	printf@fmt& (0+255),b
  5942  001562  0EFD               	movlw	high STR_46
  5943  001564  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5944  001566  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  5945  00156C  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  5946  001572  0060  FAB0  F090   	movff	main@rSubCycleTime,timeDiff@endT
  5947  001578  0060  FAB4  F091   	movff	main@rSubCycleTime+1,timeDiff@endT+1
  5948  00157E  ECD8  F037         	call	_timeDiff	;wreg free
  5949  001582  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  5950  001588  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  5951  00158E  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  5952  001594  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  5953  00159A  0060  FAEC  F1AC   	movff	_main$4738,?_printf+6
  5954  0015A0  0060  FAF0  F1AD   	movff	_main$4738+1,?_printf+7
  5955  0015A6  EC84  F039         	call	_printf	;wreg free
  5956  0015AA                     l16471:
  5957                           
  5958                           ;main.c: 970:                 screenMng();
  5959  0015AA  EC8B  F017         	call	_screenMng	;wreg free
  5960                           
  5961                           ;main.c: 971:                 MenuMng();
  5962  0015AE  EC7B  F015         	call	_MenuMng	;wreg free
  5963                           
  5964                           ;main.c: 974:             if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  5965  0015B2  0E9D               	movlw	low main@printTime
  5966  0015B4  0100               	movlb	0	; () banked
  5967  0015B6  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
  5968  0015B8  0E02               	movlw	high main@printTime
  5969  0015BA  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  5970  0015BC  0E00               	movlw	0
  5971  0015BE  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
  5972  0015C0  0E14               	movlw	20
  5973  0015C2  6F8E               	movwf	timeElapsedR@duration& (0+255),b
  5974  0015C4  EC83  F032         	call	_timeElapsedR	;wreg free
  5975  0015C8  0900               	iorlw	0
  5976  0015CA  B4D8               	btfsc	status,2,c
  5977  0015CC  EF81  F006         	goto	l16333
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;main.c: 975:                 aCaptGetResult(MainPSensor, &pInst);
  5981  0015D0  0ECB               	movlw	low main@pInst
  5982  0015D2  0101               	movlb	1	; () banked
  5983  0015D4  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5984  0015D6  0E02               	movlw	high main@pInst
  5985  0015D8  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5986  0015DA  0E00               	movlw	0
  5987  0015DC  ECB9  F020         	call	_aCaptGetResult
  5988                           
  5989                           ;main.c: 976:                 aCaptGetResult(Flt1PSensor, &pAvgShort);
  5990  0015E0  0EC7               	movlw	low main@pAvgShort
  5991  0015E2  0101               	movlb	1	; () banked
  5992  0015E4  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
  5993  0015E6  0E02               	movlw	high main@pAvgShort
  5994  0015E8  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5995  0015EA  0E04               	movlw	4
  5996  0015EC  ECB9  F020         	call	_aCaptGetResult
  5997                           
  5998                           ;main.c: 977:                 pNext = rPressurePredict(rSV2ValveDelay, pInst, pAvgShort)
      +                          ;
  5999  0015F0  0060  FAF4  F09E   	movff	main@rSV2ValveDelay,rPressurePredict@delay
  6000  0015F6  0060  FAF8  F09F   	movff	main@rSV2ValveDelay+1,rPressurePredict@delay+1
  6001  0015FC  0060  FB2C  F0A0   	movff	main@pInst,rPressurePredict@pInst
  6002  001602  0060  FB30  F0A1   	movff	main@pInst+1,rPressurePredict@pInst+1
  6003  001608  0060  FB1C  F0A2   	movff	main@pAvgShort,rPressurePredict@pAvgShort
  6004  00160E  0060  FB20  F0A3   	movff	main@pAvgShort+1,rPressurePredict@pAvgShort+1
  6005  001614  EC05  F02B         	call	_rPressurePredict	;wreg free
  6006  001618  0060  F278  F2AE   	movff	?_rPressurePredict,main@pNext
  6007  00161E  0060  F27C  F2AF   	movff	?_rPressurePredict+1,main@pNext+1
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;main.c: 978:                 printf ("PE T %d - Pi %d Pn %d Pd %d. R %d Pep %d OS %d\n"
      +                          , timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 
      +                          * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAvgShort)) / ((int16_t) (
      +                          (0.045*4096+2)/5)*1), rSV3ValveDelay, (10 * pPlateau) / ((int16_t) ((0.045*4096+2)/5)*1)
      +                          , (10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  6011  001624  0060  FB2C  F084   	movff	main@pInst,___wmul@multiplier
  6012  00162A  0060  FB30  F085   	movff	main@pInst+1,___wmul@multiplier+1
  6013  001630  0E00               	movlw	0
  6014  001632  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6015  001634  0E0A               	movlw	10
  6016  001636  6F86               	movwf	___wmul@multiplicand& (0+255),b
  6017  001638  EC40  F039         	call	___wmul	;wreg free
  6018  00163C  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  6019  001642  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  6020  001648  0E00               	movlw	0
  6021  00164A  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6022  00164C  0E25               	movlw	37
  6023  00164E  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6024  001650  EC29  F02F         	call	___awdiv	;wreg free
  6025  001654  0060  F228  F2C5   	movff	?___awdiv,_main$4737
  6026  00165A  0060  F22C  F2C6   	movff	?___awdiv+1,_main$4737+1
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;main.c: 978:                 printf ("PE T %d - Pi %d Pn %d Pd %d. R %d Pep %d OS %d\n"
      +                          , timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 
      +                          * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAvgShort)) / ((int16_t) (
      +                          (0.045*4096+2)/5)*1), rSV3ValveDelay, (10 * pPlateau) / ((int16_t) ((0.045*4096+2)/5)*1)
      +                          , (10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  6030  001660  0060  FAB8  F084   	movff	main@pNext,___wmul@multiplier
  6031  001666  0060  FABC  F085   	movff	main@pNext+1,___wmul@multiplier+1
  6032  00166C  0E00               	movlw	0
  6033  00166E  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6034  001670  0E0A               	movlw	10
  6035  001672  6F86               	movwf	___wmul@multiplicand& (0+255),b
  6036  001674  EC40  F039         	call	___wmul	;wreg free
  6037  001678  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  6038  00167E  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  6039  001684  0E00               	movlw	0
  6040  001686  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6041  001688  0E25               	movlw	37
  6042  00168A  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6043  00168C  EC29  F02F         	call	___awdiv	;wreg free
  6044  001690  0060  F228  F2BB   	movff	?___awdiv,_main$4738
  6045  001696  0060  F22C  F2BC   	movff	?___awdiv+1,_main$4738+1
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;main.c: 978:                 printf ("PE T %d - Pi %d Pn %d Pd %d. R %d Pep %d OS %d\n"
      +                          , timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 
      +                          * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAvgShort)) / ((int16_t) (
      +                          (0.045*4096+2)/5)*1), rSV3ValveDelay, (10 * pPlateau) / ((int16_t) ((0.045*4096+2)/5)*1)
      +                          , (10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  6049  00169C  0102               	movlb	2	; () banked
  6050  00169E  51C7               	movf	main@pAvgShort& (0+255),w,b
  6051  0016A0  5DCB               	subwf	main@pInst& (0+255),w,b
  6052  0016A2  0100               	movlb	0	; () banked
  6053  0016A4  6F84               	movwf	___wmul@multiplier& (0+255),b
  6054  0016A6  0102               	movlb	2	; () banked
  6055  0016A8  51C8               	movf	(main@pAvgShort+1)& (0+255),w,b
  6056  0016AA  59CC               	subwfb	(main@pInst+1)& (0+255),w,b
  6057  0016AC  0100               	movlb	0	; () banked
  6058  0016AE  6F85               	movwf	(___wmul@multiplier+1)& (0+255),b
  6059  0016B0  0E00               	movlw	0
  6060  0016B2  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6061  0016B4  0E0A               	movlw	10
  6062  0016B6  6F86               	movwf	___wmul@multiplicand& (0+255),b
  6063  0016B8  EC40  F039         	call	___wmul	;wreg free
  6064  0016BC  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  6065  0016C2  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  6066  0016C8  0E00               	movlw	0
  6067  0016CA  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6068  0016CC  0E25               	movlw	37
  6069  0016CE  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6070  0016D0  EC29  F02F         	call	___awdiv	;wreg free
  6071  0016D4  0060  F228  F2A4   	movff	?___awdiv,_main$4739
  6072  0016DA  0060  F22C  F2A5   	movff	?___awdiv+1,_main$4739+1
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;main.c: 978:                 printf ("PE T %d - Pi %d Pn %d Pd %d. R %d Pep %d OS %d\n"
      +                          , timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 
      +                          * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAvgShort)) / ((int16_t) (
      +                          (0.045*4096+2)/5)*1), rSV3ValveDelay, (10 * pPlateau) / ((int16_t) ((0.045*4096+2)/5)*1)
      +                          , (10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  6076  0016E0  0060  FAC0  F084   	movff	main@pPlateau,___wmul@multiplier
  6077  0016E6  0060  FAC4  F085   	movff	main@pPlateau+1,___wmul@multiplier+1
  6078  0016EC  0E00               	movlw	0
  6079  0016EE  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6080  0016F0  0E0A               	movlw	10
  6081  0016F2  6F86               	movwf	___wmul@multiplicand& (0+255),b
  6082  0016F4  EC40  F039         	call	___wmul	;wreg free
  6083  0016F8  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  6084  0016FE  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  6085  001704  0E00               	movlw	0
  6086  001706  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6087  001708  0E25               	movlw	37
  6088  00170A  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6089  00170C  EC29  F02F         	call	___awdiv	;wreg free
  6090  001710  0060  F228  F299   	movff	?___awdiv,_main$4740
  6091  001716  0060  F22C  F29A   	movff	?___awdiv+1,_main$4740+1
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;main.c: 978:                 printf ("PE T %d - Pi %d Pn %d Pd %d. R %d Pep %d OS %d\n"
      +                          , timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 
      +                          * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAvgShort)) / ((int16_t) (
      +                          (0.045*4096+2)/5)*1), rSV3ValveDelay, (10 * pPlateau) / ((int16_t) ((0.045*4096+2)/5)*1)
      +                          , (10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  6095  00171C  0060  FAD4  F084   	movff	main@pExpOS,___wmul@multiplier
  6096  001722  0060  FAD8  F085   	movff	main@pExpOS+1,___wmul@multiplier+1
  6097  001728  0E00               	movlw	0
  6098  00172A  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6099  00172C  0E0A               	movlw	10
  6100  00172E  6F86               	movwf	___wmul@multiplicand& (0+255),b
  6101  001730  EC40  F039         	call	___wmul	;wreg free
  6102  001734  0060  F210  F08A   	movff	?___wmul,___awdiv@dividend
  6103  00173A  0060  F214  F08B   	movff	?___wmul+1,___awdiv@dividend+1
  6104  001740  0E00               	movlw	0
  6105  001742  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6106  001744  0E25               	movlw	37
  6107  001746  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6108  001748  EC29  F02F         	call	___awdiv	;wreg free
  6109  00174C  0060  F228  F29B   	movff	?___awdiv,_main$4741
  6110  001752  0060  F22C  F29C   	movff	?___awdiv+1,_main$4741+1
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;main.c: 978:                 printf ("PE T %d - Pi %d Pn %d Pd %d. R %d Pep %d OS %d\n"
      +                          , timeDiff(rCycleTime, timeGet()), (10 * pInst) / ((int16_t) ((0.045*4096+2)/5)*1), (10 
      +                          * (pNext)) / ((int16_t) ((0.045*4096+2)/5)*1), (10 * (pInst - pAvgShort)) / ((int16_t) (
      +                          (0.045*4096+2)/5)*1), rSV3ValveDelay, (10 * pPlateau) / ((int16_t) ((0.045*4096+2)/5)*1)
      +                          , (10 * pExpOS) / ((int16_t) ((0.045*4096+2)/5)*1));
  6114  001758  0E73               	movlw	low STR_47
  6115  00175A  0101               	movlb	1	; () banked
  6116  00175C  6FA6               	movwf	printf@fmt& (0+255),b
  6117  00175E  0EFC               	movlw	high STR_47
  6118  001760  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6119  001762  0060  FB24  F08E   	movff	main@rCycleTime,timeDiff@startT
  6120  001768  0060  FB28  F08F   	movff	main@rCycleTime+1,timeDiff@startT+1
  6121  00176E  ECBD  F03B         	call	_timeGet	;wreg free
  6122  001772  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
  6123  001778  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
  6124  00177E  ECD8  F037         	call	_timeDiff	;wreg free
  6125  001782  0060  F238  F1A8   	movff	?_timeDiff,?_printf+2
  6126  001788  0060  F23C  F1A9   	movff	?_timeDiff+1,?_printf+3
  6127  00178E  0060  FB14  F1AA   	movff	_main$4737,?_printf+4
  6128  001794  0060  FB18  F1AB   	movff	_main$4737+1,?_printf+5
  6129  00179A  0060  FAEC  F1AC   	movff	_main$4738,?_printf+6
  6130  0017A0  0060  FAF0  F1AD   	movff	_main$4738+1,?_printf+7
  6131  0017A6  0060  FA90  F1AE   	movff	_main$4739,?_printf+8
  6132  0017AC  0060  FA94  F1AF   	movff	_main$4739+1,?_printf+9
  6133  0017B2  0060  FAA8  F1B0   	movff	main@rSV3ValveDelay,?_printf+10
  6134  0017B8  0060  FAAC  F1B1   	movff	main@rSV3ValveDelay+1,?_printf+11
  6135  0017BE  0060  FA64  F1B2   	movff	_main$4740,?_printf+12
  6136  0017C4  0060  FA68  F1B3   	movff	_main$4740+1,?_printf+13
  6137  0017CA  0060  FA6C  F1B4   	movff	_main$4741,?_printf+14
  6138  0017D0  0060  FA70  F1B5   	movff	_main$4741+1,?_printf+15
  6139  0017D6  EC84  F039         	call	_printf	;wreg free
  6140  0017DA  EF81  F006         	goto	l16333
  6141  0017DE                     __end_of_main:
  6142                           	opt callstack 0
  6143                           
  6144 ;; *************** function _vMeasureInit *****************
  6145 ;; Defined at:
  6146 ;;		line 33 in file "vMeasure.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 3F/1
  6157 ;;		On exit  : 3F/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:   14
  6167 ;; This function calls:
  6168 ;;		_TMR2_SetInterruptHandler
  6169 ;;		_TMR2_Start
  6170 ;; This function is called by:
  6171 ;;		_main
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text1
  6176  0073F6                     __ptext1:
  6177                           	opt callstack 0
  6178  0073F6                     _vMeasureInit:
  6179                           	opt callstack 16
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;vMeasure.c: 34:     volume = 0;
  6183                           
  6184                           ;incstack = 0
  6185  0073F6  0E00               	movlw	0
  6186  0073F8  6F24               	movwf	_volume& (0+255),b
  6187  0073FA  0E00               	movlw	0
  6188  0073FC  6F25               	movwf	(_volume+1)& (0+255),b
  6189  0073FE  0E00               	movlw	0
  6190  007400  6F26               	movwf	(_volume+2)& (0+255),b
  6191  007402  0E00               	movlw	0
  6192  007404  6F27               	movwf	(_volume+3)& (0+255),b
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;vMeasure.c: 35:     TMR2_SetInterruptHandler(vMeasureIsr);
  6196  007406  0E74               	movlw	low _vMeasureIsr
  6197  007408  0100               	movlb	0	; () banked
  6198  00740A  6F84               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  6199  00740C  0E5B               	movlw	high _vMeasureIsr
  6200  00740E  6F85               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6201  007410  EC2B  F03C         	call	_TMR2_SetInterruptHandler	;wreg free
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;vMeasure.c: 36:     TMR2_Start();
  6205  007414  ECFC  F03C         	call	_TMR2_Start	;wreg free
  6206                           
  6207                           ; BSR set to: 0
  6208  007418  0012               	return		;funcret
  6209  00741A                     __end_of_vMeasureInit:
  6210                           	opt callstack 0
  6211                           
  6212 ;; *************** function _TMR2_Start *****************
  6213 ;; Defined at:
  6214 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		None
  6223 ;; Tracked objects:
  6224 ;;		On entry : 3F/0
  6225 ;;		On exit  : 3F/0
  6226 ;;		Unchanged: 3F/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:   13
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_vMeasureInit
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text2
  6243  0079F8                     __ptext2:
  6244                           	opt callstack 0
  6245  0079F8                     _TMR2_Start:
  6246                           	opt callstack 16
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;incstack = 0
  6253  0079F8  8EAC               	bsf	172,7,c	;volatile
  6254                           
  6255                           ; BSR set to: 0
  6256  0079FA  0012               	return		;funcret
  6257  0079FC                     __end_of_TMR2_Start:
  6258                           	opt callstack 0
  6259                           
  6260 ;; *************** function _timeInit *****************
  6261 ;; Defined at:
  6262 ;;		line 5 in file "time.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;		None
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		cstack
  6271 ;; Tracked objects:
  6272 ;;		On entry : 3F/39
  6273 ;;		On exit  : 3F/39
  6274 ;;		Unchanged: 3E/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;Total ram usage:        0 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:   14
  6283 ;; This function calls:
  6284 ;;		_TMR0_StartTimer
  6285 ;;		_TMR1_StartTimer
  6286 ;; This function is called by:
  6287 ;;		_main
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text3
  6292  00793E                     __ptext3:
  6293                           	opt callstack 0
  6294  00793E                     _timeInit:
  6295                           	opt callstack 16
  6296                           
  6297                           ; BSR set to: 57
  6298                           ;time.c: 6:     TMR0_StartTimer();
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;incstack = 0
  6302  00793E  EC00  F03D         	call	_TMR0_StartTimer	;wreg free
  6303                           
  6304                           ;time.c: 7:     TMR1_StartTimer();
  6305  007942  ECFE  F03C         	call	_TMR1_StartTimer	;wreg free
  6306                           
  6307                           ; BSR set to: 57
  6308  007946  0012               	return		;funcret
  6309  007948                     __end_of_timeInit:
  6310                           	opt callstack 0
  6311                           
  6312 ;; *************** function _TMR1_StartTimer *****************
  6313 ;; Defined at:
  6314 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		None
  6323 ;; Tracked objects:
  6324 ;;		On entry : 3F/39
  6325 ;;		On exit  : 3F/39
  6326 ;;		Unchanged: 3E/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:   13
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_timeInit
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text4
  6343  0079FC                     __ptext4:
  6344                           	opt callstack 0
  6345  0079FC                     _TMR1_StartTimer:
  6346                           	opt callstack 16
  6347                           
  6348                           ; BSR set to: 57
  6349                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
  6350                           
  6351                           ; BSR set to: 57
  6352                           ;incstack = 0
  6353  0079FC  80B2               	bsf	178,0,c	;volatile
  6354                           
  6355                           ; BSR set to: 57
  6356  0079FE  0012               	return		;funcret
  6357  007A00                     __end_of_TMR1_StartTimer:
  6358                           	opt callstack 0
  6359                           
  6360 ;; *************** function _TMR0_StartTimer *****************
  6361 ;; Defined at:
  6362 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		None
  6371 ;; Tracked objects:
  6372 ;;		On entry : 3F/39
  6373 ;;		On exit  : 3F/39
  6374 ;;		Unchanged: 3E/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;Total ram usage:        0 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:   13
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_timeInit
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text5
  6391  007A00                     __ptext5:
  6392                           	opt callstack 0
  6393  007A00                     _TMR0_StartTimer:
  6394                           	opt callstack 16
  6395                           
  6396                           ; BSR set to: 57
  6397                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
  6398                           
  6399                           ; BSR set to: 57
  6400                           ;incstack = 0
  6401  007A00  8EB8               	bsf	184,7,c	;volatile
  6402                           
  6403                           ; BSR set to: 57
  6404  007A02  0012               	return		;funcret
  6405  007A04                     __end_of_TMR0_StartTimer:
  6406                           	opt callstack 0
  6407                           
  6408 ;; *************** function _screenMng *****************
  6409 ;; Defined at:
  6410 ;;		line 269 in file "menu.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/1
  6421 ;;		On exit  : 3E/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6426 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;Total ram usage:        2 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:   24
  6431 ;; This function calls:
  6432 ;;		_PrintStrBusy
  6433 ;;		_printf
  6434 ;;		_printstr
  6435 ;;		_setCursor
  6436 ;;		_sprintf
  6437 ;; This function is called by:
  6438 ;;		_main
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text6
  6443  002F16                     __ptext6:
  6444                           	opt callstack 0
  6445  002F16                     _screenMng:
  6446                           	opt callstack 6
  6447                           
  6448                           ;menu.c: 271:     if (lcdPrintTR && !PrintStrBusy()) {
  6449                           
  6450                           ; BSR set to: 57
  6451                           ;incstack = 0
  6452  002F16  0101               	movlb	1	; () banked
  6453  002F18  5159               	movf	_lcdPrintTR& (0+255),w,b
  6454  002F1A  B4D8               	btfsc	status,2,c
  6455  002F1C  D140               	goto	l15681
  6456                           
  6457                           ; BSR set to: 1
  6458  002F1E  ECAB  F03B         	call	_PrintStrBusy	;wreg free
  6459  002F22  0900               	iorlw	0
  6460  002F24  A4D8               	btfss	status,2,c
  6461  002F26  D13B               	goto	l15681
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;menu.c: 272:         lcdPrintTR = 0;
  6465  002F28  0E00               	movlw	0
  6466  002F2A  0101               	movlb	1	; () banked
  6467  002F2C  6F59               	movwf	_lcdPrintTR& (0+255),b
  6468                           
  6469                           ;menu.c: 273:         if ((menuStatus == CFG_IDLE) || (menuStatus == CFG_LOWVA) || (menu
      +                          Status == CFG_HIGHVA)) {
  6470  002F2E  0100               	movlb	0	; () banked
  6471  002F30  51D0               	movf	_menuStatus& (0+255),w,b
  6472  002F32  B4D8               	btfsc	status,2,c
  6473  002F34  D008               	goto	u15370
  6474                           
  6475                           ; BSR set to: 0
  6476  002F36  0E06               	movlw	6
  6477  002F38  19D0               	xorwf	_menuStatus& (0+255),w,b
  6478  002F3A  B4D8               	btfsc	status,2,c
  6479  002F3C  D004               	goto	u15370
  6480                           
  6481                           ; BSR set to: 0
  6482  002F3E  0E07               	movlw	7
  6483  002F40  19D0               	xorwf	_menuStatus& (0+255),w,b
  6484  002F42  A4D8               	btfss	status,2,c
  6485  002F44  D036               	goto	l15645
  6486  002F46                     u15370:
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;menu.c: 274:             if (VentMode == 0) {
  6490  002F46  0101               	movlb	1	; () banked
  6491  002F48  5157               	movf	_VentMode& (0+255),w,b
  6492  002F4A  A4D8               	btfss	status,2,c
  6493  002F4C  D017               	goto	l15643
  6494                           
  6495                           ; BSR set to: 1
  6496                           ;menu.c: 275:                 sprintf(lcdTopRow, "%2d %2d  % 2d -- ---", BPM, PEEP, IP);
  6497  002F4E  0E67               	movlw	low _lcdTopRow
  6498  002F50  6FA6               	movwf	sprintf@s& (0+255),b
  6499  002F52  0E02               	movlw	high _lcdTopRow
  6500  002F54  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6501  002F56  0E97               	movlw	low STR_56
  6502  002F58  6FA8               	movwf	sprintf@fmt& (0+255),b
  6503  002F5A  0EFD               	movlw	high STR_56
  6504  002F5C  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6505  002F5E  0060  F7E4  F1AA   	movff	_BPM,?_sprintf+4
  6506  002F64  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  6507  002F66  0060  F7DC  F1AC   	movff	_PEEP,?_sprintf+6
  6508  002F6C  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  6509  002F6E  0060  F7E0  F1AE   	movff	_IP,?_sprintf+8
  6510  002F74  6BAF               	clrf	(?_sprintf+9)& (0+255),b
  6511  002F76  EC9C  F033         	call	_sprintf	;wreg free
  6512                           
  6513                           ;menu.c: 276:             } else {
  6514  002F7A  D0F7               	goto	l2164
  6515  002F7C                     l15643:
  6516                           
  6517                           ; BSR set to: 1
  6518                           ;menu.c: 277:                 sprintf(lcdTopRow, "%2d %2d  -- %2d %3d", BPM, PEEP, MaxP,
      +                           MaxV);
  6519  002F7C  0E67               	movlw	low _lcdTopRow
  6520  002F7E  6FA6               	movwf	sprintf@s& (0+255),b
  6521  002F80  0E02               	movlw	high _lcdTopRow
  6522  002F82  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6523  002F84  0EC0               	movlw	low STR_57
  6524  002F86  6FA8               	movwf	sprintf@fmt& (0+255),b
  6525  002F88  0EFD               	movlw	high STR_57
  6526  002F8A  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6527  002F8C  0060  F7E4  F1AA   	movff	_BPM,?_sprintf+4
  6528  002F92  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  6529  002F94  0060  F7DC  F1AC   	movff	_PEEP,?_sprintf+6
  6530  002F9A  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  6531  002F9C  0060  F7E8  F1AE   	movff	_MaxP,?_sprintf+8
  6532  002FA2  6BAF               	clrf	(?_sprintf+9)& (0+255),b
  6533  002FA4  0060  F7D8  F1B0   	movff	_MaxV,?_sprintf+10
  6534  002FAA  6BB1               	clrf	(?_sprintf+11)& (0+255),b
  6535  002FAC  EC9C  F033         	call	_sprintf	;wreg free
  6536  002FB0  D0DC               	goto	l2164
  6537  002FB2                     l15645:
  6538                           
  6539                           ; BSR set to: 0
  6540  002FB2  0E02               	movlw	2
  6541  002FB4  19D0               	xorwf	_menuStatus& (0+255),w,b
  6542  002FB6  A4D8               	btfss	status,2,c
  6543  002FB8  D03A               	goto	l15653
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;menu.c: 280:             if (VentMode == 0) {
  6547  002FBA  0101               	movlb	1	; () banked
  6548  002FBC  5157               	movf	_VentMode& (0+255),w,b
  6549  002FBE  A4D8               	btfss	status,2,c
  6550  002FC0  D019               	goto	l15651
  6551                           
  6552                           ; BSR set to: 1
  6553                           ;menu.c: 281:                 sprintf(lcdTopRow, "%2d %2d  %2d -- ---", menuVal, PEEP, I
      +                          P);
  6554  002FC2  0E67               	movlw	low _lcdTopRow
  6555  002FC4  6FA6               	movwf	sprintf@s& (0+255),b
  6556  002FC6  0E02               	movlw	high _lcdTopRow
  6557  002FC8  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6558  002FCA  0EAC               	movlw	low STR_58
  6559  002FCC  6FA8               	movwf	sprintf@fmt& (0+255),b
  6560  002FCE  0EFD               	movlw	high STR_58
  6561  002FD0  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6562  002FD2  0060  F320  F1AA   	movff	_menuVal,?_sprintf+4
  6563  002FD8  0060  F324  F1AB   	movff	_menuVal+1,?_sprintf+5
  6564  002FDE  0060  F7DC  F1AC   	movff	_PEEP,?_sprintf+6
  6565  002FE4  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  6566  002FE6  0060  F7E0  F1AE   	movff	_IP,?_sprintf+8
  6567  002FEC  6BAF               	clrf	(?_sprintf+9)& (0+255),b
  6568  002FEE  EC9C  F033         	call	_sprintf	;wreg free
  6569                           
  6570                           ;menu.c: 282:             } else {
  6571  002FF2  D0BB               	goto	l2164
  6572  002FF4                     l15651:
  6573                           
  6574                           ; BSR set to: 1
  6575                           ;menu.c: 283:                 sprintf(lcdTopRow, "%2d %2d  -- %2d %3d", menuVal, PEEP, M
      +                          axP, MaxV);
  6576  002FF4  0E67               	movlw	low _lcdTopRow
  6577  002FF6  6FA6               	movwf	sprintf@s& (0+255),b
  6578  002FF8  0E02               	movlw	high _lcdTopRow
  6579  002FFA  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6580  002FFC  0EC0               	movlw	low STR_57
  6581  002FFE  6FA8               	movwf	sprintf@fmt& (0+255),b
  6582  003000  0EFD               	movlw	high STR_57
  6583  003002  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6584  003004  0060  F320  F1AA   	movff	_menuVal,?_sprintf+4
  6585  00300A  0060  F324  F1AB   	movff	_menuVal+1,?_sprintf+5
  6586  003010  0060  F7DC  F1AC   	movff	_PEEP,?_sprintf+6
  6587  003016  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  6588  003018  0060  F7E8  F1AE   	movff	_MaxP,?_sprintf+8
  6589  00301E  6BAF               	clrf	(?_sprintf+9)& (0+255),b
  6590  003020  0060  F7D8  F1B0   	movff	_MaxV,?_sprintf+10
  6591  003026  6BB1               	clrf	(?_sprintf+11)& (0+255),b
  6592  003028  EC9C  F033         	call	_sprintf	;wreg free
  6593  00302C  D09E               	goto	l2164
  6594  00302E                     l15653:
  6595                           
  6596                           ; BSR set to: 0
  6597  00302E  0E03               	movlw	3
  6598  003030  19D0               	xorwf	_menuStatus& (0+255),w,b
  6599  003032  A4D8               	btfss	status,2,c
  6600  003034  D03A               	goto	l15661
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;menu.c: 286:             if (VentMode == 0) {
  6604  003036  0101               	movlb	1	; () banked
  6605  003038  5157               	movf	_VentMode& (0+255),w,b
  6606  00303A  A4D8               	btfss	status,2,c
  6607  00303C  D019               	goto	l15659
  6608                           
  6609                           ; BSR set to: 1
  6610                           ;menu.c: 287:                 sprintf(lcdTopRow, "%2d %2d  %2d -- ---", BPM, menuVal, IP
      +                          );
  6611  00303E  0E67               	movlw	low _lcdTopRow
  6612  003040  6FA6               	movwf	sprintf@s& (0+255),b
  6613  003042  0E02               	movlw	high _lcdTopRow
  6614  003044  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6615  003046  0EAC               	movlw	low STR_58
  6616  003048  6FA8               	movwf	sprintf@fmt& (0+255),b
  6617  00304A  0EFD               	movlw	high STR_58
  6618  00304C  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6619  00304E  0060  F7E4  F1AA   	movff	_BPM,?_sprintf+4
  6620  003054  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  6621  003056  0060  F320  F1AC   	movff	_menuVal,?_sprintf+6
  6622  00305C  0060  F324  F1AD   	movff	_menuVal+1,?_sprintf+7
  6623  003062  0060  F7E0  F1AE   	movff	_IP,?_sprintf+8
  6624  003068  6BAF               	clrf	(?_sprintf+9)& (0+255),b
  6625  00306A  EC9C  F033         	call	_sprintf	;wreg free
  6626                           
  6627                           ;menu.c: 288:             } else {
  6628  00306E  D07D               	goto	l2164
  6629  003070                     l15659:
  6630                           
  6631                           ; BSR set to: 1
  6632                           ;menu.c: 289:                 sprintf(lcdTopRow, "%2d %2d  -- %2d %3d", BPM, menuVal, Ma
      +                          xP, MaxV);
  6633  003070  0E67               	movlw	low _lcdTopRow
  6634  003072  6FA6               	movwf	sprintf@s& (0+255),b
  6635  003074  0E02               	movlw	high _lcdTopRow
  6636  003076  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6637  003078  0EC0               	movlw	low STR_57
  6638  00307A  6FA8               	movwf	sprintf@fmt& (0+255),b
  6639  00307C  0EFD               	movlw	high STR_57
  6640  00307E  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6641  003080  0060  F7E4  F1AA   	movff	_BPM,?_sprintf+4
  6642  003086  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  6643  003088  0060  F320  F1AC   	movff	_menuVal,?_sprintf+6
  6644  00308E  0060  F324  F1AD   	movff	_menuVal+1,?_sprintf+7
  6645  003094  0060  F7E8  F1AE   	movff	_MaxP,?_sprintf+8
  6646  00309A  6BAF               	clrf	(?_sprintf+9)& (0+255),b
  6647  00309C  0060  F7D8  F1B0   	movff	_MaxV,?_sprintf+10
  6648  0030A2  6BB1               	clrf	(?_sprintf+11)& (0+255),b
  6649  0030A4  EC9C  F033         	call	_sprintf	;wreg free
  6650  0030A8  D060               	goto	l2164
  6651  0030AA                     l15661:
  6652                           
  6653                           ; BSR set to: 0
  6654  0030AA  05D0               	decf	_menuStatus& (0+255),w,b
  6655  0030AC  A4D8               	btfss	status,2,c
  6656  0030AE  D01A               	goto	l15665
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;menu.c: 292:             sprintf(lcdTopRow, "%2d %2d  %2d -- ---", BPM, PEEP, menuVal);
  6660  0030B0  0E67               	movlw	low _lcdTopRow
  6661  0030B2  0101               	movlb	1	; () banked
  6662  0030B4  6FA6               	movwf	sprintf@s& (0+255),b
  6663  0030B6  0E02               	movlw	high _lcdTopRow
  6664  0030B8  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6665  0030BA  0EAC               	movlw	low STR_58
  6666  0030BC  6FA8               	movwf	sprintf@fmt& (0+255),b
  6667  0030BE  0EFD               	movlw	high STR_58
  6668  0030C0  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6669  0030C2  0060  F7E4  F1AA   	movff	_BPM,?_sprintf+4
  6670  0030C8  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  6671  0030CA  0060  F7DC  F1AC   	movff	_PEEP,?_sprintf+6
  6672  0030D0  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  6673  0030D2  0060  F320  F1AE   	movff	_menuVal,?_sprintf+8
  6674  0030D8  0060  F324  F1AF   	movff	_menuVal+1,?_sprintf+9
  6675  0030DE  EC9C  F033         	call	_sprintf	;wreg free
  6676                           
  6677                           ;menu.c: 293:         } else if (menuStatus == CFG_MAXP) {
  6678  0030E2  D043               	goto	l2164
  6679  0030E4                     l15665:
  6680                           
  6681                           ; BSR set to: 0
  6682  0030E4  0E04               	movlw	4
  6683  0030E6  19D0               	xorwf	_menuStatus& (0+255),w,b
  6684  0030E8  A4D8               	btfss	status,2,c
  6685  0030EA  D01E               	goto	l15669
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;menu.c: 294:             sprintf(lcdTopRow, "%2d %2d  -- %2d %3d", BPM, PEEP, menuVal, 
      +                          MaxV);
  6689  0030EC  0E67               	movlw	low _lcdTopRow
  6690  0030EE  0101               	movlb	1	; () banked
  6691  0030F0  6FA6               	movwf	sprintf@s& (0+255),b
  6692  0030F2  0E02               	movlw	high _lcdTopRow
  6693  0030F4  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6694  0030F6  0EC0               	movlw	low STR_57
  6695  0030F8  6FA8               	movwf	sprintf@fmt& (0+255),b
  6696  0030FA  0EFD               	movlw	high STR_57
  6697  0030FC  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6698  0030FE  0060  F7E4  F1AA   	movff	_BPM,?_sprintf+4
  6699  003104  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  6700  003106  0060  F7DC  F1AC   	movff	_PEEP,?_sprintf+6
  6701  00310C  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  6702  00310E  0060  F320  F1AE   	movff	_menuVal,?_sprintf+8
  6703  003114  0060  F324  F1AF   	movff	_menuVal+1,?_sprintf+9
  6704  00311A  0060  F7D8  F1B0   	movff	_MaxV,?_sprintf+10
  6705  003120  6BB1               	clrf	(?_sprintf+11)& (0+255),b
  6706  003122  EC9C  F033         	call	_sprintf	;wreg free
  6707                           
  6708                           ;menu.c: 295:         } else if (menuStatus == CFG_MAXV) {
  6709  003126  D021               	goto	l2164
  6710  003128                     l15669:
  6711                           
  6712                           ; BSR set to: 0
  6713  003128  0E05               	movlw	5
  6714  00312A  19D0               	xorwf	_menuStatus& (0+255),w,b
  6715  00312C  A4D8               	btfss	status,2,c
  6716  00312E  D01D               	goto	l2164
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;menu.c: 296:             sprintf(lcdTopRow, "%2d %2d  -- %2d %3d", BPM, PEEP, MaxP, men
      +                          uVal);
  6720  003130  0E67               	movlw	low _lcdTopRow
  6721  003132  0101               	movlb	1	; () banked
  6722  003134  6FA6               	movwf	sprintf@s& (0+255),b
  6723  003136  0E02               	movlw	high _lcdTopRow
  6724  003138  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6725  00313A  0EC0               	movlw	low STR_57
  6726  00313C  6FA8               	movwf	sprintf@fmt& (0+255),b
  6727  00313E  0EFD               	movlw	high STR_57
  6728  003140  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6729  003142  0060  F7E4  F1AA   	movff	_BPM,?_sprintf+4
  6730  003148  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  6731  00314A  0060  F7DC  F1AC   	movff	_PEEP,?_sprintf+6
  6732  003150  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  6733  003152  0060  F7E8  F1AE   	movff	_MaxP,?_sprintf+8
  6734  003158  6BAF               	clrf	(?_sprintf+9)& (0+255),b
  6735  00315A  0060  F320  F1B0   	movff	_menuVal,?_sprintf+10
  6736  003160  0060  F324  F1B1   	movff	_menuVal+1,?_sprintf+11
  6737  003166  EC9C  F033         	call	_sprintf	;wreg free
  6738  00316A                     l2164:
  6739                           
  6740                           ;menu.c: 299:         printf (lcdTopRow);
  6741  00316A  0E67               	movlw	low _lcdTopRow
  6742  00316C  0101               	movlb	1	; () banked
  6743  00316E  6FA6               	movwf	printf@fmt& (0+255),b
  6744  003170  0E02               	movlw	high _lcdTopRow
  6745  003172  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6746  003174  EC84  F039         	call	_printf	;wreg free
  6747                           
  6748                           ;menu.c: 300:         setCursor(0, 0);
  6749  003178  0E00               	movlw	0
  6750  00317A  0100               	movlb	0	; () banked
  6751  00317C  6F9B               	movwf	setCursor@row& (0+255),b
  6752  00317E  0E00               	movlw	0
  6753  003180  ECC4  F036         	call	_setCursor
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;menu.c: 301:         printstr(lcdTopRow);
  6757  003184  0E67               	movlw	low _lcdTopRow
  6758  003186  6F93               	movwf	printstr@c& (0+255),b
  6759  003188  0E02               	movlw	high _lcdTopRow
  6760  00318A  6F94               	movwf	(printstr@c+1)& (0+255),b
  6761  00318C  ECDA  F024         	call	_printstr	;wreg free
  6762  003190                     
  6763                           ; BSR set to: 0
  6764                           ;menu.c: 302:         if (menuStatus != CFG_IDLE) {
  6765  003190  51D0               	movf	_menuStatus& (0+255),w,b
  6766  003192  B4D8               	btfsc	status,2,c
  6767  003194  0012               	return	
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;menu.c: 303:             lcdBlink = 1;
  6771  003196  0E01               	movlw	1
  6772  003198  0101               	movlb	1	; () banked
  6773  00319A  6F45               	movwf	_lcdBlink& (0+255),b
  6774  00319C  0012               	return	
  6775  00319E                     l15681:
  6776  00319E  0101               	movlb	1	; () banked
  6777  0031A0  515A               	movf	_lcdPrintBR& (0+255),w,b
  6778  0031A2  B4D8               	btfsc	status,2,c
  6779  0031A4  D058               	goto	l15707
  6780                           
  6781                           ; BSR set to: 1
  6782  0031A6  ECAB  F03B         	call	_PrintStrBusy	;wreg free
  6783  0031AA  0900               	iorlw	0
  6784  0031AC  A4D8               	btfss	status,2,c
  6785  0031AE  D053               	goto	l15707
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;menu.c: 306:         lcdPrintBR = 0;
  6789  0031B0  0E00               	movlw	0
  6790  0031B2  0101               	movlb	1	; () banked
  6791  0031B4  6F5A               	movwf	_lcdPrintBR& (0+255),b
  6792                           
  6793                           ;menu.c: 308:         if (lcdMenuPrint) {
  6794  0031B6  5144               	movf	_lcdMenuPrint& (0+255),w,b
  6795  0031B8  B4D8               	btfsc	status,2,c
  6796  0031BA  D03A               	goto	l2181
  6797                           
  6798                           ; BSR set to: 1
  6799                           ;menu.c: 309:             lcdMenuPrint = 0;
  6800  0031BC  0E00               	movlw	0
  6801  0031BE  6F44               	movwf	_lcdMenuPrint& (0+255),b
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;menu.c: 310:             if (menuStatus == CFG_LOWVA) {
  6805  0031C0  0E06               	movlw	6
  6806  0031C2  0100               	movlb	0	; () banked
  6807  0031C4  19D0               	xorwf	_menuStatus& (0+255),w,b
  6808  0031C6  A4D8               	btfss	status,2,c
  6809  0031C8  D012               	goto	l15693
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;menu.c: 311:                 sprintf(lcdBtnRow, "LOW V. ALARM % 3d", menuVal);
  6813  0031CA  0E7B               	movlw	low _lcdBtnRow
  6814  0031CC  0101               	movlb	1	; () banked
  6815  0031CE  6FA6               	movwf	sprintf@s& (0+255),b
  6816  0031D0  0E02               	movlw	high _lcdBtnRow
  6817  0031D2  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6818  0031D4  0E4A               	movlw	low STR_65
  6819  0031D6  6FA8               	movwf	sprintf@fmt& (0+255),b
  6820  0031D8  0EFE               	movlw	high STR_65
  6821  0031DA  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6822  0031DC  0060  F320  F1AA   	movff	_menuVal,?_sprintf+4
  6823  0031E2  0060  F324  F1AB   	movff	_menuVal+1,?_sprintf+5
  6824  0031E8  EC9C  F033         	call	_sprintf	;wreg free
  6825                           
  6826                           ;menu.c: 312:             } else if (menuStatus == CFG_HIGHVA) {
  6827  0031EC  D021               	goto	l2181
  6828  0031EE                     l15693:
  6829                           
  6830                           ; BSR set to: 0
  6831  0031EE  0E07               	movlw	7
  6832  0031F0  19D0               	xorwf	_menuStatus& (0+255),w,b
  6833  0031F2  A4D8               	btfss	status,2,c
  6834  0031F4  D012               	goto	l15697
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;menu.c: 313:                 sprintf(lcdBtnRow, "HIGHV. ALARM % 3d", menuVal);
  6838  0031F6  0E7B               	movlw	low _lcdBtnRow
  6839  0031F8  0101               	movlb	1	; () banked
  6840  0031FA  6FA6               	movwf	sprintf@s& (0+255),b
  6841  0031FC  0E02               	movlw	high _lcdBtnRow
  6842  0031FE  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6843  003200  0E5C               	movlw	low STR_66
  6844  003202  6FA8               	movwf	sprintf@fmt& (0+255),b
  6845  003204  0EFE               	movlw	high STR_66
  6846  003206  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6847  003208  0060  F320  F1AA   	movff	_menuVal,?_sprintf+4
  6848  00320E  0060  F324  F1AB   	movff	_menuVal+1,?_sprintf+5
  6849  003214  EC9C  F033         	call	_sprintf	;wreg free
  6850                           
  6851                           ;menu.c: 314:             } else {
  6852  003218  D00B               	goto	l2181
  6853  00321A                     l15697:
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;menu.c: 315:                 sprintf(lcdBtnRow, "                ");
  6857  00321A  0E7B               	movlw	low _lcdBtnRow
  6858  00321C  0101               	movlb	1	; () banked
  6859  00321E  6FA6               	movwf	sprintf@s& (0+255),b
  6860  003220  0E02               	movlw	high _lcdBtnRow
  6861  003222  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6862  003224  0EC6               	movlw	low STR_4
  6863  003226  6FA8               	movwf	sprintf@fmt& (0+255),b
  6864  003228  0EFE               	movlw	high STR_4
  6865  00322A  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6866  00322C  EC9C  F033         	call	_sprintf	;wreg free
  6867  003230                     l2181:
  6868                           
  6869                           ; BSR set to: 1
  6870                           ;menu.c: 320:         printf (lcdBtnRow);
  6871  003230  0E7B               	movlw	low _lcdBtnRow
  6872  003232  6FA6               	movwf	printf@fmt& (0+255),b
  6873  003234  0E02               	movlw	high _lcdBtnRow
  6874  003236  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6875  003238  EC84  F039         	call	_printf	;wreg free
  6876                           
  6877                           ;menu.c: 321:         setCursor(0, 1);
  6878  00323C  0E01               	movlw	1
  6879  00323E  0100               	movlb	0	; () banked
  6880  003240  6F9B               	movwf	setCursor@row& (0+255),b
  6881  003242  0E00               	movlw	0
  6882  003244  ECC4  F036         	call	_setCursor
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;menu.c: 322:         printstr(lcdBtnRow);
  6886  003248  0E7B               	movlw	low _lcdBtnRow
  6887  00324A  6F93               	movwf	printstr@c& (0+255),b
  6888  00324C  0E02               	movlw	high _lcdBtnRow
  6889  00324E  6F94               	movwf	(printstr@c+1)& (0+255),b
  6890  003250  ECDA  F024         	call	_printstr	;wreg free
  6891  003254  D79D               	goto	L34
  6892  003256                     l15707:
  6893  003256  0101               	movlb	1	; () banked
  6894  003258  5145               	movf	_lcdBlink& (0+255),w,b
  6895  00325A  B4D8               	btfsc	status,2,c
  6896  00325C  0012               	return	
  6897                           
  6898                           ; BSR set to: 1
  6899  00325E  ECAB  F03B         	call	_PrintStrBusy	;wreg free
  6900  003262  0900               	iorlw	0
  6901  003264  A4D8               	btfss	status,2,c
  6902  003266  0012               	return	
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;menu.c: 327:         lcdBlink = 0;
  6906  003268  0E00               	movlw	0
  6907  00326A  0101               	movlb	1	; () banked
  6908  00326C  6F45               	movwf	_lcdBlink& (0+255),b
  6909                           
  6910                           ;menu.c: 328:         switch (menuStatus) {
  6911  00326E  D01E               	goto	l15725
  6912  003270                     l15713:
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;menu.c: 330:                 setCursor(1, 0);
  6916  003270  0E00               	movlw	0
  6917  003272  6F9B               	movwf	setCursor@row& (0+255),b
  6918  003274  0E01               	movlw	1
  6919  003276  ECC4  F036         	call	_setCursor
  6920                           
  6921                           ;menu.c: 331:                 break;
  6922  00327A  0012               	return	
  6923  00327C                     l15715:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;menu.c: 333:                 setCursor(4, 0);
  6927  00327C  0E00               	movlw	0
  6928  00327E  6F9B               	movwf	setCursor@row& (0+255),b
  6929  003280  0E04               	movlw	4
  6930  003282  ECC4  F036         	call	_setCursor
  6931                           
  6932                           ;menu.c: 334:                 break;
  6933  003286  0012               	return	
  6934  003288                     l15717:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;menu.c: 336:                 setCursor(8, 0);
  6938  003288  0E00               	movlw	0
  6939  00328A  6F9B               	movwf	setCursor@row& (0+255),b
  6940  00328C  0E08               	movlw	8
  6941  00328E  ECC4  F036         	call	_setCursor
  6942                           
  6943                           ;menu.c: 337:                 break;
  6944  003292  0012               	return	
  6945  003294                     l15719:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;menu.c: 339:                 setCursor(11, 0);
  6949  003294  0E00               	movlw	0
  6950  003296  6F9B               	movwf	setCursor@row& (0+255),b
  6951  003298  0E0B               	movlw	11
  6952  00329A  ECC4  F036         	call	_setCursor
  6953                           
  6954                           ;menu.c: 340:                 break;
  6955  00329E  0012               	return	
  6956  0032A0                     l15721:
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;menu.c: 342:                 setCursor(15, 0);
  6960  0032A0  0E00               	movlw	0
  6961  0032A2  6F9B               	movwf	setCursor@row& (0+255),b
  6962  0032A4  0E0F               	movlw	15
  6963  0032A6  ECC4  F036         	call	_setCursor
  6964                           
  6965                           ;menu.c: 343:                 break;
  6966  0032AA  0012               	return	
  6967  0032AC                     l15725:
  6968                           
  6969                           ; BSR set to: 1
  6970  0032AC  0100               	movlb	0	; () banked
  6971  0032AE  51D0               	movf	_menuStatus& (0+255),w,b
  6972  0032B0  6FBA               	movwf	??_screenMng& (0+255),b
  6973  0032B2  6BBB               	clrf	(??_screenMng+1)& (0+255),b
  6974                           
  6975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6976                           ; Switch size 1, requested type "simple"
  6977                           ; Number of cases is 1, Range of values is 0 to 0
  6978                           ; switch strategies available:
  6979                           ; Name         Instructions Cycles
  6980                           ; simple_byte            4     3 (average)
  6981                           ;	Chosen strategy is simple_byte
  6982  0032B4  51BB               	movf	(??_screenMng+1)& (0+255),w,b
  6983  0032B6  0A00               	xorlw	0	; case 0
  6984  0032B8  A4D8               	btfss	status,2,c
  6985  0032BA  0012               	return	
  6986                           
  6987                           ; BSR set to: 0
  6988                           ; Switch size 1, requested type "simple"
  6989                           ; Number of cases is 5, Range of values is 1 to 5
  6990                           ; switch strategies available:
  6991                           ; Name         Instructions Cycles
  6992                           ; simple_byte           16     9 (average)
  6993                           ;	Chosen strategy is simple_byte
  6994  0032BC  51BA               	movf	??_screenMng& (0+255),w,b
  6995  0032BE  0A01               	xorlw	1	; case 1
  6996  0032C0  B4D8               	btfsc	status,2,c
  6997  0032C2  D7E2               	goto	l15717
  6998  0032C4  0A03               	xorlw	3	; case 2
  6999  0032C6  B4D8               	btfsc	status,2,c
  7000  0032C8  D7D3               	goto	l15713
  7001  0032CA  0A01               	xorlw	1	; case 3
  7002  0032CC  B4D8               	btfsc	status,2,c
  7003  0032CE  D7D6               	goto	l15715
  7004  0032D0  0A07               	xorlw	7	; case 4
  7005  0032D2  B4D8               	btfsc	status,2,c
  7006  0032D4  D7DF               	goto	l15719
  7007  0032D6  0A01               	xorlw	1	; case 5
  7008  0032D8  A4D8               	btfss	status,2,c
  7009  0032DA  0012               	return	
  7010  0032DC  D7E1               	goto	l15721
  7011  0032DE                     __end_of_screenMng:
  7012                           	opt callstack 0
  7013                           
  7014 ;; *************** function _screenInit *****************
  7015 ;; Defined at:
  7016 ;;		line 257 in file "menu.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 3F/0
  7027 ;;		On exit  : 3F/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:   25
  7037 ;; This function calls:
  7038 ;;		_LcdI2CInit
  7039 ;;		_blink
  7040 ;;		_clear
  7041 ;;		_printstrblock
  7042 ;;		_setCursor
  7043 ;;		_timeDelayMs
  7044 ;; This function is called by:
  7045 ;;		_main
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text7
  7050  0067EA                     __ptext7:
  7051                           	opt callstack 0
  7052  0067EA                     _screenInit:
  7053                           	opt callstack 5
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;menu.c: 258:     LcdI2CInit(0x27, 16, 2);
  7057                           
  7058                           ;incstack = 0
  7059  0067EA  0E10               	movlw	16
  7060  0067EC  6F9B               	movwf	LcdI2CInit@lcd_cols& (0+255),b
  7061  0067EE  0E02               	movlw	2
  7062  0067F0  6F9C               	movwf	LcdI2CInit@lcd_rows& (0+255),b
  7063  0067F2  0E27               	movlw	39
  7064  0067F4  EC56  F02E         	call	_LcdI2CInit
  7065                           
  7066                           ;menu.c: 259:     setCursor(0, 0);
  7067  0067F8  0E00               	movlw	0
  7068  0067FA  6F9B               	movwf	setCursor@row& (0+255),b
  7069  0067FC  0E00               	movlw	0
  7070  0067FE  ECC4  F036         	call	_setCursor
  7071                           
  7072                           ;menu.c: 260:     printstrblock("EMERG.RESPIRATOR");
  7073  006802  0EA4               	movlw	low STR_54
  7074  006804  6F97               	movwf	printstrblock@c& (0+255),b
  7075  006806  0EFE               	movlw	high STR_54
  7076  006808  6F98               	movwf	(printstrblock@c+1)& (0+255),b
  7077  00680A  EC05  F03B         	call	_printstrblock	;wreg free
  7078                           
  7079                           ;menu.c: 261:     setCursor(0, 1);
  7080  00680E  0E01               	movlw	1
  7081  006810  6F9B               	movwf	setCursor@row& (0+255),b
  7082  006812  0E00               	movlw	0
  7083  006814  ECC4  F036         	call	_setCursor
  7084                           
  7085                           ;menu.c: 262:     printstrblock("  CONTROLLER   ");
  7086  006818  0E92               	movlw	low STR_55
  7087  00681A  6F97               	movwf	printstrblock@c& (0+255),b
  7088  00681C  0EFF               	movlw	high STR_55
  7089  00681E  6F98               	movwf	(printstrblock@c+1)& (0+255),b
  7090  006820  EC05  F03B         	call	_printstrblock	;wreg free
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;menu.c: 263:     timeDelayMs(((time_t) 2000*1));
  7094  006824  0E07               	movlw	7
  7095  006826  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  7096  006828  0ED0               	movlw	208
  7097  00682A  6F94               	movwf	timeDelayMs@delms& (0+255),b
  7098  00682C  EC71  F037         	call	_timeDelayMs	;wreg free
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;menu.c: 264:     clear();
  7102  006830  EC71  F03B         	call	_clear	;wreg free
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;menu.c: 265:     lcdPrintTR = 1;
  7106  006834  0E01               	movlw	1
  7107  006836  0101               	movlb	1	; () banked
  7108  006838  6F59               	movwf	_lcdPrintTR& (0+255),b
  7109                           
  7110                           ; BSR set to: 1
  7111                           ;menu.c: 266:     blink();
  7112  00683A  EC08  F03C         	call	_blink	;wreg free
  7113                           
  7114                           ; BSR set to: 0
  7115  00683E  0012               	return		;funcret
  7116  006840                     __end_of_screenInit:
  7117                           	opt callstack 0
  7118                           
  7119 ;; *************** function _blink *****************
  7120 ;; Defined at:
  7121 ;;		line 241 in file "LiquidCrystal_I2C.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 3F/1
  7132 ;;		On exit  : 3F/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:   23
  7142 ;; This function calls:
  7143 ;;		_command
  7144 ;; This function is called by:
  7145 ;;		_screenInit
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text8
  7150  007810                     __ptext8:
  7151                           	opt callstack 0
  7152  007810                     _blink:
  7153                           	opt callstack 6
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;LiquidCrystal_I2C.c: 242:  _displaycontrol |= 0x01;
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;incstack = 0
  7160  007810  0100               	movlb	0	; () banked
  7161  007812  81D4               	bsf	__displaycontrol& (0+255),0,b
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;LiquidCrystal_I2C.c: 243:  command(0x08 | _displaycontrol);
  7165  007814  51D4               	movf	__displaycontrol& (0+255),w,b
  7166  007816  0908               	iorlw	8
  7167  007818  ECD8  F03B         	call	_command
  7168                           
  7169                           ; BSR set to: 0
  7170  00781C  0012               	return		;funcret
  7171  00781E                     __end_of_blink:
  7172                           	opt callstack 0
  7173                           
  7174 ;; *************** function _LcdI2CInit *****************
  7175 ;; Defined at:
  7176 ;;		line 142 in file "LiquidCrystal_I2C.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  lcd_Addr        1    wreg     unsigned char 
  7179 ;;  lcd_cols        1   59[BANK0 ] unsigned char 
  7180 ;;  lcd_rows        1   60[BANK0 ] unsigned char 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  lcd_Addr        1   61[BANK0 ] unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 3F/0
  7189 ;;		On exit  : 3F/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        3 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:   24
  7199 ;; This function calls:
  7200 ;;		_clear
  7201 ;;		_command
  7202 ;;		_display
  7203 ;;		_expanderWrite
  7204 ;;		_home
  7205 ;;		_timeDelayMs
  7206 ;;		_write4bits
  7207 ;; This function is called by:
  7208 ;;		_screenInit
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           	psect	text9
  7213  005CAC                     __ptext9:
  7214                           	opt callstack 0
  7215  005CAC                     _LcdI2CInit:
  7216                           	opt callstack 5
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;incstack = 0
  7220                           ;LcdI2CInit@lcd_Addr stored from wreg
  7221  005CAC  6F9D               	movwf	LcdI2CInit@lcd_Addr& (0+255),b
  7222                           
  7223                           ;LiquidCrystal_I2C.c: 143:   _Addr = lcd_Addr;
  7224  005CAE  0060  F274  F148   	movff	LcdI2CInit@lcd_Addr,__Addr
  7225                           
  7226                           ;LiquidCrystal_I2C.c: 144:   _cols = lcd_cols;
  7227  005CB4  0060  F26C  F147   	movff	LcdI2CInit@lcd_cols,__cols
  7228                           
  7229                           ;LiquidCrystal_I2C.c: 145:   _rows = lcd_rows;
  7230  005CBA  0060  F270  F146   	movff	LcdI2CInit@lcd_rows,__rows
  7231                           
  7232                           ;LiquidCrystal_I2C.c: 146:   _backlightval = 0x00;
  7233  005CC0  0E00               	movlw	0
  7234  005CC2  0100               	movlb	0	; () banked
  7235  005CC4  6FD1               	movwf	__backlightval& (0+255),b
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;LiquidCrystal_I2C.c: 147:   _numlines = 2;
  7239  005CC6  0E02               	movlw	2
  7240  005CC8  6FD2               	movwf	__numlines& (0+255),b
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;LiquidCrystal_I2C.c: 149:   _displayfunction = 0x00 | 0x08 | 0x00;
  7244  005CCA  0E08               	movlw	8
  7245  005CCC  6FD5               	movwf	__displayfunction& (0+255),b
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;LiquidCrystal_I2C.c: 154:  timeDelayMs(50);
  7249  005CCE  0E00               	movlw	0
  7250  005CD0  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  7251  005CD2  0E32               	movlw	50
  7252  005CD4  6F94               	movwf	timeDelayMs@delms& (0+255),b
  7253  005CD6  EC71  F037         	call	_timeDelayMs	;wreg free
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;LiquidCrystal_I2C.c: 157:  expanderWrite(_backlightval);
  7257  005CDA  51D1               	movf	__backlightval& (0+255),w,b
  7258  005CDC  EC54  F038         	call	_expanderWrite
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;LiquidCrystal_I2C.c: 158:  timeDelayMs(10);
  7262  005CE0  0E00               	movlw	0
  7263  005CE2  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  7264  005CE4  0E0A               	movlw	10
  7265  005CE6  6F94               	movwf	timeDelayMs@delms& (0+255),b
  7266  005CE8  EC71  F037         	call	_timeDelayMs	;wreg free
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;LiquidCrystal_I2C.c: 165:    write4bits(0x03 << 4);
  7270  005CEC  0E30               	movlw	48
  7271  005CEE  ECF4  F02F         	call	_write4bits
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;LiquidCrystal_I2C.c: 166:    timeDelayMs(5);
  7275  005CF2  0E00               	movlw	0
  7276  005CF4  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  7277  005CF6  0E05               	movlw	5
  7278  005CF8  6F94               	movwf	timeDelayMs@delms& (0+255),b
  7279  005CFA  EC71  F037         	call	_timeDelayMs	;wreg free
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;LiquidCrystal_I2C.c: 169:    write4bits(0x03 << 4);
  7283  005CFE  0E30               	movlw	48
  7284  005D00  ECF4  F02F         	call	_write4bits
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;LiquidCrystal_I2C.c: 170:    timeDelayMs(5);
  7288  005D04  0E00               	movlw	0
  7289  005D06  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  7290  005D08  0E05               	movlw	5
  7291  005D0A  6F94               	movwf	timeDelayMs@delms& (0+255),b
  7292  005D0C  EC71  F037         	call	_timeDelayMs	;wreg free
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;LiquidCrystal_I2C.c: 173:    write4bits(0x03 << 4);
  7296  005D10  0E30               	movlw	48
  7297  005D12  ECF4  F02F         	call	_write4bits
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;LiquidCrystal_I2C.c: 176:    write4bits(0x02 << 4);
  7301  005D16  0E20               	movlw	32
  7302  005D18  ECF4  F02F         	call	_write4bits
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;LiquidCrystal_I2C.c: 179:  command(0x20 | _displayfunction);
  7306  005D1C  0E28               	movlw	40
  7307  005D1E  ECD8  F03B         	call	_command
  7308                           
  7309                           ;LiquidCrystal_I2C.c: 182:  _displaycontrol = 0x04 | 0x00 | 0x00;
  7310  005D22  0E04               	movlw	4
  7311  005D24  6FD4               	movwf	__displaycontrol& (0+255),b
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;LiquidCrystal_I2C.c: 183:  display();
  7315  005D26  EC63  F03C         	call	_display	;wreg free
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;LiquidCrystal_I2C.c: 186:  clear();
  7319  005D2A  EC71  F03B         	call	_clear	;wreg free
  7320                           
  7321                           ;LiquidCrystal_I2C.c: 189:  _displaymode = 0x02 | 0x00;
  7322  005D2E  0E02               	movlw	2
  7323  005D30  6FD3               	movwf	__displaymode& (0+255),b
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;LiquidCrystal_I2C.c: 192:  command(0x04 | _displaymode);
  7327  005D32  0E06               	movlw	6
  7328  005D34  ECD8  F03B         	call	_command
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;LiquidCrystal_I2C.c: 194:  home();
  7332  005D38  EC67  F03B         	call	_home	;wreg free
  7333                           
  7334                           ; BSR set to: 0
  7335  005D3C  0012               	return		;funcret
  7336  005D3E                     __end_of_LcdI2CInit:
  7337                           	opt callstack 0
  7338                           
  7339 ;; *************** function _home *****************
  7340 ;; Defined at:
  7341 ;;		line 203 in file "LiquidCrystal_I2C.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      void 
  7348 ;; Registers used:
  7349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7350 ;; Tracked objects:
  7351 ;;		On entry : 3F/0
  7352 ;;		On exit  : 3F/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;Total ram usage:        0 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:   23
  7362 ;; This function calls:
  7363 ;;		_command
  7364 ;;		_timeDelayMs
  7365 ;; This function is called by:
  7366 ;;		_LcdI2CInit
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text10
  7371  0076CE                     __ptext10:
  7372                           	opt callstack 0
  7373  0076CE                     _home:
  7374                           	opt callstack 5
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;LiquidCrystal_I2C.c: 204:  command(0x02);
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;incstack = 0
  7381  0076CE  0E02               	movlw	2
  7382  0076D0  ECD8  F03B         	call	_command
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;LiquidCrystal_I2C.c: 205:  timeDelayMs(2);
  7386  0076D4  0E00               	movlw	0
  7387  0076D6  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  7388  0076D8  0E02               	movlw	2
  7389  0076DA  6F94               	movwf	timeDelayMs@delms& (0+255),b
  7390  0076DC  EC71  F037         	call	_timeDelayMs	;wreg free
  7391                           
  7392                           ; BSR set to: 0
  7393  0076E0  0012               	return		;funcret
  7394  0076E2                     __end_of_home:
  7395                           	opt callstack 0
  7396                           
  7397 ;; *************** function _display *****************
  7398 ;; Defined at:
  7399 ;;		line 221 in file "LiquidCrystal_I2C.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;		None
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;		None
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      void 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : 3F/0
  7410 ;;		On exit  : 3F/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;Total ram usage:        0 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:   23
  7420 ;; This function calls:
  7421 ;;		_command
  7422 ;; This function is called by:
  7423 ;;		_LcdI2CInit
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text11
  7428  0078C6                     __ptext11:
  7429                           	opt callstack 0
  7430  0078C6                     _display:
  7431                           	opt callstack 5
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;LiquidCrystal_I2C.c: 222:  _displaycontrol |= 0x04;
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;incstack = 0
  7438  0078C6  85D4               	bsf	__displaycontrol& (0+255),2,b
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;LiquidCrystal_I2C.c: 223:  command(0x08 | _displaycontrol);
  7442  0078C8  51D4               	movf	__displaycontrol& (0+255),w,b
  7443  0078CA  0908               	iorlw	8
  7444  0078CC  ECD8  F03B         	call	_command
  7445                           
  7446                           ; BSR set to: 0
  7447  0078D0  0012               	return		;funcret
  7448  0078D2                     __end_of_display:
  7449                           	opt callstack 0
  7450                           
  7451 ;; *************** function _clear *****************
  7452 ;; Defined at:
  7453 ;;		line 198 in file "LiquidCrystal_I2C.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 3F/0
  7464 ;;		On exit  : 3F/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:   23
  7474 ;; This function calls:
  7475 ;;		_command
  7476 ;;		_timeDelayMs
  7477 ;; This function is called by:
  7478 ;;		_LcdI2CInit
  7479 ;;		_screenInit
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text12
  7484  0076E2                     __ptext12:
  7485                           	opt callstack 0
  7486  0076E2                     _clear:
  7487                           	opt callstack 6
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;LiquidCrystal_I2C.c: 199:  command(0x01);
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;incstack = 0
  7494  0076E2  0E01               	movlw	1
  7495  0076E4  ECD8  F03B         	call	_command
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;LiquidCrystal_I2C.c: 200:  timeDelayMs(2);
  7499  0076E8  0E00               	movlw	0
  7500  0076EA  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
  7501  0076EC  0E02               	movlw	2
  7502  0076EE  6F94               	movwf	timeDelayMs@delms& (0+255),b
  7503  0076F0  EC71  F037         	call	_timeDelayMs	;wreg free
  7504                           
  7505                           ; BSR set to: 0
  7506  0076F4  0012               	return		;funcret
  7507  0076F6                     __end_of_clear:
  7508                           	opt callstack 0
  7509                           
  7510 ;; *************** function _rPressurePredict *****************
  7511 ;; Defined at:
  7512 ;;		line 67 in file "main.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  delay           2   62[BANK0 ] unsigned short 
  7515 ;;  pInst           2   64[BANK0 ] short 
  7516 ;;  pAvgShort       2   66[BANK0 ] short 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  intLVal         4   70[BANK0 ] long 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  2   62[BANK0 ] short 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/2
  7525 ;;		On exit  : 3F/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7528 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;Total ram usage:       12 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:   14
  7535 ;; This function calls:
  7536 ;;		___aldiv
  7537 ;;		___lmul
  7538 ;;		___lwdiv
  7539 ;; This function is called by:
  7540 ;;		_main
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text13
  7545  00560A                     __ptext13:
  7546                           	opt callstack 0
  7547  00560A                     _rPressurePredict:
  7548                           	opt callstack 16
  7549                           
  7550                           ;main.c: 68:     int32_t intLVal;;main.c: 71:     intLVal = (delay * 256) / (((time_t) 2
      +                          0*1));
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;incstack = 0
  7554  00560A  0100               	movlb	0	; () banked
  7555  00560C  519E               	movf	rPressurePredict@delay& (0+255),w,b
  7556  00560E  6F85               	movwf	(___lwdiv@dividend+1)& (0+255),b
  7557  005610  6B84               	clrf	___lwdiv@dividend& (0+255),b
  7558  005612  0E00               	movlw	0
  7559  005614  6F87               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7560  005616  0E14               	movlw	20
  7561  005618  6F86               	movwf	___lwdiv@divisor& (0+255),b
  7562  00561A  ECC9  F033         	call	___lwdiv	;wreg free
  7563  00561E  0060  F210  F0A6   	movff	?___lwdiv,rPressurePredict@intLVal
  7564  005624  0060  F214  F0A7   	movff	?___lwdiv+1,rPressurePredict@intLVal+1
  7565  00562A  6BA8               	clrf	(rPressurePredict@intLVal+2)& (0+255),b
  7566  00562C  6BA9               	clrf	(rPressurePredict@intLVal+3)& (0+255),b
  7567                           
  7568                           ;main.c: 72:     intLVal = (intLVal * (pInst - pAvgShort)) / 256;
  7569  00562E  51A2               	movf	rPressurePredict@pAvgShort& (0+255),w,b
  7570  005630  5DA0               	subwf	rPressurePredict@pInst& (0+255),w,b
  7571  005632  6FA4               	movwf	??_rPressurePredict& (0+255),b
  7572  005634  51A3               	movf	(rPressurePredict@pAvgShort+1)& (0+255),w,b
  7573  005636  59A1               	subwfb	(rPressurePredict@pInst+1)& (0+255),w,b
  7574  005638  6FA5               	movwf	(??_rPressurePredict+1)& (0+255),b
  7575  00563A  0060  F290  F084   	movff	??_rPressurePredict,___lmul@multiplier
  7576  005640  0060  F294  F085   	movff	??_rPressurePredict+1,___lmul@multiplier+1
  7577  005646  0E00               	movlw	0
  7578  005648  BF85               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  7579  00564A  0EFF               	movlw	-1
  7580  00564C  6F86               	movwf	(___lmul@multiplier+2)& (0+255),b
  7581  00564E  6F87               	movwf	(___lmul@multiplier+3)& (0+255),b
  7582  005650  0060  F298  F088   	movff	rPressurePredict@intLVal,___lmul@multiplicand
  7583  005656  0060  F29C  F089   	movff	rPressurePredict@intLVal+1,___lmul@multiplicand+1
  7584  00565C  0060  F2A0  F08A   	movff	rPressurePredict@intLVal+2,___lmul@multiplicand+2
  7585  005662  0060  F2A4  F08B   	movff	rPressurePredict@intLVal+3,___lmul@multiplicand+3
  7586  005668  ECE3  F032         	call	___lmul	;wreg free
  7587  00566C  0060  F210  F090   	movff	?___lmul,___aldiv@dividend
  7588  005672  0060  F214  F091   	movff	?___lmul+1,___aldiv@dividend+1
  7589  005678  0060  F218  F092   	movff	?___lmul+2,___aldiv@dividend+2
  7590  00567E  0060  F21C  F093   	movff	?___lmul+3,___aldiv@dividend+3
  7591  005684  0E00               	movlw	0
  7592  005686  6F94               	movwf	___aldiv@divisor& (0+255),b
  7593  005688  0E01               	movlw	1
  7594  00568A  6F95               	movwf	(___aldiv@divisor+1)& (0+255),b
  7595  00568C  0E00               	movlw	0
  7596  00568E  6F96               	movwf	(___aldiv@divisor+2)& (0+255),b
  7597  005690  0E00               	movlw	0
  7598  005692  6F97               	movwf	(___aldiv@divisor+3)& (0+255),b
  7599  005694  ECD8  F029         	call	___aldiv	;wreg free
  7600  005698  0060  F240  F0A6   	movff	?___aldiv,rPressurePredict@intLVal
  7601  00569E  0060  F244  F0A7   	movff	?___aldiv+1,rPressurePredict@intLVal+1
  7602  0056A4  0060  F248  F0A8   	movff	?___aldiv+2,rPressurePredict@intLVal+2
  7603  0056AA  0060  F24C  F0A9   	movff	?___aldiv+3,rPressurePredict@intLVal+3
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;main.c: 73:     return pInst + ((uint16_t) intLVal);
  7607  0056B0  51A6               	movf	rPressurePredict@intLVal& (0+255),w,b
  7608  0056B2  25A0               	addwf	rPressurePredict@pInst& (0+255),w,b
  7609  0056B4  6F9E               	movwf	?_rPressurePredict& (0+255),b
  7610  0056B6  51A7               	movf	(rPressurePredict@intLVal+1)& (0+255),w,b
  7611  0056B8  21A1               	addwfc	(rPressurePredict@pInst+1)& (0+255),w,b
  7612  0056BA  6F9F               	movwf	(?_rPressurePredict+1)& (0+255),b
  7613                           
  7614                           ; BSR set to: 0
  7615  0056BC  0012               	return		;funcret
  7616  0056BE                     __end_of_rPressurePredict:
  7617                           	opt callstack 0
  7618                           
  7619 ;; *************** function ___aldiv *****************
  7620 ;; Defined at:
  7621 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  dividend        4   48[BANK0 ] long 
  7624 ;;  divisor         4   52[BANK0 ] long 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  quotient        4   58[BANK0 ] long 
  7627 ;;  sign            1   57[BANK0 ] unsigned char 
  7628 ;;  counter         1   56[BANK0 ] unsigned char 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  4   48[BANK0 ] long 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0
  7633 ;; Tracked objects:
  7634 ;;		On entry : 3F/0
  7635 ;;		On exit  : 3F/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7638 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;Total ram usage:       14 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:   13
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_rPressurePredict
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text14
  7653  0053B0                     __ptext14:
  7654                           	opt callstack 0
  7655  0053B0                     ___aldiv:
  7656                           	opt callstack 16
  7657                           
  7658                           ; BSR set to: 0
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;incstack = 0
  7662  0053B0  0E00               	movlw	0
  7663  0053B2  6F99               	movwf	___aldiv@sign& (0+255),b
  7664                           
  7665                           ; BSR set to: 0
  7666  0053B4  AF97               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7667  0053B6  D00A               	goto	l14907
  7668                           
  7669                           ; BSR set to: 0
  7670  0053B8  1F97               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7671  0053BA  1F96               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7672  0053BC  1F95               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7673  0053BE  6D94               	negf	___aldiv@divisor& (0+255),b
  7674  0053C0  0E00               	movlw	0
  7675  0053C2  2395               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7676  0053C4  2396               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7677  0053C6  2397               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7678                           
  7679                           ; BSR set to: 0
  7680  0053C8  0E01               	movlw	1
  7681  0053CA  6F99               	movwf	___aldiv@sign& (0+255),b
  7682  0053CC                     l14907:
  7683                           
  7684                           ; BSR set to: 0
  7685  0053CC  AF93               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7686  0053CE  D00A               	goto	l14913
  7687                           
  7688                           ; BSR set to: 0
  7689  0053D0  1F93               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7690  0053D2  1F92               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7691  0053D4  1F91               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7692  0053D6  6D90               	negf	___aldiv@dividend& (0+255),b
  7693  0053D8  0E00               	movlw	0
  7694  0053DA  2391               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7695  0053DC  2392               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7696  0053DE  2393               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7697                           
  7698                           ; BSR set to: 0
  7699  0053E0  0E01               	movlw	1
  7700  0053E2  1B99               	xorwf	___aldiv@sign& (0+255),f,b
  7701  0053E4                     l14913:
  7702                           
  7703                           ; BSR set to: 0
  7704  0053E4  0E00               	movlw	0
  7705  0053E6  6F9A               	movwf	___aldiv@quotient& (0+255),b
  7706  0053E8  0E00               	movlw	0
  7707  0053EA  6F9B               	movwf	(___aldiv@quotient+1)& (0+255),b
  7708  0053EC  0E00               	movlw	0
  7709  0053EE  6F9C               	movwf	(___aldiv@quotient+2)& (0+255),b
  7710  0053F0  0E00               	movlw	0
  7711  0053F2  6F9D               	movwf	(___aldiv@quotient+3)& (0+255),b
  7712                           
  7713                           ; BSR set to: 0
  7714  0053F4  5194               	movf	___aldiv@divisor& (0+255),w,b
  7715  0053F6  1195               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7716  0053F8  1196               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7717  0053FA  1197               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7718  0053FC  B4D8               	btfsc	status,2,c
  7719  0053FE  D02A               	goto	l14935
  7720                           
  7721                           ; BSR set to: 0
  7722  005400  0E01               	movlw	1
  7723  005402  6F98               	movwf	___aldiv@counter& (0+255),b
  7724  005404  D006               	goto	l14921
  7725  005406                     l14919:
  7726                           
  7727                           ; BSR set to: 0
  7728  005406  90D8               	bcf	status,0,c
  7729  005408  3794               	rlcf	___aldiv@divisor& (0+255),f,b
  7730  00540A  3795               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7731  00540C  3796               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7732  00540E  3797               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7733  005410  2B98               	incf	___aldiv@counter& (0+255),f,b
  7734  005412                     l14921:
  7735                           
  7736                           ; BSR set to: 0
  7737  005412  AF97               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7738  005414  D7F8               	goto	l14919
  7739  005416                     u14320:
  7740                           
  7741                           ; BSR set to: 0
  7742  005416  90D8               	bcf	status,0,c
  7743  005418  379A               	rlcf	___aldiv@quotient& (0+255),f,b
  7744  00541A  379B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7745  00541C  379C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7746  00541E  379D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7747                           
  7748                           ; BSR set to: 0
  7749  005420  5194               	movf	___aldiv@divisor& (0+255),w,b
  7750  005422  5D90               	subwf	___aldiv@dividend& (0+255),w,b
  7751  005424  5195               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7752  005426  5991               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7753  005428  5196               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7754  00542A  5992               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7755  00542C  5197               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7756  00542E  5993               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7757  005430  A0D8               	btfss	status,0,c
  7758  005432  D009               	goto	l14931
  7759                           
  7760                           ; BSR set to: 0
  7761  005434  5194               	movf	___aldiv@divisor& (0+255),w,b
  7762  005436  5F90               	subwf	___aldiv@dividend& (0+255),f,b
  7763  005438  5195               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7764  00543A  5B91               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7765  00543C  5196               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7766  00543E  5B92               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7767  005440  5197               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7768  005442  5B93               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7769                           
  7770                           ; BSR set to: 0
  7771  005444  819A               	bsf	___aldiv@quotient& (0+255),0,b
  7772  005446                     l14931:
  7773                           
  7774                           ; BSR set to: 0
  7775  005446  90D8               	bcf	status,0,c
  7776  005448  3397               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7777  00544A  3396               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7778  00544C  3395               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7779  00544E  3394               	rrcf	___aldiv@divisor& (0+255),f,b
  7780                           
  7781                           ; BSR set to: 0
  7782  005450  2F98               	decfsz	___aldiv@counter& (0+255),f,b
  7783  005452  D7E1               	goto	u14320
  7784  005454                     l14935:
  7785                           
  7786                           ; BSR set to: 0
  7787  005454  5199               	movf	___aldiv@sign& (0+255),w,b
  7788  005456  B4D8               	btfsc	status,2,c
  7789  005458  D008               	goto	l14939
  7790                           
  7791                           ; BSR set to: 0
  7792  00545A  1F9D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7793  00545C  1F9C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7794  00545E  1F9B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7795  005460  6D9A               	negf	___aldiv@quotient& (0+255),b
  7796  005462  0E00               	movlw	0
  7797  005464  239B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7798  005466  239C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7799  005468  239D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7800  00546A                     l14939:
  7801                           
  7802                           ; BSR set to: 0
  7803  00546A  0060  F268  F090   	movff	___aldiv@quotient,?___aldiv
  7804  005470  0060  F26C  F091   	movff	___aldiv@quotient+1,?___aldiv+1
  7805  005476  0060  F270  F092   	movff	___aldiv@quotient+2,?___aldiv+2
  7806  00547C  0060  F274  F093   	movff	___aldiv@quotient+3,?___aldiv+3
  7807                           
  7808                           ; BSR set to: 0
  7809  005482  0012               	return		;funcret
  7810  005484                     __end_of___aldiv:
  7811                           	opt callstack 0
  7812                           
  7813 ;; *************** function _bRateUpdt *****************
  7814 ;; Defined at:
  7815 ;;		line 244 in file "main.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  triggered       1    wreg     _Bool 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  triggered       1   39[BANK0 ] _Bool 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0
  7824 ;; Tracked objects:
  7825 ;;		On entry : 3F/0
  7826 ;;		On exit  : 3F/1
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;Total ram usage:        4 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:   13
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text15
  7844  005822                     __ptext15:
  7845                           	opt callstack 0
  7846  005822                     _bRateUpdt:
  7847                           	opt callstack 17
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;incstack = 0
  7851                           ;bRateUpdt@triggered stored from wreg
  7852  005822  6F87               	movwf	bRateUpdt@triggered& (0+255),b
  7853                           
  7854                           ;main.c: 245:     bRatePtr = bRatePtr<<1;
  7855  005824  0060  F2F4  F084   	movff	_bRatePtr,??_bRateUpdt
  7856  00582A  0060  F2F8  F085   	movff	_bRatePtr+1,??_bRateUpdt+1
  7857  005830  0060  F2FC  F086   	movff	_bRatePtr+2,??_bRateUpdt+2
  7858  005836  0100               	movlb	0	; () banked
  7859  005838  90D8               	bcf	status,0,c
  7860  00583A  3784               	rlcf	??_bRateUpdt& (0+255),f,b
  7861  00583C  3785               	rlcf	(??_bRateUpdt+1)& (0+255),f,b
  7862  00583E  3786               	rlcf	(??_bRateUpdt+2)& (0+255),f,b
  7863  005840  0060  F210  F0BD   	movff	??_bRateUpdt,_bRatePtr
  7864  005846  0060  F214  F0BE   	movff	??_bRateUpdt+1,_bRatePtr+1
  7865  00584C  0060  F218  F0BF   	movff	??_bRateUpdt+2,_bRatePtr+2
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;main.c: 246:     if (bRatePtr == 0x1L<<20){
  7869  005852  0E10               	movlw	16
  7870  005854  19BF               	xorwf	(_bRatePtr+2)& (0+255),w,b
  7871  005856  11BD               	iorwf	_bRatePtr& (0+255),w,b
  7872  005858  11BE               	iorwf	(_bRatePtr+1)& (0+255),w,b
  7873  00585A  A4D8               	btfss	status,2,c
  7874  00585C  D006               	goto	l15087
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;main.c: 247:         bRatePtr = 1;
  7878  00585E  0E01               	movlw	1
  7879  005860  6FBD               	movwf	_bRatePtr& (0+255),b
  7880  005862  0E00               	movlw	0
  7881  005864  6FBE               	movwf	(_bRatePtr+1)& (0+255),b
  7882  005866  0E00               	movlw	0
  7883  005868  6FBF               	movwf	(_bRatePtr+2)& (0+255),b
  7884  00586A                     l15087:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;main.c: 250:     if (bRateHist && bRatePtr) {
  7888  00586A  0101               	movlb	1	; () banked
  7889  00586C  5128               	movf	_bRateHist& (0+255),w,b
  7890  00586E  1129               	iorwf	(_bRateHist+1)& (0+255),w,b
  7891  005870  112A               	iorwf	(_bRateHist+2)& (0+255),w,b
  7892  005872  B4D8               	btfsc	status,2,c
  7893  005874  D009               	goto	l15093
  7894                           
  7895                           ; BSR set to: 1
  7896  005876  0100               	movlb	0	; () banked
  7897  005878  51BD               	movf	_bRatePtr& (0+255),w,b
  7898  00587A  11BE               	iorwf	(_bRatePtr+1)& (0+255),w,b
  7899  00587C  11BF               	iorwf	(_bRatePtr+2)& (0+255),w,b
  7900  00587E  B4D8               	btfsc	status,2,c
  7901  005880  D003               	goto	l15093
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;main.c: 251:         eBRate -= 5;
  7905  005882  0E05               	movlw	5
  7906  005884  0101               	movlb	1	; () banked
  7907  005886  5F4E               	subwf	_eBRate& (0+255),f,b
  7908  005888                     l15093:
  7909                           
  7910                           ;main.c: 253:     if (triggered) {
  7911  005888  0100               	movlb	0	; () banked
  7912  00588A  5187               	movf	bRateUpdt@triggered& (0+255),w,b
  7913  00588C  B4D8               	btfsc	status,2,c
  7914  00588E  D00E               	goto	l15099
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;main.c: 254:         bRateHist |= bRatePtr;
  7918  005890  51BD               	movf	_bRatePtr& (0+255),w,b
  7919  005892  0101               	movlb	1	; () banked
  7920  005894  1328               	iorwf	_bRateHist& (0+255),f,b
  7921  005896  0100               	movlb	0	; () banked
  7922  005898  51BE               	movf	(_bRatePtr+1)& (0+255),w,b
  7923  00589A  0101               	movlb	1	; () banked
  7924  00589C  1329               	iorwf	(_bRateHist+1)& (0+255),f,b
  7925  00589E  0100               	movlb	0	; () banked
  7926  0058A0  51BF               	movf	(_bRatePtr+2)& (0+255),w,b
  7927  0058A2  0101               	movlb	1	; () banked
  7928  0058A4  132A               	iorwf	(_bRateHist+2)& (0+255),f,b
  7929                           
  7930                           ; BSR set to: 1
  7931                           ;main.c: 255:         eBRate += 5;
  7932  0058A6  0E05               	movlw	5
  7933  0058A8  274E               	addwf	_eBRate& (0+255),f,b
  7934                           
  7935                           ;main.c: 256:     } else {
  7936  0058AA  0012               	return	
  7937  0058AC                     l15099:
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;main.c: 257:         bRateHist &= ~bRatePtr;
  7941  0058AC  1DBD               	comf	_bRatePtr& (0+255),w,b
  7942  0058AE  6F84               	movwf	??_bRateUpdt& (0+255),b
  7943  0058B0  1DBE               	comf	(_bRatePtr+1)& (0+255),w,b
  7944  0058B2  6F85               	movwf	(??_bRateUpdt+1)& (0+255),b
  7945  0058B4  1DBF               	comf	(_bRatePtr+2)& (0+255),w,b
  7946  0058B6  6F86               	movwf	(??_bRateUpdt+2)& (0+255),b
  7947  0058B8  5184               	movf	??_bRateUpdt& (0+255),w,b
  7948  0058BA  0101               	movlb	1	; () banked
  7949  0058BC  1728               	andwf	_bRateHist& (0+255),f,b
  7950  0058BE  0100               	movlb	0	; () banked
  7951  0058C0  5185               	movf	(??_bRateUpdt+1)& (0+255),w,b
  7952  0058C2  0101               	movlb	1	; () banked
  7953  0058C4  1729               	andwf	(_bRateHist+1)& (0+255),f,b
  7954  0058C6  0100               	movlb	0	; () banked
  7955  0058C8  5186               	movf	(??_bRateUpdt+2)& (0+255),w,b
  7956  0058CA  0101               	movlb	1	; () banked
  7957  0058CC  172A               	andwf	(_bRateHist+2)& (0+255),f,b
  7958                           
  7959                           ; BSR set to: 1
  7960  0058CE  0012               	return		;funcret
  7961  0058D0                     __end_of_bRateUpdt:
  7962                           	opt callstack 0
  7963                           
  7964 ;; *************** function _bRateInit *****************
  7965 ;; Defined at:
  7966 ;;		line 238 in file "main.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      void 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2
  7975 ;; Tracked objects:
  7976 ;;		On entry : 3F/0
  7977 ;;		On exit  : 3F/1
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;Total ram usage:        0 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:   13
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_main
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text16
  7995  00741A                     __ptext16:
  7996                           	opt callstack 0
  7997  00741A                     _bRateInit:
  7998                           	opt callstack 17
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;main.c: 239:     bRateHist = 0;
  8002                           
  8003                           ; BSR set to: 1
  8004                           ;incstack = 0
  8005  00741A  0E00               	movlw	0
  8006  00741C  0101               	movlb	1	; () banked
  8007  00741E  6F28               	movwf	_bRateHist& (0+255),b
  8008  007420  0E00               	movlw	0
  8009  007422  6F29               	movwf	(_bRateHist+1)& (0+255),b
  8010  007424  0E00               	movlw	0
  8011  007426  6F2A               	movwf	(_bRateHist+2)& (0+255),b
  8012                           
  8013                           ;main.c: 240:     bRatePtr = 1;
  8014  007428  0E01               	movlw	1
  8015  00742A  0100               	movlb	0	; () banked
  8016  00742C  6FBD               	movwf	_bRatePtr& (0+255),b
  8017  00742E  0E00               	movlw	0
  8018  007430  6FBE               	movwf	(_bRatePtr+1)& (0+255),b
  8019  007432  0E00               	movlw	0
  8020  007434  6FBF               	movwf	(_bRatePtr+2)& (0+255),b
  8021                           
  8022                           ;main.c: 241:     eBRate = 0;
  8023  007436  0E00               	movlw	0
  8024  007438  0101               	movlb	1	; () banked
  8025  00743A  6F4E               	movwf	_eBRate& (0+255),b
  8026                           
  8027                           ; BSR set to: 1
  8028  00743C  0012               	return		;funcret
  8029  00743E                     __end_of_bRateInit:
  8030                           	opt callstack 0
  8031                           
  8032 ;; *************** function _aCaptureInit *****************
  8033 ;; Defined at:
  8034 ;;		line 100 in file "aCapture.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  idx             2   66[BANK1 ] int 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 3F/39
  8045 ;;		On exit  : 3F/39
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;Total ram usage:        2 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:   23
  8055 ;; This function calls:
  8056 ;;		_ADCC_SetADTIInterruptHandler
  8057 ;;		_ADCC_StartConversion
  8058 ;;		_adcGetCh
  8059 ;; This function is called by:
  8060 ;;		_main
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text17
  8065  00693E                     __ptext17:
  8066                           	opt callstack 0
  8067  00693E                     _aCaptureInit:
  8068                           	opt callstack 7
  8069                           
  8070                           ; BSR set to: 57
  8071                           ;aCapture.c: 101:     int idx;;aCapture.c: 102:     curASrc=MainPSensor;
  8072                           
  8073                           ; BSR set to: 1
  8074                           ;incstack = 0
  8075  00693E  0E00               	movlw	0
  8076  006940  0100               	movlb	0	; () banked
  8077  006942  6FD8               	movwf	_curASrc& (0+255),b
  8078                           
  8079                           ;aCapture.c: 104:     for (idx=0;idx<3;idx++)
  8080  006944  0E00               	movlw	0
  8081  006946  0101               	movlb	1	; () banked
  8082  006948  6FBD               	movwf	(aCaptureInit@idx+1)& (0+255),b
  8083  00694A  0E00               	movlw	0
  8084  00694C  6FBC               	movwf	aCaptureInit@idx& (0+255),b
  8085  00694E                     l15379:
  8086                           
  8087                           ; BSR set to: 1
  8088                           ;aCapture.c: 105:         resultTblVal[idx]=0;
  8089  00694E  0E40               	movlw	low _resultTblVal
  8090  006950  25BC               	addwf	aCaptureInit@idx& (0+255),w,b
  8091  006952  6ED9               	movwf	fsr2l,c
  8092  006954  0E02               	movlw	high _resultTblVal
  8093  006956  21BD               	addwfc	(aCaptureInit@idx+1)& (0+255),w,b
  8094  006958  6EDA               	movwf	fsr2h,c
  8095  00695A  0E00               	movlw	0
  8096  00695C  6EDF               	movwf	indf2,c
  8097                           
  8098                           ; BSR set to: 1
  8099  00695E  4BBC               	infsnz	aCaptureInit@idx& (0+255),f,b
  8100  006960  2BBD               	incf	(aCaptureInit@idx+1)& (0+255),f,b
  8101                           
  8102                           ; BSR set to: 1
  8103  006962  BFBD               	btfsc	(aCaptureInit@idx+1)& (0+255),7,b
  8104  006964  D7F4               	goto	l15379
  8105  006966  51BD               	movf	(aCaptureInit@idx+1)& (0+255),w,b
  8106  006968  E104               	bnz	u14990
  8107  00696A  0E03               	movlw	3
  8108  00696C  5DBC               	subwf	aCaptureInit@idx& (0+255),w,b
  8109  00696E  A0D8               	btfss	status,0,c
  8110  006970  D7EE               	goto	l15379
  8111  006972                     u14990:
  8112                           
  8113                           ; BSR set to: 1
  8114                           ;aCapture.c: 107:     ADCC_SetADTIInterruptHandler(adcCaptureIsr);
  8115  006972  0E26               	movlw	low _adcCaptureIsr
  8116  006974  0100               	movlb	0	; () banked
  8117  006976  6F84               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  8118  006978  0E36               	movlw	high _adcCaptureIsr
  8119  00697A  6F85               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  8120  00697C  EC32  F03C         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;aCapture.c: 110:     ADCC_StartConversion(adcGetCh(curASrc));
  8124  006980  51D8               	movf	_curASrc& (0+255),w,b
  8125  006982  EC4B  F034         	call	_adcGetCh
  8126  006986  ECA2  F03B         	call	_ADCC_StartConversion
  8127                           
  8128                           ; BSR set to: 62
  8129                           ;aCapture.c: 112:     PIE1bits.ADTIE = 1;
  8130  00698A  0139               	movlb	57	; () banked
  8131  00698C  8791               	bsf	145,3,b	;volatile
  8132                           
  8133                           ; BSR set to: 57
  8134  00698E  0012               	return		;funcret
  8135  006990                     __end_of_aCaptureInit:
  8136                           	opt callstack 0
  8137                           
  8138 ;; *************** function _adcGetCh *****************
  8139 ;; Defined at:
  8140 ;;		line 24 in file "aCapture.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  sel             1    wreg     enum E16104
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  sel             1   92[BANK0 ] enum E16104
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      enum E16053
  8147 ;; Registers used:
  8148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 3F/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;Total ram usage:        3 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:   22
  8161 ;; This function calls:
  8162 ;;		_printf
  8163 ;; This function is called by:
  8164 ;;		_aCaptureInit
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text18
  8169  006896                     __ptext18:
  8170                           	opt callstack 0
  8171  006896                     _adcGetCh:
  8172                           	opt callstack 7
  8173                           
  8174                           ; BSR set to: 57
  8175                           ;incstack = 0
  8176                           ;adcGetCh@sel stored from wreg
  8177  006896  6FBC               	movwf	adcGetCh@sel& (0+255),b
  8178                           
  8179                           ;aCapture.c: 25:     switch (sel){
  8180  006898  D015               	goto	l14779
  8181  00689A                     l14753:
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;aCapture.c: 27:             return channel_ANE1;
  8185  00689A  0E21               	movlw	33
  8186  00689C  0012               	return	
  8187  00689E                     l14759:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;aCapture.c: 30:             return channel_ANE2;
  8191  00689E  0E22               	movlw	34
  8192  0068A0  0012               	return	
  8193  0068A2                     l14765:
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;aCapture.c: 33:             return channel_ANE0;
  8197  0068A2  0E20               	movlw	32
  8198  0068A4  0012               	return	
  8199  0068A6                     l1648:
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;aCapture.c: 37:            LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",100)
      +                          ;
  8203  0068A6  94BA               	bcf	186,2,c	;volatile
  8204  0068A8  96BA               	bcf	186,3,c	;volatile
  8205                           
  8206                           ; BSR set to: 0
  8207  0068AA  0EEC               	movlw	low STR_10
  8208  0068AC  0101               	movlb	1	; () banked
  8209  0068AE  6FA6               	movwf	printf@fmt& (0+255),b
  8210  0068B0  0EFF               	movlw	high STR_10
  8211  0068B2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  8212  0068B4  0E00               	movlw	0
  8213  0068B6  6FA9               	movwf	(?_printf+3)& (0+255),b
  8214  0068B8  0E64               	movlw	100
  8215  0068BA  6FA8               	movwf	(?_printf+2)& (0+255),b
  8216  0068BC  EC84  F039         	call	_printf	;wreg free
  8217                           
  8218                           ;aCapture.c: 38:            return -1;
  8219  0068C0  0EFF               	movlw	255
  8220  0068C2  0012               	return	
  8221  0068C4                     l14779:
  8222  0068C4  0100               	movlb	0	; () banked
  8223  0068C6  51BC               	movf	adcGetCh@sel& (0+255),w,b
  8224  0068C8  6FBA               	movwf	??_adcGetCh& (0+255),b
  8225  0068CA  6BBB               	clrf	(??_adcGetCh+1)& (0+255),b
  8226                           
  8227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8228                           ; Switch size 1, requested type "simple"
  8229                           ; Number of cases is 1, Range of values is 0 to 0
  8230                           ; switch strategies available:
  8231                           ; Name         Instructions Cycles
  8232                           ; simple_byte            4     3 (average)
  8233                           ;	Chosen strategy is simple_byte
  8234  0068CC  51BB               	movf	(??_adcGetCh+1)& (0+255),w,b
  8235  0068CE  0A00               	xorlw	0	; case 0
  8236  0068D0  A4D8               	btfss	status,2,c
  8237  0068D2  D7E9               	goto	l1648
  8238                           
  8239                           ; BSR set to: 0
  8240                           ; Switch size 1, requested type "simple"
  8241                           ; Number of cases is 3, Range of values is 0 to 2
  8242                           ; switch strategies available:
  8243                           ; Name         Instructions Cycles
  8244                           ; simple_byte           10     6 (average)
  8245                           ;	Chosen strategy is simple_byte
  8246  0068D4  51BA               	movf	??_adcGetCh& (0+255),w,b
  8247  0068D6  0A00               	xorlw	0	; case 0
  8248  0068D8  B4D8               	btfsc	status,2,c
  8249  0068DA  D7DF               	goto	l14753
  8250  0068DC  0A01               	xorlw	1	; case 1
  8251  0068DE  B4D8               	btfsc	status,2,c
  8252  0068E0  D7DE               	goto	l14759
  8253  0068E2  0A03               	xorlw	3	; case 2
  8254  0068E4  B4D8               	btfsc	status,2,c
  8255  0068E6  D7DD               	goto	l14765
  8256  0068E8  D7DE               	goto	l1648
  8257  0068EA                     __end_of_adcGetCh:
  8258                           	opt callstack 0
  8259                           
  8260 ;; *************** function _ADCC_StartConversion *****************
  8261 ;; Defined at:
  8262 ;;		line 120 in file "mcc_generated_files/adcc.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  channel         1    wreg     enum E16053
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;  channel         1   36[BANK0 ] enum E16053
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      void 
  8269 ;; Registers used:
  8270 ;;		wreg
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 3F/3E
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;Total ram usage:        1 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:   13
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_aCaptureInit
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text19
  8291  007744                     __ptext19:
  8292                           	opt callstack 0
  8293  007744                     _ADCC_StartConversion:
  8294                           	opt callstack 16
  8295                           
  8296                           ;incstack = 0
  8297                           ;ADCC_StartConversion@channel stored from wreg
  8298  007744  0100               	movlb	0	; () banked
  8299  007746  6F84               	movwf	ADCC_StartConversion@channel& (0+255),b
  8300                           
  8301                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
  8302  007748  0060  F213  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  8303                           
  8304                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
  8305  00774E  013E               	movlb	62	; () banked
  8306  007750  8FF8               	bsf	248,7,b	;volatile
  8307                           
  8308                           ; BSR set to: 62
  8309                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
  8310  007752  81F8               	bsf	248,0,b	;volatile
  8311                           
  8312                           ; BSR set to: 62
  8313  007754  0012               	return		;funcret
  8314  007756                     __end_of_ADCC_StartConversion:
  8315                           	opt callstack 0
  8316                           
  8317 ;; *************** function ___fladd *****************
  8318 ;; Defined at:
  8319 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  b               4   50[BANK0 ] void 
  8322 ;;  a               4   54[BANK0 ] void 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  grs             1   65[BANK0 ] unsigned char 
  8325 ;;  bexp            1   64[BANK0 ] unsigned char 
  8326 ;;  aexp            1   63[BANK0 ] unsigned char 
  8327 ;;  signs           1   62[BANK0 ] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  4   50[BANK0 ] unsigned char 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0
  8332 ;; Tracked objects:
  8333 ;;		On entry : 3F/0
  8334 ;;		On exit  : 3F/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8337 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;Total ram usage:       16 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:   13
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_main
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text20
  8352  0032DE                     __ptext20:
  8353                           	opt callstack 0
  8354  0032DE                     ___fladd:
  8355                           	opt callstack 17
  8356                           
  8357                           ; BSR set to: 0
  8358                           
  8359                           ; BSR set to: 62
  8360                           ;incstack = 0
  8361  0032DE  5195               	movf	(___fladd@b+3)& (0+255),w,b
  8362  0032E0  0B80               	andlw	128
  8363  0032E2  6F9E               	movwf	___fladd@signs& (0+255),b
  8364  0032E4  5195               	movf	(___fladd@b+3)& (0+255),w,b
  8365  0032E6  2595               	addwf	(___fladd@b+3)& (0+255),w,b
  8366  0032E8  6FA0               	movwf	___fladd@bexp& (0+255),b
  8367                           
  8368                           ; BSR set to: 0
  8369  0032EA  BF94               	btfsc	(___fladd@b+2)& (0+255),7,b
  8370                           
  8371                           ; BSR set to: 0
  8372  0032EC  81A0               	bsf	___fladd@bexp& (0+255),0,b
  8373                           
  8374                           ; BSR set to: 0
  8375  0032EE  51A0               	movf	___fladd@bexp& (0+255),w,b
  8376  0032F0  B4D8               	btfsc	status,2,c
  8377  0032F2  D00D               	goto	l15747
  8378                           
  8379                           ; BSR set to: 0
  8380  0032F4  29A0               	incf	___fladd@bexp& (0+255),w,b
  8381  0032F6  A4D8               	btfss	status,2,c
  8382  0032F8  D008               	goto	l15743
  8383                           
  8384                           ; BSR set to: 0
  8385  0032FA  0E00               	movlw	0
  8386  0032FC  6F92               	movwf	___fladd@b& (0+255),b
  8387  0032FE  0E00               	movlw	0
  8388  003300  6F93               	movwf	(___fladd@b+1)& (0+255),b
  8389  003302  0E00               	movlw	0
  8390  003304  6F94               	movwf	(___fladd@b+2)& (0+255),b
  8391  003306  0E00               	movlw	0
  8392  003308  6F95               	movwf	(___fladd@b+3)& (0+255),b
  8393  00330A                     l15743:
  8394                           
  8395                           ; BSR set to: 0
  8396  00330A  8F94               	bsf	(___fladd@b+2)& (0+255),7,b
  8397  00330C  D006               	goto	L1
  8398  00330E                     l15747:
  8399                           
  8400                           ; BSR set to: 0
  8401  00330E  0E00               	movlw	0
  8402  003310  6F92               	movwf	___fladd@b& (0+255),b
  8403  003312  0E00               	movlw	0
  8404  003314  6F93               	movwf	(___fladd@b+1)& (0+255),b
  8405  003316  0E00               	movlw	0
  8406  003318  6F94               	movwf	(___fladd@b+2)& (0+255),b
  8407  00331A                     L1:
  8408  00331A  0E00               	movlw	0
  8409  00331C  6F95               	movwf	(___fladd@b+3)& (0+255),b
  8410                           
  8411                           ; BSR set to: 0
  8412  00331E  5199               	movf	(___fladd@a+3)& (0+255),w,b
  8413  003320  0B80               	andlw	128
  8414  003322  6F9F               	movwf	___fladd@aexp& (0+255),b
  8415                           
  8416                           ; BSR set to: 0
  8417  003324  519E               	movf	___fladd@signs& (0+255),w,b
  8418  003326  199F               	xorwf	___fladd@aexp& (0+255),w,b
  8419  003328  A4D8               	btfss	status,2,c
  8420                           
  8421                           ; BSR set to: 0
  8422  00332A  8D9E               	bsf	___fladd@signs& (0+255),6,b
  8423                           
  8424                           ; BSR set to: 0
  8425  00332C  5199               	movf	(___fladd@a+3)& (0+255),w,b
  8426  00332E  2599               	addwf	(___fladd@a+3)& (0+255),w,b
  8427  003330  6F9F               	movwf	___fladd@aexp& (0+255),b
  8428                           
  8429                           ; BSR set to: 0
  8430  003332  BF98               	btfsc	(___fladd@a+2)& (0+255),7,b
  8431                           
  8432                           ; BSR set to: 0
  8433  003334  819F               	bsf	___fladd@aexp& (0+255),0,b
  8434                           
  8435                           ; BSR set to: 0
  8436  003336  519F               	movf	___fladd@aexp& (0+255),w,b
  8437  003338  B4D8               	btfsc	status,2,c
  8438  00333A  D00D               	goto	l15771
  8439                           
  8440                           ; BSR set to: 0
  8441  00333C  299F               	incf	___fladd@aexp& (0+255),w,b
  8442  00333E  A4D8               	btfss	status,2,c
  8443  003340  D008               	goto	l15767
  8444                           
  8445                           ; BSR set to: 0
  8446  003342  0E00               	movlw	0
  8447  003344  6F96               	movwf	___fladd@a& (0+255),b
  8448  003346  0E00               	movlw	0
  8449  003348  6F97               	movwf	(___fladd@a+1)& (0+255),b
  8450  00334A  0E00               	movlw	0
  8451  00334C  6F98               	movwf	(___fladd@a+2)& (0+255),b
  8452  00334E  0E00               	movlw	0
  8453  003350  6F99               	movwf	(___fladd@a+3)& (0+255),b
  8454  003352                     l15767:
  8455                           
  8456                           ; BSR set to: 0
  8457  003352  8F98               	bsf	(___fladd@a+2)& (0+255),7,b
  8458  003354  D006               	goto	L2
  8459  003356                     l15771:
  8460                           
  8461                           ; BSR set to: 0
  8462  003356  0E00               	movlw	0
  8463  003358  6F96               	movwf	___fladd@a& (0+255),b
  8464  00335A  0E00               	movlw	0
  8465  00335C  6F97               	movwf	(___fladd@a+1)& (0+255),b
  8466  00335E  0E00               	movlw	0
  8467  003360  6F98               	movwf	(___fladd@a+2)& (0+255),b
  8468  003362                     L2:
  8469  003362  0E00               	movlw	0
  8470  003364  6F99               	movwf	(___fladd@a+3)& (0+255),b
  8471                           
  8472                           ; BSR set to: 0
  8473  003366  51A0               	movf	___fladd@bexp& (0+255),w,b
  8474  003368  5D9F               	subwf	___fladd@aexp& (0+255),w,b
  8475  00336A  B0D8               	btfsc	status,0,c
  8476  00336C  D031               	goto	l15809
  8477                           
  8478                           ; BSR set to: 0
  8479  00336E  AD9E               	btfss	___fladd@signs& (0+255),6,b
  8480  003370  D002               	goto	l15779
  8481                           
  8482                           ; BSR set to: 0
  8483  003372  0E80               	movlw	128
  8484  003374  1B9E               	xorwf	___fladd@signs& (0+255),f,b
  8485  003376                     l15779:
  8486                           
  8487                           ; BSR set to: 0
  8488  003376  0060  F280  F0A1   	movff	___fladd@bexp,___fladd@grs
  8489                           
  8490                           ; BSR set to: 0
  8491  00337C  0060  F27C  F0A0   	movff	___fladd@aexp,___fladd@bexp
  8492                           
  8493                           ; BSR set to: 0
  8494  003382  0060  F284  F09F   	movff	___fladd@grs,___fladd@aexp
  8495                           
  8496                           ; BSR set to: 0
  8497  003388  0060  F248  F0A1   	movff	___fladd@b,___fladd@grs
  8498                           
  8499                           ; BSR set to: 0
  8500  00338E  0060  F258  F092   	movff	___fladd@a,___fladd@b
  8501                           
  8502                           ; BSR set to: 0
  8503  003394  0060  F284  F096   	movff	___fladd@grs,___fladd@a
  8504                           
  8505                           ; BSR set to: 0
  8506  00339A  0060  F24C  F0A1   	movff	___fladd@b+1,___fladd@grs
  8507                           
  8508                           ; BSR set to: 0
  8509  0033A0  0060  F25C  F093   	movff	___fladd@a+1,___fladd@b+1
  8510                           
  8511                           ; BSR set to: 0
  8512  0033A6  0060  F284  F097   	movff	___fladd@grs,___fladd@a+1
  8513                           
  8514                           ; BSR set to: 0
  8515  0033AC  0060  F250  F0A1   	movff	___fladd@b+2,___fladd@grs
  8516                           
  8517                           ; BSR set to: 0
  8518  0033B2  0060  F260  F094   	movff	___fladd@a+2,___fladd@b+2
  8519                           
  8520                           ; BSR set to: 0
  8521  0033B8  0060  F284  F098   	movff	___fladd@grs,___fladd@a+2
  8522                           
  8523                           ; BSR set to: 0
  8524  0033BE  0060  F254  F0A1   	movff	___fladd@b+3,___fladd@grs
  8525                           
  8526                           ; BSR set to: 0
  8527  0033C4  0060  F264  F095   	movff	___fladd@a+3,___fladd@b+3
  8528                           
  8529                           ; BSR set to: 0
  8530  0033CA  0060  F284  F099   	movff	___fladd@grs,___fladd@a+3
  8531  0033D0                     l15809:
  8532                           
  8533                           ; BSR set to: 0
  8534  0033D0  0E00               	movlw	0
  8535  0033D2  6FA1               	movwf	___fladd@grs& (0+255),b
  8536                           
  8537                           ; BSR set to: 0
  8538  0033D4  51A0               	movf	___fladd@bexp& (0+255),w,b
  8539  0033D6  0060  F27C  F09A   	movff	___fladd@aexp,??___fladd
  8540  0033DC  6B9B               	clrf	(??___fladd+1)& (0+255),b
  8541  0033DE  5F9A               	subwf	??___fladd& (0+255),f,b
  8542  0033E0  0E00               	movlw	0
  8543  0033E2  5B9B               	subwfb	(??___fladd+1)& (0+255),f,b
  8544  0033E4  BF9B               	btfsc	(??___fladd+1)& (0+255),7,b
  8545  0033E6  D02D               	goto	l2881
  8546  0033E8  519B               	movf	(??___fladd+1)& (0+255),w,b
  8547  0033EA  E104               	bnz	u15640
  8548  0033EC  0E1A               	movlw	26
  8549  0033EE  5D9A               	subwf	??___fladd& (0+255),w,b
  8550  0033F0  A0D8               	btfss	status,0,c
  8551  0033F2  D027               	goto	l2881
  8552  0033F4                     u15640:
  8553                           
  8554                           ; BSR set to: 0
  8555  0033F4  5192               	movf	___fladd@b& (0+255),w,b
  8556  0033F6  1193               	iorwf	(___fladd@b+1)& (0+255),w,b
  8557  0033F8  1194               	iorwf	(___fladd@b+2)& (0+255),w,b
  8558  0033FA  1195               	iorwf	(___fladd@b+3)& (0+255),w,b
  8559  0033FC  B4D8               	btfsc	status,2,c
  8560  0033FE  D002               	goto	u15650
  8561  003400  0E01               	movlw	1
  8562  003402  D001               	goto	u15660
  8563  003404                     u15650:
  8564  003404  0E00               	movlw	0
  8565  003406                     u15660:
  8566  003406  6FA1               	movwf	___fladd@grs& (0+255),b
  8567                           
  8568                           ; BSR set to: 0
  8569  003408  0E00               	movlw	0
  8570  00340A  6F92               	movwf	___fladd@b& (0+255),b
  8571  00340C  0E00               	movlw	0
  8572  00340E  6F93               	movwf	(___fladd@b+1)& (0+255),b
  8573  003410  0E00               	movlw	0
  8574  003412  6F94               	movwf	(___fladd@b+2)& (0+255),b
  8575  003414  0E00               	movlw	0
  8576  003416  6F95               	movwf	(___fladd@b+3)& (0+255),b
  8577                           
  8578                           ; BSR set to: 0
  8579  003418  0060  F27C  F0A0   	movff	___fladd@aexp,___fladd@bexp
  8580  00341E  D015               	goto	u15690
  8581  003420                     l2882:
  8582                           
  8583                           ; BSR set to: 0
  8584  003420  A1A1               	btfss	___fladd@grs& (0+255),0,b
  8585  003422  D005               	goto	l15821
  8586                           
  8587                           ; BSR set to: 0
  8588  003424  90D8               	bcf	status,0,c
  8589  003426  31A1               	rrcf	___fladd@grs& (0+255),w,b
  8590  003428  0901               	iorlw	1
  8591  00342A  6FA1               	movwf	___fladd@grs& (0+255),b
  8592  00342C  D002               	goto	l15823
  8593  00342E                     l15821:
  8594                           
  8595                           ; BSR set to: 0
  8596  00342E  90D8               	bcf	status,0,c
  8597  003430  33A1               	rrcf	___fladd@grs& (0+255),f,b
  8598  003432                     l15823:
  8599                           
  8600                           ; BSR set to: 0
  8601  003432  B192               	btfsc	___fladd@b& (0+255),0,b
  8602                           
  8603                           ; BSR set to: 0
  8604  003434  8FA1               	bsf	___fladd@grs& (0+255),7,b
  8605                           
  8606                           ; BSR set to: 0
  8607  003436  3595               	rlcf	(___fladd@b+3)& (0+255),w,b
  8608  003438  3395               	rrcf	(___fladd@b+3)& (0+255),f,b
  8609  00343A  3394               	rrcf	(___fladd@b+2)& (0+255),f,b
  8610  00343C  3393               	rrcf	(___fladd@b+1)& (0+255),f,b
  8611  00343E  3392               	rrcf	___fladd@b& (0+255),f,b
  8612                           
  8613                           ; BSR set to: 0
  8614  003440  2BA0               	incf	___fladd@bexp& (0+255),f,b
  8615  003442                     l2881:
  8616                           
  8617                           ; BSR set to: 0
  8618  003442  519F               	movf	___fladd@aexp& (0+255),w,b
  8619  003444  5DA0               	subwf	___fladd@bexp& (0+255),w,b
  8620  003446  A0D8               	btfss	status,0,c
  8621  003448  D7EB               	goto	l2882
  8622  00344A                     u15690:
  8623                           
  8624                           ; BSR set to: 0
  8625  00344A  BD9E               	btfsc	___fladd@signs& (0+255),6,b
  8626  00344C  D028               	goto	l15855
  8627                           
  8628                           ; BSR set to: 0
  8629  00344E  51A0               	movf	___fladd@bexp& (0+255),w,b
  8630  003450  A4D8               	btfss	status,2,c
  8631  003452  D009               	goto	l15837
  8632                           
  8633                           ; BSR set to: 0
  8634  003454  0E00               	movlw	0
  8635  003456  6F92               	movwf	?___fladd& (0+255),b
  8636  003458  0E00               	movlw	0
  8637  00345A  6F93               	movwf	(?___fladd+1)& (0+255),b
  8638  00345C  0E00               	movlw	0
  8639  00345E  6F94               	movwf	(?___fladd+2)& (0+255),b
  8640  003460  0E00               	movlw	0
  8641  003462  6F95               	movwf	(?___fladd+3)& (0+255),b
  8642  003464  0012               	return	
  8643  003466                     l15837:
  8644                           
  8645                           ; BSR set to: 0
  8646  003466  5196               	movf	___fladd@a& (0+255),w,b
  8647  003468  2792               	addwf	___fladd@b& (0+255),f,b
  8648  00346A  5197               	movf	(___fladd@a+1)& (0+255),w,b
  8649  00346C  2393               	addwfc	(___fladd@b+1)& (0+255),f,b
  8650  00346E  5198               	movf	(___fladd@a+2)& (0+255),w,b
  8651  003470  2394               	addwfc	(___fladd@b+2)& (0+255),f,b
  8652  003472  5199               	movf	(___fladd@a+3)& (0+255),w,b
  8653  003474  2395               	addwfc	(___fladd@b+3)& (0+255),f,b
  8654                           
  8655                           ; BSR set to: 0
  8656  003476  A195               	btfss	(___fladd@b+3)& (0+255),0,b
  8657  003478  D071               	goto	u15820
  8658                           
  8659                           ; BSR set to: 0
  8660  00347A  A1A1               	btfss	___fladd@grs& (0+255),0,b
  8661  00347C  D005               	goto	l15845
  8662                           
  8663                           ; BSR set to: 0
  8664  00347E  90D8               	bcf	status,0,c
  8665  003480  31A1               	rrcf	___fladd@grs& (0+255),w,b
  8666  003482  0901               	iorlw	1
  8667  003484  6FA1               	movwf	___fladd@grs& (0+255),b
  8668  003486  D002               	goto	l15847
  8669  003488                     l15845:
  8670                           
  8671                           ; BSR set to: 0
  8672  003488  90D8               	bcf	status,0,c
  8673  00348A  33A1               	rrcf	___fladd@grs& (0+255),f,b
  8674  00348C                     l15847:
  8675                           
  8676                           ; BSR set to: 0
  8677  00348C  B192               	btfsc	___fladd@b& (0+255),0,b
  8678                           
  8679                           ; BSR set to: 0
  8680  00348E  8FA1               	bsf	___fladd@grs& (0+255),7,b
  8681                           
  8682                           ; BSR set to: 0
  8683  003490  3595               	rlcf	(___fladd@b+3)& (0+255),w,b
  8684  003492  3395               	rrcf	(___fladd@b+3)& (0+255),f,b
  8685  003494  3394               	rrcf	(___fladd@b+2)& (0+255),f,b
  8686  003496  3393               	rrcf	(___fladd@b+1)& (0+255),f,b
  8687  003498  3392               	rrcf	___fladd@b& (0+255),f,b
  8688                           
  8689                           ; BSR set to: 0
  8690  00349A  2BA0               	incf	___fladd@bexp& (0+255),f,b
  8691  00349C  D05F               	goto	u15820
  8692  00349E                     l15855:
  8693                           
  8694                           ; BSR set to: 0
  8695  00349E  5196               	movf	___fladd@a& (0+255),w,b
  8696  0034A0  5D92               	subwf	___fladd@b& (0+255),w,b
  8697  0034A2  5197               	movf	(___fladd@a+1)& (0+255),w,b
  8698  0034A4  5993               	subwfb	(___fladd@b+1)& (0+255),w,b
  8699  0034A6  5198               	movf	(___fladd@a+2)& (0+255),w,b
  8700  0034A8  5994               	subwfb	(___fladd@b+2)& (0+255),w,b
  8701  0034AA  5195               	movf	(___fladd@b+3)& (0+255),w,b
  8702  0034AC  0A80               	xorlw	128
  8703  0034AE  6F9A               	movwf	??___fladd& (0+255),b
  8704  0034B0  5199               	movf	(___fladd@a+3)& (0+255),w,b
  8705  0034B2  0A80               	xorlw	128
  8706  0034B4  599A               	subwfb	??___fladd& (0+255),w,b
  8707  0034B6  B0D8               	btfsc	status,0,c
  8708  0034B8  D025               	goto	l15865
  8709                           
  8710                           ; BSR set to: 0
  8711  0034BA  5192               	movf	___fladd@b& (0+255),w,b
  8712  0034BC  5D96               	subwf	___fladd@a& (0+255),w,b
  8713  0034BE  6F9A               	movwf	??___fladd& (0+255),b
  8714  0034C0  5193               	movf	(___fladd@b+1)& (0+255),w,b
  8715  0034C2  5997               	subwfb	(___fladd@a+1)& (0+255),w,b
  8716  0034C4  6F9B               	movwf	(??___fladd+1)& (0+255),b
  8717  0034C6  5194               	movf	(___fladd@b+2)& (0+255),w,b
  8718  0034C8  5998               	subwfb	(___fladd@a+2)& (0+255),w,b
  8719  0034CA  6F9C               	movwf	(??___fladd+2)& (0+255),b
  8720  0034CC  5195               	movf	(___fladd@b+3)& (0+255),w,b
  8721  0034CE  5999               	subwfb	(___fladd@a+3)& (0+255),w,b
  8722  0034D0  6F9D               	movwf	(??___fladd+3)& (0+255),b
  8723  0034D2  0EFF               	movlw	255
  8724  0034D4  259A               	addwf	??___fladd& (0+255),w,b
  8725  0034D6  6F92               	movwf	___fladd@b& (0+255),b
  8726  0034D8  0EFF               	movlw	255
  8727  0034DA  219B               	addwfc	(??___fladd+1)& (0+255),w,b
  8728  0034DC  6F93               	movwf	(___fladd@b+1)& (0+255),b
  8729  0034DE  0EFF               	movlw	255
  8730  0034E0  219C               	addwfc	(??___fladd+2)& (0+255),w,b
  8731  0034E2  6F94               	movwf	(___fladd@b+2)& (0+255),b
  8732  0034E4  0EFF               	movlw	255
  8733  0034E6  219D               	addwfc	(??___fladd+3)& (0+255),w,b
  8734  0034E8  6F95               	movwf	(___fladd@b+3)& (0+255),b
  8735  0034EA  0E80               	movlw	128
  8736  0034EC  1B9E               	xorwf	___fladd@signs& (0+255),f,b
  8737                           
  8738                           ; BSR set to: 0
  8739  0034EE  6DA1               	negf	___fladd@grs& (0+255),b
  8740                           
  8741                           ; BSR set to: 0
  8742  0034F0  51A1               	movf	___fladd@grs& (0+255),w,b
  8743  0034F2  A4D8               	btfss	status,2,c
  8744  0034F4  D00F               	goto	l2897
  8745                           
  8746                           ; BSR set to: 0
  8747  0034F6  0E01               	movlw	1
  8748  0034F8  2792               	addwf	___fladd@b& (0+255),f,b
  8749  0034FA  0E00               	movlw	0
  8750  0034FC  2393               	addwfc	(___fladd@b+1)& (0+255),f,b
  8751  0034FE  2394               	addwfc	(___fladd@b+2)& (0+255),f,b
  8752  003500  2395               	addwfc	(___fladd@b+3)& (0+255),f,b
  8753  003502  D008               	goto	l2897
  8754  003504                     l15865:
  8755                           
  8756                           ; BSR set to: 0
  8757  003504  5196               	movf	___fladd@a& (0+255),w,b
  8758  003506  5F92               	subwf	___fladd@b& (0+255),f,b
  8759  003508  5197               	movf	(___fladd@a+1)& (0+255),w,b
  8760  00350A  5B93               	subwfb	(___fladd@b+1)& (0+255),f,b
  8761  00350C  5198               	movf	(___fladd@a+2)& (0+255),w,b
  8762  00350E  5B94               	subwfb	(___fladd@b+2)& (0+255),f,b
  8763  003510  5199               	movf	(___fladd@a+3)& (0+255),w,b
  8764  003512  5B95               	subwfb	(___fladd@b+3)& (0+255),f,b
  8765  003514                     l2897:
  8766                           
  8767                           ; BSR set to: 0
  8768  003514  5192               	movf	___fladd@b& (0+255),w,b
  8769  003516  1193               	iorwf	(___fladd@b+1)& (0+255),w,b
  8770  003518  1194               	iorwf	(___fladd@b+2)& (0+255),w,b
  8771  00351A  1195               	iorwf	(___fladd@b+3)& (0+255),w,b
  8772  00351C  A4D8               	btfss	status,2,c
  8773  00351E  D01C               	goto	l15889
  8774                           
  8775                           ; BSR set to: 0
  8776  003520  51A1               	movf	___fladd@grs& (0+255),w,b
  8777  003522  A4D8               	btfss	status,2,c
  8778  003524  D019               	goto	l15889
  8779                           
  8780                           ; BSR set to: 0
  8781  003526  0E00               	movlw	0
  8782  003528  6F92               	movwf	?___fladd& (0+255),b
  8783  00352A  0E00               	movlw	0
  8784  00352C  6F93               	movwf	(?___fladd+1)& (0+255),b
  8785  00352E  0E00               	movlw	0
  8786  003530  6F94               	movwf	(?___fladd+2)& (0+255),b
  8787  003532  0E00               	movlw	0
  8788  003534  6F95               	movwf	(?___fladd+3)& (0+255),b
  8789  003536  0012               	return	
  8790  003538                     l15873:
  8791                           
  8792                           ; BSR set to: 0
  8793  003538  90D8               	bcf	status,0,c
  8794  00353A  3792               	rlcf	___fladd@b& (0+255),f,b
  8795  00353C  3793               	rlcf	(___fladd@b+1)& (0+255),f,b
  8796  00353E  3794               	rlcf	(___fladd@b+2)& (0+255),f,b
  8797  003540  3795               	rlcf	(___fladd@b+3)& (0+255),f,b
  8798                           
  8799                           ; BSR set to: 0
  8800  003542  BFA1               	btfsc	___fladd@grs& (0+255),7,b
  8801                           
  8802                           ; BSR set to: 0
  8803  003544  8192               	bsf	___fladd@b& (0+255),0,b
  8804                           
  8805                           ; BSR set to: 0
  8806  003546  A1A1               	btfss	___fladd@grs& (0+255),0,b
  8807  003548  D002               	goto	l15883
  8808                           
  8809                           ; BSR set to: 0
  8810  00354A  80D8               	bsf	status,0,c
  8811  00354C  D001               	goto	L3
  8812  00354E                     l15883:
  8813                           
  8814                           ; BSR set to: 0
  8815  00354E  90D8               	bcf	status,0,c
  8816  003550                     L3:
  8817  003550  37A1               	rlcf	___fladd@grs& (0+255),f,b
  8818                           
  8819                           ; BSR set to: 0
  8820  003552  51A0               	movf	___fladd@bexp& (0+255),w,b
  8821  003554  A4D8               	btfss	status,2,c
  8822                           
  8823                           ; BSR set to: 0
  8824  003556  07A0               	decf	___fladd@bexp& (0+255),f,b
  8825  003558                     l15889:
  8826                           
  8827                           ; BSR set to: 0
  8828  003558  AF94               	btfss	(___fladd@b+2)& (0+255),7,b
  8829  00355A  D7EE               	goto	l15873
  8830  00355C                     u15820:
  8831                           
  8832                           ; BSR set to: 0
  8833  00355C  0E00               	movlw	0
  8834  00355E  6F9F               	movwf	___fladd@aexp& (0+255),b
  8835                           
  8836                           ; BSR set to: 0
  8837  003560  AFA1               	btfss	___fladd@grs& (0+255),7,b
  8838  003562  D00C               	goto	l2906
  8839                           
  8840                           ; BSR set to: 0
  8841  003564  0060  F284  F09A   	movff	___fladd@grs,??___fladd
  8842  00356A  0E7F               	movlw	127
  8843  00356C  179A               	andwf	??___fladd& (0+255),f,b
  8844  00356E  B4D8               	btfsc	status,2,c
  8845  003570  D003               	goto	l2907
  8846  003572                     u15840:
  8847                           
  8848                           ; BSR set to: 0
  8849  003572  0E01               	movlw	1
  8850  003574  6F9F               	movwf	___fladd@aexp& (0+255),b
  8851  003576  D002               	goto	l2906
  8852  003578                     l2907:
  8853                           
  8854                           ; BSR set to: 0
  8855  003578  B192               	btfsc	___fladd@b& (0+255),0,b
  8856  00357A  D7FB               	goto	u15840
  8857  00357C                     l2906:
  8858                           
  8859                           ; BSR set to: 0
  8860  00357C  519F               	movf	___fladd@aexp& (0+255),w,b
  8861  00357E  B4D8               	btfsc	status,2,c
  8862  003580  D028               	goto	l15909
  8863                           
  8864                           ; BSR set to: 0
  8865  003582  0E01               	movlw	1
  8866  003584  2792               	addwf	___fladd@b& (0+255),f,b
  8867  003586  0E00               	movlw	0
  8868  003588  2393               	addwfc	(___fladd@b+1)& (0+255),f,b
  8869  00358A  2394               	addwfc	(___fladd@b+2)& (0+255),f,b
  8870  00358C  2395               	addwfc	(___fladd@b+3)& (0+255),f,b
  8871                           
  8872                           ; BSR set to: 0
  8873  00358E  A195               	btfss	(___fladd@b+3)& (0+255),0,b
  8874  003590  D020               	goto	l15909
  8875                           
  8876                           ; BSR set to: 0
  8877  003592  0060  F248  F09A   	movff	___fladd@b,??___fladd
  8878  003598  0060  F24C  F09B   	movff	___fladd@b+1,??___fladd+1
  8879  00359E  0060  F250  F09C   	movff	___fladd@b+2,??___fladd+2
  8880  0035A4  0060  F254  F09D   	movff	___fladd@b+3,??___fladd+3
  8881  0035AA  359D               	rlcf	(??___fladd+3)& (0+255),w,b
  8882  0035AC  339D               	rrcf	(??___fladd+3)& (0+255),f,b
  8883  0035AE  339C               	rrcf	(??___fladd+2)& (0+255),f,b
  8884  0035B0  339B               	rrcf	(??___fladd+1)& (0+255),f,b
  8885  0035B2  339A               	rrcf	??___fladd& (0+255),f,b
  8886  0035B4  0060  F268  F092   	movff	??___fladd,___fladd@b
  8887  0035BA  0060  F26C  F093   	movff	??___fladd+1,___fladd@b+1
  8888  0035C0  0060  F270  F094   	movff	??___fladd+2,___fladd@b+2
  8889  0035C6  0060  F274  F095   	movff	??___fladd+3,___fladd@b+3
  8890  0035CC  29A0               	incf	___fladd@bexp& (0+255),w,b
  8891  0035CE  A4D8               	btfss	status,2,c
  8892                           
  8893                           ; BSR set to: 0
  8894  0035D0  2BA0               	incf	___fladd@bexp& (0+255),f,b
  8895  0035D2                     l15909:
  8896                           
  8897                           ; BSR set to: 0
  8898  0035D2  29A0               	incf	___fladd@bexp& (0+255),w,b
  8899  0035D4  B4D8               	btfsc	status,2,c
  8900  0035D6  D003               	goto	u15900
  8901                           
  8902                           ; BSR set to: 0
  8903  0035D8  51A0               	movf	___fladd@bexp& (0+255),w,b
  8904  0035DA  A4D8               	btfss	status,2,c
  8905  0035DC  D00D               	goto	l15917
  8906  0035DE                     u15900:
  8907                           
  8908                           ; BSR set to: 0
  8909  0035DE  0E00               	movlw	0
  8910  0035E0  6F92               	movwf	___fladd@b& (0+255),b
  8911  0035E2  0E00               	movlw	0
  8912  0035E4  6F93               	movwf	(___fladd@b+1)& (0+255),b
  8913  0035E6  0E00               	movlw	0
  8914  0035E8  6F94               	movwf	(___fladd@b+2)& (0+255),b
  8915  0035EA  0E00               	movlw	0
  8916  0035EC  6F95               	movwf	(___fladd@b+3)& (0+255),b
  8917  0035EE  51A0               	movf	___fladd@bexp& (0+255),w,b
  8918  0035F0  A4D8               	btfss	status,2,c
  8919  0035F2  D002               	goto	l15917
  8920                           
  8921                           ; BSR set to: 0
  8922  0035F4  0E00               	movlw	0
  8923  0035F6  6F9E               	movwf	___fladd@signs& (0+255),b
  8924  0035F8                     l15917:
  8925                           
  8926                           ; BSR set to: 0
  8927  0035F8  A1A0               	btfss	___fladd@bexp& (0+255),0,b
  8928  0035FA  D002               	goto	l15921
  8929                           
  8930                           ; BSR set to: 0
  8931  0035FC  8F94               	bsf	(___fladd@b+2)& (0+255),7,b
  8932  0035FE  D001               	goto	l15923
  8933  003600                     l15921:
  8934                           
  8935                           ; BSR set to: 0
  8936  003600  9F94               	bcf	(___fladd@b+2)& (0+255),7,b
  8937  003602                     l15923:
  8938                           
  8939                           ; BSR set to: 0
  8940  003602  90D8               	bcf	status,0,c
  8941  003604  31A0               	rrcf	___fladd@bexp& (0+255),w,b
  8942  003606  6F95               	movwf	(___fladd@b+3)& (0+255),b
  8943                           
  8944                           ; BSR set to: 0
  8945  003608  BF9E               	btfsc	___fladd@signs& (0+255),7,b
  8946                           
  8947                           ; BSR set to: 0
  8948  00360A  8F95               	bsf	(___fladd@b+3)& (0+255),7,b
  8949                           
  8950                           ; BSR set to: 0
  8951  00360C  0060  F248  F092   	movff	___fladd@b,?___fladd
  8952  003612  0060  F24C  F093   	movff	___fladd@b+1,?___fladd+1
  8953  003618  0060  F250  F094   	movff	___fladd@b+2,?___fladd+2
  8954  00361E  0060  F254  F095   	movff	___fladd@b+3,?___fladd+3
  8955                           
  8956                           ; BSR set to: 0
  8957  003624  0012               	return		;funcret
  8958  003626                     __end_of___fladd:
  8959                           	opt callstack 0
  8960                           
  8961 ;; *************** function ___awdiv *****************
  8962 ;; Defined at:
  8963 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  dividend        2   42[BANK0 ] int 
  8966 ;;  divisor         2   44[BANK0 ] int 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;  quotient        2   48[BANK0 ] int 
  8969 ;;  sign            1   47[BANK0 ] unsigned char 
  8970 ;;  counter         1   46[BANK0 ] unsigned char 
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  2   42[BANK0 ] int 
  8973 ;; Registers used:
  8974 ;;		wreg, status,2, status,0
  8975 ;; Tracked objects:
  8976 ;;		On entry : 3F/0
  8977 ;;		On exit  : 3F/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8981 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8983 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;Total ram usage:        8 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:   13
  8987 ;; This function calls:
  8988 ;;		Nothing
  8989 ;; This function is called by:
  8990 ;;		_main
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text21
  8995  005E52                     __ptext21:
  8996                           	opt callstack 0
  8997  005E52                     ___awdiv:
  8998                           	opt callstack 17
  8999                           
  9000                           ; BSR set to: 0
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;incstack = 0
  9004  005E52  0E00               	movlw	0
  9005  005E54  6F8F               	movwf	___awdiv@sign& (0+255),b
  9006                           
  9007                           ; BSR set to: 0
  9008  005E56  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9009  005E58  D006               	goto	l15941
  9010                           
  9011                           ; BSR set to: 0
  9012  005E5A  6D8C               	negf	___awdiv@divisor& (0+255),b
  9013  005E5C  1F8D               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9014  005E5E  B0D8               	btfsc	status,0,c
  9015  005E60  2B8D               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9016                           
  9017                           ; BSR set to: 0
  9018  005E62  0E01               	movlw	1
  9019  005E64  6F8F               	movwf	___awdiv@sign& (0+255),b
  9020  005E66                     l15941:
  9021                           
  9022                           ; BSR set to: 0
  9023  005E66  AF8B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9024  005E68  D006               	goto	l15947
  9025                           
  9026                           ; BSR set to: 0
  9027  005E6A  6D8A               	negf	___awdiv@dividend& (0+255),b
  9028  005E6C  1F8B               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9029  005E6E  B0D8               	btfsc	status,0,c
  9030  005E70  2B8B               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9031                           
  9032                           ; BSR set to: 0
  9033  005E72  0E01               	movlw	1
  9034  005E74  1B8F               	xorwf	___awdiv@sign& (0+255),f,b
  9035  005E76                     l15947:
  9036                           
  9037                           ; BSR set to: 0
  9038  005E76  0E00               	movlw	0
  9039  005E78  6F91               	movwf	(___awdiv@quotient+1)& (0+255),b
  9040  005E7A  0E00               	movlw	0
  9041  005E7C  6F90               	movwf	___awdiv@quotient& (0+255),b
  9042                           
  9043                           ; BSR set to: 0
  9044  005E7E  518C               	movf	___awdiv@divisor& (0+255),w,b
  9045  005E80  118D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9046  005E82  B4D8               	btfsc	status,2,c
  9047  005E84  D01C               	goto	l15969
  9048                           
  9049                           ; BSR set to: 0
  9050  005E86  0E01               	movlw	1
  9051  005E88  6F8E               	movwf	___awdiv@counter& (0+255),b
  9052  005E8A  D004               	goto	l15955
  9053  005E8C                     l15953:
  9054                           
  9055                           ; BSR set to: 0
  9056  005E8C  90D8               	bcf	status,0,c
  9057  005E8E  378C               	rlcf	___awdiv@divisor& (0+255),f,b
  9058  005E90  378D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9059  005E92  2B8E               	incf	___awdiv@counter& (0+255),f,b
  9060  005E94                     l15955:
  9061                           
  9062                           ; BSR set to: 0
  9063  005E94  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9064  005E96  D7FA               	goto	l15953
  9065  005E98                     u15970:
  9066                           
  9067                           ; BSR set to: 0
  9068  005E98  90D8               	bcf	status,0,c
  9069  005E9A  3790               	rlcf	___awdiv@quotient& (0+255),f,b
  9070  005E9C  3791               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9071                           
  9072                           ; BSR set to: 0
  9073  005E9E  518C               	movf	___awdiv@divisor& (0+255),w,b
  9074  005EA0  5D8A               	subwf	___awdiv@dividend& (0+255),w,b
  9075  005EA2  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9076  005EA4  598B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9077  005EA6  A0D8               	btfss	status,0,c
  9078  005EA8  D005               	goto	l15965
  9079                           
  9080                           ; BSR set to: 0
  9081  005EAA  518C               	movf	___awdiv@divisor& (0+255),w,b
  9082  005EAC  5F8A               	subwf	___awdiv@dividend& (0+255),f,b
  9083  005EAE  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9084  005EB0  5B8B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9085                           
  9086                           ; BSR set to: 0
  9087  005EB2  8190               	bsf	___awdiv@quotient& (0+255),0,b
  9088  005EB4                     l15965:
  9089                           
  9090                           ; BSR set to: 0
  9091  005EB4  90D8               	bcf	status,0,c
  9092  005EB6  338D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9093  005EB8  338C               	rrcf	___awdiv@divisor& (0+255),f,b
  9094                           
  9095                           ; BSR set to: 0
  9096  005EBA  2F8E               	decfsz	___awdiv@counter& (0+255),f,b
  9097  005EBC  D7ED               	goto	u15970
  9098  005EBE                     l15969:
  9099                           
  9100                           ; BSR set to: 0
  9101  005EBE  518F               	movf	___awdiv@sign& (0+255),w,b
  9102  005EC0  B4D8               	btfsc	status,2,c
  9103  005EC2  D004               	goto	l15973
  9104                           
  9105                           ; BSR set to: 0
  9106  005EC4  6D90               	negf	___awdiv@quotient& (0+255),b
  9107  005EC6  1F91               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9108  005EC8  B0D8               	btfsc	status,0,c
  9109  005ECA  2B91               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9110  005ECC                     l15973:
  9111                           
  9112                           ; BSR set to: 0
  9113  005ECC  0060  F240  F08A   	movff	___awdiv@quotient,?___awdiv
  9114  005ED2  0060  F244  F08B   	movff	___awdiv@quotient+1,?___awdiv+1
  9115                           
  9116                           ; BSR set to: 0
  9117  005ED8  0012               	return		;funcret
  9118  005EDA                     __end_of___awdiv:
  9119                           	opt callstack 0
  9120                           
  9121 ;; *************** function _SYSTEM_Initialize *****************
  9122 ;; Defined at:
  9123 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;		None
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;		None
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  1    wreg      void 
  9130 ;; Registers used:
  9131 ;;		wreg, status,2, status,0, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 3F/3D
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;Total ram usage:        0 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:   15
  9144 ;; This function calls:
  9145 ;;		_ADCC_Initialize
  9146 ;;		_FVR_Initialize
  9147 ;;		_I2C2_Initialize
  9148 ;;		_INTERRUPT_Initialize
  9149 ;;		_OSCILLATOR_Initialize
  9150 ;;		_PIN_MANAGER_Initialize
  9151 ;;		_PMD_Initialize
  9152 ;;		_TMR0_Initialize
  9153 ;;		_TMR1_Initialize
  9154 ;;		_TMR2_Initialize
  9155 ;;		_UART1_Initialize
  9156 ;; This function is called by:
  9157 ;;		_main
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text22
  9162  0071C8                     __ptext22:
  9163                           	opt callstack 0
  9164  0071C8                     _SYSTEM_Initialize:
  9165                           	opt callstack 15
  9166                           
  9167                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;incstack = 0
  9171  0071C8  EC02  F03D         	call	_INTERRUPT_Initialize	;wreg free
  9172                           
  9173                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  9174  0071CC  EC1F  F03A         	call	_PMD_Initialize	;wreg free
  9175                           
  9176                           ; BSR set to: 57
  9177                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9178  0071D0  ECB9  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
  9179                           
  9180                           ; BSR set to: 58
  9181                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9182  0071D4  EC2E  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  9183                           
  9184                           ; BSR set to: 57
  9185                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  9186  0071D8  ECC2  F03C         	call	_FVR_Initialize	;wreg free
  9187                           
  9188                           ; BSR set to: 62
  9189                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  9190  0071DC  ECE9  F031         	call	_ADCC_Initialize	;wreg free
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  9194  0071E0  ECFB  F038         	call	_TMR2_Initialize	;wreg free
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  9198  0071E4  EC27  F036         	call	_TMR1_Initialize	;wreg free
  9199                           
  9200                           ; BSR set to: 2
  9201                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  9202  0071E8  EC46  F03B         	call	_TMR0_Initialize	;wreg free
  9203                           
  9204                           ; BSR set to: 57
  9205                           ;mcc_generated_files/mcc.c: 61:     UART1_Initialize();
  9206  0071EC  EC9F  F02E         	call	_UART1_Initialize	;wreg free
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;mcc_generated_files/mcc.c: 62:     I2C2_Initialize();
  9210  0071F0  EC43  F03A         	call	_I2C2_Initialize	;wreg free
  9211                           
  9212                           ; BSR set to: 61
  9213  0071F4  0012               	return		;funcret
  9214  0071F6                     __end_of_SYSTEM_Initialize:
  9215                           	opt callstack 0
  9216                           
  9217 ;; *************** function _UART1_Initialize *****************
  9218 ;; Defined at:
  9219 ;;		line 81 in file "mcc_generated_files/uart1.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;		None
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg, status,2, status,0, cstack
  9228 ;; Tracked objects:
  9229 ;;		On entry : 3F/39
  9230 ;;		On exit  : 3F/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9237 ;;Total ram usage:        0 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; Hardware stack levels required when called:   14
  9240 ;; This function calls:
  9241 ;;		_UART1_SetErrorHandler
  9242 ;;		_UART1_SetFramingErrorHandler
  9243 ;;		_UART1_SetOverrunErrorHandler
  9244 ;;		_UART1_SetTxInterruptHandler
  9245 ;; This function is called by:
  9246 ;;		_SYSTEM_Initialize
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           	psect	text23
  9251  005D3E                     __ptext23:
  9252                           	opt callstack 0
  9253  005D3E                     _UART1_Initialize:
  9254                           	opt callstack 15
  9255                           
  9256                           ; BSR set to: 57
  9257                           ;mcc_generated_files/uart1.c: 84:     PIE3bits.U1TXIE = 0;
  9258                           
  9259                           ; BSR set to: 61
  9260                           ;incstack = 0
  9261  005D3E  9993               	bcf	147,4,b	;volatile
  9262                           
  9263                           ; BSR set to: 57
  9264                           ;mcc_generated_files/uart1.c: 85:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  9265  005D40  0E14               	movlw	low _UART1_Transmit_ISR
  9266  005D42  0100               	movlb	0	; () banked
  9267  005D44  6F84               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
  9268  005D46  0E70               	movlw	high _UART1_Transmit_ISR
  9269  005D48  6F85               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
  9270  005D4A  EC0F  F03C         	call	_UART1_SetTxInterruptHandler	;wreg free
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;mcc_generated_files/uart1.c: 90:     U1P1L = 0x00;
  9274  005D4E  0E00               	movlw	0
  9275  005D50  013D               	movlb	61	; () banked
  9276  005D52  6FEC               	movwf	236,b	;volatile
  9277                           
  9278                           ; BSR set to: 61
  9279                           ;mcc_generated_files/uart1.c: 93:     U1P1H = 0x00;
  9280  005D54  0E00               	movlw	0
  9281  005D56  6FED               	movwf	237,b	;volatile
  9282                           
  9283                           ; BSR set to: 61
  9284                           ;mcc_generated_files/uart1.c: 96:     U1P2L = 0x00;
  9285  005D58  0E00               	movlw	0
  9286  005D5A  6FEE               	movwf	238,b	;volatile
  9287                           
  9288                           ; BSR set to: 61
  9289                           ;mcc_generated_files/uart1.c: 99:     U1P2H = 0x00;
  9290  005D5C  0E00               	movlw	0
  9291  005D5E  6FEF               	movwf	239,b	;volatile
  9292                           
  9293                           ; BSR set to: 61
  9294                           ;mcc_generated_files/uart1.c: 102:     U1P3L = 0x00;
  9295  005D60  0E00               	movlw	0
  9296  005D62  6FF0               	movwf	240,b	;volatile
  9297                           
  9298                           ; BSR set to: 61
  9299                           ;mcc_generated_files/uart1.c: 105:     U1P3H = 0x00;
  9300  005D64  0E00               	movlw	0
  9301  005D66  6FF1               	movwf	241,b	;volatile
  9302                           
  9303                           ; BSR set to: 61
  9304                           ;mcc_generated_files/uart1.c: 108:     U1CON0 = 0xB0;
  9305  005D68  0EB0               	movlw	176
  9306  005D6A  6FF2               	movwf	242,b	;volatile
  9307                           
  9308                           ; BSR set to: 61
  9309                           ;mcc_generated_files/uart1.c: 111:     U1CON1 = 0x80;
  9310  005D6C  0E80               	movlw	128
  9311  005D6E  6FF3               	movwf	243,b	;volatile
  9312                           
  9313                           ; BSR set to: 61
  9314                           ;mcc_generated_files/uart1.c: 114:     U1CON2 = 0x00;
  9315  005D70  0E00               	movlw	0
  9316  005D72  6FF4               	movwf	244,b	;volatile
  9317                           
  9318                           ; BSR set to: 61
  9319                           ;mcc_generated_files/uart1.c: 117:     U1BRGL = 0x22;
  9320  005D74  0E22               	movlw	34
  9321  005D76  6FF5               	movwf	245,b	;volatile
  9322                           
  9323                           ; BSR set to: 61
  9324                           ;mcc_generated_files/uart1.c: 120:     U1BRGH = 0x00;
  9325  005D78  0E00               	movlw	0
  9326  005D7A  6FF6               	movwf	246,b	;volatile
  9327                           
  9328                           ; BSR set to: 61
  9329                           ;mcc_generated_files/uart1.c: 123:     U1FIFO = 0x00;
  9330  005D7C  0E00               	movlw	0
  9331  005D7E  6FF7               	movwf	247,b	;volatile
  9332                           
  9333                           ; BSR set to: 61
  9334                           ;mcc_generated_files/uart1.c: 126:     U1UIR = 0x00;
  9335  005D80  0E00               	movlw	0
  9336  005D82  6FF8               	movwf	248,b	;volatile
  9337                           
  9338                           ; BSR set to: 61
  9339                           ;mcc_generated_files/uart1.c: 129:     U1ERRIR = 0x00;
  9340  005D84  0E00               	movlw	0
  9341  005D86  6FF9               	movwf	249,b	;volatile
  9342                           
  9343                           ; BSR set to: 61
  9344                           ;mcc_generated_files/uart1.c: 132:     U1ERRIE = 0x00;
  9345  005D88  0E00               	movlw	0
  9346  005D8A  6FFA               	movwf	250,b	;volatile
  9347                           
  9348                           ; BSR set to: 61
  9349                           ;mcc_generated_files/uart1.c: 135:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  9350  005D8C  0E00               	movlw	0
  9351  005D8E  0100               	movlb	0	; () banked
  9352  005D90  6F84               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  9353  005D92  0E00               	movlw	0
  9354  005D94  6F85               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  9355  005D96  EC1D  F03C         	call	_UART1_SetFramingErrorHandler	;wreg free
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;mcc_generated_files/uart1.c: 136:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  9359  005D9A  0E00               	movlw	0
  9360  005D9C  6F84               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  9361  005D9E  0E00               	movlw	0
  9362  005DA0  6F85               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  9363  005DA2  EC16  F03C         	call	_UART1_SetOverrunErrorHandler	;wreg free
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;mcc_generated_files/uart1.c: 137:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  9367  005DA6  0E00               	movlw	0
  9368  005DA8  6F84               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
  9369  005DAA  0E00               	movlw	0
  9370  005DAC  6F85               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  9371  005DAE  EC24  F03C         	call	_UART1_SetErrorHandler	;wreg free
  9372                           
  9373                           ;mcc_generated_files/uart1.c: 139:     uart1RxLastError.status = 0;
  9374  005DB2  0E00               	movlw	0
  9375  005DB4  0101               	movlb	1	; () banked
  9376  005DB6  6F5B               	movwf	_uart1RxLastError& (0+255),b	;volatile
  9377                           
  9378                           ;mcc_generated_files/uart1.c: 142:     uart1TxHead = 0;
  9379  005DB8  0E00               	movlw	0
  9380  005DBA  0100               	movlb	0	; () banked
  9381  005DBC  6FDA               	movwf	_uart1TxHead& (0+255),b	;volatile
  9382                           
  9383                           ;mcc_generated_files/uart1.c: 143:     uart1TxTail = 0;
  9384  005DBE  0E00               	movlw	0
  9385  005DC0  6FD9               	movwf	_uart1TxTail& (0+255),b	;volatile
  9386                           
  9387                           ;mcc_generated_files/uart1.c: 144:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  9388  005DC2  0E40               	movlw	64
  9389  005DC4  6FDB               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  9390                           
  9391                           ; BSR set to: 0
  9392  005DC6  0012               	return		;funcret
  9393  005DC8                     __end_of_UART1_Initialize:
  9394                           	opt callstack 0
  9395                           
  9396 ;; *************** function _UART1_SetTxInterruptHandler *****************
  9397 ;; Defined at:
  9398 ;;		line 260 in file "mcc_generated_files/uart1.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  InterruptHan    2   36[BANK0 ] PTR FTN()void 
  9401 ;;		 -> UART1_Transmit_ISR(1), 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;		None
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0
  9408 ;; Tracked objects:
  9409 ;;		On entry : 3F/0
  9410 ;;		On exit  : 3F/0
  9411 ;;		Unchanged: 3F/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9417 ;;Total ram usage:        2 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:   13
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_UART1_Initialize
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text24
  9428  00781E                     __ptext24:
  9429                           	opt callstack 0
  9430  00781E                     _UART1_SetTxInterruptHandler:
  9431                           	opt callstack 15
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;mcc_generated_files/uart1.c: 261:     UART1_TxInterruptHandler = InterruptHandler;
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;incstack = 0
  9438  00781E  0060  F210  F2E9   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  9439  007824  0060  F214  F2EA   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  9440                           
  9441                           ; BSR set to: 0
  9442  00782A  0012               	return		;funcret
  9443  00782C                     __end_of_UART1_SetTxInterruptHandler:
  9444                           	opt callstack 0
  9445                           
  9446 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  9447 ;; Defined at:
  9448 ;;		line 249 in file "mcc_generated_files/uart1.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  interruptHan    2   36[BANK0 ] PTR FTN()void 
  9451 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, status,2, status,0
  9458 ;; Tracked objects:
  9459 ;;		On entry : 3F/0
  9460 ;;		On exit  : 3F/0
  9461 ;;		Unchanged: 3F/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;Total ram usage:        2 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:   13
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_UART1_Initialize
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text25
  9478  00782C                     __ptext25:
  9479                           	opt callstack 0
  9480  00782C                     _UART1_SetOverrunErrorHandler:
  9481                           	opt callstack 15
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;mcc_generated_files/uart1.c: 250:     UART1_OverrunErrorHandler = interruptHandler;
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;incstack = 0
  9488  00782C  0060  F210  F2E5   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  9489  007832  0060  F214  F2E6   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  9490                           
  9491                           ; BSR set to: 0
  9492  007838  0012               	return		;funcret
  9493  00783A                     __end_of_UART1_SetOverrunErrorHandler:
  9494                           	opt callstack 0
  9495                           
  9496 ;; *************** function _UART1_SetFramingErrorHandler *****************
  9497 ;; Defined at:
  9498 ;;		line 245 in file "mcc_generated_files/uart1.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  interruptHan    2   36[BANK0 ] PTR FTN()void 
  9501 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0
  9508 ;; Tracked objects:
  9509 ;;		On entry : 3F/0
  9510 ;;		On exit  : 3F/0
  9511 ;;		Unchanged: 3F/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9516 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9517 ;;Total ram usage:        2 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:   13
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_UART1_Initialize
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text26
  9528  00783A                     __ptext26:
  9529                           	opt callstack 0
  9530  00783A                     _UART1_SetFramingErrorHandler:
  9531                           	opt callstack 15
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;mcc_generated_files/uart1.c: 246:     UART1_FramingErrorHandler = interruptHandler;
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;incstack = 0
  9538  00783A  0060  F210  F2E7   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9539  007840  0060  F214  F2E8   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9540                           
  9541                           ; BSR set to: 0
  9542  007846  0012               	return		;funcret
  9543  007848                     __end_of_UART1_SetFramingErrorHandler:
  9544                           	opt callstack 0
  9545                           
  9546 ;; *************** function _UART1_SetErrorHandler *****************
  9547 ;; Defined at:
  9548 ;;		line 253 in file "mcc_generated_files/uart1.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;  interruptHan    2   36[BANK0 ] PTR FTN()void 
  9551 ;;		 -> UART1_DefaultErrorHandler(1), 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0
  9558 ;; Tracked objects:
  9559 ;;		On entry : 3F/0
  9560 ;;		On exit  : 3F/0
  9561 ;;		Unchanged: 3F/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9563 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9567 ;;Total ram usage:        2 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:   13
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_UART1_Initialize
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text27
  9578  007848                     __ptext27:
  9579                           	opt callstack 0
  9580  007848                     _UART1_SetErrorHandler:
  9581                           	opt callstack 15
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;mcc_generated_files/uart1.c: 254:     UART1_ErrorHandler = interruptHandler;
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;incstack = 0
  9588  007848  0060  F210  F2E3   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9589  00784E  0060  F214  F2E4   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9590                           
  9591                           ; BSR set to: 0
  9592  007854  0012               	return		;funcret
  9593  007856                     __end_of_UART1_SetErrorHandler:
  9594                           	opt callstack 0
  9595                           
  9596 ;; *************** function _TMR2_Initialize *****************
  9597 ;; Defined at:
  9598 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;		None
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;		None
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  1    wreg      void 
  9605 ;; Registers used:
  9606 ;;		wreg, status,2, status,0, cstack
  9607 ;; Tracked objects:
  9608 ;;		On entry : 3F/0
  9609 ;;		On exit  : 3F/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;Total ram usage:        0 bytes
  9617 ;; Hardware stack levels used:    1
  9618 ;; Hardware stack levels required when called:   14
  9619 ;; This function calls:
  9620 ;;		_TMR2_SetInterruptHandler
  9621 ;; This function is called by:
  9622 ;;		_SYSTEM_Initialize
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text28
  9627  0071F6                     __ptext28:
  9628                           	opt callstack 0
  9629  0071F6                     _TMR2_Initialize:
  9630                           	opt callstack 15
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x04;
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;incstack = 0
  9637  0071F6  0E04               	movlw	4
  9638  0071F8  6EAE               	movwf	174,c	;volatile
  9639                           
  9640                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  9641  0071FA  0E00               	movlw	0
  9642  0071FC  6EAD               	movwf	173,c	;volatile
  9643                           
  9644                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  9645  0071FE  0E00               	movlw	0
  9646  007200  6EAF               	movwf	175,c	;volatile
  9647                           
  9648                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x3D;
  9649  007202  0E3D               	movlw	61
  9650  007204  6EAB               	movwf	171,c	;volatile
  9651                           
  9652                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  9653  007206  0E00               	movlw	0
  9654  007208  6EAA               	movwf	170,c	;volatile
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  9658  00720A  0139               	movlb	57	; () banked
  9659  00720C  95A4               	bcf	164,2,b	;volatile
  9660                           
  9661                           ; BSR set to: 57
  9662                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  9663  00720E  8594               	bsf	148,2,b	;volatile
  9664                           
  9665                           ; BSR set to: 57
  9666                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  9667  007210  0E2A               	movlw	low _TMR2_DefaultInterruptHandler
  9668  007212  0100               	movlb	0	; () banked
  9669  007214  6F84               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9670  007216  0E7A               	movlw	high _TMR2_DefaultInterruptHandler
  9671  007218  6F85               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9672  00721A  EC2B  F03C         	call	_TMR2_SetInterruptHandler	;wreg free
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0x80;
  9676  00721E  0E80               	movlw	128
  9677  007220  6EAC               	movwf	172,c	;volatile
  9678                           
  9679                           ; BSR set to: 0
  9680  007222  0012               	return		;funcret
  9681  007224                     __end_of_TMR2_Initialize:
  9682                           	opt callstack 0
  9683                           
  9684 ;; *************** function _TMR2_SetInterruptHandler *****************
  9685 ;; Defined at:
  9686 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  InterruptHan    2   36[BANK0 ] PTR FTN()void 
  9689 ;;		 -> vMeasureIsr(1), TMR2_DefaultInterruptHandler(1), 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;		None
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, status,2, status,0
  9696 ;; Tracked objects:
  9697 ;;		On entry : 3F/0
  9698 ;;		On exit  : 3F/0
  9699 ;;		Unchanged: 3F/0
  9700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;Total ram usage:        2 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:   13
  9708 ;; This function calls:
  9709 ;;		Nothing
  9710 ;; This function is called by:
  9711 ;;		_TMR2_Initialize
  9712 ;;		_vMeasureInit
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text29
  9717  007856                     __ptext29:
  9718                           	opt callstack 0
  9719  007856                     _TMR2_SetInterruptHandler:
  9720                           	opt callstack 16
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;incstack = 0
  9727  007856  0060  F210  F2DF   	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9728  00785C  0060  F214  F2E0   	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9729                           
  9730                           ; BSR set to: 0
  9731  007862  0012               	return		;funcret
  9732  007864                     __end_of_TMR2_SetInterruptHandler:
  9733                           	opt callstack 0
  9734                           
  9735 ;; *************** function _TMR1_Initialize *****************
  9736 ;; Defined at:
  9737 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;		None
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;		None
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  1    wreg      void 
  9744 ;; Registers used:
  9745 ;;		wreg, status,2, status,0
  9746 ;; Tracked objects:
  9747 ;;		On entry : 3F/0
  9748 ;;		On exit  : 3F/2
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9755 ;;Total ram usage:        2 bytes
  9756 ;; Hardware stack levels used:    1
  9757 ;; Hardware stack levels required when called:   13
  9758 ;; This function calls:
  9759 ;;		Nothing
  9760 ;; This function is called by:
  9761 ;;		_SYSTEM_Initialize
  9762 ;; This function uses a non-reentrant model
  9763 ;;
  9764                           
  9765                           	psect	text30
  9766  006C4E                     __ptext30:
  9767                           	opt callstack 0
  9768  006C4E                     _TMR1_Initialize:
  9769                           	opt callstack 16
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;incstack = 0
  9776  006C4E  0E00               	movlw	0
  9777  006C50  6EB3               	movwf	179,c	;volatile
  9778                           
  9779                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  9780  006C52  0E00               	movlw	0
  9781  006C54  6EB4               	movwf	180,c	;volatile
  9782                           
  9783                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x09;
  9784  006C56  0E09               	movlw	9
  9785  006C58  6EB5               	movwf	181,c	;volatile
  9786                           
  9787                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x00;
  9788  006C5A  0E00               	movlw	0
  9789  006C5C  6EB1               	movwf	177,c	;volatile
  9790                           
  9791                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
  9792  006C5E  0E00               	movlw	0
  9793  006C60  6EB0               	movwf	176,c	;volatile
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
  9797  006C62  0139               	movlb	57	; () banked
  9798  006C64  91A4               	bcf	164,0,b	;volatile
  9799                           
  9800                           ; BSR set to: 57
  9801                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9802  006C66  50B0               	movf	176,w,c	;volatile
  9803  006C68  006F FEC4  F084    	movff	16305,??_TMR1_Initialize	;volatile
  9804  006C6E  0100               	movlb	0	; () banked
  9805  006C70  6B85               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  9806  006C72  0060  F210  F085   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  9807  006C78  6B84               	clrf	??_TMR1_Initialize& (0+255),b
  9808  006C7A  1184               	iorwf	??_TMR1_Initialize& (0+255),w,b
  9809  006C7C  0102               	movlb	2	; () banked
  9810  006C7E  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  9811  006C80  0100               	movlb	0	; () banked
  9812  006C82  5185               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  9813  006C84  0102               	movlb	2	; () banked
  9814  006C86  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  9815                           
  9816                           ; BSR set to: 2
  9817                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x03;
  9818  006C88  0E03               	movlw	3
  9819  006C8A  6EB2               	movwf	178,c	;volatile
  9820                           
  9821                           ; BSR set to: 2
  9822  006C8C  0012               	return		;funcret
  9823  006C8E                     __end_of_TMR1_Initialize:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function _TMR0_Initialize *****************
  9827 ;; Defined at:
  9828 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;		None
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, status,2
  9837 ;; Tracked objects:
  9838 ;;		On entry : 3F/2
  9839 ;;		On exit  : 3F/39
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;Total ram usage:        0 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:   13
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_SYSTEM_Initialize
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text31
  9857  00768C                     __ptext31:
  9858                           	opt callstack 0
  9859  00768C                     _TMR0_Initialize:
  9860                           	opt callstack 16
  9861                           
  9862                           ; BSR set to: 2
  9863                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0xA1;
  9864                           
  9865                           ; BSR set to: 2
  9866                           ;incstack = 0
  9867  00768C  0EA1               	movlw	161
  9868  00768E  6EB9               	movwf	185,c	;volatile
  9869                           
  9870                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0xF9;
  9871  007690  0EF9               	movlw	249
  9872  007692  6EB7               	movwf	183,c	;volatile
  9873                           
  9874                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
  9875  007694  0E00               	movlw	0
  9876  007696  6EB6               	movwf	182,c	;volatile
  9877                           
  9878                           ; BSR set to: 2
  9879                           ;mcc_generated_files/tmr0.c: 74:     PIR3bits.TMR0IF = 0;
  9880  007698  0139               	movlb	57	; () banked
  9881  00769A  9FA3               	bcf	163,7,b	;volatile
  9882                           
  9883                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
  9884  00769C  0E80               	movlw	128
  9885  00769E  6EB8               	movwf	184,c	;volatile
  9886                           
  9887                           ; BSR set to: 57
  9888  0076A0  0012               	return		;funcret
  9889  0076A2                     __end_of_TMR0_Initialize:
  9890                           	opt callstack 0
  9891                           
  9892 ;; *************** function _PMD_Initialize *****************
  9893 ;; Defined at:
  9894 ;;		line 79 in file "mcc_generated_files/mcc.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 3F/39
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; Hardware stack levels required when called:   13
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_SYSTEM_Initialize
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           	psect	text32
  9923  00743E                     __ptext32:
  9924                           	opt callstack 0
  9925  00743E                     _PMD_Initialize:
  9926                           	opt callstack 16
  9927                           
  9928                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  9929                           
  9930                           ; BSR set to: 57
  9931                           ;incstack = 0
  9932  00743E  0E00               	movlw	0
  9933  007440  0139               	movlb	57	; () banked
  9934  007442  6FC0               	movwf	192,b	;volatile
  9935                           
  9936                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  9937  007444  0E00               	movlw	0
  9938  007446  6FC1               	movwf	193,b	;volatile
  9939                           
  9940                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  9941  007448  0E00               	movlw	0
  9942  00744A  6FC2               	movwf	194,b	;volatile
  9943                           
  9944                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  9945  00744C  0E00               	movlw	0
  9946  00744E  6FC3               	movwf	195,b	;volatile
  9947                           
  9948                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  9949  007450  0E00               	movlw	0
  9950  007452  6FC4               	movwf	196,b	;volatile
  9951                           
  9952                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  9953  007454  0E00               	movlw	0
  9954  007456  6FC5               	movwf	197,b	;volatile
  9955                           
  9956                           ;mcc_generated_files/mcc.c: 94:     PMD6 = 0x00;
  9957  007458  0E00               	movlw	0
  9958  00745A  6FC6               	movwf	198,b	;volatile
  9959                           
  9960                           ;mcc_generated_files/mcc.c: 96:     PMD7 = 0x00;
  9961  00745C  0E00               	movlw	0
  9962  00745E  6FC7               	movwf	199,b	;volatile
  9963                           
  9964                           ; BSR set to: 57
  9965  007460  0012               	return		;funcret
  9966  007462                     __end_of_PMD_Initialize:
  9967                           	opt callstack 0
  9968                           
  9969 ;; *************** function _PIN_MANAGER_Initialize *****************
  9970 ;; Defined at:
  9971 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;		None
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;		None
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		wreg, status,2
  9980 ;; Tracked objects:
  9981 ;;		On entry : 3F/39
  9982 ;;		On exit  : 3F/3A
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;Total ram usage:        0 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:   13
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_SYSTEM_Initialize
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text33
 10000  005772                     __ptext33:
 10001                           	opt callstack 0
 10002  005772                     _PIN_MANAGER_Initialize:
 10003                           	opt callstack 16
 10004                           
 10005                           ; BSR set to: 57
 10006                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10007                           
 10008                           ; BSR set to: 57
 10009                           ;incstack = 0
 10010  005772  0E00               	movlw	0
 10011  005774  6EBE               	movwf	190,c	;volatile
 10012                           
 10013                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10014  005776  0E00               	movlw	0
 10015  005778  6EBD               	movwf	189,c	;volatile
 10016                           
 10017                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 10018  00577A  0E00               	movlw	0
 10019  00577C  6EBA               	movwf	186,c	;volatile
 10020                           
 10021                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10022  00577E  0E00               	movlw	0
 10023  005780  6EBB               	movwf	187,c	;volatile
 10024                           
 10025                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10026  005782  0E00               	movlw	0
 10027  005784  6EBC               	movwf	188,c	;volatile
 10028                           
 10029                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 10030  005786  0E07               	movlw	7
 10031  005788  6EC6               	movwf	198,c	;volatile
 10032                           
 10033                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xF3;
 10034  00578A  0EF3               	movlw	243
 10035  00578C  6EC2               	movwf	194,c	;volatile
 10036                           
 10037                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC0;
 10038  00578E  0EC0               	movlw	192
 10039  005790  6EC3               	movwf	195,c	;volatile
 10040                           
 10041                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFD;
 10042  005792  0EFD               	movlw	253
 10043  005794  6EC4               	movwf	196,c	;volatile
 10044                           
 10045                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xBE;
 10046  005796  0EBE               	movlw	190
 10047  005798  6EC5               	movwf	197,c	;volatile
 10048                           
 10049                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 10050  00579A  0E00               	movlw	0
 10051  00579C  013A               	movlb	58	; () banked
 10052  00579E  6F70               	movwf	112,b	;volatile
 10053                           
 10054                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x0E;
 10055  0057A0  0E0E               	movlw	14
 10056  0057A2  6F60               	movwf	96,b	;volatile
 10057                           
 10058                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xF9;
 10059  0057A4  0EF9               	movlw	249
 10060  0057A6  6F50               	movwf	80,b	;volatile
 10061                           
 10062                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 10063  0057A8  0E07               	movlw	7
 10064  0057AA  6F80               	movwf	128,b	;volatile
 10065                           
 10066                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFB;
 10067  0057AC  0EFB               	movlw	251
 10068  0057AE  6F40               	movwf	64,b	;volatile
 10069                           
 10070                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0xBE;
 10071  0057B0  0EBE               	movlw	190
 10072  0057B2  6F71               	movwf	113,b	;volatile
 10073                           
 10074                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10075  0057B4  0E00               	movlw	0
 10076  0057B6  6F81               	movwf	129,b	;volatile
 10077                           
 10078                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10079  0057B8  0E00               	movlw	0
 10080  0057BA  6F51               	movwf	81,b	;volatile
 10081                           
 10082                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10083  0057BC  0E00               	movlw	0
 10084  0057BE  6F41               	movwf	65,b	;volatile
 10085                           
 10086                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0xF0;
 10087  0057C0  0EF0               	movlw	240
 10088  0057C2  6F61               	movwf	97,b	;volatile
 10089                           
 10090                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 10091  0057C4  0E00               	movlw	0
 10092  0057C6  6F5A               	movwf	90,b	;volatile
 10093                           
 10094                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 10095  0057C8  0E00               	movlw	0
 10096  0057CA  6F5B               	movwf	91,b	;volatile
 10097                           
 10098                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 10099  0057CC  0E00               	movlw	0
 10100  0057CE  6F6A               	movwf	106,b	;volatile
 10101                           
 10102                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 10103  0057D0  0E00               	movlw	0
 10104  0057D2  6F6B               	movwf	107,b	;volatile
 10105                           
 10106                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 10107  0057D4  0E00               	movlw	0
 10108  0057D6  6F7A               	movwf	122,b	;volatile
 10109                           
 10110                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 10111  0057D8  0E00               	movlw	0
 10112  0057DA  6F7B               	movwf	123,b	;volatile
 10113                           
 10114                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 10115  0057DC  0E00               	movlw	0
 10116  0057DE  6F82               	movwf	130,b	;volatile
 10117                           
 10118                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 10119  0057E0  0E00               	movlw	0
 10120  0057E2  6F42               	movwf	66,b	;volatile
 10121                           
 10122                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x06;
 10123  0057E4  0E06               	movlw	6
 10124  0057E6  6F52               	movwf	82,b	;volatile
 10125                           
 10126                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x08;
 10127  0057E8  0E08               	movlw	8
 10128  0057EA  6F62               	movwf	98,b	;volatile
 10129                           
 10130                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 10131  0057EC  0E00               	movlw	0
 10132  0057EE  6F72               	movwf	114,b	;volatile
 10133                           
 10134                           ; BSR set to: 58
 10135                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 10136  0057F0  6943               	setf	67,b	;volatile
 10137                           
 10138                           ; BSR set to: 58
 10139                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 10140  0057F2  6953               	setf	83,b	;volatile
 10141                           
 10142                           ; BSR set to: 58
 10143                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 10144  0057F4  6963               	setf	99,b	;volatile
 10145                           
 10146                           ; BSR set to: 58
 10147                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 10148  0057F6  6973               	setf	115,b	;volatile
 10149                           
 10150                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 10151  0057F8  0E07               	movlw	7
 10152  0057FA  6F83               	movwf	131,b	;volatile
 10153                           
 10154                           ; BSR set to: 58
 10155                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 10156  0057FC  6944               	setf	68,b	;volatile
 10157                           
 10158                           ; BSR set to: 58
 10159                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 10160  0057FE  6954               	setf	84,b	;volatile
 10161                           
 10162                           ; BSR set to: 58
 10163                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 10164  005800  6964               	setf	100,b	;volatile
 10165                           
 10166                           ; BSR set to: 58
 10167                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 10168  005802  6974               	setf	116,b	;volatile
 10169                           
 10170                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 10171  005804  0E0F               	movlw	15
 10172  005806  6F84               	movwf	132,b	;volatile
 10173                           
 10174                           ;mcc_generated_files/pin_manager.c: 137:     I2C2SCLPPS = 0x09;
 10175  005808  0E09               	movlw	9
 10176  00580A  6FE3               	movwf	227,b	;volatile
 10177                           
 10178                           ;mcc_generated_files/pin_manager.c: 138:     RB1PPS = 0x23;
 10179  00580C  0E23               	movlw	35
 10180  00580E  6F09               	movwf	9,b	;volatile
 10181                           
 10182                           ;mcc_generated_files/pin_manager.c: 139:     RB2PPS = 0x24;
 10183  005810  0E24               	movlw	36
 10184  005812  6F0A               	movwf	10,b	;volatile
 10185                           
 10186                           ;mcc_generated_files/pin_manager.c: 140:     RC1PPS = 0x13;
 10187  005814  0E13               	movlw	19
 10188  005816  6F11               	movwf	17,b	;volatile
 10189                           
 10190                           ;mcc_generated_files/pin_manager.c: 141:     U1RXPPS = 0x10;
 10191  005818  0E10               	movlw	16
 10192  00581A  6FE5               	movwf	229,b	;volatile
 10193                           
 10194                           ;mcc_generated_files/pin_manager.c: 142:     I2C2SDAPPS = 0x0A;
 10195  00581C  0E0A               	movlw	10
 10196  00581E  6FE4               	movwf	228,b	;volatile
 10197                           
 10198                           ; BSR set to: 58
 10199  005820  0012               	return		;funcret
 10200  005822                     __end_of_PIN_MANAGER_Initialize:
 10201                           	opt callstack 0
 10202                           
 10203 ;; *************** function _OSCILLATOR_Initialize *****************
 10204 ;; Defined at:
 10205 ;;		line 65 in file "mcc_generated_files/mcc.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, status,2
 10214 ;; Tracked objects:
 10215 ;;		On entry : 3F/3A
 10216 ;;		On exit  : 3F/39
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:   13
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_SYSTEM_Initialize
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text34
 10234  00765C                     __ptext34:
 10235                           	opt callstack 0
 10236  00765C                     _OSCILLATOR_Initialize:
 10237                           	opt callstack 16
 10238                           
 10239                           ; BSR set to: 58
 10240                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 10241                           
 10242                           ; BSR set to: 58
 10243                           ;incstack = 0
 10244  00765C  0E60               	movlw	96
 10245  00765E  0139               	movlb	57	; () banked
 10246  007660  6FD9               	movwf	217,b	;volatile
 10247                           
 10248                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 10249  007662  0E00               	movlw	0
 10250  007664  6FDB               	movwf	219,b	;volatile
 10251                           
 10252                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 10253  007666  0E00               	movlw	0
 10254  007668  6FDD               	movwf	221,b	;volatile
 10255                           
 10256                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 10257  00766A  0E08               	movlw	8
 10258  00766C  6FDF               	movwf	223,b	;volatile
 10259                           
 10260                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 10261  00766E  0E00               	movlw	0
 10262  007670  6FDE               	movwf	222,b	;volatile
 10263                           
 10264                           ; BSR set to: 57
 10265  007672  0012               	return		;funcret
 10266  007674                     __end_of_OSCILLATOR_Initialize:
 10267                           	opt callstack 0
 10268                           
 10269 ;; *************** function _INTERRUPT_Initialize *****************
 10270 ;; Defined at:
 10271 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;		None
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;		None
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  1    wreg      void 
 10278 ;; Registers used:
 10279 ;;		None
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;Total ram usage:        0 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:   13
 10292 ;; This function calls:
 10293 ;;		Nothing
 10294 ;; This function is called by:
 10295 ;;		_SYSTEM_Initialize
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text35
 10300  007A04                     __ptext35:
 10301                           	opt callstack 0
 10302  007A04                     _INTERRUPT_Initialize:
 10303                           	opt callstack 16
 10304                           
 10305                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
 10306                           
 10307                           ; BSR set to: 57
 10308                           ;incstack = 0
 10309  007A04  9AD2               	bcf	210,5,c	;volatile
 10310  007A06  0012               	return		;funcret
 10311  007A08                     __end_of_INTERRUPT_Initialize:
 10312                           	opt callstack 0
 10313                           
 10314 ;; *************** function _I2C2_Initialize *****************
 10315 ;; Defined at:
 10316 ;;		line 183 in file "mcc_generated_files/i2c2_master.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;		None
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      void 
 10323 ;; Registers used:
 10324 ;;		wreg, status,2
 10325 ;; Tracked objects:
 10326 ;;		On entry : 3F/0
 10327 ;;		On exit  : 3F/3D
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:   13
 10337 ;; This function calls:
 10338 ;;		Nothing
 10339 ;; This function is called by:
 10340 ;;		_SYSTEM_Initialize
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           	psect	text36
 10345  007486                     __ptext36:
 10346                           	opt callstack 0
 10347  007486                     _I2C2_Initialize:
 10348                           	opt callstack 16
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;mcc_generated_files/i2c2_master.c: 186:     I2C2CON0 = 0x04;
 10352                           
 10353                           ;incstack = 0
 10354  007486  0E04               	movlw	4
 10355  007488  013D               	movlb	61	; () banked
 10356  00748A  6F5D               	movwf	93,b	;volatile
 10357                           
 10358                           ;mcc_generated_files/i2c2_master.c: 188:     I2C2CON1 = 0x80;
 10359  00748C  0E80               	movlw	128
 10360  00748E  6F5E               	movwf	94,b	;volatile
 10361                           
 10362                           ;mcc_generated_files/i2c2_master.c: 190:     I2C2CON2 = 0x18;
 10363  007490  0E18               	movlw	24
 10364  007492  6F5F               	movwf	95,b	;volatile
 10365                           
 10366                           ;mcc_generated_files/i2c2_master.c: 192:     I2C2CLK = 0x03;
 10367  007494  0E03               	movlw	3
 10368  007496  6F65               	movwf	101,b	;volatile
 10369                           
 10370                           ;mcc_generated_files/i2c2_master.c: 194:     I2C2PIR = 0x00;
 10371  007498  0E00               	movlw	0
 10372  00749A  6F63               	movwf	99,b	;volatile
 10373                           
 10374                           ;mcc_generated_files/i2c2_master.c: 196:     I2C2PIE = 0x00;
 10375  00749C  0E00               	movlw	0
 10376  00749E  6F64               	movwf	100,b	;volatile
 10377                           
 10378                           ;mcc_generated_files/i2c2_master.c: 198:     I2C2ERR = 0x00;
 10379  0074A0  0E00               	movlw	0
 10380  0074A2  6F60               	movwf	96,b	;volatile
 10381                           
 10382                           ; BSR set to: 61
 10383                           ;mcc_generated_files/i2c2_master.c: 200:     I2C2CNT = 0xFF;
 10384  0074A4  6956               	setf	86,b	;volatile
 10385                           
 10386                           ; BSR set to: 61
 10387  0074A6  0012               	return		;funcret
 10388  0074A8                     __end_of_I2C2_Initialize:
 10389                           	opt callstack 0
 10390                           
 10391 ;; *************** function _FVR_Initialize *****************
 10392 ;; Defined at:
 10393 ;;		line 58 in file "mcc_generated_files/fvr.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;		None
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;		None
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg, status,2
 10402 ;; Tracked objects:
 10403 ;;		On entry : 3F/39
 10404 ;;		On exit  : 3F/3E
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;Total ram usage:        0 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:   13
 10414 ;; This function calls:
 10415 ;;		Nothing
 10416 ;; This function is called by:
 10417 ;;		_SYSTEM_Initialize
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           	psect	text37
 10422  007984                     __ptext37:
 10423                           	opt callstack 0
 10424  007984                     _FVR_Initialize:
 10425                           	opt callstack 16
 10426                           
 10427                           ; BSR set to: 57
 10428                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x83;
 10429                           
 10430                           ; BSR set to: 61
 10431                           ;incstack = 0
 10432  007984  0E83               	movlw	131
 10433  007986  013E               	movlb	62	; () banked
 10434  007988  6FC1               	movwf	193,b	;volatile
 10435                           
 10436                           ; BSR set to: 62
 10437  00798A  0012               	return		;funcret
 10438  00798C                     __end_of_FVR_Initialize:
 10439                           	opt callstack 0
 10440                           
 10441 ;; *************** function _ADCC_Initialize *****************
 10442 ;; Defined at:
 10443 ;;		line 63 in file "mcc_generated_files/adcc.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, status,2, status,0, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : 3F/3E
 10454 ;;		On exit  : 3F/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;Total ram usage:        0 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:   14
 10464 ;; This function calls:
 10465 ;;		_ADCC_SetADTIInterruptHandler
 10466 ;; This function is called by:
 10467 ;;		_SYSTEM_Initialize
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           	psect	text38
 10472  0063D2                     __ptext38:
 10473                           	opt callstack 0
 10474  0063D2                     _ADCC_Initialize:
 10475                           	opt callstack 15
 10476                           
 10477                           ; BSR set to: 62
 10478                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
 10479                           
 10480                           ; BSR set to: 62
 10481                           ;incstack = 0
 10482  0063D2  69DE               	setf	222,b	;volatile
 10483                           
 10484                           ; BSR set to: 62
 10485                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
 10486  0063D4  0E7F               	movlw	127
 10487  0063D6  6FDF               	movwf	223,b	;volatile
 10488                           
 10489                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 10490  0063D8  0E00               	movlw	0
 10491  0063DA  6FE0               	movwf	224,b	;volatile
 10492                           
 10493                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
 10494  0063DC  0E80               	movlw	128
 10495  0063DE  6FE1               	movwf	225,b	;volatile
 10496                           
 10497                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 10498  0063E0  0E00               	movlw	0
 10499  0063E2  6FE4               	movwf	228,b	;volatile
 10500                           
 10501                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 10502  0063E4  0E00               	movlw	0
 10503  0063E6  6FE5               	movwf	229,b	;volatile
 10504                           
 10505                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 10506  0063E8  0E00               	movlw	0
 10507  0063EA  6FEA               	movwf	234,b	;volatile
 10508                           
 10509                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
 10510  0063EC  0E10               	movlw	16
 10511  0063EE  6FEC               	movwf	236,b	;volatile
 10512                           
 10513                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 10514  0063F0  0E00               	movlw	0
 10515  0063F2  6FF1               	movwf	241,b	;volatile
 10516                           
 10517                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
 10518  0063F4  0E80               	movlw	128
 10519  0063F6  6FF3               	movwf	243,b	;volatile
 10520                           
 10521                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 10522  0063F8  0E00               	movlw	0
 10523  0063FA  6FF4               	movwf	244,b	;volatile
 10524                           
 10525                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 10526  0063FC  0E00               	movlw	0
 10527  0063FE  6FF5               	movwf	245,b	;volatile
 10528                           
 10529                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 10530  006400  0E00               	movlw	0
 10531  006402  6FF6               	movwf	246,b	;volatile
 10532                           
 10533                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 10534  006404  0E00               	movlw	0
 10535  006406  6FF7               	movwf	247,b	;volatile
 10536                           
 10537                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 10538  006408  0E00               	movlw	0
 10539  00640A  6FF9               	movwf	249,b	;volatile
 10540                           
 10541                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
 10542  00640C  0E43               	movlw	67
 10543  00640E  6FFA               	movwf	250,b	;volatile
 10544                           
 10545                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
 10546  006410  0E27               	movlw	39
 10547  006412  6FFB               	movwf	251,b	;volatile
 10548                           
 10549                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 10550  006414  0E00               	movlw	0
 10551  006416  6FFC               	movwf	252,b	;volatile
 10552                           
 10553                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
 10554  006418  0E03               	movlw	3
 10555  00641A  6FFD               	movwf	253,b	;volatile
 10556                           
 10557                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 10558  00641C  0E00               	movlw	0
 10559  00641E  6FFE               	movwf	254,b	;volatile
 10560                           
 10561                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x33;
 10562  006420  0E33               	movlw	51
 10563  006422  6FFF               	movwf	255,b	;volatile
 10564                           
 10565                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 10566  006424  0E84               	movlw	132
 10567  006426  6FF8               	movwf	248,b	;volatile
 10568                           
 10569                           ; BSR set to: 62
 10570                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
 10571  006428  0139               	movlb	57	; () banked
 10572  00642A  97A1               	bcf	161,3,b	;volatile
 10573                           
 10574                           ; BSR set to: 57
 10575                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
 10576  00642C  8791               	bsf	145,3,b	;volatile
 10577                           
 10578                           ; BSR set to: 57
 10579                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 10580  00642E  0E2C               	movlw	low _ADCC_DefaultInterruptHandler
 10581  006430  0100               	movlb	0	; () banked
 10582  006432  6F84               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 10583  006434  0E7A               	movlw	high _ADCC_DefaultInterruptHandler
 10584  006436  6F85               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 10585  006438  EC32  F03C         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 10586                           
 10587                           ; BSR set to: 0
 10588  00643C  0012               	return		;funcret
 10589  00643E                     __end_of_ADCC_Initialize:
 10590                           	opt callstack 0
 10591                           
 10592 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 10593 ;; Defined at:
 10594 ;;		line 316 in file "mcc_generated_files/adcc.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;  InterruptHan    2   36[BANK0 ] PTR FTN()void 
 10597 ;;		 -> adcCaptureIsr(1), ADCC_DefaultInterruptHandler(1), 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;		None
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0
 10604 ;; Tracked objects:
 10605 ;;		On entry : 3F/0
 10606 ;;		On exit  : 3F/0
 10607 ;;		Unchanged: 3F/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10609 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10613 ;;Total ram usage:        2 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:   13
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_ADCC_Initialize
 10620 ;;		_aCaptureInit
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624                           	psect	text39
 10625  007864                     __ptext39:
 10626                           	opt callstack 0
 10627  007864                     _ADCC_SetADTIInterruptHandler:
 10628                           	opt callstack 16
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 10632                           
 10633                           ; BSR set to: 0
 10634                           ;incstack = 0
 10635  007864  0060  F210  F2EB   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 10636  00786A  0060  F214  F2EC   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 10637                           
 10638                           ; BSR set to: 0
 10639  007870  0012               	return		;funcret
 10640  007872                     __end_of_ADCC_SetADTIInterruptHandler:
 10641                           	opt callstack 0
 10642                           
 10643 ;; *************** function _MonitorMsgSend *****************
 10644 ;; Defined at:
 10645 ;;		line 231 in file "main.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  state           1    wreg     enum E16847
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;  state           1   91[BANK0 ] enum E16847
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 10654 ;; Tracked objects:
 10655 ;;		On entry : 3F/1
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10663 ;;Total ram usage:        1 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:   24
 10666 ;; This function calls:
 10667 ;;		_MonitorMsgForcedSend
 10668 ;;		_timeElapsedR
 10669 ;; This function is called by:
 10670 ;;		_main
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674                           	psect	text40
 10675  007334                     __ptext40:
 10676                           	opt callstack 0
 10677  007334                     _MonitorMsgSend:
 10678                           	opt callstack 6
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;incstack = 0
 10682                           ;MonitorMsgSend@state stored from wreg
 10683  007334  0100               	movlb	0	; () banked
 10684  007336  6FBB               	movwf	MonitorMsgSend@state& (0+255),b
 10685                           
 10686                           ;main.c: 232:     if (timeElapsedR(&monTstamp, ((time_t) 50*1))) {
 10687  007338  0E78               	movlw	low _monTstamp
 10688  00733A  0100               	movlb	0	; () banked
 10689  00733C  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
 10690  00733E  0E01               	movlw	high _monTstamp
 10691  007340  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 10692  007342  0E00               	movlw	0
 10693  007344  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
 10694  007346  0E32               	movlw	50
 10695  007348  6F8E               	movwf	timeElapsedR@duration& (0+255),b
 10696  00734A  EC83  F032         	call	_timeElapsedR	;wreg free
 10697  00734E  0900               	iorlw	0
 10698  007350  B4D8               	btfsc	status,2,c
 10699  007352  0012               	return	
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;main.c: 233:          MonitorMsgForcedSend(state);
 10703  007354  51BB               	movf	MonitorMsgSend@state& (0+255),w,b
 10704  007356  ECF0  F023         	call	_MonitorMsgForcedSend
 10705  00735A  0012               	return		;funcret
 10706  00735C                     __end_of_MonitorMsgSend:
 10707                           	opt callstack 0
 10708                           
 10709 ;; *************** function _MonitorInit *****************
 10710 ;; Defined at:
 10711 ;;		line 127 in file "main.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;		None
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;		None
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  1    wreg      void 
 10718 ;; Registers used:
 10719 ;;		None
 10720 ;; Tracked objects:
 10721 ;;		On entry : 3F/0
 10722 ;;		On exit  : 3F/0
 10723 ;;		Unchanged: 3F/0
 10724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10729 ;;Total ram usage:        0 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; Hardware stack levels required when called:   13
 10732 ;; This function calls:
 10733 ;;		Nothing
 10734 ;; This function is called by:
 10735 ;;		_main
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           	psect	text41
 10740  007A28                     __ptext41:
 10741                           	opt callstack 0
 10742  007A28                     _MonitorInit:
 10743                           	opt callstack 17
 10744                           
 10745                           ; BSR set to: 0
 10746                           
 10747                           ;incstack = 0
 10748  007A28  0012               	return		;funcret
 10749  007A2A                     __end_of_MonitorInit:
 10750                           	opt callstack 0
 10751                           
 10752 ;; *************** function _MenuMng *****************
 10753 ;; Defined at:
 10754 ;;		line 31 in file "menu.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;		None
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  keyPress        1   92[BANK0 ] char 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/1
 10765 ;;		On exit  : 3E/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;Total ram usage:        3 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:   22
 10775 ;; This function calls:
 10776 ;;		___lwdiv
 10777 ;;		_keyRead
 10778 ;;		_printf
 10779 ;;		_timeElapsed
 10780 ;;		_timeGet
 10781 ;; This function is called by:
 10782 ;;		_main
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           	psect	text42
 10787  002AF6                     __ptext42:
 10788                           	opt callstack 0
 10789  002AF6                     _MenuMng:
 10790                           	opt callstack 8
 10791                           
 10792                           ;menu.c: 33:     int8_t keyPress;;menu.c: 34:     keyPress = keyRead();
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;incstack = 0
 10796  002AF6  ECC2  F039         	call	_keyRead	;wreg free
 10797  002AFA  6FBC               	movwf	MenuMng@keyPress& (0+255),b
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;menu.c: 35:     if ((keyPress >= 0) && (keyPress != 4)) {
 10801  002AFC  BFBC               	btfsc	MenuMng@keyPress& (0+255),7,b
 10802  002AFE  D1F0               	goto	l15609
 10803                           
 10804                           ; BSR set to: 0
 10805  002B00  0E04               	movlw	4
 10806  002B02  19BC               	xorwf	MenuMng@keyPress& (0+255),w,b
 10807  002B04  B4D8               	btfsc	status,2,c
 10808  002B06  D1EC               	goto	l15609
 10809                           
 10810                           ; BSR set to: 0
 10811                           ;menu.c: 36:         lcdMenuPrint = 1;
 10812  002B08  0E01               	movlw	1
 10813  002B0A  0101               	movlb	1	; () banked
 10814  002B0C  6F44               	movwf	_lcdMenuPrint& (0+255),b
 10815                           
 10816                           ; BSR set to: 1
 10817                           ;menu.c: 37:         printf ("KEY! %d\n", keyPress);
 10818  002B0E  0EE3               	movlw	low STR_53
 10819  002B10  6FA6               	movwf	printf@fmt& (0+255),b
 10820  002B12  0EFF               	movlw	high STR_53
 10821  002B14  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 10822  002B16  0100               	movlb	0	; () banked
 10823  002B18  51BC               	movf	MenuMng@keyPress& (0+255),w,b
 10824  002B1A  0101               	movlb	1	; () banked
 10825  002B1C  6FA8               	movwf	(?_printf+2)& (0+255),b
 10826  002B1E  6BA9               	clrf	(?_printf+3)& (0+255),b
 10827  002B20  BFA8               	btfsc	(?_printf+2)& (0+255),7,b
 10828  002B22  07A9               	decf	(?_printf+3)& (0+255),f,b
 10829  002B24  EC84  F039         	call	_printf	;wreg free
 10830                           
 10831                           ;menu.c: 39:         switch (keyPress) {
 10832  002B28  D1AC               	goto	l15605
 10833  002B2A                     l15421:
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;menu.c: 41:                 if (menuStatus == CFG_IDLE) {
 10837  002B2A  51D0               	movf	_menuStatus& (0+255),w,b
 10838  002B2C  A4D8               	btfss	status,2,c
 10839  002B2E  D00E               	goto	l15429
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;menu.c: 42:                     menuStatus = CFG_IP;
 10843  002B30  0E01               	movlw	1
 10844  002B32  6FD0               	movwf	_menuStatus& (0+255),b
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;menu.c: 43:                     menuVal = IP;
 10848  002B34  C1F8  F0C8         	movff	_IP,_menuVal
 10849  002B38                     L5:
 10850  002B38  6BC9               	clrf	(_menuVal+1)& (0+255),b
 10851                           
 10852                           ; BSR set to: 0
 10853                           ;menu.c: 44:                     menuTstamp = timeGet();
 10854  002B3A  ECBD  F03B         	call	_timeGet	;wreg free
 10855  002B3E  0060  F230  F12B   	movff	?_timeGet,_menuTstamp
 10856  002B44  0060  F234  F12C   	movff	?_timeGet+1,_menuTstamp+1
 10857                           
 10858                           ;menu.c: 45:                 } else if (menuStatus == CFG_IP) {
 10859  002B4A  D1C2               	goto	l15607
 10860  002B4C                     l15429:
 10861                           
 10862                           ; BSR set to: 0
 10863  002B4C  05D0               	decf	_menuStatus& (0+255),w,b
 10864  002B4E  A4D8               	btfss	status,2,c
 10865  002B50  D0C2               	goto	L7
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;menu.c: 47:                     IP = menuVal;
 10869  002B52  C0C8  F1F8         	movff	_menuVal,_IP
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;menu.c: 48:                     chIP = 1;
 10873  002B56  0E01               	movlw	1
 10874  002B58  0101               	movlb	1	; () banked
 10875  002B5A  6F55               	movwf	_chIP& (0+255),b
 10876                           
 10877                           ; BSR set to: 1
 10878                           ;menu.c: 49:                     if (VentMode == 1) {
 10879  002B5C  0557               	decf	_VentMode& (0+255),w,b
 10880  002B5E  A4D8               	btfss	status,2,c
 10881  002B60  D0BA               	goto	L7
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;menu.c: 50:                         VentMode = 0;
 10885  002B62  0E00               	movlw	0
 10886  002B64  6F57               	movwf	_VentMode& (0+255),b
 10887                           
 10888                           ;menu.c: 51:                         chVentMode = 1;
 10889  002B66  0E01               	movlw	1
 10890  002B68  6F4F               	movwf	_chVentMode& (0+255),b
 10891                           
 10892                           ;menu.c: 52:                     }
 10893  002B6A  D0B5               	goto	L7
 10894  002B6C                     l15441:
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;menu.c: 60:                 if (menuStatus == CFG_IDLE) {
 10898  002B6C  51D0               	movf	_menuStatus& (0+255),w,b
 10899  002B6E  A4D8               	btfss	status,2,c
 10900  002B70  D005               	goto	l15449
 10901                           
 10902                           ; BSR set to: 0
 10903                           ;menu.c: 61:                     menuStatus = CFG_BPM;
 10904  002B72  0E02               	movlw	2
 10905  002B74  6FD0               	movwf	_menuStatus& (0+255),b
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;menu.c: 62:                     menuVal = BPM;
 10909  002B76  C1F9  F0C8         	movff	_BPM,_menuVal
 10910  002B7A  D7DE               	goto	L5
 10911  002B7C                     l15449:
 10912                           
 10913                           ; BSR set to: 0
 10914  002B7C  0E02               	movlw	2
 10915  002B7E  19D0               	xorwf	_menuStatus& (0+255),w,b
 10916  002B80  A4D8               	btfss	status,2,c
 10917  002B82  D0A9               	goto	L7
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;menu.c: 66:                     BPM = menuVal;
 10921  002B84  C0C8  F1F9         	movff	_menuVal,_BPM
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;menu.c: 67:                     chBPM = 1;
 10925  002B88  0E01               	movlw	1
 10926  002B8A  0101               	movlb	1	; () banked
 10927  002B8C  6F56               	movwf	_chBPM& (0+255),b
 10928                           
 10929                           ; BSR set to: 1
 10930                           ;menu.c: 68:                     IDuration = ((uint16_t) 60*1000)/(3*BPM);
 10931  002B8E  0EEA               	movlw	234
 10932  002B90  0100               	movlb	0	; () banked
 10933  002B92  6F85               	movwf	(___lwdiv@dividend+1)& (0+255),b
 10934  002B94  0E60               	movlw	96
 10935  002B96  6F84               	movwf	___lwdiv@dividend& (0+255),b
 10936  002B98  0101               	movlb	1	; () banked
 10937  002B9A  51F9               	movf	_BPM& (0+255),w,b
 10938  002B9C  0D03               	mullw	3
 10939  002B9E  006F FFCC  F086    	movff	prodl,___lwdiv@divisor
 10940  002BA4  006F FFD0  F087    	movff	prodh,___lwdiv@divisor+1
 10941  002BAA  ECC9  F033         	call	___lwdiv	;wreg free
 10942  002BAE  0060  F210  F137   	movff	?___lwdiv,_IDuration
 10943  002BB4  0060  F214  F138   	movff	?___lwdiv+1,_IDuration+1
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;menu.c: 69:                     EDuration = ((uint16_t) 60*1000/BPM) - IDuration;
 10947  002BBA  0EEA               	movlw	234
 10948  002BBC  6F85               	movwf	(___lwdiv@dividend+1)& (0+255),b
 10949  002BBE  0E60               	movlw	96
 10950  002BC0  6F84               	movwf	___lwdiv@dividend& (0+255),b
 10951  002BC2  0060  F7E4  F086   	movff	_BPM,___lwdiv@divisor
 10952  002BC8  6B87               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10953  002BCA  ECC9  F033         	call	___lwdiv	;wreg free
 10954  002BCE  0101               	movlb	1	; () banked
 10955  002BD0  5137               	movf	_IDuration& (0+255),w,b
 10956  002BD2  0100               	movlb	0	; () banked
 10957  002BD4  5D84               	subwf	?___lwdiv& (0+255),w,b
 10958  002BD6  0101               	movlb	1	; () banked
 10959  002BD8  6F35               	movwf	_EDuration& (0+255),b
 10960  002BDA  5138               	movf	(_IDuration+1)& (0+255),w,b
 10961  002BDC  0100               	movlb	0	; () banked
 10962  002BDE  5985               	subwfb	(?___lwdiv+1)& (0+255),w,b
 10963  002BE0  0101               	movlb	1	; () banked
 10964  002BE2  6F36               	movwf	(_EDuration+1)& (0+255),b
 10965  002BE4  D078               	goto	L7
 10966  002BE6                     l15463:
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;menu.c: 77:                 if (menuStatus == CFG_IDLE) {
 10970  002BE6  51D0               	movf	_menuStatus& (0+255),w,b
 10971  002BE8  A4D8               	btfss	status,2,c
 10972  002BEA  D005               	goto	l15471
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;menu.c: 78:                     menuStatus = CFG_PEEP;
 10976  002BEC  0E03               	movlw	3
 10977  002BEE  6FD0               	movwf	_menuStatus& (0+255),b
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;menu.c: 79:                     menuVal = PEEP;
 10981  002BF0  C1F7  F0C8         	movff	_PEEP,_menuVal
 10982  002BF4  D7A1               	goto	L5
 10983  002BF6                     l15471:
 10984                           
 10985                           ; BSR set to: 0
 10986  002BF6  0E03               	movlw	3
 10987  002BF8  19D0               	xorwf	_menuStatus& (0+255),w,b
 10988  002BFA  A4D8               	btfss	status,2,c
 10989  002BFC  D06C               	goto	L7
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;menu.c: 83:                     PEEP = menuVal;
 10993  002BFE  C0C8  F1F7         	movff	_menuVal,_PEEP
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;menu.c: 84:                     chPEEP = 1;
 10997  002C02  0E01               	movlw	1
 10998  002C04  0101               	movlb	1	; () banked
 10999  002C06  6F53               	movwf	_chPEEP& (0+255),b
 11000  002C08  D066               	goto	L7
 11001  002C0A                     l15479:
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;menu.c: 92:                 if (menuStatus == CFG_IDLE) {
 11005  002C0A  51D0               	movf	_menuStatus& (0+255),w,b
 11006  002C0C  A4D8               	btfss	status,2,c
 11007  002C0E  D005               	goto	l15487
 11008                           
 11009                           ; BSR set to: 0
 11010                           ;menu.c: 93:                     menuStatus = CFG_MAXP;
 11011  002C10  0E04               	movlw	4
 11012  002C12  6FD0               	movwf	_menuStatus& (0+255),b
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;menu.c: 94:                     menuVal = MaxP;
 11016  002C14  C1FA  F0C8         	movff	_MaxP,_menuVal
 11017  002C18  D78F               	goto	L5
 11018  002C1A                     l15487:
 11019                           
 11020                           ; BSR set to: 0
 11021  002C1A  0E04               	movlw	4
 11022  002C1C  19D0               	xorwf	_menuStatus& (0+255),w,b
 11023  002C1E  A4D8               	btfss	status,2,c
 11024  002C20  D05A               	goto	L7
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;menu.c: 98:                     MaxP = menuVal;
 11028  002C22  C0C8  F1FA         	movff	_menuVal,_MaxP
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;menu.c: 99:                     chMaxP = 1;
 11032  002C26  0E01               	movlw	1
 11033  002C28  0101               	movlb	1	; () banked
 11034  002C2A  6F54               	movwf	_chMaxP& (0+255),b
 11035                           
 11036                           ;menu.c: 100:                     if (VentMode == 0) {
 11037  002C2C  5157               	movf	_VentMode& (0+255),w,b
 11038  002C2E  A4D8               	btfss	status,2,c
 11039  002C30  D052               	goto	L7
 11040  002C32                     u15110:
 11041                           
 11042                           ; BSR set to: 1
 11043                           ;menu.c: 101:                         VentMode = 1;
 11044  002C32  0E01               	movlw	1
 11045  002C34  6F57               	movwf	_VentMode& (0+255),b
 11046                           
 11047                           ;menu.c: 102:                         chVentMode = 1;
 11048  002C36  0E01               	movlw	1
 11049  002C38  6F4F               	movwf	_chVentMode& (0+255),b
 11050  002C3A  D04D               	goto	L7
 11051  002C3C                     l15497:
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;menu.c: 111:                 if (menuStatus == CFG_IDLE) {
 11055  002C3C  51D0               	movf	_menuStatus& (0+255),w,b
 11056  002C3E  A4D8               	btfss	status,2,c
 11057  002C40  D01A               	goto	l15513
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;menu.c: 112:                     menuStatus = CFG_MAXV;
 11061  002C42  0E05               	movlw	5
 11062  002C44  6FD0               	movwf	_menuStatus& (0+255),b
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;menu.c: 113:                     menuVal = MaxV;
 11066  002C46  C1F6  F0C8         	movff	_MaxV,_menuVal
 11067  002C4A  6BC9               	clrf	(_menuVal+1)& (0+255),b
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;menu.c: 114:                     menuTstamp = timeGet();
 11071  002C4C  ECBD  F03B         	call	_timeGet	;wreg free
 11072  002C50  0060  F230  F12B   	movff	?_timeGet,_menuTstamp
 11073  002C56  0060  F234  F12C   	movff	?_timeGet+1,_menuTstamp+1
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;menu.c: 115:                     if ((MaxP != IP) && (VentMode == 0)) {
 11077  002C5C  0101               	movlb	1	; () banked
 11078  002C5E  51F8               	movf	_IP& (0+255),w,b
 11079  002C60  19FA               	xorwf	_MaxP& (0+255),w,b
 11080  002C62  B4D8               	btfsc	status,2,c
 11081  002C64  D135               	goto	l15607
 11082                           
 11083                           ; BSR set to: 1
 11084  002C66  5157               	movf	_VentMode& (0+255),w,b
 11085  002C68  A4D8               	btfss	status,2,c
 11086  002C6A  D132               	goto	l15607
 11087                           
 11088                           ; BSR set to: 1
 11089                           ;menu.c: 118:                         MaxP = IP;
 11090  002C6C  C1F8  F1FA         	movff	_IP,_MaxP
 11091                           
 11092                           ; BSR set to: 1
 11093                           ;menu.c: 119:                         chMaxP = 1;
 11094  002C70  0E01               	movlw	1
 11095  002C72  6F54               	movwf	_chMaxP& (0+255),b
 11096  002C74  D12D               	goto	l15607
 11097  002C76                     l15513:
 11098                           
 11099                           ; BSR set to: 0
 11100  002C76  0E05               	movlw	5
 11101  002C78  19D0               	xorwf	_menuStatus& (0+255),w,b
 11102  002C7A  A4D8               	btfss	status,2,c
 11103  002C7C  D02C               	goto	L7
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;menu.c: 123:                     MaxV = menuVal;
 11107  002C7E  C0C8  F1F6         	movff	_menuVal,_MaxV
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;menu.c: 124:                     chMaxV = 1;
 11111  002C82  0E01               	movlw	1
 11112  002C84  0101               	movlb	1	; () banked
 11113  002C86  6F50               	movwf	_chMaxV& (0+255),b
 11114                           
 11115                           ;menu.c: 125:                     if (VentMode == 0) {
 11116  002C88  5157               	movf	_VentMode& (0+255),w,b
 11117  002C8A  B4D8               	btfsc	status,2,c
 11118  002C8C  D7D2               	goto	u15110
 11119  002C8E  D023               	goto	L7
 11120  002C90                     l15523:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;menu.c: 136:                 if (menuStatus == CFG_IDLE) {
 11124  002C90  51D0               	movf	_menuStatus& (0+255),w,b
 11125  002C92  A4D8               	btfss	status,2,c
 11126  002C94  D005               	goto	l15531
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;menu.c: 137:                     menuStatus = CFG_HIGHVA;
 11130  002C96  0E07               	movlw	7
 11131  002C98  6FD0               	movwf	_menuStatus& (0+255),b
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;menu.c: 138:                     menuVal = HighVAlarm;
 11135  002C9A  C1F4  F0C8         	movff	_HighVAlarm,_menuVal
 11136  002C9E  D74C               	goto	L5
 11137  002CA0                     l15531:
 11138                           
 11139                           ; BSR set to: 0
 11140  002CA0  0E07               	movlw	7
 11141  002CA2  19D0               	xorwf	_menuStatus& (0+255),w,b
 11142  002CA4  A4D8               	btfss	status,2,c
 11143  002CA6  D017               	goto	L7
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;menu.c: 142:                     HighVAlarm = menuVal;
 11147  002CA8  C0C8  F1F4         	movff	_menuVal,_HighVAlarm
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;menu.c: 143:                     chHighVAlarm = 1;
 11151  002CAC  0E01               	movlw	1
 11152  002CAE  0101               	movlb	1	; () banked
 11153  002CB0  6F51               	movwf	_chHighVAlarm& (0+255),b
 11154  002CB2  D011               	goto	L7
 11155  002CB4                     l15539:
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;menu.c: 151:                 if (menuStatus == CFG_IDLE) {
 11159  002CB4  51D0               	movf	_menuStatus& (0+255),w,b
 11160  002CB6  A4D8               	btfss	status,2,c
 11161  002CB8  D005               	goto	l15547
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;menu.c: 152:                     menuStatus = CFG_LOWVA;
 11165  002CBA  0E06               	movlw	6
 11166  002CBC  6FD0               	movwf	_menuStatus& (0+255),b
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;menu.c: 153:                     menuVal = LowVAlarm;
 11170  002CBE  C1F5  F0C8         	movff	_LowVAlarm,_menuVal
 11171  002CC2  D73A               	goto	L5
 11172  002CC4                     l15547:
 11173                           
 11174                           ; BSR set to: 0
 11175  002CC4  0E06               	movlw	6
 11176  002CC6  19D0               	xorwf	_menuStatus& (0+255),w,b
 11177  002CC8  A4D8               	btfss	status,2,c
 11178  002CCA  D005               	goto	L7
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;menu.c: 157:                     LowVAlarm = menuVal;
 11182  002CCC  C0C8  F1F5         	movff	_menuVal,_LowVAlarm
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;menu.c: 158:                     chLowVAlarm = 1;
 11186  002CD0  0E01               	movlw	1
 11187  002CD2  0101               	movlb	1	; () banked
 11188  002CD4  6F52               	movwf	_chLowVAlarm& (0+255),b
 11189  002CD6                     L7:
 11190                           
 11191                           ;menu.c: 159:                     menuStatus = CFG_IDLE;
 11192  002CD6  0E00               	movlw	0
 11193  002CD8  0100               	movlb	0	; () banked
 11194  002CDA  6FD0               	movwf	_menuStatus& (0+255),b
 11195                           
 11196                           ;menu.c: 160:                 } else {
 11197  002CDC  D0F9               	goto	l15607
 11198  002CDE                     l15555:
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;menu.c: 166:                 if (menuStatus != CFG_IDLE) {
 11202  002CDE  51D0               	movf	_menuStatus& (0+255),w,b
 11203  002CE0  B4D8               	btfsc	status,2,c
 11204  002CE2  D0F6               	goto	l15607
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;menu.c: 167:                     menuTstamp = timeGet();
 11208  002CE4  ECBD  F03B         	call	_timeGet	;wreg free
 11209  002CE8  0060  F230  F12B   	movff	?_timeGet,_menuTstamp
 11210  002CEE  0060  F234  F12C   	movff	?_timeGet+1,_menuTstamp+1
 11211                           
 11212                           ;menu.c: 169:                     switch (menuStatus) {
 11213  002CF4  D040               	goto	l15577
 11214  002CF6                     l15559:
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;menu.c: 172:                             menuVal = menuVal + 1;
 11218  002CF6  0E01               	movlw	1
 11219  002CF8  25C8               	addwf	_menuVal& (0+255),w,b
 11220  002CFA  6FC8               	movwf	_menuVal& (0+255),b
 11221  002CFC  0E00               	movlw	0
 11222  002CFE  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11223  002D00  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11224                           
 11225                           ;menu.c: 173:                             if (menuVal > 80) {
 11226  002D02  51C9               	movf	(_menuVal+1)& (0+255),w,b
 11227  002D04  E104               	bnz	u15220
 11228  002D06  0E51               	movlw	81
 11229  002D08  5DC8               	subwf	_menuVal& (0+255),w,b
 11230  002D0A  A0D8               	btfss	status,0,c
 11231  002D0C  D0E1               	goto	l15607
 11232  002D0E                     u15220:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;menu.c: 174:                                 menuVal = 80;
 11236  002D0E  0E00               	movlw	0
 11237  002D10  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11238  002D12  0E50               	movlw	80
 11239  002D14  D096               	goto	L13
 11240  002D16                     l15563:
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;menu.c: 178:                             menuVal = menuVal + 1;
 11244  002D16  0E01               	movlw	1
 11245  002D18  25C8               	addwf	_menuVal& (0+255),w,b
 11246  002D1A  6FC8               	movwf	_menuVal& (0+255),b
 11247  002D1C  0E00               	movlw	0
 11248  002D1E  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11249  002D20  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11250                           
 11251                           ;menu.c: 179:                             if (menuVal > 25) {
 11252  002D22  51C9               	movf	(_menuVal+1)& (0+255),w,b
 11253  002D24  E104               	bnz	u15230
 11254  002D26  0E1A               	movlw	26
 11255  002D28  5DC8               	subwf	_menuVal& (0+255),w,b
 11256  002D2A  A0D8               	btfss	status,0,c
 11257  002D2C  D0D1               	goto	l15607
 11258  002D2E                     u15230:
 11259                           
 11260                           ; BSR set to: 0
 11261                           ;menu.c: 180:                                 menuVal = 25;
 11262  002D2E  0E00               	movlw	0
 11263  002D30  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11264  002D32  0E19               	movlw	25
 11265  002D34  D086               	goto	L13
 11266  002D36                     l15567:
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;menu.c: 184:                             menuVal = menuVal + 1;
 11270  002D36  0E01               	movlw	1
 11271  002D38  25C8               	addwf	_menuVal& (0+255),w,b
 11272  002D3A  6FC8               	movwf	_menuVal& (0+255),b
 11273  002D3C  0E00               	movlw	0
 11274  002D3E  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11275  002D40  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11276                           
 11277                           ;menu.c: 185:                             if (menuVal > 30) {
 11278  002D42  51C9               	movf	(_menuVal+1)& (0+255),w,b
 11279  002D44  E104               	bnz	u15240
 11280  002D46  0E1F               	movlw	31
 11281  002D48  5DC8               	subwf	_menuVal& (0+255),w,b
 11282  002D4A  A0D8               	btfss	status,0,c
 11283  002D4C  D0C1               	goto	l15607
 11284  002D4E                     u15240:
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;menu.c: 186:                                 menuVal = 30;
 11288  002D4E  0E00               	movlw	0
 11289  002D50  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11290  002D52  0E1E               	movlw	30
 11291  002D54  D076               	goto	L13
 11292  002D56                     l15571:
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;menu.c: 192:                             menuVal = menuVal + 20;
 11296  002D56  0E14               	movlw	20
 11297  002D58  25C8               	addwf	_menuVal& (0+255),w,b
 11298  002D5A  6FC8               	movwf	_menuVal& (0+255),b
 11299  002D5C  0E00               	movlw	0
 11300  002D5E  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11301  002D60  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11302                           
 11303                           ;menu.c: 193:                             if (menuVal > 800) {
 11304  002D62  0E21               	movlw	33
 11305  002D64  5DC8               	subwf	_menuVal& (0+255),w,b
 11306  002D66  0E03               	movlw	3
 11307  002D68  59C9               	subwfb	(_menuVal+1)& (0+255),w,b
 11308  002D6A  A0D8               	btfss	status,0,c
 11309  002D6C  D0B1               	goto	l15607
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;menu.c: 194:                                 menuVal = 800;
 11313  002D6E  0E03               	movlw	3
 11314  002D70  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11315  002D72  0E20               	movlw	32
 11316  002D74  D066               	goto	L13
 11317  002D76                     l15577:
 11318                           
 11319                           ; BSR set to: 0
 11320  002D76  51D0               	movf	_menuStatus& (0+255),w,b
 11321  002D78  6FBA               	movwf	??_MenuMng& (0+255),b
 11322  002D7A  6BBB               	clrf	(??_MenuMng+1)& (0+255),b
 11323                           
 11324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11325                           ; Switch size 1, requested type "simple"
 11326                           ; Number of cases is 1, Range of values is 0 to 0
 11327                           ; switch strategies available:
 11328                           ; Name         Instructions Cycles
 11329                           ; simple_byte            4     3 (average)
 11330                           ;	Chosen strategy is simple_byte
 11331  002D7C  51BB               	movf	(??_MenuMng+1)& (0+255),w,b
 11332  002D7E  0A00               	xorlw	0	; case 0
 11333  002D80  A4D8               	btfss	status,2,c
 11334  002D82  D0A6               	goto	l15607
 11335                           
 11336                           ; BSR set to: 0
 11337                           ; Switch size 1, requested type "simple"
 11338                           ; Number of cases is 7, Range of values is 1 to 7
 11339                           ; switch strategies available:
 11340                           ; Name         Instructions Cycles
 11341                           ; simple_byte           22    12 (average)
 11342                           ;	Chosen strategy is simple_byte
 11343  002D84  51BA               	movf	??_MenuMng& (0+255),w,b
 11344  002D86  0A01               	xorlw	1	; case 1
 11345  002D88  B4D8               	btfsc	status,2,c
 11346  002D8A  D7B5               	goto	l15559
 11347  002D8C  0A03               	xorlw	3	; case 2
 11348  002D8E  B4D8               	btfsc	status,2,c
 11349  002D90  D7D2               	goto	l15567
 11350  002D92  0A01               	xorlw	1	; case 3
 11351  002D94  B4D8               	btfsc	status,2,c
 11352  002D96  D7BF               	goto	l15563
 11353  002D98  0A07               	xorlw	7	; case 4
 11354  002D9A  B4D8               	btfsc	status,2,c
 11355  002D9C  D7AC               	goto	l15559
 11356  002D9E  0A01               	xorlw	1	; case 5
 11357  002DA0  B4D8               	btfsc	status,2,c
 11358  002DA2  D7D9               	goto	l15571
 11359  002DA4  0A03               	xorlw	3	; case 6
 11360  002DA6  B4D8               	btfsc	status,2,c
 11361  002DA8  D7D6               	goto	l15571
 11362  002DAA  0A01               	xorlw	1	; case 7
 11363  002DAC  B4D8               	btfsc	status,2,c
 11364  002DAE  D7D3               	goto	l15571
 11365  002DB0  D08F               	goto	l15607
 11366  002DB2                     l15579:
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;menu.c: 204:                 if (menuStatus != CFG_IDLE) {
 11370  002DB2  51D0               	movf	_menuStatus& (0+255),w,b
 11371  002DB4  B4D8               	btfsc	status,2,c
 11372  002DB6  D08C               	goto	l15607
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;menu.c: 205:                     menuTstamp = timeGet();
 11376  002DB8  ECBD  F03B         	call	_timeGet	;wreg free
 11377  002DBC  0060  F230  F12B   	movff	?_timeGet,_menuTstamp
 11378  002DC2  0060  F234  F12C   	movff	?_timeGet+1,_menuTstamp+1
 11379                           
 11380                           ;menu.c: 207:                     switch (menuStatus) {
 11381  002DC8  D03E               	goto	l15601
 11382  002DCA                     l15583:
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;menu.c: 210:                             menuVal = menuVal - 1;
 11386  002DCA  0EFF               	movlw	255
 11387  002DCC  25C8               	addwf	_menuVal& (0+255),w,b
 11388  002DCE  6FC8               	movwf	_menuVal& (0+255),b
 11389  002DD0  0EFF               	movlw	255
 11390  002DD2  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11391  002DD4  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11392                           
 11393                           ;menu.c: 211:                             if (menuVal < 4) {
 11394  002DD6  51C9               	movf	(_menuVal+1)& (0+255),w,b
 11395  002DD8  E17B               	bnz	l15607
 11396  002DDA  0E04               	movlw	4
 11397  002DDC  5DC8               	subwf	_menuVal& (0+255),w,b
 11398  002DDE  B0D8               	btfsc	status,0,c
 11399  002DE0  D077               	goto	l15607
 11400  002DE2                     u15270:
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;menu.c: 212:                                 menuVal = 4;
 11404  002DE2  0E00               	movlw	0
 11405  002DE4  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11406  002DE6  0E04               	movlw	4
 11407  002DE8  D02C               	goto	L13
 11408  002DEA                     l15587:
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;menu.c: 216:                             menuVal = menuVal - 1;
 11412  002DEA  0EFF               	movlw	255
 11413  002DEC  25C8               	addwf	_menuVal& (0+255),w,b
 11414  002DEE  6FC8               	movwf	_menuVal& (0+255),b
 11415  002DF0  0EFF               	movlw	255
 11416  002DF2  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11417  002DF4  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11418                           
 11419                           ;menu.c: 217:                             if (menuVal < 4) {
 11420  002DF6  51C9               	movf	(_menuVal+1)& (0+255),w,b
 11421  002DF8  E16B               	bnz	l15607
 11422  002DFA  0E04               	movlw	4
 11423  002DFC  5DC8               	subwf	_menuVal& (0+255),w,b
 11424  002DFE  A0D8               	btfss	status,0,c
 11425  002E00  D7F0               	goto	u15270
 11426  002E02  D066               	goto	l15607
 11427  002E04                     l15591:
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;menu.c: 222:                             menuVal = menuVal - 1;
 11431  002E04  0EFF               	movlw	255
 11432  002E06  25C8               	addwf	_menuVal& (0+255),w,b
 11433  002E08  6FC8               	movwf	_menuVal& (0+255),b
 11434  002E0A  0EFF               	movlw	255
 11435  002E0C  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11436  002E0E  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11437                           
 11438                           ;menu.c: 223:                             if (menuVal < 10) {
 11439  002E10  51C9               	movf	(_menuVal+1)& (0+255),w,b
 11440  002E12  E15E               	bnz	l15607
 11441  002E14  0E0A               	movlw	10
 11442  002E16  5DC8               	subwf	_menuVal& (0+255),w,b
 11443  002E18  B0D8               	btfsc	status,0,c
 11444  002E1A  D05A               	goto	l15607
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;menu.c: 224:                                 menuVal = 10;
 11448  002E1C  0E00               	movlw	0
 11449  002E1E  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11450  002E20  0E0A               	movlw	10
 11451  002E22  D00F               	goto	L13
 11452  002E24                     l15595:
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;menu.c: 230:                             menuVal = menuVal - 20;
 11456  002E24  0EEC               	movlw	236
 11457  002E26  25C8               	addwf	_menuVal& (0+255),w,b
 11458  002E28  6FC8               	movwf	_menuVal& (0+255),b
 11459  002E2A  0EFF               	movlw	255
 11460  002E2C  21C9               	addwfc	(_menuVal+1)& (0+255),w,b
 11461  002E2E  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11462                           
 11463                           ;menu.c: 231:                             if (menuVal < 100) {
 11464  002E30  51C9               	movf	(_menuVal+1)& (0+255),w,b
 11465  002E32  E14E               	bnz	l15607
 11466  002E34  0E64               	movlw	100
 11467  002E36  5DC8               	subwf	_menuVal& (0+255),w,b
 11468  002E38  B0D8               	btfsc	status,0,c
 11469  002E3A  D04A               	goto	l15607
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;menu.c: 232:                                 menuVal = 100;
 11473  002E3C  0E00               	movlw	0
 11474  002E3E  6FC9               	movwf	(_menuVal+1)& (0+255),b
 11475  002E40  0E64               	movlw	100
 11476  002E42                     L13:
 11477  002E42  6FC8               	movwf	_menuVal& (0+255),b
 11478  002E44  D045               	goto	l15607
 11479  002E46                     l15601:
 11480                           
 11481                           ; BSR set to: 0
 11482  002E46  51D0               	movf	_menuStatus& (0+255),w,b
 11483  002E48  6FBA               	movwf	??_MenuMng& (0+255),b
 11484  002E4A  6BBB               	clrf	(??_MenuMng+1)& (0+255),b
 11485                           
 11486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11487                           ; Switch size 1, requested type "simple"
 11488                           ; Number of cases is 1, Range of values is 0 to 0
 11489                           ; switch strategies available:
 11490                           ; Name         Instructions Cycles
 11491                           ; simple_byte            4     3 (average)
 11492                           ;	Chosen strategy is simple_byte
 11493  002E4C  51BB               	movf	(??_MenuMng+1)& (0+255),w,b
 11494  002E4E  0A00               	xorlw	0	; case 0
 11495  002E50  A4D8               	btfss	status,2,c
 11496  002E52  D03E               	goto	l15607
 11497                           
 11498                           ; BSR set to: 0
 11499                           ; Switch size 1, requested type "simple"
 11500                           ; Number of cases is 7, Range of values is 1 to 7
 11501                           ; switch strategies available:
 11502                           ; Name         Instructions Cycles
 11503                           ; simple_byte           22    12 (average)
 11504                           ;	Chosen strategy is simple_byte
 11505  002E54  51BA               	movf	??_MenuMng& (0+255),w,b
 11506  002E56  0A01               	xorlw	1	; case 1
 11507  002E58  B4D8               	btfsc	status,2,c
 11508  002E5A  D7B7               	goto	l15583
 11509  002E5C  0A03               	xorlw	3	; case 2
 11510  002E5E  B4D8               	btfsc	status,2,c
 11511  002E60  D7D1               	goto	l15591
 11512  002E62  0A01               	xorlw	1	; case 3
 11513  002E64  B4D8               	btfsc	status,2,c
 11514  002E66  D7C1               	goto	l15587
 11515  002E68  0A07               	xorlw	7	; case 4
 11516  002E6A  B4D8               	btfsc	status,2,c
 11517  002E6C  D7AE               	goto	l15583
 11518  002E6E  0A01               	xorlw	1	; case 5
 11519  002E70  B4D8               	btfsc	status,2,c
 11520  002E72  D7D8               	goto	l15595
 11521  002E74  0A03               	xorlw	3	; case 6
 11522  002E76  B4D8               	btfsc	status,2,c
 11523  002E78  D7D5               	goto	l15595
 11524  002E7A  0A01               	xorlw	1	; case 7
 11525  002E7C  B4D8               	btfsc	status,2,c
 11526  002E7E  D7D2               	goto	l15595
 11527  002E80  D027               	goto	l15607
 11528  002E82                     l15605:
 11529  002E82  0060  F2F0  F0BA   	movff	MenuMng@keyPress,??_MenuMng
 11530  002E88  0100               	movlb	0	; () banked
 11531  002E8A  6BBB               	clrf	(??_MenuMng+1)& (0+255),b
 11532  002E8C  BFBA               	btfsc	??_MenuMng& (0+255),7,b
 11533  002E8E  07BB               	decf	(??_MenuMng+1)& (0+255),f,b
 11534                           
 11535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11536                           ; Switch size 1, requested type "simple"
 11537                           ; Number of cases is 1, Range of values is 0 to 0
 11538                           ; switch strategies available:
 11539                           ; Name         Instructions Cycles
 11540                           ; simple_byte            4     3 (average)
 11541                           ;	Chosen strategy is simple_byte
 11542  002E90  51BB               	movf	(??_MenuMng+1)& (0+255),w,b
 11543  002E92  0A00               	xorlw	0	; case 0
 11544  002E94  A4D8               	btfss	status,2,c
 11545  002E96  D01C               	goto	l15607
 11546                           
 11547                           ; BSR set to: 0
 11548                           ; Switch size 1, requested type "simple"
 11549                           ; Number of cases is 9, Range of values is 0 to 9
 11550                           ; switch strategies available:
 11551                           ; Name         Instructions Cycles
 11552                           ; simple_byte           28    15 (average)
 11553                           ;	Chosen strategy is simple_byte
 11554  002E98  51BA               	movf	??_MenuMng& (0+255),w,b
 11555  002E9A  0A00               	xorlw	0	; case 0
 11556  002E9C  B4D8               	btfsc	status,2,c
 11557  002E9E  D645               	goto	l15421
 11558  002EA0  0A01               	xorlw	1	; case 1
 11559  002EA2  B4D8               	btfsc	status,2,c
 11560  002EA4  D6A0               	goto	l15463
 11561  002EA6  0A03               	xorlw	3	; case 2
 11562  002EA8  B4D8               	btfsc	status,2,c
 11563  002EAA  D660               	goto	l15441
 11564  002EAC  0A01               	xorlw	1	; case 3
 11565  002EAE  B4D8               	btfsc	status,2,c
 11566  002EB0  D780               	goto	l15579
 11567  002EB2  0A06               	xorlw	6	; case 5
 11568  002EB4  B4D8               	btfsc	status,2,c
 11569  002EB6  D713               	goto	l15555
 11570  002EB8  0A03               	xorlw	3	; case 6
 11571  002EBA  B4D8               	btfsc	status,2,c
 11572  002EBC  D6A6               	goto	l15479
 11573  002EBE  0A01               	xorlw	1	; case 7
 11574  002EC0  B4D8               	btfsc	status,2,c
 11575  002EC2  D6BC               	goto	l15497
 11576  002EC4  0A0F               	xorlw	15	; case 8
 11577  002EC6  B4D8               	btfsc	status,2,c
 11578  002EC8  D6E3               	goto	l15523
 11579  002ECA  0A01               	xorlw	1	; case 9
 11580  002ECC  B4D8               	btfsc	status,2,c
 11581  002ECE  D6F2               	goto	l15539
 11582  002ED0                     l15607:
 11583                           
 11584                           ;menu.c: 243:         lcdPrintBR = 1;
 11585  002ED0  0E01               	movlw	1
 11586  002ED2  0101               	movlb	1	; () banked
 11587  002ED4  6F5A               	movwf	_lcdPrintBR& (0+255),b
 11588                           
 11589                           ;menu.c: 244:         lcdPrintTR = 1;
 11590  002ED6  0E01               	movlw	1
 11591  002ED8  6F59               	movwf	_lcdPrintTR& (0+255),b
 11592                           
 11593                           ;menu.c: 245:         lcdMenuPrint = 1;
 11594  002EDA  0E01               	movlw	1
 11595  002EDC  6F44               	movwf	_lcdMenuPrint& (0+255),b
 11596                           
 11597                           ;menu.c: 246:     } else {
 11598  002EDE  0012               	return	
 11599  002EE0                     l15609:
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;menu.c: 247:         if ((menuStatus != CFG_IDLE) && (timeElapsed(menuTstamp, ((time_t)
      +                           (5*1000))))) {
 11603  002EE0  51D0               	movf	_menuStatus& (0+255),w,b
 11604  002EE2  B4D8               	btfsc	status,2,c
 11605  002EE4  0012               	return	
 11606                           
 11607                           ; BSR set to: 0
 11608  002EE6  0060  F4AC  F08C   	movff	_menuTstamp,timeElapsed@prevTime
 11609  002EEC  0060  F4B0  F08D   	movff	_menuTstamp+1,timeElapsed@prevTime+1
 11610  002EF2  0E13               	movlw	19
 11611  002EF4  6F8F               	movwf	(timeElapsed@duration+1)& (0+255),b
 11612  002EF6  0E88               	movlw	136
 11613  002EF8  6F8E               	movwf	timeElapsed@duration& (0+255),b
 11614  002EFA  EC3C  F038         	call	_timeElapsed	;wreg free
 11615  002EFE  0900               	iorlw	0
 11616  002F00  B4D8               	btfsc	status,2,c
 11617  002F02  0012               	return	
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;menu.c: 249:             lcdPrintTR = 1;
 11621  002F04  0E01               	movlw	1
 11622  002F06  0101               	movlb	1	; () banked
 11623  002F08  6F59               	movwf	_lcdPrintTR& (0+255),b
 11624                           
 11625                           ;menu.c: 250:             lcdPrintBR = 1;
 11626  002F0A  0E01               	movlw	1
 11627  002F0C  6F5A               	movwf	_lcdPrintBR& (0+255),b
 11628                           
 11629                           ;menu.c: 251:             menuStatus = CFG_IDLE;
 11630  002F0E  0E00               	movlw	0
 11631  002F10  0100               	movlb	0	; () banked
 11632  002F12  6FD0               	movwf	_menuStatus& (0+255),b
 11633  002F14  0012               	return		;funcret
 11634  002F16                     __end_of_MenuMng:
 11635                           	opt callstack 0
 11636                           
 11637 ;; *************** function _keyRead *****************
 11638 ;; Defined at:
 11639 ;;		line 67 in file "keyRead.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;		None
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;  tmp             2   41[BANK0 ] int 
 11644 ;;  ch              1   43[BANK0 ] char 
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      char 
 11647 ;; Registers used:
 11648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 3F/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11655 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;Total ram usage:        3 bytes
 11659 ;; Hardware stack levels used:    1
 11660 ;; Hardware stack levels required when called:   15
 11661 ;; This function calls:
 11662 ;;		_keyPeek
 11663 ;; This function is called by:
 11664 ;;		_main
 11665 ;;		_MenuMng
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text43
 11670  007384                     __ptext43:
 11671                           	opt callstack 0
 11672  007384                     _keyRead:
 11673                           	opt callstack 15
 11674                           
 11675                           ;keyRead.c: 68:     int8_t ch = keyPeek();
 11676                           
 11677                           ;incstack = 0
 11678  007384  ECB3  F032         	call	_keyPeek	;wreg free
 11679  007388  6F8B               	movwf	keyRead@ch& (0+255),b
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;keyRead.c: 69:     if (ch == lastkey) return -1;
 11683  00738A  51D7               	movf	_lastkey& (0+255),w,b
 11684  00738C  198B               	xorwf	keyRead@ch& (0+255),w,b
 11685  00738E  A4D8               	btfss	status,2,c
 11686  007390  D002               	goto	l14745
 11687                           
 11688                           ; BSR set to: 0
 11689  007392  0EFF               	movlw	255
 11690  007394  0012               	return	
 11691  007396                     l14745:
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;keyRead.c: 70:     int tmp = lastkey;
 11695  007396  51D7               	movf	_lastkey& (0+255),w,b
 11696  007398  6F89               	movwf	keyRead@tmp& (0+255),b
 11697  00739A  6B8A               	clrf	(keyRead@tmp+1)& (0+255),b
 11698  00739C  BF89               	btfsc	keyRead@tmp& (0+255),7,b
 11699  00739E  078A               	decf	(keyRead@tmp+1)& (0+255),f,b
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;keyRead.c: 71:     lastkey = ch;
 11703  0073A0  0060  F22C  F0D7   	movff	keyRead@ch,_lastkey
 11704                           
 11705                           ;keyRead.c: 72:     return tmp;
 11706  0073A6  5189               	movf	keyRead@tmp& (0+255),w,b
 11707                           
 11708                           ; BSR set to: 0
 11709  0073A8  0012               	return		;funcret
 11710  0073AA                     __end_of_keyRead:
 11711                           	opt callstack 0
 11712                           
 11713 ;; *************** function ___lwdiv *****************
 11714 ;; Defined at:
 11715 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  dividend        2   36[BANK0 ] unsigned int 
 11718 ;;  divisor         2   38[BANK0 ] unsigned int 
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;  quotient        2   41[BANK0 ] unsigned int 
 11721 ;;  counter         1   40[BANK0 ] unsigned char 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  2   36[BANK0 ] unsigned int 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0
 11726 ;; Tracked objects:
 11727 ;;		On entry : 3E/1
 11728 ;;		On exit  : 3F/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11732 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11734 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;Total ram usage:        7 bytes
 11736 ;; Hardware stack levels used:    1
 11737 ;; Hardware stack levels required when called:   13
 11738 ;; This function calls:
 11739 ;;		Nothing
 11740 ;; This function is called by:
 11741 ;;		_rPressurePredict
 11742 ;;		_main
 11743 ;;		_MenuMng
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text44
 11748  006792                     __ptext44:
 11749                           	opt callstack 0
 11750  006792                     ___lwdiv:
 11751                           	opt callstack 16
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;incstack = 0
 11755  006792  0E00               	movlw	0
 11756  006794  0100               	movlb	0	; () banked
 11757  006796  6F8A               	movwf	(___lwdiv@quotient+1)& (0+255),b
 11758  006798  0E00               	movlw	0
 11759  00679A  6F89               	movwf	___lwdiv@quotient& (0+255),b
 11760                           
 11761                           ; BSR set to: 0
 11762  00679C  5186               	movf	___lwdiv@divisor& (0+255),w,b
 11763  00679E  1187               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11764  0067A0  B4D8               	btfsc	status,2,c
 11765  0067A2  D01C               	goto	l2843
 11766                           
 11767                           ; BSR set to: 0
 11768  0067A4  0E01               	movlw	1
 11769  0067A6  6F88               	movwf	___lwdiv@counter& (0+255),b
 11770  0067A8  D004               	goto	l14973
 11771  0067AA                     l14971:
 11772                           
 11773                           ; BSR set to: 0
 11774  0067AA  90D8               	bcf	status,0,c
 11775  0067AC  3786               	rlcf	___lwdiv@divisor& (0+255),f,b
 11776  0067AE  3787               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11777  0067B0  2B88               	incf	___lwdiv@counter& (0+255),f,b
 11778  0067B2                     l14973:
 11779                           
 11780                           ; BSR set to: 0
 11781  0067B2  AF87               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11782  0067B4  D7FA               	goto	l14971
 11783  0067B6                     u14410:
 11784                           
 11785                           ; BSR set to: 0
 11786  0067B6  90D8               	bcf	status,0,c
 11787  0067B8  3789               	rlcf	___lwdiv@quotient& (0+255),f,b
 11788  0067BA  378A               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11789                           
 11790                           ; BSR set to: 0
 11791  0067BC  5186               	movf	___lwdiv@divisor& (0+255),w,b
 11792  0067BE  5D84               	subwf	___lwdiv@dividend& (0+255),w,b
 11793  0067C0  5187               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11794  0067C2  5985               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11795  0067C4  A0D8               	btfss	status,0,c
 11796  0067C6  D005               	goto	l14983
 11797                           
 11798                           ; BSR set to: 0
 11799  0067C8  5186               	movf	___lwdiv@divisor& (0+255),w,b
 11800  0067CA  5F84               	subwf	___lwdiv@dividend& (0+255),f,b
 11801  0067CC  5187               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11802  0067CE  5B85               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11803                           
 11804                           ; BSR set to: 0
 11805  0067D0  8189               	bsf	___lwdiv@quotient& (0+255),0,b
 11806  0067D2                     l14983:
 11807                           
 11808                           ; BSR set to: 0
 11809  0067D2  90D8               	bcf	status,0,c
 11810  0067D4  3387               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11811  0067D6  3386               	rrcf	___lwdiv@divisor& (0+255),f,b
 11812                           
 11813                           ; BSR set to: 0
 11814  0067D8  2F88               	decfsz	___lwdiv@counter& (0+255),f,b
 11815  0067DA  D7ED               	goto	u14410
 11816  0067DC                     l2843:
 11817                           
 11818                           ; BSR set to: 0
 11819  0067DC  0060  F224  F084   	movff	___lwdiv@quotient,?___lwdiv
 11820  0067E2  0060  F228  F085   	movff	___lwdiv@quotient+1,?___lwdiv+1
 11821                           
 11822                           ; BSR set to: 0
 11823  0067E8  0012               	return		;funcret
 11824  0067EA                     __end_of___lwdiv:
 11825                           	opt callstack 0
 11826                           
 11827 ;; *************** function _InitProcedure *****************
 11828 ;; Defined at:
 11829 ;;		line 263 in file "main.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;		None
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;  aPVal           2  111[BANK1 ] short 
 11834 ;;  mPVal           2  109[BANK1 ] short 
 11835 ;;  vddVal          2  107[BANK1 ] short 
 11836 ;;  aPValMin        2  104[BANK1 ] short 
 11837 ;;  aPValMax        2  102[BANK1 ] short 
 11838 ;;  aPValMean       2  100[BANK1 ] short 
 11839 ;;  tstamp          2   98[BANK1 ] unsigned short 
 11840 ;;  mPValMean       2   96[BANK1 ] short 
 11841 ;;  mPValMin        2   94[BANK1 ] short 
 11842 ;;  mPValMax        2   92[BANK1 ] short 
 11843 ;;  vddValMin       2   90[BANK1 ] short 
 11844 ;;  vddValMax       2   88[BANK1 ] short 
 11845 ;;  initOk          1  106[BANK1 ] _Bool 
 11846 ;;  lcdBLight       1   87[BANK1 ] _Bool 
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  1    wreg      _Bool 
 11849 ;; Registers used:
 11850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/0
 11853 ;;		On exit  : 3F/1
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;Total ram usage:       30 bytes
 11861 ;; Hardware stack levels used:    1
 11862 ;; Hardware stack levels required when called:   24
 11863 ;; This function calls:
 11864 ;;		_MonitorMsgForcedSend
 11865 ;;		___flge
 11866 ;;		___lldiv
 11867 ;;		___lmul
 11868 ;;		___xxtofl
 11869 ;;		_aCaptGetResult
 11870 ;;		_aCaptRstFlt
 11871 ;;		_aCaptureSetOff
 11872 ;;		_keyPeek
 11873 ;;		_keyReadEC
 11874 ;;		_keyReadInit
 11875 ;;		_printf
 11876 ;;		_printstrblock
 11877 ;;		_setBacklight
 11878 ;;		_setCursor
 11879 ;;		_sprintf
 11880 ;;		_timeDelayMs
 11881 ;;		_timeElapsedR
 11882 ;;		_timeGet
 11883 ;;		_vMeasureGet
 11884 ;;		_vMeasureRst
 11885 ;; This function is called by:
 11886 ;;		_main
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text45
 11891  0017DE                     __ptext45:
 11892                           	opt callstack 0
 11893  0017DE                     _InitProcedure:
 11894                           	opt callstack 6
 11895                           
 11896                           ;main.c: 264:     int16_t vddVal, vddValMax, vddValMin;;main.c: 265:     int16_t mPVal, 
      +                          mPValMax, mPValMin, mPValMean;;main.c: 266:     int16_t aPVal, aPValMax, aPValMin, aPVal
      +                          Mean;;main.c: 267:     _Bool lcdBLight;;main.c: 268:     time_t tstamp;;main.c: 269:    
      +                           _Bool initOk;;main.c: 271:     ctrlStatus = CTRL_UNCAL;
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;incstack = 0
 11900  0017DE  0E00               	movlw	0
 11901  0017E0  0101               	movlb	1	; () banked
 11902  0017E2  6F4D               	movwf	_ctrlStatus& (0+255),b
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;main.c: 273:     setCursor(0, 0);
 11906  0017E4  0E00               	movlw	0
 11907  0017E6  0100               	movlb	0	; () banked
 11908  0017E8  6F9B               	movwf	setCursor@row& (0+255),b
 11909  0017EA  0E00               	movlw	0
 11910  0017EC  ECC4  F036         	call	_setCursor
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;main.c: 274:     printstrblock("SELF-TEST.      ");
 11914  0017F0  0EE8               	movlw	low STR_8
 11915  0017F2  6F97               	movwf	printstrblock@c& (0+255),b
 11916  0017F4  0EFE               	movlw	high STR_8
 11917  0017F6  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 11918  0017F8  EC05  F03B         	call	_printstrblock	;wreg free
 11919                           
 11920                           ; BSR set to: 0
 11921                           ;main.c: 275:     setCursor(0, 1);
 11922  0017FC  0E01               	movlw	1
 11923  0017FE  6F9B               	movwf	setCursor@row& (0+255),b
 11924  001800  0E00               	movlw	0
 11925  001802  ECC4  F036         	call	_setCursor
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;main.c: 276:     printstrblock("AIRWAY OPEN     ");
 11929  001806  0EF9               	movlw	low STR_9
 11930  001808  6F97               	movwf	printstrblock@c& (0+255),b
 11931  00180A  0EFE               	movlw	high STR_9
 11932  00180C  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 11933  00180E  EC05  F03B         	call	_printstrblock	;wreg free
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;main.c: 277:     timeDelayMs(1000);
 11937  001812  0E03               	movlw	3
 11938  001814  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 11939  001816  0EE8               	movlw	232
 11940  001818  6F94               	movwf	timeDelayMs@delms& (0+255),b
 11941  00181A  EC71  F037         	call	_timeDelayMs	;wreg free
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;main.c: 279:     vddValMin = 8000;
 11945  00181E  0E1F               	movlw	31
 11946  001820  0101               	movlb	1	; () banked
 11947  001822  6FD5               	movwf	(InitProcedure@vddValMin+1)& (0+255),b
 11948  001824  0E40               	movlw	64
 11949  001826  6FD4               	movwf	InitProcedure@vddValMin& (0+255),b
 11950                           
 11951                           ; BSR set to: 1
 11952                           ;main.c: 280:     vddValMax = 0;
 11953  001828  0E00               	movlw	0
 11954  00182A  6FD3               	movwf	(InitProcedure@vddValMax+1)& (0+255),b
 11955  00182C  0E00               	movlw	0
 11956  00182E  6FD2               	movwf	InitProcedure@vddValMax& (0+255),b
 11957                           
 11958                           ; BSR set to: 1
 11959                           ;main.c: 281:     initOk = 1;
 11960  001830  0E01               	movlw	1
 11961  001832  6FE4               	movwf	InitProcedure@initOk& (0+255),b
 11962                           
 11963                           ; BSR set to: 1
 11964                           ;main.c: 282:     MonitorMsgForcedSend (MONSTATE_INIT);
 11965  001834  0E80               	movlw	128
 11966  001836  ECF0  F023         	call	_MonitorMsgForcedSend
 11967                           
 11968                           ;main.c: 284:     aCaptureSetOff(MainPSensor, 0);
 11969  00183A  0E00               	movlw	0
 11970  00183C  0101               	movlb	1	; () banked
 11971  00183E  6FBD               	movwf	(aCaptureSetOff@offVal+1)& (0+255),b
 11972  001840  0E00               	movlw	0
 11973  001842  6FBC               	movwf	aCaptureSetOff@offVal& (0+255),b
 11974  001844  0E00               	movlw	0
 11975  001846  EC17  F035         	call	_aCaptureSetOff
 11976                           
 11977                           ;main.c: 285:     aCaptureSetOff(AuxPSensor, 0);
 11978  00184A  0E00               	movlw	0
 11979  00184C  0101               	movlb	1	; () banked
 11980  00184E  6FBD               	movwf	(aCaptureSetOff@offVal+1)& (0+255),b
 11981  001850  0E00               	movlw	0
 11982  001852  6FBC               	movwf	aCaptureSetOff@offVal& (0+255),b
 11983  001854  0E01               	movlw	1
 11984  001856  EC17  F035         	call	_aCaptureSetOff
 11985                           
 11986                           ;main.c: 287:     tstamp = timeGet();
 11987  00185A  ECBD  F03B         	call	_timeGet	;wreg free
 11988  00185E  0060  F230  F1DC   	movff	?_timeGet,InitProcedure@tstamp
 11989  001864  0060  F234  F1DD   	movff	?_timeGet+1,InitProcedure@tstamp+1
 11990                           
 11991                           ;main.c: 289:     while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 11992  00186A  D03D               	goto	l15141
 11993  00186C                     l15127:
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;main.c: 290:         if (aCaptGetResult(VddSensor, &vddVal)) {
 11997  00186C  0EE5               	movlw	low InitProcedure@vddVal
 11998  00186E  0101               	movlb	1	; () banked
 11999  001870  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
 12000  001872  0E01               	movlw	high InitProcedure@vddVal
 12001  001874  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 12002  001876  0E02               	movlw	2
 12003  001878  ECB9  F020         	call	_aCaptGetResult
 12004  00187C  0900               	iorlw	0
 12005  00187E  B4D8               	btfsc	status,2,c
 12006  001880  D022               	goto	l1453
 12007                           
 12008                           ;main.c: 292:             if (vddVal > vddValMax) {
 12009  001882  0101               	movlb	1	; () banked
 12010  001884  51E5               	movf	InitProcedure@vddVal& (0+255),w,b
 12011  001886  5DD2               	subwf	InitProcedure@vddValMax& (0+255),w,b
 12012  001888  51D3               	movf	(InitProcedure@vddValMax+1)& (0+255),w,b
 12013  00188A  0A80               	xorlw	128
 12014  00188C  6FCD               	movwf	??_InitProcedure& (0+255),b
 12015  00188E  51E6               	movf	(InitProcedure@vddVal+1)& (0+255),w,b
 12016  001890  0A80               	xorlw	128
 12017  001892  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12018  001894  B0D8               	btfsc	status,0,c
 12019  001896  D006               	goto	l15133
 12020                           
 12021                           ; BSR set to: 1
 12022                           ;main.c: 293:                 vddValMax = vddVal;
 12023  001898  0060  F794  F1D2   	movff	InitProcedure@vddVal,InitProcedure@vddValMax
 12024  00189E  0060  F798  F1D3   	movff	InitProcedure@vddVal+1,InitProcedure@vddValMax+1
 12025  0018A4                     l15133:
 12026                           
 12027                           ; BSR set to: 1
 12028                           ;main.c: 295:             if (vddVal < vddValMin) {
 12029  0018A4  51D4               	movf	InitProcedure@vddValMin& (0+255),w,b
 12030  0018A6  5DE5               	subwf	InitProcedure@vddVal& (0+255),w,b
 12031  0018A8  51E6               	movf	(InitProcedure@vddVal+1)& (0+255),w,b
 12032  0018AA  0A80               	xorlw	128
 12033  0018AC  6FCD               	movwf	??_InitProcedure& (0+255),b
 12034  0018AE  51D5               	movf	(InitProcedure@vddValMin+1)& (0+255),w,b
 12035  0018B0  0A80               	xorlw	128
 12036  0018B2  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12037  0018B4  B0D8               	btfsc	status,0,c
 12038  0018B6  D017               	goto	l15141
 12039                           
 12040                           ; BSR set to: 1
 12041                           ;main.c: 296:                 vddValMin = vddVal;
 12042  0018B8  0060  F794  F1D4   	movff	InitProcedure@vddVal,InitProcedure@vddValMin
 12043  0018BE  0060  F798  F1D5   	movff	InitProcedure@vddVal+1,InitProcedure@vddValMin+1
 12044  0018C4  D010               	goto	l15141
 12045  0018C6                     l1453:
 12046                           
 12047                           ;main.c: 299:             LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",10);
 12048  0018C6  94BA               	bcf	186,2,c	;volatile
 12049  0018C8  96BA               	bcf	186,3,c	;volatile
 12050  0018CA  0EEC               	movlw	low STR_10
 12051  0018CC  0101               	movlb	1	; () banked
 12052  0018CE  6FA6               	movwf	printf@fmt& (0+255),b
 12053  0018D0  0EFF               	movlw	high STR_10
 12054  0018D2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12055  0018D4  0E00               	movlw	0
 12056  0018D6  6FA9               	movwf	(?_printf+3)& (0+255),b
 12057  0018D8  0E0A               	movlw	10
 12058  0018DA  6FA8               	movwf	(?_printf+2)& (0+255),b
 12059  0018DC  EC84  F039         	call	_printf	;wreg free
 12060                           
 12061                           ;main.c: 300:             initOk = 0;
 12062  0018E0  0E00               	movlw	0
 12063  0018E2  0101               	movlb	1	; () banked
 12064  0018E4  6FE4               	movwf	InitProcedure@initOk& (0+255),b
 12065  0018E6                     l15141:
 12066                           
 12067                           ;main.c: 289:     while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12068  0018E6  0EDC               	movlw	low InitProcedure@tstamp
 12069  0018E8  0100               	movlb	0	; () banked
 12070  0018EA  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
 12071  0018EC  0E01               	movlw	high InitProcedure@tstamp
 12072  0018EE  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 12073  0018F0  0E01               	movlw	1
 12074  0018F2  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
 12075  0018F4  0EF4               	movlw	244
 12076  0018F6  6F8E               	movwf	timeElapsedR@duration& (0+255),b
 12077  0018F8  EC83  F032         	call	_timeElapsedR	;wreg free
 12078  0018FC  0900               	iorlw	0
 12079  0018FE  B4D8               	btfsc	status,2,c
 12080  001900  D7B5               	goto	l15127
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;main.c: 304:     if (!initOk) {
 12084  001902  0101               	movlb	1	; () banked
 12085  001904  51E4               	movf	InitProcedure@initOk& (0+255),w,b
 12086  001906  A4D8               	btfss	status,2,c
 12087  001908  D003               	goto	l15149
 12088  00190A                     u14660:
 12089                           
 12090                           ;main.c: 305:         return initOk;
 12091  00190A  0101               	movlb	1	; () banked
 12092  00190C  51E4               	movf	InitProcedure@initOk& (0+255),w,b
 12093  00190E  0012               	return	
 12094  001910                     l15149:
 12095                           
 12096                           ; BSR set to: 1
 12097                           ;main.c: 309:     vddValMean = (vddValMax + vddValMin) >> 1;
 12098  001910  51D4               	movf	InitProcedure@vddValMin& (0+255),w,b
 12099  001912  25D2               	addwf	InitProcedure@vddValMax& (0+255),w,b
 12100  001914  6FCD               	movwf	??_InitProcedure& (0+255),b
 12101  001916  51D5               	movf	(InitProcedure@vddValMin+1)& (0+255),w,b
 12102  001918  21D3               	addwfc	(InitProcedure@vddValMax+1)& (0+255),w,b
 12103  00191A  6FCE               	movwf	(??_InitProcedure+1)& (0+255),b
 12104  00191C  35CE               	rlcf	(??_InitProcedure+1)& (0+255),w,b
 12105  00191E  31CE               	rrcf	(??_InitProcedure+1)& (0+255),w,b
 12106  001920  6FCF               	movwf	(??_InitProcedure+2)& (0+255),b
 12107  001922  31CD               	rrcf	??_InitProcedure& (0+255),w,b
 12108  001924  6F33               	movwf	_vddValMean& (0+255),b
 12109  001926  0060  F73C  F134   	movff	??_InitProcedure+2,_vddValMean+1
 12110                           
 12111                           ; BSR set to: 1
 12112                           ;main.c: 310:     printf ("VDD Min %d Max %d MEAN %d\n", vddValMin, vddValMax, vddValMea
      +                          n);
 12113  00192C  0E65               	movlw	low STR_11
 12114  00192E  6FA6               	movwf	printf@fmt& (0+255),b
 12115  001930  0EFD               	movlw	high STR_11
 12116  001932  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12117  001934  0060  F750  F1A8   	movff	InitProcedure@vddValMin,?_printf+2
 12118  00193A  0060  F754  F1A9   	movff	InitProcedure@vddValMin+1,?_printf+3
 12119  001940  0060  F748  F1AA   	movff	InitProcedure@vddValMax,?_printf+4
 12120  001946  0060  F74C  F1AB   	movff	InitProcedure@vddValMax+1,?_printf+5
 12121  00194C  0060  F4CC  F1AC   	movff	_vddValMean,?_printf+6
 12122  001952  0060  F4D0  F1AD   	movff	_vddValMean+1,?_printf+7
 12123  001958  EC84  F039         	call	_printf	;wreg free
 12124                           
 12125                           ;main.c: 312:     if ((vddValMean > 5250) || (vddValMean < 4750)) {
 12126  00195C  0101               	movlb	1	; () banked
 12127  00195E  BF34               	btfsc	(_vddValMean+1)& (0+255),7,b
 12128  001960  D006               	goto	u14670
 12129  001962  0E83               	movlw	131
 12130  001964  5D33               	subwf	_vddValMean& (0+255),w,b
 12131  001966  0E14               	movlw	20
 12132  001968  5934               	subwfb	(_vddValMean+1)& (0+255),w,b
 12133  00196A  B0D8               	btfsc	status,0,c
 12134  00196C  D008               	goto	u14680
 12135  00196E                     u14670:
 12136                           
 12137                           ; BSR set to: 1
 12138  00196E  BF34               	btfsc	(_vddValMean+1)& (0+255),7,b
 12139  001970  D006               	goto	u14680
 12140  001972  0E8E               	movlw	142
 12141  001974  5D33               	subwf	_vddValMean& (0+255),w,b
 12142  001976  0E12               	movlw	18
 12143  001978  5934               	subwfb	(_vddValMean+1)& (0+255),w,b
 12144  00197A  B0D8               	btfsc	status,0,c
 12145  00197C  D02D               	goto	l15165
 12146  00197E                     u14680:
 12147                           
 12148                           ; BSR set to: 1
 12149                           ;main.c: 314:         setCursor(0, 0);
 12150  00197E  0E00               	movlw	0
 12151  001980  0100               	movlb	0	; () banked
 12152  001982  6F9B               	movwf	setCursor@row& (0+255),b
 12153  001984  0E00               	movlw	0
 12154  001986  ECC4  F036         	call	_setCursor
 12155                           
 12156                           ;main.c: 315:         printstrblock("INTERNAL ERROR  ");
 12157  00198A  0E2C               	movlw	low STR_12
 12158  00198C  6F97               	movwf	printstrblock@c& (0+255),b
 12159  00198E  0EFF               	movlw	high STR_12
 12160  001990  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12161  001992  EC05  F03B         	call	_printstrblock	;wreg free
 12162                           
 12163                           ;main.c: 316:         setCursor(0, 1);
 12164  001996  0E01               	movlw	1
 12165  001998  6F9B               	movwf	setCursor@row& (0+255),b
 12166  00199A  0E00               	movlw	0
 12167  00199C  ECC4  F036         	call	_setCursor
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;main.c: 317:         sprintf(lcdTopRow, "VDD OOL: % 3d mV", vddValMean);
 12171  0019A0  0E67               	movlw	low _lcdTopRow
 12172  0019A2  0101               	movlb	1	; () banked
 12173  0019A4  6FA6               	movwf	sprintf@s& (0+255),b
 12174  0019A6  0E02               	movlw	high _lcdTopRow
 12175  0019A8  6FA7               	movwf	(sprintf@s+1)& (0+255),b
 12176  0019AA  0E81               	movlw	low STR_13
 12177  0019AC  6FA8               	movwf	sprintf@fmt& (0+255),b
 12178  0019AE  0EFF               	movlw	high STR_13
 12179  0019B0  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
 12180  0019B2  0060  F4CC  F1AA   	movff	_vddValMean,?_sprintf+4
 12181  0019B8  0060  F4D0  F1AB   	movff	_vddValMean+1,?_sprintf+5
 12182  0019BE  EC9C  F033         	call	_sprintf	;wreg free
 12183                           
 12184                           ; BSR set to: 1
 12185                           ;main.c: 318:         printstrblock(lcdTopRow);
 12186  0019C2  0E67               	movlw	low _lcdTopRow
 12187  0019C4  0100               	movlb	0	; () banked
 12188  0019C6  6F97               	movwf	printstrblock@c& (0+255),b
 12189  0019C8  0E02               	movlw	high _lcdTopRow
 12190  0019CA  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12191  0019CC  EC05  F03B         	call	_printstrblock	;wreg free
 12192  0019D0                     l15163:
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;main.c: 319:         initOk = 0;
 12196  0019D0  0E00               	movlw	0
 12197  0019D2  0101               	movlb	1	; () banked
 12198  0019D4  6FE4               	movwf	InitProcedure@initOk& (0+255),b
 12199                           
 12200                           ;main.c: 320:     } else if ((vddValMax - vddValMin) > 100) {
 12201  0019D6  D026               	goto	l15171
 12202  0019D8                     l15165:
 12203                           
 12204                           ; BSR set to: 1
 12205  0019D8  51D4               	movf	InitProcedure@vddValMin& (0+255),w,b
 12206  0019DA  5DD2               	subwf	InitProcedure@vddValMax& (0+255),w,b
 12207  0019DC  6FCD               	movwf	??_InitProcedure& (0+255),b
 12208  0019DE  51D5               	movf	(InitProcedure@vddValMin+1)& (0+255),w,b
 12209  0019E0  59D3               	subwfb	(InitProcedure@vddValMax+1)& (0+255),w,b
 12210  0019E2  6FCE               	movwf	(??_InitProcedure+1)& (0+255),b
 12211  0019E4  BFCE               	btfsc	(??_InitProcedure+1)& (0+255),7,b
 12212  0019E6  D01E               	goto	l15171
 12213  0019E8  51CE               	movf	(??_InitProcedure+1)& (0+255),w,b
 12214  0019EA  E104               	bnz	u14690
 12215  0019EC  0E65               	movlw	101
 12216  0019EE  5DCD               	subwf	??_InitProcedure& (0+255),w,b
 12217  0019F0  A0D8               	btfss	status,0,c
 12218  0019F2  D018               	goto	l15171
 12219  0019F4                     u14690:
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;main.c: 322:         setCursor(0, 0);
 12223  0019F4  0E00               	movlw	0
 12224  0019F6  0100               	movlb	0	; () banked
 12225  0019F8  6F9B               	movwf	setCursor@row& (0+255),b
 12226  0019FA  0E00               	movlw	0
 12227  0019FC  ECC4  F036         	call	_setCursor
 12228                           
 12229                           ;main.c: 323:         printstrblock("INTERNAL ERROR  ");
 12230  001A00  0E2C               	movlw	low STR_12
 12231  001A02  6F97               	movwf	printstrblock@c& (0+255),b
 12232  001A04  0EFF               	movlw	high STR_12
 12233  001A06  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12234  001A08  EC05  F03B         	call	_printstrblock	;wreg free
 12235                           
 12236                           ;main.c: 324:         setCursor(0, 1);
 12237  001A0C  0E01               	movlw	1
 12238  001A0E  6F9B               	movwf	setCursor@row& (0+255),b
 12239  001A10  0E00               	movlw	0
 12240  001A12  ECC4  F036         	call	_setCursor
 12241                           
 12242                           ;main.c: 325:         printstrblock("VDD NOISY       ");
 12243  001A16  0ED7               	movlw	low STR_15
 12244  001A18  6F97               	movwf	printstrblock@c& (0+255),b
 12245  001A1A  0EFE               	movlw	high STR_15
 12246  001A1C  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12247  001A1E  EC05  F03B         	call	_printstrblock	;wreg free
 12248  001A22  D7D6               	goto	l15163
 12249  001A24                     l15171:
 12250                           
 12251                           ; BSR set to: 1
 12252                           ;main.c: 329:     if (!initOk) {
 12253  001A24  51E4               	movf	InitProcedure@initOk& (0+255),w,b
 12254  001A26  B4D8               	btfsc	status,2,c
 12255  001A28  D770               	goto	u14660
 12256  001A2A  D203               	goto	l15285
 12257  001A2C                     l1467:
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;main.c: 334:         LATDbits.LATD6 = 0;
 12261  001A2C  9CBD               	bcf	189,6,c	;volatile
 12262  001A2E                     l15177:
 12263                           
 12264                           ;main.c: 336:         while (keyPeek() != -1)
 12265  001A2E  ECB3  F032         	call	_keyPeek	;wreg free
 12266  001A32  0AFF               	xorlw	255
 12267  001A34  A4D8               	btfss	status,2,c
 12268  001A36  D7FB               	goto	l15177
 12269                           
 12270                           ; BSR set to: 0
 12271                           ;main.c: 338:         keyReadInit();
 12272  001A38  ECB4  F03B         	call	_keyReadInit	;wreg free
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;main.c: 342:         LATDbits.LATD6 = 1;
 12276  001A3C  8CBD               	bsf	189,6,c	;volatile
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;main.c: 343:         setCursor(0, 0);
 12280  001A3E  0E00               	movlw	0
 12281  001A40  6F9B               	movwf	setCursor@row& (0+255),b
 12282  001A42  0E00               	movlw	0
 12283  001A44  ECC4  F036         	call	_setCursor
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;main.c: 344:         printstrblock("CAL PRESS BREATH");
 12287  001A48  0E5F               	movlw	low STR_16
 12288  001A4A  6F97               	movwf	printstrblock@c& (0+255),b
 12289  001A4C  0EFF               	movlw	high STR_16
 12290  001A4E  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12291  001A50  EC05  F03B         	call	_printstrblock	;wreg free
 12292  001A54  ECBD  F03B         	call	_timeGet	;wreg free
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;main.c: 346:         lcdBLight = 1;
 12296  001A58  0E01               	movlw	1
 12297  001A5A  0101               	movlb	1	; () banked
 12298  001A5C  6FD1               	movwf	InitProcedure@lcdBLight& (0+255),b
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;main.c: 348:         tstamp = timeGet();
 12302  001A5E  ECBD  F03B         	call	_timeGet	;wreg free
 12303  001A62  0060  F230  F1DC   	movff	?_timeGet,InitProcedure@tstamp
 12304  001A68  0060  F234  F1DD   	movff	?_timeGet+1,InitProcedure@tstamp+1
 12305  001A6E                     l15191:
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;main.c: 350:             if (timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12309  001A6E  0EDC               	movlw	low InitProcedure@tstamp
 12310  001A70  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
 12311  001A72  0E01               	movlw	high InitProcedure@tstamp
 12312  001A74  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 12313  001A76  0E01               	movlw	1
 12314  001A78  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
 12315  001A7A  0EF4               	movlw	244
 12316  001A7C  6F8E               	movwf	timeElapsedR@duration& (0+255),b
 12317  001A7E  EC83  F032         	call	_timeElapsedR	;wreg free
 12318  001A82  0900               	iorlw	0
 12319  001A84  B4D8               	btfsc	status,2,c
 12320  001A86  D00C               	goto	l15197
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;main.c: 351:                 setBacklight(lcdBLight);
 12324  001A88  0101               	movlb	1	; () banked
 12325  001A8A  51D1               	movf	InitProcedure@lcdBLight& (0+255),w,b
 12326  001A8C  EC3A  F03B         	call	_setBacklight
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;main.c: 352:                 lcdBLight = !lcdBLight;
 12330  001A90  0101               	movlb	1	; () banked
 12331  001A92  51D1               	movf	InitProcedure@lcdBLight& (0+255),w,b
 12332  001A94  A4D8               	btfss	status,2,c
 12333  001A96  D002               	goto	u14730
 12334  001A98  0E01               	movlw	1
 12335  001A9A  D001               	goto	u14740
 12336  001A9C                     u14730:
 12337  001A9C  0E00               	movlw	0
 12338  001A9E                     u14740:
 12339  001A9E  6FD1               	movwf	InitProcedure@lcdBLight& (0+255),b
 12340  001AA0                     l15197:
 12341                           
 12342                           ;main.c: 356:             if (keyReadEC() == -100) {
 12343  001AA0  EC6D  F02F         	call	_keyReadEC	;wreg free
 12344  001AA4  0A9C               	xorlw	156
 12345  001AA6  A4D8               	btfss	status,2,c
 12346  001AA8  D7E2               	goto	l15191
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;main.c: 357:                 if (keyPeek() == 4) {
 12350  001AAA  ECB3  F032         	call	_keyPeek	;wreg free
 12351  001AAE  0A04               	xorlw	4
 12352  001AB0  A4D8               	btfss	status,2,c
 12353  001AB2  D7DD               	goto	l15191
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;main.c: 359:                     setBacklight(1);
 12357  001AB4  0E01               	movlw	1
 12358  001AB6  EC3A  F03B         	call	_setBacklight
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;main.c: 365:         MonitorMsgForcedSend (MONSTATE_CALP);
 12362                           
 12363                           ;main.c: 360:                     break;
 12364  001ABA  0EC0               	movlw	192
 12365  001ABC  ECF0  F023         	call	_MonitorMsgForcedSend
 12366                           
 12367                           ;main.c: 368:         mPValMin = 4096;
 12368  001AC0  0E10               	movlw	16
 12369  001AC2  0101               	movlb	1	; () banked
 12370  001AC4  6FD9               	movwf	(InitProcedure@mPValMin+1)& (0+255),b
 12371  001AC6  0E00               	movlw	0
 12372  001AC8  6FD8               	movwf	InitProcedure@mPValMin& (0+255),b
 12373                           
 12374                           ; BSR set to: 1
 12375                           ;main.c: 369:         aPValMin = 4096;
 12376  001ACA  0E10               	movlw	16
 12377  001ACC  6FE3               	movwf	(InitProcedure@aPValMin+1)& (0+255),b
 12378  001ACE  0E00               	movlw	0
 12379  001AD0  6FE2               	movwf	InitProcedure@aPValMin& (0+255),b
 12380                           
 12381                           ; BSR set to: 1
 12382                           ;main.c: 370:         mPValMax = 0;
 12383  001AD2  0E00               	movlw	0
 12384  001AD4  6FD7               	movwf	(InitProcedure@mPValMax+1)& (0+255),b
 12385  001AD6  0E00               	movlw	0
 12386  001AD8  6FD6               	movwf	InitProcedure@mPValMax& (0+255),b
 12387                           
 12388                           ; BSR set to: 1
 12389                           ;main.c: 371:         aPValMax = 0;
 12390  001ADA  0E00               	movlw	0
 12391  001ADC  6FE1               	movwf	(InitProcedure@aPValMax+1)& (0+255),b
 12392  001ADE  0E00               	movlw	0
 12393  001AE0  6FE0               	movwf	InitProcedure@aPValMax& (0+255),b
 12394                           
 12395                           ;main.c: 373:         while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12396  001AE2  D078               	goto	l15245
 12397  001AE4                     l15213:
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;main.c: 374:             if (aCaptGetResult(MainPSensor, &mPVal)) {
 12401  001AE4  0EE7               	movlw	low InitProcedure@mPVal
 12402  001AE6  0101               	movlb	1	; () banked
 12403  001AE8  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
 12404  001AEA  0E01               	movlw	high InitProcedure@mPVal
 12405  001AEC  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 12406  001AEE  0E00               	movlw	0
 12407  001AF0  ECB9  F020         	call	_aCaptGetResult
 12408  001AF4  0900               	iorlw	0
 12409  001AF6  B4D8               	btfsc	status,2,c
 12410  001AF8  D022               	goto	l1479
 12411                           
 12412                           ;main.c: 375:                 if (mPVal > mPValMax) {
 12413  001AFA  0101               	movlb	1	; () banked
 12414  001AFC  51E7               	movf	InitProcedure@mPVal& (0+255),w,b
 12415  001AFE  5DD6               	subwf	InitProcedure@mPValMax& (0+255),w,b
 12416  001B00  51D7               	movf	(InitProcedure@mPValMax+1)& (0+255),w,b
 12417  001B02  0A80               	xorlw	128
 12418  001B04  6FCD               	movwf	??_InitProcedure& (0+255),b
 12419  001B06  51E8               	movf	(InitProcedure@mPVal+1)& (0+255),w,b
 12420  001B08  0A80               	xorlw	128
 12421  001B0A  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12422  001B0C  B0D8               	btfsc	status,0,c
 12423  001B0E  D006               	goto	l15219
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;main.c: 376:                     mPValMax = mPVal;
 12427  001B10  0060  F79C  F1D6   	movff	InitProcedure@mPVal,InitProcedure@mPValMax
 12428  001B16  0060  F7A0  F1D7   	movff	InitProcedure@mPVal+1,InitProcedure@mPValMax+1
 12429  001B1C                     l15219:
 12430                           
 12431                           ; BSR set to: 1
 12432                           ;main.c: 378:                 if (mPVal < mPValMin) {
 12433  001B1C  51D8               	movf	InitProcedure@mPValMin& (0+255),w,b
 12434  001B1E  5DE7               	subwf	InitProcedure@mPVal& (0+255),w,b
 12435  001B20  51E8               	movf	(InitProcedure@mPVal+1)& (0+255),w,b
 12436  001B22  0A80               	xorlw	128
 12437  001B24  6FCD               	movwf	??_InitProcedure& (0+255),b
 12438  001B26  51D9               	movf	(InitProcedure@mPValMin+1)& (0+255),w,b
 12439  001B28  0A80               	xorlw	128
 12440  001B2A  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12441  001B2C  B0D8               	btfsc	status,0,c
 12442  001B2E  D017               	goto	l15227
 12443                           
 12444                           ; BSR set to: 1
 12445                           ;main.c: 379:                     mPValMin = mPVal;
 12446  001B30  0060  F79C  F1D8   	movff	InitProcedure@mPVal,InitProcedure@mPValMin
 12447  001B36  0060  F7A0  F1D9   	movff	InitProcedure@mPVal+1,InitProcedure@mPValMin+1
 12448  001B3C  D010               	goto	l15227
 12449  001B3E                     l1479:
 12450                           
 12451                           ;main.c: 382:                 LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",10
      +                          );
 12452  001B3E  94BA               	bcf	186,2,c	;volatile
 12453  001B40  96BA               	bcf	186,3,c	;volatile
 12454  001B42  0EEC               	movlw	low STR_10
 12455  001B44  0101               	movlb	1	; () banked
 12456  001B46  6FA6               	movwf	printf@fmt& (0+255),b
 12457  001B48  0EFF               	movlw	high STR_10
 12458  001B4A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12459  001B4C  0E00               	movlw	0
 12460  001B4E  6FA9               	movwf	(?_printf+3)& (0+255),b
 12461  001B50  0E0A               	movlw	10
 12462  001B52  6FA8               	movwf	(?_printf+2)& (0+255),b
 12463  001B54  EC84  F039         	call	_printf	;wreg free
 12464                           
 12465                           ;main.c: 383:                 initOk = 0;
 12466  001B58  0E00               	movlw	0
 12467  001B5A  0101               	movlb	1	; () banked
 12468  001B5C  6FE4               	movwf	InitProcedure@initOk& (0+255),b
 12469  001B5E                     l15227:
 12470                           
 12471                           ; BSR set to: 1
 12472                           ;main.c: 386:             if (aCaptGetResult(AuxPSensor, &aPVal)) {
 12473  001B5E  0EE9               	movlw	low InitProcedure@aPVal
 12474  001B60  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
 12475  001B62  0E01               	movlw	high InitProcedure@aPVal
 12476  001B64  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 12477  001B66  0E01               	movlw	1
 12478  001B68  ECB9  F020         	call	_aCaptGetResult
 12479  001B6C  0900               	iorlw	0
 12480  001B6E  B4D8               	btfsc	status,2,c
 12481  001B70  D022               	goto	l15237
 12482                           
 12483                           ;main.c: 387:                 if (aPVal > aPValMax) {
 12484  001B72  0101               	movlb	1	; () banked
 12485  001B74  51E9               	movf	InitProcedure@aPVal& (0+255),w,b
 12486  001B76  5DE0               	subwf	InitProcedure@aPValMax& (0+255),w,b
 12487  001B78  51E1               	movf	(InitProcedure@aPValMax+1)& (0+255),w,b
 12488  001B7A  0A80               	xorlw	128
 12489  001B7C  6FCD               	movwf	??_InitProcedure& (0+255),b
 12490  001B7E  51EA               	movf	(InitProcedure@aPVal+1)& (0+255),w,b
 12491  001B80  0A80               	xorlw	128
 12492  001B82  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12493  001B84  B0D8               	btfsc	status,0,c
 12494  001B86  D006               	goto	l15233
 12495                           
 12496                           ; BSR set to: 1
 12497                           ;main.c: 388:                     aPValMax = aPVal;
 12498  001B88  0060  F7A4  F1E0   	movff	InitProcedure@aPVal,InitProcedure@aPValMax
 12499  001B8E  0060  F7A8  F1E1   	movff	InitProcedure@aPVal+1,InitProcedure@aPValMax+1
 12500  001B94                     l15233:
 12501                           
 12502                           ; BSR set to: 1
 12503                           ;main.c: 390:                 if (aPVal < aPValMin) {
 12504  001B94  51E2               	movf	InitProcedure@aPValMin& (0+255),w,b
 12505  001B96  5DE9               	subwf	InitProcedure@aPVal& (0+255),w,b
 12506  001B98  51EA               	movf	(InitProcedure@aPVal+1)& (0+255),w,b
 12507  001B9A  0A80               	xorlw	128
 12508  001B9C  6FCD               	movwf	??_InitProcedure& (0+255),b
 12509  001B9E  51E3               	movf	(InitProcedure@aPValMin+1)& (0+255),w,b
 12510  001BA0  0A80               	xorlw	128
 12511  001BA2  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12512  001BA4  B0D8               	btfsc	status,0,c
 12513  001BA6  D016               	goto	l15245
 12514                           
 12515                           ; BSR set to: 1
 12516                           ;main.c: 391:                     aPValMin = aPVal;
 12517  001BA8  0060  F7A4  F1E2   	movff	InitProcedure@aPVal,InitProcedure@aPValMin
 12518  001BAE  0060  F7A8  F1E3   	movff	InitProcedure@aPVal+1,InitProcedure@aPValMin+1
 12519  001BB4  D00F               	goto	l15245
 12520  001BB6                     l15237:
 12521                           
 12522                           ;main.c: 394:                 initOk = 0;
 12523  001BB6  0E00               	movlw	0
 12524  001BB8  0101               	movlb	1	; () banked
 12525  001BBA  6FE4               	movwf	InitProcedure@initOk& (0+255),b
 12526                           
 12527                           ; BSR set to: 1
 12528                           ;main.c: 395:                 LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",10
      +                          );
 12529  001BBC  94BA               	bcf	186,2,c	;volatile
 12530                           
 12531                           ; BSR set to: 1
 12532  001BBE  96BA               	bcf	186,3,c	;volatile
 12533                           
 12534                           ; BSR set to: 1
 12535  001BC0  0EEC               	movlw	low STR_10
 12536  001BC2  6FA6               	movwf	printf@fmt& (0+255),b
 12537  001BC4  0EFF               	movlw	high STR_10
 12538  001BC6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12539  001BC8  0E00               	movlw	0
 12540  001BCA  6FA9               	movwf	(?_printf+3)& (0+255),b
 12541  001BCC  0E0A               	movlw	10
 12542  001BCE  6FA8               	movwf	(?_printf+2)& (0+255),b
 12543  001BD0  EC84  F039         	call	_printf	;wreg free
 12544  001BD4                     l15245:
 12545                           
 12546                           ;main.c: 373:         while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12547  001BD4  0EDC               	movlw	low InitProcedure@tstamp
 12548  001BD6  0100               	movlb	0	; () banked
 12549  001BD8  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
 12550  001BDA  0E01               	movlw	high InitProcedure@tstamp
 12551  001BDC  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 12552  001BDE  0E01               	movlw	1
 12553  001BE0  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
 12554  001BE2  0EF4               	movlw	244
 12555  001BE4  6F8E               	movwf	timeElapsedR@duration& (0+255),b
 12556  001BE6  EC83  F032         	call	_timeElapsedR	;wreg free
 12557  001BEA  0900               	iorlw	0
 12558  001BEC  B4D8               	btfsc	status,2,c
 12559  001BEE  D77A               	goto	l15213
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;main.c: 400:         mPValMean = (mPValMax + mPValMin) >> 1;
 12563  001BF0  0101               	movlb	1	; () banked
 12564  001BF2  51D8               	movf	InitProcedure@mPValMin& (0+255),w,b
 12565  001BF4  25D6               	addwf	InitProcedure@mPValMax& (0+255),w,b
 12566  001BF6  6FCD               	movwf	??_InitProcedure& (0+255),b
 12567  001BF8  51D9               	movf	(InitProcedure@mPValMin+1)& (0+255),w,b
 12568  001BFA  21D7               	addwfc	(InitProcedure@mPValMax+1)& (0+255),w,b
 12569  001BFC  6FCE               	movwf	(??_InitProcedure+1)& (0+255),b
 12570  001BFE  35CE               	rlcf	(??_InitProcedure+1)& (0+255),w,b
 12571  001C00  31CE               	rrcf	(??_InitProcedure+1)& (0+255),w,b
 12572  001C02  6FCF               	movwf	(??_InitProcedure+2)& (0+255),b
 12573  001C04  31CD               	rrcf	??_InitProcedure& (0+255),w,b
 12574  001C06  6FDA               	movwf	InitProcedure@mPValMean& (0+255),b
 12575  001C08  0060  F73C  F1DB   	movff	??_InitProcedure+2,InitProcedure@mPValMean+1
 12576                           
 12577                           ;main.c: 401:         aPValMean = (aPValMax + aPValMin) >> 1;
 12578  001C0E  51E2               	movf	InitProcedure@aPValMin& (0+255),w,b
 12579  001C10  25E0               	addwf	InitProcedure@aPValMax& (0+255),w,b
 12580  001C12  6FCD               	movwf	??_InitProcedure& (0+255),b
 12581  001C14  51E3               	movf	(InitProcedure@aPValMin+1)& (0+255),w,b
 12582  001C16  21E1               	addwfc	(InitProcedure@aPValMax+1)& (0+255),w,b
 12583  001C18  6FCE               	movwf	(??_InitProcedure+1)& (0+255),b
 12584  001C1A  35CE               	rlcf	(??_InitProcedure+1)& (0+255),w,b
 12585  001C1C  31CE               	rrcf	(??_InitProcedure+1)& (0+255),w,b
 12586  001C1E  6FCF               	movwf	(??_InitProcedure+2)& (0+255),b
 12587  001C20  31CD               	rrcf	??_InitProcedure& (0+255),w,b
 12588  001C22  6FDE               	movwf	InitProcedure@aPValMean& (0+255),b
 12589  001C24  0060  F73C  F1DF   	movff	??_InitProcedure+2,InitProcedure@aPValMean+1
 12590                           
 12591                           ; BSR set to: 1
 12592                           ;main.c: 402:         LATDbits.LATD6 = 0;
 12593  001C2A  9CBD               	bcf	189,6,c	;volatile
 12594                           
 12595                           ; BSR set to: 1
 12596                           ;main.c: 403:         sprintf(lcdTopRow, "MS: % 3d AS: % 3d ", mPValMean, aPValMean);
 12597  001C2C  0E67               	movlw	low _lcdTopRow
 12598  001C2E  6FA6               	movwf	sprintf@s& (0+255),b
 12599  001C30  0E02               	movlw	high _lcdTopRow
 12600  001C32  6FA7               	movwf	(sprintf@s+1)& (0+255),b
 12601  001C34  0E37               	movlw	low STR_19
 12602  001C36  6FA8               	movwf	sprintf@fmt& (0+255),b
 12603  001C38  0EFE               	movlw	high STR_19
 12604  001C3A  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
 12605  001C3C  0060  F768  F1AA   	movff	InitProcedure@mPValMean,?_sprintf+4
 12606  001C42  0060  F76C  F1AB   	movff	InitProcedure@mPValMean+1,?_sprintf+5
 12607  001C48  0060  F778  F1AC   	movff	InitProcedure@aPValMean,?_sprintf+6
 12608  001C4E  0060  F77C  F1AD   	movff	InitProcedure@aPValMean+1,?_sprintf+7
 12609  001C54  EC9C  F033         	call	_sprintf	;wreg free
 12610                           
 12611                           ; BSR set to: 1
 12612                           ;main.c: 404:         printf ("MAIN PRESSURE. Min %d Max %d MEAN %d\n", mPValMin, mPValM
      +                          ax, mPValMean);
 12613  001C58  0EA3               	movlw	low STR_20
 12614  001C5A  6FA6               	movwf	printf@fmt& (0+255),b
 12615  001C5C  0EFC               	movlw	high STR_20
 12616  001C5E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12617  001C60  0060  F760  F1A8   	movff	InitProcedure@mPValMin,?_printf+2
 12618  001C66  0060  F764  F1A9   	movff	InitProcedure@mPValMin+1,?_printf+3
 12619  001C6C  0060  F758  F1AA   	movff	InitProcedure@mPValMax,?_printf+4
 12620  001C72  0060  F75C  F1AB   	movff	InitProcedure@mPValMax+1,?_printf+5
 12621  001C78  0060  F768  F1AC   	movff	InitProcedure@mPValMean,?_printf+6
 12622  001C7E  0060  F76C  F1AD   	movff	InitProcedure@mPValMean+1,?_printf+7
 12623  001C84  EC84  F039         	call	_printf	;wreg free
 12624                           
 12625                           ;main.c: 405:         printf ("AUX PRESSURE. Min %d Max %d MEAN %d\n", aPValMin, aPValMa
      +                          x, aPValMean);
 12626  001C88  0EC9               	movlw	low STR_21
 12627  001C8A  0101               	movlb	1	; () banked
 12628  001C8C  6FA6               	movwf	printf@fmt& (0+255),b
 12629  001C8E  0EFC               	movlw	high STR_21
 12630  001C90  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12631  001C92  0060  F788  F1A8   	movff	InitProcedure@aPValMin,?_printf+2
 12632  001C98  0060  F78C  F1A9   	movff	InitProcedure@aPValMin+1,?_printf+3
 12633  001C9E  0060  F780  F1AA   	movff	InitProcedure@aPValMax,?_printf+4
 12634  001CA4  0060  F784  F1AB   	movff	InitProcedure@aPValMax+1,?_printf+5
 12635  001CAA  0060  F778  F1AC   	movff	InitProcedure@aPValMean,?_printf+6
 12636  001CB0  0060  F77C  F1AD   	movff	InitProcedure@aPValMean+1,?_printf+7
 12637  001CB6  EC84  F039         	call	_printf	;wreg free
 12638                           
 12639                           ;main.c: 406:         setCursor(0, 0);
 12640  001CBA  0E00               	movlw	0
 12641  001CBC  0100               	movlb	0	; () banked
 12642  001CBE  6F9B               	movwf	setCursor@row& (0+255),b
 12643  001CC0  0E00               	movlw	0
 12644  001CC2  ECC4  F036         	call	_setCursor
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;main.c: 407:         printstrblock(lcdTopRow);
 12648  001CC6  0E67               	movlw	low _lcdTopRow
 12649  001CC8  6F97               	movwf	printstrblock@c& (0+255),b
 12650  001CCA  0E02               	movlw	high _lcdTopRow
 12651  001CCC  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12652  001CCE  EC05  F03B         	call	_printstrblock	;wreg free
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;main.c: 408:         timeDelayMs(1000);
 12656  001CD2  0E03               	movlw	3
 12657  001CD4  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12658  001CD6  0EE8               	movlw	232
 12659  001CD8  6F94               	movwf	timeDelayMs@delms& (0+255),b
 12660  001CDA  EC71  F037         	call	_timeDelayMs	;wreg free
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;main.c: 411:         if (((aPValMax - aPValMin) > 16) || ((mPValMax - mPValMin) > 16) |
      +                          | (mPValMean > 350) || (mPValMean > 350) || (aPValMean < 600) || (aPValMean > 1030)) {
 12664  001CDE  0101               	movlb	1	; () banked
 12665  001CE0  51E2               	movf	InitProcedure@aPValMin& (0+255),w,b
 12666  001CE2  5DE0               	subwf	InitProcedure@aPValMax& (0+255),w,b
 12667  001CE4  6FCD               	movwf	??_InitProcedure& (0+255),b
 12668  001CE6  51E3               	movf	(InitProcedure@aPValMin+1)& (0+255),w,b
 12669  001CE8  59E1               	subwfb	(InitProcedure@aPValMax+1)& (0+255),w,b
 12670  001CEA  6FCE               	movwf	(??_InitProcedure+1)& (0+255),b
 12671  001CEC  BFCE               	btfsc	(??_InitProcedure+1)& (0+255),7,b
 12672  001CEE  D006               	goto	u14840
 12673  001CF0  51CE               	movf	(??_InitProcedure+1)& (0+255),w,b
 12674  001CF2  E132               	bnz	l15275
 12675  001CF4  0E11               	movlw	17
 12676  001CF6  5DCD               	subwf	??_InitProcedure& (0+255),w,b
 12677  001CF8  B0D8               	btfsc	status,0,c
 12678  001CFA  D02E               	goto	u14890
 12679  001CFC                     u14840:
 12680                           
 12681                           ; BSR set to: 1
 12682  001CFC  51D8               	movf	InitProcedure@mPValMin& (0+255),w,b
 12683  001CFE  5DD6               	subwf	InitProcedure@mPValMax& (0+255),w,b
 12684  001D00  6FCD               	movwf	??_InitProcedure& (0+255),b
 12685  001D02  51D9               	movf	(InitProcedure@mPValMin+1)& (0+255),w,b
 12686  001D04  59D7               	subwfb	(InitProcedure@mPValMax+1)& (0+255),w,b
 12687  001D06  6FCE               	movwf	(??_InitProcedure+1)& (0+255),b
 12688  001D08  BFCE               	btfsc	(??_InitProcedure+1)& (0+255),7,b
 12689  001D0A  D006               	goto	u14850
 12690  001D0C  51CE               	movf	(??_InitProcedure+1)& (0+255),w,b
 12691  001D0E  E124               	bnz	l15275
 12692  001D10  0E11               	movlw	17
 12693  001D12  5DCD               	subwf	??_InitProcedure& (0+255),w,b
 12694  001D14  B0D8               	btfsc	status,0,c
 12695  001D16  D020               	goto	u14890
 12696  001D18                     u14850:
 12697                           
 12698                           ; BSR set to: 1
 12699  001D18  BFDB               	btfsc	(InitProcedure@mPValMean+1)& (0+255),7,b
 12700  001D1A  D006               	goto	u14860
 12701  001D1C  0E5F               	movlw	95
 12702  001D1E  5DDA               	subwf	InitProcedure@mPValMean& (0+255),w,b
 12703  001D20  0E01               	movlw	1
 12704  001D22  59DB               	subwfb	(InitProcedure@mPValMean+1)& (0+255),w,b
 12705  001D24  B0D8               	btfsc	status,0,c
 12706  001D26  D018               	goto	u14890
 12707  001D28                     u14860:
 12708                           
 12709                           ; BSR set to: 1
 12710  001D28  BFDB               	btfsc	(InitProcedure@mPValMean+1)& (0+255),7,b
 12711  001D2A  D006               	goto	u14870
 12712  001D2C  0E5F               	movlw	95
 12713  001D2E  5DDA               	subwf	InitProcedure@mPValMean& (0+255),w,b
 12714  001D30  0E01               	movlw	1
 12715  001D32  59DB               	subwfb	(InitProcedure@mPValMean+1)& (0+255),w,b
 12716  001D34  B0D8               	btfsc	status,0,c
 12717  001D36  D010               	goto	u14890
 12718  001D38                     u14870:
 12719                           
 12720                           ; BSR set to: 1
 12721  001D38  BFDF               	btfsc	(InitProcedure@aPValMean+1)& (0+255),7,b
 12722  001D3A  D00E               	goto	u14890
 12723  001D3C  0E58               	movlw	88
 12724  001D3E  5DDE               	subwf	InitProcedure@aPValMean& (0+255),w,b
 12725  001D40  0E02               	movlw	2
 12726  001D42  59DF               	subwfb	(InitProcedure@aPValMean+1)& (0+255),w,b
 12727  001D44  A0D8               	btfss	status,0,c
 12728  001D46  D008               	goto	u14890
 12729                           
 12730                           ; BSR set to: 1
 12731  001D48  BFDF               	btfsc	(InitProcedure@aPValMean+1)& (0+255),7,b
 12732  001D4A  D019               	goto	l15279
 12733  001D4C  0E07               	movlw	7
 12734  001D4E  5DDE               	subwf	InitProcedure@aPValMean& (0+255),w,b
 12735  001D50  0E04               	movlw	4
 12736  001D52  59DF               	subwfb	(InitProcedure@aPValMean+1)& (0+255),w,b
 12737  001D54  A0D8               	btfss	status,0,c
 12738  001D56  D013               	goto	l15279
 12739  001D58                     u14890:
 12740  001D58                     l15275:
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;main.c: 413:             setCursor(0, 0);
 12744  001D58  0E00               	movlw	0
 12745  001D5A  0100               	movlb	0	; () banked
 12746  001D5C  6F9B               	movwf	setCursor@row& (0+255),b
 12747  001D5E  0E00               	movlw	0
 12748  001D60  ECC4  F036         	call	_setCursor
 12749                           
 12750                           ;main.c: 414:             printstrblock("CAL ERROR. RETRY ");
 12751  001D64  0E80               	movlw	low STR_22
 12752  001D66  6F97               	movwf	printstrblock@c& (0+255),b
 12753  001D68  0EFE               	movlw	high STR_22
 12754  001D6A  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12755  001D6C  EC05  F03B         	call	_printstrblock	;wreg free
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;main.c: 415:             timeDelayMs(500);
 12759  001D70  0E01               	movlw	1
 12760  001D72  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12761  001D74  0EF4               	movlw	244
 12762  001D76  6F94               	movwf	timeDelayMs@delms& (0+255),b
 12763  001D78  EC71  F037         	call	_timeDelayMs	;wreg free
 12764                           
 12765                           ;main.c: 416:         } else {
 12766  001D7C  D05A               	goto	l15285
 12767  001D7E                     l15279:
 12768                           
 12769                           ; BSR set to: 1
 12770                           ;main.c: 418:             aCaptureSetOff(MainPSensor, mPValMean);
 12771  001D7E  0060  F768  F1BC   	movff	InitProcedure@mPValMean,aCaptureSetOff@offVal
 12772  001D84  0060  F76C  F1BD   	movff	InitProcedure@mPValMean+1,aCaptureSetOff@offVal+1
 12773  001D8A  0E00               	movlw	0
 12774  001D8C  EC17  F035         	call	_aCaptureSetOff
 12775                           
 12776                           ;main.c: 419:             aCaptureSetOff(AuxPSensor, aPValMean);
 12777  001D90  0060  F778  F1BC   	movff	InitProcedure@aPValMean,aCaptureSetOff@offVal
 12778  001D96  0060  F77C  F1BD   	movff	InitProcedure@aPValMean+1,aCaptureSetOff@offVal+1
 12779  001D9C  0E01               	movlw	1
 12780  001D9E  EC17  F035         	call	_aCaptureSetOff
 12781                           
 12782                           ;main.c: 421:             aCaptRstFlt(Flt0PSensor);
 12783  001DA2  0E03               	movlw	3
 12784  001DA4  ECD6  F028         	call	_aCaptRstFlt
 12785                           
 12786                           ;main.c: 422:             aCaptRstFlt(Flt1PSensor);
 12787  001DA8  0E04               	movlw	4
 12788  001DAA  ECD6  F028         	call	_aCaptRstFlt
 12789                           
 12790                           ;main.c: 423:             aCaptRstFlt(Flt2PSensor);
 12791  001DAE  0E05               	movlw	5
 12792  001DB0  ECD6  F028         	call	_aCaptRstFlt
 12793                           
 12794                           ;main.c: 424:             aCaptRstFlt(Flt3PSensor);
 12795  001DB4  0E06               	movlw	6
 12796  001DB6  ECD6  F028         	call	_aCaptRstFlt
 12797                           
 12798                           ;main.c: 425:             printf ("MAIN PRESSURE. Min %d Max %d MEAN %d\n", mPValMin, mP
      +                          ValMax, mPValMean);
 12799  001DBA  0EA3               	movlw	low STR_20
 12800  001DBC  0101               	movlb	1	; () banked
 12801  001DBE  6FA6               	movwf	printf@fmt& (0+255),b
 12802  001DC0  0EFC               	movlw	high STR_20
 12803  001DC2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12804  001DC4  0060  F760  F1A8   	movff	InitProcedure@mPValMin,?_printf+2
 12805  001DCA  0060  F764  F1A9   	movff	InitProcedure@mPValMin+1,?_printf+3
 12806  001DD0  0060  F758  F1AA   	movff	InitProcedure@mPValMax,?_printf+4
 12807  001DD6  0060  F75C  F1AB   	movff	InitProcedure@mPValMax+1,?_printf+5
 12808  001DDC  0060  F768  F1AC   	movff	InitProcedure@mPValMean,?_printf+6
 12809  001DE2  0060  F76C  F1AD   	movff	InitProcedure@mPValMean+1,?_printf+7
 12810  001DE8  EC84  F039         	call	_printf	;wreg free
 12811                           
 12812                           ;main.c: 426:             printf ("AUX PRESSURE. Min %d Max %d MEAN %d\n", aPValMin, aPV
      +                          alMax, aPValMean);
 12813  001DEC  0EC9               	movlw	low STR_21
 12814  001DEE  0101               	movlb	1	; () banked
 12815  001DF0  6FA6               	movwf	printf@fmt& (0+255),b
 12816  001DF2  0EFC               	movlw	high STR_21
 12817  001DF4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 12818  001DF6  0060  F788  F1A8   	movff	InitProcedure@aPValMin,?_printf+2
 12819  001DFC  0060  F78C  F1A9   	movff	InitProcedure@aPValMin+1,?_printf+3
 12820  001E02  0060  F780  F1AA   	movff	InitProcedure@aPValMax,?_printf+4
 12821  001E08  0060  F784  F1AB   	movff	InitProcedure@aPValMax+1,?_printf+5
 12822  001E0E  0060  F778  F1AC   	movff	InitProcedure@aPValMean,?_printf+6
 12823  001E14  0060  F77C  F1AD   	movff	InitProcedure@aPValMean+1,?_printf+7
 12824  001E1A  EC84  F039         	call	_printf	;wreg free
 12825                           
 12826                           ;main.c: 427:             timeDelayMs(50);
 12827  001E1E  0E00               	movlw	0
 12828  001E20  0100               	movlb	0	; () banked
 12829  001E22  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12830  001E24  0E32               	movlw	50
 12831  001E26  6F94               	movwf	timeDelayMs@delms& (0+255),b
 12832  001E28  EC71  F037         	call	_timeDelayMs	;wreg free
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;main.c: 428:             ctrlStatus = CTRL_STOP;
 12836  001E2C  0E01               	movlw	1
 12837  001E2E  0101               	movlb	1	; () banked
 12838  001E30  6F4D               	movwf	_ctrlStatus& (0+255),b
 12839  001E32                     l15285:
 12840                           
 12841                           ;main.c: 333:     while (ctrlStatus == CTRL_UNCAL) {
 12842  001E32  0101               	movlb	1	; () banked
 12843  001E34  514D               	movf	_ctrlStatus& (0+255),w,b
 12844  001E36  B4D8               	btfsc	status,2,c
 12845  001E38  D5F9               	goto	l1467
 12846                           
 12847                           ; BSR set to: 1
 12848                           ;main.c: 432:     if (!initOk) {
 12849  001E3A  51E4               	movf	InitProcedure@initOk& (0+255),w,b
 12850  001E3C  B4D8               	btfsc	status,2,c
 12851  001E3E  D565               	goto	u14660
 12852                           
 12853                           ; BSR set to: 1
 12854  001E40  ECBD  F03B         	call	_timeGet	;wreg free
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;main.c: 440:     setCursor(0, 0);
 12858  001E44  0E00               	movlw	0
 12859  001E46  6F9B               	movwf	setCursor@row& (0+255),b
 12860  001E48  0E00               	movlw	0
 12861  001E4A  ECC4  F036         	call	_setCursor
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;main.c: 441:     printstrblock("FLOW RATE        ");
 12865  001E4E  0E6E               	movlw	low STR_25
 12866  001E50  6F97               	movwf	printstrblock@c& (0+255),b
 12867  001E52  0EFE               	movlw	high STR_25
 12868  001E54  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 12869  001E56  EC05  F03B         	call	_printstrblock	;wreg free
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;main.c: 443:     aPValMin = 4096;
 12873  001E5A  0E10               	movlw	16
 12874  001E5C  0101               	movlb	1	; () banked
 12875  001E5E  6FE3               	movwf	(InitProcedure@aPValMin+1)& (0+255),b
 12876  001E60  0E00               	movlw	0
 12877  001E62  6FE2               	movwf	InitProcedure@aPValMin& (0+255),b
 12878                           
 12879                           ; BSR set to: 1
 12880                           ;main.c: 444:     aPValMax = 0;
 12881  001E64  0E00               	movlw	0
 12882  001E66  6FE1               	movwf	(InitProcedure@aPValMax+1)& (0+255),b
 12883  001E68  0E00               	movlw	0
 12884  001E6A  6FE0               	movwf	InitProcedure@aPValMax& (0+255),b
 12885                           
 12886                           ; BSR set to: 1
 12887                           ;main.c: 446:     MonitorMsgForcedSend (MONSTATE_CALF);
 12888  001E6C  0EA0               	movlw	160
 12889  001E6E  ECF0  F023         	call	_MonitorMsgForcedSend
 12890                           
 12891                           ;main.c: 448:     LATAbits.LATA2 = 1;
 12892  001E72  84BA               	bsf	186,2,c	;volatile
 12893                           
 12894                           ;main.c: 449:     LATAbits.LATA3 = 1;
 12895  001E74  86BA               	bsf	186,3,c	;volatile
 12896                           
 12897                           ;main.c: 450:     timeDelayMs(250);
 12898  001E76  0E00               	movlw	0
 12899  001E78  0100               	movlb	0	; () banked
 12900  001E7A  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12901  001E7C  0EFA               	movlw	250
 12902  001E7E  6F94               	movwf	timeDelayMs@delms& (0+255),b
 12903  001E80  EC71  F037         	call	_timeDelayMs	;wreg free
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;main.c: 451:     vMeasureRst();
 12907  001E84  ECF7  F03A         	call	_vMeasureRst	;wreg free
 12908                           
 12909                           ; BSR set to: 57
 12910                           ;main.c: 452:     tstamp = timeGet();
 12911  001E88  ECBD  F03B         	call	_timeGet	;wreg free
 12912  001E8C  0060  F230  F1DC   	movff	?_timeGet,InitProcedure@tstamp
 12913  001E92  0060  F234  F1DD   	movff	?_timeGet+1,InitProcedure@tstamp+1
 12914                           
 12915                           ;main.c: 453:     while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 12916  001E98  D029               	goto	l15325
 12917  001E9A                     l15315:
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;main.c: 454:         aCaptGetResult(AuxPSensor, &aPVal);
 12921  001E9A  0EE9               	movlw	low InitProcedure@aPVal
 12922  001E9C  0101               	movlb	1	; () banked
 12923  001E9E  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
 12924  001EA0  0E01               	movlw	high InitProcedure@aPVal
 12925  001EA2  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 12926  001EA4  0E01               	movlw	1
 12927  001EA6  ECB9  F020         	call	_aCaptGetResult
 12928                           
 12929                           ;main.c: 455:         if (aPVal > aPValMax) {
 12930  001EAA  0101               	movlb	1	; () banked
 12931  001EAC  51E9               	movf	InitProcedure@aPVal& (0+255),w,b
 12932  001EAE  5DE0               	subwf	InitProcedure@aPValMax& (0+255),w,b
 12933  001EB0  51E1               	movf	(InitProcedure@aPValMax+1)& (0+255),w,b
 12934  001EB2  0A80               	xorlw	128
 12935  001EB4  6FCD               	movwf	??_InitProcedure& (0+255),b
 12936  001EB6  51EA               	movf	(InitProcedure@aPVal+1)& (0+255),w,b
 12937  001EB8  0A80               	xorlw	128
 12938  001EBA  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12939  001EBC  B0D8               	btfsc	status,0,c
 12940  001EBE  D006               	goto	l15321
 12941                           
 12942                           ; BSR set to: 1
 12943                           ;main.c: 456:             aPValMax = aPVal;
 12944  001EC0  0060  F7A4  F1E0   	movff	InitProcedure@aPVal,InitProcedure@aPValMax
 12945  001EC6  0060  F7A8  F1E1   	movff	InitProcedure@aPVal+1,InitProcedure@aPValMax+1
 12946  001ECC                     l15321:
 12947                           
 12948                           ; BSR set to: 1
 12949                           ;main.c: 458:         if (aPVal < aPValMin) {
 12950  001ECC  51E2               	movf	InitProcedure@aPValMin& (0+255),w,b
 12951  001ECE  5DE9               	subwf	InitProcedure@aPVal& (0+255),w,b
 12952  001ED0  51EA               	movf	(InitProcedure@aPVal+1)& (0+255),w,b
 12953  001ED2  0A80               	xorlw	128
 12954  001ED4  6FCD               	movwf	??_InitProcedure& (0+255),b
 12955  001ED6  51E3               	movf	(InitProcedure@aPValMin+1)& (0+255),w,b
 12956  001ED8  0A80               	xorlw	128
 12957  001EDA  59CD               	subwfb	??_InitProcedure& (0+255),w,b
 12958  001EDC  B0D8               	btfsc	status,0,c
 12959  001EDE  D006               	goto	l15325
 12960                           
 12961                           ; BSR set to: 1
 12962                           ;main.c: 459:             aPValMin = aPVal;
 12963  001EE0  0060  F7A4  F1E2   	movff	InitProcedure@aPVal,InitProcedure@aPValMin
 12964  001EE6  0060  F7A8  F1E3   	movff	InitProcedure@aPVal+1,InitProcedure@aPValMin+1
 12965  001EEC                     l15325:
 12966                           
 12967                           ;main.c: 453:     while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 12968  001EEC  0EDC               	movlw	low InitProcedure@tstamp
 12969  001EEE  0100               	movlb	0	; () banked
 12970  001EF0  6F8C               	movwf	timeElapsedR@prevTime& (0+255),b
 12971  001EF2  0E01               	movlw	high InitProcedure@tstamp
 12972  001EF4  6F8D               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 12973  001EF6  0E00               	movlw	0
 12974  001EF8  6F8F               	movwf	(timeElapsedR@duration+1)& (0+255),b
 12975  001EFA  0EFA               	movlw	250
 12976  001EFC  6F8E               	movwf	timeElapsedR@duration& (0+255),b
 12977  001EFE  EC83  F032         	call	_timeElapsedR	;wreg free
 12978  001F02  0900               	iorlw	0
 12979  001F04  B4D8               	btfsc	status,2,c
 12980  001F06  D7C9               	goto	l15315
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;main.c: 463:     openFlowRate = vMeasureGet()<<2;
 12984  001F08  EC6F  F033         	call	_vMeasureGet	;wreg free
 12985  001F0C  90D8               	bcf	status,0,c
 12986  001F0E  379D               	rlcf	?_vMeasureGet& (0+255),f,b
 12987  001F10  379E               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 12988  001F12  90D8               	bcf	status,0,c
 12989  001F14  379D               	rlcf	?_vMeasureGet& (0+255),f,b
 12990  001F16  379E               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 12991  001F18  0060  F274  F12F   	movff	?_vMeasureGet,_openFlowRate
 12992  001F1E  0060  F278  F130   	movff	?_vMeasureGet+1,_openFlowRate+1
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;main.c: 464:     MonitorMsgForcedSend (MONSTATE_STOP);
 12996  001F24  0E00               	movlw	0
 12997  001F26  ECF0  F023         	call	_MonitorMsgForcedSend
 12998                           
 12999                           ;main.c: 465:     LATAbits.LATA2 = 0;
 13000  001F2A  94BA               	bcf	186,2,c	;volatile
 13001                           
 13002                           ;main.c: 466:     LATAbits.LATA3 = 0;
 13003  001F2C  96BA               	bcf	186,3,c	;volatile
 13004                           
 13005                           ;main.c: 468:     if (((aPValMean<<1) + aPValMax+aPValMin)>= (0.95*8192)) {
 13006  001F2E  0060  F778  F1CD   	movff	InitProcedure@aPValMean,??_InitProcedure
 13007  001F34  0060  F77C  F1CE   	movff	InitProcedure@aPValMean+1,??_InitProcedure+1
 13008  001F3A  90D8               	bcf	status,0,c
 13009  001F3C  0101               	movlb	1	; () banked
 13010  001F3E  37CD               	rlcf	??_InitProcedure& (0+255),f,b
 13011  001F40  37CE               	rlcf	(??_InitProcedure+1)& (0+255),f,b
 13012  001F42  51E0               	movf	InitProcedure@aPValMax& (0+255),w,b
 13013  001F44  27CD               	addwf	??_InitProcedure& (0+255),f,b
 13014  001F46  51E1               	movf	(InitProcedure@aPValMax+1)& (0+255),w,b
 13015  001F48  23CE               	addwfc	(??_InitProcedure+1)& (0+255),f,b
 13016  001F4A  51E2               	movf	InitProcedure@aPValMin& (0+255),w,b
 13017  001F4C  27CD               	addwf	??_InitProcedure& (0+255),f,b
 13018  001F4E  51E3               	movf	(InitProcedure@aPValMin+1)& (0+255),w,b
 13019  001F50  23CE               	addwfc	(??_InitProcedure+1)& (0+255),f,b
 13020  001F52  0060  F734  F084   	movff	??_InitProcedure,___xxtofl@val
 13021  001F58  0060  F738  F085   	movff	??_InitProcedure+1,___xxtofl@val+1
 13022  001F5E  0100               	movlb	0	; () banked
 13023  001F60  0E00               	movlw	0
 13024  001F62  BF85               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 13025  001F64  0EFF               	movlw	-1
 13026  001F66  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
 13027  001F68  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
 13028  001F6A  0E01               	movlw	1
 13029  001F6C  EC97  F025         	call	___xxtofl
 13030  001F70  0060  F210  F0A2   	movff	?___xxtofl,___flge@ff1
 13031  001F76  0060  F214  F0A3   	movff	?___xxtofl+1,___flge@ff1+1
 13032  001F7C  0060  F218  F0A4   	movff	?___xxtofl+2,___flge@ff1+2
 13033  001F82  0060  F21C  F0A5   	movff	?___xxtofl+3,___flge@ff1+3
 13034  001F88  0E33               	movlw	51
 13035  001F8A  6FA6               	movwf	___flge@ff2& (0+255),b
 13036  001F8C  0E33               	movlw	51
 13037  001F8E  6FA7               	movwf	(___flge@ff2+1)& (0+255),b
 13038  001F90  0EF3               	movlw	243
 13039  001F92  6FA8               	movwf	(___flge@ff2+2)& (0+255),b
 13040  001F94  0E45               	movlw	69
 13041  001F96  6FA9               	movwf	(___flge@ff2+3)& (0+255),b
 13042  001F98  EC42  F02A         	call	___flge	;wreg free
 13043  001F9C  A0D8               	btfss	status,0,c
 13044  001F9E  D012               	goto	l15341
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;main.c: 470:         setCursor(0, 0);
 13048  001FA0  0E00               	movlw	0
 13049  001FA2  6F9B               	movwf	setCursor@row& (0+255),b
 13050  001FA4  0E00               	movlw	0
 13051  001FA6  ECC4  F036         	call	_setCursor
 13052                           
 13053                           ;main.c: 471:         printstrblock("FLOW TOO HIGH   ");
 13054  001FAA  0E1B               	movlw	low STR_26
 13055  001FAC  6F97               	movwf	printstrblock@c& (0+255),b
 13056  001FAE  0EFF               	movlw	high STR_26
 13057  001FB0  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 13058  001FB2  EC05  F03B         	call	_printstrblock	;wreg free
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;main.c: 472:         timeDelayMs(1000);
 13062  001FB6  0E03               	movlw	3
 13063  001FB8  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13064  001FBA  0EE8               	movlw	232
 13065  001FBC  6F94               	movwf	timeDelayMs@delms& (0+255),b
 13066  001FBE  EC71  F037         	call	_timeDelayMs	;wreg free
 13067                           
 13068                           ;main.c: 473:     } else {
 13069  001FC2  D07C               	goto	l1500
 13070  001FC4                     l15341:
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;main.c: 474:         sprintf(lcdTopRow, "FLOW: % 3d L/min ", (int16_t) ((uint32_t) ((ui
      +                          nt32_t) 60 * openFlowRate) / 1000));
 13074  001FC4  0E67               	movlw	low _lcdTopRow
 13075  001FC6  0101               	movlb	1	; () banked
 13076  001FC8  6FA6               	movwf	sprintf@s& (0+255),b
 13077  001FCA  0E02               	movlw	high _lcdTopRow
 13078  001FCC  6FA7               	movwf	(sprintf@s+1)& (0+255),b
 13079  001FCE  0E92               	movlw	low STR_27
 13080  001FD0  6FA8               	movwf	sprintf@fmt& (0+255),b
 13081  001FD2  0EFE               	movlw	high STR_27
 13082  001FD4  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
 13083  001FD6  0060  F4BC  F084   	movff	_openFlowRate,___lmul@multiplier
 13084  001FDC  0060  F4C0  F085   	movff	_openFlowRate+1,___lmul@multiplier+1
 13085  001FE2  0100               	movlb	0	; () banked
 13086  001FE4  6B86               	clrf	(___lmul@multiplier+2)& (0+255),b
 13087  001FE6  6B87               	clrf	(___lmul@multiplier+3)& (0+255),b
 13088  001FE8  0E3C               	movlw	60
 13089  001FEA  6F88               	movwf	___lmul@multiplicand& (0+255),b
 13090  001FEC  0E00               	movlw	0
 13091  001FEE  6F89               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13092  001FF0  0E00               	movlw	0
 13093  001FF2  6F8A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13094  001FF4  0E00               	movlw	0
 13095  001FF6  6F8B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13096  001FF8  ECE3  F032         	call	___lmul	;wreg free
 13097  001FFC  0060  F210  F090   	movff	?___lmul,___lldiv@dividend
 13098  002002  0060  F214  F091   	movff	?___lmul+1,___lldiv@dividend+1
 13099  002008  0060  F218  F092   	movff	?___lmul+2,___lldiv@dividend+2
 13100  00200E  0060  F21C  F093   	movff	?___lmul+3,___lldiv@dividend+3
 13101  002014  0EE8               	movlw	232
 13102  002016  6F94               	movwf	___lldiv@divisor& (0+255),b
 13103  002018  0E03               	movlw	3
 13104  00201A  6F95               	movwf	(___lldiv@divisor+1)& (0+255),b
 13105  00201C  0E00               	movlw	0
 13106  00201E  6F96               	movwf	(___lldiv@divisor+2)& (0+255),b
 13107  002020  0E00               	movlw	0
 13108  002022  6F97               	movwf	(___lldiv@divisor+3)& (0+255),b
 13109  002024  ECE4  F02E         	call	___lldiv	;wreg free
 13110  002028  0060  F240  F1AA   	movff	?___lldiv,?_sprintf+4
 13111  00202E  0060  F244  F1AB   	movff	?___lldiv+1,?_sprintf+5
 13112  002034  EC9C  F033         	call	_sprintf	;wreg free
 13113                           
 13114                           ; BSR set to: 1
 13115                           ;main.c: 475:         setCursor(0, 0);
 13116  002038  0E00               	movlw	0
 13117  00203A  0100               	movlb	0	; () banked
 13118  00203C  6F9B               	movwf	setCursor@row& (0+255),b
 13119  00203E  0E00               	movlw	0
 13120  002040  ECC4  F036         	call	_setCursor
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;main.c: 476:         printstrblock(lcdTopRow);
 13124  002044  0E67               	movlw	low _lcdTopRow
 13125  002046  6F97               	movwf	printstrblock@c& (0+255),b
 13126  002048  0E02               	movlw	high _lcdTopRow
 13127  00204A  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 13128  00204C  EC05  F03B         	call	_printstrblock	;wreg free
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;main.c: 477:         timeDelayMs(4000);
 13132  002050  0E0F               	movlw	15
 13133  002052  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13134  002054  0EA0               	movlw	160
 13135  002056  6F94               	movwf	timeDelayMs@delms& (0+255),b
 13136  002058  EC71  F037         	call	_timeDelayMs	;wreg free
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;main.c: 479:         if (openFlowRate < 200) {
 13140  00205C  0101               	movlb	1	; () banked
 13141  00205E  5130               	movf	(_openFlowRate+1)& (0+255),w,b
 13142  002060  E11A               	bnz	l15357
 13143  002062  0EC8               	movlw	200
 13144  002064  5D2F               	subwf	_openFlowRate& (0+255),w,b
 13145  002066  B0D8               	btfsc	status,0,c
 13146  002068  D016               	goto	l15357
 13147                           
 13148                           ; BSR set to: 1
 13149                           ;main.c: 481:             setCursor(0, 0);
 13150  00206A  0E00               	movlw	0
 13151  00206C  0100               	movlb	0	; () banked
 13152  00206E  6F9B               	movwf	setCursor@row& (0+255),b
 13153  002070  0E00               	movlw	0
 13154  002072  ECC4  F036         	call	_setCursor
 13155                           
 13156                           ;main.c: 482:             printstrblock("FLOW TOO LOW    ");
 13157  002076  0E0A               	movlw	low STR_28
 13158  002078  6F97               	movwf	printstrblock@c& (0+255),b
 13159  00207A  0EFF               	movlw	high STR_28
 13160  00207C  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 13161  00207E  EC05  F03B         	call	_printstrblock	;wreg free
 13162  002082                     l15353:
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;main.c: 483:             timeDelayMs(1000);
 13166  002082  0E03               	movlw	3
 13167  002084  6F95               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13168  002086  0EE8               	movlw	232
 13169  002088  6F94               	movwf	timeDelayMs@delms& (0+255),b
 13170  00208A  EC71  F037         	call	_timeDelayMs	;wreg free
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;main.c: 484:             initOk = 0;
 13174  00208E  0E00               	movlw	0
 13175  002090  0101               	movlb	1	; () banked
 13176  002092  6FE4               	movwf	InitProcedure@initOk& (0+255),b
 13177                           
 13178                           ;main.c: 485:         } else if (openFlowRate > 2500) {
 13179  002094  D013               	goto	l1500
 13180  002096                     l15357:
 13181                           
 13182                           ; BSR set to: 1
 13183  002096  0EC5               	movlw	197
 13184  002098  5D2F               	subwf	_openFlowRate& (0+255),w,b
 13185  00209A  0E09               	movlw	9
 13186  00209C  5930               	subwfb	(_openFlowRate+1)& (0+255),w,b
 13187  00209E  A0D8               	btfss	status,0,c
 13188  0020A0  D00D               	goto	l1500
 13189                           
 13190                           ; BSR set to: 1
 13191                           ;main.c: 487:             setCursor(0, 0);
 13192  0020A2  0E00               	movlw	0
 13193  0020A4  0100               	movlb	0	; () banked
 13194  0020A6  6F9B               	movwf	setCursor@row& (0+255),b
 13195  0020A8  0E00               	movlw	0
 13196  0020AA  ECC4  F036         	call	_setCursor
 13197                           
 13198                           ;main.c: 488:             printstrblock("FLOW TOO HIGH   ");
 13199  0020AE  0E1B               	movlw	low STR_26
 13200  0020B0  6F97               	movwf	printstrblock@c& (0+255),b
 13201  0020B2  0EFF               	movlw	high STR_26
 13202  0020B4  6F98               	movwf	(printstrblock@c+1)& (0+255),b
 13203  0020B6  EC05  F03B         	call	_printstrblock	;wreg free
 13204  0020BA  D7E3               	goto	l15353
 13205  0020BC                     l1500:
 13206                           
 13207                           ;main.c: 497:     while (keyPeek() != -1)
 13208                           
 13209                           ; BSR set to: 1
 13210                           ;main.c: 497:     while (keyPeek() != -1)
 13211  0020BC  ECB3  F032         	call	_keyPeek	;wreg free
 13212  0020C0  0AFF               	xorlw	255
 13213  0020C2  A4D8               	btfss	status,2,c
 13214  0020C4  D7FB               	goto	l1500
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;main.c: 499:     keyReadInit();
 13218  0020C6  ECB4  F03B         	call	_keyReadInit	;wreg free
 13219  0020CA  D41F               	goto	u14660
 13220  0020CC                     __end_of_InitProcedure:
 13221                           	opt callstack 0
 13222                           
 13223 ;; *************** function _vMeasureRst *****************
 13224 ;; Defined at:
 13225 ;;		line 27 in file "vMeasure.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;		None
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;		None
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      void 
 13232 ;; Registers used:
 13233 ;;		wreg, status,2
 13234 ;; Tracked objects:
 13235 ;;		On entry : 3F/0
 13236 ;;		On exit  : 3F/39
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13243 ;;Total ram usage:        0 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:   13
 13246 ;; This function calls:
 13247 ;;		Nothing
 13248 ;; This function is called by:
 13249 ;;		_InitProcedure
 13250 ;;		_main
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254                           	psect	text46
 13255  0075EE                     __ptext46:
 13256                           	opt callstack 0
 13257  0075EE                     _vMeasureRst:
 13258                           	opt callstack 17
 13259                           
 13260                           ; BSR set to: 0
 13261                           ;vMeasure.c: 28:     PIE4bits.TMR2IE = 0;
 13262                           
 13263                           ; BSR set to: 1
 13264                           ;incstack = 0
 13265  0075EE  0139               	movlb	57	; () banked
 13266  0075F0  9594               	bcf	148,2,b	;volatile
 13267                           
 13268                           ; BSR set to: 57
 13269                           ;vMeasure.c: 29:     volume = 0;
 13270  0075F2  0E00               	movlw	0
 13271  0075F4  0101               	movlb	1	; () banked
 13272  0075F6  6F24               	movwf	_volume& (0+255),b
 13273  0075F8  0E00               	movlw	0
 13274  0075FA  6F25               	movwf	(_volume+1)& (0+255),b
 13275  0075FC  0E00               	movlw	0
 13276  0075FE  6F26               	movwf	(_volume+2)& (0+255),b
 13277  007600  0E00               	movlw	0
 13278  007602  6F27               	movwf	(_volume+3)& (0+255),b
 13279                           
 13280                           ; BSR set to: 1
 13281                           ;vMeasure.c: 30:     PIE4bits.TMR2IE = 1;
 13282  007604  0139               	movlb	57	; () banked
 13283  007606  8594               	bsf	148,2,b	;volatile
 13284                           
 13285                           ; BSR set to: 57
 13286  007608  0012               	return		;funcret
 13287  00760A                     __end_of_vMeasureRst:
 13288                           	opt callstack 0
 13289                           
 13290 ;; *************** function _vMeasureGet *****************
 13291 ;; Defined at:
 13292 ;;		line 40 in file "vMeasure.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;		None
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;  rawV            4   63[BANK0 ] unsigned long 
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  2   61[BANK0 ] unsigned short 
 13299 ;; Registers used:
 13300 ;;		wreg, status,2, status,0, cstack
 13301 ;; Tracked objects:
 13302 ;;		On entry : 3C/1
 13303 ;;		On exit  : 3F/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13307 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13309 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13310 ;;Total ram usage:        6 bytes
 13311 ;; Hardware stack levels used:    1
 13312 ;; Hardware stack levels required when called:   14
 13313 ;; This function calls:
 13314 ;;		___lldiv
 13315 ;; This function is called by:
 13316 ;;		_InitProcedure
 13317 ;;		_main
 13318 ;; This function uses a non-reentrant model
 13319 ;;
 13320                           
 13321                           	psect	text47
 13322  0066DE                     __ptext47:
 13323                           	opt callstack 0
 13324  0066DE                     _vMeasureGet:
 13325                           	opt callstack 16
 13326                           
 13327                           ;vMeasure.c: 41:     uint32_t rawV;;vMeasure.c: 42:     PIE4bits.TMR2IE = 0;
 13328                           
 13329                           ; BSR set to: 57
 13330                           ;incstack = 0
 13331  0066DE  0139               	movlb	57	; () banked
 13332  0066E0  9594               	bcf	148,2,b	;volatile
 13333                           
 13334                           ;vMeasure.c: 43:     rawV=volume;
 13335  0066E2  0060  F490  F09F   	movff	_volume,vMeasureGet@rawV
 13336  0066E8  0060  F494  F0A0   	movff	_volume+1,vMeasureGet@rawV+1
 13337  0066EE  0060  F498  F0A1   	movff	_volume+2,vMeasureGet@rawV+2
 13338  0066F4  0060  F49C  F0A2   	movff	_volume+3,vMeasureGet@rawV+3
 13339                           
 13340                           ;vMeasure.c: 44:     PIE4bits.TMR2IE = 1;
 13341  0066FA  8594               	bsf	148,2,b	;volatile
 13342                           
 13343                           ; BSR set to: 57
 13344                           ;vMeasure.c: 46:     return rawV/54;
 13345  0066FC  0060  F27C  F090   	movff	vMeasureGet@rawV,___lldiv@dividend
 13346  006702  0060  F280  F091   	movff	vMeasureGet@rawV+1,___lldiv@dividend+1
 13347  006708  0060  F284  F092   	movff	vMeasureGet@rawV+2,___lldiv@dividend+2
 13348  00670E  0060  F288  F093   	movff	vMeasureGet@rawV+3,___lldiv@dividend+3
 13349  006714  0E36               	movlw	54
 13350  006716  0100               	movlb	0	; () banked
 13351  006718  6F94               	movwf	___lldiv@divisor& (0+255),b
 13352  00671A  0E00               	movlw	0
 13353  00671C  6F95               	movwf	(___lldiv@divisor+1)& (0+255),b
 13354  00671E  0E00               	movlw	0
 13355  006720  6F96               	movwf	(___lldiv@divisor+2)& (0+255),b
 13356  006722  0E00               	movlw	0
 13357  006724  6F97               	movwf	(___lldiv@divisor+3)& (0+255),b
 13358  006726  ECE4  F02E         	call	___lldiv	;wreg free
 13359  00672A  0060  F240  F09D   	movff	?___lldiv,?_vMeasureGet
 13360  006730  0060  F244  F09E   	movff	?___lldiv+1,?_vMeasureGet+1
 13361                           
 13362                           ; BSR set to: 0
 13363  006736  0012               	return		;funcret
 13364  006738                     __end_of_vMeasureGet:
 13365                           	opt callstack 0
 13366                           
 13367 ;; *************** function ___lldiv *****************
 13368 ;; Defined at:
 13369 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;  dividend        4   48[BANK0 ] unsigned long 
 13372 ;;  divisor         4   52[BANK0 ] unsigned long 
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;  quotient        4   56[BANK0 ] unsigned long 
 13375 ;;  counter         1   60[BANK0 ] unsigned char 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  4   48[BANK0 ] unsigned long 
 13378 ;; Registers used:
 13379 ;;		wreg, status,2, status,0
 13380 ;; Tracked objects:
 13381 ;;		On entry : 3F/0
 13382 ;;		On exit  : 3F/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13385 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13386 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13388 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;Total ram usage:       13 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:   13
 13392 ;; This function calls:
 13393 ;;		Nothing
 13394 ;; This function is called by:
 13395 ;;		_InitProcedure
 13396 ;;		_vMeasureGet
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           	psect	text48
 13401  005DC8                     __ptext48:
 13402                           	opt callstack 0
 13403  005DC8                     ___lldiv:
 13404                           	opt callstack 16
 13405                           
 13406                           ; BSR set to: 0
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;incstack = 0
 13410  005DC8  0E00               	movlw	0
 13411  005DCA  6F98               	movwf	___lldiv@quotient& (0+255),b
 13412  005DCC  0E00               	movlw	0
 13413  005DCE  6F99               	movwf	(___lldiv@quotient+1)& (0+255),b
 13414  005DD0  0E00               	movlw	0
 13415  005DD2  6F9A               	movwf	(___lldiv@quotient+2)& (0+255),b
 13416  005DD4  0E00               	movlw	0
 13417  005DD6  6F9B               	movwf	(___lldiv@quotient+3)& (0+255),b
 13418                           
 13419                           ; BSR set to: 0
 13420  005DD8  5194               	movf	___lldiv@divisor& (0+255),w,b
 13421  005DDA  1195               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13422  005DDC  1196               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13423  005DDE  1197               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13424  005DE0  B4D8               	btfsc	status,2,c
 13425  005DE2  D02A               	goto	l2379
 13426                           
 13427                           ; BSR set to: 0
 13428  005DE4  0E01               	movlw	1
 13429  005DE6  6F9C               	movwf	___lldiv@counter& (0+255),b
 13430  005DE8  D006               	goto	l14277
 13431  005DEA                     l14275:
 13432                           
 13433                           ; BSR set to: 0
 13434  005DEA  90D8               	bcf	status,0,c
 13435  005DEC  3794               	rlcf	___lldiv@divisor& (0+255),f,b
 13436  005DEE  3795               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13437  005DF0  3796               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13438  005DF2  3797               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13439  005DF4  2B9C               	incf	___lldiv@counter& (0+255),f,b
 13440  005DF6                     l14277:
 13441                           
 13442                           ; BSR set to: 0
 13443  005DF6  AF97               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13444  005DF8  D7F8               	goto	l14275
 13445  005DFA                     u13660:
 13446                           
 13447                           ; BSR set to: 0
 13448  005DFA  90D8               	bcf	status,0,c
 13449  005DFC  3798               	rlcf	___lldiv@quotient& (0+255),f,b
 13450  005DFE  3799               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13451  005E00  379A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13452  005E02  379B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13453                           
 13454                           ; BSR set to: 0
 13455  005E04  5194               	movf	___lldiv@divisor& (0+255),w,b
 13456  005E06  5D90               	subwf	___lldiv@dividend& (0+255),w,b
 13457  005E08  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13458  005E0A  5991               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13459  005E0C  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13460  005E0E  5992               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13461  005E10  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13462  005E12  5993               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13463  005E14  A0D8               	btfss	status,0,c
 13464  005E16  D009               	goto	l14287
 13465                           
 13466                           ; BSR set to: 0
 13467  005E18  5194               	movf	___lldiv@divisor& (0+255),w,b
 13468  005E1A  5F90               	subwf	___lldiv@dividend& (0+255),f,b
 13469  005E1C  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13470  005E1E  5B91               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13471  005E20  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13472  005E22  5B92               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13473  005E24  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13474  005E26  5B93               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13475                           
 13476                           ; BSR set to: 0
 13477  005E28  8198               	bsf	___lldiv@quotient& (0+255),0,b
 13478  005E2A                     l14287:
 13479                           
 13480                           ; BSR set to: 0
 13481  005E2A  90D8               	bcf	status,0,c
 13482  005E2C  3397               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13483  005E2E  3396               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13484  005E30  3395               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13485  005E32  3394               	rrcf	___lldiv@divisor& (0+255),f,b
 13486                           
 13487                           ; BSR set to: 0
 13488  005E34  2F9C               	decfsz	___lldiv@counter& (0+255),f,b
 13489  005E36  D7E1               	goto	u13660
 13490  005E38                     l2379:
 13491                           
 13492                           ; BSR set to: 0
 13493  005E38  0060  F260  F090   	movff	___lldiv@quotient,?___lldiv
 13494  005E3E  0060  F264  F091   	movff	___lldiv@quotient+1,?___lldiv+1
 13495  005E44  0060  F268  F092   	movff	___lldiv@quotient+2,?___lldiv+2
 13496  005E4A  0060  F26C  F093   	movff	___lldiv@quotient+3,?___lldiv+3
 13497                           
 13498                           ; BSR set to: 0
 13499  005E50  0012               	return		;funcret
 13500  005E52                     __end_of___lldiv:
 13501                           	opt callstack 0
 13502                           
 13503 ;; *************** function _timeElapsedR *****************
 13504 ;; Defined at:
 13505 ;;		line 28 in file "time.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  prevTime        2   44[BANK0 ] PTR unsigned short 
 13508 ;;		 -> main@printTime(2), main@rSubCycleTime(2), main@rCycleTime(2), InitProcedure@tstamp(2), 
 13509 ;;		 -> monTstamp(2), 
 13510 ;;  duration        2   46[BANK0 ] unsigned short 
 13511 ;; Auto vars:     Size  Location     Type
 13512 ;;  intTime         2   52[BANK0 ] unsigned short 
 13513 ;;  intDur          2   50[BANK0 ] unsigned short 
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  1    wreg      _Bool 
 13516 ;; Registers used:
 13517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13518 ;; Tracked objects:
 13519 ;;		On entry : 3F/0
 13520 ;;		On exit  : 3F/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13523 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13524 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13526 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13527 ;;Total ram usage:       10 bytes
 13528 ;; Hardware stack levels used:    1
 13529 ;; Hardware stack levels required when called:   14
 13530 ;; This function calls:
 13531 ;;		_TMR1_ReadTimer
 13532 ;; This function is called by:
 13533 ;;		_MonitorMsgSend
 13534 ;;		_InitProcedure
 13535 ;;		_main
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text49
 13540  006506                     __ptext49:
 13541                           	opt callstack 0
 13542  006506                     _timeElapsedR:
 13543                           	opt callstack 16
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;time.c: 29:     time_t intTime, intDur;;time.c: 30:     intTime = TMR1_ReadTimer();
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;incstack = 0
 13550  006506  EC6E  F039         	call	_TMR1_ReadTimer	;wreg free
 13551  00650A  0060  F210  F094   	movff	?_TMR1_ReadTimer,timeElapsedR@intTime
 13552  006510  0060  F214  F095   	movff	?_TMR1_ReadTimer+1,timeElapsedR@intTime+1
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;time.c: 31:     intDur = intTime - *prevTime;
 13556  006516  0060  F233  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 13557  00651C  0060  F237  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 13558  006522  006F FF78  F090    	movff	postinc2,??_timeElapsedR
 13559  006528  006F FF74  F091    	movff	postdec2,??_timeElapsedR+1
 13560  00652E  5190               	movf	??_timeElapsedR& (0+255),w,b
 13561  006530  5D94               	subwf	timeElapsedR@intTime& (0+255),w,b
 13562  006532  6F92               	movwf	timeElapsedR@intDur& (0+255),b
 13563  006534  5191               	movf	(??_timeElapsedR+1)& (0+255),w,b
 13564  006536  5995               	subwfb	(timeElapsedR@intTime+1)& (0+255),w,b
 13565  006538  6F93               	movwf	(timeElapsedR@intDur+1)& (0+255),b
 13566                           
 13567                           ; BSR set to: 0
 13568                           ;time.c: 32:     if (intDur < duration) {
 13569  00653A  518E               	movf	timeElapsedR@duration& (0+255),w,b
 13570  00653C  5D92               	subwf	timeElapsedR@intDur& (0+255),w,b
 13571  00653E  518F               	movf	(timeElapsedR@duration+1)& (0+255),w,b
 13572  006540  5993               	subwfb	(timeElapsedR@intDur+1)& (0+255),w,b
 13573  006542  B0D8               	btfsc	status,0,c
 13574  006544  D002               	goto	l14633
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;time.c: 33:         return 0;
 13578  006546  0E00               	movlw	0
 13579  006548  0012               	return	
 13580  00654A                     l14633:
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;time.c: 35:         *prevTime = intTime;
 13584  00654A  0060  F233  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 13585  006550  0060  F237  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 13586  006556  0060  F253  FFDE   	movff	timeElapsedR@intTime,postinc2
 13587  00655C  0060  F257  FFDD   	movff	timeElapsedR@intTime+1,postdec2
 13588                           
 13589                           ; BSR set to: 0
 13590                           ;time.c: 36:         return 1;
 13591  006562  0E01               	movlw	1
 13592                           
 13593                           ; BSR set to: 0
 13594  006564  0012               	return		;funcret
 13595  006566                     __end_of_timeElapsedR:
 13596                           	opt callstack 0
 13597                           
 13598 ;; *************** function _timeDelayMs *****************
 13599 ;; Defined at:
 13600 ;;		line 52 in file "time.c"
 13601 ;; Parameters:    Size  Location     Type
 13602 ;;  delms           2   52[BANK0 ] unsigned short 
 13603 ;; Auto vars:     Size  Location     Type
 13604 ;;  tstamp          2   54[BANK0 ] unsigned short 
 13605 ;; Return value:  Size  Location     Type
 13606 ;;                  1    wreg      void 
 13607 ;; Registers used:
 13608 ;;		wreg, status,2, status,0, cstack
 13609 ;; Tracked objects:
 13610 ;;		On entry : 3F/0
 13611 ;;		On exit  : 3F/0
 13612 ;;		Unchanged: 0/0
 13613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13618 ;;Total ram usage:        4 bytes
 13619 ;; Hardware stack levels used:    1
 13620 ;; Hardware stack levels required when called:   15
 13621 ;; This function calls:
 13622 ;;		_timeElapsed
 13623 ;;		_timeGet
 13624 ;; This function is called by:
 13625 ;;		_InitProcedure
 13626 ;;		_main
 13627 ;;		_LcdI2CInit
 13628 ;;		_clear
 13629 ;;		_home
 13630 ;;		_screenInit
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text50
 13635  006EE2                     __ptext50:
 13636                           	opt callstack 0
 13637  006EE2                     _timeDelayMs:
 13638                           	opt callstack 15
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;time.c: 53:     time_t tstamp;;time.c: 54:     tstamp=timeGet();
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;incstack = 0
 13645  006EE2  ECBD  F03B         	call	_timeGet	;wreg free
 13646  006EE6  0060  F230  F096   	movff	?_timeGet,timeDelayMs@tstamp
 13647  006EEC  0060  F234  F097   	movff	?_timeGet+1,timeDelayMs@tstamp+1
 13648  006EF2                     l13875:
 13649                           
 13650                           ; BSR set to: 0
 13651  006EF2  0060  F258  F08C   	movff	timeDelayMs@tstamp,timeElapsed@prevTime
 13652  006EF8  0060  F25C  F08D   	movff	timeDelayMs@tstamp+1,timeElapsed@prevTime+1
 13653  006EFE  0060  F250  F08E   	movff	timeDelayMs@delms,timeElapsed@duration
 13654  006F04  0060  F254  F08F   	movff	timeDelayMs@delms+1,timeElapsed@duration+1
 13655  006F0A  EC3C  F038         	call	_timeElapsed	;wreg free
 13656  006F0E  0900               	iorlw	0
 13657  006F10  A4D8               	btfss	status,2,c
 13658  006F12  0012               	return	
 13659  006F14  D7EE               	goto	l13875
 13660  006F16                     __end_of_timeDelayMs:
 13661                           	opt callstack 0
 13662                           
 13663 ;; *************** function _timeElapsed *****************
 13664 ;; Defined at:
 13665 ;;		line 41 in file "time.c"
 13666 ;; Parameters:    Size  Location     Type
 13667 ;;  prevTime        2   44[BANK0 ] unsigned short 
 13668 ;;  duration        2   46[BANK0 ] unsigned short 
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;  intDur          2   50[BANK0 ] unsigned short 
 13671 ;;  intTime         2   48[BANK0 ] unsigned short 
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  1    wreg      _Bool 
 13674 ;; Registers used:
 13675 ;;		wreg, status,2, status,0, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : 3F/0
 13678 ;;		On exit  : 3F/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13682 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13685 ;;Total ram usage:        8 bytes
 13686 ;; Hardware stack levels used:    1
 13687 ;; Hardware stack levels required when called:   14
 13688 ;; This function calls:
 13689 ;;		_TMR1_ReadTimer
 13690 ;; This function is called by:
 13691 ;;		_main
 13692 ;;		_timeDelayMs
 13693 ;;		_MenuMng
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text51
 13698  007078                     __ptext51:
 13699                           	opt callstack 0
 13700  007078                     _timeElapsed:
 13701                           	opt callstack 16
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;time.c: 42:     time_t intTime, intDur;;time.c: 43:     intTime = TMR1_ReadTimer();
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;incstack = 0
 13708  007078  EC6E  F039         	call	_TMR1_ReadTimer	;wreg free
 13709  00707C  0060  F210  F090   	movff	?_TMR1_ReadTimer,timeElapsed@intTime
 13710  007082  0060  F214  F091   	movff	?_TMR1_ReadTimer+1,timeElapsed@intTime+1
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;time.c: 44:     intDur = intTime - prevTime;
 13714  007088  518C               	movf	timeElapsed@prevTime& (0+255),w,b
 13715  00708A  5D90               	subwf	timeElapsed@intTime& (0+255),w,b
 13716  00708C  6F92               	movwf	timeElapsed@intDur& (0+255),b
 13717  00708E  518D               	movf	(timeElapsed@prevTime+1)& (0+255),w,b
 13718  007090  5991               	subwfb	(timeElapsed@intTime+1)& (0+255),w,b
 13719  007092  6F93               	movwf	(timeElapsed@intDur+1)& (0+255),b
 13720                           
 13721                           ; BSR set to: 0
 13722                           ;time.c: 45:     if (intDur < duration) {
 13723  007094  518E               	movf	timeElapsed@duration& (0+255),w,b
 13724  007096  5D92               	subwf	timeElapsed@intDur& (0+255),w,b
 13725  007098  518F               	movf	(timeElapsed@duration+1)& (0+255),w,b
 13726  00709A  5993               	subwfb	(timeElapsed@intDur+1)& (0+255),w,b
 13727  00709C  B0D8               	btfsc	status,0,c
 13728  00709E  D002               	goto	l13795
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;time.c: 46:         return 0;
 13732  0070A0  0E00               	movlw	0
 13733  0070A2  0012               	return	
 13734  0070A4                     l13795:
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;time.c: 48:         return 1;
 13738  0070A4  0E01               	movlw	1
 13739                           
 13740                           ; BSR set to: 0
 13741  0070A6  0012               	return		;funcret
 13742  0070A8                     __end_of_timeElapsed:
 13743                           	opt callstack 0
 13744                           
 13745 ;; *************** function _setCursor *****************
 13746 ;; Defined at:
 13747 ;;		line 208 in file "LiquidCrystal_I2C.c"
 13748 ;; Parameters:    Size  Location     Type
 13749 ;;  col             1    wreg     unsigned char 
 13750 ;;  row             1   59[BANK0 ] unsigned char 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;  col             1   68[BANK0 ] unsigned char 
 13753 ;;  row_offsets     8   60[BANK0 ] int [4]
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  1    wreg      void 
 13756 ;; Registers used:
 13757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 13758 ;; Tracked objects:
 13759 ;;		On entry : 3F/0
 13760 ;;		On exit  : 3F/0
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13763 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13764 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13767 ;;Total ram usage:       10 bytes
 13768 ;; Hardware stack levels used:    1
 13769 ;; Hardware stack levels required when called:   23
 13770 ;; This function calls:
 13771 ;;		_command
 13772 ;; This function is called by:
 13773 ;;		_InitProcedure
 13774 ;;		_main
 13775 ;;		_screenInit
 13776 ;;		_screenMng
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780                           	psect	text52
 13781  006D88                     __ptext52:
 13782                           	opt callstack 0
 13783  006D88                     _setCursor:
 13784                           	opt callstack 7
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;incstack = 0
 13788                           ;setCursor@col stored from wreg
 13789  006D88  6FA4               	movwf	setCursor@col& (0+255),b
 13790                           
 13791                           ;LiquidCrystal_I2C.c: 209:  int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 13792  006D8A  EE20  F2CD         	lfsr	2,setCursor@F16765
 13793  006D8E  EE10  F09C         	lfsr	1,setCursor@row_offsets
 13794  006D92  0E07               	movlw	7
 13795  006D94                     u13921:
 13796  006D94  006F FF6F FFE3     	movff	plusw2,plusw1
 13797  006D9A  06E8               	decf	wreg,f,c
 13798  006D9C  E2FB               	bc	u13921
 13799                           
 13800                           ;LiquidCrystal_I2C.c: 210:  if ( row > _numlines ) {
 13801  006D9E  0100               	movlb	0	; () banked
 13802  006DA0  519B               	movf	setCursor@row& (0+255),w,b
 13803  006DA2  5DD2               	subwf	__numlines& (0+255),w,b
 13804  006DA4  B0D8               	btfsc	status,0,c
 13805  006DA6  D002               	goto	l14645
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;LiquidCrystal_I2C.c: 211:   row = _numlines-1;
 13809  006DA8  05D2               	decf	__numlines& (0+255),w,b
 13810  006DAA  6F9B               	movwf	setCursor@row& (0+255),b
 13811  006DAC                     l14645:
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;LiquidCrystal_I2C.c: 213:  command(0x80 | (col + row_offsets[row]));
 13815  006DAC  519B               	movf	setCursor@row& (0+255),w,b
 13816  006DAE  0D02               	mullw	2
 13817  006DB0  50F3               	movf	243,w,c
 13818  006DB2  0F9C               	addlw	low setCursor@row_offsets
 13819  006DB4  6ED9               	movwf	fsr2l,c
 13820  006DB6  6ADA               	clrf	fsr2h,c
 13821  006DB8  50DF               	movf	indf2,w,c
 13822  006DBA  25A4               	addwf	setCursor@col& (0+255),w,b
 13823  006DBC  0980               	iorlw	128
 13824  006DBE  ECD8  F03B         	call	_command
 13825                           
 13826                           ; BSR set to: 0
 13827  006DC2  0012               	return		;funcret
 13828  006DC4                     __end_of_setCursor:
 13829                           	opt callstack 0
 13830                           
 13831 ;; *************** function _command *****************
 13832 ;; Defined at:
 13833 ;;		line 118 in file "LiquidCrystal_I2C.c"
 13834 ;; Parameters:    Size  Location     Type
 13835 ;;  value           1    wreg     unsigned char 
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;  value           1   58[BANK0 ] unsigned char 
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  1    wreg      void 
 13840 ;; Registers used:
 13841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 13842 ;; Tracked objects:
 13843 ;;		On entry : 3F/0
 13844 ;;		On exit  : 3F/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;Total ram usage:        1 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; Hardware stack levels required when called:   22
 13854 ;; This function calls:
 13855 ;;		_send
 13856 ;; This function is called by:
 13857 ;;		_LcdI2CInit
 13858 ;;		_clear
 13859 ;;		_home
 13860 ;;		_setCursor
 13861 ;;		_display
 13862 ;;		_blink
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           	psect	text53
 13867  0077B0                     __ptext53:
 13868                           	opt callstack 0
 13869  0077B0                     _command:
 13870                           	opt callstack 7
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;incstack = 0
 13874                           ;command@value stored from wreg
 13875  0077B0  6F9A               	movwf	command@value& (0+255),b
 13876                           
 13877                           ;LiquidCrystal_I2C.c: 119:  send(value, 0);
 13878  0077B2  0E00               	movlw	0
 13879  0077B4  0100               	movlb	0	; () banked
 13880  0077B6  6F96               	movwf	send@mode& (0+255),b
 13881  0077B8  519A               	movf	command@value& (0+255),w,b
 13882  0077BA  EC31  F03A         	call	_send
 13883                           
 13884                           ; BSR set to: 0
 13885  0077BE  0012               	return		;funcret
 13886  0077C0                     __end_of_command:
 13887                           	opt callstack 0
 13888                           
 13889 ;; *************** function _send *****************
 13890 ;; Defined at:
 13891 ;;		line 66 in file "LiquidCrystal_I2C.c"
 13892 ;; Parameters:    Size  Location     Type
 13893 ;;  value           1    wreg     unsigned char 
 13894 ;;  mode            1   54[BANK0 ] unsigned char 
 13895 ;; Auto vars:     Size  Location     Type
 13896 ;;  value           1   57[BANK0 ] unsigned char 
 13897 ;;  lownib          1   56[BANK0 ] unsigned char 
 13898 ;;  highnib         1   55[BANK0 ] unsigned char 
 13899 ;; Return value:  Size  Location     Type
 13900 ;;                  1    wreg      void 
 13901 ;; Registers used:
 13902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 13903 ;; Tracked objects:
 13904 ;;		On entry : 3F/0
 13905 ;;		On exit  : 3F/0
 13906 ;;		Unchanged: 0/0
 13907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13908 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13909 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13912 ;;Total ram usage:        4 bytes
 13913 ;; Hardware stack levels used:    1
 13914 ;; Hardware stack levels required when called:   21
 13915 ;; This function calls:
 13916 ;;		_write4bits
 13917 ;; This function is called by:
 13918 ;;		_command
 13919 ;; This function uses a non-reentrant model
 13920 ;;
 13921                           
 13922                           	psect	text54
 13923  007462                     __ptext54:
 13924                           	opt callstack 0
 13925  007462                     _send:
 13926                           	opt callstack 7
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;incstack = 0
 13930                           ;send@value stored from wreg
 13931  007462  6F99               	movwf	send@value& (0+255),b
 13932                           
 13933                           ;LiquidCrystal_I2C.c: 67:  uint8_t highnib=value&0xf0;
 13934  007464  0100               	movlb	0	; () banked
 13935  007466  5199               	movf	send@value& (0+255),w,b
 13936  007468  0BF0               	andlw	240
 13937  00746A  6F97               	movwf	send@highnib& (0+255),b
 13938                           
 13939                           ;LiquidCrystal_I2C.c: 68:  uint8_t lownib=(value<<4)&0xf0;
 13940  00746C  3999               	swapf	send@value& (0+255),w,b
 13941  00746E  0BF0               	andlw	240
 13942  007470  0BF0               	andlw	240
 13943  007472  6F98               	movwf	send@lownib& (0+255),b
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;LiquidCrystal_I2C.c: 69:     write4bits((highnib)|mode);
 13947  007474  5197               	movf	send@highnib& (0+255),w,b
 13948  007476  1196               	iorwf	send@mode& (0+255),w,b
 13949  007478  ECF4  F02F         	call	_write4bits
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;LiquidCrystal_I2C.c: 70:  write4bits((lownib)|mode);
 13953  00747C  5198               	movf	send@lownib& (0+255),w,b
 13954  00747E  1196               	iorwf	send@mode& (0+255),w,b
 13955  007480  ECF4  F02F         	call	_write4bits
 13956                           
 13957                           ; BSR set to: 0
 13958  007484  0012               	return		;funcret
 13959  007486                     __end_of_send:
 13960                           	opt callstack 0
 13961                           
 13962 ;; *************** function _write4bits *****************
 13963 ;; Defined at:
 13964 ;;		line 30 in file "LiquidCrystal_I2C.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;  value           1    wreg     unsigned char 
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;  value           1   53[BANK0 ] unsigned char 
 13969 ;;  i2cBuff         2   51[BANK0 ] unsigned char [2]
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      void 
 13972 ;; Registers used:
 13973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 13974 ;; Tracked objects:
 13975 ;;		On entry : 3F/0
 13976 ;;		On exit  : 3F/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;Total ram usage:        3 bytes
 13984 ;; Hardware stack levels used:    1
 13985 ;; Hardware stack levels required when called:   20
 13986 ;; This function calls:
 13987 ;;		_I2C2_LClose
 13988 ;;		_I2C2_LOpen
 13989 ;;		_I2C2_MasterWrite
 13990 ;;		_I2C2_SetBuffer
 13991 ;; This function is called by:
 13992 ;;		_send
 13993 ;;		_LcdI2CInit
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text55
 13998  005FE8                     __ptext55:
 13999                           	opt callstack 0
 14000  005FE8                     _write4bits:
 14001                           	opt callstack 7
 14002                           
 14003                           ; BSR set to: 0
 14004                           ;incstack = 0
 14005                           ;write4bits@value stored from wreg
 14006  005FE8  6F95               	movwf	write4bits@value& (0+255),b
 14007                           
 14008                           ;LiquidCrystal_I2C.c: 31:         uint8_t i2cBuff[2];;LiquidCrystal_I2C.c: 33:         I
      +                          2C2_LOpen();
 14009  005FEA  ECBF  F037         	call	_I2C2_LOpen	;wreg free
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;LiquidCrystal_I2C.c: 34:         i2cBuff[0]=value | _backlightval;
 14013  005FEE  5195               	movf	write4bits@value& (0+255),w,b
 14014  005FF0  11D1               	iorwf	__backlightval& (0+255),w,b
 14015  005FF2  6F93               	movwf	write4bits@i2cBuff& (0+255),b
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;LiquidCrystal_I2C.c: 35:         I2C2_SetBuffer(i2cBuff,1);
 14019  005FF4  0E93               	movlw	low write4bits@i2cBuff
 14020  005FF6  6F84               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 14021  005FF8  6B85               	clrf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 14022  005FFA  0E00               	movlw	0
 14023  005FFC  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 14024  005FFE  0E01               	movlw	1
 14025  006000  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 14026  006002  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 14027                           
 14028                           ; BSR set to: 1
 14029                           ;LiquidCrystal_I2C.c: 36:         I2C2_MasterWrite();
 14030  006006  ECC6  F03C         	call	_I2C2_MasterWrite	;wreg free
 14031  00600A                     l13507:
 14032                           
 14033                           ; BSR set to: 0
 14034  00600A  ECA3  F035         	call	_I2C2_LClose	;wreg free
 14035  00600E  06E8               	decf	wreg,f,c
 14036  006010  B4D8               	btfsc	status,2,c
 14037  006012  D7FB               	goto	l13507
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;LiquidCrystal_I2C.c: 39:         I2C2_LOpen();
 14041  006014  ECBF  F037         	call	_I2C2_LOpen	;wreg free
 14042                           
 14043                           ; BSR set to: 0
 14044                           ;LiquidCrystal_I2C.c: 40:         i2cBuff[0]=value | 0x4 | _backlightval;
 14045  006018  5195               	movf	write4bits@value& (0+255),w,b
 14046  00601A  11D1               	iorwf	__backlightval& (0+255),w,b
 14047  00601C  0904               	iorlw	4
 14048  00601E  6F93               	movwf	write4bits@i2cBuff& (0+255),b
 14049                           
 14050                           ; BSR set to: 0
 14051                           ;LiquidCrystal_I2C.c: 41:         I2C2_SetBuffer(i2cBuff,1);
 14052  006020  0E93               	movlw	low write4bits@i2cBuff
 14053  006022  6F84               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 14054  006024  6B85               	clrf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 14055  006026  0E00               	movlw	0
 14056  006028  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 14057  00602A  0E01               	movlw	1
 14058  00602C  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 14059  00602E  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 14060                           
 14061                           ; BSR set to: 1
 14062                           ;LiquidCrystal_I2C.c: 42:         I2C2_MasterWrite();
 14063  006032  ECC6  F03C         	call	_I2C2_MasterWrite	;wreg free
 14064  006036                     l13517:
 14065                           
 14066                           ; BSR set to: 0
 14067  006036  ECA3  F035         	call	_I2C2_LClose	;wreg free
 14068  00603A  06E8               	decf	wreg,f,c
 14069  00603C  B4D8               	btfsc	status,2,c
 14070  00603E  D7FB               	goto	l13517
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;LiquidCrystal_I2C.c: 45:         I2C2_LOpen();
 14074  006040  ECBF  F037         	call	_I2C2_LOpen	;wreg free
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;LiquidCrystal_I2C.c: 46:         i2cBuff[0]=value | ~0x4 | _backlightval;
 14078  006044  5195               	movf	write4bits@value& (0+255),w,b
 14079  006046  11D1               	iorwf	__backlightval& (0+255),w,b
 14080  006048  09FB               	iorlw	251
 14081  00604A  6F93               	movwf	write4bits@i2cBuff& (0+255),b
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;LiquidCrystal_I2C.c: 47:         I2C2_SetBuffer(i2cBuff,1);
 14085  00604C  0E93               	movlw	low write4bits@i2cBuff
 14086  00604E  6F84               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 14087  006050  6B85               	clrf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 14088  006052  0E00               	movlw	0
 14089  006054  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 14090  006056  0E01               	movlw	1
 14091  006058  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 14092  00605A  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 14093                           
 14094                           ; BSR set to: 1
 14095                           ;LiquidCrystal_I2C.c: 48:         I2C2_MasterWrite();
 14096  00605E  ECC6  F03C         	call	_I2C2_MasterWrite	;wreg free
 14097  006062                     l13527:
 14098                           
 14099                           ; BSR set to: 0
 14100  006062  ECA3  F035         	call	_I2C2_LClose	;wreg free
 14101  006066  06E8               	decf	wreg,f,c
 14102  006068  A4D8               	btfss	status,2,c
 14103  00606A  0012               	return	
 14104  00606C  D7FA               	goto	l13527
 14105  00606E                     __end_of_write4bits:
 14106                           	opt callstack 0
 14107                           
 14108 ;; *************** function _setBacklight *****************
 14109 ;; Defined at:
 14110 ;;		line 303 in file "LiquidCrystal_I2C.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;  new_val         1    wreg     _Bool 
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;  new_val         1   54[BANK0 ] _Bool 
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  1    wreg      void 
 14117 ;; Registers used:
 14118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14119 ;; Tracked objects:
 14120 ;;		On entry : 3E/1
 14121 ;;		On exit  : 3F/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14127 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;Total ram usage:        1 bytes
 14129 ;; Hardware stack levels used:    1
 14130 ;; Hardware stack levels required when called:   22
 14131 ;; This function calls:
 14132 ;;		_backlight
 14133 ;;		_noBacklight
 14134 ;; This function is called by:
 14135 ;;		_InitProcedure
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text56
 14140  007674                     __ptext56:
 14141                           	opt callstack 0
 14142  007674                     _setBacklight:
 14143                           	opt callstack 7
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;incstack = 0
 14147                           ;setBacklight@new_val stored from wreg
 14148  007674  0100               	movlb	0	; () banked
 14149  007676  6F96               	movwf	setBacklight@new_val& (0+255),b
 14150                           
 14151                           ;LiquidCrystal_I2C.c: 304:  if(new_val){
 14152  007678  0100               	movlb	0	; () banked
 14153  00767A  5196               	movf	setBacklight@new_val& (0+255),w,b
 14154  00767C  B4D8               	btfsc	status,2,c
 14155  00767E  D003               	goto	l14671
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;LiquidCrystal_I2C.c: 305:   backlight();
 14159  007680  EC6F  F03C         	call	_backlight	;wreg free
 14160                           
 14161                           ;LiquidCrystal_I2C.c: 306:  }else{
 14162  007684  0012               	return	
 14163  007686                     l14671:
 14164                           
 14165                           ; BSR set to: 0
 14166                           ;LiquidCrystal_I2C.c: 307:   noBacklight();
 14167  007686  EC69  F03C         	call	_noBacklight	;wreg free
 14168                           
 14169                           ; BSR set to: 0
 14170  00768A  0012               	return		;funcret
 14171  00768C                     __end_of_setBacklight:
 14172                           	opt callstack 0
 14173                           
 14174 ;; *************** function _noBacklight *****************
 14175 ;; Defined at:
 14176 ;;		line 289 in file "LiquidCrystal_I2C.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;		None
 14179 ;; Auto vars:     Size  Location     Type
 14180 ;;		None
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  1    wreg      void 
 14183 ;; Registers used:
 14184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14185 ;; Tracked objects:
 14186 ;;		On entry : 3F/0
 14187 ;;		On exit  : 3F/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;Total ram usage:        0 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; Hardware stack levels required when called:   21
 14197 ;; This function calls:
 14198 ;;		_expanderWrite
 14199 ;; This function is called by:
 14200 ;;		_setBacklight
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           	psect	text57
 14205  0078D2                     __ptext57:
 14206                           	opt callstack 0
 14207  0078D2                     _noBacklight:
 14208                           	opt callstack 7
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;LiquidCrystal_I2C.c: 290:  _backlightval=0x00;
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;incstack = 0
 14215  0078D2  0E00               	movlw	0
 14216  0078D4  6FD1               	movwf	__backlightval& (0+255),b
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;LiquidCrystal_I2C.c: 291:  expanderWrite(0);
 14220  0078D6  0E00               	movlw	0
 14221  0078D8  EC54  F038         	call	_expanderWrite
 14222                           
 14223                           ; BSR set to: 0
 14224  0078DC  0012               	return		;funcret
 14225  0078DE                     __end_of_noBacklight:
 14226                           	opt callstack 0
 14227                           
 14228 ;; *************** function _backlight *****************
 14229 ;; Defined at:
 14230 ;;		line 294 in file "LiquidCrystal_I2C.c"
 14231 ;; Parameters:    Size  Location     Type
 14232 ;;		None
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;		None
 14235 ;; Return value:  Size  Location     Type
 14236 ;;                  1    wreg      void 
 14237 ;; Registers used:
 14238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14239 ;; Tracked objects:
 14240 ;;		On entry : 3F/0
 14241 ;;		On exit  : 3F/0
 14242 ;;		Unchanged: 0/0
 14243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14248 ;;Total ram usage:        0 bytes
 14249 ;; Hardware stack levels used:    1
 14250 ;; Hardware stack levels required when called:   21
 14251 ;; This function calls:
 14252 ;;		_expanderWrite
 14253 ;; This function is called by:
 14254 ;;		_setBacklight
 14255 ;; This function uses a non-reentrant model
 14256 ;;
 14257                           
 14258                           	psect	text58
 14259  0078DE                     __ptext58:
 14260                           	opt callstack 0
 14261  0078DE                     _backlight:
 14262                           	opt callstack 7
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;LiquidCrystal_I2C.c: 295:  _backlightval=0x08;
 14266                           
 14267                           ; BSR set to: 0
 14268                           ;incstack = 0
 14269  0078DE  0E08               	movlw	8
 14270  0078E0  6FD1               	movwf	__backlightval& (0+255),b
 14271                           
 14272                           ; BSR set to: 0
 14273                           ;LiquidCrystal_I2C.c: 296:  expanderWrite(0);
 14274  0078E2  0E00               	movlw	0
 14275  0078E4  EC54  F038         	call	_expanderWrite
 14276                           
 14277                           ; BSR set to: 0
 14278  0078E8  0012               	return		;funcret
 14279  0078EA                     __end_of_backlight:
 14280                           	opt callstack 0
 14281                           
 14282 ;; *************** function _expanderWrite *****************
 14283 ;; Defined at:
 14284 ;;		line 21 in file "LiquidCrystal_I2C.c"
 14285 ;; Parameters:    Size  Location     Type
 14286 ;;  data            1    wreg     unsigned char 
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;  data            1   51[BANK0 ] unsigned char 
 14289 ;;  i2cBuff         2   52[BANK0 ] unsigned char [2]
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  1    wreg      void 
 14292 ;; Registers used:
 14293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14294 ;; Tracked objects:
 14295 ;;		On entry : 3F/0
 14296 ;;		On exit  : 3F/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14300 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14302 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14303 ;;Total ram usage:        3 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; Hardware stack levels required when called:   20
 14306 ;; This function calls:
 14307 ;;		_I2C2_LClose
 14308 ;;		_I2C2_LOpen
 14309 ;;		_I2C2_MasterWrite
 14310 ;;		_I2C2_SetBuffer
 14311 ;; This function is called by:
 14312 ;;		_LcdI2CInit
 14313 ;;		_noBacklight
 14314 ;;		_backlight
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318                           	psect	text59
 14319  0070A8                     __ptext59:
 14320                           	opt callstack 0
 14321  0070A8                     _expanderWrite:
 14322                           	opt callstack 8
 14323                           
 14324                           ; BSR set to: 0
 14325                           ;incstack = 0
 14326                           ;expanderWrite@data stored from wreg
 14327  0070A8  6F93               	movwf	expanderWrite@data& (0+255),b
 14328                           
 14329                           ;LiquidCrystal_I2C.c: 22:         uint8_t i2cBuff[2];;LiquidCrystal_I2C.c: 23:         i
      +                          2cBuff[0]=data | _backlightval;
 14330  0070AA  0100               	movlb	0	; () banked
 14331  0070AC  5193               	movf	expanderWrite@data& (0+255),w,b
 14332  0070AE  11D1               	iorwf	__backlightval& (0+255),w,b
 14333  0070B0  6F94               	movwf	expanderWrite@i2cBuff& (0+255),b
 14334                           
 14335                           ; BSR set to: 0
 14336                           ;LiquidCrystal_I2C.c: 24:         I2C2_LOpen();
 14337  0070B2  ECBF  F037         	call	_I2C2_LOpen	;wreg free
 14338                           
 14339                           ; BSR set to: 0
 14340                           ;LiquidCrystal_I2C.c: 25:         I2C2_SetBuffer(i2cBuff,1);
 14341  0070B6  0E94               	movlw	low expanderWrite@i2cBuff
 14342  0070B8  6F84               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 14343  0070BA  6B85               	clrf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 14344  0070BC  0E00               	movlw	0
 14345  0070BE  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 14346  0070C0  0E01               	movlw	1
 14347  0070C2  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 14348  0070C4  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 14349                           
 14350                           ; BSR set to: 1
 14351                           ;LiquidCrystal_I2C.c: 26:         I2C2_MasterWrite();
 14352  0070C8  ECC6  F03C         	call	_I2C2_MasterWrite	;wreg free
 14353  0070CC                     l13893:
 14354                           
 14355                           ; BSR set to: 0
 14356  0070CC  ECA3  F035         	call	_I2C2_LClose	;wreg free
 14357  0070D0  06E8               	decf	wreg,f,c
 14358  0070D2  A4D8               	btfss	status,2,c
 14359  0070D4  0012               	return	
 14360  0070D6  D7FA               	goto	l13893
 14361  0070D8                     __end_of_expanderWrite:
 14362                           	opt callstack 0
 14363                           
 14364 ;; *************** function _printstrblock *****************
 14365 ;; Defined at:
 14366 ;;		line 111 in file "LiquidCrystal_I2C.c"
 14367 ;; Parameters:    Size  Location     Type
 14368 ;;  c               2   55[BANK0 ] PTR const unsigned char 
 14369 ;;		 -> STR_55(16), STR_54(17), STR_32(17), STR_31(17), 
 14370 ;;		 -> STR_30(19), STR_29(17), STR_28(17), STR_26(17), 
 14371 ;;		 -> STR_25(18), STR_22(18), STR_16(17), STR_15(17), 
 14372 ;;		 -> STR_14(17), lcdTopRow(20), STR_12(17), STR_9(17), 
 14373 ;;		 -> STR_8(17), 
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;		None
 14376 ;; Return value:  Size  Location     Type
 14377 ;;                  1    wreg      void 
 14378 ;; Registers used:
 14379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14380 ;; Tracked objects:
 14381 ;;		On entry : 3F/0
 14382 ;;		On exit  : 3F/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14385 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14388 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;Total ram usage:        2 bytes
 14390 ;; Hardware stack levels used:    1
 14391 ;; Hardware stack levels required when called:   21
 14392 ;; This function calls:
 14393 ;;		_PrintStrBusy
 14394 ;;		_printstr
 14395 ;; This function is called by:
 14396 ;;		_InitProcedure
 14397 ;;		_main
 14398 ;;		_screenInit
 14399 ;; This function uses a non-reentrant model
 14400 ;;
 14401                           
 14402                           	psect	text60
 14403  00760A                     __ptext60:
 14404                           	opt callstack 0
 14405  00760A                     _printstrblock:
 14406                           	opt callstack 8
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;LiquidCrystal_I2C.c: 112:     printstr(c);
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;incstack = 0
 14413  00760A  0060  F25C  F093   	movff	printstrblock@c,printstr@c
 14414  007610  0060  F260  F094   	movff	printstrblock@c+1,printstr@c+1
 14415  007616  ECDA  F024         	call	_printstr	;wreg free
 14416  00761A                     l14649:
 14417                           
 14418                           ; BSR set to: 0
 14419  00761A  ECAB  F03B         	call	_PrintStrBusy	;wreg free
 14420  00761E  0900               	iorlw	0
 14421  007620  B4D8               	btfsc	status,2,c
 14422  007622  0012               	return	
 14423  007624  D7FA               	goto	l14649
 14424  007626                     __end_of_printstrblock:
 14425                           	opt callstack 0
 14426                           
 14427 ;; *************** function _printstr *****************
 14428 ;; Defined at:
 14429 ;;		line 87 in file "LiquidCrystal_I2C.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;  c               2   51[BANK0 ] PTR const unsigned char 
 14432 ;;		 -> STR_55(16), STR_54(17), STR_32(17), STR_31(17), 
 14433 ;;		 -> STR_30(19), STR_29(17), STR_28(17), STR_26(17), 
 14434 ;;		 -> STR_25(18), STR_22(18), STR_16(17), STR_15(17), 
 14435 ;;		 -> STR_14(17), lcdTopRow(20), STR_12(17), STR_9(17), 
 14436 ;;		 -> STR_8(17), lcdBtnRow(20), 
 14437 ;; Auto vars:     Size  Location     Type
 14438 ;;  idx             1   54[BANK0 ] unsigned char 
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  1    wreg      void 
 14441 ;; Registers used:
 14442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14443 ;; Tracked objects:
 14444 ;;		On entry : 3F/0
 14445 ;;		On exit  : 3F/0
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14450 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14451 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14452 ;;Total ram usage:        4 bytes
 14453 ;; Hardware stack levels used:    1
 14454 ;; Hardware stack levels required when called:   20
 14455 ;; This function calls:
 14456 ;;		_I2C2_LOpen
 14457 ;;		_I2C2_MasterWrite
 14458 ;;		_I2C2_SetBuffer
 14459 ;; This function is called by:
 14460 ;;		_printstrblock
 14461 ;;		_screenMng
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           	psect	text61
 14466  0049B4                     __ptext61:
 14467                           	opt callstack 0
 14468  0049B4                     _printstr:
 14469                           	opt callstack 9
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;LiquidCrystal_I2C.c: 88:     uint8_t idx;;LiquidCrystal_I2C.c: 91:     idx=0;
 14473                           
 14474                           ; BSR set to: 0
 14475                           ;incstack = 0
 14476  0049B4  0E00               	movlw	0
 14477  0049B6  6F96               	movwf	printstr@idx& (0+255),b
 14478                           
 14479                           ;LiquidCrystal_I2C.c: 92:     while (*c){
 14480  0049B8  D093               	goto	l14239
 14481  0049BA                     l14221:
 14482                           
 14483                           ;LiquidCrystal_I2C.c: 93:         i2cBuff[idx++]=((*c)&0xF0) | 0x1 | 0x4 | _backlightval
      +                          ;
 14484  0049BA  0E00               	movlw	low _i2cBuff
 14485  0049BC  0100               	movlb	0	; () banked
 14486  0049BE  2596               	addwf	printstr@idx& (0+255),w,b
 14487  0049C0  6ED9               	movwf	fsr2l,c
 14488  0049C2  6ADA               	clrf	fsr2h,c
 14489  0049C4  0E03               	movlw	high _i2cBuff
 14490  0049C6  22DA               	addwfc	fsr2h,f,c
 14491  0049C8  0060  F24F  FFF6   	movff	printstr@c,tblptrl
 14492  0049CE  0060  F253  FFF7   	movff	printstr@c+1,tblptrh
 14493  0049D4  0E00               	movlw	low (__mediumconst shr (0+16))
 14494  0049D6  6EF8               	movwf	tblptru,c
 14495  0049D8  0E0F               	movlw	(high __ramtop+-1)
 14496  0049DA  64F7               	cpfsgt	tblptrh,c
 14497  0049DC  D003               	bra	u13567
 14498  0049DE  0008               	tblrd		*
 14499  0049E0  50F5               	movf	tablat,w,c
 14500  0049E2  D007               	bra	u13560
 14501  0049E4                     u13567:
 14502  0049E4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14503  0049EA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14504  0049F0  50EF               	movf	indf0,w,c
 14505  0049F2                     u13560:
 14506  0049F2  0BF0               	andlw	240
 14507  0049F4  0100               	movlb	0	; () banked
 14508  0049F6  11D1               	iorwf	__backlightval& (0+255),w,b
 14509  0049F8  0905               	iorlw	5
 14510  0049FA  6EDF               	movwf	indf2,c
 14511                           
 14512                           ; BSR set to: 0
 14513  0049FC  2B96               	incf	printstr@idx& (0+255),f,b
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;LiquidCrystal_I2C.c: 94:         i2cBuff[idx++]=((*c)&0xF0) | 0x1 | ~0x4 | _backlightva
      +                          l;
 14517  0049FE  0E00               	movlw	low _i2cBuff
 14518  004A00  2596               	addwf	printstr@idx& (0+255),w,b
 14519  004A02  6ED9               	movwf	fsr2l,c
 14520  004A04  6ADA               	clrf	fsr2h,c
 14521  004A06  0E03               	movlw	high _i2cBuff
 14522  004A08  22DA               	addwfc	fsr2h,f,c
 14523  004A0A  0060  F24F  FFF6   	movff	printstr@c,tblptrl
 14524  004A10  0060  F253  FFF7   	movff	printstr@c+1,tblptrh
 14525  004A16  0E00               	movlw	low (__mediumconst shr (0+16))
 14526  004A18  6EF8               	movwf	tblptru,c
 14527  004A1A  0E0F               	movlw	(high __ramtop+-1)
 14528  004A1C  64F7               	cpfsgt	tblptrh,c
 14529  004A1E  D003               	bra	u13577
 14530  004A20  0008               	tblrd		*
 14531  004A22  50F5               	movf	tablat,w,c
 14532  004A24  D007               	bra	u13570
 14533  004A26                     u13577:
 14534  004A26  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14535  004A2C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14536  004A32  50EF               	movf	indf0,w,c
 14537  004A34                     u13570:
 14538  004A34  0BF0               	andlw	240
 14539  004A36  0100               	movlb	0	; () banked
 14540  004A38  11D1               	iorwf	__backlightval& (0+255),w,b
 14541  004A3A  09FB               	iorlw	251
 14542  004A3C  6EDF               	movwf	indf2,c
 14543  004A3E  2B96               	incf	printstr@idx& (0+255),f,b
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;LiquidCrystal_I2C.c: 95:         i2cBuff[idx++]=(((*c)&0x0F)<<4) | 0x1 | 0x4 | _backlig
      +                          htval;
 14547  004A40  0E00               	movlw	low _i2cBuff
 14548  004A42  2596               	addwf	printstr@idx& (0+255),w,b
 14549  004A44  6ED9               	movwf	fsr2l,c
 14550  004A46  6ADA               	clrf	fsr2h,c
 14551  004A48  0E03               	movlw	high _i2cBuff
 14552  004A4A  22DA               	addwfc	fsr2h,f,c
 14553  004A4C  0060  F24F  FFF6   	movff	printstr@c,tblptrl
 14554  004A52  0060  F253  FFF7   	movff	printstr@c+1,tblptrh
 14555  004A58  0E00               	movlw	low (__mediumconst shr (0+16))
 14556  004A5A  6EF8               	movwf	tblptru,c
 14557  004A5C  0E0F               	movlw	(high __ramtop+-1)
 14558  004A5E  64F7               	cpfsgt	tblptrh,c
 14559  004A60  D003               	bra	u13587
 14560  004A62  0008               	tblrd		*
 14561  004A64  50F5               	movf	tablat,w,c
 14562  004A66  D007               	bra	u13580
 14563  004A68                     u13587:
 14564  004A68  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14565  004A6E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14566  004A74  50EF               	movf	indf0,w,c
 14567  004A76                     u13580:
 14568  004A76  0100               	movlb	0	; () banked
 14569  004A78  6F95               	movwf	??_printstr& (0+255),b
 14570  004A7A  0E0F               	movlw	15
 14571  004A7C  1795               	andwf	??_printstr& (0+255),f,b
 14572  004A7E  3995               	swapf	??_printstr& (0+255),w,b
 14573  004A80  0BF0               	andlw	240
 14574  004A82  11D1               	iorwf	__backlightval& (0+255),w,b
 14575  004A84  0905               	iorlw	5
 14576  004A86  6EDF               	movwf	indf2,c
 14577                           
 14578                           ; BSR set to: 0
 14579  004A88  2B96               	incf	printstr@idx& (0+255),f,b
 14580                           
 14581                           ;LiquidCrystal_I2C.c: 96:         i2cBuff[idx++]=(((*c)&0x0F)<<4) | 0x1 | ~0x4 | _backli
      +                          ghtval;
 14582  004A8A  0E00               	movlw	low _i2cBuff
 14583  004A8C  2596               	addwf	printstr@idx& (0+255),w,b
 14584  004A8E  6ED9               	movwf	fsr2l,c
 14585  004A90  6ADA               	clrf	fsr2h,c
 14586  004A92  0E03               	movlw	high _i2cBuff
 14587  004A94  22DA               	addwfc	fsr2h,f,c
 14588  004A96  0060  F24F  FFF6   	movff	printstr@c,tblptrl
 14589  004A9C  0060  F253  FFF7   	movff	printstr@c+1,tblptrh
 14590  004AA2  0E00               	movlw	low (__mediumconst shr (0+16))
 14591  004AA4  6EF8               	movwf	tblptru,c
 14592  004AA6  0E0F               	movlw	(high __ramtop+-1)
 14593  004AA8  64F7               	cpfsgt	tblptrh,c
 14594  004AAA  D003               	bra	u13597
 14595  004AAC  0008               	tblrd		*
 14596  004AAE  50F5               	movf	tablat,w,c
 14597  004AB0  D007               	bra	u13590
 14598  004AB2                     u13597:
 14599  004AB2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14600  004AB8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14601  004ABE  50EF               	movf	indf0,w,c
 14602  004AC0                     u13590:
 14603  004AC0  0100               	movlb	0	; () banked
 14604  004AC2  6F95               	movwf	??_printstr& (0+255),b
 14605  004AC4  0E0F               	movlw	15
 14606  004AC6  1795               	andwf	??_printstr& (0+255),f,b
 14607  004AC8  3995               	swapf	??_printstr& (0+255),w,b
 14608  004ACA  0BF0               	andlw	240
 14609  004ACC  11D1               	iorwf	__backlightval& (0+255),w,b
 14610  004ACE  09FB               	iorlw	251
 14611  004AD0  6EDF               	movwf	indf2,c
 14612                           
 14613                           ; BSR set to: 0
 14614  004AD2  2B96               	incf	printstr@idx& (0+255),f,b
 14615                           
 14616                           ; BSR set to: 0
 14617                           ;LiquidCrystal_I2C.c: 97:         c++;
 14618  004AD4  4B93               	infsnz	printstr@c& (0+255),f,b
 14619  004AD6  2B94               	incf	(printstr@c+1)& (0+255),f,b
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;LiquidCrystal_I2C.c: 98:         if (idx >=80) {
 14623  004AD8  0E4F               	movlw	79
 14624  004ADA  6596               	cpfsgt	printstr@idx& (0+255),b
 14625  004ADC  D001               	goto	l14239
 14626  004ADE  D018               	goto	u13620
 14627  004AE0                     l14239:
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;LiquidCrystal_I2C.c: 92:     while (*c){
 14631  004AE0  0060  F24F  FFF6   	movff	printstr@c,tblptrl
 14632  004AE6  0060  F253  FFF7   	movff	printstr@c+1,tblptrh
 14633  004AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 14634  004AEE  6EF8               	movwf	tblptru,c
 14635  004AF0  0E0F               	movlw	(high __ramtop+-1)
 14636  004AF2  64F7               	cpfsgt	tblptrh,c
 14637  004AF4  D003               	bra	u13617
 14638  004AF6  0008               	tblrd		*
 14639  004AF8  50F5               	movf	tablat,w,c
 14640  004AFA  D007               	bra	u13610
 14641  004AFC                     u13617:
 14642  004AFC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14643  004B02  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14644  004B08  50EF               	movf	indf0,w,c
 14645  004B0A                     u13610:
 14646  004B0A  0900               	iorlw	0
 14647  004B0C  A4D8               	btfss	status,2,c
 14648  004B0E  D755               	goto	l14221
 14649  004B10                     u13620:
 14650                           
 14651                           ;LiquidCrystal_I2C.c: 102:     I2C2_LOpen();
 14652  004B10  ECBF  F037         	call	_I2C2_LOpen	;wreg free
 14653                           
 14654                           ;LiquidCrystal_I2C.c: 103:     I2C2_SetBuffer(i2cBuff,idx);
 14655  004B14  0E00               	movlw	low _i2cBuff
 14656  004B16  6F84               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 14657  004B18  0E03               	movlw	high _i2cBuff
 14658  004B1A  6F85               	movwf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 14659  004B1C  0060  F258  F086   	movff	printstr@idx,I2C2_SetBuffer@bufferSize
 14660  004B22  6B87               	clrf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 14661  004B24  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 14662                           
 14663                           ; BSR set to: 1
 14664                           ;LiquidCrystal_I2C.c: 104:     I2C2_MasterWrite();
 14665  004B28  ECC6  F03C         	call	_I2C2_MasterWrite	;wreg free
 14666                           
 14667                           ; BSR set to: 0
 14668  004B2C  0012               	return		;funcret
 14669  004B2E                     __end_of_printstr:
 14670                           	opt callstack 0
 14671                           
 14672 ;; *************** function _I2C2_MasterWrite *****************
 14673 ;; Defined at:
 14674 ;;		line 282 in file "mcc_generated_files/i2c2_master.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;		None
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;		None
 14679 ;; Return value:  Size  Location     Type
 14680 ;;                  1    wreg      enum E353
 14681 ;; Registers used:
 14682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14683 ;; Tracked objects:
 14684 ;;		On entry : 3F/1
 14685 ;;		On exit  : 3F/0
 14686 ;;		Unchanged: 0/0
 14687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14692 ;;Total ram usage:        0 bytes
 14693 ;; Hardware stack levels used:    1
 14694 ;; Hardware stack levels required when called:   19
 14695 ;; This function calls:
 14696 ;;		_I2C2_MasterOperation
 14697 ;; This function is called by:
 14698 ;;		_expanderWrite
 14699 ;;		_write4bits
 14700 ;;		_printstr
 14701 ;; This function uses a non-reentrant model
 14702 ;;
 14703                           
 14704                           	psect	text62
 14705  00798C                     __ptext62:
 14706                           	opt callstack 0
 14707  00798C                     _I2C2_MasterWrite:
 14708                           	opt callstack 7
 14709                           
 14710                           ; BSR set to: 1
 14711                           ;mcc_generated_files/i2c2_master.c: 284:     return I2C2_MasterOperation(0);;	Return val
      +                          ue of _I2C2_MasterWrite is never used
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;incstack = 0
 14715  00798C  0E00               	movlw	0
 14716  00798E  EC5F  F035         	call	_I2C2_MasterOperation
 14717                           
 14718                           ; BSR set to: 0
 14719  007992  0012               	return		;funcret
 14720  007994                     __end_of_I2C2_MasterWrite:
 14721                           	opt callstack 0
 14722                           
 14723 ;; *************** function _I2C2_LOpen *****************
 14724 ;; Defined at:
 14725 ;;		line 47 in file "i2c2_mux.c"
 14726 ;; Parameters:    Size  Location     Type
 14727 ;;		None
 14728 ;; Auto vars:     Size  Location     Type
 14729 ;;  trfRsp          1   40[BANK0 ] enum E16385
 14730 ;; Return value:  Size  Location     Type
 14731 ;;                  1    wreg      enum E16385
 14732 ;; Registers used:
 14733 ;;		wreg, status,2, status,0, cstack
 14734 ;; Tracked objects:
 14735 ;;		On entry : 0/0
 14736 ;;		On exit  : 3F/0
 14737 ;;		Unchanged: 0/0
 14738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14742 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14743 ;;Total ram usage:        1 bytes
 14744 ;; Hardware stack levels used:    1
 14745 ;; Hardware stack levels required when called:   15
 14746 ;; This function calls:
 14747 ;;		_I2C2_Open
 14748 ;; This function is called by:
 14749 ;;		_expanderWrite
 14750 ;;		_write4bits
 14751 ;;		_printstr
 14752 ;; This function uses a non-reentrant model
 14753 ;;
 14754                           
 14755                           	psect	text63
 14756  006F7E                     __ptext63:
 14757                           	opt callstack 0
 14758  006F7E                     _I2C2_LOpen:
 14759                           	opt callstack 11
 14760                           
 14761                           ;i2c2_mux.c: 48:     i2c2_error_t trfRsp;;i2c2_mux.c: 50:     trfRsp = I2C2_Open(0x27);
 14762                           
 14763                           ; BSR set to: 0
 14764                           ;incstack = 0
 14765  006F7E  0E27               	movlw	39
 14766  006F80  EC69  F02D         	call	_I2C2_Open
 14767  006F84  6F88               	movwf	I2C2_LOpen@trfRsp& (0+255),b
 14768                           
 14769                           ; BSR set to: 0
 14770                           ;i2c2_mux.c: 51:     if (trfRsp != I2C2_BUSY) {
 14771  006F86  0588               	decf	I2C2_LOpen@trfRsp& (0+255),w,b
 14772  006F88  B4D8               	btfsc	status,2,c
 14773  006F8A  0012               	return	
 14774                           
 14775                           ; BSR set to: 0
 14776                           ;i2c2_mux.c: 52:         lastI2C2LAckResponse = 1;
 14777  006F8C  0E01               	movlw	1
 14778  006F8E  0101               	movlb	1	; () banked
 14779  006F90  6F43               	movwf	_lastI2C2LAckResponse& (0+255),b
 14780                           
 14781                           ; BSR set to: 1
 14782                           ;i2c2_mux.c: 54:         if (currentTrfAddr == 0x50){
 14783  006F92  0E50               	movlw	80
 14784  006F94  0100               	movlb	0	; () banked
 14785  006F96  19CF               	xorwf	_currentTrfAddr& (0+255),w,b
 14786  006F98  A4D8               	btfss	status,2,c
 14787  006F9A  D004               	goto	l2236
 14788                           
 14789                           ; BSR set to: 0
 14790                           ;i2c2_mux.c: 55:             lastI2C2MTrfResponse = trfRsp;
 14791  006F9C  0060  F220  F0CE   	movff	I2C2_LOpen@trfRsp,_lastI2C2MTrfResponse
 14792                           
 14793                           ;i2c2_mux.c: 56:         } else {
 14794  006FA2  D003               	goto	l13257
 14795  006FA4                     l2236:
 14796                           
 14797                           ; BSR set to: 0
 14798                           ;i2c2_mux.c: 57:             lastI2C2LTrfResponse = trfRsp;
 14799  006FA4  0060  F220  F0CD   	movff	I2C2_LOpen@trfRsp,_lastI2C2LTrfResponse
 14800  006FAA                     l13257:
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;i2c2_mux.c: 59:         currentTrfAddr = 0x27;
 14804  006FAA  0E27               	movlw	39
 14805  006FAC  6FCF               	movwf	_currentTrfAddr& (0+255),b
 14806                           
 14807                           ; BSR set to: 0
 14808  006FAE  0012               	return		;funcret
 14809  006FB0                     __end_of_I2C2_LOpen:
 14810                           	opt callstack 0
 14811                           
 14812 ;; *************** function _PrintStrBusy *****************
 14813 ;; Defined at:
 14814 ;;		line 107 in file "LiquidCrystal_I2C.c"
 14815 ;; Parameters:    Size  Location     Type
 14816 ;;		None
 14817 ;; Auto vars:     Size  Location     Type
 14818 ;;		None
 14819 ;; Return value:  Size  Location     Type
 14820 ;;                  1    wreg      _Bool 
 14821 ;; Registers used:
 14822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14823 ;; Tracked objects:
 14824 ;;		On entry : 3E/1
 14825 ;;		On exit  : 3F/0
 14826 ;;		Unchanged: 0/0
 14827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14832 ;;Total ram usage:        0 bytes
 14833 ;; Hardware stack levels used:    1
 14834 ;; Hardware stack levels required when called:   16
 14835 ;; This function calls:
 14836 ;;		_I2C2_LClose
 14837 ;; This function is called by:
 14838 ;;		_printstrblock
 14839 ;;		_screenMng
 14840 ;; This function uses a non-reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text64
 14844  007756                     __ptext64:
 14845                           	opt callstack 0
 14846  007756                     _PrintStrBusy:
 14847                           	opt callstack 13
 14848                           
 14849                           ;LiquidCrystal_I2C.c: 108:     return (I2C2_BUSY == I2C2_LClose());
 14850                           
 14851                           ; BSR set to: 0
 14852                           ;incstack = 0
 14853  007756  ECA3  F035         	call	_I2C2_LClose	;wreg free
 14854  00775A  06E8               	decf	wreg,f,c
 14855  00775C  A4D8               	btfss	status,2,c
 14856  00775E  D002               	goto	u13630
 14857  007760  0E01               	movlw	1
 14858  007762  0012               	return	
 14859  007764                     u13630:
 14860  007764  0E00               	movlw	0
 14861                           
 14862                           ; BSR set to: 0
 14863  007766  0012               	return		;funcret
 14864  007768                     __end_of_PrintStrBusy:
 14865                           	opt callstack 0
 14866                           
 14867 ;; *************** function _I2C2_LClose *****************
 14868 ;; Defined at:
 14869 ;;		line 85 in file "i2c2_mux.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;		None
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;  trfRsp          1   37[BANK0 ] enum E16385
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  1    wreg      enum E16385
 14876 ;; Registers used:
 14877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 3F/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14886 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14887 ;;Total ram usage:        1 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; Hardware stack levels required when called:   15
 14890 ;; This function calls:
 14891 ;;		_I2C2_Close
 14892 ;;		_I2C2_MasterIsNackFlagSet
 14893 ;; This function is called by:
 14894 ;;		_expanderWrite
 14895 ;;		_write4bits
 14896 ;;		_PrintStrBusy
 14897 ;; This function uses a non-reentrant model
 14898 ;;
 14899                           
 14900                           	psect	text65
 14901  006B46                     __ptext65:
 14902                           	opt callstack 0
 14903  006B46                     _I2C2_LClose:
 14904                           	opt callstack 11
 14905                           
 14906                           ;i2c2_mux.c: 86:     i2c2_error_t trfRsp;;i2c2_mux.c: 88:     trfRsp = I2C2_Close();
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;incstack = 0
 14910  006B46  ECAE  F039         	call	_I2C2_Close	;wreg free
 14911  006B4A  6F85               	movwf	I2C2_LClose@trfRsp& (0+255),b
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;i2c2_mux.c: 89:     if (trfRsp != I2C2_BUSY) {
 14915  006B4C  0585               	decf	I2C2_LClose@trfRsp& (0+255),w,b
 14916  006B4E  B4D8               	btfsc	status,2,c
 14917  006B50  D019               	goto	l13279
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;i2c2_mux.c: 91:         if (currentTrfAddr == 0x50){
 14921  006B52  0E50               	movlw	80
 14922  006B54  19CF               	xorwf	_currentTrfAddr& (0+255),w,b
 14923  006B56  A4D8               	btfss	status,2,c
 14924  006B58  D009               	goto	l13271
 14925                           
 14926                           ; BSR set to: 0
 14927                           ;i2c2_mux.c: 92:             lastI2C2MAckResponse = I2C2_MasterIsNackFlagSet();
 14928  006B5A  EC93  F03C         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 14929  006B5E  0100               	movlb	0	; () banked
 14930  006B60  5160               	movf	?i2c2_mux@I2C2_MasterIsNackFlagSet& (0+255),w,b
 14931  006B62  6FCC               	movwf	_lastI2C2MAckResponse& (0+255),b
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;i2c2_mux.c: 93:             lastI2C2MTrfResponse = trfRsp;
 14935  006B64  0060  F214  F0CE   	movff	I2C2_LClose@trfRsp,_lastI2C2MTrfResponse
 14936                           
 14937                           ;i2c2_mux.c: 94:         } else {
 14938  006B6A  D009               	goto	l13275
 14939  006B6C                     l13271:
 14940                           
 14941                           ; BSR set to: 0
 14942                           ;i2c2_mux.c: 95:             lastI2C2LAckResponse = I2C2_MasterIsNackFlagSet();
 14943  006B6C  EC93  F03C         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 14944  006B70  0100               	movlb	0	; () banked
 14945  006B72  5160               	movf	?i2c2_mux@I2C2_MasterIsNackFlagSet& (0+255),w,b
 14946  006B74  0101               	movlb	1	; () banked
 14947  006B76  6F43               	movwf	_lastI2C2LAckResponse& (0+255),b
 14948                           
 14949                           ; BSR set to: 1
 14950                           ;i2c2_mux.c: 96:             lastI2C2LTrfResponse = trfRsp;
 14951  006B78  0060  F214  F0CD   	movff	I2C2_LClose@trfRsp,_lastI2C2LTrfResponse
 14952  006B7E                     l13275:
 14953                           
 14954                           ;i2c2_mux.c: 99:         return lastI2C2LTrfResponse;
 14955  006B7E  0100               	movlb	0	; () banked
 14956  006B80  51CD               	movf	_lastI2C2LTrfResponse& (0+255),w,b
 14957  006B82  0012               	return	
 14958  006B84                     l13279:
 14959                           
 14960                           ; BSR set to: 0
 14961                           ;i2c2_mux.c: 101:     return I2C2_BUSY;
 14962  006B84  0E01               	movlw	1
 14963                           
 14964                           ; BSR set to: 0
 14965  006B86  0012               	return		;funcret
 14966  006B88                     __end_of_I2C2_LClose:
 14967                           	opt callstack 0
 14968                           
 14969 ;; *************** function _keyReadInit *****************
 14970 ;; Defined at:
 14971 ;;		line 29 in file "keyRead.c"
 14972 ;; Parameters:    Size  Location     Type
 14973 ;;		None
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;		None
 14976 ;; Return value:  Size  Location     Type
 14977 ;;                  1    wreg      void 
 14978 ;; Registers used:
 14979 ;;		wreg, status,2
 14980 ;; Tracked objects:
 14981 ;;		On entry : 3E/1
 14982 ;;		On exit  : 3F/0
 14983 ;;		Unchanged: 0/0
 14984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14989 ;;Total ram usage:        0 bytes
 14990 ;; Hardware stack levels used:    1
 14991 ;; Hardware stack levels required when called:   13
 14992 ;; This function calls:
 14993 ;;		Nothing
 14994 ;; This function is called by:
 14995 ;;		_InitProcedure
 14996 ;;		_main
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           
 15000                           	psect	text66
 15001  007768                     __ptext66:
 15002                           	opt callstack 0
 15003  007768                     _keyReadInit:
 15004                           	opt callstack 17
 15005                           
 15006                           ;keyRead.c: 30:     pressMills = 0;
 15007                           
 15008                           ; BSR set to: 0
 15009                           ;incstack = 0
 15010  007768  0E00               	movlw	0
 15011  00776A  0101               	movlb	1	; () banked
 15012  00776C  6F2E               	movwf	(_pressMills+1)& (0+255),b
 15013  00776E  0E00               	movlw	0
 15014  007770  6F2D               	movwf	_pressMills& (0+255),b
 15015                           
 15016                           ; BSR set to: 1
 15017                           ;keyRead.c: 31:     lastkey = -1;
 15018  007772  0100               	movlb	0	; () banked
 15019  007774  69D7               	setf	_lastkey& (0+255),b
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;keyRead.c: 32:     lastkeyEC = -1;
 15023  007776  69D6               	setf	_lastkeyEC& (0+255),b
 15024                           
 15025                           ; BSR set to: 0
 15026  007778  0012               	return		;funcret
 15027  00777A                     __end_of_keyReadInit:
 15028                           	opt callstack 0
 15029                           
 15030 ;; *************** function _keyReadEC *****************
 15031 ;; Defined at:
 15032 ;;		line 51 in file "keyRead.c"
 15033 ;; Parameters:    Size  Location     Type
 15034 ;;		None
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;  longPress       1   52[BANK0 ] _Bool 
 15037 ;;  ch              1   54[BANK0 ] char 
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      char 
 15040 ;; Registers used:
 15041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 3E/1
 15044 ;;		On exit  : 3F/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15048 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;Total ram usage:        3 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:   15
 15054 ;; This function calls:
 15055 ;;		_keyPeek
 15056 ;;		_timeDiff
 15057 ;;		_timeGet
 15058 ;; This function is called by:
 15059 ;;		_InitProcedure
 15060 ;;		_main
 15061 ;; This function uses a non-reentrant model
 15062 ;;
 15063                           
 15064                           	psect	text67
 15065  005EDA                     __ptext67:
 15066                           	opt callstack 0
 15067  005EDA                     _keyReadEC:
 15068                           	opt callstack 15
 15069                           
 15070                           ;keyRead.c: 52:     int8_t ch = keyPeek();
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;incstack = 0
 15074  005EDA  ECB3  F032         	call	_keyPeek	;wreg free
 15075  005EDE  6F96               	movwf	keyReadEC@ch& (0+255),b
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;keyRead.c: 53:     if (lastkeyEC == -1) {
 15079  005EE0  29D6               	incf	_lastkeyEC& (0+255),w,b
 15080  005EE2  A4D8               	btfss	status,2,c
 15081  005EE4  D00C               	goto	l14681
 15082                           
 15083                           ; BSR set to: 0
 15084                           ;keyRead.c: 54:         lastkeyEC = ch;
 15085  005EE6  0060  F258  F0D6   	movff	keyReadEC@ch,_lastkeyEC
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;keyRead.c: 55:         pressMills = timeGet();
 15089  005EEC  ECBD  F03B         	call	_timeGet	;wreg free
 15090  005EF0  0060  F230  F12D   	movff	?_timeGet,_pressMills
 15091  005EF6  0060  F234  F12E   	movff	?_timeGet+1,_pressMills+1
 15092                           
 15093                           ;keyRead.c: 56:     } else if ((ch != -1) && (ch == lastkeyEC)) {
 15094  005EFC  D030               	goto	l14699
 15095  005EFE                     l14681:
 15096                           
 15097                           ; BSR set to: 0
 15098  005EFE  2996               	incf	keyReadEC@ch& (0+255),w,b
 15099  005F00  B4D8               	btfsc	status,2,c
 15100  005F02  D02A               	goto	l14695
 15101                           
 15102                           ; BSR set to: 0
 15103  005F04  51D6               	movf	_lastkeyEC& (0+255),w,b
 15104  005F06  1996               	xorwf	keyReadEC@ch& (0+255),w,b
 15105  005F08  A4D8               	btfss	status,2,c
 15106  005F0A  D026               	goto	l14695
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;keyRead.c: 57:         _Bool longPress = 2000 && (timeDiff(pressMills,timeGet())>2000);
 15110  005F0C  0E00               	movlw	0
 15111  005F0E  6F95               	movwf	_keyReadEC$3358& (0+255),b
 15112                           
 15113                           ; BSR set to: 0
 15114  005F10  0060  F4B4  F08E   	movff	_pressMills,timeDiff@startT
 15115  005F16  0060  F4B8  F08F   	movff	_pressMills+1,timeDiff@startT+1
 15116  005F1C  ECBD  F03B         	call	_timeGet	;wreg free
 15117  005F20  0060  F230  F090   	movff	?_timeGet,timeDiff@endT
 15118  005F26  0060  F234  F091   	movff	?_timeGet+1,timeDiff@endT+1
 15119  005F2C  ECD8  F037         	call	_timeDiff	;wreg free
 15120  005F30  0ED1               	movlw	209
 15121  005F32  5D8E               	subwf	?_timeDiff& (0+255),w,b
 15122  005F34  0E07               	movlw	7
 15123  005F36  598F               	subwfb	(?_timeDiff+1)& (0+255),w,b
 15124  005F38  A0D8               	btfss	status,0,c
 15125  005F3A  D002               	goto	l1786
 15126                           
 15127                           ; BSR set to: 0
 15128  005F3C  0E01               	movlw	1
 15129  005F3E  6F95               	movwf	_keyReadEC$3358& (0+255),b
 15130  005F40                     l1786:
 15131                           
 15132                           ; BSR set to: 0
 15133  005F40  5195               	movf	_keyReadEC$3358& (0+255),w,b
 15134  005F42  B4D8               	btfsc	status,2,c
 15135  005F44  D002               	goto	u14020
 15136  005F46  0E01               	movlw	1
 15137  005F48  D001               	goto	u14030
 15138  005F4A                     u14020:
 15139  005F4A  0E00               	movlw	0
 15140  005F4C                     u14030:
 15141  005F4C  6F94               	movwf	keyReadEC@longPress& (0+255),b
 15142                           
 15143                           ;keyRead.c: 58:         if (longPress) {
 15144  005F4E  5194               	movf	keyReadEC@longPress& (0+255),w,b
 15145  005F50  B4D8               	btfsc	status,2,c
 15146  005F52  D005               	goto	l14699
 15147                           
 15148                           ; BSR set to: 0
 15149                           ;keyRead.c: 59:             return -100;
 15150  005F54  0E9C               	movlw	156
 15151  005F56  0012               	return	
 15152  005F58                     l14695:
 15153                           
 15154                           ; BSR set to: 0
 15155  005F58  2996               	incf	keyReadEC@ch& (0+255),w,b
 15156  005F5A  B4D8               	btfsc	status,2,c
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;keyRead.c: 62:         lastkeyEC = -1;
 15160  005F5C  69D6               	setf	_lastkeyEC& (0+255),b
 15161  005F5E                     l14699:
 15162                           
 15163                           ; BSR set to: 0
 15164                           ;keyRead.c: 64:     return -1;
 15165  005F5E  0EFF               	movlw	255
 15166                           
 15167                           ; BSR set to: 0
 15168  005F60  0012               	return		;funcret
 15169  005F62                     __end_of_keyReadEC:
 15170                           	opt callstack 0
 15171                           
 15172 ;; *************** function _timeGet *****************
 15173 ;; Defined at:
 15174 ;;		line 11 in file "time.c"
 15175 ;; Parameters:    Size  Location     Type
 15176 ;;		None
 15177 ;; Auto vars:     Size  Location     Type
 15178 ;;		None
 15179 ;; Return value:  Size  Location     Type
 15180 ;;                  2   44[BANK0 ] unsigned short 
 15181 ;; Registers used:
 15182 ;;		wreg, status,2, cstack
 15183 ;; Tracked objects:
 15184 ;;		On entry : 0/0
 15185 ;;		On exit  : 3F/0
 15186 ;;		Unchanged: 0/0
 15187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15192 ;;Total ram usage:        2 bytes
 15193 ;; Hardware stack levels used:    1
 15194 ;; Hardware stack levels required when called:   14
 15195 ;; This function calls:
 15196 ;;		_TMR1_ReadTimer
 15197 ;; This function is called by:
 15198 ;;		_InitProcedure
 15199 ;;		_main
 15200 ;;		_timeDelayMs
 15201 ;;		_keyReadEC
 15202 ;;		_MenuMng
 15203 ;; This function uses a non-reentrant model
 15204 ;;
 15205                           
 15206                           	psect	text68
 15207  00777A                     __ptext68:
 15208                           	opt callstack 0
 15209  00777A                     _timeGet:
 15210                           	opt callstack 16
 15211                           
 15212                           ;time.c: 12:     return TMR1_ReadTimer();
 15213                           
 15214                           ; BSR set to: 0
 15215                           ;incstack = 0
 15216  00777A  EC6E  F039         	call	_TMR1_ReadTimer	;wreg free
 15217  00777E  0060  F210  F08C   	movff	?_TMR1_ReadTimer,?_timeGet
 15218  007784  0060  F214  F08D   	movff	?_TMR1_ReadTimer+1,?_timeGet+1
 15219                           
 15220                           ; BSR set to: 0
 15221  00778A  0012               	return		;funcret
 15222  00778C                     __end_of_timeGet:
 15223                           	opt callstack 0
 15224                           
 15225 ;; *************** function _TMR1_ReadTimer *****************
 15226 ;; Defined at:
 15227 ;;		line 104 in file "mcc_generated_files/tmr1.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;		None
 15230 ;; Auto vars:     Size  Location     Type
 15231 ;;  readVal         2   40[BANK0 ] unsigned short 
 15232 ;;  readValLow      1   43[BANK0 ] unsigned char 
 15233 ;;  readValHigh     1   42[BANK0 ] unsigned char 
 15234 ;; Return value:  Size  Location     Type
 15235 ;;                  2   36[BANK0 ] unsigned short 
 15236 ;; Registers used:
 15237 ;;		wreg, status,2
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 3F/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15244 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15246 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15247 ;;Total ram usage:        8 bytes
 15248 ;; Hardware stack levels used:    1
 15249 ;; Hardware stack levels required when called:   13
 15250 ;; This function calls:
 15251 ;;		Nothing
 15252 ;; This function is called by:
 15253 ;;		_timeGet
 15254 ;;		_timeElapsedR
 15255 ;;		_timeElapsed
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text69
 15260  0072DC                     __ptext69:
 15261                           	opt callstack 0
 15262  0072DC                     _TMR1_ReadTimer:
 15263                           	opt callstack 16
 15264                           
 15265                           ;mcc_generated_files/tmr1.c: 106:     uint16_t readVal;;mcc_generated_files/tmr1.c: 107:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 108:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 110:     T1CONbits.T1RD16 = 1;
 15266                           
 15267                           ; BSR set to: 0
 15268                           ;incstack = 0
 15269  0072DC  82B2               	bsf	178,1,c	;volatile
 15270                           
 15271                           ;mcc_generated_files/tmr1.c: 112:     readValLow = TMR1L;
 15272  0072DE  006F FEC0  F08B    	movff	16304,TMR1_ReadTimer@readValLow	;volatile
 15273                           
 15274                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
 15275  0072E4  006F FEC4  F08A    	movff	16305,TMR1_ReadTimer@readValHigh	;volatile
 15276                           
 15277                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 15278  0072EA  0100               	movlb	0	; () banked
 15279  0072EC  518A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 15280  0072EE  6F86               	movwf	??_TMR1_ReadTimer& (0+255),b
 15281  0072F0  518B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 15282  0072F2  6F88               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 15283  0072F4  0060  F218  F089   	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
 15287  0072FA  0060  F220  F084   	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 15288  007300  0060  F224  F085   	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 15289                           
 15290                           ; BSR set to: 0
 15291  007306  0012               	return		;funcret
 15292  007308                     __end_of_TMR1_ReadTimer:
 15293                           	opt callstack 0
 15294                           
 15295 ;; *************** function _timeDiff *****************
 15296 ;; Defined at:
 15297 ;;		line 16 in file "time.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;  startT          2   46[BANK0 ] unsigned short 
 15300 ;;  endT            2   48[BANK0 ] unsigned short 
 15301 ;; Auto vars:     Size  Location     Type
 15302 ;;  intDur          2   50[BANK0 ] unsigned short 
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  2   46[BANK0 ] unsigned short 
 15305 ;; Registers used:
 15306 ;;		wreg, status,2, status,0
 15307 ;; Tracked objects:
 15308 ;;		On entry : 3E/0
 15309 ;;		On exit  : 3F/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15313 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15316 ;;Total ram usage:        6 bytes
 15317 ;; Hardware stack levels used:    1
 15318 ;; Hardware stack levels required when called:   13
 15319 ;; This function calls:
 15320 ;;		Nothing
 15321 ;; This function is called by:
 15322 ;;		_main
 15323 ;;		_keyReadEC
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327                           	psect	text70
 15328  006FB0                     __ptext70:
 15329                           	opt callstack 0
 15330  006FB0                     _timeDiff:
 15331                           	opt callstack 17
 15332                           
 15333                           ;time.c: 17:     time_t intDur;;time.c: 19:     intDur = endT - startT;
 15334                           
 15335                           ; BSR set to: 0
 15336                           ;incstack = 0
 15337  006FB0  0100               	movlb	0	; () banked
 15338  006FB2  518E               	movf	timeDiff@startT& (0+255),w,b
 15339  006FB4  5D90               	subwf	timeDiff@endT& (0+255),w,b
 15340  006FB6  6F92               	movwf	timeDiff@intDur& (0+255),b
 15341  006FB8  518F               	movf	(timeDiff@startT+1)& (0+255),w,b
 15342  006FBA  5991               	subwfb	(timeDiff@endT+1)& (0+255),w,b
 15343  006FBC  6F93               	movwf	(timeDiff@intDur+1)& (0+255),b
 15344                           
 15345                           ;time.c: 20:     if (intDur>0x8000){
 15346  006FBE  0592               	decf	timeDiff@intDur& (0+255),w,b
 15347  006FC0  0E80               	movlw	128
 15348  006FC2  5993               	subwfb	(timeDiff@intDur+1)& (0+255),w,b
 15349  006FC4  A0D8               	btfss	status,0,c
 15350  006FC6  D006               	goto	l14215
 15351                           
 15352                           ; BSR set to: 0
 15353                           ;time.c: 22:         intDur = startT-endT;
 15354  006FC8  5190               	movf	timeDiff@endT& (0+255),w,b
 15355  006FCA  5D8E               	subwf	timeDiff@startT& (0+255),w,b
 15356  006FCC  6F92               	movwf	timeDiff@intDur& (0+255),b
 15357  006FCE  5191               	movf	(timeDiff@endT+1)& (0+255),w,b
 15358  006FD0  598F               	subwfb	(timeDiff@startT+1)& (0+255),w,b
 15359  006FD2  6F93               	movwf	(timeDiff@intDur+1)& (0+255),b
 15360  006FD4                     l14215:
 15361                           
 15362                           ; BSR set to: 0
 15363                           ;time.c: 24:     return intDur;
 15364  006FD4  0060  F248  F08E   	movff	timeDiff@intDur,?_timeDiff
 15365  006FDA  0060  F24C  F08F   	movff	timeDiff@intDur+1,?_timeDiff+1
 15366                           
 15367                           ; BSR set to: 0
 15368  006FE0  0012               	return		;funcret
 15369  006FE2                     __end_of_timeDiff:
 15370                           	opt callstack 0
 15371                           
 15372 ;; *************** function _keyPeek *****************
 15373 ;; Defined at:
 15374 ;;		line 36 in file "keyRead.c"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;		None
 15377 ;; Auto vars:     Size  Location     Type
 15378 ;;  n               1   40[BANK0 ] char 
 15379 ;;  n               1   39[BANK0 ] char 
 15380 ;; Return value:  Size  Location     Type
 15381 ;;                  1    wreg      char 
 15382 ;; Registers used:
 15383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15384 ;; Tracked objects:
 15385 ;;		On entry : 0/0
 15386 ;;		On exit  : 3F/0
 15387 ;;		Unchanged: 0/0
 15388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15393 ;;Total ram usage:        2 bytes
 15394 ;; Hardware stack levels used:    1
 15395 ;; Hardware stack levels required when called:   14
 15396 ;; This function calls:
 15397 ;;		_digitalReadC
 15398 ;;		_digitalReadD
 15399 ;; This function is called by:
 15400 ;;		_InitProcedure
 15401 ;;		_main
 15402 ;;		_keyReadEC
 15403 ;;		_keyRead
 15404 ;; This function uses a non-reentrant model
 15405 ;;
 15406                           
 15407                           	psect	text71
 15408  006566                     __ptext71:
 15409                           	opt callstack 0
 15410  006566                     _keyPeek:
 15411                           	opt callstack 15
 15412                           
 15413                           ;keyRead.c: 37:     for (int8_t n = 0; n < 6; n++) {
 15414                           
 15415                           ; BSR set to: 0
 15416                           ;incstack = 0
 15417  006566  0E00               	movlw	0
 15418  006568  0100               	movlb	0	; () banked
 15419  00656A  6F87               	movwf	keyPeek@n& (0+255),b
 15420  00656C                     l14181:
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;keyRead.c: 38:         if (digitalReadD(keysD[n]) != 1) {
 15424  00656C  0ED5               	movlw	low _keysD
 15425  00656E  2587               	addwf	keyPeek@n& (0+255),w,b
 15426  006570  6ED9               	movwf	fsr2l,c
 15427  006572  6ADA               	clrf	fsr2h,c
 15428  006574  0E02               	movlw	high _keysD
 15429  006576  22DA               	addwfc	fsr2h,f,c
 15430  006578  50DF               	movf	indf2,w,c
 15431  00657A  EC12  F039         	call	_digitalReadD
 15432  00657E  06E8               	decf	wreg,f,c
 15433  006580  B4D8               	btfsc	status,2,c
 15434  006582  D002               	goto	l14187
 15435                           
 15436                           ; BSR set to: 0
 15437                           ;keyRead.c: 39:             return n;
 15438  006584  5187               	movf	keyPeek@n& (0+255),w,b
 15439  006586  0012               	return	
 15440  006588                     l14187:
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;keyRead.c: 41:     }
 15444  006588  2B87               	incf	keyPeek@n& (0+255),f,b
 15445                           
 15446                           ; BSR set to: 0
 15447  00658A  5187               	movf	keyPeek@n& (0+255),w,b
 15448  00658C  0A80               	xorlw	128
 15449  00658E  0F7A               	addlw	-134
 15450  006590  A0D8               	btfss	status,0,c
 15451  006592  D7EC               	goto	l14181
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;keyRead.c: 42:     for (int8_t n = 0; n < 4; n++) {
 15455  006594  0E00               	movlw	0
 15456  006596  6F88               	movwf	keyPeek@n_3353& (0+255),b
 15457  006598                     l14197:
 15458                           
 15459                           ; BSR set to: 0
 15460                           ;keyRead.c: 43:         if (digitalReadC(keysC[n]) != 1) {
 15461  006598  0EDB               	movlw	low _keysC
 15462  00659A  2588               	addwf	keyPeek@n_3353& (0+255),w,b
 15463  00659C  6ED9               	movwf	fsr2l,c
 15464  00659E  6ADA               	clrf	fsr2h,c
 15465  0065A0  0E02               	movlw	high _keysC
 15466  0065A2  22DA               	addwfc	fsr2h,f,c
 15467  0065A4  50DF               	movf	indf2,w,c
 15468  0065A6  EC29  F039         	call	_digitalReadC
 15469  0065AA  06E8               	decf	wreg,f,c
 15470  0065AC  B4D8               	btfsc	status,2,c
 15471  0065AE  D003               	goto	l14203
 15472                           
 15473                           ; BSR set to: 0
 15474                           ;keyRead.c: 44:             return n+6;
 15475  0065B0  5188               	movf	keyPeek@n_3353& (0+255),w,b
 15476  0065B2  0F06               	addlw	6
 15477  0065B4  0012               	return	
 15478  0065B6                     l14203:
 15479                           
 15480                           ; BSR set to: 0
 15481                           ;keyRead.c: 46:     }
 15482  0065B6  2B88               	incf	keyPeek@n_3353& (0+255),f,b
 15483                           
 15484                           ; BSR set to: 0
 15485  0065B8  5188               	movf	keyPeek@n_3353& (0+255),w,b
 15486  0065BA  0A80               	xorlw	128
 15487  0065BC  0F7C               	addlw	-132
 15488  0065BE  A0D8               	btfss	status,0,c
 15489  0065C0  D7EB               	goto	l14197
 15490                           
 15491                           ; BSR set to: 0
 15492                           ;keyRead.c: 47:     return -1;
 15493  0065C2  0EFF               	movlw	255
 15494                           
 15495                           ; BSR set to: 0
 15496  0065C4  0012               	return		;funcret
 15497  0065C6                     __end_of_keyPeek:
 15498                           	opt callstack 0
 15499                           
 15500 ;; *************** function _digitalReadD *****************
 15501 ;; Defined at:
 15502 ;;		line 22 in file "keyRead.c"
 15503 ;; Parameters:    Size  Location     Type
 15504 ;;  pin             1    wreg     unsigned char 
 15505 ;; Auto vars:     Size  Location     Type
 15506 ;;  pin             1   38[BANK0 ] unsigned char 
 15507 ;; Return value:  Size  Location     Type
 15508 ;;                  1    wreg      unsigned char 
 15509 ;; Registers used:
 15510 ;;		wreg, status,2, status,0
 15511 ;; Tracked objects:
 15512 ;;		On entry : 3F/0
 15513 ;;		On exit  : 3F/0
 15514 ;;		Unchanged: 0/0
 15515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15518 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15519 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15520 ;;Total ram usage:        3 bytes
 15521 ;; Hardware stack levels used:    1
 15522 ;; Hardware stack levels required when called:   13
 15523 ;; This function calls:
 15524 ;;		Nothing
 15525 ;; This function is called by:
 15526 ;;		_keyPeek
 15527 ;; This function uses a non-reentrant model
 15528 ;;
 15529                           
 15530                           	psect	text72
 15531  007224                     __ptext72:
 15532                           	opt callstack 0
 15533  007224                     _digitalReadD:
 15534                           	opt callstack 15
 15535                           
 15536                           ; BSR set to: 0
 15537                           ;incstack = 0
 15538                           ;digitalReadD@pin stored from wreg
 15539  007224  6F86               	movwf	digitalReadD@pin& (0+255),b
 15540                           
 15541                           ;keyRead.c: 23:     return (PORTD&(1<<pin))!= 0;
 15542  007226  0060  F218  F084   	movff	digitalReadD@pin,??_digitalReadD
 15543  00722C  0E01               	movlw	1
 15544  00722E  0100               	movlb	0	; () banked
 15545  007230  6F85               	movwf	(??_digitalReadD+1)& (0+255),b
 15546  007232  2B84               	incf	??_digitalReadD& (0+255),f,b
 15547  007234  D002               	goto	u13244
 15548  007236                     u13245:
 15549  007236  90D8               	bcf	status,0,c
 15550  007238  3785               	rlcf	(??_digitalReadD+1)& (0+255),f,b
 15551  00723A                     u13244:
 15552  00723A  2F84               	decfsz	??_digitalReadD& (0+255),f,b
 15553  00723C  D7FC               	goto	u13245
 15554  00723E  0100               	movlb	0	; () banked
 15555  007240  5185               	movf	(??_digitalReadD+1)& (0+255),w,b
 15556  007242  14CD               	andwf	205,w,c	;volatile
 15557  007244  0900               	iorlw	0
 15558  007246  B4D8               	btfsc	status,2,c
 15559  007248  D002               	goto	u13250
 15560  00724A  0E01               	movlw	1
 15561  00724C  0012               	return	
 15562  00724E                     u13250:
 15563  00724E  0E00               	movlw	0
 15564                           
 15565                           ; BSR set to: 0
 15566  007250  0012               	return		;funcret
 15567  007252                     __end_of_digitalReadD:
 15568                           	opt callstack 0
 15569                           
 15570 ;; *************** function _digitalReadC *****************
 15571 ;; Defined at:
 15572 ;;		line 25 in file "keyRead.c"
 15573 ;; Parameters:    Size  Location     Type
 15574 ;;  pin             1    wreg     unsigned char 
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;  pin             1   38[BANK0 ] unsigned char 
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  1    wreg      unsigned char 
 15579 ;; Registers used:
 15580 ;;		wreg, status,2, status,0
 15581 ;; Tracked objects:
 15582 ;;		On entry : 3F/0
 15583 ;;		On exit  : 3F/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15589 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15590 ;;Total ram usage:        3 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; Hardware stack levels required when called:   13
 15593 ;; This function calls:
 15594 ;;		Nothing
 15595 ;; This function is called by:
 15596 ;;		_keyPeek
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           	psect	text73
 15601  007252                     __ptext73:
 15602                           	opt callstack 0
 15603  007252                     _digitalReadC:
 15604                           	opt callstack 15
 15605                           
 15606                           ; BSR set to: 0
 15607                           ;incstack = 0
 15608                           ;digitalReadC@pin stored from wreg
 15609  007252  6F86               	movwf	digitalReadC@pin& (0+255),b
 15610                           
 15611                           ;keyRead.c: 26:     return (PORTC&(1<<pin))!= 0;
 15612  007254  0060  F218  F084   	movff	digitalReadC@pin,??_digitalReadC
 15613  00725A  0E01               	movlw	1
 15614  00725C  0100               	movlb	0	; () banked
 15615  00725E  6F85               	movwf	(??_digitalReadC+1)& (0+255),b
 15616  007260  2B84               	incf	??_digitalReadC& (0+255),f,b
 15617  007262  D002               	goto	u13274
 15618  007264                     u13275:
 15619  007264  90D8               	bcf	status,0,c
 15620  007266  3785               	rlcf	(??_digitalReadC+1)& (0+255),f,b
 15621  007268                     u13274:
 15622  007268  2F84               	decfsz	??_digitalReadC& (0+255),f,b
 15623  00726A  D7FC               	goto	u13275
 15624  00726C  0100               	movlb	0	; () banked
 15625  00726E  5185               	movf	(??_digitalReadC+1)& (0+255),w,b
 15626  007270  14CC               	andwf	204,w,c	;volatile
 15627  007272  0900               	iorlw	0
 15628  007274  B4D8               	btfsc	status,2,c
 15629  007276  D002               	goto	u13280
 15630  007278  0E01               	movlw	1
 15631  00727A  0012               	return	
 15632  00727C                     u13280:
 15633  00727C  0E00               	movlw	0
 15634                           
 15635                           ; BSR set to: 0
 15636  00727E  0012               	return		;funcret
 15637  007280                     __end_of_digitalReadC:
 15638                           	opt callstack 0
 15639                           
 15640 ;; *************** function _aCaptureSetOff *****************
 15641 ;; Defined at:
 15642 ;;		line 115 in file "aCapture.c"
 15643 ;; Parameters:    Size  Location     Type
 15644 ;;  sel             1    wreg     enum E16104
 15645 ;;  offVal          2   66[BANK1 ] short 
 15646 ;; Auto vars:     Size  Location     Type
 15647 ;;  sel             1   90[BANK0 ] enum E16104
 15648 ;; Return value:  Size  Location     Type
 15649 ;;                  1    wreg      void 
 15650 ;; Registers used:
 15651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15652 ;; Tracked objects:
 15653 ;;		On entry : 0/1
 15654 ;;		On exit  : 0/0
 15655 ;;		Unchanged: 0/0
 15656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15657 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15660 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15661 ;;Total ram usage:        3 bytes
 15662 ;; Hardware stack levels used:    1
 15663 ;; Hardware stack levels required when called:   22
 15664 ;; This function calls:
 15665 ;;		_printf
 15666 ;; This function is called by:
 15667 ;;		_InitProcedure
 15668 ;; This function uses a non-reentrant model
 15669 ;;
 15670                           
 15671                           	psect	text74
 15672  006A2E                     __ptext74:
 15673                           	opt callstack 0
 15674  006A2E                     _aCaptureSetOff:
 15675                           	opt callstack 7
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;incstack = 0
 15679                           ;aCaptureSetOff@sel stored from wreg
 15680  006A2E  0100               	movlb	0	; () banked
 15681  006A30  6FBA               	movwf	aCaptureSetOff@sel& (0+255),b
 15682                           
 15683                           ;aCapture.c: 116:     if (sel == MainPSensor) {
 15684  006A32  0100               	movlb	0	; () banked
 15685  006A34  51BA               	movf	aCaptureSetOff@sel& (0+255),w,b
 15686  006A36  A4D8               	btfss	status,2,c
 15687  006A38  D007               	goto	l14655
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;aCapture.c: 117:         mainPSensCal = offVal;
 15691  006A3A  0060  F6F0  F1F2   	movff	aCaptureSetOff@offVal,_mainPSensCal
 15692  006A40  0060  F6F4  F1F3   	movff	aCaptureSetOff@offVal+1,_mainPSensCal+1
 15693                           
 15694                           ;aCapture.c: 118:     } else if (sel == AuxPSensor) {
 15695  006A46  0012               	return	
 15696  006A48                     l14655:
 15697                           
 15698                           ; BSR set to: 0
 15699  006A48  05BA               	decf	aCaptureSetOff@sel& (0+255),w,b
 15700  006A4A  A4D8               	btfss	status,2,c
 15701  006A4C  D007               	goto	l1668
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;aCapture.c: 119:         auxPSensCal = offVal;
 15705  006A4E  0060  F6F0  F1F0   	movff	aCaptureSetOff@offVal,_auxPSensCal
 15706  006A54  0060  F6F4  F1F1   	movff	aCaptureSetOff@offVal+1,_auxPSensCal+1
 15707                           
 15708                           ;aCapture.c: 120:     } else {
 15709  006A5A  0012               	return	
 15710  006A5C                     l1668:
 15711                           
 15712                           ; BSR set to: 0
 15713                           ;aCapture.c: 121:         LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",102);
 15714  006A5C  94BA               	bcf	186,2,c	;volatile
 15715  006A5E  96BA               	bcf	186,3,c	;volatile
 15716                           
 15717                           ; BSR set to: 0
 15718  006A60  0EEC               	movlw	low STR_10
 15719  006A62  0101               	movlb	1	; () banked
 15720  006A64  6FA6               	movwf	printf@fmt& (0+255),b
 15721  006A66  0EFF               	movlw	high STR_10
 15722  006A68  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 15723  006A6A  0E00               	movlw	0
 15724  006A6C  6FA9               	movwf	(?_printf+3)& (0+255),b
 15725  006A6E  0E66               	movlw	102
 15726  006A70  6FA8               	movwf	(?_printf+2)& (0+255),b
 15727  006A72  EC84  F039         	call	_printf	;wreg free
 15728  006A76  0012               	return		;funcret
 15729  006A78                     __end_of_aCaptureSetOff:
 15730                           	opt callstack 0
 15731                           
 15732 ;; *************** function _aCaptRstFlt *****************
 15733 ;; Defined at:
 15734 ;;		line 125 in file "aCapture.c"
 15735 ;; Parameters:    Size  Location     Type
 15736 ;;  sel             1    wreg     enum E16104
 15737 ;; Auto vars:     Size  Location     Type
 15738 ;;  sel             1   90[BANK0 ] enum E16104
 15739 ;; Return value:  Size  Location     Type
 15740 ;;                  1    wreg      void 
 15741 ;; Registers used:
 15742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15743 ;; Tracked objects:
 15744 ;;		On entry : 0/1
 15745 ;;		On exit  : 3F/39
 15746 ;;		Unchanged: 0/0
 15747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15750 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15751 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15752 ;;Total ram usage:        5 bytes
 15753 ;; Hardware stack levels used:    1
 15754 ;; Hardware stack levels required when called:   22
 15755 ;; This function calls:
 15756 ;;		_printf
 15757 ;; This function is called by:
 15758 ;;		_InitProcedure
 15759 ;;		_main
 15760 ;; This function uses a non-reentrant model
 15761 ;;
 15762                           
 15763                           	psect	text75
 15764  0051AC                     __ptext75:
 15765                           	opt callstack 0
 15766  0051AC                     _aCaptRstFlt:
 15767                           	opt callstack 8
 15768                           
 15769                           ;incstack = 0
 15770                           ;aCaptRstFlt@sel stored from wreg
 15771  0051AC  0100               	movlb	0	; () banked
 15772  0051AE  6FBA               	movwf	aCaptRstFlt@sel& (0+255),b
 15773                           
 15774                           ;aCapture.c: 126:     switch (sel) {
 15775  0051B0  D076               	goto	l14717
 15776  0051B2                     l14707:
 15777                           
 15778                           ; BSR set to: 1
 15779                           ;aCapture.c: 129:             resultTbl[sel] = resultTbl[MainPSensor]<<9;
 15780  0051B2  0060  F570  F1BC   	movff	_resultTbl,??_aCaptRstFlt
 15781  0051B8  0060  F574  F1BD   	movff	_resultTbl+1,??_aCaptRstFlt+1
 15782  0051BE  0060  F578  F1BE   	movff	_resultTbl+2,??_aCaptRstFlt+2
 15783  0051C4  0060  F57C  F1BF   	movff	_resultTbl+3,??_aCaptRstFlt+3
 15784  0051CA  0E09               	movlw	9
 15785  0051CC                     u14065:
 15786  0051CC  90D8               	bcf	status,0,c
 15787  0051CE  37BC               	rlcf	??_aCaptRstFlt& (0+255),f,b
 15788  0051D0  37BD               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 15789  0051D2  37BE               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 15790  0051D4  37BF               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 15791  0051D6  2EE8               	decfsz	wreg,f,c
 15792  0051D8  D7F9               	goto	u14065
 15793  0051DA  D03E               	goto	L16
 15794  0051DC                     l14709:
 15795                           
 15796                           ; BSR set to: 1
 15797                           ;aCapture.c: 132:             resultTbl[sel] = resultTbl[MainPSensor]<<6;
 15798  0051DC  0060  F570  F1BC   	movff	_resultTbl,??_aCaptRstFlt
 15799  0051E2  0060  F574  F1BD   	movff	_resultTbl+1,??_aCaptRstFlt+1
 15800  0051E8  0060  F578  F1BE   	movff	_resultTbl+2,??_aCaptRstFlt+2
 15801  0051EE  0060  F57C  F1BF   	movff	_resultTbl+3,??_aCaptRstFlt+3
 15802  0051F4  0E06               	movlw	6
 15803  0051F6                     u14075:
 15804  0051F6  90D8               	bcf	status,0,c
 15805  0051F8  37BC               	rlcf	??_aCaptRstFlt& (0+255),f,b
 15806  0051FA  37BD               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 15807  0051FC  37BE               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 15808  0051FE  37BF               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 15809  005200  2EE8               	decfsz	wreg,f,c
 15810  005202  D7F9               	goto	u14075
 15811  005204  D029               	goto	L16
 15812  005206                     l14711:
 15813                           
 15814                           ; BSR set to: 1
 15815                           ;aCapture.c: 135:             resultTbl[sel] = resultTbl[MainPSensor]<<4;
 15816  005206  0060  F570  F1BC   	movff	_resultTbl,??_aCaptRstFlt
 15817  00520C  0060  F574  F1BD   	movff	_resultTbl+1,??_aCaptRstFlt+1
 15818  005212  0060  F578  F1BE   	movff	_resultTbl+2,??_aCaptRstFlt+2
 15819  005218  0060  F57C  F1BF   	movff	_resultTbl+3,??_aCaptRstFlt+3
 15820  00521E  0E04               	movlw	4
 15821  005220                     u14085:
 15822  005220  90D8               	bcf	status,0,c
 15823  005222  37BC               	rlcf	??_aCaptRstFlt& (0+255),f,b
 15824  005224  37BD               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 15825  005226  37BE               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 15826  005228  37BF               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 15827  00522A  2EE8               	decfsz	wreg,f,c
 15828  00522C  D7F9               	goto	u14085
 15829  00522E  D014               	goto	L16
 15830  005230                     l14713:
 15831                           
 15832                           ; BSR set to: 1
 15833                           ;aCapture.c: 138:             resultTbl[sel] = resultTbl[MainPSensor]<<2;
 15834  005230  0060  F570  F1BC   	movff	_resultTbl,??_aCaptRstFlt
 15835  005236  0060  F574  F1BD   	movff	_resultTbl+1,??_aCaptRstFlt+1
 15836  00523C  0060  F578  F1BE   	movff	_resultTbl+2,??_aCaptRstFlt+2
 15837  005242  0060  F57C  F1BF   	movff	_resultTbl+3,??_aCaptRstFlt+3
 15838  005248  0E02               	movlw	2
 15839  00524A                     u14095:
 15840  00524A  90D8               	bcf	status,0,c
 15841  00524C  37BC               	rlcf	??_aCaptRstFlt& (0+255),f,b
 15842  00524E  37BD               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 15843  005250  37BE               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 15844  005252  37BF               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 15845  005254  2EE8               	decfsz	wreg,f,c
 15846  005256  D7F9               	goto	u14095
 15847  005258                     L16:
 15848  005258  0100               	movlb	0	; () banked
 15849  00525A  51BA               	movf	aCaptRstFlt@sel& (0+255),w,b
 15850  00525C  0D04               	mullw	4
 15851  00525E  0E5C               	movlw	low _resultTbl
 15852  005260  24F3               	addwf	243,w,c
 15853  005262  6ED9               	movwf	fsr2l,c
 15854  005264  0E01               	movlw	high _resultTbl
 15855  005266  20F4               	addwfc	prodh,w,c
 15856  005268  6EDA               	movwf	fsr2h,c
 15857  00526A  0060  F6F3  FFDE   	movff	??_aCaptRstFlt,postinc2
 15858  005270  0060  F6F7  FFDE   	movff	??_aCaptRstFlt+1,postinc2
 15859  005276  0060  F6FB  FFDE   	movff	??_aCaptRstFlt+2,postinc2
 15860  00527C  0060  F6FF  FFDE   	movff	??_aCaptRstFlt+3,postinc2
 15861                           
 15862                           ;aCapture.c: 139:             break;
 15863  005282  D024               	goto	l1675
 15864  005284                     l1679:
 15865                           
 15866                           ; BSR set to: 1
 15867                           ;aCapture.c: 142:             LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",10
      +                          3);
 15868  005284  94BA               	bcf	186,2,c	;volatile
 15869  005286  96BA               	bcf	186,3,c	;volatile
 15870                           
 15871                           ; BSR set to: 1
 15872  005288  0EEC               	movlw	low STR_10
 15873  00528A  6FA6               	movwf	printf@fmt& (0+255),b
 15874  00528C  0EFF               	movlw	high STR_10
 15875  00528E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 15876  005290  0E00               	movlw	0
 15877  005292  6FA9               	movwf	(?_printf+3)& (0+255),b
 15878  005294  0E67               	movlw	103
 15879  005296  6FA8               	movwf	(?_printf+2)& (0+255),b
 15880  005298  EC84  F039         	call	_printf	;wreg free
 15881                           
 15882                           ;aCapture.c: 143:     }
 15883  00529C  D017               	goto	l1675
 15884  00529E                     l14717:
 15885  00529E  0100               	movlb	0	; () banked
 15886  0052A0  51BA               	movf	aCaptRstFlt@sel& (0+255),w,b
 15887  0052A2  0101               	movlb	1	; () banked
 15888  0052A4  6FBC               	movwf	??_aCaptRstFlt& (0+255),b
 15889  0052A6  6BBD               	clrf	(??_aCaptRstFlt+1)& (0+255),b
 15890                           
 15891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15892                           ; Switch size 1, requested type "simple"
 15893                           ; Number of cases is 1, Range of values is 0 to 0
 15894                           ; switch strategies available:
 15895                           ; Name         Instructions Cycles
 15896                           ; simple_byte            4     3 (average)
 15897                           ;	Chosen strategy is simple_byte
 15898  0052A8  51BD               	movf	(??_aCaptRstFlt+1)& (0+255),w,b
 15899  0052AA  0A00               	xorlw	0	; case 0
 15900  0052AC  A4D8               	btfss	status,2,c
 15901  0052AE  D7EA               	goto	l1679
 15902                           
 15903                           ; BSR set to: 1
 15904                           ; Switch size 1, requested type "simple"
 15905                           ; Number of cases is 4, Range of values is 3 to 6
 15906                           ; switch strategies available:
 15907                           ; Name         Instructions Cycles
 15908                           ; simple_byte           13     7 (average)
 15909                           ;	Chosen strategy is simple_byte
 15910  0052B0  51BC               	movf	??_aCaptRstFlt& (0+255),w,b
 15911  0052B2  0A03               	xorlw	3	; case 3
 15912  0052B4  B4D8               	btfsc	status,2,c
 15913  0052B6  D7BC               	goto	l14713
 15914  0052B8  0A07               	xorlw	7	; case 4
 15915  0052BA  B4D8               	btfsc	status,2,c
 15916  0052BC  D7A4               	goto	l14711
 15917  0052BE  0A01               	xorlw	1	; case 5
 15918  0052C0  B4D8               	btfsc	status,2,c
 15919  0052C2  D78C               	goto	l14709
 15920  0052C4  0A03               	xorlw	3	; case 6
 15921  0052C6  B4D8               	btfsc	status,2,c
 15922  0052C8  D774               	goto	l14707
 15923  0052CA  D7DC               	goto	l1679
 15924  0052CC                     l1675:
 15925                           
 15926                           ;aCapture.c: 144:             PIE1bits.ADTIE = 1;
 15927  0052CC  0139               	movlb	57	; () banked
 15928  0052CE  8791               	bsf	145,3,b	;volatile
 15929                           
 15930                           ; BSR set to: 57
 15931  0052D0  0012               	return		;funcret
 15932  0052D2                     __end_of_aCaptRstFlt:
 15933                           	opt callstack 0
 15934                           
 15935 ;; *************** function ___xxtofl *****************
 15936 ;; Defined at:
 15937 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 15938 ;; Parameters:    Size  Location     Type
 15939 ;;  sign            1    wreg     unsigned char 
 15940 ;;  val             4   36[BANK0 ] long 
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;  sign            1   44[BANK0 ] unsigned char 
 15943 ;;  arg             4   46[BANK0 ] unsigned long 
 15944 ;;  exp             1   45[BANK0 ] unsigned char 
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  4   36[BANK0 ] unsigned char 
 15947 ;; Registers used:
 15948 ;;		wreg, status,2, status,0
 15949 ;; Tracked objects:
 15950 ;;		On entry : 3F/0
 15951 ;;		On exit  : 3F/0
 15952 ;;		Unchanged: 0/0
 15953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15955 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15957 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15958 ;;Total ram usage:       14 bytes
 15959 ;; Hardware stack levels used:    1
 15960 ;; Hardware stack levels required when called:   13
 15961 ;; This function calls:
 15962 ;;		Nothing
 15963 ;; This function is called by:
 15964 ;;		_InitProcedure
 15965 ;;		_main
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           	psect	text76
 15970  004B2E                     __ptext76:
 15971                           	opt callstack 0
 15972  004B2E                     ___xxtofl:
 15973                           	opt callstack 17
 15974                           
 15975                           ; BSR set to: 57
 15976                           ;incstack = 0
 15977                           ;___xxtofl@sign stored from wreg
 15978  004B2E  6F8C               	movwf	___xxtofl@sign& (0+255),b
 15979  004B30  0100               	movlb	0	; () banked
 15980  004B32  518C               	movf	___xxtofl@sign& (0+255),w,b
 15981  004B34  A4D8               	btfss	status,2,c
 15982                           
 15983                           ; BSR set to: 0
 15984  004B36  AF87               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15985  004B38  D022               	goto	l3007
 15986                           
 15987                           ; BSR set to: 0
 15988  004B3A  0060  F210  F088   	movff	___xxtofl@val,??___xxtofl
 15989  004B40  0060  F214  F089   	movff	___xxtofl@val+1,??___xxtofl+1
 15990  004B46  0060  F218  F08A   	movff	___xxtofl@val+2,??___xxtofl+2
 15991  004B4C  0060  F21C  F08B   	movff	___xxtofl@val+3,??___xxtofl+3
 15992  004B52  1F88               	comf	??___xxtofl& (0+255),f,b
 15993  004B54  1F89               	comf	(??___xxtofl+1)& (0+255),f,b
 15994  004B56  1F8A               	comf	(??___xxtofl+2)& (0+255),f,b
 15995  004B58  1F8B               	comf	(??___xxtofl+3)& (0+255),f,b
 15996  004B5A  2B88               	incf	??___xxtofl& (0+255),f,b
 15997  004B5C  0E00               	movlw	0
 15998  004B5E  2389               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15999  004B60  238A               	addwfc	(??___xxtofl+2)& (0+255),f,b
 16000  004B62  238B               	addwfc	(??___xxtofl+3)& (0+255),f,b
 16001  004B64  0060  F220  F08E   	movff	??___xxtofl,___xxtofl@arg
 16002  004B6A  0060  F224  F08F   	movff	??___xxtofl+1,___xxtofl@arg+1
 16003  004B70  0060  F228  F090   	movff	??___xxtofl+2,___xxtofl@arg+2
 16004  004B76  0060  F22C  F091   	movff	??___xxtofl+3,___xxtofl@arg+3
 16005  004B7C  D00C               	goto	l14993
 16006  004B7E                     l3007:
 16007                           
 16008                           ; BSR set to: 0
 16009  004B7E  0060  F210  F08E   	movff	___xxtofl@val,___xxtofl@arg
 16010  004B84  0060  F214  F08F   	movff	___xxtofl@val+1,___xxtofl@arg+1
 16011  004B8A  0060  F218  F090   	movff	___xxtofl@val+2,___xxtofl@arg+2
 16012  004B90  0060  F21C  F091   	movff	___xxtofl@val+3,___xxtofl@arg+3
 16013  004B96                     l14993:
 16014                           
 16015                           ; BSR set to: 0
 16016  004B96  5184               	movf	___xxtofl@val& (0+255),w,b
 16017  004B98  1185               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 16018  004B9A  1186               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16019  004B9C  1187               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16020  004B9E  A4D8               	btfss	status,2,c
 16021  004BA0  D009               	goto	l14999
 16022                           
 16023                           ; BSR set to: 0
 16024  004BA2  0E00               	movlw	0
 16025  004BA4  6F84               	movwf	?___xxtofl& (0+255),b
 16026  004BA6  0E00               	movlw	0
 16027  004BA8  6F85               	movwf	(?___xxtofl+1)& (0+255),b
 16028  004BAA  0E00               	movlw	0
 16029  004BAC  6F86               	movwf	(?___xxtofl+2)& (0+255),b
 16030  004BAE  0E00               	movlw	0
 16031  004BB0  6F87               	movwf	(?___xxtofl+3)& (0+255),b
 16032  004BB2  0012               	return	
 16033  004BB4                     l14999:
 16034                           
 16035                           ; BSR set to: 0
 16036  004BB4  0E96               	movlw	150
 16037  004BB6  6F8D               	movwf	___xxtofl@exp& (0+255),b
 16038  004BB8  D006               	goto	l15003
 16039  004BBA                     l15001:
 16040                           
 16041                           ; BSR set to: 0
 16042  004BBA  2B8D               	incf	___xxtofl@exp& (0+255),f,b
 16043  004BBC  90D8               	bcf	status,0,c
 16044  004BBE  3391               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16045  004BC0  3390               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16046  004BC2  338F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16047  004BC4  338E               	rrcf	___xxtofl@arg& (0+255),f,b
 16048  004BC6                     l15003:
 16049                           
 16050                           ; BSR set to: 0
 16051  004BC6  0E00               	movlw	0
 16052  004BC8  158E               	andwf	___xxtofl@arg& (0+255),w,b
 16053  004BCA  6F88               	movwf	??___xxtofl& (0+255),b
 16054  004BCC  0E00               	movlw	0
 16055  004BCE  158F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16056  004BD0  6F89               	movwf	(??___xxtofl+1)& (0+255),b
 16057  004BD2  0E00               	movlw	0
 16058  004BD4  1590               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16059  004BD6  6F8A               	movwf	(??___xxtofl+2)& (0+255),b
 16060  004BD8  0EFE               	movlw	254
 16061  004BDA  1591               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16062  004BDC  6F8B               	movwf	(??___xxtofl+3)& (0+255),b
 16063  004BDE  5188               	movf	??___xxtofl& (0+255),w,b
 16064  004BE0  1189               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16065  004BE2  118A               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16066  004BE4  118B               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16067  004BE6  B4D8               	btfsc	status,2,c
 16068  004BE8  D00D               	goto	l3014
 16069  004BEA  D7E7               	goto	l15001
 16070  004BEC                     l15005:
 16071                           
 16072                           ; BSR set to: 0
 16073  004BEC  2B8D               	incf	___xxtofl@exp& (0+255),f,b
 16074                           
 16075                           ; BSR set to: 0
 16076  004BEE  0E01               	movlw	1
 16077  004BF0  278E               	addwf	___xxtofl@arg& (0+255),f,b
 16078  004BF2  0E00               	movlw	0
 16079  004BF4  238F               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16080  004BF6  2390               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16081  004BF8  2391               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16082                           
 16083                           ; BSR set to: 0
 16084  004BFA  90D8               	bcf	status,0,c
 16085  004BFC  3391               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16086  004BFE  3390               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16087  004C00  338F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16088  004C02  338E               	rrcf	___xxtofl@arg& (0+255),f,b
 16089  004C04                     l3014:
 16090                           
 16091                           ; BSR set to: 0
 16092  004C04  0E00               	movlw	0
 16093  004C06  158E               	andwf	___xxtofl@arg& (0+255),w,b
 16094  004C08  6F88               	movwf	??___xxtofl& (0+255),b
 16095  004C0A  0E00               	movlw	0
 16096  004C0C  158F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16097  004C0E  6F89               	movwf	(??___xxtofl+1)& (0+255),b
 16098  004C10  0E00               	movlw	0
 16099  004C12  1590               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16100  004C14  6F8A               	movwf	(??___xxtofl+2)& (0+255),b
 16101  004C16  0EFF               	movlw	255
 16102  004C18  1591               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16103  004C1A  6F8B               	movwf	(??___xxtofl+3)& (0+255),b
 16104  004C1C  5188               	movf	??___xxtofl& (0+255),w,b
 16105  004C1E  1189               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16106  004C20  118A               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16107  004C22  118B               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16108  004C24  B4D8               	btfsc	status,2,c
 16109  004C26  D007               	goto	l15013
 16110  004C28  D7E1               	goto	l15005
 16111  004C2A                     l15011:
 16112                           
 16113                           ; BSR set to: 0
 16114  004C2A  078D               	decf	___xxtofl@exp& (0+255),f,b
 16115  004C2C  90D8               	bcf	status,0,c
 16116  004C2E  378E               	rlcf	___xxtofl@arg& (0+255),f,b
 16117  004C30  378F               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16118  004C32  3790               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16119  004C34  3791               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16120  004C36                     l15013:
 16121                           
 16122                           ; BSR set to: 0
 16123  004C36  BF90               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16124  004C38  D003               	goto	u14490
 16125                           
 16126                           ; BSR set to: 0
 16127  004C3A  0E02               	movlw	2
 16128  004C3C  618D               	cpfslt	___xxtofl@exp& (0+255),b
 16129  004C3E  D7F5               	goto	l15011
 16130  004C40                     u14490:
 16131                           
 16132                           ; BSR set to: 0
 16133  004C40  A18D               	btfss	___xxtofl@exp& (0+255),0,b
 16134                           
 16135                           ; BSR set to: 0
 16136  004C42  9F90               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16137                           
 16138                           ; BSR set to: 0
 16139  004C44  90D8               	bcf	status,0,c
 16140  004C46  338D               	rrcf	___xxtofl@exp& (0+255),f,b
 16141                           
 16142                           ; BSR set to: 0
 16143  004C48  0060  F234  F088   	movff	___xxtofl@exp,??___xxtofl
 16144  004C4E  6B89               	clrf	(??___xxtofl+1)& (0+255),b
 16145  004C50  6B8A               	clrf	(??___xxtofl+2)& (0+255),b
 16146  004C52  6B8B               	clrf	(??___xxtofl+3)& (0+255),b
 16147  004C54  0060  F220  F08B   	movff	??___xxtofl,??___xxtofl+3
 16148  004C5A  6B8A               	clrf	(??___xxtofl+2)& (0+255),b
 16149  004C5C  6B89               	clrf	(??___xxtofl+1)& (0+255),b
 16150  004C5E  6B88               	clrf	??___xxtofl& (0+255),b
 16151  004C60  5188               	movf	??___xxtofl& (0+255),w,b
 16152  004C62  138E               	iorwf	___xxtofl@arg& (0+255),f,b
 16153  004C64  5189               	movf	(??___xxtofl+1)& (0+255),w,b
 16154  004C66  138F               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16155  004C68  518A               	movf	(??___xxtofl+2)& (0+255),w,b
 16156  004C6A  1390               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16157  004C6C  518B               	movf	(??___xxtofl+3)& (0+255),w,b
 16158  004C6E  1391               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16159                           
 16160                           ; BSR set to: 0
 16161  004C70  518C               	movf	___xxtofl@sign& (0+255),w,b
 16162  004C72  A4D8               	btfss	status,2,c
 16163                           
 16164                           ; BSR set to: 0
 16165  004C74  AF87               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16166  004C76  D001               	goto	l15029
 16167                           
 16168                           ; BSR set to: 0
 16169  004C78  8F91               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16170  004C7A                     l15029:
 16171                           
 16172                           ; BSR set to: 0
 16173  004C7A  0060  F238  F084   	movff	___xxtofl@arg,?___xxtofl
 16174  004C80  0060  F23C  F085   	movff	___xxtofl@arg+1,?___xxtofl+1
 16175  004C86  0060  F240  F086   	movff	___xxtofl@arg+2,?___xxtofl+2
 16176  004C8C  0060  F244  F087   	movff	___xxtofl@arg+3,?___xxtofl+3
 16177                           
 16178                           ; BSR set to: 0
 16179  004C92  0012               	return		;funcret
 16180  004C94                     __end_of___xxtofl:
 16181                           	opt callstack 0
 16182                           
 16183 ;; *************** function ___lmul *****************
 16184 ;; Defined at:
 16185 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 16186 ;; Parameters:    Size  Location     Type
 16187 ;;  multiplier      4   36[BANK0 ] unsigned long 
 16188 ;;  multiplicand    4   40[BANK0 ] unsigned long 
 16189 ;; Auto vars:     Size  Location     Type
 16190 ;;  product         4   44[BANK0 ] unsigned long 
 16191 ;; Return value:  Size  Location     Type
 16192 ;;                  4   36[BANK0 ] unsigned long 
 16193 ;; Registers used:
 16194 ;;		wreg, status,2, status,0
 16195 ;; Tracked objects:
 16196 ;;		On entry : 3F/0
 16197 ;;		On exit  : 3F/0
 16198 ;;		Unchanged: 0/0
 16199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16200 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16201 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16203 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16204 ;;Total ram usage:       12 bytes
 16205 ;; Hardware stack levels used:    1
 16206 ;; Hardware stack levels required when called:   13
 16207 ;; This function calls:
 16208 ;;		Nothing
 16209 ;; This function is called by:
 16210 ;;		_rPressurePredict
 16211 ;;		_InitProcedure
 16212 ;; This function uses a non-reentrant model
 16213 ;;
 16214                           
 16215                           	psect	text77
 16216  0065C6                     __ptext77:
 16217                           	opt callstack 0
 16218  0065C6                     ___lmul:
 16219                           	opt callstack 16
 16220                           
 16221                           ; BSR set to: 0
 16222                           
 16223                           ; BSR set to: 0
 16224                           ;incstack = 0
 16225  0065C6  0E00               	movlw	0
 16226  0065C8  6F8C               	movwf	___lmul@product& (0+255),b
 16227  0065CA  0E00               	movlw	0
 16228  0065CC  6F8D               	movwf	(___lmul@product+1)& (0+255),b
 16229  0065CE  0E00               	movlw	0
 16230  0065D0  6F8E               	movwf	(___lmul@product+2)& (0+255),b
 16231  0065D2  0E00               	movlw	0
 16232  0065D4  6F8F               	movwf	(___lmul@product+3)& (0+255),b
 16233  0065D6                     l14891:
 16234                           
 16235                           ; BSR set to: 0
 16236  0065D6  A184               	btfss	___lmul@multiplier& (0+255),0,b
 16237  0065D8  D008               	goto	l14895
 16238                           
 16239                           ; BSR set to: 0
 16240  0065DA  5188               	movf	___lmul@multiplicand& (0+255),w,b
 16241  0065DC  278C               	addwf	___lmul@product& (0+255),f,b
 16242  0065DE  5189               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 16243  0065E0  238D               	addwfc	(___lmul@product+1)& (0+255),f,b
 16244  0065E2  518A               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 16245  0065E4  238E               	addwfc	(___lmul@product+2)& (0+255),f,b
 16246  0065E6  518B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 16247  0065E8  238F               	addwfc	(___lmul@product+3)& (0+255),f,b
 16248  0065EA                     l14895:
 16249                           
 16250                           ; BSR set to: 0
 16251  0065EA  90D8               	bcf	status,0,c
 16252  0065EC  3788               	rlcf	___lmul@multiplicand& (0+255),f,b
 16253  0065EE  3789               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 16254  0065F0  378A               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 16255  0065F2  378B               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 16256                           
 16257                           ; BSR set to: 0
 16258  0065F4  90D8               	bcf	status,0,c
 16259  0065F6  3387               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 16260  0065F8  3386               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 16261  0065FA  3385               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 16262  0065FC  3384               	rrcf	___lmul@multiplier& (0+255),f,b
 16263  0065FE  5184               	movf	___lmul@multiplier& (0+255),w,b
 16264  006600  1185               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 16265  006602  1186               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 16266  006604  1187               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 16267  006606  A4D8               	btfss	status,2,c
 16268  006608  D7E6               	goto	l14891
 16269                           
 16270                           ; BSR set to: 0
 16271  00660A  0060  F230  F084   	movff	___lmul@product,?___lmul
 16272  006610  0060  F234  F085   	movff	___lmul@product+1,?___lmul+1
 16273  006616  0060  F238  F086   	movff	___lmul@product+2,?___lmul+2
 16274  00661C  0060  F23C  F087   	movff	___lmul@product+3,?___lmul+3
 16275                           
 16276                           ; BSR set to: 0
 16277  006622  0012               	return		;funcret
 16278  006624                     __end_of___lmul:
 16279                           	opt callstack 0
 16280                           
 16281 ;; *************** function ___flge *****************
 16282 ;; Defined at:
 16283 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16284 ;; Parameters:    Size  Location     Type
 16285 ;;  ff1             4   66[BANK0 ] unsigned long 
 16286 ;;  ff2             4   70[BANK0 ] unsigned long 
 16287 ;; Auto vars:     Size  Location     Type
 16288 ;;		None
 16289 ;; Return value:  Size  Location     Type
 16290 ;;		None               void
 16291 ;; Registers used:
 16292 ;;		wreg, status,2, status,0
 16293 ;; Tracked objects:
 16294 ;;		On entry : 3F/0
 16295 ;;		On exit  : 3F/0
 16296 ;;		Unchanged: 0/0
 16297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16298 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16300 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16301 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16302 ;;Total ram usage:       12 bytes
 16303 ;; Hardware stack levels used:    1
 16304 ;; Hardware stack levels required when called:   13
 16305 ;; This function calls:
 16306 ;;		Nothing
 16307 ;; This function is called by:
 16308 ;;		_InitProcedure
 16309 ;;		_main
 16310 ;; This function uses a non-reentrant model
 16311 ;;
 16312                           
 16313                           	psect	text78
 16314  005484                     __ptext78:
 16315                           	opt callstack 0
 16316  005484                     ___flge:
 16317                           	opt callstack 17
 16318                           
 16319                           ; BSR set to: 0
 16320                           
 16321                           ; BSR set to: 0
 16322                           ;incstack = 0
 16323  005484  0E00               	movlw	0
 16324  005486  15A2               	andwf	___flge@ff1& (0+255),w,b
 16325  005488  6FAA               	movwf	??___flge& (0+255),b
 16326  00548A  0E00               	movlw	0
 16327  00548C  15A3               	andwf	(___flge@ff1+1)& (0+255),w,b
 16328  00548E  6FAB               	movwf	(??___flge+1)& (0+255),b
 16329  005490  0E80               	movlw	128
 16330  005492  15A4               	andwf	(___flge@ff1+2)& (0+255),w,b
 16331  005494  6FAC               	movwf	(??___flge+2)& (0+255),b
 16332  005496  0E7F               	movlw	127
 16333  005498  15A5               	andwf	(___flge@ff1+3)& (0+255),w,b
 16334  00549A  6FAD               	movwf	(??___flge+3)& (0+255),b
 16335  00549C  51AA               	movf	??___flge& (0+255),w,b
 16336  00549E  11AB               	iorwf	(??___flge+1)& (0+255),w,b
 16337  0054A0  11AC               	iorwf	(??___flge+2)& (0+255),w,b
 16338  0054A2  11AD               	iorwf	(??___flge+3)& (0+255),w,b
 16339  0054A4  A4D8               	btfss	status,2,c
 16340  0054A6  D008               	goto	l14947
 16341                           
 16342                           ; BSR set to: 0
 16343  0054A8  0E00               	movlw	0
 16344  0054AA  6FA2               	movwf	___flge@ff1& (0+255),b
 16345  0054AC  0E00               	movlw	0
 16346  0054AE  6FA3               	movwf	(___flge@ff1+1)& (0+255),b
 16347  0054B0  0E00               	movlw	0
 16348  0054B2  6FA4               	movwf	(___flge@ff1+2)& (0+255),b
 16349  0054B4  0E00               	movlw	0
 16350  0054B6  6FA5               	movwf	(___flge@ff1+3)& (0+255),b
 16351  0054B8                     l14947:
 16352                           
 16353                           ; BSR set to: 0
 16354  0054B8  0E00               	movlw	0
 16355  0054BA  15A6               	andwf	___flge@ff2& (0+255),w,b
 16356  0054BC  6FAA               	movwf	??___flge& (0+255),b
 16357  0054BE  0E00               	movlw	0
 16358  0054C0  15A7               	andwf	(___flge@ff2+1)& (0+255),w,b
 16359  0054C2  6FAB               	movwf	(??___flge+1)& (0+255),b
 16360  0054C4  0E80               	movlw	128
 16361  0054C6  15A8               	andwf	(___flge@ff2+2)& (0+255),w,b
 16362  0054C8  6FAC               	movwf	(??___flge+2)& (0+255),b
 16363  0054CA  0E7F               	movlw	127
 16364  0054CC  15A9               	andwf	(___flge@ff2+3)& (0+255),w,b
 16365  0054CE  6FAD               	movwf	(??___flge+3)& (0+255),b
 16366  0054D0  51AA               	movf	??___flge& (0+255),w,b
 16367  0054D2  11AB               	iorwf	(??___flge+1)& (0+255),w,b
 16368  0054D4  11AC               	iorwf	(??___flge+2)& (0+255),w,b
 16369  0054D6  11AD               	iorwf	(??___flge+3)& (0+255),w,b
 16370  0054D8  A4D8               	btfss	status,2,c
 16371  0054DA  D008               	goto	l14951
 16372                           
 16373                           ; BSR set to: 0
 16374  0054DC  0E00               	movlw	0
 16375  0054DE  6FA6               	movwf	___flge@ff2& (0+255),b
 16376  0054E0  0E00               	movlw	0
 16377  0054E2  6FA7               	movwf	(___flge@ff2+1)& (0+255),b
 16378  0054E4  0E00               	movlw	0
 16379  0054E6  6FA8               	movwf	(___flge@ff2+2)& (0+255),b
 16380  0054E8  0E00               	movlw	0
 16381  0054EA  6FA9               	movwf	(___flge@ff2+3)& (0+255),b
 16382  0054EC                     l14951:
 16383                           
 16384                           ; BSR set to: 0
 16385  0054EC  AFA5               	btfss	(___flge@ff1+3)& (0+255),7,b
 16386  0054EE  D009               	goto	l14955
 16387                           
 16388                           ; BSR set to: 0
 16389  0054F0  6DA2               	negf	___flge@ff1& (0+255),b
 16390  0054F2  1FA3               	comf	(___flge@ff1+1)& (0+255),f,b
 16391  0054F4  B0D8               	btfsc	status,0,c
 16392  0054F6  2BA3               	incf	(___flge@ff1+1)& (0+255),f,b
 16393  0054F8  1FA4               	comf	(___flge@ff1+2)& (0+255),f,b
 16394  0054FA  B0D8               	btfsc	status,0,c
 16395  0054FC  2BA4               	incf	(___flge@ff1+2)& (0+255),f,b
 16396  0054FE  0E80               	movlw	128
 16397  005500  57A5               	subfwb	(___flge@ff1+3)& (0+255),f,b
 16398  005502                     l14955:
 16399                           
 16400                           ; BSR set to: 0
 16401  005502  AFA9               	btfss	(___flge@ff2+3)& (0+255),7,b
 16402  005504  D009               	goto	l2617
 16403                           
 16404                           ; BSR set to: 0
 16405  005506  6DA6               	negf	___flge@ff2& (0+255),b
 16406  005508  1FA7               	comf	(___flge@ff2+1)& (0+255),f,b
 16407  00550A  B0D8               	btfsc	status,0,c
 16408  00550C  2BA7               	incf	(___flge@ff2+1)& (0+255),f,b
 16409  00550E  1FA8               	comf	(___flge@ff2+2)& (0+255),f,b
 16410  005510  B0D8               	btfsc	status,0,c
 16411  005512  2BA8               	incf	(___flge@ff2+2)& (0+255),f,b
 16412  005514  0E80               	movlw	128
 16413  005516  57A9               	subfwb	(___flge@ff2+3)& (0+255),f,b
 16414  005518                     l2617:
 16415                           
 16416                           ; BSR set to: 0
 16417  005518  0E00               	movlw	0
 16418  00551A  1BA2               	xorwf	___flge@ff1& (0+255),f,b
 16419  00551C  0E00               	movlw	0
 16420  00551E  1BA3               	xorwf	(___flge@ff1+1)& (0+255),f,b
 16421  005520  0E00               	movlw	0
 16422  005522  1BA4               	xorwf	(___flge@ff1+2)& (0+255),f,b
 16423  005524  0E80               	movlw	128
 16424  005526  1BA5               	xorwf	(___flge@ff1+3)& (0+255),f,b
 16425  005528  0E00               	movlw	0
 16426  00552A  1BA6               	xorwf	___flge@ff2& (0+255),f,b
 16427  00552C  0E00               	movlw	0
 16428  00552E  1BA7               	xorwf	(___flge@ff2+1)& (0+255),f,b
 16429  005530  0E00               	movlw	0
 16430  005532  1BA8               	xorwf	(___flge@ff2+2)& (0+255),f,b
 16431  005534  0E80               	movlw	128
 16432  005536  1BA9               	xorwf	(___flge@ff2+3)& (0+255),f,b
 16433  005538  51A6               	movf	___flge@ff2& (0+255),w,b
 16434  00553A  5DA2               	subwf	___flge@ff1& (0+255),w,b
 16435  00553C  51A7               	movf	(___flge@ff2+1)& (0+255),w,b
 16436  00553E  59A3               	subwfb	(___flge@ff1+1)& (0+255),w,b
 16437  005540  51A8               	movf	(___flge@ff2+2)& (0+255),w,b
 16438  005542  59A4               	subwfb	(___flge@ff1+2)& (0+255),w,b
 16439  005544  51A9               	movf	(___flge@ff2+3)& (0+255),w,b
 16440  005546  59A5               	subwfb	(___flge@ff1+3)& (0+255),w,b
 16441  005548  B0D8               	btfsc	status,0,c
 16442  00554A  D002               	goto	l14961
 16443                           
 16444                           ; BSR set to: 0
 16445  00554C  90D8               	bcf	status,0,c
 16446  00554E  0012               	return	
 16447  005550                     l14961:
 16448                           
 16449                           ; BSR set to: 0
 16450  005550  80D8               	bsf	status,0,c
 16451                           
 16452                           ; BSR set to: 0
 16453  005552  0012               	return		;funcret
 16454  005554                     __end_of___flge:
 16455                           	opt callstack 0
 16456                           
 16457 ;; *************** function _MonitorMsgForcedSend *****************
 16458 ;; Defined at:
 16459 ;;		line 138 in file "main.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;  state           1    wreg     enum E16847
 16462 ;; Auto vars:     Size  Location     Type
 16463 ;;  state           1   78[BANK1 ] enum E16847
 16464 ;;  vddVal          2   81[BANK1 ] short 
 16465 ;;  trfError        1   80[BANK1 ] enum E16385
 16466 ;;  trfAck          1   79[BANK1 ] _Bool 
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  1    wreg      void 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 16471 ;; Tracked objects:
 16472 ;;		On entry : 3E/1
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16477 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16479 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16480 ;;Total ram usage:        6 bytes
 16481 ;; Hardware stack levels used:    1
 16482 ;; Hardware stack levels required when called:   23
 16483 ;; This function calls:
 16484 ;;		_I2C2_MAck
 16485 ;;		_I2C2_MClose
 16486 ;;		_I2C2_MOpen
 16487 ;;		_I2C2_MasterOperation
 16488 ;;		_I2C2_SetBuffer
 16489 ;;		_MonitorErrorClr
 16490 ;;		_MonitorErrorSet
 16491 ;;		_aCaptGetResult
 16492 ;;		_printf
 16493 ;;		_sprintf
 16494 ;; This function is called by:
 16495 ;;		_MonitorMsgSend
 16496 ;;		_InitProcedure
 16497 ;;		_main
 16498 ;; This function uses a non-reentrant model
 16499 ;;
 16500                           
 16501                           	psect	text79
 16502  0047E0                     __ptext79:
 16503                           	opt callstack 0
 16504  0047E0                     _MonitorMsgForcedSend:
 16505                           	opt callstack 6
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;incstack = 0
 16509                           ;MonitorMsgForcedSend@state stored from wreg
 16510  0047E0  0101               	movlb	1	; () banked
 16511  0047E2  6FC8               	movwf	MonitorMsgForcedSend@state& (0+255),b
 16512                           
 16513                           ;main.c: 139:     i2c2_error_t trfError;;main.c: 140:     _Bool trfAck;;main.c: 141:    
      +                           int16_t vddVal;;main.c: 145:     trfError = I2C2_MClose();
 16514  0047E4  ECE5  F035         	call	_I2C2_MClose	;wreg free
 16515  0047E8  0101               	movlb	1	; () banked
 16516  0047EA  6FCA               	movwf	MonitorMsgForcedSend@trfError& (0+255),b
 16517                           
 16518                           ; BSR set to: 1
 16519                           ;main.c: 146:     trfAck = I2C2_MAck();
 16520  0047EC  ECE4  F03C         	call	_I2C2_MAck	;wreg free
 16521  0047F0  0101               	movlb	1	; () banked
 16522  0047F2  6FC9               	movwf	MonitorMsgForcedSend@trfAck& (0+255),b
 16523                           
 16524                           ; BSR set to: 1
 16525                           ;main.c: 148:     printf ("I2C2 Close: %d\n", trfError);
 16526  0047F4  0EA2               	movlw	low STR_1
 16527  0047F6  6FA6               	movwf	printf@fmt& (0+255),b
 16528  0047F8  0EFF               	movlw	high STR_1
 16529  0047FA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 16530  0047FC  0060  F728  F1A8   	movff	MonitorMsgForcedSend@trfError,?_printf+2
 16531  004802  6BA9               	clrf	(?_printf+3)& (0+255),b
 16532  004804  EC84  F039         	call	_printf	;wreg free
 16533                           
 16534                           ;main.c: 150:     if (!trfAck) {
 16535  004808  0101               	movlb	1	; () banked
 16536  00480A  51C9               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 16537  00480C  A4D8               	btfss	status,2,c
 16538  00480E  D014               	goto	l1417
 16539                           
 16540                           ; BSR set to: 1
 16541                           ;main.c: 152:         sprintf(lcdBtnRow, "        M. ERROR");
 16542  004810  0E7B               	movlw	low _lcdBtnRow
 16543  004812  6FA6               	movwf	sprintf@s& (0+255),b
 16544  004814  0E02               	movlw	high _lcdBtnRow
 16545  004816  6FA7               	movwf	(sprintf@s+1)& (0+255),b
 16546  004818  0E70               	movlw	low STR_2
 16547  00481A  6FA8               	movwf	sprintf@fmt& (0+255),b
 16548  00481C  0EFF               	movlw	high STR_2
 16549  00481E  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
 16550  004820  EC9C  F033         	call	_sprintf	;wreg free
 16551                           
 16552                           ; BSR set to: 1
 16553                           ;main.c: 153:         lcdPrintBR = 1;
 16554  004824  0E01               	movlw	1
 16555  004826  6F5A               	movwf	_lcdPrintBR& (0+255),b
 16556                           
 16557                           ; BSR set to: 1
 16558                           ;main.c: 154:         LATDbits.LATD0 = 1;
 16559  004828  80BD               	bsf	189,0,c	;volatile
 16560                           
 16561                           ; BSR set to: 1
 16562                           ;main.c: 155:         printf ("MON ERROR");
 16563  00482A  0ED9               	movlw	low STR_3
 16564  00482C  6FA6               	movwf	printf@fmt& (0+255),b
 16565  00482E  0EFF               	movlw	high STR_3
 16566  004830  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 16567  004832  EC84  F039         	call	_printf	;wreg free
 16568                           
 16569                           ;main.c: 156:     } else if ((LATDbits.LATD0) && trfAck) {
 16570  004836  D018               	goto	l14549
 16571  004838                     l1417:
 16572                           
 16573                           ; BSR set to: 1
 16574  004838  A0BD               	btfss	189,0,c	;volatile
 16575  00483A  D016               	goto	l14549
 16576                           
 16577                           ; BSR set to: 1
 16578  00483C  51C9               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 16579  00483E  B4D8               	btfsc	status,2,c
 16580  004840  D013               	goto	l14549
 16581                           
 16582                           ; BSR set to: 1
 16583                           ;main.c: 158:         sprintf(lcdBtnRow, "                ");
 16584  004842  0E7B               	movlw	low _lcdBtnRow
 16585  004844  6FA6               	movwf	sprintf@s& (0+255),b
 16586  004846  0E02               	movlw	high _lcdBtnRow
 16587  004848  6FA7               	movwf	(sprintf@s+1)& (0+255),b
 16588  00484A  0EC6               	movlw	low STR_4
 16589  00484C  6FA8               	movwf	sprintf@fmt& (0+255),b
 16590  00484E  0EFE               	movlw	high STR_4
 16591  004850  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
 16592  004852  EC9C  F033         	call	_sprintf	;wreg free
 16593                           
 16594                           ; BSR set to: 1
 16595                           ;main.c: 159:         lcdPrintBR = 1;
 16596  004856  0E01               	movlw	1
 16597  004858  6F5A               	movwf	_lcdPrintBR& (0+255),b
 16598                           
 16599                           ; BSR set to: 1
 16600                           ;main.c: 160:         LATDbits.LATD0 = 0;
 16601  00485A  90BD               	bcf	189,0,c	;volatile
 16602                           
 16603                           ; BSR set to: 1
 16604                           ;main.c: 161:         printf ("MON ERROR CLR");
 16605  00485C  0EC1               	movlw	low STR_5
 16606  00485E  6FA6               	movwf	printf@fmt& (0+255),b
 16607  004860  0EFF               	movlw	high STR_5
 16608  004862  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 16609  004864  EC84  F039         	call	_printf	;wreg free
 16610  004868                     l14549:
 16611                           
 16612                           ;main.c: 164:     if (trfError != I2C2_BUSY) {
 16613  004868  0101               	movlb	1	; () banked
 16614  00486A  05CA               	decf	MonitorMsgForcedSend@trfError& (0+255),w,b
 16615  00486C  B4D8               	btfsc	status,2,c
 16616  00486E  0012               	return	
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;main.c: 166:         aCaptGetResult(VddSensor, &vddVal);
 16620  004870  0ECB               	movlw	low MonitorMsgForcedSend@vddVal
 16621  004872  6FBC               	movwf	aCaptGetResult@outVal& (0+255),b
 16622  004874  0E01               	movlw	high MonitorMsgForcedSend@vddVal
 16623  004876  6FBD               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 16624  004878  0E02               	movlw	2
 16625  00487A  ECB9  F020         	call	_aCaptGetResult
 16626                           
 16627                           ;main.c: 167:         if (vddVal > vddValMean){
 16628  00487E  0101               	movlb	1	; () banked
 16629  004880  51CB               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 16630  004882  5D33               	subwf	_vddValMean& (0+255),w,b
 16631  004884  5134               	movf	(_vddValMean+1)& (0+255),w,b
 16632  004886  0A80               	xorlw	128
 16633  004888  0100               	movlb	0	; () banked
 16634  00488A  6FBA               	movwf	??_MonitorMsgForcedSend& (0+255),b
 16635  00488C  0101               	movlb	1	; () banked
 16636  00488E  51CC               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 16637  004890  0A80               	xorlw	128
 16638  004892  0100               	movlb	0	; () banked
 16639  004894  59BA               	subwfb	??_MonitorMsgForcedSend& (0+255),w,b
 16640  004896  B0D8               	btfsc	status,0,c
 16641  004898  D007               	goto	l14557
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;main.c: 168:             vddVal = vddVal - vddValMean;
 16645  00489A  0101               	movlb	1	; () banked
 16646  00489C  5133               	movf	_vddValMean& (0+255),w,b
 16647  00489E  5DCB               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 16648  0048A0  6FCB               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 16649  0048A2  5134               	movf	(_vddValMean+1)& (0+255),w,b
 16650  0048A4  59CC               	subwfb	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 16651  0048A6  D006               	goto	L17
 16652  0048A8                     l14557:
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;main.c: 170:             vddVal = vddValMean - vddVal;
 16656  0048A8  0101               	movlb	1	; () banked
 16657  0048AA  51CB               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 16658  0048AC  5D33               	subwf	_vddValMean& (0+255),w,b
 16659  0048AE  6FCB               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 16660  0048B0  51CC               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 16661  0048B2  5934               	subwfb	(_vddValMean+1)& (0+255),w,b
 16662  0048B4                     L17:
 16663  0048B4  6FCC               	movwf	(MonitorMsgForcedSend@vddVal+1)& (0+255),b
 16664                           
 16665                           ; BSR set to: 1
 16666                           ;main.c: 172:         if (vddVal > 150) {
 16667                           
 16668                           ;main.c: 171:         }
 16669  0048B6  BFCC               	btfsc	(MonitorMsgForcedSend@vddVal+1)& (0+255),7,b
 16670  0048B8  D00A               	goto	l14561
 16671  0048BA  51CC               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 16672  0048BC  E104               	bnz	u13820
 16673  0048BE  0E97               	movlw	151
 16674  0048C0  5DCB               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 16675  0048C2  A0D8               	btfss	status,0,c
 16676  0048C4  D004               	goto	l14561
 16677  0048C6                     u13820:
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;main.c: 173:             MonitorErrorSet(MON_VDDE);
 16681  0048C6  0E80               	movlw	128
 16682  0048C8  ECC6  F03B         	call	_MonitorErrorSet
 16683                           
 16684                           ;main.c: 174:         } else {
 16685  0048CC  D003               	goto	l14563
 16686  0048CE                     l14561:
 16687                           
 16688                           ; BSR set to: 1
 16689                           ;main.c: 175:             MonitorErrorClr(MON_VDDE);
 16690  0048CE  0E80               	movlw	128
 16691  0048D0  ECCF  F03B         	call	_MonitorErrorClr
 16692  0048D4                     l14563:
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;main.c: 179:         if (VentMode == VMODE_VOLUME) {
 16696  0048D4  0557               	decf	_VentMode& (0+255),w,b
 16697  0048D6  A4D8               	btfss	status,2,c
 16698  0048D8  D005               	goto	l1425
 16699                           
 16700                           ; BSR set to: 1
 16701                           ;main.c: 180:             monitorMsg[0] = state|0x4;
 16702  0048DA  51C8               	movf	MonitorMsgForcedSend@state& (0+255),w,b
 16703  0048DC  0904               	iorlw	4
 16704  0048DE  0102               	movlb	2	; () banked
 16705  0048E0  6F8F               	movwf	_monitorMsg& (0+255),b
 16706                           
 16707                           ;main.c: 181:         } else {
 16708  0048E2  D003               	goto	l1426
 16709  0048E4                     l1425:
 16710                           
 16711                           ; BSR set to: 1
 16712                           ;main.c: 182:             monitorMsg[0] = state;
 16713  0048E4  0060  F720  F28F   	movff	MonitorMsgForcedSend@state,_monitorMsg
 16714  0048EA                     l1426:
 16715                           
 16716                           ;main.c: 185:         monitorMsg[1] = IP;
 16717  0048EA  C1F8  F290         	movff	_IP,_monitorMsg+1
 16718                           
 16719                           ;main.c: 186:         if (chIP) {
 16720  0048EE  0101               	movlb	1	; () banked
 16721  0048F0  5155               	movf	_chIP& (0+255),w,b
 16722  0048F2  B4D8               	btfsc	status,2,c
 16723  0048F4  D002               	goto	l14571
 16724                           
 16725                           ; BSR set to: 1
 16726                           ;main.c: 187:             monitorMsg[1] |= 0x80;
 16727  0048F6  0102               	movlb	2	; () banked
 16728  0048F8  8F90               	bsf	(_monitorMsg+1)& (0+255),7,b
 16729  0048FA                     l14571:
 16730                           
 16731                           ;main.c: 190:         monitorMsg[2] = PEEP;
 16732  0048FA  C1F7  F291         	movff	_PEEP,_monitorMsg+2
 16733                           
 16734                           ;main.c: 191:         if (chPEEP) {
 16735  0048FE  0101               	movlb	1	; () banked
 16736  004900  5153               	movf	_chPEEP& (0+255),w,b
 16737  004902  B4D8               	btfsc	status,2,c
 16738  004904  D002               	goto	l14577
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;main.c: 192:             monitorMsg[2] |= 0x80;
 16742  004906  0102               	movlb	2	; () banked
 16743  004908  8F91               	bsf	(_monitorMsg+2)& (0+255),7,b
 16744  00490A                     l14577:
 16745                           
 16746                           ;main.c: 195:         monitorMsg[3] = BPM;
 16747  00490A  C1F9  F292         	movff	_BPM,_monitorMsg+3
 16748                           
 16749                           ;main.c: 196:         if (chBPM) {
 16750  00490E  0101               	movlb	1	; () banked
 16751  004910  5156               	movf	_chBPM& (0+255),w,b
 16752  004912  B4D8               	btfsc	status,2,c
 16753  004914  D002               	goto	l14583
 16754                           
 16755                           ; BSR set to: 1
 16756                           ;main.c: 197:             monitorMsg[3] |= 0x80;
 16757  004916  0102               	movlb	2	; () banked
 16758  004918  8F92               	bsf	(_monitorMsg+3)& (0+255),7,b
 16759  00491A                     l14583:
 16760                           
 16761                           ;main.c: 200:         monitorMsg[4] = MaxP;
 16762  00491A  C1FA  F293         	movff	_MaxP,_monitorMsg+4
 16763                           
 16764                           ;main.c: 201:         if (chMaxP){
 16765  00491E  0101               	movlb	1	; () banked
 16766  004920  5154               	movf	_chMaxP& (0+255),w,b
 16767  004922  B4D8               	btfsc	status,2,c
 16768  004924  D002               	goto	l14589
 16769                           
 16770                           ; BSR set to: 1
 16771                           ;main.c: 202:             monitorMsg[3] |= 0x80;
 16772  004926  0102               	movlb	2	; () banked
 16773  004928  8F92               	bsf	(_monitorMsg+3)& (0+255),7,b
 16774  00492A                     l14589:
 16775                           
 16776                           ;main.c: 205:         monitorMsg[5] = MaxV;
 16777  00492A  C1F6  F294         	movff	_MaxV,_monitorMsg+5
 16778                           
 16779                           ;main.c: 206:         if (chMaxV){
 16780  00492E  0101               	movlb	1	; () banked
 16781  004930  5150               	movf	_chMaxV& (0+255),w,b
 16782  004932  B4D8               	btfsc	status,2,c
 16783  004934  D002               	goto	l14595
 16784                           
 16785                           ; BSR set to: 1
 16786                           ;main.c: 207:             monitorMsg[5] |= 0x80;
 16787  004936  0102               	movlb	2	; () banked
 16788  004938  8F94               	bsf	(_monitorMsg+5)& (0+255),7,b
 16789  00493A                     l14595:
 16790                           
 16791                           ;main.c: 210:         monitorMsg[6] = LowVAlarm;
 16792  00493A  C1F5  F295         	movff	_LowVAlarm,_monitorMsg+6
 16793                           
 16794                           ;main.c: 211:         if (chLowVAlarm){
 16795  00493E  0101               	movlb	1	; () banked
 16796  004940  5152               	movf	_chLowVAlarm& (0+255),w,b
 16797  004942  B4D8               	btfsc	status,2,c
 16798  004944  D002               	goto	l14601
 16799                           
 16800                           ; BSR set to: 1
 16801                           ;main.c: 212:             monitorMsg[6] |= 0x80;
 16802  004946  0102               	movlb	2	; () banked
 16803  004948  8F95               	bsf	(_monitorMsg+6)& (0+255),7,b
 16804  00494A                     l14601:
 16805                           
 16806                           ;main.c: 215:         monitorMsg[7] = HighVAlarm;
 16807  00494A  C1F4  F296         	movff	_HighVAlarm,_monitorMsg+7
 16808                           
 16809                           ;main.c: 216:         if (chHighVAlarm){
 16810  00494E  0101               	movlb	1	; () banked
 16811  004950  5151               	movf	_chHighVAlarm& (0+255),w,b
 16812  004952  B4D8               	btfsc	status,2,c
 16813  004954  D002               	goto	l14607
 16814                           
 16815                           ; BSR set to: 1
 16816                           ;main.c: 217:             monitorMsg[7] |= 0x80;
 16817  004956  0102               	movlb	2	; () banked
 16818  004958  8F96               	bsf	(_monitorMsg+7)& (0+255),7,b
 16819  00495A                     l14607:
 16820                           
 16821                           ;main.c: 220:         monitorMsg[8] = eBRate;
 16822  00495A  C14E  F297         	movff	_eBRate,_monitorMsg+8
 16823                           
 16824                           ;main.c: 221:         monitorMsg[9] = ctrlErrorStatus;
 16825  00495E  C14C  F298         	movff	_ctrlErrorStatus,_monitorMsg+9
 16826                           
 16827                           ;main.c: 223:         trfError = I2C2_MOpen();
 16828  004962  EC8B  F037         	call	_I2C2_MOpen	;wreg free
 16829  004966  0101               	movlb	1	; () banked
 16830  004968  6FCA               	movwf	MonitorMsgForcedSend@trfError& (0+255),b
 16831                           
 16832                           ; BSR set to: 1
 16833                           ;main.c: 224:         printf ("I2C2 Open: %d\n", trfError);
 16834  00496A  0EB2               	movlw	low STR_6
 16835  00496C  6FA6               	movwf	printf@fmt& (0+255),b
 16836  00496E  0EFF               	movlw	high STR_6
 16837  004970  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 16838  004972  0060  F728  F1A8   	movff	MonitorMsgForcedSend@trfError,?_printf+2
 16839  004978  6BA9               	clrf	(?_printf+3)& (0+255),b
 16840  00497A  EC84  F039         	call	_printf	;wreg free
 16841                           
 16842                           ;main.c: 225:         I2C2_SetBuffer(monitorMsg,10);
 16843  00497E  0E8F               	movlw	low _monitorMsg
 16844  004980  0100               	movlb	0	; () banked
 16845  004982  6F84               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 16846  004984  0E02               	movlw	high _monitorMsg
 16847  004986  6F85               	movwf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 16848  004988  0E00               	movlw	0
 16849  00498A  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 16850  00498C  0E0A               	movlw	10
 16851  00498E  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 16852  004990  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 16853                           
 16854                           ; BSR set to: 1
 16855                           ;main.c: 226:         trfError = I2C2_MasterOperation(0);
 16856  004994  0E00               	movlw	0
 16857  004996  EC5F  F035         	call	_I2C2_MasterOperation
 16858  00499A  0101               	movlb	1	; () banked
 16859  00499C  6FCA               	movwf	MonitorMsgForcedSend@trfError& (0+255),b
 16860                           
 16861                           ; BSR set to: 1
 16862                           ;main.c: 227:         printf ("I2C2 Open: %d\n", trfError);
 16863  00499E  0EB2               	movlw	low STR_6
 16864  0049A0  6FA6               	movwf	printf@fmt& (0+255),b
 16865  0049A2  0EFF               	movlw	high STR_6
 16866  0049A4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 16867  0049A6  0060  F728  F1A8   	movff	MonitorMsgForcedSend@trfError,?_printf+2
 16868  0049AC  6BA9               	clrf	(?_printf+3)& (0+255),b
 16869  0049AE  EC84  F039         	call	_printf	;wreg free
 16870  0049B2  0012               	return		;funcret
 16871  0049B4                     __end_of_MonitorMsgForcedSend:
 16872                           	opt callstack 0
 16873                           
 16874 ;; *************** function _sprintf *****************
 16875 ;; Defined at:
 16876 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
 16877 ;; Parameters:    Size  Location     Type
 16878 ;;  s               2   44[BANK1 ] PTR unsigned char 
 16879 ;;		 -> lcdTopRow(20), lcdBtnRow(20), 
 16880 ;;  fmt             2   46[BANK1 ] PTR const unsigned char 
 16881 ;;		 -> STR_67(17), STR_66(18), STR_65(18), STR_64(20), 
 16882 ;;		 -> STR_63(20), STR_62(20), STR_61(20), STR_60(20), 
 16883 ;;		 -> STR_59(20), STR_58(20), STR_57(20), STR_56(21), 
 16884 ;;		 -> STR_40(10), STR_27(18), STR_19(19), STR_13(17), 
 16885 ;;		 -> STR_4(17), STR_2(17), 
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;  f               6   60[BANK1 ] struct _IO_FILE
 16888 ;;  ap              2   58[BANK1 ] PTR void [1]
 16889 ;;		 -> ?_printf(2), ?_sprintf(2), 
 16890 ;;  ret             2    0        int 
 16891 ;; Return value:  Size  Location     Type
 16892 ;;                  2   44[BANK1 ] int 
 16893 ;; Registers used:
 16894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16895 ;; Tracked objects:
 16896 ;;		On entry : 3E/1
 16897 ;;		On exit  : 3F/1
 16898 ;;		Unchanged: 0/0
 16899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16900 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16901 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16903 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16904 ;;Total ram usage:       22 bytes
 16905 ;; Hardware stack levels used:    1
 16906 ;; Hardware stack levels required when called:   21
 16907 ;; This function calls:
 16908 ;;		_vfprintf
 16909 ;; This function is called by:
 16910 ;;		_MonitorMsgForcedSend
 16911 ;;		_InitProcedure
 16912 ;;		_main
 16913 ;;		_screenMng
 16914 ;; This function uses a non-reentrant model
 16915 ;;
 16916                           
 16917                           	psect	text80
 16918  006738                     __ptext80:
 16919                           	opt callstack 0
 16920  006738                     _sprintf:
 16921                           	opt callstack 9
 16922                           
 16923                           ;incstack = 0
 16924  006738  0EAA               	movlw	low (?_sprintf+4)
 16925  00673A  0101               	movlb	1	; () banked
 16926  00673C  6FB4               	movwf	sprintf@ap& (0+255),b
 16927  00673E  0E01               	movlw	high (?_sprintf+4)
 16928  006740  6FB5               	movwf	(sprintf@ap+1)& (0+255),b
 16929  006742  0060  F698  F1B6   	movff	sprintf@s,sprintf@f
 16930  006748  0060  F69C  F1B7   	movff	sprintf@s+1,sprintf@f+1
 16931                           
 16932                           ; BSR set to: 1
 16933  00674E  0E00               	movlw	0
 16934  006750  6FB9               	movwf	(sprintf@f+3)& (0+255),b
 16935  006752  0E00               	movlw	0
 16936  006754  6FB8               	movwf	(sprintf@f+2)& (0+255),b
 16937                           
 16938                           ; BSR set to: 1
 16939  006756  0E00               	movlw	0
 16940  006758  6FBB               	movwf	(sprintf@f+5)& (0+255),b
 16941  00675A  0E00               	movlw	0
 16942  00675C  6FBA               	movwf	(sprintf@f+4)& (0+255),b
 16943                           
 16944                           ; BSR set to: 1
 16945  00675E  0EB6               	movlw	low sprintf@f
 16946  006760  6FA0               	movwf	vfprintf@fp& (0+255),b
 16947  006762  0E01               	movlw	high sprintf@f
 16948  006764  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
 16949  006766  0060  F6A0  F1A2   	movff	sprintf@fmt,vfprintf@fmt
 16950  00676C  0060  F6A4  F1A3   	movff	sprintf@fmt+1,vfprintf@fmt+1
 16951  006772  0EB4               	movlw	low sprintf@ap
 16952  006774  6FA4               	movwf	vfprintf@ap& (0+255),b
 16953  006776  0E01               	movlw	high sprintf@ap
 16954  006778  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
 16955  00677A  EC78  F030         	call	_vfprintf	;wreg free
 16956  00677E  0101               	movlb	1	; () banked
 16957  006780  51B8               	movf	(sprintf@f+2)& (0+255),w,b
 16958  006782  25A6               	addwf	sprintf@s& (0+255),w,b
 16959  006784  6ED9               	movwf	fsr2l,c
 16960  006786  51B9               	movf	(sprintf@f+3)& (0+255),w,b
 16961  006788  21A7               	addwfc	(sprintf@s+1)& (0+255),w,b
 16962  00678A  6EDA               	movwf	fsr2h,c
 16963  00678C  0E00               	movlw	0
 16964  00678E  6EDF               	movwf	indf2,c
 16965                           
 16966                           ; BSR set to: 1
 16967  006790  0012               	return		;funcret
 16968  006792                     __end_of_sprintf:
 16969                           	opt callstack 0
 16970                           
 16971 ;; *************** function _aCaptGetResult *****************
 16972 ;; Defined at:
 16973 ;;		line 148 in file "aCapture.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;  sel             1    wreg     enum E16104
 16976 ;;  outVal          2   66[BANK1 ] PTR short 
 16977 ;;		 -> vMeasureIsr@instP(2), main@bdP2(2), main@bdP1(2), main@pAvgShort(2), 
 16978 ;;		 -> main@pInst(2), main@pAvgUShort(2), InitProcedure@aPVal(2), InitProcedure@mPVal(2), 
 16979 ;;		 -> InitProcedure@vddVal(2), MonitorMsgForcedSend@vddVal(2), 
 16980 ;; Auto vars:     Size  Location     Type
 16981 ;;  sel             1   73[BANK1 ] enum E16104
 16982 ;;  lclRaw          4   74[BANK1 ] unsigned long 
 16983 ;;  lclValid        1   72[BANK1 ] unsigned char 
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  1    wreg      _Bool 
 16986 ;; Registers used:
 16987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16988 ;; Tracked objects:
 16989 ;;		On entry : 3F/1
 16990 ;;		On exit  : 0/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16993 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16994 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16995 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16996 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16997 ;;Total ram usage:       12 bytes
 16998 ;; Hardware stack levels used:    1
 16999 ;; Hardware stack levels required when called:   22
 17000 ;; This function calls:
 17001 ;;		_printf
 17002 ;; This function is called by:
 17003 ;;		_MonitorMsgForcedSend
 17004 ;;		_InitProcedure
 17005 ;;		_main
 17006 ;; This function uses a non-reentrant model
 17007 ;;
 17008                           
 17009                           	psect	text81
 17010  004172                     __ptext81:
 17011                           	opt callstack 0
 17012  004172                     _aCaptGetResult:
 17013                           	opt callstack 8
 17014                           
 17015                           ; BSR set to: 1
 17016                           ;incstack = 0
 17017                           ;aCaptGetResult@sel stored from wreg
 17018  004172  6FC3               	movwf	aCaptGetResult@sel& (0+255),b
 17019                           
 17020                           ;aCapture.c: 149:     uint32_t lclRaw;;aCapture.c: 150:     uint8_t lclValid;;aCapture.c
      +                          : 153:     PIE1bits.ADTIE = 0;
 17021  004174  0139               	movlb	57	; () banked
 17022  004176  9791               	bcf	145,3,b	;volatile
 17023                           
 17024                           ; BSR set to: 57
 17025                           ;aCapture.c: 154:     lclRaw=resultTbl[sel];
 17026  004178  0101               	movlb	1	; () banked
 17027  00417A  51C3               	movf	aCaptGetResult@sel& (0+255),w,b
 17028  00417C  0D04               	mullw	4
 17029  00417E  0E5C               	movlw	low _resultTbl
 17030  004180  24F3               	addwf	243,w,c
 17031  004182  6ED9               	movwf	fsr2l,c
 17032  004184  0E01               	movlw	high _resultTbl
 17033  004186  20F4               	addwfc	prodh,w,c
 17034  004188  6EDA               	movwf	fsr2h,c
 17035  00418A  006F FF78  F1C4    	movff	postinc2,aCaptGetResult@lclRaw
 17036  004190  006F FF78  F1C5    	movff	postinc2,aCaptGetResult@lclRaw+1
 17037  004196  006F FF78  F1C6    	movff	postinc2,aCaptGetResult@lclRaw+2
 17038  00419C  006F FF78  F1C7    	movff	postinc2,aCaptGetResult@lclRaw+3
 17039                           
 17040                           ; BSR set to: 1
 17041                           ;aCapture.c: 155:     lclValid=resultTblVal[sel];
 17042  0041A2  0E40               	movlw	low _resultTblVal
 17043  0041A4  25C3               	addwf	aCaptGetResult@sel& (0+255),w,b
 17044  0041A6  6ED9               	movwf	fsr2l,c
 17045  0041A8  6ADA               	clrf	fsr2h,c
 17046  0041AA  0E02               	movlw	high _resultTblVal
 17047  0041AC  22DA               	addwfc	fsr2h,f,c
 17048  0041AE  50DF               	movf	indf2,w,c
 17049  0041B0  6FC2               	movwf	aCaptGetResult@lclValid& (0+255),b
 17050                           
 17051                           ; BSR set to: 1
 17052                           ;aCapture.c: 156:     PIE1bits.ADTIE = 1;
 17053  0041B2  0139               	movlb	57	; () banked
 17054  0041B4  8791               	bsf	145,3,b	;volatile
 17055                           
 17056                           ; BSR set to: 57
 17057                           ;aCapture.c: 158:     if (lclValid == 0) {
 17058  0041B6  0101               	movlb	1	; () banked
 17059  0041B8  51C2               	movf	aCaptGetResult@lclValid& (0+255),w,b
 17060  0041BA  A4D8               	btfss	status,2,c
 17061  0041BC  D066               	goto	l14113
 17062                           
 17063                           ; BSR set to: 1
 17064                           ;aCapture.c: 159:         return 0;
 17065  0041BE  0E00               	movlw	0
 17066  0041C0  0012               	return	
 17067  0041C2                     l14103:
 17068                           
 17069                           ; BSR set to: 1
 17070                           ;aCapture.c: 166:             lclRaw=lclRaw>>9;
 17071  0041C2  0060  F710  F1BE   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 17072  0041C8  0060  F714  F1BF   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 17073  0041CE  0060  F718  F1C0   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 17074  0041D4  0060  F71C  F1C1   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 17075  0041DA  0E0A               	movlw	10
 17076  0041DC  D005               	goto	u13440
 17077  0041DE                     u13445:
 17078  0041DE  90D8               	bcf	status,0,c
 17079  0041E0  33C1               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 17080  0041E2  33C0               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 17081  0041E4  33BF               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 17082  0041E6  33BE               	rrcf	??_aCaptGetResult& (0+255),f,b
 17083  0041E8                     u13440:
 17084  0041E8  2EE8               	decfsz	wreg,f,c
 17085  0041EA  D7F9               	goto	u13445
 17086  0041EC  D041               	goto	L20
 17087  0041EE                     l14105:
 17088                           
 17089                           ; BSR set to: 1
 17090                           ;aCapture.c: 169:             lclRaw=lclRaw>>6;
 17091  0041EE  0060  F710  F1BE   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 17092  0041F4  0060  F714  F1BF   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 17093  0041FA  0060  F718  F1C0   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 17094  004200  0060  F71C  F1C1   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 17095  004206  0E07               	movlw	7
 17096  004208  D005               	goto	u13450
 17097  00420A                     u13455:
 17098  00420A  90D8               	bcf	status,0,c
 17099  00420C  33C1               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 17100  00420E  33C0               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 17101  004210  33BF               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 17102  004212  33BE               	rrcf	??_aCaptGetResult& (0+255),f,b
 17103  004214                     u13450:
 17104  004214  2EE8               	decfsz	wreg,f,c
 17105  004216  D7F9               	goto	u13455
 17106  004218  D02B               	goto	L20
 17107  00421A                     l14107:
 17108                           
 17109                           ; BSR set to: 1
 17110                           ;aCapture.c: 172:             lclRaw=lclRaw>>4;
 17111  00421A  0060  F710  F1BE   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 17112  004220  0060  F714  F1BF   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 17113  004226  0060  F718  F1C0   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 17114  00422C  0060  F71C  F1C1   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 17115  004232  0E05               	movlw	5
 17116  004234  D005               	goto	u13460
 17117  004236                     u13465:
 17118  004236  90D8               	bcf	status,0,c
 17119  004238  33C1               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 17120  00423A  33C0               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 17121  00423C  33BF               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 17122  00423E  33BE               	rrcf	??_aCaptGetResult& (0+255),f,b
 17123  004240                     u13460:
 17124  004240  2EE8               	decfsz	wreg,f,c
 17125  004242  D7F9               	goto	u13465
 17126  004244  D015               	goto	L20
 17127  004246                     l14109:
 17128                           
 17129                           ; BSR set to: 1
 17130                           ;aCapture.c: 175:             lclRaw=lclRaw>>2;
 17131  004246  0060  F710  F1BE   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 17132  00424C  0060  F714  F1BF   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 17133  004252  0060  F718  F1C0   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 17134  004258  0060  F71C  F1C1   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 17135  00425E  0E03               	movlw	3
 17136  004260  D005               	goto	u13470
 17137  004262                     u13475:
 17138  004262  90D8               	bcf	status,0,c
 17139  004264  33C1               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 17140  004266  33C0               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 17141  004268  33BF               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 17142  00426A  33BE               	rrcf	??_aCaptGetResult& (0+255),f,b
 17143  00426C                     u13470:
 17144  00426C  2EE8               	decfsz	wreg,f,c
 17145  00426E  D7F9               	goto	u13475
 17146  004270                     L20:
 17147  004270  0060  F6F8  F1C4   	movff	??_aCaptGetResult,aCaptGetResult@lclRaw
 17148  004276  0060  F6FC  F1C5   	movff	??_aCaptGetResult+1,aCaptGetResult@lclRaw+1
 17149  00427C  0060  F700  F1C6   	movff	??_aCaptGetResult+2,aCaptGetResult@lclRaw+2
 17150  004282  0060  F704  F1C7   	movff	??_aCaptGetResult+3,aCaptGetResult@lclRaw+3
 17151                           
 17152                           ;aCapture.c: 176:             break;
 17153  004288  D09B               	goto	l14143
 17154  00428A                     l14113:
 17155                           
 17156                           ; BSR set to: 1
 17157  00428A  51C3               	movf	aCaptGetResult@sel& (0+255),w,b
 17158  00428C  6FBE               	movwf	??_aCaptGetResult& (0+255),b
 17159  00428E  6BBF               	clrf	(??_aCaptGetResult+1)& (0+255),b
 17160                           
 17161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17162                           ; Switch size 1, requested type "simple"
 17163                           ; Number of cases is 1, Range of values is 0 to 0
 17164                           ; switch strategies available:
 17165                           ; Name         Instructions Cycles
 17166                           ; simple_byte            4     3 (average)
 17167                           ;	Chosen strategy is simple_byte
 17168  004290  51BF               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 17169  004292  0A00               	xorlw	0	; case 0
 17170  004294  A4D8               	btfss	status,2,c
 17171  004296  D094               	goto	l14143
 17172                           
 17173                           ; BSR set to: 1
 17174                           ; Switch size 1, requested type "simple"
 17175                           ; Number of cases is 4, Range of values is 3 to 6
 17176                           ; switch strategies available:
 17177                           ; Name         Instructions Cycles
 17178                           ; simple_byte           13     7 (average)
 17179                           ;	Chosen strategy is simple_byte
 17180  004298  51BE               	movf	??_aCaptGetResult& (0+255),w,b
 17181  00429A  0A03               	xorlw	3	; case 3
 17182  00429C  B4D8               	btfsc	status,2,c
 17183  00429E  D7D3               	goto	l14109
 17184  0042A0  0A07               	xorlw	7	; case 4
 17185  0042A2  B4D8               	btfsc	status,2,c
 17186  0042A4  D7BA               	goto	l14107
 17187  0042A6  0A01               	xorlw	1	; case 5
 17188  0042A8  B4D8               	btfsc	status,2,c
 17189  0042AA  D7A1               	goto	l14105
 17190  0042AC  0A03               	xorlw	3	; case 6
 17191  0042AE  B4D8               	btfsc	status,2,c
 17192  0042B0  D788               	goto	l14103
 17193  0042B2  D086               	goto	l14143
 17194  0042B4                     l1696:
 17195                           
 17196                           ; BSR set to: 1
 17197                           ;aCapture.c: 188:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 17198                           
 17199                           ; BSR set to: 1
 17200  0042B4  0060  F7C8  F1BE   	movff	_mainPSensCal,??_aCaptGetResult
 17201  0042BA  0060  F7CC  F1BF   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 17202  0042C0  0E00               	movlw	0
 17203  0042C2  BFBF               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 17204  0042C4  0EFF               	movlw	255
 17205  0042C6  6FC0               	movwf	(??_aCaptGetResult+2)& (0+255),b
 17206  0042C8  6FC1               	movwf	(??_aCaptGetResult+3)& (0+255),b
 17207  0042CA  51BE               	movf	??_aCaptGetResult& (0+255),w,b
 17208  0042CC  5DC4               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 17209  0042CE  51BF               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 17210  0042D0  59C5               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 17211  0042D2  51C0               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 17212  0042D4  59C6               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 17213  0042D6  51C1               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 17214  0042D8  59C7               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 17215  0042DA  B0D8               	btfsc	status,0,c
 17216  0042DC  D022               	goto	l14121
 17217                           
 17218                           ; BSR set to: 1
 17219  0042DE  0060  F7C8  F1BE   	movff	_mainPSensCal,??_aCaptGetResult
 17220  0042E4  0060  F7CC  F1BF   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 17221  0042EA  0E00               	movlw	0
 17222  0042EC  BFBF               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 17223  0042EE  0EFF               	movlw	255
 17224  0042F0  6FC0               	movwf	(??_aCaptGetResult+2)& (0+255),b
 17225  0042F2  6FC1               	movwf	(??_aCaptGetResult+3)& (0+255),b
 17226  0042F4  51C4               	movf	aCaptGetResult@lclRaw& (0+255),w,b
 17227  0042F6  5DBE               	subwf	??_aCaptGetResult& (0+255),w,b
 17228  0042F8  6FC4               	movwf	aCaptGetResult@lclRaw& (0+255),b
 17229  0042FA  51C5               	movf	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 17230  0042FC  59BF               	subwfb	(??_aCaptGetResult+1)& (0+255),w,b
 17231  0042FE  6FC5               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 17232  004300  51C6               	movf	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 17233  004302  59C0               	subwfb	(??_aCaptGetResult+2)& (0+255),w,b
 17234  004304  6FC6               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 17235  004306  51C7               	movf	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 17236  004308  59C1               	subwfb	(??_aCaptGetResult+3)& (0+255),w,b
 17237  00430A  6FC7               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 17238                           
 17239                           ; BSR set to: 1
 17240                           ;aCapture.c: 189:                 *outVal = - (lclRaw/1);
 17241  00430C  0060  F710  F1BE   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 17242  004312  0060  F714  F1BF   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 17243  004318  1FBE               	comf	??_aCaptGetResult& (0+255),f,b
 17244  00431A  1FBF               	comf	(??_aCaptGetResult+1)& (0+255),f,b
 17245  00431C  4BBE               	infsnz	??_aCaptGetResult& (0+255),f,b
 17246  00431E  2BBF               	incf	(??_aCaptGetResult+1)& (0+255),f,b
 17247  004320  D035               	goto	L22
 17248  004322                     l14121:
 17249                           
 17250                           ; BSR set to: 1
 17251                           ;aCapture.c: 191:                 lclRaw = lclRaw - mainPSensCal;
 17252  004322  0060  F7C8  F1BE   	movff	_mainPSensCal,??_aCaptGetResult
 17253  004328  0060  F7CC  F1BF   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 17254  00432E  0E00               	movlw	0
 17255  004330  BFBF               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 17256  004332  0EFF               	movlw	255
 17257  004334  6FC0               	movwf	(??_aCaptGetResult+2)& (0+255),b
 17258  004336  6FC1               	movwf	(??_aCaptGetResult+3)& (0+255),b
 17259  004338  51BE               	movf	??_aCaptGetResult& (0+255),w,b
 17260  00433A  5DC4               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 17261  00433C  6FC4               	movwf	aCaptGetResult@lclRaw& (0+255),b
 17262  00433E  51BF               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 17263  004340  59C5               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 17264  004342  6FC5               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 17265  004344  51C0               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 17266  004346  59C6               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 17267  004348  6FC6               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 17268  00434A  51C1               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 17269  00434C  59C7               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 17270  00434E  6FC7               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 17271                           
 17272                           ; BSR set to: 1
 17273                           ;aCapture.c: 192:                 *outVal=(lclRaw/1);
 17274  004350  0060  F6F3  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 17275  004356  0060  F6F7  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 17276  00435C  0060  F713  FFDE   	movff	aCaptGetResult@lclRaw,postinc2
 17277  004362  0060  F717  FFDD   	movff	aCaptGetResult@lclRaw+1,postdec2
 17278  004368                     l14125:
 17279                           
 17280                           ; BSR set to: 1
 17281                           ;aCapture.c: 194:             return 1;
 17282  004368  0E01               	movlw	1
 17283  00436A  0012               	return	
 17284  00436C                     l14129:
 17285                           
 17286                           ; BSR set to: 1
 17287                           ;aCapture.c: 196:             *outVal = (lclRaw - auxPSensCal)/1;
 17288  00436C  51F0               	movf	_auxPSensCal& (0+255),w,b
 17289  00436E  5DC4               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 17290  004370  6FBE               	movwf	??_aCaptGetResult& (0+255),b
 17291  004372  51F1               	movf	(_auxPSensCal+1)& (0+255),w,b
 17292  004374  59C5               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 17293  004376  6FBF               	movwf	(??_aCaptGetResult+1)& (0+255),b
 17294  004378  D009               	goto	L22
 17295  00437A                     l14135:
 17296                           
 17297                           ; BSR set to: 1
 17298                           ;aCapture.c: 199:             *outVal = lclRaw<<1;
 17299  00437A  0060  F710  F1BE   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 17300  004380  0060  F714  F1BF   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 17301  004386  90D8               	bcf	status,0,c
 17302  004388  37BE               	rlcf	??_aCaptGetResult& (0+255),f,b
 17303  00438A  37BF               	rlcf	(??_aCaptGetResult+1)& (0+255),f,b
 17304  00438C                     L22:
 17305  00438C  0060  F6F3  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 17306  004392  0060  F6F7  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 17307  004398  0060  F6FB  FFDE   	movff	??_aCaptGetResult,postinc2
 17308  00439E  0060  F6FF  FFDD   	movff	??_aCaptGetResult+1,postdec2
 17309  0043A4  D7E1               	goto	l14125
 17310  0043A6                     l1702:
 17311                           
 17312                           ; BSR set to: 1
 17313                           ;aCapture.c: 203:             LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",10
      +                          4);
 17314  0043A6  94BA               	bcf	186,2,c	;volatile
 17315  0043A8  96BA               	bcf	186,3,c	;volatile
 17316                           
 17317                           ; BSR set to: 1
 17318  0043AA  0EEC               	movlw	low STR_10
 17319  0043AC  6FA6               	movwf	printf@fmt& (0+255),b
 17320  0043AE  0EFF               	movlw	high STR_10
 17321  0043B0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
 17322  0043B2  0E00               	movlw	0
 17323  0043B4  6FA9               	movwf	(?_printf+3)& (0+255),b
 17324  0043B6  0E68               	movlw	104
 17325  0043B8  6FA8               	movwf	(?_printf+2)& (0+255),b
 17326  0043BA  EC84  F039         	call	_printf	;wreg free
 17327                           
 17328                           ;aCapture.c: 204:     }
 17329  0043BE  0012               	return	
 17330  0043C0                     l14143:
 17331                           
 17332                           ; BSR set to: 1
 17333  0043C0  51C3               	movf	aCaptGetResult@sel& (0+255),w,b
 17334  0043C2  6FBE               	movwf	??_aCaptGetResult& (0+255),b
 17335  0043C4  6BBF               	clrf	(??_aCaptGetResult+1)& (0+255),b
 17336                           
 17337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17338                           ; Switch size 1, requested type "simple"
 17339                           ; Number of cases is 1, Range of values is 0 to 0
 17340                           ; switch strategies available:
 17341                           ; Name         Instructions Cycles
 17342                           ; simple_byte            4     3 (average)
 17343                           ;	Chosen strategy is simple_byte
 17344  0043C6  51BF               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 17345  0043C8  0A00               	xorlw	0	; case 0
 17346  0043CA  A4D8               	btfss	status,2,c
 17347  0043CC  D7EC               	goto	l1702
 17348                           
 17349                           ; BSR set to: 1
 17350                           ; Switch size 1, requested type "simple"
 17351                           ; Number of cases is 7, Range of values is 0 to 6
 17352                           ; switch strategies available:
 17353                           ; Name         Instructions Cycles
 17354                           ; simple_byte           22    12 (average)
 17355                           ;	Chosen strategy is simple_byte
 17356  0043CE  51BE               	movf	??_aCaptGetResult& (0+255),w,b
 17357  0043D0  0A00               	xorlw	0	; case 0
 17358  0043D2  B4D8               	btfsc	status,2,c
 17359  0043D4  D76F               	goto	l1696
 17360  0043D6  0A01               	xorlw	1	; case 1
 17361  0043D8  B4D8               	btfsc	status,2,c
 17362  0043DA  D7C8               	goto	l14129
 17363  0043DC  0A03               	xorlw	3	; case 2
 17364  0043DE  B4D8               	btfsc	status,2,c
 17365  0043E0  D7CC               	goto	l14135
 17366  0043E2  0A01               	xorlw	1	; case 3
 17367  0043E4  B4D8               	btfsc	status,2,c
 17368  0043E6  D766               	goto	l1696
 17369  0043E8  0A07               	xorlw	7	; case 4
 17370  0043EA  B4D8               	btfsc	status,2,c
 17371  0043EC  D763               	goto	l1696
 17372  0043EE  0A01               	xorlw	1	; case 5
 17373  0043F0  B4D8               	btfsc	status,2,c
 17374  0043F2  D760               	goto	l1696
 17375  0043F4  0A03               	xorlw	3	; case 6
 17376  0043F6  B4D8               	btfsc	status,2,c
 17377  0043F8  D75D               	goto	l1696
 17378  0043FA  D7D5               	goto	l1702
 17379  0043FC                     __end_of_aCaptGetResult:
 17380                           	opt callstack 0
 17381                           
 17382 ;; *************** function _printf *****************
 17383 ;; Defined at:
 17384 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 17385 ;; Parameters:    Size  Location     Type
 17386 ;;  fmt             2   44[BANK1 ] PTR const unsigned char 
 17387 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 17388 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 17389 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 17390 ;;		 -> STR_41(5), STR_39(56), STR_38(20), STR_37(17), 
 17391 ;;		 -> STR_36(23), STR_35(20), STR_34(28), STR_33(5), 
 17392 ;;		 -> STR_24(37), STR_23(38), STR_21(37), STR_20(38), 
 17393 ;;		 -> STR_18(9), STR_17(9), lcdTopRow(20), STR_11(27), 
 17394 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 17395 ;;		 -> STR_3(10), lcdBtnRow(20), STR_1(16), 
 17396 ;; Auto vars:     Size  Location     Type
 17397 ;;  ap              2   64[BANK1 ] PTR void [1]
 17398 ;;		 -> ?_printf(2), ?_sprintf(2), 
 17399 ;;  ret             2    0        int 
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  2   44[BANK1 ] int 
 17402 ;; Registers used:
 17403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 3E/1
 17406 ;;		On exit  : 0/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17409 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17410 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17412 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17413 ;;Total ram usage:       22 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:   21
 17416 ;; This function calls:
 17417 ;;		_vfprintf
 17418 ;; This function is called by:
 17419 ;;		_MonitorMsgForcedSend
 17420 ;;		_InitProcedure
 17421 ;;		_main
 17422 ;;		_adcGetCh
 17423 ;;		_aCaptureSetOff
 17424 ;;		_aCaptRstFlt
 17425 ;;		_aCaptGetResult
 17426 ;;		_MenuMng
 17427 ;;		_screenMng
 17428 ;; This function uses a non-reentrant model
 17429 ;;
 17430                           
 17431                           	psect	text82
 17432  007308                     __ptext82:
 17433                           	opt callstack 0
 17434  007308                     _printf:
 17435                           	opt callstack 8
 17436                           
 17437                           ;incstack = 0
 17438  007308  0EA8               	movlw	low (?_printf+2)
 17439  00730A  0101               	movlb	1	; () banked
 17440  00730C  6FBA               	movwf	printf@ap& (0+255),b
 17441  00730E  0E01               	movlw	high (?_printf+2)
 17442  007310  6FBB               	movwf	(printf@ap+1)& (0+255),b
 17443                           
 17444                           ; BSR set to: 1
 17445  007312  0E00               	movlw	0
 17446  007314  6FA0               	movwf	vfprintf@fp& (0+255),b
 17447  007316  0E00               	movlw	0
 17448  007318  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
 17449  00731A  0060  F698  F1A2   	movff	printf@fmt,vfprintf@fmt
 17450  007320  0060  F69C  F1A3   	movff	printf@fmt+1,vfprintf@fmt+1
 17451  007326  0EBA               	movlw	low printf@ap
 17452  007328  6FA4               	movwf	vfprintf@ap& (0+255),b
 17453  00732A  0E01               	movlw	high printf@ap
 17454  00732C  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
 17455  00732E  EC78  F030         	call	_vfprintf	;wreg free
 17456  007332  0012               	return		;funcret
 17457  007334                     __end_of_printf:
 17458                           	opt callstack 0
 17459                           
 17460 ;; *************** function _vfprintf *****************
 17461 ;; Defined at:
 17462 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17463 ;; Parameters:    Size  Location     Type
 17464 ;;  fp              2   38[BANK1 ] PTR struct _IO_FILE
 17465 ;;		 -> sprintf@f(6), NULL(0), 
 17466 ;;  fmt             2   40[BANK1 ] PTR const unsigned char 
 17467 ;;		 -> STR_67(17), STR_66(18), STR_65(18), STR_64(20), 
 17468 ;;		 -> STR_63(20), STR_62(20), STR_61(20), STR_60(20), 
 17469 ;;		 -> STR_59(20), STR_58(20), STR_57(20), STR_56(21), 
 17470 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 17471 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 17472 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 17473 ;;		 -> STR_41(5), STR_40(10), STR_39(56), STR_38(20), 
 17474 ;;		 -> STR_37(17), STR_36(23), STR_35(20), STR_34(28), 
 17475 ;;		 -> STR_33(5), STR_27(18), STR_24(37), STR_23(38), 
 17476 ;;		 -> STR_21(37), STR_20(38), STR_19(19), STR_18(9), 
 17477 ;;		 -> STR_17(9), STR_13(17), lcdTopRow(20), STR_11(27), 
 17478 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 17479 ;;		 -> STR_4(17), STR_3(10), STR_2(17), lcdBtnRow(20), 
 17480 ;;		 -> STR_1(16), 
 17481 ;;  ap              2   42[BANK1 ] PTR PTR void 
 17482 ;;		 -> printf@ap(2), sprintf@ap(2), 
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;  cfmt            2   88[BANK0 ] PTR unsigned char 
 17485 ;;		 -> STR_67(17), STR_66(18), STR_65(18), STR_64(20), 
 17486 ;;		 -> STR_63(20), STR_62(20), STR_61(20), STR_60(20), 
 17487 ;;		 -> STR_59(20), STR_58(20), STR_57(20), STR_56(21), 
 17488 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 17489 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 17490 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 17491 ;;		 -> STR_41(5), STR_40(10), STR_39(56), STR_38(20), 
 17492 ;;		 -> STR_37(17), STR_36(23), STR_35(20), STR_34(28), 
 17493 ;;		 -> STR_33(5), STR_27(18), STR_24(37), STR_23(38), 
 17494 ;;		 -> STR_21(37), STR_20(38), STR_19(19), STR_18(9), 
 17495 ;;		 -> STR_17(9), STR_13(17), lcdTopRow(20), STR_11(27), 
 17496 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 17497 ;;		 -> STR_4(17), STR_3(10), STR_2(17), lcdBtnRow(20), 
 17498 ;;		 -> STR_1(16), 
 17499 ;; Return value:  Size  Location     Type
 17500 ;;                  2   38[BANK1 ] int 
 17501 ;; Registers used:
 17502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17503 ;; Tracked objects:
 17504 ;;		On entry : 3F/1
 17505 ;;		On exit  : 0/0
 17506 ;;		Unchanged: 0/0
 17507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17508 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17511 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17512 ;;Total ram usage:        8 bytes
 17513 ;; Hardware stack levels used:    1
 17514 ;; Hardware stack levels required when called:   20
 17515 ;; This function calls:
 17516 ;;		_vfpfcnvrt
 17517 ;; This function is called by:
 17518 ;;		_sprintf
 17519 ;;		_printf
 17520 ;; This function uses a non-reentrant model
 17521 ;;
 17522                           
 17523                           	psect	text83
 17524  0060F0                     __ptext83:
 17525                           	opt callstack 0
 17526  0060F0                     _vfprintf:
 17527                           	opt callstack 9
 17528                           
 17529                           ; BSR set to: 1
 17530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 17531                           
 17532                           ;incstack = 0
 17533  0060F0  0060  F688  F0B8   	movff	vfprintf@fmt,vfprintf@cfmt
 17534  0060F6  0060  F68C  F0B9   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 17535                           
 17536                           ; BSR set to: 1
 17537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 17538  0060FC  0E00               	movlw	0
 17539  0060FE  0100               	movlb	0	; () banked
 17540  006100  6FC1               	movwf	(_nout+1)& (0+255),b
 17541  006102  0E00               	movlw	0
 17542  006104  6FC0               	movwf	_nout& (0+255),b
 17543                           
 17544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 17545  006106  D015               	goto	l13811
 17546  006108                     l13809:
 17547                           
 17548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 17549  006108  0060  F680  F0B3   	movff	vfprintf@fp,vfpfcnvrt@fp
 17550  00610E  0060  F684  F0B4   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 17551  006114  0EB8               	movlw	low vfprintf@cfmt
 17552  006116  0100               	movlb	0	; () banked
 17553  006118  6FB5               	movwf	vfpfcnvrt@fmt& (0+255),b
 17554  00611A  0060  F690  F0B6   	movff	vfprintf@ap,vfpfcnvrt@ap
 17555  006120  0060  F694  F0B7   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 17556  006126  EC66  F010         	call	_vfpfcnvrt	;wreg free
 17557  00612A  51B3               	movf	?_vfpfcnvrt& (0+255),w,b
 17558  00612C  27C0               	addwf	_nout& (0+255),f,b
 17559  00612E  51B4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 17560  006130  23C1               	addwfc	(_nout+1)& (0+255),f,b
 17561  006132                     l13811:
 17562                           
 17563                           ; BSR set to: 0
 17564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 17565  006132  0060  F2E3  FFF6   	movff	vfprintf@cfmt,tblptrl
 17566  006138  0060  F2E7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 17567  00613E  0E00               	movlw	low (__mediumconst shr (0+16))
 17568  006140  6EF8               	movwf	tblptru,c
 17569  006142  0E0F               	movlw	(high __ramtop+-1)
 17570  006144  64F7               	cpfsgt	tblptrh,c
 17571  006146  D003               	bra	u13177
 17572  006148  0008               	tblrd		*
 17573  00614A  50F5               	movf	tablat,w,c
 17574  00614C  D007               	bra	u13170
 17575  00614E                     u13177:
 17576  00614E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17577  006154  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17578  00615A  50EF               	movf	indf0,w,c
 17579  00615C                     u13170:
 17580  00615C  0900               	iorlw	0
 17581  00615E  A4D8               	btfss	status,2,c
 17582  006160  D7D3               	goto	l13809
 17583                           
 17584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 17585  006162  0060  F300  F1A0   	movff	_nout,?_vfprintf
 17586  006168  0060  F304  F1A1   	movff	_nout+1,?_vfprintf+1
 17587  00616E  0012               	return		;funcret
 17588  006170                     __end_of_vfprintf:
 17589                           	opt callstack 0
 17590                           
 17591 ;; *************** function _vfpfcnvrt *****************
 17592 ;; Defined at:
 17593 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
 17596 ;;		 -> sprintf@f(6), NULL(0), 
 17597 ;;  fmt             1   85[BANK0 ] PTR PTR unsigned char 
 17598 ;;		 -> vfprintf@cfmt(2), 
 17599 ;;  ap              2   86[BANK0 ] PTR PTR void 
 17600 ;;		 -> printf@ap(2), sprintf@ap(2), 
 17601 ;; Auto vars:     Size  Location     Type
 17602 ;;  ll              8   24[BANK1 ] long long 
 17603 ;;  llu             8    0        unsigned long long 
 17604 ;;  f               4    0        unsigned long long 
 17605 ;;  ct              3    0        unsigned char [3]
 17606 ;;  cp              3    0        PTR unsigned char 
 17607 ;;  done            2   34[BANK1 ] int 
 17608 ;;  vp              2   32[BANK1 ] PTR void 
 17609 ;;		 -> ?_printf(2), ?_sprintf(2), resultTbl(28), main@pInspOS(2), 
 17610 ;;		 -> main@pExpOS(2), 
 17611 ;;  i               2    0        int 
 17612 ;;  c               1    0        unsigned char 
 17613 ;; Return value:  Size  Location     Type
 17614 ;;                  2   83[BANK0 ] int 
 17615 ;; Registers used:
 17616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17617 ;; Tracked objects:
 17618 ;;		On entry : 3F/0
 17619 ;;		On exit  : 3F/0
 17620 ;;		Unchanged: 0/0
 17621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17622 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17623 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17624 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17625 ;;      Totals:         0       5      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17626 ;;Total ram usage:       25 bytes
 17627 ;; Hardware stack levels used:    1
 17628 ;; Hardware stack levels required when called:   19
 17629 ;; This function calls:
 17630 ;;		_atoi
 17631 ;;		_dtoa
 17632 ;;		_fputc
 17633 ;;		_isdigit
 17634 ;; This function is called by:
 17635 ;;		_vfprintf
 17636 ;; This function uses a non-reentrant model
 17637 ;;
 17638                           
 17639                           	psect	text84
 17640  0020CC                     __ptext84:
 17641                           	opt callstack 0
 17642  0020CC                     _vfpfcnvrt:
 17643                           	opt callstack 9
 17644                           
 17645                           ; BSR set to: 0
 17646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 17647                           
 17648                           ;incstack = 0
 17649  0020CC  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17650  0020CE  6ED9               	movwf	fsr2l,c
 17651  0020D0  6ADA               	clrf	fsr2h,c
 17652  0020D2  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 17653  0020D8  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 17654  0020DE  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 17655  0020E4  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 17656  0020EA  0E00               	movlw	low (__mediumconst shr (0+16))
 17657  0020EC  6EF8               	movwf	tblptru,c
 17658  0020EE  0E0F               	movlw	(high __ramtop+-1)
 17659  0020F0  64F7               	cpfsgt	tblptrh,c
 17660  0020F2  D003               	bra	u12727
 17661  0020F4  0008               	tblrd		*
 17662  0020F6  50F5               	movf	tablat,w,c
 17663  0020F8  D007               	bra	u12720
 17664  0020FA                     u12727:
 17665  0020FA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17666  002100  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17667  002106  50EF               	movf	indf0,w,c
 17668  002108                     u12720:
 17669  002108  0A25               	xorlw	37
 17670  00210A  A4D8               	btfss	status,2,c
 17671  00210C  D240               	goto	l13623
 17672                           
 17673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 17674  00210E  0100               	movlb	0	; () banked
 17675  002110  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17676  002112  6ED9               	movwf	fsr2l,c
 17677  002114  6ADA               	clrf	fsr2h,c
 17678  002116  2ADE               	incf	postinc2,f,c
 17679  002118  0E00               	movlw	0
 17680  00211A  22DD               	addwfc	postdec2,f,c
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 17684  00211C  0E00               	movlw	0
 17685  00211E  6FC3               	movwf	(_width+1)& (0+255),b
 17686  002120  0E00               	movlw	0
 17687  002122  6FC2               	movwf	_width& (0+255),b
 17688  002124  C0C2  F0C6         	movff	_width,_flags
 17689  002128  C0C3  F0C7         	movff	_width+1,_flags+1
 17690                           
 17691                           ; BSR set to: 0
 17692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 17693  00212C  69C4               	setf	_prec& (0+255),b
 17694  00212E  69C5               	setf	(_prec+1)& (0+255),b
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 17698  002130  0E00               	movlw	0
 17699  002132  0101               	movlb	1	; () banked
 17700  002134  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 17701  002136  0E00               	movlw	0
 17702  002138  D018               	goto	L23
 17703  00213A                     l13539:
 17704                           
 17705                           ; BSR set to: 1
 17706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 17707  00213A  0100               	movlb	0	; () banked
 17708  00213C  81C6               	bsf	_flags& (0+255),0,b
 17709  00213E                     l13541:
 17710                           
 17711                           ; BSR set to: 0
 17712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 17713  00213E  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17714  002140  6ED9               	movwf	fsr2l,c
 17715  002142  6ADA               	clrf	fsr2h,c
 17716  002144  2ADE               	incf	postinc2,f,c
 17717  002146  0E00               	movlw	0
 17718  002148  22DD               	addwfc	postdec2,f,c
 17719                           
 17720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 17721  00214A  D048               	goto	l13565
 17722  00214C                     l13543:
 17723                           
 17724                           ; BSR set to: 1
 17725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 17726  00214C  0100               	movlb	0	; () banked
 17727  00214E  83C6               	bsf	_flags& (0+255),1,b
 17728  002150  D7F6               	goto	l13541
 17729  002152                     l13547:
 17730                           
 17731                           ; BSR set to: 1
 17732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 17733  002152  0100               	movlb	0	; () banked
 17734  002154  85C6               	bsf	_flags& (0+255),2,b
 17735  002156  D7F3               	goto	l13541
 17736  002158                     l13551:
 17737                           
 17738                           ; BSR set to: 1
 17739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 17740  002158  0100               	movlb	0	; () banked
 17741  00215A  87C6               	bsf	_flags& (0+255),3,b
 17742  00215C  D7F0               	goto	l13541
 17743  00215E                     l13555:
 17744                           
 17745                           ; BSR set to: 1
 17746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 17747  00215E  0100               	movlb	0	; () banked
 17748  002160  89C6               	bsf	_flags& (0+255),4,b
 17749  002162  D7ED               	goto	l13541
 17750  002164                     l13559:
 17751                           
 17752                           ; BSR set to: 1
 17753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 17754  002164  0E00               	movlw	0
 17755  002166  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 17756  002168  0E01               	movlw	1
 17757  00216A                     L23:
 17758  00216A  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
 17759                           
 17760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 17761  00216C  D037               	goto	l13565
 17762  00216E                     l13563:
 17763                           
 17764                           ; BSR set to: 1
 17765  00216E  0100               	movlb	0	; () banked
 17766  002170  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17767  002172  6ED9               	movwf	fsr2l,c
 17768  002174  6ADA               	clrf	fsr2h,c
 17769  002176  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 17770  00217C  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 17771  002182  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 17772  002188  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 17773  00218E  0E00               	movlw	low (__mediumconst shr (0+16))
 17774  002190  6EF8               	movwf	tblptru,c
 17775  002192  0E0F               	movlw	(high __ramtop+-1)
 17776  002194  64F7               	cpfsgt	tblptrh,c
 17777  002196  D003               	bra	u12747
 17778  002198  0008               	tblrd		*
 17779  00219A  50F5               	movf	tablat,w,c
 17780  00219C  D007               	bra	u12740
 17781  00219E                     u12747:
 17782  00219E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17783  0021A4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17784  0021AA  50EF               	movf	indf0,w,c
 17785  0021AC                     u12740:
 17786  0021AC  0101               	movlb	1	; () banked
 17787  0021AE  6F8E               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 17788  0021B0  6B8F               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 17789                           
 17790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17791                           ; Switch size 1, requested type "simple"
 17792                           ; Number of cases is 1, Range of values is 0 to 0
 17793                           ; switch strategies available:
 17794                           ; Name         Instructions Cycles
 17795                           ; simple_byte            4     3 (average)
 17796                           ;	Chosen strategy is simple_byte
 17797  0021B2  518F               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 17798  0021B4  0A00               	xorlw	0	; case 0
 17799  0021B6  A4D8               	btfss	status,2,c
 17800  0021B8  D7D5               	goto	l13559
 17801                           
 17802                           ; BSR set to: 1
 17803                           ; Switch size 1, requested type "simple"
 17804                           ; Number of cases is 5, Range of values is 32 to 48
 17805                           ; switch strategies available:
 17806                           ; Name         Instructions Cycles
 17807                           ; simple_byte           16     9 (average)
 17808                           ;	Chosen strategy is simple_byte
 17809  0021BA  518E               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
 17810  0021BC  0A20               	xorlw	32	; case 32
 17811  0021BE  B4D8               	btfsc	status,2,c
 17812  0021C0  D7CB               	goto	l13551
 17813  0021C2  0A03               	xorlw	3	; case 35
 17814  0021C4  B4D8               	btfsc	status,2,c
 17815  0021C6  D7CB               	goto	l13555
 17816  0021C8  0A08               	xorlw	8	; case 43
 17817  0021CA  B4D8               	btfsc	status,2,c
 17818  0021CC  D7C2               	goto	l13547
 17819  0021CE  0A06               	xorlw	6	; case 45
 17820  0021D0  B4D8               	btfsc	status,2,c
 17821  0021D2  D7B3               	goto	l13539
 17822  0021D4  0A1D               	xorlw	29	; case 48
 17823  0021D6  B4D8               	btfsc	status,2,c
 17824  0021D8  D7B9               	goto	l13543
 17825  0021DA  D7C4               	goto	l13559
 17826  0021DC                     l13565:
 17827                           
 17828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 17829  0021DC  0101               	movlb	1	; () banked
 17830  0021DE  519C               	movf	vfpfcnvrt@done& (0+255),w,b
 17831  0021E0  119D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 17832  0021E2  B4D8               	btfsc	status,2,c
 17833  0021E4  D7C4               	goto	l13563
 17834                           
 17835                           ; BSR set to: 1
 17836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 17837  0021E6  0100               	movlb	0	; () banked
 17838  0021E8  B1C6               	btfsc	_flags& (0+255),0,b
 17839                           
 17840                           ; BSR set to: 0
 17841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 17842  0021EA  93C6               	bcf	_flags& (0+255),1,b
 17843                           
 17844                           ; BSR set to: 0
 17845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 17846  0021EC  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17847  0021EE  6ED9               	movwf	fsr2l,c
 17848  0021F0  6ADA               	clrf	fsr2h,c
 17849  0021F2  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 17850  0021F8  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 17851  0021FE  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 17852  002204  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 17853  00220A  0E00               	movlw	low (__mediumconst shr (0+16))
 17854  00220C  6EF8               	movwf	tblptru,c
 17855  00220E  0E0F               	movlw	(high __ramtop+-1)
 17856  002210  64F7               	cpfsgt	tblptrh,c
 17857  002212  D003               	bra	u12777
 17858  002214  0008               	tblrd		*
 17859  002216  50F5               	movf	tablat,w,c
 17860  002218  D007               	bra	u12770
 17861  00221A                     u12777:
 17862  00221A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17863  002220  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17864  002226  50EF               	movf	indf0,w,c
 17865  002228                     u12770:
 17866  002228  0A2A               	xorlw	42
 17867  00222A  A4D8               	btfss	status,2,c
 17868  00222C  D02B               	goto	l13577
 17869                           
 17870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 17871  00222E  0100               	movlb	0	; () banked
 17872  002230  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17873  002232  6ED9               	movwf	fsr2l,c
 17874  002234  6ADA               	clrf	fsr2h,c
 17875  002236  2ADE               	incf	postinc2,f,c
 17876  002238  0E00               	movlw	0
 17877  00223A  22DD               	addwfc	postdec2,f,c
 17878                           
 17879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 17880  00223C  0060  F2DB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 17881  002242  0060  F2DF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 17882  002248  006F FF7C  F18C    	movff	indf2,??_vfpfcnvrt
 17883  00224E  0E02               	movlw	2
 17884  002250  26DE               	addwf	postinc2,f,c
 17885  002252  006F FF7C  F18D    	movff	indf2,??_vfpfcnvrt+1
 17886  002258  0E00               	movlw	0
 17887  00225A  22DD               	addwfc	postdec2,f,c
 17888  00225C  0060  F633  FFD9   	movff	??_vfpfcnvrt,fsr2l
 17889  002262  0060  F637  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 17890  002268  006F FF78  F0C2    	movff	postinc2,_width
 17891  00226E  006F FF74  F0C3    	movff	postdec2,_width+1
 17892                           
 17893                           ; BSR set to: 0
 17894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 17895  002274  AFC3               	btfss	(_width+1)& (0+255),7,b
 17896  002276  D05A               	goto	u12830
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 17900  002278  81C6               	bsf	_flags& (0+255),0,b
 17901                           
 17902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 17903  00227A  6DC2               	negf	_width& (0+255),b
 17904  00227C  1FC3               	comf	(_width+1)& (0+255),f,b
 17905  00227E  B0D8               	btfsc	status,0,c
 17906  002280  2BC3               	incf	(_width+1)& (0+255),f,b
 17907  002282  D054               	goto	u12830
 17908  002284                     l13577:
 17909                           
 17910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 17911  002284  0100               	movlb	0	; () banked
 17912  002286  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17913  002288  6ED9               	movwf	fsr2l,c
 17914  00228A  6ADA               	clrf	fsr2h,c
 17915  00228C  006F FF78  F08B    	movff	postinc2,atoi@s
 17916  002292  006F FF74  F08C    	movff	postdec2,atoi@s+1
 17917  002298  ECFE  F021         	call	_atoi	;wreg free
 17918  00229C  0060  F22C  F0C2   	movff	?_atoi,_width
 17919  0022A2  0060  F230  F0C3   	movff	?_atoi+1,_width+1
 17920                           
 17921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 17922  0022A8  D007               	goto	l13581
 17923  0022AA                     l13579:
 17924                           
 17925                           ; BSR set to: 1
 17926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 17927  0022AA  0100               	movlb	0	; () banked
 17928  0022AC  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17929  0022AE  6ED9               	movwf	fsr2l,c
 17930  0022B0  6ADA               	clrf	fsr2h,c
 17931  0022B2  2ADE               	incf	postinc2,f,c
 17932  0022B4  0E00               	movlw	0
 17933  0022B6  22DD               	addwfc	postdec2,f,c
 17934  0022B8                     l13581:
 17935                           
 17936                           ; BSR set to: 0
 17937  0022B8  0ED0               	movlw	208
 17938  0022BA  0101               	movlb	1	; () banked
 17939  0022BC  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
 17940  0022BE  0EFF               	movlw	255
 17941  0022C0  6F8D               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 17942  0022C2  0100               	movlb	0	; () banked
 17943  0022C4  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17944  0022C6  6ED9               	movwf	fsr2l,c
 17945  0022C8  6ADA               	clrf	fsr2h,c
 17946  0022CA  006F FF78  F18E    	movff	postinc2,??_vfpfcnvrt+2
 17947  0022D0  006F FF74  F18F    	movff	postdec2,??_vfpfcnvrt+3
 17948  0022D6  0060  F63B  FFF6   	movff	??_vfpfcnvrt+2,tblptrl
 17949  0022DC  0060  F63F  FFF7   	movff	??_vfpfcnvrt+3,tblptrh
 17950  0022E2  0E00               	movlw	low (__mediumconst shr (0+16))
 17951  0022E4  6EF8               	movwf	tblptru,c
 17952  0022E6  0E0F               	movlw	(high __ramtop+-1)
 17953  0022E8  64F7               	cpfsgt	tblptrh,c
 17954  0022EA  D003               	bra	u12807
 17955  0022EC  0008               	tblrd		*
 17956  0022EE  50F5               	movf	tablat,w,c
 17957  0022F0  D007               	bra	u12800
 17958  0022F2                     u12807:
 17959  0022F2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17960  0022F8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17961  0022FE  50EF               	movf	indf0,w,c
 17962  002300                     u12800:
 17963  002300  0101               	movlb	1	; () banked
 17964  002302  6F90               	movwf	(??_vfpfcnvrt+4)& (0+255),b
 17965  002304  6B91               	clrf	(??_vfpfcnvrt+5)& (0+255),b
 17966  002306  518C               	movf	??_vfpfcnvrt& (0+255),w,b
 17967  002308  2790               	addwf	(??_vfpfcnvrt+4)& (0+255),f,b
 17968  00230A  518D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 17969  00230C  2391               	addwfc	(??_vfpfcnvrt+5)& (0+255),f,b
 17970  00230E  5191               	movf	(??_vfpfcnvrt+5)& (0+255),w,b
 17971  002310  E106               	bnz	u12810
 17972  002312  0E0A               	movlw	10
 17973  002314  5D90               	subwf	(??_vfpfcnvrt+4)& (0+255),w,b
 17974  002316  B0D8               	btfsc	status,0,c
 17975  002318  D002               	goto	u12810
 17976  00231A  0E01               	movlw	1
 17977  00231C  D001               	goto	u12820
 17978  00231E                     u12810:
 17979  00231E  0E00               	movlw	0
 17980  002320                     u12820:
 17981  002320  6F9E               	movwf	_vfpfcnvrt$3691& (0+255),b
 17982  002322  6B9F               	clrf	(_vfpfcnvrt$3691+1)& (0+255),b
 17983                           
 17984                           ; BSR set to: 1
 17985  002324  519E               	movf	_vfpfcnvrt$3691& (0+255),w,b
 17986  002326  119F               	iorwf	(_vfpfcnvrt$3691+1)& (0+255),w,b
 17987  002328  A4D8               	btfss	status,2,c
 17988  00232A  D7BF               	goto	l13579
 17989  00232C                     u12830:
 17990                           
 17991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 17992  00232C  0100               	movlb	0	; () banked
 17993  00232E  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 17994  002330  6ED9               	movwf	fsr2l,c
 17995  002332  6ADA               	clrf	fsr2h,c
 17996  002334  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 17997  00233A  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 17998  002340  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 17999  002346  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 18000  00234C  0E00               	movlw	low (__mediumconst shr (0+16))
 18001  00234E  6EF8               	movwf	tblptru,c
 18002  002350  0E0F               	movlw	(high __ramtop+-1)
 18003  002352  64F7               	cpfsgt	tblptrh,c
 18004  002354  D003               	bra	u12847
 18005  002356  0008               	tblrd		*
 18006  002358  50F5               	movf	tablat,w,c
 18007  00235A  D007               	bra	u12840
 18008  00235C                     u12847:
 18009  00235C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18010  002362  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18011  002368  50EF               	movf	indf0,w,c
 18012  00236A                     u12840:
 18013  00236A  0A64               	xorlw	100
 18014  00236C  B4D8               	btfsc	status,2,c
 18015  00236E  D022               	goto	u12870
 18016  002370  0100               	movlb	0	; () banked
 18017  002372  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18018  002374  6ED9               	movwf	fsr2l,c
 18019  002376  6ADA               	clrf	fsr2h,c
 18020  002378  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 18021  00237E  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 18022  002384  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 18023  00238A  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 18024  002390  0E00               	movlw	low (__mediumconst shr (0+16))
 18025  002392  6EF8               	movwf	tblptru,c
 18026  002394  0E0F               	movlw	(high __ramtop+-1)
 18027  002396  64F7               	cpfsgt	tblptrh,c
 18028  002398  D003               	bra	u12867
 18029  00239A  0008               	tblrd		*
 18030  00239C  50F5               	movf	tablat,w,c
 18031  00239E  D007               	bra	u12860
 18032  0023A0                     u12867:
 18033  0023A0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18034  0023A6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18035  0023AC  50EF               	movf	indf0,w,c
 18036  0023AE                     u12860:
 18037  0023AE  0A69               	xorlw	105
 18038  0023B0  A4D8               	btfss	status,2,c
 18039  0023B2  D054               	goto	l13597
 18040  0023B4                     u12870:
 18041                           
 18042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 18043  0023B4  0100               	movlb	0	; () banked
 18044  0023B6  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18045  0023B8  6ED9               	movwf	fsr2l,c
 18046  0023BA  6ADA               	clrf	fsr2h,c
 18047  0023BC  2ADE               	incf	postinc2,f,c
 18048  0023BE  0E00               	movlw	0
 18049  0023C0  22DD               	addwfc	postdec2,f,c
 18050                           
 18051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 18052  0023C2  0060  F2DB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 18053  0023C8  0060  F2DF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 18054  0023CE  006F FF7C  F18C    	movff	indf2,??_vfpfcnvrt
 18055  0023D4  0E02               	movlw	2
 18056  0023D6  26DE               	addwf	postinc2,f,c
 18057  0023D8  006F FF7C  F18D    	movff	indf2,??_vfpfcnvrt+1
 18058  0023DE  0E00               	movlw	0
 18059  0023E0  22DD               	addwfc	postdec2,f,c
 18060  0023E2  0060  F633  FFD9   	movff	??_vfpfcnvrt,fsr2l
 18061  0023E8  0060  F637  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 18062  0023EE  006F FF78  F192    	movff	postinc2,vfpfcnvrt@ll
 18063  0023F4  006F FF74  F193    	movff	postdec2,vfpfcnvrt@ll+1
 18064  0023FA  0101               	movlb	1	; () banked
 18065  0023FC  0E00               	movlw	0
 18066  0023FE  BF93               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 18067  002400  0EFF               	movlw	-1
 18068  002402  6F94               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 18069  002404  6F95               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 18070  002406  6F96               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 18071  002408  6F97               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 18072  00240A  6F98               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 18073  00240C  6F99               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 18074                           
 18075                           ; BSR set to: 1
 18076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 18077  00240E  0060  F2CC  F0A1   	movff	vfpfcnvrt@fp,dtoa@fp
 18078  002414  0060  F2D0  F0A2   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 18079  00241A  0060  F648  F0A3   	movff	vfpfcnvrt@ll,dtoa@d
 18080  002420  0060  F64C  F0A4   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 18081  002426  0060  F650  F0A5   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 18082  00242C  0060  F654  F0A6   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 18083  002432  0060  F658  F0A7   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 18084  002438  0060  F65C  F0A8   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 18085  00243E  0060  F660  F0A9   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 18086  002444  0060  F664  F0AA   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 18087  00244A  ECAE  F01C         	call	_dtoa	;wreg free
 18088  00244E  0060  F284  F0B3   	movff	?_dtoa,?_vfpfcnvrt
 18089  002454  0060  F288  F0B4   	movff	?_dtoa+1,?_vfpfcnvrt+1
 18090  00245A  0012               	return	
 18091  00245C                     l13597:
 18092                           
 18093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 18094  00245C  0100               	movlb	0	; () banked
 18095  00245E  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18096  002460  6ED9               	movwf	fsr2l,c
 18097  002462  6ADA               	clrf	fsr2h,c
 18098  002464  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 18099  00246A  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 18100  002470  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 18101  002476  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 18102  00247C  0E00               	movlw	low (__mediumconst shr (0+16))
 18103  00247E  6EF8               	movwf	tblptru,c
 18104  002480  0E0F               	movlw	(high __ramtop+-1)
 18105  002482  64F7               	cpfsgt	tblptrh,c
 18106  002484  D003               	bra	u12887
 18107  002486  0008               	tblrd		*
 18108  002488  50F5               	movf	tablat,w,c
 18109  00248A  D007               	bra	u12880
 18110  00248C                     u12887:
 18111  00248C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18112  002492  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18113  002498  50EF               	movf	indf0,w,c
 18114  00249A                     u12880:
 18115  00249A  0A6E               	xorlw	110
 18116  00249C  A4D8               	btfss	status,2,c
 18117  00249E  D034               	goto	l13607
 18118                           
 18119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 18120  0024A0  0100               	movlb	0	; () banked
 18121  0024A2  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18122  0024A4  6ED9               	movwf	fsr2l,c
 18123  0024A6  6ADA               	clrf	fsr2h,c
 18124  0024A8  2ADE               	incf	postinc2,f,c
 18125  0024AA  0E00               	movlw	0
 18126  0024AC  22DD               	addwfc	postdec2,f,c
 18127                           
 18128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 18129  0024AE  0060  F2DB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 18130  0024B4  0060  F2DF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 18131  0024BA  006F FF7C  F18C    	movff	indf2,??_vfpfcnvrt
 18132  0024C0  0E02               	movlw	2
 18133  0024C2  26DE               	addwf	postinc2,f,c
 18134  0024C4  006F FF7C  F18D    	movff	indf2,??_vfpfcnvrt+1
 18135  0024CA  0E00               	movlw	0
 18136  0024CC  22DD               	addwfc	postdec2,f,c
 18137  0024CE  0060  F633  FFD9   	movff	??_vfpfcnvrt,fsr2l
 18138  0024D4  0060  F637  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 18139  0024DA  006F FF78  F19A    	movff	postinc2,vfpfcnvrt@vp
 18140  0024E0  006F FF74  F19B    	movff	postdec2,vfpfcnvrt@vp+1
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 18144  0024E6  0060  F66B  FFD9   	movff	vfpfcnvrt@vp,fsr2l
 18145  0024EC  0060  F66F  FFDA   	movff	vfpfcnvrt@vp+1,fsr2h
 18146  0024F2  0060  F303  FFDE   	movff	_nout,postinc2
 18147  0024F8  0060  F307  FFDD   	movff	_nout+1,postdec2
 18148  0024FE                     l13603:
 18149                           
 18150                           ; BSR set to: 0
 18151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
 18152  0024FE  0E00               	movlw	0
 18153  002500  6FB4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 18154  002502  0E00               	movlw	0
 18155  002504  6FB3               	movwf	?_vfpfcnvrt& (0+255),b
 18156  002506  0012               	return	
 18157  002508                     l13607:
 18158                           
 18159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 18160  002508  0100               	movlb	0	; () banked
 18161  00250A  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18162  00250C  6ED9               	movwf	fsr2l,c
 18163  00250E  6ADA               	clrf	fsr2h,c
 18164  002510  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 18165  002516  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 18166  00251C  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 18167  002522  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 18168  002528  0E00               	movlw	low (__mediumconst shr (0+16))
 18169  00252A  6EF8               	movwf	tblptru,c
 18170  00252C  0E0F               	movlw	(high __ramtop+-1)
 18171  00252E  64F7               	cpfsgt	tblptrh,c
 18172  002530  D003               	bra	u12907
 18173  002532  0008               	tblrd		*
 18174  002534  50F5               	movf	tablat,w,c
 18175  002536  D007               	bra	u12900
 18176  002538                     u12907:
 18177  002538  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18178  00253E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18179  002544  50EF               	movf	indf0,w,c
 18180  002546                     u12900:
 18181  002546  0A25               	xorlw	37
 18182  002548  A4D8               	btfss	status,2,c
 18183  00254A  D019               	goto	l13617
 18184                           
 18185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 18186  00254C  0100               	movlb	0	; () banked
 18187  00254E  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18188  002550  6ED9               	movwf	fsr2l,c
 18189  002552  6ADA               	clrf	fsr2h,c
 18190  002554  2ADE               	incf	postinc2,f,c
 18191  002556  0E00               	movlw	0
 18192  002558  22DD               	addwfc	postdec2,f,c
 18193                           
 18194                           ; BSR set to: 0
 18195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 18196  00255A  0E00               	movlw	0
 18197  00255C  6F87               	movwf	(fputc@c+1)& (0+255),b
 18198  00255E  0E25               	movlw	37
 18199  002560  6F86               	movwf	fputc@c& (0+255),b
 18200  002562  0060  F2CC  F088   	movff	vfpfcnvrt@fp,fputc@fp
 18201  002568  0060  F2D0  F089   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 18202  00256E  EC68  F02C         	call	_fputc	;wreg free
 18203  002572                     l13613:
 18204                           
 18205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 18206  002572  0E00               	movlw	0
 18207  002574  0100               	movlb	0	; () banked
 18208  002576  6FB4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 18209  002578  0E01               	movlw	1
 18210  00257A  6FB3               	movwf	?_vfpfcnvrt& (0+255),b
 18211  00257C  0012               	return	
 18212  00257E                     l13617:
 18213                           
 18214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 18215  00257E  0100               	movlb	0	; () banked
 18216  002580  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18217  002582  6ED9               	movwf	fsr2l,c
 18218  002584  6ADA               	clrf	fsr2h,c
 18219  002586  2ADE               	incf	postinc2,f,c
 18220  002588  0E00               	movlw	0
 18221  00258A  22DD               	addwfc	postdec2,f,c
 18222  00258C  D7B8               	goto	l13603
 18223  00258E                     l13623:
 18224                           
 18225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 18226  00258E  0100               	movlb	0	; () banked
 18227  002590  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18228  002592  6ED9               	movwf	fsr2l,c
 18229  002594  6ADA               	clrf	fsr2h,c
 18230  002596  006F FF78  F18C    	movff	postinc2,??_vfpfcnvrt
 18231  00259C  006F FF74  F18D    	movff	postdec2,??_vfpfcnvrt+1
 18232  0025A2  0060  F633  FFF6   	movff	??_vfpfcnvrt,tblptrl
 18233  0025A8  0060  F637  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
 18234  0025AE  0E00               	movlw	low (__mediumconst shr (0+16))
 18235  0025B0  6EF8               	movwf	tblptru,c
 18236  0025B2  0E0F               	movlw	(high __ramtop+-1)
 18237  0025B4  64F7               	cpfsgt	tblptrh,c
 18238  0025B6  D003               	bra	u12927
 18239  0025B8  0008               	tblrd		*
 18240  0025BA  50F5               	movf	tablat,w,c
 18241  0025BC  D007               	bra	u12920
 18242  0025BE                     u12927:
 18243  0025BE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18244  0025C4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18245  0025CA  50EF               	movf	indf0,w,c
 18246  0025CC                     u12920:
 18247  0025CC  0101               	movlb	1	; () banked
 18248  0025CE  6F8E               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 18249  0025D0  518E               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
 18250  0025D2  0100               	movlb	0	; () banked
 18251  0025D4  6F86               	movwf	fputc@c& (0+255),b
 18252  0025D6  6B87               	clrf	(fputc@c+1)& (0+255),b
 18253  0025D8  0060  F2CC  F088   	movff	vfpfcnvrt@fp,fputc@fp
 18254  0025DE  0060  F2D0  F089   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 18255  0025E4  EC68  F02C         	call	_fputc	;wreg free
 18256                           
 18257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 18258  0025E8  0100               	movlb	0	; () banked
 18259  0025EA  51B5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 18260  0025EC  6ED9               	movwf	fsr2l,c
 18261  0025EE  6ADA               	clrf	fsr2h,c
 18262  0025F0  2ADE               	incf	postinc2,f,c
 18263  0025F2  0E00               	movlw	0
 18264  0025F4  22DD               	addwfc	postdec2,f,c
 18265  0025F6  D7BD               	goto	l13613
 18266  0025F8                     __end_of_vfpfcnvrt:
 18267                           	opt callstack 0
 18268                           
 18269 ;; *************** function _dtoa *****************
 18270 ;; Defined at:
 18271 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
 18274 ;;		 -> sprintf@f(6), NULL(0), 
 18275 ;;  d               8   67[BANK0 ] long long 
 18276 ;; Auto vars:     Size  Location     Type
 18277 ;;  n               8    8[BANK1 ] long long 
 18278 ;;  i               2   16[BANK1 ] int 
 18279 ;;  s               2    6[BANK1 ] int 
 18280 ;;  w               2    4[BANK1 ] int 
 18281 ;;  p               2    2[BANK1 ] int 
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  2   65[BANK0 ] int 
 18284 ;; Registers used:
 18285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18286 ;; Tracked objects:
 18287 ;;		On entry : 3F/1
 18288 ;;		On exit  : 3F/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18291 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18292 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18293 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18294 ;;      Totals:         0      18      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18295 ;;Total ram usage:       36 bytes
 18296 ;; Hardware stack levels used:    1
 18297 ;; Hardware stack levels required when called:   18
 18298 ;; This function calls:
 18299 ;;		___aodiv
 18300 ;;		___aomod
 18301 ;;		_abs
 18302 ;;		_pad
 18303 ;; This function is called by:
 18304 ;;		_vfpfcnvrt
 18305 ;; This function uses a non-reentrant model
 18306 ;;
 18307                           
 18308                           	psect	text85
 18309  00395C                     __ptext85:
 18310                           	opt callstack 0
 18311  00395C                     _dtoa:
 18312                           	opt callstack 9
 18313                           
 18314                           ; BSR set to: 1
 18315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;incstack = 0
 18319  00395C  0060  F28C  F182   	movff	dtoa@d,dtoa@n
 18320  003962  0060  F290  F183   	movff	dtoa@d+1,dtoa@n+1
 18321  003968  0060  F294  F184   	movff	dtoa@d+2,dtoa@n+2
 18322  00396E  0060  F298  F185   	movff	dtoa@d+3,dtoa@n+3
 18323  003974  0060  F29C  F186   	movff	dtoa@d+4,dtoa@n+4
 18324  00397A  0060  F2A0  F187   	movff	dtoa@d+5,dtoa@n+5
 18325  003980  0060  F2A4  F188   	movff	dtoa@d+6,dtoa@n+6
 18326  003986  0060  F2A8  F189   	movff	dtoa@d+7,dtoa@n+7
 18327                           
 18328                           ; BSR set to: 1
 18329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 18330  00398C  AF89               	btfss	(dtoa@n+7)& (0+255),7,b
 18331  00398E  D002               	goto	u12150
 18332  003990  0E01               	movlw	1
 18333  003992  D001               	goto	u12160
 18334  003994                     u12150:
 18335  003994  0E00               	movlw	0
 18336  003996                     u12160:
 18337  003996  6F80               	movwf	dtoa@s& (0+255),b
 18338  003998  6B81               	clrf	(dtoa@s+1)& (0+255),b
 18339                           
 18340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 18341  00399A  5180               	movf	dtoa@s& (0+255),w,b
 18342  00399C  1181               	iorwf	(dtoa@s+1)& (0+255),w,b
 18343  00399E  B4D8               	btfsc	status,2,c
 18344  0039A0  D010               	goto	l13289
 18345                           
 18346                           ; BSR set to: 1
 18347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 18348  0039A2  1F89               	comf	(dtoa@n+7)& (0+255),f,b
 18349  0039A4  1F88               	comf	(dtoa@n+6)& (0+255),f,b
 18350  0039A6  1F87               	comf	(dtoa@n+5)& (0+255),f,b
 18351  0039A8  1F86               	comf	(dtoa@n+4)& (0+255),f,b
 18352  0039AA  1F85               	comf	(dtoa@n+3)& (0+255),f,b
 18353  0039AC  1F84               	comf	(dtoa@n+2)& (0+255),f,b
 18354  0039AE  1F83               	comf	(dtoa@n+1)& (0+255),f,b
 18355  0039B0  6D82               	negf	dtoa@n& (0+255),b
 18356  0039B2  0E00               	movlw	0
 18357  0039B4  2383               	addwfc	(dtoa@n+1)& (0+255),f,b
 18358  0039B6  2384               	addwfc	(dtoa@n+2)& (0+255),f,b
 18359  0039B8  2385               	addwfc	(dtoa@n+3)& (0+255),f,b
 18360  0039BA  2386               	addwfc	(dtoa@n+4)& (0+255),f,b
 18361  0039BC  2387               	addwfc	(dtoa@n+5)& (0+255),f,b
 18362  0039BE  2388               	addwfc	(dtoa@n+6)& (0+255),f,b
 18363  0039C0  2389               	addwfc	(dtoa@n+7)& (0+255),f,b
 18364  0039C2                     l13289:
 18365                           
 18366                           ; BSR set to: 1
 18367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 18368  0039C2  0100               	movlb	0	; () banked
 18369  0039C4  AFC5               	btfss	(_prec+1)& (0+255),7,b
 18370                           
 18371                           ; BSR set to: 0
 18372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 18373  0039C6  93C6               	bcf	_flags& (0+255),1,b
 18374                           
 18375                           ; BSR set to: 0
 18376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 18377  0039C8  BFC5               	btfsc	(_prec+1)& (0+255),7,b
 18378  0039CA  D005               	goto	u12190
 18379  0039CC  51C5               	movf	(_prec+1)& (0+255),w,b
 18380  0039CE  E109               	bnz	l2292
 18381  0039D0  05C4               	decf	_prec& (0+255),w,b
 18382  0039D2  B0D8               	btfsc	status,0,c
 18383  0039D4  D006               	goto	l2292
 18384  0039D6                     u12190:
 18385                           
 18386                           ; BSR set to: 0
 18387  0039D6  0E00               	movlw	0
 18388  0039D8  0101               	movlb	1	; () banked
 18389  0039DA  6F7D               	movwf	(dtoa@p+1)& (0+255),b
 18390  0039DC  0E01               	movlw	1
 18391  0039DE  6F7C               	movwf	dtoa@p& (0+255),b
 18392  0039E0  D006               	goto	l2294
 18393  0039E2                     l2292:
 18394                           
 18395                           ; BSR set to: 0
 18396  0039E2  0060  F310  F17C   	movff	_prec,dtoa@p
 18397  0039E8  0060  F314  F17D   	movff	_prec+1,dtoa@p+1
 18398  0039EE                     l2294:
 18399                           
 18400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 18401  0039EE  0060  F308  F17E   	movff	_width,dtoa@w
 18402  0039F4  0060  F30C  F17F   	movff	_width+1,dtoa@w+1
 18403                           
 18404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 18405  0039FA  0101               	movlb	1	; () banked
 18406  0039FC  5180               	movf	dtoa@s& (0+255),w,b
 18407  0039FE  1181               	iorwf	(dtoa@s+1)& (0+255),w,b
 18408  003A00  A4D8               	btfss	status,2,c
 18409  003A02  D003               	goto	u12210
 18410                           
 18411                           ; BSR set to: 1
 18412  003A04  0100               	movlb	0	; () banked
 18413  003A06  A5C6               	btfss	_flags& (0+255),2,b
 18414  003A08  D004               	goto	l13303
 18415  003A0A                     u12210:
 18416                           
 18417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 18418  003A0A  0101               	movlb	1	; () banked
 18419  003A0C  077E               	decf	dtoa@w& (0+255),f,b
 18420  003A0E  A0D8               	btfss	status,0,c
 18421  003A10  077F               	decf	(dtoa@w+1)& (0+255),f,b
 18422  003A12                     l13303:
 18423                           
 18424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 18425  003A12  0E00               	movlw	0
 18426  003A14  0101               	movlb	1	; () banked
 18427  003A16  6F8B               	movwf	(dtoa@i+1)& (0+255),b
 18428  003A18  0E1F               	movlw	31
 18429  003A1A  6F8A               	movwf	dtoa@i& (0+255),b
 18430                           
 18431                           ; BSR set to: 1
 18432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 18433  003A1C  0E00               	movlw	0
 18434  003A1E  0102               	movlb	2	; () banked
 18435  003A20  6F66               	movwf	(_dbuf+31)& (0+255),b
 18436                           
 18437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18438  003A22  D0A2               	goto	l13317
 18439  003A24                     l13307:
 18440                           
 18441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 18442  003A24  0101               	movlb	1	; () banked
 18443  003A26  078A               	decf	dtoa@i& (0+255),f,b
 18444  003A28  A0D8               	btfss	status,0,c
 18445  003A2A  078B               	decf	(dtoa@i+1)& (0+255),f,b
 18446                           
 18447                           ; BSR set to: 1
 18448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 18449  003A2C  0E47               	movlw	low _dbuf
 18450  003A2E  258A               	addwf	dtoa@i& (0+255),w,b
 18451  003A30  6ED9               	movwf	fsr2l,c
 18452  003A32  0E02               	movlw	high _dbuf
 18453  003A34  218B               	addwfc	(dtoa@i+1)& (0+255),w,b
 18454  003A36  6EDA               	movwf	fsr2h,c
 18455  003A38  0060  F608  F084   	movff	dtoa@n,___aomod@dividend
 18456  003A3E  0060  F60C  F085   	movff	dtoa@n+1,___aomod@dividend+1
 18457  003A44  0060  F610  F086   	movff	dtoa@n+2,___aomod@dividend+2
 18458  003A4A  0060  F614  F087   	movff	dtoa@n+3,___aomod@dividend+3
 18459  003A50  0060  F618  F088   	movff	dtoa@n+4,___aomod@dividend+4
 18460  003A56  0060  F61C  F089   	movff	dtoa@n+5,___aomod@dividend+5
 18461  003A5C  0060  F620  F08A   	movff	dtoa@n+6,___aomod@dividend+6
 18462  003A62  0060  F624  F08B   	movff	dtoa@n+7,___aomod@dividend+7
 18463  003A68  0E0A               	movlw	10
 18464  003A6A  0100               	movlb	0	; () banked
 18465  003A6C  6F8C               	movwf	___aomod@divisor& (0+255),b
 18466  003A6E  0E00               	movlw	0
 18467  003A70  6F8D               	movwf	(___aomod@divisor+1)& (0+255),b
 18468  003A72  0E00               	movlw	0
 18469  003A74  6F8E               	movwf	(___aomod@divisor+2)& (0+255),b
 18470  003A76  0E00               	movlw	0
 18471  003A78  6F8F               	movwf	(___aomod@divisor+3)& (0+255),b
 18472  003A7A  0E00               	movlw	0
 18473  003A7C  6F90               	movwf	(___aomod@divisor+4)& (0+255),b
 18474  003A7E  0E00               	movlw	0
 18475  003A80  6F91               	movwf	(___aomod@divisor+5)& (0+255),b
 18476  003A82  0E00               	movlw	0
 18477  003A84  6F92               	movwf	(___aomod@divisor+6)& (0+255),b
 18478  003A86  0E00               	movlw	0
 18479  003A88  6F93               	movwf	(___aomod@divisor+7)& (0+255),b
 18480  003A8A  ECA2  F027         	call	___aomod	;wreg free
 18481  003A8E  0060  F210  F0AB   	movff	?___aomod,??_dtoa
 18482  003A94  0060  F214  F0AC   	movff	?___aomod+1,??_dtoa+1
 18483  003A9A  0060  F218  F0AD   	movff	?___aomod+2,??_dtoa+2
 18484  003AA0  0060  F21C  F0AE   	movff	?___aomod+3,??_dtoa+3
 18485  003AA6  0060  F220  F0AF   	movff	?___aomod+4,??_dtoa+4
 18486  003AAC  0060  F224  F0B0   	movff	?___aomod+5,??_dtoa+5
 18487  003AB2  0060  F228  F0B1   	movff	?___aomod+6,??_dtoa+6
 18488  003AB8  0060  F22C  F0B2   	movff	?___aomod+7,??_dtoa+7
 18489  003ABE  0060  F2AC  F096   	movff	??_dtoa,abs@a
 18490  003AC4  0060  F2B4  F097   	movff	??_dtoa+2,abs@a+1
 18491  003ACA  EC67  F036         	call	_abs	;wreg free
 18492  003ACE  5196               	movf	?_abs& (0+255),w,b
 18493  003AD0  0F30               	addlw	48
 18494  003AD2  6EDF               	movwf	indf2,c
 18495                           
 18496                           ; BSR set to: 0
 18497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 18498  003AD4  0101               	movlb	1	; () banked
 18499  003AD6  077C               	decf	dtoa@p& (0+255),f,b
 18500  003AD8  A0D8               	btfss	status,0,c
 18501  003ADA  077D               	decf	(dtoa@p+1)& (0+255),f,b
 18502                           
 18503                           ; BSR set to: 1
 18504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 18505  003ADC  077E               	decf	dtoa@w& (0+255),f,b
 18506  003ADE  A0D8               	btfss	status,0,c
 18507  003AE0  077F               	decf	(dtoa@w+1)& (0+255),f,b
 18508                           
 18509                           ; BSR set to: 1
 18510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 18511  003AE2  0060  F608  F084   	movff	dtoa@n,___aodiv@dividend
 18512  003AE8  0060  F60C  F085   	movff	dtoa@n+1,___aodiv@dividend+1
 18513  003AEE  0060  F610  F086   	movff	dtoa@n+2,___aodiv@dividend+2
 18514  003AF4  0060  F614  F087   	movff	dtoa@n+3,___aodiv@dividend+3
 18515  003AFA  0060  F618  F088   	movff	dtoa@n+4,___aodiv@dividend+4
 18516  003B00  0060  F61C  F089   	movff	dtoa@n+5,___aodiv@dividend+5
 18517  003B06  0060  F620  F08A   	movff	dtoa@n+6,___aodiv@dividend+6
 18518  003B0C  0060  F624  F08B   	movff	dtoa@n+7,___aodiv@dividend+7
 18519  003B12  0E0A               	movlw	10
 18520  003B14  0100               	movlb	0	; () banked
 18521  003B16  6F8C               	movwf	___aodiv@divisor& (0+255),b
 18522  003B18  0E00               	movlw	0
 18523  003B1A  6F8D               	movwf	(___aodiv@divisor+1)& (0+255),b
 18524  003B1C  0E00               	movlw	0
 18525  003B1E  6F8E               	movwf	(___aodiv@divisor+2)& (0+255),b
 18526  003B20  0E00               	movlw	0
 18527  003B22  6F8F               	movwf	(___aodiv@divisor+3)& (0+255),b
 18528  003B24  0E00               	movlw	0
 18529  003B26  6F90               	movwf	(___aodiv@divisor+4)& (0+255),b
 18530  003B28  0E00               	movlw	0
 18531  003B2A  6F91               	movwf	(___aodiv@divisor+5)& (0+255),b
 18532  003B2C  0E00               	movlw	0
 18533  003B2E  6F92               	movwf	(___aodiv@divisor+6)& (0+255),b
 18534  003B30  0E00               	movlw	0
 18535  003B32  6F93               	movwf	(___aodiv@divisor+7)& (0+255),b
 18536  003B34  EC4A  F026         	call	___aodiv	;wreg free
 18537  003B38  0060  F210  F182   	movff	?___aodiv,dtoa@n
 18538  003B3E  0060  F214  F183   	movff	?___aodiv+1,dtoa@n+1
 18539  003B44  0060  F218  F184   	movff	?___aodiv+2,dtoa@n+2
 18540  003B4A  0060  F21C  F185   	movff	?___aodiv+3,dtoa@n+3
 18541  003B50  0060  F220  F186   	movff	?___aodiv+4,dtoa@n+4
 18542  003B56  0060  F224  F187   	movff	?___aodiv+5,dtoa@n+5
 18543  003B5C  0060  F228  F188   	movff	?___aodiv+6,dtoa@n+6
 18544  003B62  0060  F22C  F189   	movff	?___aodiv+7,dtoa@n+7
 18545  003B68                     l13317:
 18546                           
 18547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18548  003B68  0101               	movlb	1	; () banked
 18549  003B6A  BF8B               	btfsc	(dtoa@i+1)& (0+255),7,b
 18550  003B6C  D020               	goto	u12260
 18551  003B6E  518B               	movf	(dtoa@i+1)& (0+255),w,b
 18552  003B70  E103               	bnz	u12220
 18553  003B72  058A               	decf	dtoa@i& (0+255),w,b
 18554  003B74  A0D8               	btfss	status,0,c
 18555  003B76  D01B               	goto	u12260
 18556  003B78                     u12220:
 18557                           
 18558                           ; BSR set to: 1
 18559  003B78  5182               	movf	dtoa@n& (0+255),w,b
 18560  003B7A  1183               	iorwf	(dtoa@n+1)& (0+255),w,b
 18561  003B7C  1184               	iorwf	(dtoa@n+2)& (0+255),w,b
 18562  003B7E  1185               	iorwf	(dtoa@n+3)& (0+255),w,b
 18563  003B80  1186               	iorwf	(dtoa@n+4)& (0+255),w,b
 18564  003B82  1187               	iorwf	(dtoa@n+5)& (0+255),w,b
 18565  003B84  1188               	iorwf	(dtoa@n+6)& (0+255),w,b
 18566  003B86  1189               	iorwf	(dtoa@n+7)& (0+255),w,b
 18567  003B88  A4D8               	btfss	status,2,c
 18568  003B8A  D74C               	goto	l13307
 18569                           
 18570                           ; BSR set to: 1
 18571  003B8C  BF7D               	btfsc	(dtoa@p+1)& (0+255),7,b
 18572  003B8E  D005               	goto	u12240
 18573  003B90  517D               	movf	(dtoa@p+1)& (0+255),w,b
 18574  003B92  E102               	bnz	u12241
 18575  003B94  057C               	decf	dtoa@p& (0+255),w,b
 18576  003B96  B0D8               	btfsc	status,0,c
 18577  003B98                     u12241:
 18578  003B98  D745               	goto	l13307
 18579  003B9A                     u12240:
 18580                           
 18581                           ; BSR set to: 1
 18582  003B9A  BF7F               	btfsc	(dtoa@w+1)& (0+255),7,b
 18583  003B9C  D008               	goto	u12260
 18584  003B9E  517F               	movf	(dtoa@w+1)& (0+255),w,b
 18585  003BA0  E103               	bnz	u12250
 18586  003BA2  057E               	decf	dtoa@w& (0+255),w,b
 18587  003BA4  A0D8               	btfss	status,0,c
 18588  003BA6  D003               	goto	u12260
 18589  003BA8                     u12250:
 18590                           
 18591                           ; BSR set to: 1
 18592  003BA8  0100               	movlb	0	; () banked
 18593  003BAA  B3C6               	btfsc	_flags& (0+255),1,b
 18594  003BAC  D73B               	goto	l13307
 18595  003BAE                     u12260:
 18596                           
 18597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 18598  003BAE  0101               	movlb	1	; () banked
 18599  003BB0  5180               	movf	dtoa@s& (0+255),w,b
 18600  003BB2  1181               	iorwf	(dtoa@s+1)& (0+255),w,b
 18601  003BB4  A4D8               	btfss	status,2,c
 18602  003BB6  D003               	goto	u12280
 18603                           
 18604                           ; BSR set to: 1
 18605  003BB8  0100               	movlb	0	; () banked
 18606  003BBA  A5C6               	btfss	_flags& (0+255),2,b
 18607  003BBC  D019               	goto	l13341
 18608  003BBE                     u12280:
 18609                           
 18610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 18611  003BBE  0101               	movlb	1	; () banked
 18612  003BC0  078A               	decf	dtoa@i& (0+255),f,b
 18613  003BC2  A0D8               	btfss	status,0,c
 18614  003BC4  078B               	decf	(dtoa@i+1)& (0+255),f,b
 18615                           
 18616                           ; BSR set to: 1
 18617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 18618  003BC6  5180               	movf	dtoa@s& (0+255),w,b
 18619  003BC8  1181               	iorwf	(dtoa@s+1)& (0+255),w,b
 18620  003BCA  A4D8               	btfss	status,2,c
 18621  003BCC  D004               	goto	l13337
 18622                           
 18623                           ; BSR set to: 1
 18624  003BCE  0E00               	movlw	0
 18625  003BD0  6F7B               	movwf	(_dtoa$3676+1)& (0+255),b
 18626  003BD2  0E2B               	movlw	43
 18627  003BD4  D003               	goto	L24
 18628  003BD6                     l13337:
 18629                           
 18630                           ; BSR set to: 1
 18631  003BD6  0E00               	movlw	0
 18632  003BD8  6F7B               	movwf	(_dtoa$3676+1)& (0+255),b
 18633  003BDA  0E2D               	movlw	45
 18634  003BDC                     L24:
 18635  003BDC  6F7A               	movwf	_dtoa$3676& (0+255),b
 18636                           
 18637                           ; BSR set to: 1
 18638  003BDE  0E47               	movlw	low _dbuf
 18639  003BE0  258A               	addwf	dtoa@i& (0+255),w,b
 18640  003BE2  6ED9               	movwf	fsr2l,c
 18641  003BE4  0E02               	movlw	high _dbuf
 18642  003BE6  218B               	addwfc	(dtoa@i+1)& (0+255),w,b
 18643  003BE8  6EDA               	movwf	fsr2h,c
 18644  003BEA  0060  F5EB  FFDF   	movff	_dtoa$3676,indf2
 18645  003BF0                     l13341:
 18646                           
 18647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 18648  003BF0  0060  F284  F096   	movff	dtoa@fp,pad@fp
 18649  003BF6  0060  F288  F097   	movff	dtoa@fp+1,pad@fp+1
 18650  003BFC  0E47               	movlw	low _dbuf
 18651  003BFE  0101               	movlb	1	; () banked
 18652  003C00  258A               	addwf	dtoa@i& (0+255),w,b
 18653  003C02  0100               	movlb	0	; () banked
 18654  003C04  6F98               	movwf	pad@buf& (0+255),b
 18655  003C06  0E02               	movlw	high _dbuf
 18656  003C08  0101               	movlb	1	; () banked
 18657  003C0A  218B               	addwfc	(dtoa@i+1)& (0+255),w,b
 18658  003C0C  0100               	movlb	0	; () banked
 18659  003C0E  6F99               	movwf	(pad@buf+1)& (0+255),b
 18660  003C10  0060  F5F8  F09A   	movff	dtoa@w,pad@p
 18661  003C16  0060  F5FC  F09B   	movff	dtoa@w+1,pad@p+1
 18662  003C1C  EC5F  F02B         	call	_pad	;wreg free
 18663  003C20  0060  F258  F0A1   	movff	?_pad,?_dtoa
 18664  003C26  0060  F25C  F0A2   	movff	?_pad+1,?_dtoa+1
 18665                           
 18666                           ; BSR set to: 0
 18667  003C2C  0012               	return		;funcret
 18668  003C2E                     __end_of_dtoa:
 18669                           	opt callstack 0
 18670                           
 18671 ;; *************** function _pad *****************
 18672 ;; Defined at:
 18673 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18674 ;; Parameters:    Size  Location     Type
 18675 ;;  fp              2   54[BANK0 ] PTR struct _IO_FILE
 18676 ;;		 -> sprintf@f(6), NULL(0), 
 18677 ;;  buf             2   56[BANK0 ] PTR unsigned char 
 18678 ;;		 -> dbuf(32), 
 18679 ;;  p               2   58[BANK0 ] int 
 18680 ;; Auto vars:     Size  Location     Type
 18681 ;;  w               2   63[BANK0 ] int 
 18682 ;;  i               2   61[BANK0 ] int 
 18683 ;; Return value:  Size  Location     Type
 18684 ;;                  2   54[BANK0 ] int 
 18685 ;; Registers used:
 18686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18687 ;; Tracked objects:
 18688 ;;		On entry : 3F/0
 18689 ;;		On exit  : 3F/0
 18690 ;;		Unchanged: 0/0
 18691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18692 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18693 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18695 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18696 ;;Total ram usage:       11 bytes
 18697 ;; Hardware stack levels used:    1
 18698 ;; Hardware stack levels required when called:   17
 18699 ;; This function calls:
 18700 ;;		_fputc
 18701 ;;		_fputs
 18702 ;;		_strlen
 18703 ;; This function is called by:
 18704 ;;		_dtoa
 18705 ;; This function uses a non-reentrant model
 18706 ;;
 18707                           
 18708                           	psect	text86
 18709  0056BE                     __ptext86:
 18710                           	opt callstack 0
 18711  0056BE                     _pad:
 18712                           	opt callstack 9
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 18716                           
 18717                           ; BSR set to: 0
 18718                           ;incstack = 0
 18719  0056BE  A1C6               	btfss	_flags& (0+255),0,b
 18720  0056C0  D00E               	goto	l12991
 18721                           
 18722                           ; BSR set to: 0
 18723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 18724  0056C2  0060  F260  F08F   	movff	pad@buf,fputs@s
 18725  0056C8  0060  F264  F090   	movff	pad@buf+1,fputs@s+1
 18726  0056CE  0060  F258  F091   	movff	pad@fp,fputs@fp
 18727  0056D4  0060  F25C  F092   	movff	pad@fp+1,fputs@fp+1
 18728  0056DA  EC47  F036         	call	_fputs	;wreg free
 18729  0056DE                     l12991:
 18730                           
 18731                           ; BSR set to: 0
 18732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 18733  0056DE  BF9B               	btfsc	(pad@p+1)& (0+255),7,b
 18734  0056E0  D007               	goto	l12995
 18735                           
 18736                           ; BSR set to: 0
 18737  0056E2  0060  F268  F09F   	movff	pad@p,pad@w
 18738  0056E8  0060  F26C  F0A0   	movff	pad@p+1,pad@w+1
 18739  0056EE  D004               	goto	l2281
 18740  0056F0                     l12995:
 18741                           
 18742                           ; BSR set to: 0
 18743  0056F0  0E00               	movlw	0
 18744  0056F2  6FA0               	movwf	(pad@w+1)& (0+255),b
 18745  0056F4  0E00               	movlw	0
 18746  0056F6  6F9F               	movwf	pad@w& (0+255),b
 18747  0056F8                     l2281:
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 18751  0056F8  0E00               	movlw	0
 18752  0056FA  6F9E               	movwf	(pad@i+1)& (0+255),b
 18753  0056FC  0E00               	movlw	0
 18754  0056FE  6F9D               	movwf	pad@i& (0+255),b
 18755                           
 18756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 18757  005700  D00F               	goto	l13001
 18758  005702                     l12997:
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 18762  005702  0E00               	movlw	0
 18763  005704  6F87               	movwf	(fputc@c+1)& (0+255),b
 18764  005706  0E20               	movlw	32
 18765  005708  6F86               	movwf	fputc@c& (0+255),b
 18766  00570A  0060  F258  F088   	movff	pad@fp,fputc@fp
 18767  005710  0060  F25C  F089   	movff	pad@fp+1,fputc@fp+1
 18768  005716  EC68  F02C         	call	_fputc	;wreg free
 18769                           
 18770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 18771  00571A  0100               	movlb	0	; () banked
 18772  00571C  4B9D               	infsnz	pad@i& (0+255),f,b
 18773  00571E  2B9E               	incf	(pad@i+1)& (0+255),f,b
 18774  005720                     l13001:
 18775                           
 18776                           ; BSR set to: 0
 18777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 18778  005720  519F               	movf	pad@w& (0+255),w,b
 18779  005722  5D9D               	subwf	pad@i& (0+255),w,b
 18780  005724  519E               	movf	(pad@i+1)& (0+255),w,b
 18781  005726  0A80               	xorlw	128
 18782  005728  6F9C               	movwf	??_pad& (0+255),b
 18783  00572A  51A0               	movf	(pad@w+1)& (0+255),w,b
 18784  00572C  0A80               	xorlw	128
 18785  00572E  599C               	subwfb	??_pad& (0+255),w,b
 18786  005730  A0D8               	btfss	status,0,c
 18787  005732  D7E7               	goto	l12997
 18788                           
 18789                           ; BSR set to: 0
 18790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 18791  005734  B1C6               	btfsc	_flags& (0+255),0,b
 18792  005736  D00E               	goto	l13005
 18793                           
 18794                           ; BSR set to: 0
 18795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 18796  005738  0060  F260  F08F   	movff	pad@buf,fputs@s
 18797  00573E  0060  F264  F090   	movff	pad@buf+1,fputs@s+1
 18798  005744  0060  F258  F091   	movff	pad@fp,fputs@fp
 18799  00574A  0060  F25C  F092   	movff	pad@fp+1,fputs@fp+1
 18800  005750  EC47  F036         	call	_fputs	;wreg free
 18801  005754                     l13005:
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 18805  005754  0060  F260  F084   	movff	pad@buf,strlen@s
 18806  00575A  0060  F264  F085   	movff	pad@buf+1,strlen@s+1
 18807  005760  ECF1  F037         	call	_strlen	;wreg free
 18808  005764  519F               	movf	pad@w& (0+255),w,b
 18809  005766  2584               	addwf	?_strlen& (0+255),w,b
 18810  005768  6F96               	movwf	?_pad& (0+255),b
 18811  00576A  51A0               	movf	(pad@w+1)& (0+255),w,b
 18812  00576C  2185               	addwfc	(?_strlen+1)& (0+255),w,b
 18813  00576E  6F97               	movwf	(?_pad+1)& (0+255),b
 18814                           
 18815                           ; BSR set to: 0
 18816  005770  0012               	return		;funcret
 18817  005772                     __end_of_pad:
 18818                           	opt callstack 0
 18819                           
 18820 ;; *************** function _strlen *****************
 18821 ;; Defined at:
 18822 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 18823 ;; Parameters:    Size  Location     Type
 18824 ;;  s               2   36[BANK0 ] PTR const unsigned char 
 18825 ;;		 -> dbuf(32), 
 18826 ;; Auto vars:     Size  Location     Type
 18827 ;;  a               2   38[BANK0 ] PTR const unsigned char 
 18828 ;;		 -> dbuf(32), 
 18829 ;; Return value:  Size  Location     Type
 18830 ;;                  2   36[BANK0 ] unsigned int 
 18831 ;; Registers used:
 18832 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18833 ;; Tracked objects:
 18834 ;;		On entry : 3F/0
 18835 ;;		On exit  : 3F/0
 18836 ;;		Unchanged: 0/0
 18837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18839 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18841 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18842 ;;Total ram usage:        4 bytes
 18843 ;; Hardware stack levels used:    1
 18844 ;; Hardware stack levels required when called:   13
 18845 ;; This function calls:
 18846 ;;		Nothing
 18847 ;; This function is called by:
 18848 ;;		_pad
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           	psect	text87
 18853  006FE2                     __ptext87:
 18854                           	opt callstack 0
 18855  006FE2                     _strlen:
 18856                           	opt callstack 12
 18857                           
 18858                           ; BSR set to: 0
 18859                           
 18860                           ; BSR set to: 0
 18861                           ;incstack = 0
 18862  006FE2  0060  F210  F086   	movff	strlen@s,strlen@a
 18863  006FE8  0060  F214  F087   	movff	strlen@s+1,strlen@a+1
 18864  006FEE  D002               	goto	l12869
 18865  006FF0                     l12867:
 18866                           
 18867                           ; BSR set to: 0
 18868  006FF0  4B84               	infsnz	strlen@s& (0+255),f,b
 18869  006FF2  2B85               	incf	(strlen@s+1)& (0+255),f,b
 18870  006FF4                     l12869:
 18871                           
 18872                           ; BSR set to: 0
 18873  006FF4  0060  F213  FFD9   	movff	strlen@s,fsr2l
 18874  006FFA  0060  F217  FFDA   	movff	strlen@s+1,fsr2h
 18875  007000  50DF               	movf	indf2,w,c
 18876  007002  A4D8               	btfss	status,2,c
 18877  007004  D7F5               	goto	l12867
 18878                           
 18879                           ; BSR set to: 0
 18880  007006  5186               	movf	strlen@a& (0+255),w,b
 18881  007008  5D84               	subwf	strlen@s& (0+255),w,b
 18882  00700A  6F84               	movwf	?_strlen& (0+255),b
 18883  00700C  5187               	movf	(strlen@a+1)& (0+255),w,b
 18884  00700E  5985               	subwfb	(strlen@s+1)& (0+255),w,b
 18885  007010  6F85               	movwf	(?_strlen+1)& (0+255),b
 18886                           
 18887                           ; BSR set to: 0
 18888  007012  0012               	return		;funcret
 18889  007014                     __end_of_strlen:
 18890                           	opt callstack 0
 18891                           
 18892 ;; *************** function _fputs *****************
 18893 ;; Defined at:
 18894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 18895 ;; Parameters:    Size  Location     Type
 18896 ;;  s               2   47[BANK0 ] PTR const unsigned char 
 18897 ;;		 -> dbuf(32), 
 18898 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
 18899 ;;		 -> sprintf@f(6), NULL(0), 
 18900 ;; Auto vars:     Size  Location     Type
 18901 ;;  i               2   52[BANK0 ] int 
 18902 ;;  c               1   51[BANK0 ] unsigned char 
 18903 ;; Return value:  Size  Location     Type
 18904 ;;                  2   47[BANK0 ] int 
 18905 ;; Registers used:
 18906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18907 ;; Tracked objects:
 18908 ;;		On entry : 3F/0
 18909 ;;		On exit  : 3F/0
 18910 ;;		Unchanged: 0/0
 18911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18913 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18915 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18916 ;;Total ram usage:        7 bytes
 18917 ;; Hardware stack levels used:    1
 18918 ;; Hardware stack levels required when called:   16
 18919 ;; This function calls:
 18920 ;;		_fputc
 18921 ;; This function is called by:
 18922 ;;		_pad
 18923 ;; This function uses a non-reentrant model
 18924 ;;
 18925                           
 18926                           	psect	text88
 18927  006C8E                     __ptext88:
 18928                           	opt callstack 0
 18929  006C8E                     _fputs:
 18930                           	opt callstack 9
 18931                           
 18932                           ; BSR set to: 0
 18933                           
 18934                           ; BSR set to: 0
 18935                           ;incstack = 0
 18936  006C8E  0E00               	movlw	0
 18937  006C90  6F95               	movwf	(fputs@i+1)& (0+255),b
 18938  006C92  0E00               	movlw	0
 18939  006C94  6F94               	movwf	fputs@i& (0+255),b
 18940  006C96  D00F               	goto	l12863
 18941  006C98                     l12859:
 18942                           
 18943                           ; BSR set to: 0
 18944  006C98  0060  F24C  F086   	movff	fputs@c,fputc@c
 18945  006C9E  6B87               	clrf	(fputc@c+1)& (0+255),b
 18946  006CA0  0060  F244  F088   	movff	fputs@fp,fputc@fp
 18947  006CA6  0060  F248  F089   	movff	fputs@fp+1,fputc@fp+1
 18948  006CAC  EC68  F02C         	call	_fputc	;wreg free
 18949  006CB0  0100               	movlb	0	; () banked
 18950  006CB2  4B94               	infsnz	fputs@i& (0+255),f,b
 18951  006CB4  2B95               	incf	(fputs@i+1)& (0+255),f,b
 18952  006CB6                     l12863:
 18953                           
 18954                           ; BSR set to: 0
 18955  006CB6  5194               	movf	fputs@i& (0+255),w,b
 18956  006CB8  258F               	addwf	fputs@s& (0+255),w,b
 18957  006CBA  6ED9               	movwf	fsr2l,c
 18958  006CBC  5195               	movf	(fputs@i+1)& (0+255),w,b
 18959  006CBE  2190               	addwfc	(fputs@s+1)& (0+255),w,b
 18960  006CC0  6EDA               	movwf	fsr2h,c
 18961  006CC2  50DF               	movf	indf2,w,c
 18962  006CC4  6F93               	movwf	fputs@c& (0+255),b
 18963  006CC6  5193               	movf	fputs@c& (0+255),w,b
 18964  006CC8  B4D8               	btfsc	status,2,c
 18965  006CCA  0012               	return	
 18966  006CCC  D7E5               	goto	l12859
 18967  006CCE                     __end_of_fputs:
 18968                           	opt callstack 0
 18969                           
 18970 ;; *************** function _fputc *****************
 18971 ;; Defined at:
 18972 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 18973 ;; Parameters:    Size  Location     Type
 18974 ;;  c               2   38[BANK0 ] int 
 18975 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
 18976 ;;		 -> sprintf@f(6), NULL(0), 
 18977 ;; Auto vars:     Size  Location     Type
 18978 ;;		None
 18979 ;; Return value:  Size  Location     Type
 18980 ;;                  2   38[BANK0 ] int 
 18981 ;; Registers used:
 18982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18983 ;; Tracked objects:
 18984 ;;		On entry : 3F/0
 18985 ;;		On exit  : 6/0
 18986 ;;		Unchanged: 0/0
 18987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18990 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18991 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18992 ;;Total ram usage:        9 bytes
 18993 ;; Hardware stack levels used:    1
 18994 ;; Hardware stack levels required when called:   15
 18995 ;; This function calls:
 18996 ;;		_putch
 18997 ;; This function is called by:
 18998 ;;		_pad
 18999 ;;		_vfpfcnvrt
 19000 ;;		_fputs
 19001 ;; This function uses a non-reentrant model
 19002 ;;
 19003                           
 19004                           	psect	text89
 19005  0058D0                     __ptext89:
 19006                           	opt callstack 0
 19007  0058D0                     _fputc:
 19008                           	opt callstack 12
 19009                           
 19010                           ; BSR set to: 0
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;incstack = 0
 19014  0058D0  5188               	movf	fputc@fp& (0+255),w,b
 19015  0058D2  1189               	iorwf	(fputc@fp+1)& (0+255),w,b
 19016  0058D4  B4D8               	btfsc	status,2,c
 19017  0058D6  D004               	goto	u11500
 19018                           
 19019                           ; BSR set to: 0
 19020  0058D8  5188               	movf	fputc@fp& (0+255),w,b
 19021  0058DA  1189               	iorwf	(fputc@fp+1)& (0+255),w,b
 19022  0058DC  A4D8               	btfss	status,2,c
 19023  0058DE  D004               	goto	l12791
 19024  0058E0                     u11500:
 19025                           
 19026                           ; BSR set to: 0
 19027  0058E0  5186               	movf	fputc@c& (0+255),w,b
 19028  0058E2  EC7B  F03B         	call	_putch
 19029  0058E6  0012               	return	
 19030  0058E8                     l12791:
 19031                           
 19032                           ; BSR set to: 0
 19033  0058E8  EE20 F004          	lfsr	2,4
 19034  0058EC  5188               	movf	fputc@fp& (0+255),w,b
 19035  0058EE  26D9               	addwf	fsr2l,f,c
 19036  0058F0  5189               	movf	(fputc@fp+1)& (0+255),w,b
 19037  0058F2  22DA               	addwfc	fsr2h,f,c
 19038  0058F4  50DE               	movf	postinc2,w,c
 19039  0058F6  10DE               	iorwf	postinc2,w,c
 19040  0058F8  B4D8               	btfsc	status,2,c
 19041  0058FA  D016               	goto	u11520
 19042                           
 19043                           ; BSR set to: 0
 19044  0058FC  EE20 F004          	lfsr	2,4
 19045  005900  5188               	movf	fputc@fp& (0+255),w,b
 19046  005902  26D9               	addwf	fsr2l,f,c
 19047  005904  5189               	movf	(fputc@fp+1)& (0+255),w,b
 19048  005906  22DA               	addwfc	fsr2h,f,c
 19049  005908  EE10 F002          	lfsr	1,2
 19050  00590C  5188               	movf	fputc@fp& (0+255),w,b
 19051  00590E  26E1               	addwf	fsr1l,f,c
 19052  005910  5189               	movf	(fputc@fp+1)& (0+255),w,b
 19053  005912  22E2               	addwfc	fsr1h,f,c
 19054  005914  50DE               	movf	postinc2,w,c
 19055  005916  5CE6               	subwf	postinc1,w,c
 19056  005918  50E6               	movf	postinc1,w,c
 19057  00591A  0A80               	xorlw	128
 19058  00591C  6F8E               	movwf	(??_fputc+4)& (0+255),b
 19059  00591E  50DE               	movf	postinc2,w,c
 19060  005920  0A80               	xorlw	128
 19061  005922  598E               	subwfb	(??_fputc+4)& (0+255),w,b
 19062  005924  B0D8               	btfsc	status,0,c
 19063  005926  0012               	return	
 19064  005928                     u11520:
 19065                           
 19066                           ; BSR set to: 0
 19067  005928  EE20 F002          	lfsr	2,2
 19068  00592C  5188               	movf	fputc@fp& (0+255),w,b
 19069  00592E  26D9               	addwf	fsr2l,f,c
 19070  005930  5189               	movf	(fputc@fp+1)& (0+255),w,b
 19071  005932  22DA               	addwfc	fsr2h,f,c
 19072  005934  006F FF78  F08A    	movff	postinc2,??_fputc
 19073  00593A  006F FF74  F08B    	movff	postdec2,??_fputc+1
 19074  005940  0060  F223  FFD9   	movff	fputc@fp,fsr2l
 19075  005946  0060  F227  FFDA   	movff	fputc@fp+1,fsr2h
 19076  00594C  006F FF78  F08C    	movff	postinc2,??_fputc+2
 19077  005952  006F FF74  F08D    	movff	postdec2,??_fputc+3
 19078  005958  518A               	movf	??_fputc& (0+255),w,b
 19079  00595A  258C               	addwf	(??_fputc+2)& (0+255),w,b
 19080  00595C  6ED9               	movwf	fsr2l,c
 19081  00595E  518B               	movf	(??_fputc+1)& (0+255),w,b
 19082  005960  218D               	addwfc	(??_fputc+3)& (0+255),w,b
 19083  005962  6EDA               	movwf	fsr2h,c
 19084  005964  0060  F21B  FFDF   	movff	fputc@c,indf2
 19085  00596A  EE20 F002          	lfsr	2,2
 19086  00596E  5188               	movf	fputc@fp& (0+255),w,b
 19087  005970  26D9               	addwf	fsr2l,f,c
 19088  005972  5189               	movf	(fputc@fp+1)& (0+255),w,b
 19089  005974  22DA               	addwfc	fsr2h,f,c
 19090  005976  2ADE               	incf	postinc2,f,c
 19091  005978  0E00               	movlw	0
 19092  00597A  22DD               	addwfc	postdec2,f,c
 19093  00597C  0012               	return		;funcret
 19094  00597E                     __end_of_fputc:
 19095                           	opt callstack 0
 19096                           
 19097 ;; *************** function _putch *****************
 19098 ;; Defined at:
 19099 ;;		line 18 in file "main.c"
 19100 ;; Parameters:    Size  Location     Type
 19101 ;;  byte            1    wreg     unsigned char 
 19102 ;; Auto vars:     Size  Location     Type
 19103 ;;  byte            1   37[BANK0 ] unsigned char 
 19104 ;; Return value:  Size  Location     Type
 19105 ;;                  1    wreg      void 
 19106 ;; Registers used:
 19107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19108 ;; Tracked objects:
 19109 ;;		On entry : 3F/0
 19110 ;;		On exit  : 3F/39
 19111 ;;		Unchanged: 0/0
 19112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19116 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19117 ;;Total ram usage:        1 bytes
 19118 ;; Hardware stack levels used:    1
 19119 ;; Hardware stack levels required when called:   14
 19120 ;; This function calls:
 19121 ;;		_UART1_Write
 19122 ;;		_UART1_is_tx_ready
 19123 ;; This function is called by:
 19124 ;;		_fputc
 19125 ;; This function uses a non-reentrant model
 19126 ;;
 19127                           
 19128                           	psect	text90
 19129  0076F6                     __ptext90:
 19130                           	opt callstack 0
 19131  0076F6                     _putch:
 19132                           	opt callstack 12
 19133                           
 19134                           ;incstack = 0
 19135                           ;putch@byte stored from wreg
 19136  0076F6  6F85               	movwf	putch@byte& (0+255),b
 19137  0076F8                     
 19138                           ;main.c: 19:     while (!UART1_is_tx_ready());
 19139  0076F8  ECE0  F03B         	call	_UART1_is_tx_ready	;wreg free
 19140  0076FC  0900               	iorlw	0
 19141  0076FE  B4D8               	btfsc	status,2,c
 19142  007700  D7FB               	goto	l12733
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;main.c: 20:     UART1_Write(byte);
 19146  007702  5185               	movf	putch@byte& (0+255),w,b
 19147  007704  ECC4  F035         	call	_UART1_Write
 19148                           
 19149                           ; BSR set to: 57
 19150  007708  0012               	return		;funcret
 19151  00770A                     __end_of_putch:
 19152                           	opt callstack 0
 19153                           
 19154 ;; *************** function _UART1_is_tx_ready *****************
 19155 ;; Defined at:
 19156 ;;		line 152 in file "mcc_generated_files/uart1.c"
 19157 ;; Parameters:    Size  Location     Type
 19158 ;;		None
 19159 ;; Auto vars:     Size  Location     Type
 19160 ;;		None
 19161 ;; Return value:  Size  Location     Type
 19162 ;;                  1    wreg      _Bool 
 19163 ;; Registers used:
 19164 ;;		wreg, status,2
 19165 ;; Tracked objects:
 19166 ;;		On entry : 0/0
 19167 ;;		On exit  : 3F/0
 19168 ;;		Unchanged: 0/0
 19169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19174 ;;Total ram usage:        0 bytes
 19175 ;; Hardware stack levels used:    1
 19176 ;; Hardware stack levels required when called:   13
 19177 ;; This function calls:
 19178 ;;		Nothing
 19179 ;; This function is called by:
 19180 ;;		_putch
 19181 ;; This function uses a non-reentrant model
 19182 ;;
 19183                           
 19184                           	psect	text91
 19185  0077C0                     __ptext91:
 19186                           	opt callstack 0
 19187  0077C0                     _UART1_is_tx_ready:
 19188                           	opt callstack 12
 19189                           
 19190                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 19191                           
 19192                           ; BSR set to: 57
 19193                           ;incstack = 0
 19194  0077C0  0100               	movlb	0	; () banked
 19195  0077C2  51DB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 19196  0077C4  B4D8               	btfsc	status,2,c
 19197  0077C6  D002               	goto	u11350
 19198  0077C8  0E01               	movlw	1
 19199  0077CA  0012               	return	
 19200  0077CC                     u11350:
 19201  0077CC  0E00               	movlw	0
 19202                           
 19203                           ; BSR set to: 0
 19204  0077CE  0012               	return		;funcret
 19205  0077D0                     __end_of_UART1_is_tx_ready:
 19206                           	opt callstack 0
 19207                           
 19208 ;; *************** function _UART1_Write *****************
 19209 ;; Defined at:
 19210 ;;		line 191 in file "mcc_generated_files/uart1.c"
 19211 ;; Parameters:    Size  Location     Type
 19212 ;;  txData          1    wreg     unsigned char 
 19213 ;; Auto vars:     Size  Location     Type
 19214 ;;  txData          1   36[BANK0 ] unsigned char 
 19215 ;; Return value:  Size  Location     Type
 19216 ;;                  1    wreg      void 
 19217 ;; Registers used:
 19218 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19219 ;; Tracked objects:
 19220 ;;		On entry : 3F/0
 19221 ;;		On exit  : 3F/39
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19227 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19228 ;;Total ram usage:        1 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; Hardware stack levels required when called:   13
 19231 ;; This function calls:
 19232 ;;		Nothing
 19233 ;; This function is called by:
 19234 ;;		_putch
 19235 ;; This function uses a non-reentrant model
 19236 ;;
 19237                           
 19238                           	psect	text92
 19239  006B88                     __ptext92:
 19240                           	opt callstack 0
 19241  006B88                     _UART1_Write:
 19242                           	opt callstack 12
 19243                           
 19244                           ; BSR set to: 0
 19245                           ;incstack = 0
 19246                           ;UART1_Write@txData stored from wreg
 19247  006B88  6F84               	movwf	UART1_Write@txData& (0+255),b
 19248  006B8A                     
 19249                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 19250                           
 19251                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 19252  006B8A  0100               	movlb	0	; () banked
 19253  006B8C  51DB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 19254  006B8E  B4D8               	btfsc	status,2,c
 19255  006B90  D7FC               	goto	l12639
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 19259  006B92  0139               	movlb	57	; () banked
 19260  006B94  B993               	btfsc	147,4,b	;volatile
 19261  006B96  D004               	goto	l440
 19262                           
 19263                           ; BSR set to: 57
 19264                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 19265  006B98  0060  F213  FDEA   	movff	UART1_Write@txData,15850	;volatile
 19266                           
 19267                           ;mcc_generated_files/uart1.c: 200:     }
 19268  006B9E  D012               	goto	l12655
 19269  006BA0                     l440:
 19270                           
 19271                           ; BSR set to: 57
 19272                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 19273  006BA0  9993               	bcf	147,4,b	;volatile
 19274                           
 19275                           ; BSR set to: 57
 19276                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 19277  006BA2  0E00               	movlw	low _uart1TxBuffer
 19278  006BA4  0100               	movlb	0	; () banked
 19279  006BA6  25DA               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 19280  006BA8  6ED9               	movwf	fsr2l,c
 19281  006BAA  6ADA               	clrf	fsr2h,c
 19282  006BAC  0E02               	movlw	high _uart1TxBuffer
 19283  006BAE  22DA               	addwfc	fsr2h,f,c
 19284  006BB0  0060  F213  FFDF   	movff	UART1_Write@txData,indf2
 19285                           
 19286                           ; BSR set to: 0
 19287  006BB6  2BDA               	incf	_uart1TxHead& (0+255),f,b	;volatile
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 19291  006BB8  0E3F               	movlw	63
 19292  006BBA  65DA               	cpfsgt	_uart1TxHead& (0+255),b
 19293  006BBC  D002               	goto	l12653
 19294                           
 19295                           ; BSR set to: 0
 19296                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 19297  006BBE  0E00               	movlw	0
 19298  006BC0  6FDA               	movwf	_uart1TxHead& (0+255),b	;volatile
 19299  006BC2                     l12653:
 19300                           
 19301                           ; BSR set to: 0
 19302                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 19303  006BC2  07DB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 19304  006BC4                     l12655:
 19305                           
 19306                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 19307  006BC4  0139               	movlb	57	; () banked
 19308  006BC6  8993               	bsf	147,4,b	;volatile
 19309                           
 19310                           ; BSR set to: 57
 19311  006BC8  0012               	return		;funcret
 19312  006BCA                     __end_of_UART1_Write:
 19313                           	opt callstack 0
 19314                           
 19315 ;; *************** function _abs *****************
 19316 ;; Defined at:
 19317 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 19318 ;; Parameters:    Size  Location     Type
 19319 ;;  a               2   54[BANK0 ] int 
 19320 ;; Auto vars:     Size  Location     Type
 19321 ;;		None
 19322 ;; Return value:  Size  Location     Type
 19323 ;;                  2   54[BANK0 ] int 
 19324 ;; Registers used:
 19325 ;;		wreg, status,2, status,0
 19326 ;; Tracked objects:
 19327 ;;		On entry : 3F/0
 19328 ;;		On exit  : 3F/0
 19329 ;;		Unchanged: 0/0
 19330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19333 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19334 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19335 ;;Total ram usage:        4 bytes
 19336 ;; Hardware stack levels used:    1
 19337 ;; Hardware stack levels required when called:   13
 19338 ;; This function calls:
 19339 ;;		Nothing
 19340 ;; This function is called by:
 19341 ;;		_dtoa
 19342 ;; This function uses a non-reentrant model
 19343 ;;
 19344                           
 19345                           	psect	text93
 19346  006CCE                     __ptext93:
 19347                           	opt callstack 0
 19348  006CCE                     _abs:
 19349                           	opt callstack 13
 19350                           
 19351                           ; BSR set to: 0
 19352                           
 19353                           ; BSR set to: 57
 19354                           ;incstack = 0
 19355  006CCE  BF97               	btfsc	(abs@a+1)& (0+255),7,b
 19356  006CD0  D005               	goto	u11710
 19357  006CD2  5197               	movf	(abs@a+1)& (0+255),w,b
 19358  006CD4  E114               	bnz	l3027
 19359  006CD6  0596               	decf	abs@a& (0+255),w,b
 19360  006CD8  B0D8               	btfsc	status,0,c
 19361  006CDA  D011               	goto	l3027
 19362  006CDC                     u11710:
 19363                           
 19364                           ; BSR set to: 0
 19365  006CDC  0060  F258  F098   	movff	abs@a,??_abs
 19366  006CE2  0060  F25C  F099   	movff	abs@a+1,??_abs+1
 19367  006CE8  1F98               	comf	??_abs& (0+255),f,b
 19368  006CEA  1F99               	comf	(??_abs+1)& (0+255),f,b
 19369  006CEC  4B98               	infsnz	??_abs& (0+255),f,b
 19370  006CEE  2B99               	incf	(??_abs+1)& (0+255),f,b
 19371  006CF0  0060  F260  F096   	movff	??_abs,?_abs
 19372  006CF6  0060  F264  F097   	movff	??_abs+1,?_abs+1
 19373  006CFC  0012               	return	
 19374  006CFE                     l3027:
 19375                           
 19376                           ; BSR set to: 0
 19377  006CFE  0060  F258  F096   	movff	abs@a,?_abs
 19378  006D04  0060  F25C  F097   	movff	abs@a+1,?_abs+1
 19379                           
 19380                           ; BSR set to: 0
 19381  006D0A  0012               	return		;funcret
 19382  006D0C                     __end_of_abs:
 19383                           	opt callstack 0
 19384                           
 19385 ;; *************** function ___aomod *****************
 19386 ;; Defined at:
 19387 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 19388 ;; Parameters:    Size  Location     Type
 19389 ;;  dividend        8   36[BANK0 ] long long 
 19390 ;;  divisor         8   44[BANK0 ] long long 
 19391 ;; Auto vars:     Size  Location     Type
 19392 ;;  sign            1   53[BANK0 ] unsigned char 
 19393 ;;  counter         1   52[BANK0 ] unsigned char 
 19394 ;; Return value:  Size  Location     Type
 19395 ;;                  8   36[BANK0 ] long long 
 19396 ;; Registers used:
 19397 ;;		wreg, status,2, status,0
 19398 ;; Tracked objects:
 19399 ;;		On entry : 3F/0
 19400 ;;		On exit  : 3F/0
 19401 ;;		Unchanged: 0/0
 19402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19403 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19406 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19407 ;;Total ram usage:       18 bytes
 19408 ;; Hardware stack levels used:    1
 19409 ;; Hardware stack levels required when called:   13
 19410 ;; This function calls:
 19411 ;;		Nothing
 19412 ;; This function is called by:
 19413 ;;		_dtoa
 19414 ;; This function uses a non-reentrant model
 19415 ;;
 19416                           
 19417                           	psect	text94
 19418  004F44                     __ptext94:
 19419                           	opt callstack 0
 19420  004F44                     ___aomod:
 19421                           	opt callstack 13
 19422                           
 19423                           ; BSR set to: 0
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;incstack = 0
 19427  004F44  0E00               	movlw	0
 19428  004F46  6F95               	movwf	___aomod@sign& (0+255),b
 19429                           
 19430                           ; BSR set to: 0
 19431  004F48  AF8B               	btfss	(___aomod@dividend+7)& (0+255),7,b
 19432  004F4A  D012               	goto	l13075
 19433                           
 19434                           ; BSR set to: 0
 19435  004F4C  1F8B               	comf	(___aomod@dividend+7)& (0+255),f,b
 19436  004F4E  1F8A               	comf	(___aomod@dividend+6)& (0+255),f,b
 19437  004F50  1F89               	comf	(___aomod@dividend+5)& (0+255),f,b
 19438  004F52  1F88               	comf	(___aomod@dividend+4)& (0+255),f,b
 19439  004F54  1F87               	comf	(___aomod@dividend+3)& (0+255),f,b
 19440  004F56  1F86               	comf	(___aomod@dividend+2)& (0+255),f,b
 19441  004F58  1F85               	comf	(___aomod@dividend+1)& (0+255),f,b
 19442  004F5A  6D84               	negf	___aomod@dividend& (0+255),b
 19443  004F5C  0E00               	movlw	0
 19444  004F5E  2385               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 19445  004F60  2386               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 19446  004F62  2387               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 19447  004F64  2388               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 19448  004F66  2389               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 19449  004F68  238A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 19450  004F6A  238B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 19451                           
 19452                           ; BSR set to: 0
 19453  004F6C  0E01               	movlw	1
 19454  004F6E  6F95               	movwf	___aomod@sign& (0+255),b
 19455  004F70                     l13075:
 19456                           
 19457                           ; BSR set to: 0
 19458  004F70  AF93               	btfss	(___aomod@divisor+7)& (0+255),7,b
 19459  004F72  D010               	goto	l13079
 19460                           
 19461                           ; BSR set to: 0
 19462  004F74  1F93               	comf	(___aomod@divisor+7)& (0+255),f,b
 19463  004F76  1F92               	comf	(___aomod@divisor+6)& (0+255),f,b
 19464  004F78  1F91               	comf	(___aomod@divisor+5)& (0+255),f,b
 19465  004F7A  1F90               	comf	(___aomod@divisor+4)& (0+255),f,b
 19466  004F7C  1F8F               	comf	(___aomod@divisor+3)& (0+255),f,b
 19467  004F7E  1F8E               	comf	(___aomod@divisor+2)& (0+255),f,b
 19468  004F80  1F8D               	comf	(___aomod@divisor+1)& (0+255),f,b
 19469  004F82  6D8C               	negf	___aomod@divisor& (0+255),b
 19470  004F84  0E00               	movlw	0
 19471  004F86  238D               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 19472  004F88  238E               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 19473  004F8A  238F               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 19474  004F8C  2390               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 19475  004F8E  2391               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 19476  004F90  2392               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 19477  004F92  2393               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 19478  004F94                     l13079:
 19479                           
 19480                           ; BSR set to: 0
 19481  004F94  518C               	movf	___aomod@divisor& (0+255),w,b
 19482  004F96  118D               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 19483  004F98  118E               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 19484  004F9A  118F               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 19485  004F9C  1190               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 19486  004F9E  1191               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 19487  004FA0  1192               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 19488  004FA2  1193               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 19489  004FA4  B4D8               	btfsc	status,2,c
 19490  004FA6  D03C               	goto	l13095
 19491                           
 19492                           ; BSR set to: 0
 19493  004FA8  0E01               	movlw	1
 19494  004FAA  6F94               	movwf	___aomod@counter& (0+255),b
 19495  004FAC  D00A               	goto	l13085
 19496  004FAE                     l13083:
 19497                           
 19498                           ; BSR set to: 0
 19499  004FAE  90D8               	bcf	status,0,c
 19500  004FB0  378C               	rlcf	___aomod@divisor& (0+255),f,b
 19501  004FB2  378D               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 19502  004FB4  378E               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 19503  004FB6  378F               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 19504  004FB8  3790               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 19505  004FBA  3791               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 19506  004FBC  3792               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 19507  004FBE  3793               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 19508  004FC0  2B94               	incf	___aomod@counter& (0+255),f,b
 19509  004FC2                     l13085:
 19510                           
 19511                           ; BSR set to: 0
 19512  004FC2  AF93               	btfss	(___aomod@divisor+7)& (0+255),7,b
 19513  004FC4  D7F4               	goto	l13083
 19514  004FC6                     u11840:
 19515                           
 19516                           ; BSR set to: 0
 19517  004FC6  518C               	movf	___aomod@divisor& (0+255),w,b
 19518  004FC8  5D84               	subwf	___aomod@dividend& (0+255),w,b
 19519  004FCA  518D               	movf	(___aomod@divisor+1)& (0+255),w,b
 19520  004FCC  5985               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 19521  004FCE  518E               	movf	(___aomod@divisor+2)& (0+255),w,b
 19522  004FD0  5986               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 19523  004FD2  518F               	movf	(___aomod@divisor+3)& (0+255),w,b
 19524  004FD4  5987               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 19525  004FD6  5190               	movf	(___aomod@divisor+4)& (0+255),w,b
 19526  004FD8  5988               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 19527  004FDA  5191               	movf	(___aomod@divisor+5)& (0+255),w,b
 19528  004FDC  5989               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 19529  004FDE  5192               	movf	(___aomod@divisor+6)& (0+255),w,b
 19530  004FE0  598A               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 19531  004FE2  5193               	movf	(___aomod@divisor+7)& (0+255),w,b
 19532  004FE4  598B               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 19533  004FE6  A0D8               	btfss	status,0,c
 19534  004FE8  D010               	goto	l13091
 19535                           
 19536                           ; BSR set to: 0
 19537  004FEA  518C               	movf	___aomod@divisor& (0+255),w,b
 19538  004FEC  5F84               	subwf	___aomod@dividend& (0+255),f,b
 19539  004FEE  518D               	movf	(___aomod@divisor+1)& (0+255),w,b
 19540  004FF0  5B85               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 19541  004FF2  518E               	movf	(___aomod@divisor+2)& (0+255),w,b
 19542  004FF4  5B86               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 19543  004FF6  518F               	movf	(___aomod@divisor+3)& (0+255),w,b
 19544  004FF8  5B87               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 19545  004FFA  5190               	movf	(___aomod@divisor+4)& (0+255),w,b
 19546  004FFC  5B88               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 19547  004FFE  5191               	movf	(___aomod@divisor+5)& (0+255),w,b
 19548  005000  5B89               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 19549  005002  5192               	movf	(___aomod@divisor+6)& (0+255),w,b
 19550  005004  5B8A               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 19551  005006  5193               	movf	(___aomod@divisor+7)& (0+255),w,b
 19552  005008  5B8B               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 19553  00500A                     l13091:
 19554                           
 19555                           ; BSR set to: 0
 19556  00500A  90D8               	bcf	status,0,c
 19557  00500C  3393               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 19558  00500E  3392               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 19559  005010  3391               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 19560  005012  3390               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 19561  005014  338F               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 19562  005016  338E               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 19563  005018  338D               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 19564  00501A  338C               	rrcf	___aomod@divisor& (0+255),f,b
 19565                           
 19566                           ; BSR set to: 0
 19567  00501C  2F94               	decfsz	___aomod@counter& (0+255),f,b
 19568  00501E  D7D3               	goto	u11840
 19569  005020                     l13095:
 19570                           
 19571                           ; BSR set to: 0
 19572  005020  5195               	movf	___aomod@sign& (0+255),w,b
 19573  005022  B4D8               	btfsc	status,2,c
 19574  005024  D010               	goto	l13099
 19575                           
 19576                           ; BSR set to: 0
 19577  005026  1F8B               	comf	(___aomod@dividend+7)& (0+255),f,b
 19578  005028  1F8A               	comf	(___aomod@dividend+6)& (0+255),f,b
 19579  00502A  1F89               	comf	(___aomod@dividend+5)& (0+255),f,b
 19580  00502C  1F88               	comf	(___aomod@dividend+4)& (0+255),f,b
 19581  00502E  1F87               	comf	(___aomod@dividend+3)& (0+255),f,b
 19582  005030  1F86               	comf	(___aomod@dividend+2)& (0+255),f,b
 19583  005032  1F85               	comf	(___aomod@dividend+1)& (0+255),f,b
 19584  005034  6D84               	negf	___aomod@dividend& (0+255),b
 19585  005036  0E00               	movlw	0
 19586  005038  2385               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 19587  00503A  2386               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 19588  00503C  2387               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 19589  00503E  2388               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 19590  005040  2389               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 19591  005042  238A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 19592  005044  238B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 19593  005046                     l13099:
 19594                           
 19595                           ; BSR set to: 0
 19596  005046  0060  F210  F084   	movff	___aomod@dividend,?___aomod
 19597  00504C  0060  F214  F085   	movff	___aomod@dividend+1,?___aomod+1
 19598  005052  0060  F218  F086   	movff	___aomod@dividend+2,?___aomod+2
 19599  005058  0060  F21C  F087   	movff	___aomod@dividend+3,?___aomod+3
 19600  00505E  0060  F220  F088   	movff	___aomod@dividend+4,?___aomod+4
 19601  005064  0060  F224  F089   	movff	___aomod@dividend+5,?___aomod+5
 19602  00506A  0060  F228  F08A   	movff	___aomod@dividend+6,?___aomod+6
 19603  005070  0060  F22C  F08B   	movff	___aomod@dividend+7,?___aomod+7
 19604                           
 19605                           ; BSR set to: 0
 19606  005076  0012               	return		;funcret
 19607  005078                     __end_of___aomod:
 19608                           	opt callstack 0
 19609                           
 19610 ;; *************** function ___aodiv *****************
 19611 ;; Defined at:
 19612 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 19613 ;; Parameters:    Size  Location     Type
 19614 ;;  dividend        8   36[BANK0 ] long long 
 19615 ;;  divisor         8   44[BANK0 ] long long 
 19616 ;; Auto vars:     Size  Location     Type
 19617 ;;  quotient        8   54[BANK0 ] long long 
 19618 ;;  sign            1   53[BANK0 ] unsigned char 
 19619 ;;  counter         1   52[BANK0 ] unsigned char 
 19620 ;; Return value:  Size  Location     Type
 19621 ;;                  8   36[BANK0 ] long long 
 19622 ;; Registers used:
 19623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19624 ;; Tracked objects:
 19625 ;;		On entry : 3F/0
 19626 ;;		On exit  : 3F/0
 19627 ;;		Unchanged: 0/0
 19628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19629 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19630 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19632 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19633 ;;Total ram usage:       26 bytes
 19634 ;; Hardware stack levels used:    1
 19635 ;; Hardware stack levels required when called:   13
 19636 ;; This function calls:
 19637 ;;		Nothing
 19638 ;; This function is called by:
 19639 ;;		_dtoa
 19640 ;; This function uses a non-reentrant model
 19641 ;;
 19642                           
 19643                           	psect	text95
 19644  004C94                     __ptext95:
 19645                           	opt callstack 0
 19646  004C94                     ___aodiv:
 19647                           	opt callstack 13
 19648                           
 19649                           ; BSR set to: 0
 19650                           
 19651                           ; BSR set to: 0
 19652                           ;incstack = 0
 19653  004C94  0E00               	movlw	0
 19654  004C96  6F95               	movwf	___aodiv@sign& (0+255),b
 19655                           
 19656                           ; BSR set to: 0
 19657  004C98  AF93               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 19658  004C9A  D012               	goto	l13031
 19659                           
 19660                           ; BSR set to: 0
 19661  004C9C  1F93               	comf	(___aodiv@divisor+7)& (0+255),f,b
 19662  004C9E  1F92               	comf	(___aodiv@divisor+6)& (0+255),f,b
 19663  004CA0  1F91               	comf	(___aodiv@divisor+5)& (0+255),f,b
 19664  004CA2  1F90               	comf	(___aodiv@divisor+4)& (0+255),f,b
 19665  004CA4  1F8F               	comf	(___aodiv@divisor+3)& (0+255),f,b
 19666  004CA6  1F8E               	comf	(___aodiv@divisor+2)& (0+255),f,b
 19667  004CA8  1F8D               	comf	(___aodiv@divisor+1)& (0+255),f,b
 19668  004CAA  6D8C               	negf	___aodiv@divisor& (0+255),b
 19669  004CAC  0E00               	movlw	0
 19670  004CAE  238D               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 19671  004CB0  238E               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 19672  004CB2  238F               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 19673  004CB4  2390               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 19674  004CB6  2391               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 19675  004CB8  2392               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 19676  004CBA  2393               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 19677                           
 19678                           ; BSR set to: 0
 19679  004CBC  0E01               	movlw	1
 19680  004CBE  6F95               	movwf	___aodiv@sign& (0+255),b
 19681  004CC0                     l13031:
 19682                           
 19683                           ; BSR set to: 0
 19684  004CC0  AF8B               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 19685  004CC2  D012               	goto	l13037
 19686                           
 19687                           ; BSR set to: 0
 19688  004CC4  1F8B               	comf	(___aodiv@dividend+7)& (0+255),f,b
 19689  004CC6  1F8A               	comf	(___aodiv@dividend+6)& (0+255),f,b
 19690  004CC8  1F89               	comf	(___aodiv@dividend+5)& (0+255),f,b
 19691  004CCA  1F88               	comf	(___aodiv@dividend+4)& (0+255),f,b
 19692  004CCC  1F87               	comf	(___aodiv@dividend+3)& (0+255),f,b
 19693  004CCE  1F86               	comf	(___aodiv@dividend+2)& (0+255),f,b
 19694  004CD0  1F85               	comf	(___aodiv@dividend+1)& (0+255),f,b
 19695  004CD2  6D84               	negf	___aodiv@dividend& (0+255),b
 19696  004CD4  0E00               	movlw	0
 19697  004CD6  2385               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 19698  004CD8  2386               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 19699  004CDA  2387               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 19700  004CDC  2388               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 19701  004CDE  2389               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 19702  004CE0  238A               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 19703  004CE2  238B               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 19704                           
 19705                           ; BSR set to: 0
 19706  004CE4  0E01               	movlw	1
 19707  004CE6  1B95               	xorwf	___aodiv@sign& (0+255),f,b
 19708  004CE8                     l13037:
 19709                           
 19710                           ; BSR set to: 0
 19711  004CE8  EE20  F096         	lfsr	2,___aodiv@quotient
 19712  004CEC  0E07               	movlw	7
 19713  004CEE                     u11761:
 19714  004CEE  6ADE               	clrf	postinc2,c
 19715  004CF0  06E8               	decf	wreg,f,c
 19716  004CF2  E2FD               	bc	u11761
 19717                           
 19718                           ; BSR set to: 0
 19719  004CF4  518C               	movf	___aodiv@divisor& (0+255),w,b
 19720  004CF6  118D               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 19721  004CF8  118E               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 19722  004CFA  118F               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 19723  004CFC  1190               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 19724  004CFE  1191               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 19725  004D00  1192               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 19726  004D02  1193               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 19727  004D04  B4D8               	btfsc	status,2,c
 19728  004D06  D046               	goto	l13059
 19729                           
 19730                           ; BSR set to: 0
 19731  004D08  0E01               	movlw	1
 19732  004D0A  6F94               	movwf	___aodiv@counter& (0+255),b
 19733  004D0C  D00A               	goto	l13045
 19734  004D0E                     l13043:
 19735                           
 19736                           ; BSR set to: 0
 19737  004D0E  90D8               	bcf	status,0,c
 19738  004D10  378C               	rlcf	___aodiv@divisor& (0+255),f,b
 19739  004D12  378D               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 19740  004D14  378E               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 19741  004D16  378F               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 19742  004D18  3790               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 19743  004D1A  3791               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 19744  004D1C  3792               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 19745  004D1E  3793               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 19746  004D20  2B94               	incf	___aodiv@counter& (0+255),f,b
 19747  004D22                     l13045:
 19748                           
 19749                           ; BSR set to: 0
 19750  004D22  AF93               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 19751  004D24  D7F4               	goto	l13043
 19752  004D26                     u11780:
 19753                           
 19754                           ; BSR set to: 0
 19755  004D26  90D8               	bcf	status,0,c
 19756  004D28  3796               	rlcf	___aodiv@quotient& (0+255),f,b
 19757  004D2A  3797               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 19758  004D2C  3798               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 19759  004D2E  3799               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 19760  004D30  379A               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 19761  004D32  379B               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 19762  004D34  379C               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 19763  004D36  379D               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 19764                           
 19765                           ; BSR set to: 0
 19766  004D38  518C               	movf	___aodiv@divisor& (0+255),w,b
 19767  004D3A  5D84               	subwf	___aodiv@dividend& (0+255),w,b
 19768  004D3C  518D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 19769  004D3E  5985               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 19770  004D40  518E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 19771  004D42  5986               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 19772  004D44  518F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 19773  004D46  5987               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 19774  004D48  5190               	movf	(___aodiv@divisor+4)& (0+255),w,b
 19775  004D4A  5988               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 19776  004D4C  5191               	movf	(___aodiv@divisor+5)& (0+255),w,b
 19777  004D4E  5989               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 19778  004D50  5192               	movf	(___aodiv@divisor+6)& (0+255),w,b
 19779  004D52  598A               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 19780  004D54  5193               	movf	(___aodiv@divisor+7)& (0+255),w,b
 19781  004D56  598B               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 19782  004D58  A0D8               	btfss	status,0,c
 19783  004D5A  D011               	goto	l13055
 19784                           
 19785                           ; BSR set to: 0
 19786  004D5C  518C               	movf	___aodiv@divisor& (0+255),w,b
 19787  004D5E  5F84               	subwf	___aodiv@dividend& (0+255),f,b
 19788  004D60  518D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 19789  004D62  5B85               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 19790  004D64  518E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 19791  004D66  5B86               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 19792  004D68  518F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 19793  004D6A  5B87               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 19794  004D6C  5190               	movf	(___aodiv@divisor+4)& (0+255),w,b
 19795  004D6E  5B88               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 19796  004D70  5191               	movf	(___aodiv@divisor+5)& (0+255),w,b
 19797  004D72  5B89               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 19798  004D74  5192               	movf	(___aodiv@divisor+6)& (0+255),w,b
 19799  004D76  5B8A               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 19800  004D78  5193               	movf	(___aodiv@divisor+7)& (0+255),w,b
 19801  004D7A  5B8B               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 19802                           
 19803                           ; BSR set to: 0
 19804  004D7C  8196               	bsf	___aodiv@quotient& (0+255),0,b
 19805  004D7E                     l13055:
 19806                           
 19807                           ; BSR set to: 0
 19808  004D7E  90D8               	bcf	status,0,c
 19809  004D80  3393               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 19810  004D82  3392               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 19811  004D84  3391               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 19812  004D86  3390               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 19813  004D88  338F               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 19814  004D8A  338E               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 19815  004D8C  338D               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 19816  004D8E  338C               	rrcf	___aodiv@divisor& (0+255),f,b
 19817                           
 19818                           ; BSR set to: 0
 19819  004D90  2F94               	decfsz	___aodiv@counter& (0+255),f,b
 19820  004D92  D7C9               	goto	u11780
 19821  004D94                     l13059:
 19822                           
 19823                           ; BSR set to: 0
 19824  004D94  5195               	movf	___aodiv@sign& (0+255),w,b
 19825  004D96  B4D8               	btfsc	status,2,c
 19826  004D98  D010               	goto	l13063
 19827                           
 19828                           ; BSR set to: 0
 19829  004D9A  1F9D               	comf	(___aodiv@quotient+7)& (0+255),f,b
 19830  004D9C  1F9C               	comf	(___aodiv@quotient+6)& (0+255),f,b
 19831  004D9E  1F9B               	comf	(___aodiv@quotient+5)& (0+255),f,b
 19832  004DA0  1F9A               	comf	(___aodiv@quotient+4)& (0+255),f,b
 19833  004DA2  1F99               	comf	(___aodiv@quotient+3)& (0+255),f,b
 19834  004DA4  1F98               	comf	(___aodiv@quotient+2)& (0+255),f,b
 19835  004DA6  1F97               	comf	(___aodiv@quotient+1)& (0+255),f,b
 19836  004DA8  6D96               	negf	___aodiv@quotient& (0+255),b
 19837  004DAA  0E00               	movlw	0
 19838  004DAC  2397               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 19839  004DAE  2398               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 19840  004DB0  2399               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 19841  004DB2  239A               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 19842  004DB4  239B               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 19843  004DB6  239C               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 19844  004DB8  239D               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 19845  004DBA                     l13063:
 19846                           
 19847                           ; BSR set to: 0
 19848  004DBA  0060  F258  F084   	movff	___aodiv@quotient,?___aodiv
 19849  004DC0  0060  F25C  F085   	movff	___aodiv@quotient+1,?___aodiv+1
 19850  004DC6  0060  F260  F086   	movff	___aodiv@quotient+2,?___aodiv+2
 19851  004DCC  0060  F264  F087   	movff	___aodiv@quotient+3,?___aodiv+3
 19852  004DD2  0060  F268  F088   	movff	___aodiv@quotient+4,?___aodiv+4
 19853  004DD8  0060  F26C  F089   	movff	___aodiv@quotient+5,?___aodiv+5
 19854  004DDE  0060  F270  F08A   	movff	___aodiv@quotient+6,?___aodiv+6
 19855  004DE4  0060  F274  F08B   	movff	___aodiv@quotient+7,?___aodiv+7
 19856                           
 19857                           ; BSR set to: 0
 19858  004DEA  0012               	return		;funcret
 19859  004DEC                     __end_of___aodiv:
 19860                           	opt callstack 0
 19861                           
 19862 ;; *************** function _atoi *****************
 19863 ;; Defined at:
 19864 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 19865 ;; Parameters:    Size  Location     Type
 19866 ;;  s               2   43[BANK0 ] PTR const unsigned char 
 19867 ;;		 -> STR_67(17), STR_66(18), STR_65(18), STR_64(20), 
 19868 ;;		 -> STR_63(20), STR_62(20), STR_61(20), STR_60(20), 
 19869 ;;		 -> STR_59(20), STR_58(20), STR_57(20), STR_56(21), 
 19870 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 19871 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 19872 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 19873 ;;		 -> STR_41(5), STR_40(10), STR_39(56), STR_38(20), 
 19874 ;;		 -> STR_37(17), STR_36(23), STR_35(20), STR_34(28), 
 19875 ;;		 -> STR_33(5), STR_27(18), STR_24(37), STR_23(38), 
 19876 ;;		 -> STR_21(37), STR_20(38), STR_19(19), STR_18(9), 
 19877 ;;		 -> STR_17(9), STR_13(17), lcdTopRow(20), STR_11(27), 
 19878 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 19879 ;;		 -> STR_4(17), STR_3(10), STR_2(17), lcdBtnRow(20), 
 19880 ;;		 -> STR_1(16), 
 19881 ;; Auto vars:     Size  Location     Type
 19882 ;;  n               2   56[BANK0 ] int 
 19883 ;;  neg             2   49[BANK0 ] int 
 19884 ;; Return value:  Size  Location     Type
 19885 ;;                  2   43[BANK0 ] int 
 19886 ;; Registers used:
 19887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19888 ;; Tracked objects:
 19889 ;;		On entry : 3F/0
 19890 ;;		On exit  : 3F/0
 19891 ;;		Unchanged: 0/0
 19892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19894 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19896 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19897 ;;Total ram usage:       15 bytes
 19898 ;; Hardware stack levels used:    1
 19899 ;; Hardware stack levels required when called:   14
 19900 ;; This function calls:
 19901 ;;		___wmul
 19902 ;;		_isdigit
 19903 ;;		_isspace
 19904 ;; This function is called by:
 19905 ;;		_vfpfcnvrt
 19906 ;; This function uses a non-reentrant model
 19907 ;;
 19908                           
 19909                           	psect	text96
 19910  0043FC                     __ptext96:
 19911                           	opt callstack 0
 19912  0043FC                     _atoi:
 19913                           	opt callstack 13
 19914                           
 19915                           ; BSR set to: 0
 19916                           
 19917                           ; BSR set to: 0
 19918                           ;incstack = 0
 19919  0043FC  0E00               	movlw	0
 19920  0043FE  6F99               	movwf	(atoi@n+1)& (0+255),b
 19921  004400  0E00               	movlw	0
 19922  004402  6F98               	movwf	atoi@n& (0+255),b
 19923  004404  0E00               	movlw	0
 19924  004406  6F92               	movwf	(atoi@neg+1)& (0+255),b
 19925  004408  0E00               	movlw	0
 19926  00440A  6F91               	movwf	atoi@neg& (0+255),b
 19927  00440C  D002               	goto	l13349
 19928  00440E                     l13347:
 19929                           
 19930                           ; BSR set to: 0
 19931  00440E  4B8B               	infsnz	atoi@s& (0+255),f,b
 19932  004410  2B8C               	incf	(atoi@s+1)& (0+255),f,b
 19933  004412                     l13349:
 19934                           
 19935                           ; BSR set to: 0
 19936  004412  0E01               	movlw	1
 19937  004414  6F97               	movwf	_atoi$4149& (0+255),b
 19938                           
 19939                           ; BSR set to: 0
 19940  004416  0060  F22F  FFF6   	movff	atoi@s,tblptrl
 19941  00441C  0060  F233  FFF7   	movff	atoi@s+1,tblptrh
 19942  004422  0E00               	movlw	low (__mediumconst shr (0+16))
 19943  004424  6EF8               	movwf	tblptru,c
 19944  004426  0E0F               	movlw	(high __ramtop+-1)
 19945  004428  64F7               	cpfsgt	tblptrh,c
 19946  00442A  D003               	bra	u12307
 19947  00442C  0008               	tblrd		*
 19948  00442E  50F5               	movf	tablat,w,c
 19949  004430  D007               	bra	u12300
 19950  004432                     u12307:
 19951  004432  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19952  004438  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19953  00443E  50EF               	movf	indf0,w,c
 19954  004440                     u12300:
 19955  004440  0A20               	xorlw	32
 19956  004442  B4D8               	btfsc	status,2,c
 19957  004444  D029               	goto	l13357
 19958  004446  0EF7               	movlw	247
 19959  004448  0100               	movlb	0	; () banked
 19960  00444A  6F8D               	movwf	??_atoi& (0+255),b
 19961  00444C  0EFF               	movlw	255
 19962  00444E  6F8E               	movwf	(??_atoi+1)& (0+255),b
 19963  004450  0060  F22F  FFF6   	movff	atoi@s,tblptrl
 19964  004456  0060  F233  FFF7   	movff	atoi@s+1,tblptrh
 19965  00445C  0E00               	movlw	low (__mediumconst shr (0+16))
 19966  00445E  6EF8               	movwf	tblptru,c
 19967  004460  0E0F               	movlw	(high __ramtop+-1)
 19968  004462  64F7               	cpfsgt	tblptrh,c
 19969  004464  D003               	bra	u12327
 19970  004466  0008               	tblrd		*
 19971  004468  50F5               	movf	tablat,w,c
 19972  00446A  D007               	bra	u12320
 19973  00446C                     u12327:
 19974  00446C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19975  004472  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19976  004478  50EF               	movf	indf0,w,c
 19977  00447A                     u12320:
 19978  00447A  0100               	movlb	0	; () banked
 19979  00447C  6F8F               	movwf	(??_atoi+2)& (0+255),b
 19980  00447E  6B90               	clrf	(??_atoi+3)& (0+255),b
 19981  004480  518D               	movf	??_atoi& (0+255),w,b
 19982  004482  278F               	addwf	(??_atoi+2)& (0+255),f,b
 19983  004484  518E               	movf	(??_atoi+1)& (0+255),w,b
 19984  004486  2390               	addwfc	(??_atoi+3)& (0+255),f,b
 19985  004488  5190               	movf	(??_atoi+3)& (0+255),w,b
 19986  00448A  E104               	bnz	u12330
 19987  00448C  0E05               	movlw	5
 19988  00448E  5D8F               	subwf	(??_atoi+2)& (0+255),w,b
 19989  004490  A0D8               	btfss	status,0,c
 19990  004492  D002               	goto	l13357
 19991  004494                     u12330:
 19992                           
 19993                           ; BSR set to: 0
 19994  004494  0E00               	movlw	0
 19995  004496  6F97               	movwf	_atoi$4149& (0+255),b
 19996  004498                     l13357:
 19997  004498  0060  F25C  F093   	movff	_atoi$4149,_atoi$4148
 19998  00449E  0100               	movlb	0	; () banked
 19999  0044A0  6B94               	clrf	(_atoi$4148+1)& (0+255),b
 20000                           
 20001                           ; BSR set to: 0
 20002  0044A2  5193               	movf	_atoi$4148& (0+255),w,b
 20003  0044A4  1194               	iorwf	(_atoi$4148+1)& (0+255),w,b
 20004  0044A6  B4D8               	btfsc	status,2,c
 20005  0044A8  D008               	goto	l13367
 20006  0044AA  D7B1               	goto	l13347
 20007  0044AC                     l13363:
 20008                           
 20009                           ; BSR set to: 0
 20010  0044AC  0E00               	movlw	0
 20011  0044AE  6F92               	movwf	(atoi@neg+1)& (0+255),b
 20012  0044B0  0E01               	movlw	1
 20013  0044B2  6F91               	movwf	atoi@neg& (0+255),b
 20014  0044B4                     l13365:
 20015                           
 20016                           ; BSR set to: 0
 20017  0044B4  4B8B               	infsnz	atoi@s& (0+255),f,b
 20018  0044B6  2B8C               	incf	(atoi@s+1)& (0+255),f,b
 20019  0044B8  D052               	goto	l13373
 20020  0044BA                     l13367:
 20021                           
 20022                           ; BSR set to: 0
 20023  0044BA  0060  F22F  FFF6   	movff	atoi@s,tblptrl
 20024  0044C0  0060  F233  FFF7   	movff	atoi@s+1,tblptrh
 20025  0044C6  0E00               	movlw	low (__mediumconst shr (0+16))
 20026  0044C8  6EF8               	movwf	tblptru,c
 20027  0044CA  0E0F               	movlw	(high __ramtop+-1)
 20028  0044CC  64F7               	cpfsgt	tblptrh,c
 20029  0044CE  D003               	bra	u12357
 20030  0044D0  0008               	tblrd		*
 20031  0044D2  50F5               	movf	tablat,w,c
 20032  0044D4  D007               	bra	u12350
 20033  0044D6                     u12357:
 20034  0044D6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20035  0044DC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20036  0044E2  50EF               	movf	indf0,w,c
 20037  0044E4                     u12350:
 20038  0044E4  0100               	movlb	0	; () banked
 20039  0044E6  6F8D               	movwf	??_atoi& (0+255),b
 20040  0044E8  6B8E               	clrf	(??_atoi+1)& (0+255),b
 20041                           
 20042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20043                           ; Switch size 1, requested type "simple"
 20044                           ; Number of cases is 1, Range of values is 0 to 0
 20045                           ; switch strategies available:
 20046                           ; Name         Instructions Cycles
 20047                           ; simple_byte            4     3 (average)
 20048                           ;	Chosen strategy is simple_byte
 20049  0044EA  518E               	movf	(??_atoi+1)& (0+255),w,b
 20050  0044EC  0A00               	xorlw	0	; case 0
 20051  0044EE  A4D8               	btfss	status,2,c
 20052  0044F0  D036               	goto	l13373
 20053                           
 20054                           ; BSR set to: 0
 20055                           ; Switch size 1, requested type "simple"
 20056                           ; Number of cases is 2, Range of values is 43 to 45
 20057                           ; switch strategies available:
 20058                           ; Name         Instructions Cycles
 20059                           ; simple_byte            7     4 (average)
 20060                           ;	Chosen strategy is simple_byte
 20061  0044F2  518D               	movf	??_atoi& (0+255),w,b
 20062  0044F4  0A2B               	xorlw	43	; case 43
 20063  0044F6  B4D8               	btfsc	status,2,c
 20064  0044F8  D7DD               	goto	l13365
 20065  0044FA  0A06               	xorlw	6	; case 45
 20066  0044FC  B4D8               	btfsc	status,2,c
 20067  0044FE  D7D6               	goto	l13363
 20068  004500  D02E               	goto	l13373
 20069  004502                     l13369:
 20070                           
 20071                           ; BSR set to: 0
 20072  004502  0060  F260  F084   	movff	atoi@n,___wmul@multiplier
 20073  004508  0060  F264  F085   	movff	atoi@n+1,___wmul@multiplier+1
 20074  00450E  0E00               	movlw	0
 20075  004510  6F87               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20076  004512  0E0A               	movlw	10
 20077  004514  6F86               	movwf	___wmul@multiplicand& (0+255),b
 20078  004516  EC40  F039         	call	___wmul	;wreg free
 20079  00451A  0060  F22F  FFF6   	movff	atoi@s,tblptrl
 20080  004520  0060  F233  FFF7   	movff	atoi@s+1,tblptrh
 20081  004526  0E00               	movlw	low (__mediumconst shr (0+16))
 20082  004528  6EF8               	movwf	tblptru,c
 20083  00452A  0E0F               	movlw	(high __ramtop+-1)
 20084  00452C  64F7               	cpfsgt	tblptrh,c
 20085  00452E  D003               	bra	u12367
 20086  004530  0008               	tblrd		*
 20087  004532  50F5               	movf	tablat,w,c
 20088  004534  D007               	bra	u12360
 20089  004536                     u12367:
 20090  004536  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20091  00453C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20092  004542  50EF               	movf	indf0,w,c
 20093  004544                     u12360:
 20094  004544  0100               	movlb	0	; () banked
 20095  004546  6F8D               	movwf	??_atoi& (0+255),b
 20096  004548  518D               	movf	??_atoi& (0+255),w,b
 20097  00454A  5F84               	subwf	?___wmul& (0+255),f,b
 20098  00454C  0E00               	movlw	0
 20099  00454E  5B85               	subwfb	(?___wmul+1)& (0+255),f,b
 20100  004550  0E30               	movlw	48
 20101  004552  2584               	addwf	?___wmul& (0+255),w,b
 20102  004554  6F98               	movwf	atoi@n& (0+255),b
 20103  004556  0E00               	movlw	0
 20104  004558  2185               	addwfc	(?___wmul+1)& (0+255),w,b
 20105  00455A  6F99               	movwf	(atoi@n+1)& (0+255),b
 20106  00455C  D7AB               	goto	l13365
 20107  00455E                     l13373:
 20108                           
 20109                           ; BSR set to: 0
 20110  00455E  0ED0               	movlw	208
 20111  004560  6F8D               	movwf	??_atoi& (0+255),b
 20112  004562  0EFF               	movlw	255
 20113  004564  6F8E               	movwf	(??_atoi+1)& (0+255),b
 20114  004566  0060  F22F  FFF6   	movff	atoi@s,tblptrl
 20115  00456C  0060  F233  FFF7   	movff	atoi@s+1,tblptrh
 20116  004572  0E00               	movlw	low (__mediumconst shr (0+16))
 20117  004574  6EF8               	movwf	tblptru,c
 20118  004576  0E0F               	movlw	(high __ramtop+-1)
 20119  004578  64F7               	cpfsgt	tblptrh,c
 20120  00457A  D003               	bra	u12377
 20121  00457C  0008               	tblrd		*
 20122  00457E  50F5               	movf	tablat,w,c
 20123  004580  D007               	bra	u12370
 20124  004582                     u12377:
 20125  004582  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20126  004588  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20127  00458E  50EF               	movf	indf0,w,c
 20128  004590                     u12370:
 20129  004590  0100               	movlb	0	; () banked
 20130  004592  6F8F               	movwf	(??_atoi+2)& (0+255),b
 20131  004594  6B90               	clrf	(??_atoi+3)& (0+255),b
 20132  004596  518D               	movf	??_atoi& (0+255),w,b
 20133  004598  278F               	addwf	(??_atoi+2)& (0+255),f,b
 20134  00459A  518E               	movf	(??_atoi+1)& (0+255),w,b
 20135  00459C  2390               	addwfc	(??_atoi+3)& (0+255),f,b
 20136  00459E  5190               	movf	(??_atoi+3)& (0+255),w,b
 20137  0045A0  E106               	bnz	u12380
 20138  0045A2  0E0A               	movlw	10
 20139  0045A4  5D8F               	subwf	(??_atoi+2)& (0+255),w,b
 20140  0045A6  B0D8               	btfsc	status,0,c
 20141  0045A8  D002               	goto	u12380
 20142  0045AA  0E01               	movlw	1
 20143  0045AC  D001               	goto	u12390
 20144  0045AE                     u12380:
 20145  0045AE  0E00               	movlw	0
 20146  0045B0                     u12390:
 20147  0045B0  6F95               	movwf	_atoi$4150& (0+255),b
 20148  0045B2  6B96               	clrf	(_atoi$4150+1)& (0+255),b
 20149                           
 20150                           ; BSR set to: 0
 20151  0045B4  5195               	movf	_atoi$4150& (0+255),w,b
 20152  0045B6  1196               	iorwf	(_atoi$4150+1)& (0+255),w,b
 20153  0045B8  A4D8               	btfss	status,2,c
 20154  0045BA  D7A3               	goto	l13369
 20155                           
 20156                           ; BSR set to: 0
 20157  0045BC  5191               	movf	atoi@neg& (0+255),w,b
 20158  0045BE  1192               	iorwf	(atoi@neg+1)& (0+255),w,b
 20159  0045C0  A4D8               	btfss	status,2,c
 20160  0045C2  D011               	goto	l3058
 20161                           
 20162                           ; BSR set to: 0
 20163  0045C4  0060  F260  F08D   	movff	atoi@n,??_atoi
 20164  0045CA  0060  F264  F08E   	movff	atoi@n+1,??_atoi+1
 20165  0045D0  1F8D               	comf	??_atoi& (0+255),f,b
 20166  0045D2  1F8E               	comf	(??_atoi+1)& (0+255),f,b
 20167  0045D4  4B8D               	infsnz	??_atoi& (0+255),f,b
 20168  0045D6  2B8E               	incf	(??_atoi+1)& (0+255),f,b
 20169  0045D8  0060  F234  F08B   	movff	??_atoi,?_atoi
 20170  0045DE  0060  F238  F08C   	movff	??_atoi+1,?_atoi+1
 20171  0045E4  0012               	return	
 20172  0045E6                     l3058:
 20173                           
 20174                           ; BSR set to: 0
 20175  0045E6  0060  F260  F08B   	movff	atoi@n,?_atoi
 20176  0045EC  0060  F264  F08C   	movff	atoi@n+1,?_atoi+1
 20177                           
 20178                           ; BSR set to: 0
 20179  0045F2  0012               	return		;funcret
 20180  0045F4                     __end_of_atoi:
 20181                           	opt callstack 0
 20182                           
 20183 ;; *************** function _isspace *****************
 20184 ;; Defined at:
 20185 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 20186 ;; Parameters:    Size  Location     Type
 20187 ;;  c               2   36[BANK0 ] int 
 20188 ;; Auto vars:     Size  Location     Type
 20189 ;;		None
 20190 ;; Return value:  Size  Location     Type
 20191 ;;                  2   36[BANK0 ] int 
 20192 ;; Registers used:
 20193 ;;		wreg, status,2, status,0
 20194 ;; Tracked objects:
 20195 ;;		On entry : 0/0
 20196 ;;		On exit  : 3F/0
 20197 ;;		Unchanged: 0/0
 20198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20201 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20202 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20203 ;;Total ram usage:        7 bytes
 20204 ;; Hardware stack levels used:    1
 20205 ;; Hardware stack levels required when called:   13
 20206 ;; This function calls:
 20207 ;;		Nothing
 20208 ;; This function is called by:
 20209 ;;		_atoi
 20210 ;; This function uses a non-reentrant model
 20211 ;;
 20212                           
 20213                           	psect	text97
 20214  006A78                     __ptext97:
 20215                           	opt callstack 0
 20216  006A78                     _isspace:
 20217                           	opt callstack 13
 20218                           
 20219                           ; BSR set to: 0
 20220                           ;incstack = 0
 20221  006A78  0E01               	movlw	1
 20222  006A7A  0100               	movlb	0	; () banked
 20223  006A7C  6F8A               	movwf	_isspace$4166& (0+255),b
 20224                           
 20225                           ; BSR set to: 0
 20226  006A7E  0E20               	movlw	32
 20227  006A80  1984               	xorwf	isspace@c& (0+255),w,b
 20228  006A82  1185               	iorwf	(isspace@c+1)& (0+255),w,b
 20229  006A84  B4D8               	btfsc	status,2,c
 20230  006A86  D016               	goto	l13111
 20231                           
 20232                           ; BSR set to: 0
 20233  006A88  0EF7               	movlw	247
 20234  006A8A  6F86               	movwf	??_isspace& (0+255),b
 20235  006A8C  0EFF               	movlw	255
 20236  006A8E  6F87               	movwf	(??_isspace+1)& (0+255),b
 20237  006A90  0060  F210  F088   	movff	isspace@c,??_isspace+2
 20238  006A96  0060  F214  F089   	movff	isspace@c+1,??_isspace+3
 20239  006A9C  5186               	movf	??_isspace& (0+255),w,b
 20240  006A9E  2788               	addwf	(??_isspace+2)& (0+255),f,b
 20241  006AA0  5187               	movf	(??_isspace+1)& (0+255),w,b
 20242  006AA2  2389               	addwfc	(??_isspace+3)& (0+255),f,b
 20243  006AA4  5189               	movf	(??_isspace+3)& (0+255),w,b
 20244  006AA6  E104               	bnz	u11880
 20245  006AA8  0E05               	movlw	5
 20246  006AAA  5D88               	subwf	(??_isspace+2)& (0+255),w,b
 20247  006AAC  A0D8               	btfss	status,0,c
 20248  006AAE  D002               	goto	l13111
 20249  006AB0                     u11880:
 20250                           
 20251                           ; BSR set to: 0
 20252  006AB0  0E00               	movlw	0
 20253  006AB2  6F8A               	movwf	_isspace$4166& (0+255),b
 20254  006AB4                     l13111:
 20255                           
 20256                           ; BSR set to: 0
 20257  006AB4  0060  F228  F084   	movff	_isspace$4166,?_isspace
 20258  006ABA  6B85               	clrf	(?_isspace+1)& (0+255),b
 20259                           
 20260                           ; BSR set to: 0
 20261  006ABC  0012               	return		;funcret
 20262  006ABE                     __end_of_isspace:
 20263                           	opt callstack 0
 20264                           
 20265 ;; *************** function _isdigit *****************
 20266 ;; Defined at:
 20267 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 20268 ;; Parameters:    Size  Location     Type
 20269 ;;  c               2   36[BANK0 ] int 
 20270 ;; Auto vars:     Size  Location     Type
 20271 ;;		None
 20272 ;; Return value:  Size  Location     Type
 20273 ;;                  2   36[BANK0 ] int 
 20274 ;; Registers used:
 20275 ;;		wreg, status,2, status,0
 20276 ;; Tracked objects:
 20277 ;;		On entry : 0/0
 20278 ;;		On exit  : 3F/0
 20279 ;;		Unchanged: 0/0
 20280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20284 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20285 ;;Total ram usage:        6 bytes
 20286 ;; Hardware stack levels used:    1
 20287 ;; Hardware stack levels required when called:   13
 20288 ;; This function calls:
 20289 ;;		Nothing
 20290 ;; This function is called by:
 20291 ;;		_vfpfcnvrt
 20292 ;;		_atoi
 20293 ;; This function uses a non-reentrant model
 20294 ;;
 20295                           
 20296                           	psect	text98
 20297  006EAC                     __ptext98:
 20298                           	opt callstack 0
 20299  006EAC                     _isdigit:
 20300                           	opt callstack 14
 20301                           
 20302                           ; BSR set to: 0
 20303                           ;incstack = 0
 20304  006EAC  0ED0               	movlw	208
 20305  006EAE  0100               	movlb	0	; () banked
 20306  006EB0  6F86               	movwf	??_isdigit& (0+255),b
 20307  006EB2  0EFF               	movlw	255
 20308  006EB4  6F87               	movwf	(??_isdigit+1)& (0+255),b
 20309  006EB6  0060  F210  F088   	movff	isdigit@c,??_isdigit+2
 20310  006EBC  0060  F214  F089   	movff	isdigit@c+1,??_isdigit+3
 20311  006EC2  5186               	movf	??_isdigit& (0+255),w,b
 20312  006EC4  2788               	addwf	(??_isdigit+2)& (0+255),f,b
 20313  006EC6  5187               	movf	(??_isdigit+1)& (0+255),w,b
 20314  006EC8  2389               	addwfc	(??_isdigit+3)& (0+255),f,b
 20315  006ECA  5189               	movf	(??_isdigit+3)& (0+255),w,b
 20316  006ECC  E106               	bnz	u11720
 20317  006ECE  0E0A               	movlw	10
 20318  006ED0  5D88               	subwf	(??_isdigit+2)& (0+255),w,b
 20319  006ED2  B0D8               	btfsc	status,0,c
 20320  006ED4  D002               	goto	u11720
 20321  006ED6  0E01               	movlw	1
 20322  006ED8  D001               	goto	u11730
 20323  006EDA                     u11720:
 20324  006EDA  0E00               	movlw	0
 20325  006EDC                     u11730:
 20326  006EDC  6F84               	movwf	?_isdigit& (0+255),b
 20327  006EDE  6B85               	clrf	(?_isdigit+1)& (0+255),b
 20328                           
 20329                           ; BSR set to: 0
 20330  006EE0  0012               	return		;funcret
 20331  006EE2                     __end_of_isdigit:
 20332                           	opt callstack 0
 20333                           
 20334 ;; *************** function ___wmul *****************
 20335 ;; Defined at:
 20336 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;  multiplier      2   36[BANK0 ] unsigned int 
 20339 ;;  multiplicand    2   38[BANK0 ] unsigned int 
 20340 ;; Auto vars:     Size  Location     Type
 20341 ;;  product         2   40[BANK0 ] unsigned int 
 20342 ;; Return value:  Size  Location     Type
 20343 ;;                  2   36[BANK0 ] unsigned int 
 20344 ;; Registers used:
 20345 ;;		wreg, status,2, status,0, prodl, prodh
 20346 ;; Tracked objects:
 20347 ;;		On entry : 3F/0
 20348 ;;		On exit  : 3F/0
 20349 ;;		Unchanged: 0/0
 20350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20352 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20354 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20355 ;;Total ram usage:        6 bytes
 20356 ;; Hardware stack levels used:    1
 20357 ;; Hardware stack levels required when called:   13
 20358 ;; This function calls:
 20359 ;;		Nothing
 20360 ;; This function is called by:
 20361 ;;		_main
 20362 ;;		_atoi
 20363 ;; This function uses a non-reentrant model
 20364 ;;
 20365                           
 20366                           	psect	text99
 20367  007280                     __ptext99:
 20368                           	opt callstack 0
 20369  007280                     ___wmul:
 20370                           	opt callstack 13
 20371                           
 20372                           ; BSR set to: 0
 20373                           
 20374                           ; BSR set to: 0
 20375                           ;incstack = 0
 20376  007280  5184               	movf	___wmul@multiplier& (0+255),w,b
 20377  007282  0386               	mulwf	___wmul@multiplicand& (0+255),b
 20378  007284  006F FFCC  F088    	movff	prodl,___wmul@product
 20379  00728A  006F FFD0  F089    	movff	prodh,___wmul@product+1
 20380  007290  5184               	movf	___wmul@multiplier& (0+255),w,b
 20381  007292  0387               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20382  007294  50F3               	movf	243,w,c
 20383  007296  2789               	addwf	(___wmul@product+1)& (0+255),f,b
 20384  007298  5185               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20385  00729A  0386               	mulwf	___wmul@multiplicand& (0+255),b
 20386  00729C  50F3               	movf	243,w,c
 20387  00729E  2789               	addwf	(___wmul@product+1)& (0+255),f,b
 20388                           
 20389                           ; BSR set to: 0
 20390  0072A0  0060  F220  F084   	movff	___wmul@product,?___wmul
 20391  0072A6  0060  F224  F085   	movff	___wmul@product+1,?___wmul+1
 20392                           
 20393                           ; BSR set to: 0
 20394  0072AC  0012               	return		;funcret
 20395  0072AE                     __end_of___wmul:
 20396                           	opt callstack 0
 20397                           
 20398 ;; *************** function _MonitorErrorSet *****************
 20399 ;; Defined at:
 20400 ;;		line 130 in file "main.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;  flag            1    wreg     enum E16840
 20403 ;; Auto vars:     Size  Location     Type
 20404 ;;  flag            1   36[BANK0 ] enum E16840
 20405 ;; Return value:  Size  Location     Type
 20406 ;;                  1    wreg      void 
 20407 ;; Registers used:
 20408 ;;		wreg, status,2, status,0
 20409 ;; Tracked objects:
 20410 ;;		On entry : 3C/2
 20411 ;;		On exit  : 3F/1
 20412 ;;		Unchanged: 0/0
 20413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20417 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20418 ;;Total ram usage:        1 bytes
 20419 ;; Hardware stack levels used:    1
 20420 ;; Hardware stack levels required when called:   13
 20421 ;; This function calls:
 20422 ;;		Nothing
 20423 ;; This function is called by:
 20424 ;;		_MonitorMsgForcedSend
 20425 ;;		_main
 20426 ;; This function uses a non-reentrant model
 20427 ;;
 20428                           
 20429                           	psect	text100
 20430  00778C                     __ptext100:
 20431                           	opt callstack 0
 20432  00778C                     _MonitorErrorSet:
 20433                           	opt callstack 15
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;incstack = 0
 20437                           ;MonitorErrorSet@flag stored from wreg
 20438  00778C  0100               	movlb	0	; () banked
 20439  00778E  6F84               	movwf	MonitorErrorSet@flag& (0+255),b
 20440                           
 20441                           ;main.c: 131:     ctrlErrorStatus = ctrlErrorStatus|flag;
 20442  007790  0101               	movlb	1	; () banked
 20443  007792  514C               	movf	_ctrlErrorStatus& (0+255),w,b
 20444  007794  0100               	movlb	0	; () banked
 20445  007796  1184               	iorwf	MonitorErrorSet@flag& (0+255),w,b
 20446  007798  0101               	movlb	1	; () banked
 20447  00779A  6F4C               	movwf	_ctrlErrorStatus& (0+255),b
 20448                           
 20449                           ; BSR set to: 1
 20450  00779C  0012               	return		;funcret
 20451  00779E                     __end_of_MonitorErrorSet:
 20452                           	opt callstack 0
 20453                           
 20454 ;; *************** function _MonitorErrorClr *****************
 20455 ;; Defined at:
 20456 ;;		line 134 in file "main.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  flag            1    wreg     enum E16840
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;  flag            1   36[BANK0 ] enum E16840
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  1    wreg      void 
 20463 ;; Registers used:
 20464 ;;		wreg, status,2, status,0
 20465 ;; Tracked objects:
 20466 ;;		On entry : 3C/2
 20467 ;;		On exit  : 3F/1
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20474 ;;Total ram usage:        1 bytes
 20475 ;; Hardware stack levels used:    1
 20476 ;; Hardware stack levels required when called:   13
 20477 ;; This function calls:
 20478 ;;		Nothing
 20479 ;; This function is called by:
 20480 ;;		_MonitorMsgForcedSend
 20481 ;;		_main
 20482 ;; This function uses a non-reentrant model
 20483 ;;
 20484                           
 20485                           	psect	text101
 20486  00779E                     __ptext101:
 20487                           	opt callstack 0
 20488  00779E                     _MonitorErrorClr:
 20489                           	opt callstack 15
 20490                           
 20491                           ; BSR set to: 1
 20492                           ;incstack = 0
 20493                           ;MonitorErrorClr@flag stored from wreg
 20494  00779E  0100               	movlb	0	; () banked
 20495  0077A0  6F84               	movwf	MonitorErrorClr@flag& (0+255),b
 20496                           
 20497                           ;main.c: 135:     ctrlErrorStatus = ctrlErrorStatus&(~flag);
 20498  0077A2  0100               	movlb	0	; () banked
 20499  0077A4  5184               	movf	MonitorErrorClr@flag& (0+255),w,b
 20500  0077A6  0AFF               	xorlw	255
 20501  0077A8  0101               	movlb	1	; () banked
 20502  0077AA  154C               	andwf	_ctrlErrorStatus& (0+255),w,b
 20503  0077AC  6F4C               	movwf	_ctrlErrorStatus& (0+255),b
 20504                           
 20505                           ; BSR set to: 1
 20506  0077AE  0012               	return		;funcret
 20507  0077B0                     __end_of_MonitorErrorClr:
 20508                           	opt callstack 0
 20509                           
 20510 ;; *************** function _I2C2_MasterOperation *****************
 20511 ;; Defined at:
 20512 ;;		line 254 in file "mcc_generated_files/i2c2_master.c"
 20513 ;; Parameters:    Size  Location     Type
 20514 ;;  read            1    wreg     _Bool 
 20515 ;; Auto vars:     Size  Location     Type
 20516 ;;  read            1   49[BANK0 ] _Bool 
 20517 ;;  returnValue     1   50[BANK0 ] enum E353
 20518 ;; Return value:  Size  Location     Type
 20519 ;;                  1    wreg      enum E353
 20520 ;; Registers used:
 20521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20522 ;; Tracked objects:
 20523 ;;		On entry : 3F/1
 20524 ;;		On exit  : 3F/0
 20525 ;;		Unchanged: 0/0
 20526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20530 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20531 ;;Total ram usage:        2 bytes
 20532 ;; Hardware stack levels used:    1
 20533 ;; Hardware stack levels required when called:   18
 20534 ;; This function calls:
 20535 ;;		_I2C2_DO_SEND_ADR_READ
 20536 ;;		_I2C2_DO_SEND_ADR_WRITE
 20537 ;;		_I2C2_MasterSetCounter
 20538 ;; This function is called by:
 20539 ;;		_I2C2_MasterWrite
 20540 ;;		_MonitorMsgForcedSend
 20541 ;; This function uses a non-reentrant model
 20542 ;;
 20543                           
 20544                           	psect	text102
 20545  006ABE                     __ptext102:
 20546                           	opt callstack 0
 20547  006ABE                     _I2C2_MasterOperation:
 20548                           	opt callstack 7
 20549                           
 20550                           ; BSR set to: 1
 20551                           ;incstack = 0
 20552                           ;I2C2_MasterOperation@read stored from wreg
 20553  006ABE  0100               	movlb	0	; () banked
 20554  006AC0  6F91               	movwf	I2C2_MasterOperation@read& (0+255),b
 20555                           
 20556                           ;mcc_generated_files/i2c2_master.c: 254: i2c2_error_t I2C2_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c2_master.c: 255: {;mcc_generated_files/i2c2_master.c: 256:     i2c
      +                          2_error_t returnValue = I2C2_BUSY;
 20557  006AC2  0E01               	movlw	1
 20558  006AC4  0100               	movlb	0	; () banked
 20559  006AC6  6F92               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;mcc_generated_files/i2c2_master.c: 257:     if(!I2C2_Status.busy)
 20563  006AC8  0101               	movlb	1	; () banked
 20564  006ACA  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 20565  006ACC  D017               	goto	l12983
 20566                           
 20567                           ; BSR set to: 1
 20568                           ;mcc_generated_files/i2c2_master.c: 258:     {;mcc_generated_files/i2c2_master.c: 259:  
      +                                 I2C2_Status.busy = 1;
 20569  006ACE  8523               	bsf	(_I2C2_Status+35)& (0+255),2,b
 20570                           
 20571                           ; BSR set to: 1
 20572                           ;mcc_generated_files/i2c2_master.c: 260:         returnValue = I2C2_NOERR;
 20573  006AD0  0E00               	movlw	0
 20574  006AD2  0100               	movlb	0	; () banked
 20575  006AD4  6F92               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 20576                           
 20577                           ; BSR set to: 0
 20578                           ;mcc_generated_files/i2c2_master.c: 261:         I2C2_MasterSetCounter(I2C2_Status.data_
      +                          length);
 20579  006AD6  0101               	movlb	1	; () banked
 20580  006AD8  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 20581  006ADA  EC7B  F03C         	call	_I2C2_MasterSetCounter
 20582                           
 20583                           ;mcc_generated_files/i2c2_master.c: 263:         if(read)
 20584  006ADE  0100               	movlb	0	; () banked
 20585  006AE0  5191               	movf	I2C2_MasterOperation@read& (0+255),w,b
 20586  006AE2  B4D8               	btfsc	status,2,c
 20587  006AE4  D006               	goto	l12979
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;mcc_generated_files/i2c2_master.c: 264:         {;mcc_generated_files/i2c2_master.c: 26
      +                          5:             I2C2_Status.state = I2C2_RX;
 20591  006AE6  0E04               	movlw	4
 20592  006AE8  0101               	movlb	1	; () banked
 20593  006AEA  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 20594                           
 20595                           ; BSR set to: 1
 20596                           ;mcc_generated_files/i2c2_master.c: 266:             I2C2_DO_SEND_ADR_READ();
 20597  006AEC  ECD5  F039         	call	_I2C2_DO_SEND_ADR_READ	;wreg free
 20598                           
 20599                           ;mcc_generated_files/i2c2_master.c: 267:         }
 20600  006AF0  D005               	goto	l12983
 20601  006AF2                     l12979:
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;mcc_generated_files/i2c2_master.c: 269:         {;mcc_generated_files/i2c2_master.c: 27
      +                          0:             I2C2_Status.state = I2C2_TX;
 20605  006AF2  0E03               	movlw	3
 20606  006AF4  0101               	movlb	1	; () banked
 20607  006AF6  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 20608                           
 20609                           ; BSR set to: 1
 20610                           ;mcc_generated_files/i2c2_master.c: 271:             I2C2_DO_SEND_ADR_WRITE();
 20611  006AF8  EC21  F03B         	call	_I2C2_DO_SEND_ADR_WRITE	;wreg free
 20612  006AFC                     l12983:
 20613                           
 20614                           ;mcc_generated_files/i2c2_master.c: 274:     return returnValue;
 20615  006AFC  0100               	movlb	0	; () banked
 20616  006AFE  5192               	movf	I2C2_MasterOperation@returnValue& (0+255),w,b
 20617                           
 20618                           ; BSR set to: 0
 20619  006B00  0012               	return		;funcret
 20620  006B02                     __end_of_I2C2_MasterOperation:
 20621                           	opt callstack 0
 20622                           
 20623 ;; *************** function _I2C2_DO_SEND_ADR_WRITE *****************
 20624 ;; Defined at:
 20625 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;		None
 20628 ;; Auto vars:     Size  Location     Type
 20629 ;;		None
 20630 ;; Return value:  Size  Location     Type
 20631 ;;                  1    wreg      enum E16447
 20632 ;; Registers used:
 20633 ;;		wreg, status,2, status,0, cstack
 20634 ;; Tracked objects:
 20635 ;;		On entry : 3F/1
 20636 ;;		On exit  : 0/0
 20637 ;;		Unchanged: 0/0
 20638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20643 ;;Total ram usage:        0 bytes
 20644 ;; Hardware stack levels used:    1
 20645 ;; Hardware stack levels required when called:   14
 20646 ;; This function calls:
 20647 ;;		_I2C2_MasterSendTxData
 20648 ;; This function is called by:
 20649 ;;		_I2C2_MasterOperation
 20650 ;;		_I2C2_MasterFsm
 20651 ;; This function uses a non-reentrant model
 20652 ;;
 20653                           
 20654                           	psect	text103
 20655  007642                     __ptext103:
 20656                           	opt callstack 0
 20657  007642                     _I2C2_DO_SEND_ADR_WRITE:
 20658                           	opt callstack 0
 20659                           
 20660                           ; BSR set to: 0
 20661  0000                     
 20662                           ;Skip over the trampoline to the duplicate function for level 2
 20663  007642  BED3               	btfsc	211,7,c
 20664  007644  EF51  F03B         	goto	i2_I2C2_DO_SEND_ADR_WRITE
 20665  007648                     _I2C2_DO_SEND_ADR_WRITE$intlevel0:
 20666                           	opt callstack 10
 20667                           
 20668                           ; BSR set to: 1
 20669                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 20670                           
 20671                           ;incstack = 0
 20672  007648  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 20673  00764A  0BFC               	andlw	-4
 20674  00764C  0902               	iorlw	2
 20675  00764E  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 20676                           
 20677                           ; BSR set to: 1
 20678                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 20679  007650  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 20680  007652  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 20681  007654  EC75  F03C         	call	_I2C2_MasterSendTxData
 20682                           
 20683                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 20684  007658  0E03               	movlw	3
 20685  00765A  0012               	return		;funcret
 20686  00765C                     __end_of_I2C2_DO_SEND_ADR_WRITE:
 20687                           	opt callstack 0
 20688                           
 20689 ;; *************** function _I2C2_DO_SEND_ADR_READ *****************
 20690 ;; Defined at:
 20691 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;		None
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;		None
 20696 ;; Return value:  Size  Location     Type
 20697 ;;                  1    wreg      enum E16447
 20698 ;; Registers used:
 20699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20700 ;; Tracked objects:
 20701 ;;		On entry : 3F/1
 20702 ;;		On exit  : 0/0
 20703 ;;		Unchanged: 0/0
 20704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20709 ;;Total ram usage:        0 bytes
 20710 ;; Hardware stack levels used:    1
 20711 ;; Hardware stack levels required when called:   17
 20712 ;; This function calls:
 20713 ;;		_I2C2_DO_RX_EMPTY
 20714 ;;		_I2C2_MasterSendTxData
 20715 ;; This function is called by:
 20716 ;;		_I2C2_MasterOperation
 20717 ;;		_I2C2_MasterFsm
 20718 ;; This function uses a non-reentrant model
 20719 ;;
 20720                           
 20721                           	psect	text104
 20722  0073AA                     __ptext104:
 20723                           	opt callstack 0
 20724  0073AA                     _I2C2_DO_SEND_ADR_READ:
 20725                           	opt callstack 0
 20726                           
 20727                           ;Skip over the trampoline to the duplicate function for level 2
 20728  0073AA  BED3               	btfsc	211,7,c
 20729  0073AC  EF87  F03A         	goto	i2_I2C2_DO_SEND_ADR_READ
 20730  0073B0                     _I2C2_DO_SEND_ADR_READ$intlevel0:
 20731                           	opt callstack 7
 20732                           
 20733                           ; BSR set to: 1
 20734                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 20735                           
 20736                           ;incstack = 0
 20737  0073B0  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 20738  0073B2  0BFC               	andlw	-4
 20739  0073B4  0902               	iorlw	2
 20740  0073B6  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 20741                           
 20742                           ; BSR set to: 1
 20743                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 20744  0073B8  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 20745  0073BA  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 20746  0073BC  B4D8               	btfsc	status,2,c
 20747                           
 20748                           ; BSR set to: 1
 20749                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 20750  0073BE  EC37  F030         	call	_I2C2_DO_RX_EMPTY	;wreg free
 20751                           
 20752                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 20753  0073C2  80D8               	bsf	status,0,c
 20754  0073C4  0101               	movlb	1	; () banked
 20755  0073C6  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 20756  0073C8  EC75  F03C         	call	_I2C2_MasterSendTxData
 20757                           
 20758                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 20759  0073CC  0E04               	movlw	4
 20760  0073CE  0012               	return		;funcret
 20761  0073D0                     __end_of_I2C2_DO_SEND_ADR_READ:
 20762                           	opt callstack 0
 20763                           
 20764 ;; *************** function _I2C2_MasterSendTxData *****************
 20765 ;; Defined at:
 20766 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 20767 ;; Parameters:    Size  Location     Type
 20768 ;;  data            1    wreg     unsigned char 
 20769 ;; Auto vars:     Size  Location     Type
 20770 ;;  data            1   36[BANK0 ] unsigned char 
 20771 ;; Return value:  Size  Location     Type
 20772 ;;                  1    wreg      void 
 20773 ;; Registers used:
 20774 ;;		wreg
 20775 ;; Tracked objects:
 20776 ;;		On entry : 3F/1
 20777 ;;		On exit  : 0/0
 20778 ;;		Unchanged: 0/0
 20779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20783 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20784 ;;Total ram usage:        1 bytes
 20785 ;; Hardware stack levels used:    1
 20786 ;; Hardware stack levels required when called:   13
 20787 ;; This function calls:
 20788 ;;		Nothing
 20789 ;; This function is called by:
 20790 ;;		_I2C2_DO_SEND_ADR_READ
 20791 ;;		_I2C2_DO_SEND_ADR_WRITE
 20792 ;; This function uses a non-reentrant model
 20793 ;;
 20794                           
 20795                           	psect	text105
 20796  0078EA                     __ptext105:
 20797                           	opt callstack 0
 20798  0078EA                     _I2C2_MasterSendTxData:
 20799                           	opt callstack 10
 20800                           
 20801                           ;incstack = 0
 20802                           ;I2C2_MasterSendTxData@data stored from wreg
 20803  0078EA  0100               	movlb	0	; () banked
 20804  0078EC  6F84               	movwf	I2C2_MasterSendTxData@data& (0+255),b
 20805                           
 20806                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 20807  0078EE  0060  F213  FD55   	movff	I2C2_MasterSendTxData@data,15701	;volatile
 20808  0078F4  0012               	return		;funcret
 20809  0078F6                     __end_of_I2C2_MasterSendTxData:
 20810                           	opt callstack 0
 20811                           
 20812 ;; *************** function _I2C2_DO_RX_EMPTY *****************
 20813 ;; Defined at:
 20814 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 20815 ;; Parameters:    Size  Location     Type
 20816 ;;		None
 20817 ;; Auto vars:     Size  Location     Type
 20818 ;;		None
 20819 ;; Return value:  Size  Location     Type
 20820 ;;                  1    wreg      enum E16447
 20821 ;; Registers used:
 20822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20823 ;; Tracked objects:
 20824 ;;		On entry : 3F/1
 20825 ;;		On exit  : 0/0
 20826 ;;		Unchanged: 0/0
 20827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20832 ;;Total ram usage:        2 bytes
 20833 ;; Hardware stack levels used:    1
 20834 ;; Hardware stack levels required when called:   16
 20835 ;; This function calls:
 20836 ;;		Absolute function
 20837 ;;		_I2C2_CallbackReturnReset
 20838 ;;		_I2C2_CallbackReturnStop
 20839 ;;		_I2C2_MasterDisableRestart
 20840 ;;		_I2C2_MasterEnableRestart
 20841 ;;		_I2C2_MasterSetCounter
 20842 ;;		_rd1RegCompleteHandler
 20843 ;;		_rd2RegCompleteHandler
 20844 ;;		_rdBlkRegCompleteHandler
 20845 ;;		_wr1RegCompleteHandler
 20846 ;;		_wr2RegCompleteHandler
 20847 ;; This function is called by:
 20848 ;;		_I2C2_DO_SEND_ADR_READ
 20849 ;;		_I2C2_MasterFsm
 20850 ;; This function uses a non-reentrant model
 20851 ;;
 20852                           
 20853                           	psect	text106
 20854  00606E                     __ptext106:
 20855                           	opt callstack 0
 20856  00606E                     _I2C2_DO_RX_EMPTY:
 20857                           	opt callstack 0
 20858                           
 20859                           ;Skip over the trampoline to the duplicate function for level 2
 20860  00606E  BED3               	btfsc	211,7,c
 20861  006070  EF35  F031         	goto	i2_I2C2_DO_RX_EMPTY
 20862  006074                     _I2C2_DO_RX_EMPTY$intlevel0:
 20863                           	opt callstack 7
 20864                           
 20865                           ; BSR set to: 1
 20866                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 20867                           
 20868                           ;incstack = 0
 20869  006074  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 20870                           
 20871                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 20872  006076  D016               	goto	l12775
 20873  006078                     l12747:
 20874                           
 20875                           ; BSR set to: 0
 20876                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 20877  006078  ECDE  F03C         	call	_I2C2_MasterEnableRestart	;wreg free
 20878                           
 20879                           ; BSR set to: 61
 20880                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 20881  00607C  0E08               	movlw	8
 20882  00607E  0012               	return	
 20883  006080                     l12753:
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 20887  006080  ECDE  F03C         	call	_I2C2_MasterEnableRestart	;wreg free
 20888                           
 20889                           ; BSR set to: 61
 20890                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 20891  006084  0E07               	movlw	7
 20892  006086  0012               	return	
 20893  006088                     l12759:
 20894                           
 20895                           ; BSR set to: 0
 20896                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 20897  006088  0101               	movlb	1	; () banked
 20898  00608A  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 20899  00608C  EC7B  F03C         	call	_I2C2_MasterSetCounter
 20900                           
 20901                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 20902  006090  0E04               	movlw	4
 20903  006092  0012               	return	
 20904  006094                     l12765:
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 20908  006094  0E07               	movlw	7
 20909  006096  0101               	movlb	1	; () banked
 20910  006098  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 20911  00609A  A4D8               	btfss	status,2,c
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 20915  00609C  ECE1  F03C         	call	_I2C2_MasterDisableRestart	;wreg free
 20916                           
 20917                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 20918  0060A0  0E0F               	movlw	15
 20919  0060A2  0012               	return	
 20920  0060A4                     l12775:
 20921                           
 20922                           ; BSR set to: 1
 20923  0060A4  0060  F430  F08D   	movff	_I2C2_Status+12,rd1RegCompleteHandler@ptr
 20924  0060AA  0060  F434  F08E   	movff	_I2C2_Status+13,rd1RegCompleteHandler@ptr+1
 20925  0060B0  D801               	call	u11488
 20926  0060B2  D009               	goto	u11489
 20927  0060B4                     u11488:
 20928  0060B4  0005               	push	
 20929  0060B6  6EFA               	movwf	pclath,c
 20930  0060B8  5100               	movf	_I2C2_Status& (0+255),w,b
 20931  0060BA  6EFD               	movwf	tosl,c
 20932  0060BC  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 20933  0060BE  6EFE               	movwf	tosh,c
 20934  0060C0  6AFF               	clrf	tosu,c
 20935  0060C2  50FA               	movf	pclath,w,c
 20936  0060C4  0012               	return		;indir
 20937  0060C6                     u11489:
 20938  0060C6  0100               	movlb	0	; () banked
 20939  0060C8  6F8F               	movwf	??_I2C2_DO_RX_EMPTY& (0+255),b
 20940  0060CA  6B90               	clrf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),b
 20941                           
 20942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20943                           ; Switch size 1, requested type "simple"
 20944                           ; Number of cases is 1, Range of values is 0 to 0
 20945                           ; switch strategies available:
 20946                           ; Name         Instructions Cycles
 20947                           ; simple_byte            4     3 (average)
 20948                           ;	Chosen strategy is simple_byte
 20949  0060CC  5190               	movf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),w,b
 20950  0060CE  0A00               	xorlw	0	; case 0
 20951  0060D0  A4D8               	btfss	status,2,c
 20952  0060D2  D7E0               	goto	l12765
 20953                           
 20954                           ; BSR set to: 0
 20955                           ; Switch size 1, requested type "simple"
 20956                           ; Number of cases is 4, Range of values is 1 to 4
 20957                           ; switch strategies available:
 20958                           ; Name         Instructions Cycles
 20959                           ; simple_byte           13     7 (average)
 20960                           ;	Chosen strategy is simple_byte
 20961  0060D4  518F               	movf	??_I2C2_DO_RX_EMPTY& (0+255),w,b
 20962  0060D6  0A01               	xorlw	1	; case 1
 20963  0060D8  B4D8               	btfsc	status,2,c
 20964  0060DA  D7DC               	goto	l12765
 20965  0060DC  0A03               	xorlw	3	; case 2
 20966  0060DE  B4D8               	btfsc	status,2,c
 20967  0060E0  D7CF               	goto	l12753
 20968  0060E2  0A01               	xorlw	1	; case 3
 20969  0060E4  B4D8               	btfsc	status,2,c
 20970  0060E6  D7C8               	goto	l12747
 20971  0060E8  0A07               	xorlw	7	; case 4
 20972  0060EA  B4D8               	btfsc	status,2,c
 20973  0060EC  D7CD               	goto	l12759
 20974  0060EE  D7D2               	goto	l12765
 20975  0060F0                     __end_of_I2C2_DO_RX_EMPTY:
 20976                           	opt callstack 0
 20977                           
 20978 ;; *************** function _I2C2_CallbackReturnReset *****************
 20979 ;; Defined at:
 20980 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 20981 ;; Parameters:    Size  Location     Type
 20982 ;;  funPtr          2   45[BANK0 ] PTR void 
 20983 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 20984 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 20985 ;; Auto vars:     Size  Location     Type
 20986 ;;		None
 20987 ;; Return value:  Size  Location     Type
 20988 ;;                  1    wreg      enum E358
 20989 ;; Registers used:
 20990 ;;		wreg
 20991 ;; Tracked objects:
 20992 ;;		On entry : 3F/1
 20993 ;;		On exit  : 3F/1
 20994 ;;		Unchanged: 3F/0
 20995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21000 ;;Total ram usage:        2 bytes
 21001 ;; Hardware stack levels used:    1
 21002 ;; Hardware stack levels required when called:   13
 21003 ;; This function calls:
 21004 ;;		Nothing
 21005 ;; This function is called by:
 21006 ;;		_I2C2_Open
 21007 ;;		_I2C2_DO_RX_EMPTY
 21008 ;;		i2_I2C2_DO_RX_EMPTY
 21009 ;;		_I2C2_DO_TX_EMPTY
 21010 ;;		_I2C2_DO_TX
 21011 ;;		_I2C2_DO_ADDRESS_NACK
 21012 ;;		_I2C2_DO_BUS_COLLISION
 21013 ;; This function uses a non-reentrant model
 21014 ;;
 21015                           
 21016                           	psect	text107
 21017  007948                     __ptext107:
 21018                           	opt callstack 0
 21019  007948                     _I2C2_CallbackReturnReset:
 21020                           	opt callstack 0
 21021                           
 21022                           ;Skip over the trampoline to the duplicate function for level 2
 21023  007948  BED3               	btfsc	211,7,c
 21024  00794A  EF0A  F03D         	goto	i2_I2C2_CallbackReturnReset
 21025  00794E                     _I2C2_CallbackReturnReset$intlevel0:
 21026                           	opt callstack 9
 21027                           
 21028                           ; BSR set to: 1
 21029                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 21030                           
 21031                           ;incstack = 0
 21032  00794E  0E05               	movlw	5
 21033                           
 21034                           ; BSR set to: 1
 21035  007950  0012               	return		;funcret
 21036  007952                     __end_of_I2C2_CallbackReturnReset:
 21037                           	opt callstack 0
 21038                           
 21039 ;; *************** function _I2C2_CallbackReturnStop *****************
 21040 ;; Defined at:
 21041 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 21042 ;; Parameters:    Size  Location     Type
 21043 ;;  funPtr          2   45[BANK0 ] PTR void 
 21044 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21045 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21046 ;; Auto vars:     Size  Location     Type
 21047 ;;		None
 21048 ;; Return value:  Size  Location     Type
 21049 ;;                  1    wreg      enum E358
 21050 ;; Registers used:
 21051 ;;		wreg
 21052 ;; Tracked objects:
 21053 ;;		On entry : 3F/1
 21054 ;;		On exit  : 3F/1
 21055 ;;		Unchanged: 3F/0
 21056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21060 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21061 ;;Total ram usage:        2 bytes
 21062 ;; Hardware stack levels used:    1
 21063 ;; Hardware stack levels required when called:   13
 21064 ;; This function calls:
 21065 ;;		Nothing
 21066 ;; This function is called by:
 21067 ;;		_I2C2_Open
 21068 ;;		_I2C2_SetCallback
 21069 ;;		_I2C2_DO_RX_EMPTY
 21070 ;;		i2_I2C2_DO_RX_EMPTY
 21071 ;;		_I2C2_DO_TX_EMPTY
 21072 ;;		_I2C2_DO_TX
 21073 ;;		_I2C2_DO_ADDRESS_NACK
 21074 ;;		_I2C2_DO_BUS_COLLISION
 21075 ;; This function uses a non-reentrant model
 21076 ;;
 21077                           
 21078                           	psect	text108
 21079  007952                     __ptext108:
 21080                           	opt callstack 0
 21081  007952                     _I2C2_CallbackReturnStop:
 21082                           	opt callstack 0
 21083                           
 21084                           ; BSR set to: 1
 21085                           ;Skip over the trampoline to the duplicate function for level 2
 21086  007952  BED3               	btfsc	211,7,c
 21087  007954  EF0C  F03D         	goto	i2_I2C2_CallbackReturnStop
 21088  007958                     _I2C2_CallbackReturnStop$intlevel0:
 21089                           	opt callstack 9
 21090                           
 21091                           ; BSR set to: 1
 21092                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 21093                           
 21094                           ;incstack = 0
 21095  007958  0E01               	movlw	1
 21096                           
 21097                           ; BSR set to: 1
 21098  00795A  0012               	return		;funcret
 21099  00795C                     __end_of_I2C2_CallbackReturnStop:
 21100                           	opt callstack 0
 21101                           
 21102 ;; *************** function _rdBlkRegCompleteHandler *****************
 21103 ;; Defined at:
 21104 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 21105 ;; Parameters:    Size  Location     Type
 21106 ;;  ptr             2   45[BANK0 ] PTR void 
 21107 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21108 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21109 ;; Auto vars:     Size  Location     Type
 21110 ;;		None
 21111 ;; Return value:  Size  Location     Type
 21112 ;;                  1    wreg      enum E358
 21113 ;; Registers used:
 21114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21115 ;; Tracked objects:
 21116 ;;		On entry : 3F/1
 21117 ;;		On exit  : 3F/0
 21118 ;;		Unchanged: 0/0
 21119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21124 ;;Total ram usage:        2 bytes
 21125 ;; Hardware stack levels used:    1
 21126 ;; Hardware stack levels required when called:   15
 21127 ;; This function calls:
 21128 ;;		_I2C2_SetBuffer
 21129 ;;		_I2C2_SetDataCompleteCallback
 21130 ;; This function is called by:
 21131 ;;		_I2C2_DO_RX_EMPTY
 21132 ;;		i2_I2C2_DO_RX_EMPTY
 21133 ;;		_I2C2_DO_TX_EMPTY
 21134 ;;		_I2C2_DO_TX
 21135 ;;		_I2C2_DO_ADDRESS_NACK
 21136 ;;		_I2C2_DO_BUS_COLLISION
 21137 ;; This function uses a non-reentrant model
 21138 ;;
 21139                           
 21140                           	psect	text109
 21141  006840                     __ptext109:
 21142                           	opt callstack 0
 21143  006840                     _rdBlkRegCompleteHandler:
 21144                           	opt callstack 0
 21145                           
 21146                           ; BSR set to: 1
 21147                           ;Skip over the trampoline to the duplicate function for level 2
 21148  006840  BED3               	btfsc	211,7,c
 21149  006842  EFF1  F034         	goto	i2_rdBlkRegCompleteHandler
 21150  006846                     _rdBlkRegCompleteHandler$intlevel0:
 21151                           	opt callstack 7
 21152                           
 21153                           ; BSR set to: 1
 21154                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 21155                           
 21156                           ;incstack = 0
 21157  006846  0100               	movlb	0	; () banked
 21158  006848  EE20 F002          	lfsr	2,2
 21159  00684C  518D               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 21160  00684E  26D9               	addwf	fsr2l,f,c
 21161  006850  518E               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
 21162  006852  22DA               	addwfc	fsr2h,f,c
 21163  006854  006F FF78  F084    	movff	postinc2,I2C2_SetBuffer@buffer
 21164  00685A  006F FF74  F085    	movff	postdec2,I2C2_SetBuffer@buffer+1
 21165  006860  0060  F237  FFD9   	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 21166  006866  0060  F23B  FFDA   	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 21167  00686C  006F FF78  F086    	movff	postinc2,I2C2_SetBuffer@bufferSize
 21168  006872  006F FF74  F087    	movff	postdec2,I2C2_SetBuffer@bufferSize+1
 21169  006878  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 21170                           
 21171                           ; BSR set to: 1
 21172                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21173  00687C  0E00               	movlw	0
 21174  00687E  0100               	movlb	0	; () banked
 21175  006880  6F89               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 21176  006882  0E00               	movlw	0
 21177  006884  6F8A               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 21178  006886  0E00               	movlw	0
 21179  006888  6F8B               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 21180  00688A  0E00               	movlw	0
 21181  00688C  6F8C               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 21182  00688E  ECA9  F03A         	call	_I2C2_SetDataCompleteCallback	;wreg free
 21183                           
 21184                           ; BSR set to: 0
 21185                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 21186  006892  0E02               	movlw	2
 21187                           
 21188                           ; BSR set to: 0
 21189  006894  0012               	return		;funcret
 21190  006896                     __end_of_rdBlkRegCompleteHandler:
 21191                           	opt callstack 0
 21192                           
 21193 ;; *************** function _wr1RegCompleteHandler *****************
 21194 ;; Defined at:
 21195 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 21196 ;; Parameters:    Size  Location     Type
 21197 ;;  ptr             2   45[BANK0 ] PTR void 
 21198 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21199 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21200 ;; Auto vars:     Size  Location     Type
 21201 ;;		None
 21202 ;; Return value:  Size  Location     Type
 21203 ;;                  1    wreg      enum E358
 21204 ;; Registers used:
 21205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21206 ;; Tracked objects:
 21207 ;;		On entry : 3F/1
 21208 ;;		On exit  : 3F/0
 21209 ;;		Unchanged: 0/0
 21210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21215 ;;Total ram usage:        2 bytes
 21216 ;; Hardware stack levels used:    1
 21217 ;; Hardware stack levels required when called:   15
 21218 ;; This function calls:
 21219 ;;		_I2C2_SetBuffer
 21220 ;;		_I2C2_SetDataCompleteCallback
 21221 ;; This function is called by:
 21222 ;;		_I2C2_DO_RX_EMPTY
 21223 ;;		i2_I2C2_DO_RX_EMPTY
 21224 ;;		_I2C2_DO_TX_EMPTY
 21225 ;;		_I2C2_DO_TX
 21226 ;;		_I2C2_DO_ADDRESS_NACK
 21227 ;;		_I2C2_DO_BUS_COLLISION
 21228 ;; This function uses a non-reentrant model
 21229 ;;
 21230                           
 21231                           	psect	text110
 21232  006DC4                     __ptext110:
 21233                           	opt callstack 0
 21234  006DC4                     _wr1RegCompleteHandler:
 21235                           	opt callstack 0
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;Skip over the trampoline to the duplicate function for level 2
 21239  006DC4  BED3               	btfsc	211,7,c
 21240  006DC6  EF6C  F038         	goto	i2_wr1RegCompleteHandler
 21241  006DCA                     _wr1RegCompleteHandler$intlevel0:
 21242                           	opt callstack 7
 21243                           
 21244                           ; BSR set to: 1
 21245                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 21246                           
 21247                           ;incstack = 0
 21248  006DCA  0060  F234  F084   	movff	wr1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 21249  006DD0  0060  F238  F085   	movff	wr1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 21250  006DD6  0E00               	movlw	0
 21251  006DD8  0100               	movlb	0	; () banked
 21252  006DDA  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 21253  006DDC  0E01               	movlw	1
 21254  006DDE  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 21255  006DE0  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 21256                           
 21257                           ; BSR set to: 1
 21258                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21259  006DE4  0E00               	movlw	0
 21260  006DE6  0100               	movlb	0	; () banked
 21261  006DE8  6F89               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 21262  006DEA  0E00               	movlw	0
 21263  006DEC  6F8A               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 21264  006DEE  0E00               	movlw	0
 21265  006DF0  6F8B               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 21266  006DF2  0E00               	movlw	0
 21267  006DF4  6F8C               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 21268  006DF6  ECA9  F03A         	call	_I2C2_SetDataCompleteCallback	;wreg free
 21269                           
 21270                           ; BSR set to: 0
 21271                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 21272  006DFA  0E04               	movlw	4
 21273                           
 21274                           ; BSR set to: 0
 21275  006DFC  0012               	return		;funcret
 21276  006DFE                     __end_of_wr1RegCompleteHandler:
 21277                           	opt callstack 0
 21278                           
 21279 ;; *************** function _rd2RegCompleteHandler *****************
 21280 ;; Defined at:
 21281 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 21282 ;; Parameters:    Size  Location     Type
 21283 ;;  ptr             2   45[BANK0 ] PTR void 
 21284 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21285 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21286 ;; Auto vars:     Size  Location     Type
 21287 ;;		None
 21288 ;; Return value:  Size  Location     Type
 21289 ;;                  1    wreg      enum E358
 21290 ;; Registers used:
 21291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21292 ;; Tracked objects:
 21293 ;;		On entry : 3F/1
 21294 ;;		On exit  : 3F/0
 21295 ;;		Unchanged: 0/0
 21296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21301 ;;Total ram usage:        2 bytes
 21302 ;; Hardware stack levels used:    1
 21303 ;; Hardware stack levels required when called:   15
 21304 ;; This function calls:
 21305 ;;		_I2C2_SetBuffer
 21306 ;;		_I2C2_SetDataCompleteCallback
 21307 ;; This function is called by:
 21308 ;;		_I2C2_DO_RX_EMPTY
 21309 ;;		i2_I2C2_DO_RX_EMPTY
 21310 ;;		_I2C2_DO_TX_EMPTY
 21311 ;;		_I2C2_DO_TX
 21312 ;;		_I2C2_DO_ADDRESS_NACK
 21313 ;;		_I2C2_DO_BUS_COLLISION
 21314 ;; This function uses a non-reentrant model
 21315 ;;
 21316                           
 21317                           	psect	text111
 21318  006DFE                     __ptext111:
 21319                           	opt callstack 0
 21320  006DFE                     _rd2RegCompleteHandler:
 21321                           	opt callstack 0
 21322                           
 21323                           ; BSR set to: 0
 21324                           ;Skip over the trampoline to the duplicate function for level 2
 21325  006DFE  BED3               	btfsc	211,7,c
 21326  006E00  EF84  F038         	goto	i2_rd2RegCompleteHandler
 21327  006E04                     _rd2RegCompleteHandler$intlevel0:
 21328                           	opt callstack 7
 21329                           
 21330                           ; BSR set to: 1
 21331                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 21332                           
 21333                           ;incstack = 0
 21334  006E04  0060  F234  F084   	movff	rd2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 21335  006E0A  0060  F238  F085   	movff	rd2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 21336  006E10  0E00               	movlw	0
 21337  006E12  0100               	movlb	0	; () banked
 21338  006E14  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 21339  006E16  0E02               	movlw	2
 21340  006E18  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 21341  006E1A  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 21342                           
 21343                           ; BSR set to: 1
 21344                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21345  006E1E  0E00               	movlw	0
 21346  006E20  0100               	movlb	0	; () banked
 21347  006E22  6F89               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 21348  006E24  0E00               	movlw	0
 21349  006E26  6F8A               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 21350  006E28  0E00               	movlw	0
 21351  006E2A  6F8B               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 21352  006E2C  0E00               	movlw	0
 21353  006E2E  6F8C               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 21354  006E30  ECA9  F03A         	call	_I2C2_SetDataCompleteCallback	;wreg free
 21355                           
 21356                           ; BSR set to: 0
 21357                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 21358  006E34  0E02               	movlw	2
 21359                           
 21360                           ; BSR set to: 0
 21361  006E36  0012               	return		;funcret
 21362  006E38                     __end_of_rd2RegCompleteHandler:
 21363                           	opt callstack 0
 21364                           
 21365 ;; *************** function _rd1RegCompleteHandler *****************
 21366 ;; Defined at:
 21367 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 21368 ;; Parameters:    Size  Location     Type
 21369 ;;  ptr             2   45[BANK0 ] PTR void 
 21370 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21371 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21372 ;; Auto vars:     Size  Location     Type
 21373 ;;		None
 21374 ;; Return value:  Size  Location     Type
 21375 ;;                  1    wreg      enum E358
 21376 ;; Registers used:
 21377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21378 ;; Tracked objects:
 21379 ;;		On entry : 3F/1
 21380 ;;		On exit  : 3F/0
 21381 ;;		Unchanged: 0/0
 21382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21387 ;;Total ram usage:        2 bytes
 21388 ;; Hardware stack levels used:    1
 21389 ;; Hardware stack levels required when called:   15
 21390 ;; This function calls:
 21391 ;;		_I2C2_SetBuffer
 21392 ;;		_I2C2_SetDataCompleteCallback
 21393 ;; This function is called by:
 21394 ;;		_I2C2_DO_RX_EMPTY
 21395 ;;		i2_I2C2_DO_RX_EMPTY
 21396 ;;		_I2C2_DO_TX_EMPTY
 21397 ;;		_I2C2_DO_TX
 21398 ;;		_I2C2_DO_ADDRESS_NACK
 21399 ;;		_I2C2_DO_BUS_COLLISION
 21400 ;; This function uses a non-reentrant model
 21401 ;;
 21402                           
 21403                           	psect	text112
 21404  006E38                     __ptext112:
 21405                           	opt callstack 0
 21406  006E38                     _rd1RegCompleteHandler:
 21407                           	opt callstack 0
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;Skip over the trampoline to the duplicate function for level 2
 21411  006E38  BED3               	btfsc	211,7,c
 21412  006E3A  EF9C  F038         	goto	i2_rd1RegCompleteHandler
 21413  006E3E                     _rd1RegCompleteHandler$intlevel0:
 21414                           	opt callstack 7
 21415                           
 21416                           ; BSR set to: 1
 21417                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 21418                           
 21419                           ;incstack = 0
 21420  006E3E  0060  F234  F084   	movff	rd1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 21421  006E44  0060  F238  F085   	movff	rd1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 21422  006E4A  0E00               	movlw	0
 21423  006E4C  0100               	movlb	0	; () banked
 21424  006E4E  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 21425  006E50  0E01               	movlw	1
 21426  006E52  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 21427  006E54  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 21428                           
 21429                           ; BSR set to: 1
 21430                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21431  006E58  0E00               	movlw	0
 21432  006E5A  0100               	movlb	0	; () banked
 21433  006E5C  6F89               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 21434  006E5E  0E00               	movlw	0
 21435  006E60  6F8A               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 21436  006E62  0E00               	movlw	0
 21437  006E64  6F8B               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 21438  006E66  0E00               	movlw	0
 21439  006E68  6F8C               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 21440  006E6A  ECA9  F03A         	call	_I2C2_SetDataCompleteCallback	;wreg free
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 21444  006E6E  0E02               	movlw	2
 21445                           
 21446                           ; BSR set to: 0
 21447  006E70  0012               	return		;funcret
 21448  006E72                     __end_of_rd1RegCompleteHandler:
 21449                           	opt callstack 0
 21450                           
 21451 ;; *************** function _wr2RegCompleteHandler *****************
 21452 ;; Defined at:
 21453 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 21454 ;; Parameters:    Size  Location     Type
 21455 ;;  ptr             2   45[BANK0 ] PTR void 
 21456 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21457 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21458 ;; Auto vars:     Size  Location     Type
 21459 ;;		None
 21460 ;; Return value:  Size  Location     Type
 21461 ;;                  1    wreg      enum E358
 21462 ;; Registers used:
 21463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21464 ;; Tracked objects:
 21465 ;;		On entry : 3F/1
 21466 ;;		On exit  : 3F/0
 21467 ;;		Unchanged: 0/0
 21468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21472 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21473 ;;Total ram usage:        2 bytes
 21474 ;; Hardware stack levels used:    1
 21475 ;; Hardware stack levels required when called:   15
 21476 ;; This function calls:
 21477 ;;		_I2C2_SetBuffer
 21478 ;;		_I2C2_SetDataCompleteCallback
 21479 ;; This function is called by:
 21480 ;;		_I2C2_DO_RX_EMPTY
 21481 ;;		i2_I2C2_DO_RX_EMPTY
 21482 ;;		_I2C2_DO_TX_EMPTY
 21483 ;;		_I2C2_DO_TX
 21484 ;;		_I2C2_DO_ADDRESS_NACK
 21485 ;;		_I2C2_DO_BUS_COLLISION
 21486 ;; This function uses a non-reentrant model
 21487 ;;
 21488                           
 21489                           	psect	text113
 21490  006E72                     __ptext113:
 21491                           	opt callstack 0
 21492  006E72                     _wr2RegCompleteHandler:
 21493                           	opt callstack 0
 21494                           
 21495                           ; BSR set to: 0
 21496                           ;Skip over the trampoline to the duplicate function for level 2
 21497  006E72  BED3               	btfsc	211,7,c
 21498  006E74  EFB4  F038         	goto	i2_wr2RegCompleteHandler
 21499  006E78                     _wr2RegCompleteHandler$intlevel0:
 21500                           	opt callstack 7
 21501                           
 21502                           ; BSR set to: 1
 21503                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 21504                           
 21505                           ;incstack = 0
 21506  006E78  0060  F234  F084   	movff	wr2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 21507  006E7E  0060  F238  F085   	movff	wr2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 21508  006E84  0E00               	movlw	0
 21509  006E86  0100               	movlb	0	; () banked
 21510  006E88  6F87               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 21511  006E8A  0E02               	movlw	2
 21512  006E8C  6F86               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 21513  006E8E  EC54  F03A         	call	_I2C2_SetBuffer	;wreg free
 21514                           
 21515                           ; BSR set to: 1
 21516                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21517  006E92  0E00               	movlw	0
 21518  006E94  0100               	movlb	0	; () banked
 21519  006E96  6F89               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 21520  006E98  0E00               	movlw	0
 21521  006E9A  6F8A               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 21522  006E9C  0E00               	movlw	0
 21523  006E9E  6F8B               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 21524  006EA0  0E00               	movlw	0
 21525  006EA2  6F8C               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 21526  006EA4  ECA9  F03A         	call	_I2C2_SetDataCompleteCallback	;wreg free
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 21530  006EA8  0E04               	movlw	4
 21531                           
 21532                           ; BSR set to: 0
 21533  006EAA  0012               	return		;funcret
 21534  006EAC                     __end_of_wr2RegCompleteHandler:
 21535                           	opt callstack 0
 21536                           
 21537 ;; *************** function _I2C2_SetDataCompleteCallback *****************
 21538 ;; Defined at:
 21539 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 21540 ;; Parameters:    Size  Location     Type
 21541 ;;  cb              2   41[BANK0 ] PTR FTN(PTR void ,)enum 
 21542 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 21543 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 21544 ;;  ptr             2   43[BANK0 ] PTR void 
 21545 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21546 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21547 ;; Auto vars:     Size  Location     Type
 21548 ;;		None
 21549 ;; Return value:  Size  Location     Type
 21550 ;;                  1    wreg      void 
 21551 ;; Registers used:
 21552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21553 ;; Tracked objects:
 21554 ;;		On entry : 3F/0
 21555 ;;		On exit  : 3F/0
 21556 ;;		Unchanged: 0/0
 21557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21561 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21562 ;;Total ram usage:        4 bytes
 21563 ;; Hardware stack levels used:    1
 21564 ;; Hardware stack levels required when called:   14
 21565 ;; This function calls:
 21566 ;;		_I2C2_SetCallback
 21567 ;; This function is called by:
 21568 ;;		_rd1RegCompleteHandler
 21569 ;;		_rd2RegCompleteHandler
 21570 ;;		_wr1RegCompleteHandler
 21571 ;;		_wr2RegCompleteHandler
 21572 ;;		_rdBlkRegCompleteHandler
 21573 ;; This function uses a non-reentrant model
 21574 ;;
 21575                           
 21576                           	psect	text114
 21577  007552                     __ptext114:
 21578                           	opt callstack 0
 21579  007552                     _I2C2_SetDataCompleteCallback:
 21580                           	opt callstack 7
 21581                           
 21582                           ; BSR set to: 0
 21583                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;incstack = 0
 21587  007552  0060  F224  F084   	movff	I2C2_SetDataCompleteCallback@cb,I2C2_SetCallback@cb
 21588  007558  0060  F228  F085   	movff	I2C2_SetDataCompleteCallback@cb+1,I2C2_SetCallback@cb+1
 21589  00755E  0060  F22C  F086   	movff	I2C2_SetDataCompleteCallback@ptr,I2C2_SetCallback@ptr
 21590  007564  0060  F230  F087   	movff	I2C2_SetDataCompleteCallback@ptr+1,I2C2_SetCallback@ptr+1
 21591  00756A  0E00               	movlw	0
 21592  00756C  EC72  F031         	call	_I2C2_SetCallback
 21593                           
 21594                           ; BSR set to: 0
 21595  007570  0012               	return		;funcret
 21596  007572                     __end_of_I2C2_SetDataCompleteCallback:
 21597                           	opt callstack 0
 21598                           
 21599 ;; *************** function _I2C2_SetCallback *****************
 21600 ;; Defined at:
 21601 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 21602 ;; Parameters:    Size  Location     Type
 21603 ;;  idx             1    wreg     enum E16468
 21604 ;;  cb              2   36[BANK0 ] PTR FTN(PTR void ,)enum 
 21605 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 21606 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 21607 ;;  ptr             2   38[BANK0 ] PTR void 
 21608 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 21609 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 21610 ;; Auto vars:     Size  Location     Type
 21611 ;;  idx             1   40[BANK0 ] enum E16468
 21612 ;; Return value:  Size  Location     Type
 21613 ;;                  1    wreg      void 
 21614 ;; Registers used:
 21615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21616 ;; Tracked objects:
 21617 ;;		On entry : 3F/0
 21618 ;;		On exit  : 3F/0
 21619 ;;		Unchanged: 0/0
 21620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21624 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21625 ;;Total ram usage:        5 bytes
 21626 ;; Hardware stack levels used:    1
 21627 ;; Hardware stack levels required when called:   13
 21628 ;; This function calls:
 21629 ;;		Nothing
 21630 ;; This function is called by:
 21631 ;;		_I2C2_SetDataCompleteCallback
 21632 ;; This function uses a non-reentrant model
 21633 ;;
 21634                           
 21635                           	psect	text115
 21636  0062E4                     __ptext115:
 21637                           	opt callstack 0
 21638  0062E4                     _I2C2_SetCallback:
 21639                           	opt callstack 7
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;incstack = 0
 21643                           ;I2C2_SetCallback@idx stored from wreg
 21644  0062E4  6F88               	movwf	I2C2_SetCallback@idx& (0+255),b
 21645                           
 21646                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 21647  0062E6  0100               	movlb	0	; () banked
 21648  0062E8  5184               	movf	I2C2_SetCallback@cb& (0+255),w,b
 21649  0062EA  1185               	iorwf	(I2C2_SetCallback@cb+1)& (0+255),w,b
 21650  0062EC  B4D8               	btfsc	status,2,c
 21651  0062EE  D01D               	goto	l12623
 21652                           
 21653                           ; BSR set to: 0
 21654                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 21655  0062F0  5188               	movf	I2C2_SetCallback@idx& (0+255),w,b
 21656  0062F2  0D02               	mullw	2
 21657  0062F4  0E00               	movlw	low _I2C2_Status
 21658  0062F6  24F3               	addwf	243,w,c
 21659  0062F8  6ED9               	movwf	fsr2l,c
 21660  0062FA  0E01               	movlw	high _I2C2_Status
 21661  0062FC  20F4               	addwfc	prodh,w,c
 21662  0062FE  6EDA               	movwf	fsr2h,c
 21663  006300  0060  F213  FFDE   	movff	I2C2_SetCallback@cb,postinc2
 21664  006306  0060  F217  FFDD   	movff	I2C2_SetCallback@cb+1,postdec2
 21665                           
 21666                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 21667  00630C  5188               	movf	I2C2_SetCallback@idx& (0+255),w,b
 21668  00630E  0D02               	mullw	2
 21669  006310  0E0C               	movlw	low (_I2C2_Status+12)
 21670  006312  24F3               	addwf	243,w,c
 21671  006314  6ED9               	movwf	fsr2l,c
 21672  006316  0E01               	movlw	high (_I2C2_Status+12)
 21673  006318  20F4               	addwfc	prodh,w,c
 21674  00631A  6EDA               	movwf	fsr2h,c
 21675  00631C  0060  F21B  FFDE   	movff	I2C2_SetCallback@ptr,postinc2
 21676  006322  0060  F21F  FFDD   	movff	I2C2_SetCallback@ptr+1,postdec2
 21677                           
 21678                           ;mcc_generated_files/i2c2_master.c: 340:     }
 21679  006328  0012               	return	
 21680  00632A                     l12623:
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 21684  00632A  5188               	movf	I2C2_SetCallback@idx& (0+255),w,b
 21685  00632C  0D02               	mullw	2
 21686  00632E  0E00               	movlw	low _I2C2_Status
 21687  006330  24F3               	addwf	243,w,c
 21688  006332  6ED9               	movwf	fsr2l,c
 21689  006334  0E01               	movlw	high _I2C2_Status
 21690  006336  20F4               	addwfc	prodh,w,c
 21691  006338  6EDA               	movwf	fsr2h,c
 21692  00633A  0E52               	movlw	low _I2C2_CallbackReturnStop
 21693  00633C  6EDE               	movwf	postinc2,c
 21694  00633E  0E79               	movlw	high _I2C2_CallbackReturnStop
 21695  006340  6EDD               	movwf	postdec2,c
 21696                           
 21697                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 21698  006342  5188               	movf	I2C2_SetCallback@idx& (0+255),w,b
 21699  006344  0D02               	mullw	2
 21700  006346  0E0C               	movlw	low (_I2C2_Status+12)
 21701  006348  24F3               	addwf	243,w,c
 21702  00634A  6ED9               	movwf	fsr2l,c
 21703  00634C  0E01               	movlw	high (_I2C2_Status+12)
 21704  00634E  20F4               	addwfc	prodh,w,c
 21705  006350  6EDA               	movwf	fsr2h,c
 21706  006352  0E00               	movlw	0
 21707  006354  6EDE               	movwf	postinc2,c
 21708  006356  0E00               	movlw	0
 21709  006358  6EDD               	movwf	postdec2,c
 21710                           
 21711                           ; BSR set to: 0
 21712  00635A  0012               	return		;funcret
 21713  00635C                     __end_of_I2C2_SetCallback:
 21714                           	opt callstack 0
 21715                           
 21716 ;; *************** function _I2C2_SetBuffer *****************
 21717 ;; Defined at:
 21718 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 21719 ;; Parameters:    Size  Location     Type
 21720 ;;  buffer          2   36[BANK0 ] PTR void 
 21721 ;;		 -> i2cBuff(80), write@i2cBuff(4), write4bits@i2cBuff(2), expanderWrite@i2cBuff(2), 
 21722 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 21723 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 21724 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 21725 ;;  bufferSize      2   38[BANK0 ] unsigned int 
 21726 ;; Auto vars:     Size  Location     Type
 21727 ;;		None
 21728 ;; Return value:  Size  Location     Type
 21729 ;;                  1    wreg      void 
 21730 ;; Registers used:
 21731 ;;		wreg, status,2, status,0
 21732 ;; Tracked objects:
 21733 ;;		On entry : 3F/0
 21734 ;;		On exit  : 3F/1
 21735 ;;		Unchanged: 0/0
 21736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21741 ;;Total ram usage:        4 bytes
 21742 ;; Hardware stack levels used:    1
 21743 ;; Hardware stack levels required when called:   13
 21744 ;; This function calls:
 21745 ;;		Nothing
 21746 ;; This function is called by:
 21747 ;;		_rd1RegCompleteHandler
 21748 ;;		_rd2RegCompleteHandler
 21749 ;;		_wr1RegCompleteHandler
 21750 ;;		_wr2RegCompleteHandler
 21751 ;;		_rdBlkRegCompleteHandler
 21752 ;;		_MonitorMsgForcedSend
 21753 ;;		_expanderWrite
 21754 ;;		_write4bits
 21755 ;;		_printstr
 21756 ;; This function uses a non-reentrant model
 21757 ;;
 21758                           
 21759                           	psect	text116
 21760  0074A8                     __ptext116:
 21761                           	opt callstack 0
 21762  0074A8                     _I2C2_SetBuffer:
 21763                           	opt callstack 13
 21764                           
 21765                           ; BSR set to: 0
 21766                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;incstack = 0
 21770  0074A8  0101               	movlb	1	; () banked
 21771  0074AA  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 21772  0074AC  0012               	return	
 21773                           
 21774                           ; BSR set to: 1
 21775                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 21776  0074AE  0060  F210  F11D   	movff	I2C2_SetBuffer@buffer,_I2C2_Status+29
 21777  0074B4  0060  F214  F11E   	movff	I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 21778                           
 21779                           ; BSR set to: 1
 21780                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 21781  0074BA  0060  F218  F11F   	movff	I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 21782  0074C0  0060  F21C  F120   	movff	I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 21783                           
 21784                           ; BSR set to: 1
 21785                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 21786  0074C6  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 21787                           
 21788                           ; BSR set to: 1
 21789  0074C8  0012               	return		;funcret
 21790  0074CA                     __end_of_I2C2_SetBuffer:
 21791                           	opt callstack 0
 21792                           
 21793 ;; *************** function _I2C2_MasterSetCounter *****************
 21794 ;; Defined at:
 21795 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 21796 ;; Parameters:    Size  Location     Type
 21797 ;;  counter         1    wreg     unsigned char 
 21798 ;; Auto vars:     Size  Location     Type
 21799 ;;  counter         1   36[BANK0 ] unsigned char 
 21800 ;; Return value:  Size  Location     Type
 21801 ;;                  1    wreg      void 
 21802 ;; Registers used:
 21803 ;;		wreg
 21804 ;; Tracked objects:
 21805 ;;		On entry : 3F/1
 21806 ;;		On exit  : 0/0
 21807 ;;		Unchanged: 0/0
 21808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21812 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21813 ;;Total ram usage:        1 bytes
 21814 ;; Hardware stack levels used:    1
 21815 ;; Hardware stack levels required when called:   13
 21816 ;; This function calls:
 21817 ;;		Nothing
 21818 ;; This function is called by:
 21819 ;;		_I2C2_MasterOperation
 21820 ;;		_I2C2_DO_RX_EMPTY
 21821 ;; This function uses a non-reentrant model
 21822 ;;
 21823                           
 21824                           	psect	text117
 21825  0078F6                     __ptext117:
 21826                           	opt callstack 0
 21827  0078F6                     _I2C2_MasterSetCounter:
 21828                           	opt callstack 11
 21829                           
 21830                           ; BSR set to: 1
 21831                           ;incstack = 0
 21832                           ;I2C2_MasterSetCounter@counter stored from wreg
 21833  0078F6  0100               	movlb	0	; () banked
 21834  0078F8  6F84               	movwf	I2C2_MasterSetCounter@counter& (0+255),b
 21835                           
 21836                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 21837  0078FA  0060  F213  FD56   	movff	I2C2_MasterSetCounter@counter,15702	;volatile
 21838  007900  0012               	return		;funcret
 21839  007902                     __end_of_I2C2_MasterSetCounter:
 21840                           	opt callstack 0
 21841                           
 21842 ;; *************** function _I2C2_MasterEnableRestart *****************
 21843 ;; Defined at:
 21844 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 21845 ;; Parameters:    Size  Location     Type
 21846 ;;		None
 21847 ;; Auto vars:     Size  Location     Type
 21848 ;;		None
 21849 ;; Return value:  Size  Location     Type
 21850 ;;                  1    wreg      void 
 21851 ;; Registers used:
 21852 ;;		None
 21853 ;; Tracked objects:
 21854 ;;		On entry : 3E/0
 21855 ;;		On exit  : 3F/3D
 21856 ;;		Unchanged: 0/0
 21857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;Total ram usage:        0 bytes
 21863 ;; Hardware stack levels used:    1
 21864 ;; Hardware stack levels required when called:   13
 21865 ;; This function calls:
 21866 ;;		Nothing
 21867 ;; This function is called by:
 21868 ;;		_I2C2_DO_RX_EMPTY
 21869 ;; This function uses a non-reentrant model
 21870 ;;
 21871                           
 21872                           	psect	text118
 21873  0079BC                     __ptext118:
 21874                           	opt callstack 0
 21875  0079BC                     _I2C2_MasterEnableRestart:
 21876                           	opt callstack 9
 21877                           
 21878                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 21879                           
 21880                           ;incstack = 0
 21881  0079BC  013D               	movlb	61	; () banked
 21882  0079BE  8D5D               	bsf	93,6,b	;volatile
 21883                           
 21884                           ; BSR set to: 61
 21885  0079C0  0012               	return		;funcret
 21886  0079C2                     __end_of_I2C2_MasterEnableRestart:
 21887                           	opt callstack 0
 21888                           
 21889 ;; *************** function _I2C2_MasterDisableRestart *****************
 21890 ;; Defined at:
 21891 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 21892 ;; Parameters:    Size  Location     Type
 21893 ;;		None
 21894 ;; Auto vars:     Size  Location     Type
 21895 ;;		None
 21896 ;; Return value:  Size  Location     Type
 21897 ;;                  1    wreg      void 
 21898 ;; Registers used:
 21899 ;;		None
 21900 ;; Tracked objects:
 21901 ;;		On entry : 3F/1
 21902 ;;		On exit  : 3F/3D
 21903 ;;		Unchanged: 0/0
 21904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21909 ;;Total ram usage:        0 bytes
 21910 ;; Hardware stack levels used:    1
 21911 ;; Hardware stack levels required when called:   13
 21912 ;; This function calls:
 21913 ;;		Nothing
 21914 ;; This function is called by:
 21915 ;;		_I2C2_DO_RX_EMPTY
 21916 ;; This function uses a non-reentrant model
 21917 ;;
 21918                           
 21919                           	psect	text119
 21920  0079C2                     __ptext119:
 21921                           	opt callstack 0
 21922  0079C2                     _I2C2_MasterDisableRestart:
 21923                           	opt callstack 9
 21924                           
 21925                           ; BSR set to: 1
 21926                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 21927                           
 21928                           ; BSR set to: 61
 21929                           ;incstack = 0
 21930  0079C2  013D               	movlb	61	; () banked
 21931  0079C4  9D5D               	bcf	93,6,b	;volatile
 21932                           
 21933                           ; BSR set to: 61
 21934  0079C6  0012               	return		;funcret
 21935  0079C8                     __end_of_I2C2_MasterDisableRestart:
 21936                           	opt callstack 0
 21937                           
 21938 ;; *************** function _I2C2_MOpen *****************
 21939 ;; Defined at:
 21940 ;;		line 28 in file "i2c2_mux.c"
 21941 ;; Parameters:    Size  Location     Type
 21942 ;;		None
 21943 ;; Auto vars:     Size  Location     Type
 21944 ;;  trfRsp          1   40[BANK0 ] enum E16385
 21945 ;; Return value:  Size  Location     Type
 21946 ;;                  1    wreg      enum E16385
 21947 ;; Registers used:
 21948 ;;		wreg, status,2, status,0, cstack
 21949 ;; Tracked objects:
 21950 ;;		On entry : 3C/1
 21951 ;;		On exit  : 3F/0
 21952 ;;		Unchanged: 0/0
 21953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21958 ;;Total ram usage:        1 bytes
 21959 ;; Hardware stack levels used:    1
 21960 ;; Hardware stack levels required when called:   15
 21961 ;; This function calls:
 21962 ;;		_I2C2_Open
 21963 ;; This function is called by:
 21964 ;;		_MonitorMsgForcedSend
 21965 ;; This function uses a non-reentrant model
 21966 ;;
 21967                           
 21968                           	psect	text120
 21969  006F16                     __ptext120:
 21970                           	opt callstack 0
 21971  006F16                     _I2C2_MOpen:
 21972                           	opt callstack 13
 21973                           
 21974                           ;i2c2_mux.c: 29:     i2c2_error_t trfRsp;;i2c2_mux.c: 31:     trfRsp = I2C2_Open(0x50);
 21975                           
 21976                           ; BSR set to: 61
 21977                           ;incstack = 0
 21978  006F16  0E50               	movlw	80
 21979  006F18  EC69  F02D         	call	_I2C2_Open
 21980  006F1C  6F88               	movwf	I2C2_MOpen@trfRsp& (0+255),b
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;i2c2_mux.c: 32:     if (trfRsp != I2C2_BUSY) {
 21984  006F1E  0588               	decf	I2C2_MOpen@trfRsp& (0+255),w,b
 21985  006F20  B4D8               	btfsc	status,2,c
 21986  006F22  D011               	goto	l14171
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;i2c2_mux.c: 33:         lastI2C2MAckResponse = 1;
 21990  006F24  0E01               	movlw	1
 21991  006F26  6FCC               	movwf	_lastI2C2MAckResponse& (0+255),b
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;i2c2_mux.c: 35:         if (currentTrfAddr == 0x50){
 21995  006F28  0E50               	movlw	80
 21996  006F2A  19CF               	xorwf	_currentTrfAddr& (0+255),w,b
 21997  006F2C  A4D8               	btfss	status,2,c
 21998  006F2E  D004               	goto	l2230
 21999                           
 22000                           ; BSR set to: 0
 22001                           ;i2c2_mux.c: 36:             lastI2C2MTrfResponse = trfRsp;
 22002  006F30  0060  F220  F0CE   	movff	I2C2_MOpen@trfRsp,_lastI2C2MTrfResponse
 22003                           
 22004                           ;i2c2_mux.c: 37:         } else {
 22005  006F36  D003               	goto	l14167
 22006  006F38                     l2230:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;i2c2_mux.c: 38:             lastI2C2LTrfResponse = trfRsp;
 22010  006F38  0060  F220  F0CD   	movff	I2C2_MOpen@trfRsp,_lastI2C2LTrfResponse
 22011  006F3E                     l14167:
 22012                           
 22013                           ; BSR set to: 0
 22014                           ;i2c2_mux.c: 40:         currentTrfAddr = 0x50;
 22015  006F3E  0E50               	movlw	80
 22016  006F40  6FCF               	movwf	_currentTrfAddr& (0+255),b
 22017                           
 22018                           ;i2c2_mux.c: 42:         return lastI2C2MTrfResponse;
 22019  006F42  51CE               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 22020  006F44  0012               	return	
 22021  006F46                     l14171:
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;i2c2_mux.c: 44:     return I2C2_BUSY;
 22025  006F46  0E01               	movlw	1
 22026                           
 22027                           ; BSR set to: 0
 22028  006F48  0012               	return		;funcret
 22029  006F4A                     __end_of_I2C2_MOpen:
 22030                           	opt callstack 0
 22031                           
 22032 ;; *************** function _I2C2_Open *****************
 22033 ;; Defined at:
 22034 ;;		line 204 in file "mcc_generated_files/i2c2_master.c"
 22035 ;; Parameters:    Size  Location     Type
 22036 ;;  address         1    wreg     unsigned char 
 22037 ;; Auto vars:     Size  Location     Type
 22038 ;;  address         1   38[BANK0 ] unsigned char 
 22039 ;;  returnValue     1   39[BANK0 ] enum E353
 22040 ;; Return value:  Size  Location     Type
 22041 ;;                  1    wreg      enum E353
 22042 ;; Registers used:
 22043 ;;		wreg, status,2, status,0, cstack
 22044 ;; Tracked objects:
 22045 ;;		On entry : 0/0
 22046 ;;		On exit  : 3F/0
 22047 ;;		Unchanged: 0/0
 22048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22053 ;;Total ram usage:        2 bytes
 22054 ;; Hardware stack levels used:    1
 22055 ;; Hardware stack levels required when called:   14
 22056 ;; This function calls:
 22057 ;;		_I2C2_MasterClearIrq
 22058 ;;		_I2C2_MasterEnableIrq
 22059 ;;		_I2C2_MasterOpen
 22060 ;;		_I2C2_SetInterruptHandler
 22061 ;; This function is called by:
 22062 ;;		_I2C2_MOpen
 22063 ;;		_I2C2_LOpen
 22064 ;; This function uses a non-reentrant model
 22065 ;;
 22066                           
 22067                           	psect	text121
 22068  005AD2                     __ptext121:
 22069                           	opt callstack 0
 22070  005AD2                     _I2C2_Open:
 22071                           	opt callstack 11
 22072                           
 22073                           ; BSR set to: 0
 22074                           ;incstack = 0
 22075                           ;I2C2_Open@address stored from wreg
 22076  005AD2  0100               	movlb	0	; () banked
 22077  005AD4  6F86               	movwf	I2C2_Open@address& (0+255),b
 22078                           
 22079                           ;mcc_generated_files/i2c2_master.c: 204: i2c2_error_t I2C2_Open(i2c2_address_t address);
      +                          mcc_generated_files/i2c2_master.c: 205: {;mcc_generated_files/i2c2_master.c: 206:     i2
      +                          c2_error_t returnValue = I2C2_BUSY;
 22080  005AD6  0E01               	movlw	1
 22081  005AD8  0100               	movlb	0	; () banked
 22082  005ADA  6F87               	movwf	I2C2_Open@returnValue& (0+255),b
 22083                           
 22084                           ; BSR set to: 0
 22085                           ;mcc_generated_files/i2c2_master.c: 208:     if(!I2C2_Status.inUse)
 22086  005ADC  0101               	movlb	1	; () banked
 22087  005ADE  B723               	btfsc	(_I2C2_Status+35)& (0+255),3,b
 22088  005AE0  D046               	goto	l12941
 22089                           
 22090                           ; BSR set to: 1
 22091                           ;mcc_generated_files/i2c2_master.c: 209:     {;mcc_generated_files/i2c2_master.c: 210:  
      +                                 I2C2_Status.address = address;
 22092  005AE2  0060  F218  F11C   	movff	I2C2_Open@address,_I2C2_Status+28
 22093                           
 22094                           ; BSR set to: 1
 22095                           ;mcc_generated_files/i2c2_master.c: 211:         I2C2_Status.busy = 0;
 22096  005AE8  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 22097                           
 22098                           ; BSR set to: 1
 22099                           ;mcc_generated_files/i2c2_master.c: 212:         I2C2_Status.inUse = 1;
 22100  005AEA  8723               	bsf	(_I2C2_Status+35)& (0+255),3,b
 22101                           
 22102                           ; BSR set to: 1
 22103                           ;mcc_generated_files/i2c2_master.c: 213:         I2C2_Status.addressNackCheck = 0;
 22104  005AEC  0EFC               	movlw	-4
 22105  005AEE  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 22106                           
 22107                           ; BSR set to: 1
 22108                           ;mcc_generated_files/i2c2_master.c: 214:         I2C2_Status.state = I2C2_RESET;
 22109  005AF0  0E0F               	movlw	15
 22110  005AF2  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 22111                           
 22112                           ; BSR set to: 1
 22113                           ;mcc_generated_files/i2c2_master.c: 215:         I2C2_Status.time_out_value = 500;
 22114  005AF4  0E01               	movlw	1
 22115  005AF6  6F1B               	movwf	(_I2C2_Status+27)& (0+255),b
 22116  005AF8  0EF4               	movlw	244
 22117  005AFA  6F1A               	movwf	(_I2C2_Status+26)& (0+255),b
 22118                           
 22119                           ; BSR set to: 1
 22120                           ;mcc_generated_files/i2c2_master.c: 216:         I2C2_Status.bufferFree = 1;
 22121  005AFC  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;mcc_generated_files/i2c2_master.c: 219:         I2C2_Status.callbackTable[I2C2_DATA_COM
      +                          PLETE]=I2C2_CallbackReturnStop;
 22125  005AFE  0E52               	movlw	low _I2C2_CallbackReturnStop
 22126  005B00  6F00               	movwf	_I2C2_Status& (0+255),b
 22127  005B02  0E79               	movlw	high _I2C2_CallbackReturnStop
 22128  005B04  6F01               	movwf	(_I2C2_Status+1)& (0+255),b
 22129                           
 22130                           ; BSR set to: 1
 22131                           ;mcc_generated_files/i2c2_master.c: 220:         I2C2_Status.callbackPayload[I2C2_DATA_C
      +                          OMPLETE] = ((void*)0);
 22132  005B06  0E00               	movlw	0
 22133  005B08  6F0C               	movwf	(_I2C2_Status+12)& (0+255),b
 22134  005B0A  0E00               	movlw	0
 22135  005B0C  6F0D               	movwf	(_I2C2_Status+13)& (0+255),b
 22136                           
 22137                           ; BSR set to: 1
 22138                           ;mcc_generated_files/i2c2_master.c: 221:         I2C2_Status.callbackTable[I2C2_WRITE_CO
      +                          LLISION]=I2C2_CallbackReturnStop;
 22139  005B0E  0E52               	movlw	low _I2C2_CallbackReturnStop
 22140  005B10  6F02               	movwf	(_I2C2_Status+2)& (0+255),b
 22141  005B12  0E79               	movlw	high _I2C2_CallbackReturnStop
 22142  005B14  6F03               	movwf	(_I2C2_Status+3)& (0+255),b
 22143                           
 22144                           ; BSR set to: 1
 22145                           ;mcc_generated_files/i2c2_master.c: 222:         I2C2_Status.callbackPayload[I2C2_WRITE_
      +                          COLLISION] = ((void*)0);
 22146  005B16  0E00               	movlw	0
 22147  005B18  6F0E               	movwf	(_I2C2_Status+14)& (0+255),b
 22148  005B1A  0E00               	movlw	0
 22149  005B1C  6F0F               	movwf	(_I2C2_Status+15)& (0+255),b
 22150                           
 22151                           ; BSR set to: 1
 22152                           ;mcc_generated_files/i2c2_master.c: 223:         I2C2_Status.callbackTable[I2C2_ADDR_NAC
      +                          K]=I2C2_CallbackReturnStop;
 22153  005B1E  0E52               	movlw	low _I2C2_CallbackReturnStop
 22154  005B20  6F04               	movwf	(_I2C2_Status+4)& (0+255),b
 22155  005B22  0E79               	movlw	high _I2C2_CallbackReturnStop
 22156  005B24  6F05               	movwf	(_I2C2_Status+5)& (0+255),b
 22157                           
 22158                           ; BSR set to: 1
 22159                           ;mcc_generated_files/i2c2_master.c: 224:         I2C2_Status.callbackPayload[I2C2_ADDR_N
      +                          ACK] = ((void*)0);
 22160  005B26  0E00               	movlw	0
 22161  005B28  6F10               	movwf	(_I2C2_Status+16)& (0+255),b
 22162  005B2A  0E00               	movlw	0
 22163  005B2C  6F11               	movwf	(_I2C2_Status+17)& (0+255),b
 22164                           
 22165                           ; BSR set to: 1
 22166                           ;mcc_generated_files/i2c2_master.c: 225:         I2C2_Status.callbackTable[I2C2_DATA_NAC
      +                          K]=I2C2_CallbackReturnStop;
 22167  005B2E  0E52               	movlw	low _I2C2_CallbackReturnStop
 22168  005B30  6F06               	movwf	(_I2C2_Status+6)& (0+255),b
 22169  005B32  0E79               	movlw	high _I2C2_CallbackReturnStop
 22170  005B34  6F07               	movwf	(_I2C2_Status+7)& (0+255),b
 22171                           
 22172                           ; BSR set to: 1
 22173                           ;mcc_generated_files/i2c2_master.c: 226:         I2C2_Status.callbackPayload[I2C2_DATA_N
      +                          ACK] = ((void*)0);
 22174  005B36  0E00               	movlw	0
 22175  005B38  6F12               	movwf	(_I2C2_Status+18)& (0+255),b
 22176  005B3A  0E00               	movlw	0
 22177  005B3C  6F13               	movwf	(_I2C2_Status+19)& (0+255),b
 22178                           
 22179                           ; BSR set to: 1
 22180                           ;mcc_generated_files/i2c2_master.c: 227:         I2C2_Status.callbackTable[I2C2_TIMEOUT]
      +                          =I2C2_CallbackReturnReset;
 22181  005B3E  0E48               	movlw	low _I2C2_CallbackReturnReset
 22182  005B40  6F08               	movwf	(_I2C2_Status+8)& (0+255),b
 22183  005B42  0E79               	movlw	high _I2C2_CallbackReturnReset
 22184  005B44  6F09               	movwf	(_I2C2_Status+9)& (0+255),b
 22185                           
 22186                           ; BSR set to: 1
 22187                           ;mcc_generated_files/i2c2_master.c: 228:         I2C2_Status.callbackPayload[I2C2_TIMEOU
      +                          T] = ((void*)0);
 22188  005B46  0E00               	movlw	0
 22189  005B48  6F14               	movwf	(_I2C2_Status+20)& (0+255),b
 22190  005B4A  0E00               	movlw	0
 22191  005B4C  6F15               	movwf	(_I2C2_Status+21)& (0+255),b
 22192                           
 22193                           ; BSR set to: 1
 22194                           ;mcc_generated_files/i2c2_master.c: 230:         I2C2_SetInterruptHandler(I2C2_MasterIsr
      +                          );
 22195  005B4E  0ECE               	movlw	low _I2C2_MasterIsr
 22196  005B50  0100               	movlb	0	; () banked
 22197  005B52  6F84               	movwf	I2C2_SetInterruptHandler@InterruptHandler& (0+255),b
 22198  005B54  0E79               	movlw	high _I2C2_MasterIsr
 22199  005B56  6F85               	movwf	(I2C2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 22200  005B58  EC39  F03C         	call	_I2C2_SetInterruptHandler	;wreg free
 22201                           
 22202                           ; BSR set to: 0
 22203                           ;mcc_generated_files/i2c2_master.c: 231:         I2C2_MasterClearIrq();
 22204  005B5C  ECCA  F03C         	call	_I2C2_MasterClearIrq	;wreg free
 22205                           
 22206                           ; BSR set to: 61
 22207                           ;mcc_generated_files/i2c2_master.c: 232:         I2C2_MasterOpen();
 22208  005B60  EC65  F03A         	call	_I2C2_MasterOpen	;wreg free
 22209                           
 22210                           ; BSR set to: 61
 22211                           ;mcc_generated_files/i2c2_master.c: 233:         I2C2_MasterEnableIrq();
 22212  005B64  EC85  F03B         	call	_I2C2_MasterEnableIrq	;wreg free
 22213                           
 22214                           ; BSR set to: 61
 22215                           ;mcc_generated_files/i2c2_master.c: 234:         returnValue = I2C2_NOERR;
 22216  005B68  0E00               	movlw	0
 22217  005B6A  0100               	movlb	0	; () banked
 22218  005B6C  6F87               	movwf	I2C2_Open@returnValue& (0+255),b
 22219  005B6E                     l12941:
 22220                           
 22221                           ;mcc_generated_files/i2c2_master.c: 236:     return returnValue;
 22222  005B6E  0100               	movlb	0	; () banked
 22223  005B70  5187               	movf	I2C2_Open@returnValue& (0+255),w,b
 22224                           
 22225                           ; BSR set to: 0
 22226  005B72  0012               	return		;funcret
 22227  005B74                     __end_of_I2C2_Open:
 22228                           	opt callstack 0
 22229                           
 22230 ;; *************** function _I2C2_SetInterruptHandler *****************
 22231 ;; Defined at:
 22232 ;;		line 329 in file "mcc_generated_files/i2c2_master.c"
 22233 ;; Parameters:    Size  Location     Type
 22234 ;;  InterruptHan    2   36[BANK0 ] PTR FTN()void 
 22235 ;;		 -> I2C2_MasterIsr(1), 
 22236 ;; Auto vars:     Size  Location     Type
 22237 ;;		None
 22238 ;; Return value:  Size  Location     Type
 22239 ;;                  1    wreg      void 
 22240 ;; Registers used:
 22241 ;;		wreg, status,2, status,0
 22242 ;; Tracked objects:
 22243 ;;		On entry : 3F/0
 22244 ;;		On exit  : 3F/0
 22245 ;;		Unchanged: 3F/0
 22246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22251 ;;Total ram usage:        2 bytes
 22252 ;; Hardware stack levels used:    1
 22253 ;; Hardware stack levels required when called:   13
 22254 ;; This function calls:
 22255 ;;		Nothing
 22256 ;; This function is called by:
 22257 ;;		_I2C2_Open
 22258 ;; This function uses a non-reentrant model
 22259 ;;
 22260                           
 22261                           	psect	text122
 22262  007872                     __ptext122:
 22263                           	opt callstack 0
 22264  007872                     _I2C2_SetInterruptHandler:
 22265                           	opt callstack 11
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;mcc_generated_files/i2c2_master.c: 329: void I2C2_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c2_master.c: 330: {;mcc_generated_files/i2c2_maste
      +                          r.c: 331:     I2C2_InterruptHandler = InterruptHandler;
 22269                           
 22270                           ; BSR set to: 0
 22271                           ;incstack = 0
 22272  007872  0060  F210  F0CA   	movff	I2C2_SetInterruptHandler@InterruptHandler,_I2C2_InterruptHandler
 22273  007878  0060  F214  F0CB   	movff	I2C2_SetInterruptHandler@InterruptHandler+1,_I2C2_InterruptHandler+1
 22274                           
 22275                           ; BSR set to: 0
 22276  00787E  0012               	return		;funcret
 22277  007880                     __end_of_I2C2_SetInterruptHandler:
 22278                           	opt callstack 0
 22279                           
 22280 ;; *************** function _I2C2_MasterOpen *****************
 22281 ;; Defined at:
 22282 ;;		line 633 in file "mcc_generated_files/i2c2_master.c"
 22283 ;; Parameters:    Size  Location     Type
 22284 ;;		None
 22285 ;; Auto vars:     Size  Location     Type
 22286 ;;		None
 22287 ;; Return value:  Size  Location     Type
 22288 ;;                  1    wreg      _Bool 
 22289 ;; Registers used:
 22290 ;;		wreg, status,2
 22291 ;; Tracked objects:
 22292 ;;		On entry : 3F/3D
 22293 ;;		On exit  : 3F/3D
 22294 ;;		Unchanged: 0/0
 22295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22300 ;;Total ram usage:        0 bytes
 22301 ;; Hardware stack levels used:    1
 22302 ;; Hardware stack levels required when called:   13
 22303 ;; This function calls:
 22304 ;;		Nothing
 22305 ;; This function is called by:
 22306 ;;		_I2C2_Open
 22307 ;; This function uses a non-reentrant model
 22308 ;;
 22309                           
 22310                           	psect	text123
 22311  0074CA                     __ptext123:
 22312                           	opt callstack 0
 22313  0074CA                     _I2C2_MasterOpen:
 22314                           	opt callstack 11
 22315                           
 22316                           ; BSR set to: 61
 22317                           ;mcc_generated_files/i2c2_master.c: 635:     if(!I2C2CON0bits.EN)
 22318                           
 22319                           ; BSR set to: 0
 22320                           ;incstack = 0
 22321  0074CA  BF5D               	btfsc	93,7,b	;volatile
 22322  0074CC  0012               	return	
 22323                           
 22324                           ; BSR set to: 61
 22325                           ;mcc_generated_files/i2c2_master.c: 636:     {;mcc_generated_files/i2c2_master.c: 638:  
      +                                 I2C2PIR = 0x00;
 22326  0074CE  0E00               	movlw	0
 22327  0074D0  6F63               	movwf	99,b	;volatile
 22328                           
 22329                           ;mcc_generated_files/i2c2_master.c: 640:         I2C2PIE = 0x00;
 22330  0074D2  0E00               	movlw	0
 22331  0074D4  6F64               	movwf	100,b	;volatile
 22332                           
 22333                           ;mcc_generated_files/i2c2_master.c: 642:         I2C2ERR = 0x00;
 22334  0074D6  0E00               	movlw	0
 22335  0074D8  6F60               	movwf	96,b	;volatile
 22336                           
 22337                           ; BSR set to: 61
 22338                           ;mcc_generated_files/i2c2_master.c: 644:         I2C2CNT = 0xFF;
 22339  0074DA  6956               	setf	86,b	;volatile
 22340                           
 22341                           ;mcc_generated_files/i2c2_master.c: 646:         RB1I2C = 0x51;
 22342  0074DC  0E51               	movlw	81
 22343  0074DE  013A               	movlb	58	; () banked
 22344  0074E0  6F5A               	movwf	90,b	;volatile
 22345                           
 22346                           ;mcc_generated_files/i2c2_master.c: 648:         RB2I2C = 0x51;
 22347  0074E2  0E51               	movlw	81
 22348  0074E4  6F5B               	movwf	91,b	;volatile
 22349                           
 22350                           ; BSR set to: 58
 22351                           ;mcc_generated_files/i2c2_master.c: 650:         I2C2CON0bits.EN = 1;
 22352  0074E6  013D               	movlb	61	; () banked
 22353  0074E8  8F5D               	bsf	93,7,b	;volatile
 22354                           
 22355                           ; BSR set to: 61
 22356  0074EA  0012               	return		;funcret
 22357  0074EC                     __end_of_I2C2_MasterOpen:
 22358                           	opt callstack 0
 22359                           
 22360 ;; *************** function _I2C2_MasterEnableIrq *****************
 22361 ;; Defined at:
 22362 ;;		line 776 in file "mcc_generated_files/i2c2_master.c"
 22363 ;; Parameters:    Size  Location     Type
 22364 ;;		None
 22365 ;; Auto vars:     Size  Location     Type
 22366 ;;		None
 22367 ;; Return value:  Size  Location     Type
 22368 ;;                  1    wreg      void 
 22369 ;; Registers used:
 22370 ;;		None
 22371 ;; Tracked objects:
 22372 ;;		On entry : 3F/3D
 22373 ;;		On exit  : 3F/3D
 22374 ;;		Unchanged: 0/0
 22375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22380 ;;Total ram usage:        0 bytes
 22381 ;; Hardware stack levels used:    1
 22382 ;; Hardware stack levels required when called:   13
 22383 ;; This function calls:
 22384 ;;		Nothing
 22385 ;; This function is called by:
 22386 ;;		_I2C2_Open
 22387 ;; This function uses a non-reentrant model
 22388 ;;
 22389                           
 22390                           	psect	text124
 22391  00770A                     __ptext124:
 22392                           	opt callstack 0
 22393  00770A                     _I2C2_MasterEnableIrq:
 22394                           	opt callstack 11
 22395                           
 22396                           ; BSR set to: 61
 22397                           ;mcc_generated_files/i2c2_master.c: 778:     PIE6bits.I2C2IE = 1;
 22398                           
 22399                           ; BSR set to: 61
 22400                           ;incstack = 0
 22401  00770A  0139               	movlb	57	; () banked
 22402  00770C  8196               	bsf	150,0,b	;volatile
 22403                           
 22404                           ;mcc_generated_files/i2c2_master.c: 779:     PIE6bits.I2C2EIE = 1;
 22405  00770E  8396               	bsf	150,1,b	;volatile
 22406                           
 22407                           ;mcc_generated_files/i2c2_master.c: 780:     PIE5bits.I2C2RXIE = 1;
 22408  007710  8D95               	bsf	149,6,b	;volatile
 22409                           
 22410                           ;mcc_generated_files/i2c2_master.c: 781:     PIE5bits.I2C2TXIE = 1;
 22411  007712  8F95               	bsf	149,7,b	;volatile
 22412                           
 22413                           ;mcc_generated_files/i2c2_master.c: 783:     I2C2PIEbits.PCIE = 1;
 22414  007714  013D               	movlb	61	; () banked
 22415  007716  8564               	bsf	100,2,b	;volatile
 22416                           
 22417                           ;mcc_generated_files/i2c2_master.c: 784:     I2C2PIEbits.CNTIE = 1;
 22418  007718  8F64               	bsf	100,7,b	;volatile
 22419                           
 22420                           ;mcc_generated_files/i2c2_master.c: 785:     I2C2ERRbits.NACKIE = 1;
 22421  00771A  8160               	bsf	96,0,b	;volatile
 22422                           
 22423                           ; BSR set to: 61
 22424  00771C  0012               	return		;funcret
 22425  00771E                     __end_of_I2C2_MasterEnableIrq:
 22426                           	opt callstack 0
 22427                           
 22428 ;; *************** function _I2C2_MClose *****************
 22429 ;; Defined at:
 22430 ;;		line 66 in file "i2c2_mux.c"
 22431 ;; Parameters:    Size  Location     Type
 22432 ;;		None
 22433 ;; Auto vars:     Size  Location     Type
 22434 ;;  trfRsp          1   37[BANK0 ] enum E16385
 22435 ;; Return value:  Size  Location     Type
 22436 ;;                  1    wreg      enum E16385
 22437 ;; Registers used:
 22438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 22439 ;; Tracked objects:
 22440 ;;		On entry : 0/1
 22441 ;;		On exit  : 3F/0
 22442 ;;		Unchanged: 0/0
 22443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22448 ;;Total ram usage:        1 bytes
 22449 ;; Hardware stack levels used:    1
 22450 ;; Hardware stack levels required when called:   15
 22451 ;; This function calls:
 22452 ;;		_I2C2_Close
 22453 ;;		_I2C2_MasterIsNackFlagSet
 22454 ;; This function is called by:
 22455 ;;		_MonitorMsgForcedSend
 22456 ;; This function uses a non-reentrant model
 22457 ;;
 22458                           
 22459                           	psect	text125
 22460  006BCA                     __ptext125:
 22461                           	opt callstack 0
 22462  006BCA                     _I2C2_MClose:
 22463                           	opt callstack 13
 22464                           
 22465                           ;i2c2_mux.c: 67:     i2c2_error_t trfRsp;;i2c2_mux.c: 69:     trfRsp = I2C2_Close();
 22466                           
 22467                           ; BSR set to: 61
 22468                           ;incstack = 0
 22469  006BCA  ECAE  F039         	call	_I2C2_Close	;wreg free
 22470  006BCE  6F85               	movwf	I2C2_MClose@trfRsp& (0+255),b
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;i2c2_mux.c: 70:     if (trfRsp != I2C2_BUSY) {
 22474  006BD0  0585               	decf	I2C2_MClose@trfRsp& (0+255),w,b
 22475  006BD2  B4D8               	btfsc	status,2,c
 22476  006BD4  D019               	goto	l14069
 22477                           
 22478                           ; BSR set to: 0
 22479                           ;i2c2_mux.c: 72:         if (currentTrfAddr == 0x50){
 22480  006BD6  0E50               	movlw	80
 22481  006BD8  19CF               	xorwf	_currentTrfAddr& (0+255),w,b
 22482  006BDA  A4D8               	btfss	status,2,c
 22483  006BDC  D009               	goto	l14061
 22484                           
 22485                           ; BSR set to: 0
 22486                           ;i2c2_mux.c: 73:             lastI2C2MAckResponse = I2C2_MasterIsNackFlagSet();
 22487  006BDE  EC93  F03C         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 22488  006BE2  0100               	movlb	0	; () banked
 22489  006BE4  5160               	movf	?i2c2_mux@I2C2_MasterIsNackFlagSet& (0+255),w,b
 22490  006BE6  6FCC               	movwf	_lastI2C2MAckResponse& (0+255),b
 22491                           
 22492                           ; BSR set to: 0
 22493                           ;i2c2_mux.c: 74:             lastI2C2MTrfResponse = trfRsp;
 22494  006BE8  0060  F214  F0CE   	movff	I2C2_MClose@trfRsp,_lastI2C2MTrfResponse
 22495                           
 22496                           ;i2c2_mux.c: 75:         } else {
 22497  006BEE  D009               	goto	l14065
 22498  006BF0                     l14061:
 22499                           
 22500                           ; BSR set to: 0
 22501                           ;i2c2_mux.c: 76:             lastI2C2LAckResponse = I2C2_MasterIsNackFlagSet();
 22502  006BF0  EC93  F03C         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 22503  006BF4  0100               	movlb	0	; () banked
 22504  006BF6  5160               	movf	?i2c2_mux@I2C2_MasterIsNackFlagSet& (0+255),w,b
 22505  006BF8  0101               	movlb	1	; () banked
 22506  006BFA  6F43               	movwf	_lastI2C2LAckResponse& (0+255),b
 22507                           
 22508                           ; BSR set to: 1
 22509                           ;i2c2_mux.c: 77:             lastI2C2LTrfResponse = trfRsp;
 22510  006BFC  0060  F214  F0CD   	movff	I2C2_MClose@trfRsp,_lastI2C2LTrfResponse
 22511  006C02                     l14065:
 22512                           
 22513                           ;i2c2_mux.c: 80:         return lastI2C2MTrfResponse;
 22514  006C02  0100               	movlb	0	; () banked
 22515  006C04  51CE               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 22516  006C06  0012               	return	
 22517  006C08                     l14069:
 22518                           
 22519                           ; BSR set to: 0
 22520                           ;i2c2_mux.c: 82:     return I2C2_BUSY;
 22521  006C08  0E01               	movlw	1
 22522                           
 22523                           ; BSR set to: 0
 22524  006C0A  0012               	return		;funcret
 22525  006C0C                     __end_of_I2C2_MClose:
 22526                           	opt callstack 0
 22527                           
 22528 ;; *************** function _I2C2_Close *****************
 22529 ;; Defined at:
 22530 ;;		line 239 in file "mcc_generated_files/i2c2_master.c"
 22531 ;; Parameters:    Size  Location     Type
 22532 ;;		None
 22533 ;; Auto vars:     Size  Location     Type
 22534 ;;  returnValue     1   36[BANK0 ] enum E353
 22535 ;; Return value:  Size  Location     Type
 22536 ;;                  1    wreg      enum E353
 22537 ;; Registers used:
 22538 ;;		wreg, status,2, cstack
 22539 ;; Tracked objects:
 22540 ;;		On entry : 0/0
 22541 ;;		On exit  : 3F/0
 22542 ;;		Unchanged: 0/0
 22543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22548 ;;Total ram usage:        1 bytes
 22549 ;; Hardware stack levels used:    1
 22550 ;; Hardware stack levels required when called:   14
 22551 ;; This function calls:
 22552 ;;		_I2C2_MasterClearIrq
 22553 ;;		_I2C2_MasterClose
 22554 ;;		_I2C2_MasterDisableIrq
 22555 ;; This function is called by:
 22556 ;;		_I2C2_MClose
 22557 ;;		_I2C2_LClose
 22558 ;; This function uses a non-reentrant model
 22559 ;;
 22560                           
 22561                           	psect	text126
 22562  00735C                     __ptext126:
 22563                           	opt callstack 0
 22564  00735C                     _I2C2_Close:
 22565                           	opt callstack 11
 22566                           
 22567                           ;mcc_generated_files/i2c2_master.c: 241:     i2c2_error_t returnValue = I2C2_BUSY;
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;incstack = 0
 22571  00735C  0E01               	movlw	1
 22572  00735E  0100               	movlb	0	; () banked
 22573  007360  6F84               	movwf	I2C2_Close@returnValue& (0+255),b
 22574                           
 22575                           ; BSR set to: 0
 22576                           ;mcc_generated_files/i2c2_master.c: 242:     if(!I2C2_Status.busy)
 22577  007362  0101               	movlb	1	; () banked
 22578  007364  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 22579  007366  D00B               	goto	l12959
 22580                           
 22581                           ; BSR set to: 1
 22582                           ;mcc_generated_files/i2c2_master.c: 243:     {;mcc_generated_files/i2c2_master.c: 244:  
      +                                 I2C2_Status.inUse = 0;
 22583  007368  9723               	bcf	(_I2C2_Status+35)& (0+255),3,b
 22584                           
 22585                           ;mcc_generated_files/i2c2_master.c: 245:         I2C2_Status.address = 0xff;
 22586  00736A  691C               	setf	(_I2C2_Status+28)& (0+255),b
 22587                           
 22588                           ; BSR set to: 1
 22589                           ;mcc_generated_files/i2c2_master.c: 246:         I2C2_MasterClearIrq();
 22590  00736C  ECCA  F03C         	call	_I2C2_MasterClearIrq	;wreg free
 22591                           
 22592                           ; BSR set to: 61
 22593                           ;mcc_generated_files/i2c2_master.c: 247:         I2C2_MasterDisableIrq();
 22594  007370  ECD9  F03A         	call	_I2C2_MasterDisableIrq	;wreg free
 22595                           
 22596                           ; BSR set to: 61
 22597                           ;mcc_generated_files/i2c2_master.c: 248:         I2C2_MasterClose();
 22598  007374  ECAE  F03C         	call	_I2C2_MasterClose	;wreg free
 22599                           
 22600                           ; BSR set to: 61
 22601                           ;mcc_generated_files/i2c2_master.c: 249:         returnValue = I2C2_Status.error;
 22602  007378  0060  F488  F084   	movff	_I2C2_Status+34,I2C2_Close@returnValue
 22603  00737E                     l12959:
 22604                           
 22605                           ;mcc_generated_files/i2c2_master.c: 251:     return returnValue;
 22606  00737E  0100               	movlb	0	; () banked
 22607  007380  5184               	movf	I2C2_Close@returnValue& (0+255),w,b
 22608                           
 22609                           ; BSR set to: 0
 22610  007382  0012               	return		;funcret
 22611  007384                     __end_of_I2C2_Close:
 22612                           	opt callstack 0
 22613                           
 22614 ;; *************** function _I2C2_MasterDisableIrq *****************
 22615 ;; Defined at:
 22616 ;;		line 793 in file "mcc_generated_files/i2c2_master.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;		None
 22619 ;; Auto vars:     Size  Location     Type
 22620 ;;		None
 22621 ;; Return value:  Size  Location     Type
 22622 ;;                  1    wreg      void 
 22623 ;; Registers used:
 22624 ;;		None
 22625 ;; Tracked objects:
 22626 ;;		On entry : 3F/3D
 22627 ;;		On exit  : 3F/3D
 22628 ;;		Unchanged: 0/0
 22629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22634 ;;Total ram usage:        0 bytes
 22635 ;; Hardware stack levels used:    1
 22636 ;; Hardware stack levels required when called:   13
 22637 ;; This function calls:
 22638 ;;		Nothing
 22639 ;; This function is called by:
 22640 ;;		_I2C2_Close
 22641 ;; This function uses a non-reentrant model
 22642 ;;
 22643                           
 22644                           	psect	text127
 22645  0075B2                     __ptext127:
 22646                           	opt callstack 0
 22647  0075B2                     _I2C2_MasterDisableIrq:
 22648                           	opt callstack 11
 22649                           
 22650                           ; BSR set to: 61
 22651                           ;mcc_generated_files/i2c2_master.c: 795:     PIE6bits.I2C2IE = 0;
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;incstack = 0
 22655  0075B2  0139               	movlb	57	; () banked
 22656  0075B4  9196               	bcf	150,0,b	;volatile
 22657                           
 22658                           ;mcc_generated_files/i2c2_master.c: 796:     PIE6bits.I2C2EIE = 0;
 22659  0075B6  9396               	bcf	150,1,b	;volatile
 22660                           
 22661                           ;mcc_generated_files/i2c2_master.c: 797:     PIE5bits.I2C2RXIE = 0;
 22662  0075B8  9D95               	bcf	149,6,b	;volatile
 22663                           
 22664                           ;mcc_generated_files/i2c2_master.c: 798:     PIE5bits.I2C2TXIE = 0;
 22665  0075BA  9F95               	bcf	149,7,b	;volatile
 22666                           
 22667                           ;mcc_generated_files/i2c2_master.c: 799:     I2C2PIEbits.SCIE = 0;
 22668  0075BC  013D               	movlb	61	; () banked
 22669  0075BE  9164               	bcf	100,0,b	;volatile
 22670                           
 22671                           ;mcc_generated_files/i2c2_master.c: 800:     I2C2PIEbits.PCIE = 0;
 22672  0075C0  9564               	bcf	100,2,b	;volatile
 22673                           
 22674                           ;mcc_generated_files/i2c2_master.c: 801:     I2C2PIEbits.CNTIE = 0;
 22675  0075C2  9F64               	bcf	100,7,b	;volatile
 22676                           
 22677                           ;mcc_generated_files/i2c2_master.c: 802:     I2C2PIEbits.ACKTIE = 0;
 22678  0075C4  9D64               	bcf	100,6,b	;volatile
 22679                           
 22680                           ;mcc_generated_files/i2c2_master.c: 803:     I2C2PIEbits.RSCIE = 0;
 22681  0075C6  9364               	bcf	100,1,b	;volatile
 22682                           
 22683                           ;mcc_generated_files/i2c2_master.c: 804:     I2C2ERRbits.BCLIE = 0;
 22684  0075C8  9360               	bcf	96,1,b	;volatile
 22685                           
 22686                           ;mcc_generated_files/i2c2_master.c: 805:     I2C2ERRbits.BTOIE = 0;
 22687  0075CA  9560               	bcf	96,2,b	;volatile
 22688                           
 22689                           ;mcc_generated_files/i2c2_master.c: 806:     I2C2ERRbits.NACKIE = 0;
 22690  0075CC  9160               	bcf	96,0,b	;volatile
 22691                           
 22692                           ; BSR set to: 61
 22693  0075CE  0012               	return		;funcret
 22694  0075D0                     __end_of_I2C2_MasterDisableIrq:
 22695                           	opt callstack 0
 22696                           
 22697 ;; *************** function _I2C2_MasterClose *****************
 22698 ;; Defined at:
 22699 ;;		line 656 in file "mcc_generated_files/i2c2_master.c"
 22700 ;; Parameters:    Size  Location     Type
 22701 ;;		None
 22702 ;; Auto vars:     Size  Location     Type
 22703 ;;		None
 22704 ;; Return value:  Size  Location     Type
 22705 ;;                  1    wreg      void 
 22706 ;; Registers used:
 22707 ;;		wreg, status,2
 22708 ;; Tracked objects:
 22709 ;;		On entry : 3F/3D
 22710 ;;		On exit  : 3F/3D
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22717 ;;Total ram usage:        0 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:   13
 22720 ;; This function calls:
 22721 ;;		Nothing
 22722 ;; This function is called by:
 22723 ;;		_I2C2_Close
 22724 ;; This function uses a non-reentrant model
 22725 ;;
 22726                           
 22727                           	psect	text128
 22728  00795C                     __ptext128:
 22729                           	opt callstack 0
 22730  00795C                     _I2C2_MasterClose:
 22731                           	opt callstack 11
 22732                           
 22733                           ; BSR set to: 61
 22734                           ;mcc_generated_files/i2c2_master.c: 659:     I2C2CON0bits.EN = 0;
 22735                           
 22736                           ; BSR set to: 61
 22737                           ;incstack = 0
 22738  00795C  9F5D               	bcf	93,7,b	;volatile
 22739                           
 22740                           ; BSR set to: 61
 22741                           ;mcc_generated_files/i2c2_master.c: 661:     I2C2PIR = 0x00;
 22742  00795E  0E00               	movlw	0
 22743  007960  6F63               	movwf	99,b	;volatile
 22744                           
 22745                           ; BSR set to: 61
 22746                           ;mcc_generated_files/i2c2_master.c: 663:     I2C2STAT1bits.CLRBF = 1;
 22747  007962  8562               	bsf	98,2,b	;volatile
 22748                           
 22749                           ; BSR set to: 61
 22750  007964  0012               	return		;funcret
 22751  007966                     __end_of_I2C2_MasterClose:
 22752                           	opt callstack 0
 22753                           
 22754 ;; *************** function _I2C2_MasterClearIrq *****************
 22755 ;; Defined at:
 22756 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 22757 ;; Parameters:    Size  Location     Type
 22758 ;;		None
 22759 ;; Auto vars:     Size  Location     Type
 22760 ;;		None
 22761 ;; Return value:  Size  Location     Type
 22762 ;;                  1    wreg      void 
 22763 ;; Registers used:
 22764 ;;		wreg, status,2
 22765 ;; Tracked objects:
 22766 ;;		On entry : 3E/0
 22767 ;;		On exit  : 3F/3D
 22768 ;;		Unchanged: 0/0
 22769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22774 ;;Total ram usage:        0 bytes
 22775 ;; Hardware stack levels used:    1
 22776 ;; Hardware stack levels required when called:   13
 22777 ;; This function calls:
 22778 ;;		Nothing
 22779 ;; This function is called by:
 22780 ;;		_I2C2_Open
 22781 ;;		_I2C2_Close
 22782 ;; This function uses a non-reentrant model
 22783 ;;
 22784                           
 22785                           	psect	text129
 22786  007994                     __ptext129:
 22787                           	opt callstack 0
 22788  007994                     _I2C2_MasterClearIrq:
 22789                           	opt callstack 11
 22790                           
 22791                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 22792                           
 22793                           ; BSR set to: 61
 22794                           ;incstack = 0
 22795  007994  0E00               	movlw	0
 22796  007996  013D               	movlb	61	; () banked
 22797  007998  6F63               	movwf	99,b	;volatile
 22798                           
 22799                           ; BSR set to: 61
 22800  00799A  0012               	return		;funcret
 22801  00799C                     __end_of_I2C2_MasterClearIrq:
 22802                           	opt callstack 0
 22803                           
 22804 ;; *************** function _I2C2_MAck *****************
 22805 ;; Defined at:
 22806 ;;		line 20 in file "i2c2_mux.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;		None
 22809 ;; Auto vars:     Size  Location     Type
 22810 ;;		None
 22811 ;; Return value:  Size  Location     Type
 22812 ;;                  1    wreg      _Bool 
 22813 ;; Registers used:
 22814 ;;		wreg, status,2
 22815 ;; Tracked objects:
 22816 ;;		On entry : 3F/1
 22817 ;;		On exit  : 3F/0
 22818 ;;		Unchanged: 0/0
 22819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22824 ;;Total ram usage:        0 bytes
 22825 ;; Hardware stack levels used:    1
 22826 ;; Hardware stack levels required when called:   13
 22827 ;; This function calls:
 22828 ;;		Nothing
 22829 ;; This function is called by:
 22830 ;;		_MonitorMsgForcedSend
 22831 ;; This function uses a non-reentrant model
 22832 ;;
 22833                           
 22834                           	psect	text130
 22835  0079C8                     __ptext130:
 22836                           	opt callstack 0
 22837  0079C8                     _I2C2_MAck:
 22838                           	opt callstack 15
 22839                           
 22840                           ; BSR set to: 1
 22841                           ;i2c2_mux.c: 21:     return lastI2C2MAckResponse;
 22842                           
 22843                           ; BSR set to: 61
 22844                           ;incstack = 0
 22845  0079C8  0100               	movlb	0	; () banked
 22846  0079CA  51CC               	movf	_lastI2C2MAckResponse& (0+255),w,b
 22847                           
 22848                           ; BSR set to: 0
 22849  0079CC  0012               	return		;funcret
 22850  0079CE                     __end_of_I2C2_MAck:
 22851                           	opt callstack 0
 22852                           
 22853 ;; *************** function _I2C2_MuxInit *****************
 22854 ;; Defined at:
 22855 ;;		line 12 in file "i2c2_mux.c"
 22856 ;; Parameters:    Size  Location     Type
 22857 ;;		None
 22858 ;; Auto vars:     Size  Location     Type
 22859 ;;		None
 22860 ;; Return value:  Size  Location     Type
 22861 ;;                  1    wreg      void 
 22862 ;; Registers used:
 22863 ;;		wreg, status,2
 22864 ;; Tracked objects:
 22865 ;;		On entry : 3F/1
 22866 ;;		On exit  : 3F/0
 22867 ;;		Unchanged: 0/0
 22868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22873 ;;Total ram usage:        0 bytes
 22874 ;; Hardware stack levels used:    1
 22875 ;; Hardware stack levels required when called:   13
 22876 ;; This function calls:
 22877 ;;		Nothing
 22878 ;; This function is called by:
 22879 ;;		_main
 22880 ;; This function uses a non-reentrant model
 22881 ;;
 22882                           
 22883                           	psect	text131
 22884  007626                     __ptext131:
 22885                           	opt callstack 0
 22886  007626                     _I2C2_MuxInit:
 22887                           	opt callstack 17
 22888                           
 22889                           ; BSR set to: 1
 22890                           ;i2c2_mux.c: 13:     lastI2C2MAckResponse = 1;
 22891                           
 22892                           ; BSR set to: 0
 22893                           ;incstack = 0
 22894  007626  0E01               	movlw	1
 22895  007628  0100               	movlb	0	; () banked
 22896  00762A  6FCC               	movwf	_lastI2C2MAckResponse& (0+255),b
 22897                           
 22898                           ;i2c2_mux.c: 14:     lastI2C2LAckResponse = 1;
 22899  00762C  0E01               	movlw	1
 22900  00762E  0101               	movlb	1	; () banked
 22901  007630  6F43               	movwf	_lastI2C2LAckResponse& (0+255),b
 22902                           
 22903                           ;i2c2_mux.c: 15:     lastI2C2MTrfResponse = I2C2_NOERR;
 22904  007632  0E00               	movlw	0
 22905  007634  0100               	movlb	0	; () banked
 22906  007636  6FCE               	movwf	_lastI2C2MTrfResponse& (0+255),b
 22907                           
 22908                           ;i2c2_mux.c: 16:     lastI2C2LTrfResponse = I2C2_NOERR;
 22909  007638  0E00               	movlw	0
 22910  00763A  6FCD               	movwf	_lastI2C2LTrfResponse& (0+255),b
 22911                           
 22912                           ;i2c2_mux.c: 17:     currentTrfAddr = 0x0;
 22913  00763C  0E00               	movlw	0
 22914  00763E  6FCF               	movwf	_currentTrfAddr& (0+255),b
 22915                           
 22916                           ; BSR set to: 0
 22917  007640  0012               	return		;funcret
 22918  007642                     __end_of_I2C2_MuxInit:
 22919                           	opt callstack 0
 22920                           
 22921 ;; *************** function _INTERRUPT_InterruptManager *****************
 22922 ;; Defined at:
 22923 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 22924 ;; Parameters:    Size  Location     Type
 22925 ;;		None
 22926 ;; Auto vars:     Size  Location     Type
 22927 ;;		None
 22928 ;; Return value:  Size  Location     Type
 22929 ;;                  1    wreg      void 
 22930 ;; Registers used:
 22931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22932 ;; Tracked objects:
 22933 ;;		On entry : 0/0
 22934 ;;		On exit  : 0/0
 22935 ;;		Unchanged: 0/0
 22936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22940 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22941 ;;Total ram usage:        4 bytes
 22942 ;; Hardware stack levels used:    1
 22943 ;; Hardware stack levels required when called:   12
 22944 ;; This function calls:
 22945 ;;		Absolute function
 22946 ;;		_ADCC_ThresholdISR
 22947 ;;		_I2C2_MasterIsr
 22948 ;;		_TMR2_ISR
 22949 ;;		_UART1_Transmit_ISR
 22950 ;; This function is called by:
 22951 ;;		Interrupt level 2
 22952 ;; This function uses a non-reentrant model
 22953 ;;
 22954                           
 22955                           	psect	text132
 22956  005C14                     __ptext132:
 22957                           	opt callstack 0
 22958  005C14                     _INTERRUPT_InterruptManager:
 22959                           	opt callstack 5
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;incstack = 0
 22963  005C14  006F FFD8  F080    	movff	tblptrl,??_INTERRUPT_InterruptManager
 22964  005C1A  006F FFDC  F081    	movff	tblptrh,??_INTERRUPT_InterruptManager+1
 22965  005C20  006F FFE0  F082    	movff	tblptru,??_INTERRUPT_InterruptManager+2
 22966  005C26  006F FFD4  F083    	movff	tablat,??_INTERRUPT_InterruptManager+3
 22967                           
 22968                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1TXIE == 1 && PIR3bits.U1
      +                          TXIF == 1)
 22969  005C2C  0139               	movlb	57	; () banked
 22970  005C2E  B993               	btfsc	147,4,b	;volatile
 22971                           
 22972                           ; BSR set to: 57
 22973  005C30  A9A3               	btfss	163,4,b	;volatile
 22974  005C32  D009               	goto	i2l322
 22975                           
 22976                           ; BSR set to: 57
 22977                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_TxInterruptHandler();
 22978  005C34  D801               	call	i2u1602_48
 22979  005C36  D02D               	goto	i2l331
 22980  005C38                     i2u1602_48:
 22981  005C38  0005               	push	
 22982  005C3A  6EFA               	movwf	pclath,c
 22983  005C3C  0102               	movlb	2	; () banked
 22984  005C3E  51E9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 22985  005C40  6EFD               	movwf	tosl,c
 22986  005C42  51EA               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 22987  005C44  D00B               	goto	L25
 22988  005C46                     i2l322:
 22989                           
 22990                           ; BSR set to: 57
 22991  005C46  B396               	btfsc	150,1,b	;volatile
 22992                           
 22993                           ; BSR set to: 57
 22994  005C48  A3A6               	btfss	166,1,b	;volatile
 22995  005C4A  D00C               	goto	i2l324
 22996  005C4C                     i2u1604_40:
 22997                           
 22998                           ; BSR set to: 57
 22999                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         I2C2_InterruptHandler();
 23000  005C4C  D801               	call	i2u1605_48
 23001  005C4E  D021               	goto	i2l331
 23002  005C50                     i2u1605_48:
 23003  005C50  0005               	push	
 23004  005C52  6EFA               	movwf	pclath,c
 23005  005C54  0100               	movlb	0	; () banked
 23006  005C56  51CA               	movf	_I2C2_InterruptHandler& (0+255),w,b
 23007  005C58  6EFD               	movwf	tosl,c
 23008  005C5A  51CB               	movf	(_I2C2_InterruptHandler+1)& (0+255),w,b
 23009  005C5C                     L25:
 23010  005C5C  6EFE               	movwf	tosh,c
 23011  005C5E  6AFF               	clrf	tosu,c
 23012  005C60  50FA               	movf	pclath,w,c
 23013  005C62  0012               	return		;indir
 23014  005C64                     i2l324:
 23015                           
 23016                           ; BSR set to: 57
 23017  005C64  AD95               	btfss	149,6,b	;volatile
 23018  005C66  D002               	goto	i2l326
 23019                           
 23020                           ; BSR set to: 57
 23021  005C68  BDA5               	btfsc	165,6,b	;volatile
 23022  005C6A  D7F0               	goto	i2u1604_40
 23023  005C6C                     i2l326:
 23024                           
 23025                           ; BSR set to: 57
 23026  005C6C  A196               	btfss	150,0,b	;volatile
 23027  005C6E  D002               	goto	i2l328
 23028                           
 23029                           ; BSR set to: 57
 23030  005C70  B1A6               	btfsc	166,0,b	;volatile
 23031  005C72  D7EC               	goto	i2u1604_40
 23032  005C74                     i2l328:
 23033                           
 23034                           ; BSR set to: 57
 23035  005C74  AF95               	btfss	149,7,b	;volatile
 23036  005C76  D002               	goto	i2l330
 23037                           
 23038                           ; BSR set to: 57
 23039  005C78  BFA5               	btfsc	165,7,b	;volatile
 23040  005C7A  D7E8               	goto	i2u1604_40
 23041  005C7C                     i2l330:
 23042                           
 23043                           ; BSR set to: 57
 23044  005C7C  B791               	btfsc	145,3,b	;volatile
 23045                           
 23046                           ; BSR set to: 57
 23047  005C7E  A7A1               	btfss	161,3,b	;volatile
 23048  005C80  D003               	goto	i2l332
 23049                           
 23050                           ; BSR set to: 57
 23051                           ;mcc_generated_files/interrupt_manager.c: 82:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 83:         ADCC_ThresholdISR();
 23052  005C82  EC98  F03A         	call	_ADCC_ThresholdISR	;wreg free
 23053                           
 23054                           ;mcc_generated_files/interrupt_manager.c: 84:     }
 23055  005C86  D005               	goto	i2l331
 23056  005C88                     i2l332:
 23057                           
 23058                           ; BSR set to: 57
 23059  005C88  B594               	btfsc	148,2,b	;volatile
 23060                           
 23061                           ; BSR set to: 57
 23062  005C8A  A5A4               	btfss	164,2,b	;volatile
 23063  005C8C  D002               	goto	i2l331
 23064                           
 23065                           ; BSR set to: 57
 23066                           ;mcc_generated_files/interrupt_manager.c: 86:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 87:         TMR2_ISR();
 23067  005C8E  EC76  F03A         	call	_TMR2_ISR	;wreg free
 23068  005C92                     i2l331:
 23069                           
 23070                           ; BSR set to: 57
 23071  005C92  0060  F20F  FFF5   	movff	??_INTERRUPT_InterruptManager+3,tablat
 23072  005C98  0060  F20B  FFF8   	movff	??_INTERRUPT_InterruptManager+2,tblptru
 23073  005C9E  0060  F207  FFF7   	movff	??_INTERRUPT_InterruptManager+1,tblptrh
 23074  005CA4  0060  F203  FFF6   	movff	??_INTERRUPT_InterruptManager,tblptrl
 23075  005CAA  0011               	retfie		f
 23076  005CAC                     __end_of_INTERRUPT_InterruptManager:
 23077                           	opt callstack 0
 23078                           
 23079 ;; *************** function _UART1_Transmit_ISR *****************
 23080 ;; Defined at:
 23081 ;;		line 217 in file "mcc_generated_files/uart1.c"
 23082 ;; Parameters:    Size  Location     Type
 23083 ;;		None
 23084 ;; Auto vars:     Size  Location     Type
 23085 ;;		None
 23086 ;; Return value:  Size  Location     Type
 23087 ;;                  1    wreg      void 
 23088 ;; Registers used:
 23089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23090 ;; Tracked objects:
 23091 ;;		On entry : 3F/2
 23092 ;;		On exit  : 6/0
 23093 ;;		Unchanged: 0/0
 23094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23099 ;;Total ram usage:        0 bytes
 23100 ;; Hardware stack levels used:    1
 23101 ;; This function calls:
 23102 ;;		Nothing
 23103 ;; This function is called by:
 23104 ;;		_UART1_Initialize
 23105 ;;		_INTERRUPT_InterruptManager
 23106 ;; This function uses a non-reentrant model
 23107 ;;
 23108                           
 23109                           	psect	text133
 23110  007014                     __ptext133:
 23111                           	opt callstack 0
 23112  007014                     _UART1_Transmit_ISR:
 23113                           	opt callstack 16
 23114                           
 23115                           ; BSR set to: 2
 23116                           ;mcc_generated_files/uart1.c: 220:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 23117                           
 23118                           ;incstack = 0
 23119  007014  0E40               	movlw	64
 23120  007016  0100               	movlb	0	; () banked
 23121  007018  61DB               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 23122  00701A  D012               	goto	i2l446
 23123                           
 23124                           ; BSR set to: 0
 23125                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 23126  00701C  0E00               	movlw	low _uart1TxBuffer
 23127  00701E  25D9               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 23128  007020  6ED9               	movwf	fsr2l,c
 23129  007022  6ADA               	clrf	fsr2h,c
 23130  007024  0E02               	movlw	high _uart1TxBuffer
 23131  007026  22DA               	addwfc	fsr2h,f,c
 23132  007028  50DF               	movf	indf2,w,c
 23133  00702A  013D               	movlb	61	; () banked
 23134  00702C  6FEA               	movwf	234,b	;volatile
 23135                           
 23136                           ; BSR set to: 61
 23137  00702E  0100               	movlb	0	; () banked
 23138  007030  2BD9               	incf	_uart1TxTail& (0+255),f,b	;volatile
 23139                           
 23140                           ; BSR set to: 0
 23141                           ;mcc_generated_files/uart1.c: 223:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 23142  007032  0E3F               	movlw	63
 23143  007034  65D9               	cpfsgt	_uart1TxTail& (0+255),b
 23144  007036  D002               	goto	i2l10639
 23145                           
 23146                           ; BSR set to: 0
 23147                           ;mcc_generated_files/uart1.c: 224:         {;mcc_generated_files/uart1.c: 225:          
      +                             uart1TxTail = 0;
 23148  007038  0E00               	movlw	0
 23149  00703A  6FD9               	movwf	_uart1TxTail& (0+255),b	;volatile
 23150  00703C                     i2l10639:
 23151                           
 23152                           ; BSR set to: 0
 23153                           ;mcc_generated_files/uart1.c: 227:         uart1TxBufferRemaining++;
 23154  00703C  2BDB               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 23155                           
 23156                           ;mcc_generated_files/uart1.c: 228:     }
 23157  00703E  0012               	return	
 23158  007040                     i2l446:
 23159                           
 23160                           ; BSR set to: 0
 23161                           ;mcc_generated_files/uart1.c: 230:     {;mcc_generated_files/uart1.c: 231:         PIE3b
      +                          its.U1TXIE = 0;
 23162  007040  0139               	movlb	57	; () banked
 23163  007042  9993               	bcf	147,4,b	;volatile
 23164  007044  0012               	return		;funcret
 23165  007046                     __end_of_UART1_Transmit_ISR:
 23166                           	opt callstack 0
 23167                           
 23168 ;; *************** function _TMR2_ISR *****************
 23169 ;; Defined at:
 23170 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 23171 ;; Parameters:    Size  Location     Type
 23172 ;;		None
 23173 ;; Auto vars:     Size  Location     Type
 23174 ;;		None
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1    wreg      void 
 23177 ;; Registers used:
 23178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23179 ;; Tracked objects:
 23180 ;;		On entry : 3F/39
 23181 ;;		On exit  : 0/0
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23188 ;;Total ram usage:        0 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; Hardware stack levels required when called:   11
 23191 ;; This function calls:
 23192 ;;		Absolute function
 23193 ;;		_TMR2_DefaultInterruptHandler
 23194 ;;		_vMeasureIsr
 23195 ;; This function is called by:
 23196 ;;		_INTERRUPT_InterruptManager
 23197 ;; This function uses a non-reentrant model
 23198 ;;
 23199                           
 23200                           	psect	text134
 23201  0074EC                     __ptext134:
 23202                           	opt callstack 0
 23203  0074EC                     _TMR2_ISR:
 23204                           	opt callstack 5
 23205                           
 23206                           ; BSR set to: 57
 23207                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 23208                           
 23209                           ;incstack = 0
 23210  0074EC  95A4               	bcf	164,2,b	;volatile
 23211                           
 23212                           ; BSR set to: 57
 23213                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 23214  0074EE  0102               	movlb	2	; () banked
 23215  0074F0  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 23216  0074F2  11E0               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 23217  0074F4  B4D8               	btfsc	status,2,c
 23218  0074F6  0012               	return	
 23219                           
 23220                           ; BSR set to: 2
 23221                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 23222  0074F8  D801               	call	i2u1456_48
 23223  0074FA  0012               	return	
 23224  0074FC                     i2u1456_48:
 23225  0074FC  0005               	push	
 23226  0074FE  6EFA               	movwf	pclath,c
 23227  007500  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 23228  007502  6EFD               	movwf	tosl,c
 23229  007504  51E0               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 23230  007506  6EFE               	movwf	tosh,c
 23231  007508  6AFF               	clrf	tosu,c
 23232  00750A  50FA               	movf	pclath,w,c
 23233  00750C  0012               	return		;indir
 23234  00750E                     __end_of_TMR2_ISR:
 23235                           	opt callstack 0
 23236                           
 23237 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 23238 ;; Defined at:
 23239 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 23240 ;; Parameters:    Size  Location     Type
 23241 ;;		None
 23242 ;; Auto vars:     Size  Location     Type
 23243 ;;		None
 23244 ;; Return value:  Size  Location     Type
 23245 ;;                  1    wreg      void 
 23246 ;; Registers used:
 23247 ;;		None
 23248 ;; Tracked objects:
 23249 ;;		On entry : 3F/2
 23250 ;;		On exit  : 3F/2
 23251 ;;		Unchanged: 3F/0
 23252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23257 ;;Total ram usage:        0 bytes
 23258 ;; Hardware stack levels used:    1
 23259 ;; This function calls:
 23260 ;;		Nothing
 23261 ;; This function is called by:
 23262 ;;		_TMR2_Initialize
 23263 ;;		_TMR2_ISR
 23264 ;; This function uses a non-reentrant model
 23265 ;;
 23266                           
 23267                           	psect	text135
 23268  007A2A                     __ptext135:
 23269                           	opt callstack 0
 23270  007A2A                     _TMR2_DefaultInterruptHandler:
 23271                           	opt callstack 15
 23272                           
 23273                           ; BSR set to: 2
 23274                           
 23275                           ;incstack = 0
 23276  007A2A  0012               	return		;funcret
 23277  007A2C                     __end_of_TMR2_DefaultInterruptHandler:
 23278                           	opt callstack 0
 23279                           
 23280 ;; *************** function _vMeasureIsr *****************
 23281 ;; Defined at:
 23282 ;;		line 10 in file "vMeasure.c"
 23283 ;; Parameters:    Size  Location     Type
 23284 ;;		None
 23285 ;; Auto vars:     Size  Location     Type
 23286 ;;  instP           2   30[BANK0 ] short 
 23287 ;;  v2              2   28[BANK0 ] unsigned short 
 23288 ;;  v1              2   26[BANK0 ] unsigned short 
 23289 ;; Return value:  Size  Location     Type
 23290 ;;                  1    wreg      void 
 23291 ;; Registers used:
 23292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23293 ;; Tracked objects:
 23294 ;;		On entry : 3F/2
 23295 ;;		On exit  : 0/0
 23296 ;;		Unchanged: 0/0
 23297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23299 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23301 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23302 ;;Total ram usage:        8 bytes
 23303 ;; Hardware stack levels used:    1
 23304 ;; Hardware stack levels required when called:   10
 23305 ;; This function calls:
 23306 ;;		_isqrt
 23307 ;;		i2_aCaptGetResult
 23308 ;; This function is called by:
 23309 ;;		_vMeasureInit
 23310 ;;		_TMR2_ISR
 23311 ;; This function uses a non-reentrant model
 23312 ;;
 23313                           
 23314                           	psect	text136
 23315  005B74                     __ptext136:
 23316                           	opt callstack 0
 23317  005B74                     _vMeasureIsr:
 23318                           	opt callstack 5
 23319                           
 23320                           ; BSR set to: 2
 23321                           ;vMeasure.c: 11:     int16_t instP;;vMeasure.c: 12:     uint16_t v1, v2;;vMeasure.c: 13:
      +                               if (aCaptGetResult(AuxPSensor, &instP)) {
 23322                           
 23323                           ; BSR set to: 2
 23324                           ;incstack = 0
 23325  005B74  0E7E               	movlw	low vMeasureIsr@instP
 23326  005B76  0100               	movlb	0	; () banked
 23327  005B78  6F6E               	movwf	i2aCaptGetResult@outVal& (0+255),b
 23328  005B7A  6B6F               	clrf	(i2aCaptGetResult@outVal+1)& (0+255),b
 23329  005B7C  0E01               	movlw	1
 23330  005B7E  EC70  F01F         	call	i2_aCaptGetResult
 23331  005B82  0900               	iorlw	0
 23332  005B84  B4D8               	btfsc	status,2,c
 23333  005B86  0012               	return	
 23334                           
 23335                           ;vMeasure.c: 14:         if (instP > 0) {
 23336  005B88  0100               	movlb	0	; () banked
 23337  005B8A  BF7F               	btfsc	(vMeasureIsr@instP+1)& (0+255),7,b
 23338  005B8C  D029               	goto	i2l14883
 23339  005B8E  517F               	movf	(vMeasureIsr@instP+1)& (0+255),w,b
 23340  005B90  E103               	bnz	i2u1425_40
 23341  005B92  057E               	decf	vMeasureIsr@instP& (0+255),w,b
 23342  005B94  A0D8               	btfss	status,0,c
 23343  005B96  D024               	goto	i2l14883
 23344  005B98                     i2u1425_40:
 23345                           
 23346                           ; BSR set to: 0
 23347                           ;vMeasure.c: 15:             v1 = instP << 4;
 23348  005B98  0060  F1F8  F05D   	movff	vMeasureIsr@instP,??_vMeasureIsr
 23349  005B9E  0060  F1FC  F05E   	movff	vMeasureIsr@instP+1,??_vMeasureIsr+1
 23350  005BA4  3A5D               	swapf	??_vMeasureIsr^0,f,c
 23351  005BA6  3A5E               	swapf	(??_vMeasureIsr+1)^0,f,c
 23352  005BA8  0EF0               	movlw	240
 23353  005BAA  165E               	andwf	(??_vMeasureIsr+1)^0,f,c
 23354  005BAC  505D               	movf	??_vMeasureIsr^0,w,c
 23355  005BAE  0B0F               	andlw	15
 23356  005BB0  125E               	iorwf	(??_vMeasureIsr+1)^0,f,c
 23357  005BB2  0EF0               	movlw	240
 23358  005BB4  165D               	andwf	??_vMeasureIsr^0,f,c
 23359  005BB6  0060  F174  F07A   	movff	??_vMeasureIsr,vMeasureIsr@v1
 23360  005BBC  0060  F178  F07B   	movff	??_vMeasureIsr+1,vMeasureIsr@v1+1
 23361                           
 23362                           ; BSR set to: 0
 23363                           ;vMeasure.c: 16:             v2 = isqrt(v1);
 23364  005BC2  0060  F1E8  F001   	movff	vMeasureIsr@v1,isqrt@x
 23365  005BC8  0060  F1EC  F002   	movff	vMeasureIsr@v1+1,isqrt@x+1
 23366  005BCE  EC16  F02D         	call	_isqrt	;wreg free
 23367  005BD2  0060  F004  F07C   	movff	?_isqrt,vMeasureIsr@v2
 23368  005BD8  0060  F008  F07D   	movff	?_isqrt+1,vMeasureIsr@v2+1
 23369                           
 23370                           ;vMeasure.c: 17:         } else {
 23371  005BDE  D004               	goto	i2l14885
 23372  005BE0                     i2l14883:
 23373                           
 23374                           ; BSR set to: 0
 23375                           ;vMeasure.c: 19:             v2 = 0;
 23376  005BE0  0E00               	movlw	0
 23377  005BE2  6F7D               	movwf	(vMeasureIsr@v2+1)& (0+255),b
 23378  005BE4  0E00               	movlw	0
 23379  005BE6  6F7C               	movwf	vMeasureIsr@v2& (0+255),b
 23380  005BE8                     i2l14885:
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;vMeasure.c: 21:         if (v2 > 20) {
 23384  005BE8  517D               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 23385  005BEA  E104               	bnz	i2u1426_40
 23386  005BEC  0E15               	movlw	21
 23387  005BEE  5D7C               	subwf	vMeasureIsr@v2& (0+255),w,b
 23388  005BF0  A0D8               	btfss	status,0,c
 23389  005BF2  0012               	return	
 23390  005BF4                     i2u1426_40:
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;vMeasure.c: 22:             volume = volume + v2;
 23394  005BF4  517C               	movf	vMeasureIsr@v2& (0+255),w,b
 23395  005BF6  0101               	movlb	1	; () banked
 23396  005BF8  2524               	addwf	_volume& (0+255),w,b
 23397  005BFA  6F24               	movwf	_volume& (0+255),b
 23398  005BFC  0100               	movlb	0	; () banked
 23399  005BFE  517D               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 23400  005C00  0101               	movlb	1	; () banked
 23401  005C02  2125               	addwfc	(_volume+1)& (0+255),w,b
 23402  005C04  6F25               	movwf	(_volume+1)& (0+255),b
 23403  005C06  0E00               	movlw	0
 23404  005C08  2126               	addwfc	(_volume+2)& (0+255),w,b
 23405  005C0A  6F26               	movwf	(_volume+2)& (0+255),b
 23406  005C0C  0E00               	movlw	0
 23407  005C0E  2127               	addwfc	(_volume+3)& (0+255),w,b
 23408  005C10  6F27               	movwf	(_volume+3)& (0+255),b
 23409  005C12  0012               	return		;funcret
 23410  005C14                     __end_of_vMeasureIsr:
 23411                           	opt callstack 0
 23412                           
 23413 ;; *************** function i2_aCaptGetResult *****************
 23414 ;; Defined at:
 23415 ;;		line 148 in file "aCapture.c"
 23416 ;; Parameters:    Size  Location     Type
 23417 ;;  sel             1    wreg     enum E16104
 23418 ;;  outVal          2   14[BANK0 ] PTR short 
 23419 ;;		 -> vMeasureIsr@instP(2), main@bdP2(2), main@bdP1(2), main@pAvgShort(2), 
 23420 ;;		 -> main@pInst(2), main@pAvgUShort(2), InitProcedure@aPVal(2), InitProcedure@mPVal(2), 
 23421 ;;		 -> InitProcedure@vddVal(2), MonitorMsgForcedSend@vddVal(2), 
 23422 ;; Auto vars:     Size  Location     Type
 23423 ;;  sel             1   21[BANK0 ] enum E16104
 23424 ;;  aCaptGetResu    4   22[BANK0 ] unsigned long 
 23425 ;;  aCaptGetResu    1   20[BANK0 ] unsigned char 
 23426 ;; Return value:  Size  Location     Type
 23427 ;;                  1    wreg      _Bool 
 23428 ;; Registers used:
 23429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23430 ;; Tracked objects:
 23431 ;;		On entry : 3F/0
 23432 ;;		On exit  : 0/0
 23433 ;;		Unchanged: 0/0
 23434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23436 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23438 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23439 ;;Total ram usage:       12 bytes
 23440 ;; Hardware stack levels used:    1
 23441 ;; Hardware stack levels required when called:    9
 23442 ;; This function calls:
 23443 ;;		i2_printf
 23444 ;; This function is called by:
 23445 ;;		_vMeasureIsr
 23446 ;; This function uses a non-reentrant model
 23447 ;;
 23448                           
 23449                           	psect	text137
 23450  003EE0                     __ptext137:
 23451                           	opt callstack 0
 23452  003EE0                     i2_aCaptGetResult:
 23453                           	opt callstack 5
 23454                           
 23455                           ;incstack = 0
 23456                           ;i2aCaptGetResult@sel stored from wreg
 23457  003EE0  6F75               	movwf	i2aCaptGetResult@sel& (0+255),b
 23458                           
 23459                           ;aCapture.c: 149:     uint32_t lclRaw;;aCapture.c: 150:     uint8_t lclValid;;aCapture.c
      +                          : 153:     PIE1bits.ADTIE = 0;
 23460  003EE2  0139               	movlb	57	; () banked
 23461  003EE4  9791               	bcf	145,3,b	;volatile
 23462                           
 23463                           ; BSR set to: 57
 23464                           ;aCapture.c: 154:     lclRaw=resultTbl[sel];
 23465  003EE6  0100               	movlb	0	; () banked
 23466  003EE8  5175               	movf	i2aCaptGetResult@sel& (0+255),w,b
 23467  003EEA  0D04               	mullw	4
 23468  003EEC  0E5C               	movlw	low _resultTbl
 23469  003EEE  24F3               	addwf	243,w,c
 23470  003EF0  6ED9               	movwf	fsr2l,c
 23471  003EF2  0E01               	movlw	high _resultTbl
 23472  003EF4  20F4               	addwfc	prodh,w,c
 23473  003EF6  6EDA               	movwf	fsr2h,c
 23474  003EF8  006F FF78  F076    	movff	postinc2,i2aCaptGetResult@lclRaw
 23475  003EFE  006F FF78  F077    	movff	postinc2,i2aCaptGetResult@lclRaw+1
 23476  003F04  006F FF78  F078    	movff	postinc2,i2aCaptGetResult@lclRaw+2
 23477  003F0A  006F FF78  F079    	movff	postinc2,i2aCaptGetResult@lclRaw+3
 23478                           
 23479                           ; BSR set to: 0
 23480                           ;aCapture.c: 155:     lclValid=resultTblVal[sel];
 23481  003F10  0E40               	movlw	low _resultTblVal
 23482  003F12  2575               	addwf	i2aCaptGetResult@sel& (0+255),w,b
 23483  003F14  6ED9               	movwf	fsr2l,c
 23484  003F16  6ADA               	clrf	fsr2h,c
 23485  003F18  0E02               	movlw	high _resultTblVal
 23486  003F1A  22DA               	addwfc	fsr2h,f,c
 23487  003F1C  50DF               	movf	indf2,w,c
 23488  003F1E  6F74               	movwf	i2aCaptGetResult@lclValid& (0+255),b
 23489                           
 23490                           ; BSR set to: 0
 23491                           ;aCapture.c: 156:     PIE1bits.ADTIE = 1;
 23492  003F20  0139               	movlb	57	; () banked
 23493  003F22  8791               	bsf	145,3,b	;volatile
 23494                           
 23495                           ; BSR set to: 57
 23496                           ;aCapture.c: 158:     if (lclValid == 0) {
 23497  003F24  0100               	movlb	0	; () banked
 23498  003F26  5174               	movf	i2aCaptGetResult@lclValid& (0+255),w,b
 23499  003F28  A4D8               	btfss	status,2,c
 23500  003F2A  D066               	goto	i2l14353
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;aCapture.c: 159:         return 0;
 23504  003F2C  0E00               	movlw	0
 23505  003F2E  0012               	return	
 23506  003F30                     i2l14343:
 23507                           
 23508                           ; BSR set to: 0
 23509                           ;aCapture.c: 166:             lclRaw=lclRaw>>9;
 23510  003F30  0060  F1D8  F070   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 23511  003F36  0060  F1DC  F071   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 23512  003F3C  0060  F1E0  F072   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 23513  003F42  0060  F1E4  F073   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 23514  003F48  0E0A               	movlw	10
 23515  003F4A  D005               	goto	i2u1369_40
 23516  003F4C                     i2u1369_45:
 23517  003F4C  90D8               	bcf	status,0,c
 23518  003F4E  3373               	rrcf	(??i2_aCaptGetResult+3)& (0+255),f,b
 23519  003F50  3372               	rrcf	(??i2_aCaptGetResult+2)& (0+255),f,b
 23520  003F52  3371               	rrcf	(??i2_aCaptGetResult+1)& (0+255),f,b
 23521  003F54  3370               	rrcf	??i2_aCaptGetResult& (0+255),f,b
 23522  003F56                     i2u1369_40:
 23523  003F56  2EE8               	decfsz	wreg,f,c
 23524  003F58  D7F9               	goto	i2u1369_45
 23525  003F5A  D041               	goto	L28
 23526  003F5C                     i2l14345:
 23527                           
 23528                           ; BSR set to: 0
 23529                           ;aCapture.c: 169:             lclRaw=lclRaw>>6;
 23530  003F5C  0060  F1D8  F070   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 23531  003F62  0060  F1DC  F071   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 23532  003F68  0060  F1E0  F072   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 23533  003F6E  0060  F1E4  F073   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 23534  003F74  0E07               	movlw	7
 23535  003F76  D005               	goto	i2u1370_40
 23536  003F78                     i2u1370_45:
 23537  003F78  90D8               	bcf	status,0,c
 23538  003F7A  3373               	rrcf	(??i2_aCaptGetResult+3)& (0+255),f,b
 23539  003F7C  3372               	rrcf	(??i2_aCaptGetResult+2)& (0+255),f,b
 23540  003F7E  3371               	rrcf	(??i2_aCaptGetResult+1)& (0+255),f,b
 23541  003F80  3370               	rrcf	??i2_aCaptGetResult& (0+255),f,b
 23542  003F82                     i2u1370_40:
 23543  003F82  2EE8               	decfsz	wreg,f,c
 23544  003F84  D7F9               	goto	i2u1370_45
 23545  003F86  D02B               	goto	L28
 23546  003F88                     i2l14347:
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;aCapture.c: 172:             lclRaw=lclRaw>>4;
 23550  003F88  0060  F1D8  F070   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 23551  003F8E  0060  F1DC  F071   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 23552  003F94  0060  F1E0  F072   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 23553  003F9A  0060  F1E4  F073   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 23554  003FA0  0E05               	movlw	5
 23555  003FA2  D005               	goto	i2u1371_40
 23556  003FA4                     i2u1371_45:
 23557  003FA4  90D8               	bcf	status,0,c
 23558  003FA6  3373               	rrcf	(??i2_aCaptGetResult+3)& (0+255),f,b
 23559  003FA8  3372               	rrcf	(??i2_aCaptGetResult+2)& (0+255),f,b
 23560  003FAA  3371               	rrcf	(??i2_aCaptGetResult+1)& (0+255),f,b
 23561  003FAC  3370               	rrcf	??i2_aCaptGetResult& (0+255),f,b
 23562  003FAE                     i2u1371_40:
 23563  003FAE  2EE8               	decfsz	wreg,f,c
 23564  003FB0  D7F9               	goto	i2u1371_45
 23565  003FB2  D015               	goto	L28
 23566  003FB4                     i2l14349:
 23567                           
 23568                           ; BSR set to: 0
 23569                           ;aCapture.c: 175:             lclRaw=lclRaw>>2;
 23570  003FB4  0060  F1D8  F070   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 23571  003FBA  0060  F1DC  F071   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 23572  003FC0  0060  F1E0  F072   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 23573  003FC6  0060  F1E4  F073   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 23574  003FCC  0E03               	movlw	3
 23575  003FCE  D005               	goto	i2u1372_40
 23576  003FD0                     i2u1372_45:
 23577  003FD0  90D8               	bcf	status,0,c
 23578  003FD2  3373               	rrcf	(??i2_aCaptGetResult+3)& (0+255),f,b
 23579  003FD4  3372               	rrcf	(??i2_aCaptGetResult+2)& (0+255),f,b
 23580  003FD6  3371               	rrcf	(??i2_aCaptGetResult+1)& (0+255),f,b
 23581  003FD8  3370               	rrcf	??i2_aCaptGetResult& (0+255),f,b
 23582  003FDA                     i2u1372_40:
 23583  003FDA  2EE8               	decfsz	wreg,f,c
 23584  003FDC  D7F9               	goto	i2u1372_45
 23585  003FDE                     L28:
 23586  003FDE  0060  F1C0  F076   	movff	??i2_aCaptGetResult,i2aCaptGetResult@lclRaw
 23587  003FE4  0060  F1C4  F077   	movff	??i2_aCaptGetResult+1,i2aCaptGetResult@lclRaw+1
 23588  003FEA  0060  F1C8  F078   	movff	??i2_aCaptGetResult+2,i2aCaptGetResult@lclRaw+2
 23589  003FF0  0060  F1CC  F079   	movff	??i2_aCaptGetResult+3,i2aCaptGetResult@lclRaw+3
 23590                           
 23591                           ;aCapture.c: 176:             break;
 23592  003FF6  D09F               	goto	i2l14383
 23593  003FF8                     i2l14353:
 23594                           
 23595                           ; BSR set to: 0
 23596  003FF8  5175               	movf	i2aCaptGetResult@sel& (0+255),w,b
 23597  003FFA  6F70               	movwf	??i2_aCaptGetResult& (0+255),b
 23598  003FFC  6B71               	clrf	(??i2_aCaptGetResult+1)& (0+255),b
 23599                           
 23600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23601                           ; Switch size 1, requested type "simple"
 23602                           ; Number of cases is 1, Range of values is 0 to 0
 23603                           ; switch strategies available:
 23604                           ; Name         Instructions Cycles
 23605                           ; simple_byte            4     3 (average)
 23606                           ;	Chosen strategy is simple_byte
 23607  003FFE  5171               	movf	(??i2_aCaptGetResult+1)& (0+255),w,b
 23608  004000  0A00               	xorlw	0	; case 0
 23609  004002  A4D8               	btfss	status,2,c
 23610  004004  D098               	goto	i2l14383
 23611                           
 23612                           ; BSR set to: 0
 23613                           ; Switch size 1, requested type "simple"
 23614                           ; Number of cases is 4, Range of values is 3 to 6
 23615                           ; switch strategies available:
 23616                           ; Name         Instructions Cycles
 23617                           ; simple_byte           13     7 (average)
 23618                           ;	Chosen strategy is simple_byte
 23619  004006  5170               	movf	??i2_aCaptGetResult& (0+255),w,b
 23620  004008  0A03               	xorlw	3	; case 3
 23621  00400A  B4D8               	btfsc	status,2,c
 23622  00400C  D7D3               	goto	i2l14349
 23623  00400E  0A07               	xorlw	7	; case 4
 23624  004010  B4D8               	btfsc	status,2,c
 23625  004012  D7BA               	goto	i2l14347
 23626  004014  0A01               	xorlw	1	; case 5
 23627  004016  B4D8               	btfsc	status,2,c
 23628  004018  D7A1               	goto	i2l14345
 23629  00401A  0A03               	xorlw	3	; case 6
 23630  00401C  B4D8               	btfsc	status,2,c
 23631  00401E  D788               	goto	i2l14343
 23632  004020  D08A               	goto	i2l14383
 23633  004022                     i2l1696:
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;aCapture.c: 188:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 23637                           
 23638                           ; BSR set to: 0
 23639  004022  0060  F7C8  F070   	movff	_mainPSensCal,??i2_aCaptGetResult
 23640  004028  0060  F7CC  F071   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 23641  00402E  0E00               	movlw	0
 23642  004030  BF71               	btfsc	(??i2_aCaptGetResult+1)& (0+255),7,b
 23643  004032  0EFF               	movlw	255
 23644  004034  6F72               	movwf	(??i2_aCaptGetResult+2)& (0+255),b
 23645  004036  6F73               	movwf	(??i2_aCaptGetResult+3)& (0+255),b
 23646  004038  5170               	movf	??i2_aCaptGetResult& (0+255),w,b
 23647  00403A  5D76               	subwf	i2aCaptGetResult@lclRaw& (0+255),w,b
 23648  00403C  5171               	movf	(??i2_aCaptGetResult+1)& (0+255),w,b
 23649  00403E  5977               	subwfb	(i2aCaptGetResult@lclRaw+1)& (0+255),w,b
 23650  004040  5172               	movf	(??i2_aCaptGetResult+2)& (0+255),w,b
 23651  004042  5978               	subwfb	(i2aCaptGetResult@lclRaw+2)& (0+255),w,b
 23652  004044  5173               	movf	(??i2_aCaptGetResult+3)& (0+255),w,b
 23653  004046  5979               	subwfb	(i2aCaptGetResult@lclRaw+3)& (0+255),w,b
 23654  004048  B0D8               	btfsc	status,0,c
 23655  00404A  D022               	goto	i2l14361
 23656                           
 23657                           ; BSR set to: 0
 23658  00404C  0060  F7C8  F070   	movff	_mainPSensCal,??i2_aCaptGetResult
 23659  004052  0060  F7CC  F071   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 23660  004058  0E00               	movlw	0
 23661  00405A  BF71               	btfsc	(??i2_aCaptGetResult+1)& (0+255),7,b
 23662  00405C  0EFF               	movlw	255
 23663  00405E  6F72               	movwf	(??i2_aCaptGetResult+2)& (0+255),b
 23664  004060  6F73               	movwf	(??i2_aCaptGetResult+3)& (0+255),b
 23665  004062  5176               	movf	i2aCaptGetResult@lclRaw& (0+255),w,b
 23666  004064  5D70               	subwf	??i2_aCaptGetResult& (0+255),w,b
 23667  004066  6F76               	movwf	i2aCaptGetResult@lclRaw& (0+255),b
 23668  004068  5177               	movf	(i2aCaptGetResult@lclRaw+1)& (0+255),w,b
 23669  00406A  5971               	subwfb	(??i2_aCaptGetResult+1)& (0+255),w,b
 23670  00406C  6F77               	movwf	(i2aCaptGetResult@lclRaw+1)& (0+255),b
 23671  00406E  5178               	movf	(i2aCaptGetResult@lclRaw+2)& (0+255),w,b
 23672  004070  5972               	subwfb	(??i2_aCaptGetResult+2)& (0+255),w,b
 23673  004072  6F78               	movwf	(i2aCaptGetResult@lclRaw+2)& (0+255),b
 23674  004074  5179               	movf	(i2aCaptGetResult@lclRaw+3)& (0+255),w,b
 23675  004076  5973               	subwfb	(??i2_aCaptGetResult+3)& (0+255),w,b
 23676  004078  6F79               	movwf	(i2aCaptGetResult@lclRaw+3)& (0+255),b
 23677                           
 23678                           ; BSR set to: 0
 23679                           ;aCapture.c: 189:                 *outVal = - (lclRaw/1);
 23680  00407A  0060  F1D8  F070   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 23681  004080  0060  F1DC  F071   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 23682  004086  1F70               	comf	??i2_aCaptGetResult& (0+255),f,b
 23683  004088  1F71               	comf	(??i2_aCaptGetResult+1)& (0+255),f,b
 23684  00408A  4B70               	infsnz	??i2_aCaptGetResult& (0+255),f,b
 23685  00408C  2B71               	incf	(??i2_aCaptGetResult+1)& (0+255),f,b
 23686  00408E  D039               	goto	L30
 23687  004090                     i2l14361:
 23688                           
 23689                           ; BSR set to: 0
 23690                           ;aCapture.c: 191:                 lclRaw = lclRaw - mainPSensCal;
 23691  004090  0060  F7C8  F070   	movff	_mainPSensCal,??i2_aCaptGetResult
 23692  004096  0060  F7CC  F071   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 23693  00409C  0E00               	movlw	0
 23694  00409E  BF71               	btfsc	(??i2_aCaptGetResult+1)& (0+255),7,b
 23695  0040A0  0EFF               	movlw	255
 23696  0040A2  6F72               	movwf	(??i2_aCaptGetResult+2)& (0+255),b
 23697  0040A4  6F73               	movwf	(??i2_aCaptGetResult+3)& (0+255),b
 23698  0040A6  5170               	movf	??i2_aCaptGetResult& (0+255),w,b
 23699  0040A8  5D76               	subwf	i2aCaptGetResult@lclRaw& (0+255),w,b
 23700  0040AA  6F76               	movwf	i2aCaptGetResult@lclRaw& (0+255),b
 23701  0040AC  5171               	movf	(??i2_aCaptGetResult+1)& (0+255),w,b
 23702  0040AE  5977               	subwfb	(i2aCaptGetResult@lclRaw+1)& (0+255),w,b
 23703  0040B0  6F77               	movwf	(i2aCaptGetResult@lclRaw+1)& (0+255),b
 23704  0040B2  5172               	movf	(??i2_aCaptGetResult+2)& (0+255),w,b
 23705  0040B4  5978               	subwfb	(i2aCaptGetResult@lclRaw+2)& (0+255),w,b
 23706  0040B6  6F78               	movwf	(i2aCaptGetResult@lclRaw+2)& (0+255),b
 23707  0040B8  5173               	movf	(??i2_aCaptGetResult+3)& (0+255),w,b
 23708  0040BA  5979               	subwfb	(i2aCaptGetResult@lclRaw+3)& (0+255),w,b
 23709  0040BC  6F79               	movwf	(i2aCaptGetResult@lclRaw+3)& (0+255),b
 23710                           
 23711                           ; BSR set to: 0
 23712                           ;aCapture.c: 192:                 *outVal=(lclRaw/1);
 23713  0040BE  0060  F1BB  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 23714  0040C4  0060  F1BF  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 23715  0040CA  0060  F1DB  FFDE   	movff	i2aCaptGetResult@lclRaw,postinc2
 23716  0040D0  0060  F1DF  FFDD   	movff	i2aCaptGetResult@lclRaw+1,postdec2
 23717  0040D6                     i2l14365:
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;aCapture.c: 194:             return 1;
 23721  0040D6  0E01               	movlw	1
 23722  0040D8  0012               	return	
 23723  0040DA                     i2l14369:
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;aCapture.c: 196:             *outVal = (lclRaw - auxPSensCal)/1;
 23727  0040DA  0101               	movlb	1	; () banked
 23728  0040DC  51F0               	movf	_auxPSensCal& (0+255),w,b
 23729  0040DE  0100               	movlb	0	; () banked
 23730  0040E0  5D76               	subwf	i2aCaptGetResult@lclRaw& (0+255),w,b
 23731  0040E2  6F70               	movwf	??i2_aCaptGetResult& (0+255),b
 23732  0040E4  0101               	movlb	1	; () banked
 23733  0040E6  51F1               	movf	(_auxPSensCal+1)& (0+255),w,b
 23734  0040E8  0100               	movlb	0	; () banked
 23735  0040EA  5977               	subwfb	(i2aCaptGetResult@lclRaw+1)& (0+255),w,b
 23736  0040EC  6F71               	movwf	(??i2_aCaptGetResult+1)& (0+255),b
 23737  0040EE  D009               	goto	L30
 23738  0040F0                     i2l14375:
 23739                           
 23740                           ; BSR set to: 0
 23741                           ;aCapture.c: 199:             *outVal = lclRaw<<1;
 23742  0040F0  0060  F1D8  F070   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 23743  0040F6  0060  F1DC  F071   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 23744  0040FC  90D8               	bcf	status,0,c
 23745  0040FE  3770               	rlcf	??i2_aCaptGetResult& (0+255),f,b
 23746  004100  3771               	rlcf	(??i2_aCaptGetResult+1)& (0+255),f,b
 23747  004102                     L30:
 23748  004102  0060  F1BB  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 23749  004108  0060  F1BF  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 23750  00410E  0060  F1C3  FFDE   	movff	??i2_aCaptGetResult,postinc2
 23751  004114  0060  F1C7  FFDD   	movff	??i2_aCaptGetResult+1,postdec2
 23752  00411A  D7DD               	goto	i2l14365
 23753  00411C                     i2l1702:
 23754                           
 23755                           ; BSR set to: 0
 23756                           ;aCapture.c: 203:             LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",10
      +                          4);
 23757  00411C  94BA               	bcf	186,2,c	;volatile
 23758  00411E  96BA               	bcf	186,3,c	;volatile
 23759                           
 23760                           ; BSR set to: 0
 23761  004120  0EEC               	movlw	low STR_10
 23762  004122  6F66               	movwf	i2printf@fmt& (0+255),b
 23763  004124  0EFF               	movlw	high STR_10
 23764  004126  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
 23765  004128  0E00               	movlw	0
 23766  00412A  6F69               	movwf	(?i2_printf+3)& (0+255),b
 23767  00412C  0E68               	movlw	104
 23768  00412E  6F68               	movwf	(?i2_printf+2)& (0+255),b
 23769  004130  ECE8  F039         	call	i2_printf	;wreg free
 23770                           
 23771                           ;aCapture.c: 204:     }
 23772  004134  0012               	return	
 23773  004136                     i2l14383:
 23774                           
 23775                           ; BSR set to: 0
 23776  004136  5175               	movf	i2aCaptGetResult@sel& (0+255),w,b
 23777  004138  6F70               	movwf	??i2_aCaptGetResult& (0+255),b
 23778  00413A  6B71               	clrf	(??i2_aCaptGetResult+1)& (0+255),b
 23779                           
 23780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23781                           ; Switch size 1, requested type "simple"
 23782                           ; Number of cases is 1, Range of values is 0 to 0
 23783                           ; switch strategies available:
 23784                           ; Name         Instructions Cycles
 23785                           ; simple_byte            4     3 (average)
 23786                           ;	Chosen strategy is simple_byte
 23787  00413C  5171               	movf	(??i2_aCaptGetResult+1)& (0+255),w,b
 23788  00413E  0A00               	xorlw	0	; case 0
 23789  004140  A4D8               	btfss	status,2,c
 23790  004142  D7EC               	goto	i2l1702
 23791                           
 23792                           ; BSR set to: 0
 23793                           ; Switch size 1, requested type "simple"
 23794                           ; Number of cases is 7, Range of values is 0 to 6
 23795                           ; switch strategies available:
 23796                           ; Name         Instructions Cycles
 23797                           ; simple_byte           22    12 (average)
 23798                           ;	Chosen strategy is simple_byte
 23799  004144  5170               	movf	??i2_aCaptGetResult& (0+255),w,b
 23800  004146  0A00               	xorlw	0	; case 0
 23801  004148  B4D8               	btfsc	status,2,c
 23802  00414A  D76B               	goto	i2l1696
 23803  00414C  0A01               	xorlw	1	; case 1
 23804  00414E  B4D8               	btfsc	status,2,c
 23805  004150  D7C4               	goto	i2l14369
 23806  004152  0A03               	xorlw	3	; case 2
 23807  004154  B4D8               	btfsc	status,2,c
 23808  004156  D7CC               	goto	i2l14375
 23809  004158  0A01               	xorlw	1	; case 3
 23810  00415A  B4D8               	btfsc	status,2,c
 23811  00415C  D762               	goto	i2l1696
 23812  00415E  0A07               	xorlw	7	; case 4
 23813  004160  B4D8               	btfsc	status,2,c
 23814  004162  D75F               	goto	i2l1696
 23815  004164  0A01               	xorlw	1	; case 5
 23816  004166  B4D8               	btfsc	status,2,c
 23817  004168  D75C               	goto	i2l1696
 23818  00416A  0A03               	xorlw	3	; case 6
 23819  00416C  B4D8               	btfsc	status,2,c
 23820  00416E  D759               	goto	i2l1696
 23821  004170  D7D5               	goto	i2l1702
 23822  004172                     __end_ofi2_aCaptGetResult:
 23823                           	opt callstack 0
 23824                           
 23825 ;; *************** function _isqrt *****************
 23826 ;; Defined at:
 23827 ;;		line 3 in file "cmath.c"
 23828 ;; Parameters:    Size  Location     Type
 23829 ;;  x               2    0[COMRAM] unsigned short 
 23830 ;; Auto vars:     Size  Location     Type
 23831 ;;  one             2    8[COMRAM] unsigned short 
 23832 ;;  res             2    6[COMRAM] unsigned short 
 23833 ;;  op              2    4[COMRAM] unsigned short 
 23834 ;; Return value:  Size  Location     Type
 23835 ;;                  2    0[COMRAM] unsigned short 
 23836 ;; Registers used:
 23837 ;;		wreg, status,2, status,0
 23838 ;; Tracked objects:
 23839 ;;		On entry : 3F/0
 23840 ;;		On exit  : 3F/0
 23841 ;;		Unchanged: 3F/0
 23842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23844 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23846 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23847 ;;Total ram usage:       10 bytes
 23848 ;; Hardware stack levels used:    1
 23849 ;; This function calls:
 23850 ;;		Nothing
 23851 ;; This function is called by:
 23852 ;;		_vMeasureIsr
 23853 ;; This function uses a non-reentrant model
 23854 ;;
 23855                           
 23856                           	psect	text138
 23857  005A2C                     __ptext138:
 23858                           	opt callstack 0
 23859  005A2C                     _isqrt:
 23860                           	opt callstack 14
 23861                           
 23862                           ; BSR set to: 0
 23863                           ;cmath.c: 3: uint16_t isqrt(uint16_t x);cmath.c: 4: {;cmath.c: 5:     uint16_t op, res, 
      +                          one;;cmath.c: 7:     op = x;
 23864                           
 23865                           ;incstack = 0
 23866  005A2C  0060  F004  F005   	movff	isqrt@x,isqrt@op
 23867  005A32  0060  F008  F006   	movff	isqrt@x+1,isqrt@op+1
 23868                           
 23869                           ; BSR set to: 0
 23870                           ;cmath.c: 8:     res = 0;
 23871  005A38  0E00               	movlw	0
 23872  005A3A  6E08               	movwf	(isqrt@res+1)^0,c
 23873  005A3C  0E00               	movlw	0
 23874  005A3E  6E07               	movwf	isqrt@res^0,c
 23875                           
 23876                           ;cmath.c: 11:     one = 1 << 14;
 23877  005A40  0E40               	movlw	64
 23878  005A42  6E0A               	movwf	(isqrt@one+1)^0,c
 23879  005A44  0E00               	movlw	0
 23880  005A46  6E09               	movwf	isqrt@one^0,c
 23881                           
 23882                           ;cmath.c: 12:     while (one > op) one >>= 2;
 23883  005A48  D006               	goto	i2l9821
 23884  005A4A                     i2l9819:
 23885                           
 23886                           ; BSR set to: 0
 23887  005A4A  90D8               	bcf	status,0,c
 23888  005A4C  320A               	rrcf	(isqrt@one+1)^0,f,c
 23889  005A4E  3209               	rrcf	isqrt@one^0,f,c
 23890  005A50  90D8               	bcf	status,0,c
 23891  005A52  320A               	rrcf	(isqrt@one+1)^0,f,c
 23892  005A54  3209               	rrcf	isqrt@one^0,f,c
 23893  005A56                     i2l9821:
 23894                           
 23895                           ; BSR set to: 0
 23896  005A56  5009               	movf	isqrt@one^0,w,c
 23897  005A58  5C05               	subwf	isqrt@op^0,w,c
 23898  005A5A  500A               	movf	(isqrt@one+1)^0,w,c
 23899  005A5C  5806               	subwfb	(isqrt@op+1)^0,w,c
 23900  005A5E  B0D8               	btfsc	status,0,c
 23901  005A60  D02D               	goto	i2l1954
 23902  005A62  D7F3               	goto	i2l9819
 23903  005A64                     i2l9823:
 23904                           
 23905                           ; BSR set to: 0
 23906                           ;cmath.c: 15:         if (op >= res + one) {
 23907  005A64  5009               	movf	isqrt@one^0,w,c
 23908  005A66  2407               	addwf	isqrt@res^0,w,c
 23909  005A68  6E03               	movwf	??_isqrt^0,c
 23910  005A6A  500A               	movf	(isqrt@one+1)^0,w,c
 23911  005A6C  2008               	addwfc	(isqrt@res+1)^0,w,c
 23912  005A6E  6E04               	movwf	(??_isqrt+1)^0,c
 23913  005A70  5003               	movf	??_isqrt^0,w,c
 23914  005A72  5C05               	subwf	isqrt@op^0,w,c
 23915  005A74  5004               	movf	(??_isqrt+1)^0,w,c
 23916  005A76  5806               	subwfb	(isqrt@op+1)^0,w,c
 23917  005A78  A0D8               	btfss	status,0,c
 23918  005A7A  D017               	goto	i2l9827
 23919                           
 23920                           ; BSR set to: 0
 23921                           ;cmath.c: 16:             op -= res + one;
 23922  005A7C  5009               	movf	isqrt@one^0,w,c
 23923  005A7E  2407               	addwf	isqrt@res^0,w,c
 23924  005A80  6E03               	movwf	??_isqrt^0,c
 23925  005A82  500A               	movf	(isqrt@one+1)^0,w,c
 23926  005A84  2008               	addwfc	(isqrt@res+1)^0,w,c
 23927  005A86  6E04               	movwf	(??_isqrt+1)^0,c
 23928  005A88  5003               	movf	??_isqrt^0,w,c
 23929  005A8A  5E05               	subwf	isqrt@op^0,f,c
 23930  005A8C  5004               	movf	(??_isqrt+1)^0,w,c
 23931  005A8E  5A06               	subwfb	(isqrt@op+1)^0,f,c
 23932                           
 23933                           ;cmath.c: 17:             res += one << 1;
 23934  005A90  0060  F024  F003   	movff	isqrt@one,??_isqrt
 23935  005A96  0060  F028  F004   	movff	isqrt@one+1,??_isqrt+1
 23936  005A9C  90D8               	bcf	status,0,c
 23937  005A9E  3603               	rlcf	??_isqrt^0,f,c
 23938  005AA0  3604               	rlcf	(??_isqrt+1)^0,f,c
 23939  005AA2  5003               	movf	??_isqrt^0,w,c
 23940  005AA4  2607               	addwf	isqrt@res^0,f,c
 23941  005AA6  5004               	movf	(??_isqrt+1)^0,w,c
 23942  005AA8  2208               	addwfc	(isqrt@res+1)^0,f,c
 23943  005AAA                     i2l9827:
 23944                           
 23945                           ; BSR set to: 0
 23946                           ;cmath.c: 19:         res >>= 1;
 23947  005AAA  90D8               	bcf	status,0,c
 23948  005AAC  3208               	rrcf	(isqrt@res+1)^0,f,c
 23949  005AAE  3207               	rrcf	isqrt@res^0,f,c
 23950                           
 23951                           ; BSR set to: 0
 23952                           ;cmath.c: 20:         one >>= 2;
 23953  005AB0  90D8               	bcf	status,0,c
 23954  005AB2  320A               	rrcf	(isqrt@one+1)^0,f,c
 23955  005AB4  3209               	rrcf	isqrt@one^0,f,c
 23956  005AB6  90D8               	bcf	status,0,c
 23957  005AB8  320A               	rrcf	(isqrt@one+1)^0,f,c
 23958  005ABA  3209               	rrcf	isqrt@one^0,f,c
 23959  005ABC                     i2l1954:
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;cmath.c: 14:     while (one != 0) {
 23963  005ABC  5009               	movf	isqrt@one^0,w,c
 23964  005ABE  100A               	iorwf	(isqrt@one+1)^0,w,c
 23965  005AC0  A4D8               	btfss	status,2,c
 23966  005AC2  D7D0               	goto	i2l9823
 23967                           
 23968                           ; BSR set to: 0
 23969                           ;cmath.c: 22:     return res;
 23970  005AC4  0060  F01C  F001   	movff	isqrt@res,?_isqrt
 23971  005ACA  0060  F020  F002   	movff	isqrt@res+1,?_isqrt+1
 23972                           
 23973                           ; BSR set to: 0
 23974  005AD0  0012               	return		;funcret
 23975  005AD2                     __end_of_isqrt:
 23976                           	opt callstack 0
 23977                           
 23978 ;; *************** function _I2C2_MasterIsr *****************
 23979 ;; Defined at:
 23980 ;;		line 348 in file "mcc_generated_files/i2c2_master.c"
 23981 ;; Parameters:    Size  Location     Type
 23982 ;;		None
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;		None
 23985 ;; Return value:  Size  Location     Type
 23986 ;;                  1    wreg      void 
 23987 ;; Registers used:
 23988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23989 ;; Tracked objects:
 23990 ;;		On entry : 3F/0
 23991 ;;		On exit  : 3F/1
 23992 ;;		Unchanged: 0/0
 23993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23998 ;;Total ram usage:        0 bytes
 23999 ;; Hardware stack levels used:    1
 24000 ;; Hardware stack levels required when called:    8
 24001 ;; This function calls:
 24002 ;;		_I2C2_MasterFsm
 24003 ;; This function is called by:
 24004 ;;		_I2C2_Open
 24005 ;;		_INTERRUPT_InterruptManager
 24006 ;; This function uses a non-reentrant model
 24007 ;;
 24008                           
 24009                           	psect	text139
 24010  0079CE                     __ptext139:
 24011                           	opt callstack 0
 24012  0079CE                     _I2C2_MasterIsr:
 24013                           	opt callstack 8
 24014                           
 24015                           ; BSR set to: 0
 24016                           ;mcc_generated_files/i2c2_master.c: 350:     I2C2_MasterFsm();
 24017                           
 24018                           ; BSR set to: 0
 24019                           ;incstack = 0
 24020  0079CE  EC1F  F032         	call	_I2C2_MasterFsm	;wreg free
 24021                           
 24022                           ; BSR set to: 1
 24023  0079D2  0012               	return		;funcret
 24024  0079D4                     __end_of_I2C2_MasterIsr:
 24025                           	opt callstack 0
 24026                           
 24027 ;; *************** function _I2C2_MasterFsm *****************
 24028 ;; Defined at:
 24029 ;;		line 353 in file "mcc_generated_files/i2c2_master.c"
 24030 ;; Parameters:    Size  Location     Type
 24031 ;;		None
 24032 ;; Auto vars:     Size  Location     Type
 24033 ;;		None
 24034 ;; Return value:  Size  Location     Type
 24035 ;;                  1    wreg      void 
 24036 ;; Registers used:
 24037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24038 ;; Tracked objects:
 24039 ;;		On entry : 3F/0
 24040 ;;		On exit  : 3F/1
 24041 ;;		Unchanged: 0/0
 24042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24047 ;;Total ram usage:        2 bytes
 24048 ;; Hardware stack levels used:    1
 24049 ;; Hardware stack levels required when called:    7
 24050 ;; This function calls:
 24051 ;;		_I2C2_ClearInterruptFlags
 24052 ;;		_I2C2_DO_ADDRESS_NACK
 24053 ;;		_I2C2_DO_BUS_COLLISION
 24054 ;;		_I2C2_DO_BUS_ERROR
 24055 ;;		_I2C2_DO_IDLE
 24056 ;;		_I2C2_DO_RESET
 24057 ;;		_I2C2_DO_RX
 24058 ;;		_I2C2_DO_RX_ACK
 24059 ;;		_I2C2_DO_RX_NACK_RESTART
 24060 ;;		_I2C2_DO_RX_NACK_STOP
 24061 ;;		_I2C2_DO_SEND_RESTART
 24062 ;;		_I2C2_DO_SEND_RESTART_READ
 24063 ;;		_I2C2_DO_SEND_RESTART_WRITE
 24064 ;;		_I2C2_DO_SEND_STOP
 24065 ;;		_I2C2_DO_TX
 24066 ;;		_I2C2_DO_TX_ACK
 24067 ;;		_I2C2_DO_TX_EMPTY
 24068 ;;		_I2C2_MasterIsNack
 24069 ;;		i2_I2C2_DO_RX_EMPTY
 24070 ;;		i2_I2C2_DO_SEND_ADR_READ
 24071 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 24072 ;; This function is called by:
 24073 ;;		_I2C2_MasterIsr
 24074 ;; This function uses a non-reentrant model
 24075 ;;
 24076                           
 24077                           	psect	text140
 24078  00643E                     __ptext140:
 24079                           	opt callstack 0
 24080  00643E                     _I2C2_MasterFsm:
 24081                           	opt callstack 8
 24082                           
 24083                           ; BSR set to: 0
 24084                           ;mcc_generated_files/i2c2_master.c: 355:     I2C2_ClearInterruptFlags();
 24085                           
 24086                           ; BSR set to: 1
 24087                           ;incstack = 0
 24088  00643E  ECCC  F038         	call	_I2C2_ClearInterruptFlags	;wreg free
 24089                           
 24090                           ; BSR set to: 61
 24091                           ;mcc_generated_files/i2c2_master.c: 357:     if(I2C2_Status.addressNackCheck && I2C2_Mas
      +                          terIsNack())
 24092  006442  0101               	movlb	1	; () banked
 24093  006444  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 24094  006446  0B03               	andlw	3
 24095  006448  0900               	iorlw	0
 24096  00644A  B4D8               	btfsc	status,2,c
 24097  00644C  D008               	goto	i2l14521
 24098                           
 24099                           ; BSR set to: 1
 24100  00644E  EC4E  F03C         	call	_I2C2_MasterIsNack	;wreg free
 24101  006452  0900               	iorlw	0
 24102  006454  B4D8               	btfsc	status,2,c
 24103  006456  D003               	goto	i2l14521
 24104                           
 24105                           ; BSR set to: 61
 24106                           ;mcc_generated_files/i2c2_master.c: 358:     {;mcc_generated_files/i2c2_master.c: 359:  
      +                                 I2C2_Status.state = I2C2_ADDRESS_NACK;
 24107  006458  0E10               	movlw	16
 24108  00645A  0101               	movlb	1	; () banked
 24109  00645C  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 24110  00645E                     i2l14521:
 24111                           
 24112                           ;mcc_generated_files/i2c2_master.c: 361:     I2C2_Status.state = fsmStateTable[I2C2_Stat
      +                          us.state]();
 24113  00645E  0101               	movlb	1	; () banked
 24114  006460  5121               	movf	(_I2C2_Status+33)& (0+255),w,b
 24115  006462  0D02               	mullw	2
 24116  006464  0E15               	movlw	low _fsmStateTable
 24117  006466  24F3               	addwf	243,w,c
 24118  006468  6EF6               	movwf	tblptrl,c
 24119  00646A  0EFC               	movlw	high _fsmStateTable
 24120  00646C  20F4               	addwfc	244,w,c
 24121  00646E  6EF7               	movwf	tblptrh,c
 24122  006470                     	if	1	;There are 3 active tblptr bytes
 24123  006470  6AF8               	clrf	tblptru,c
 24124  006472  0E00               	movlw	low (__mediumconst shr (0+16))
 24125  006474  22F8               	addwfc	tblptru,f,c
 24126  006476                     	endif
 24127  006476  0009               	tblrd		*+
 24128  006478  006F FFD4  F012    	movff	tablat,??_I2C2_MasterFsm
 24129  00647E  0009               	tblrd		*+
 24130  006480  006F FFD4  F013    	movff	tablat,??_I2C2_MasterFsm+1
 24131  006486  D801               	call	i2u1376_48
 24132  006488  D009               	goto	i2u1376_49
 24133  00648A                     i2u1376_48:
 24134  00648A  0005               	push	
 24135  00648C  6EFA               	movwf	pclath,c
 24136  00648E  5012               	movf	??_I2C2_MasterFsm^0,w,c
 24137  006490  6EFD               	movwf	tosl,c
 24138  006492  5013               	movf	(??_I2C2_MasterFsm+1)^0,w,c
 24139  006494  6EFE               	movwf	tosh,c
 24140  006496  6AFF               	clrf	tosu,c
 24141  006498  50FA               	movf	pclath,w,c
 24142  00649A  0012               	return		;indir
 24143  00649C                     i2u1376_49:
 24144  00649C  0101               	movlb	1	; () banked
 24145  00649E  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 24146                           
 24147                           ; BSR set to: 1
 24148  0064A0  0012               	return		;funcret
 24149  0064A2                     __end_of_I2C2_MasterFsm:
 24150                           	opt callstack 0
 24151                           
 24152 ;; *************** function i2_I2C2_DO_RX_EMPTY *****************
 24153 ;; Defined at:
 24154 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;		None
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;		None
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1    wreg      enum E16447
 24161 ;; Registers used:
 24162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24163 ;; Tracked objects:
 24164 ;;		On entry : 3F/1
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24172 ;;Total ram usage:        2 bytes
 24173 ;; Hardware stack levels used:    1
 24174 ;; Hardware stack levels required when called:    3
 24175 ;; This function calls:
 24176 ;;		Absolute function
 24177 ;;		i2_I2C2_CallbackReturnReset
 24178 ;;		i2_I2C2_CallbackReturnStop
 24179 ;;		i2_I2C2_MasterDisableRestart
 24180 ;;		i2_I2C2_MasterEnableRestart
 24181 ;;		i2_I2C2_MasterSetCounter
 24182 ;;		i2_rd1RegCompleteHandler
 24183 ;;		i2_rd2RegCompleteHandler
 24184 ;;		i2_rdBlkRegCompleteHandler
 24185 ;;		i2_wr1RegCompleteHandler
 24186 ;;		i2_wr2RegCompleteHandler
 24187 ;; This function is called by:
 24188 ;;		_I2C2_DO_RX
 24189 ;;		i2_I2C2_DO_SEND_ADR_READ
 24190 ;; This function uses a non-reentrant model
 24191 ;;
 24192                           
 24193                           	psect	text141
 24194  00626A                     __ptext141:
 24195                           	opt callstack 0
 24196  00626A                     i2_I2C2_DO_RX_EMPTY:
 24197                           	opt callstack 10
 24198                           
 24199                           ; BSR set to: 1
 24200                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 24201                           
 24202                           ; BSR set to: 1
 24203                           ;incstack = 0
 24204  00626A  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 24205                           
 24206                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 24207  00626C  D016               	goto	i2l13665
 24208  00626E                     i2l13637:
 24209                           
 24210                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 24211  00626E  ECF6  F03C         	call	i2_I2C2_MasterEnableRestart	;wreg free
 24212                           
 24213                           ; BSR set to: 61
 24214                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 24215  006272  0E08               	movlw	8
 24216  006274  0012               	return	
 24217  006276                     i2l13643:
 24218                           
 24219                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 24220  006276  ECF6  F03C         	call	i2_I2C2_MasterEnableRestart	;wreg free
 24221                           
 24222                           ; BSR set to: 61
 24223                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 24224  00627A  0E07               	movlw	7
 24225  00627C  0012               	return	
 24226  00627E                     i2l13649:
 24227                           
 24228                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 24229  00627E  0101               	movlb	1	; () banked
 24230  006280  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 24231  006282  ECB8  F03C         	call	i2_I2C2_MasterSetCounter
 24232                           
 24233                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 24234  006286  0E04               	movlw	4
 24235  006288  0012               	return	
 24236  00628A                     i2l13655:
 24237                           
 24238                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 24239  00628A  0E07               	movlw	7
 24240  00628C  0101               	movlb	1	; () banked
 24241  00628E  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 24242  006290  A4D8               	btfss	status,2,c
 24243                           
 24244                           ; BSR set to: 1
 24245                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 24246  006292  ECF9  F03C         	call	i2_I2C2_MasterDisableRestart	;wreg free
 24247                           
 24248                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 24249  006296  0E0F               	movlw	15
 24250  006298  0012               	return	
 24251  00629A                     i2l13665:
 24252                           
 24253                           ; BSR set to: 1
 24254  00629A  0060  F430  F00A   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 24255  0062A0  0060  F434  F00B   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 24256  0062A6  D801               	call	i2u1294_48
 24257  0062A8  D009               	goto	i2u1294_49
 24258  0062AA                     i2u1294_48:
 24259  0062AA  0005               	push	
 24260  0062AC  6EFA               	movwf	pclath,c
 24261  0062AE  5100               	movf	_I2C2_Status& (0+255),w,b
 24262  0062B0  6EFD               	movwf	tosl,c
 24263  0062B2  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 24264  0062B4  6EFE               	movwf	tosh,c
 24265  0062B6  6AFF               	clrf	tosu,c
 24266  0062B8  50FA               	movf	pclath,w,c
 24267  0062BA  0012               	return		;indir
 24268  0062BC                     i2u1294_49:
 24269  0062BC  6E0C               	movwf	??i2_I2C2_DO_RX_EMPTY^0,c
 24270  0062BE  6A0D               	clrf	(??i2_I2C2_DO_RX_EMPTY+1)^0,c
 24271                           
 24272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24273                           ; Switch size 1, requested type "simple"
 24274                           ; Number of cases is 1, Range of values is 0 to 0
 24275                           ; switch strategies available:
 24276                           ; Name         Instructions Cycles
 24277                           ; simple_byte            4     3 (average)
 24278                           ;	Chosen strategy is simple_byte
 24279  0062C0  500D               	movf	(??i2_I2C2_DO_RX_EMPTY+1)^0,w,c
 24280  0062C2  0A00               	xorlw	0	; case 0
 24281  0062C4  A4D8               	btfss	status,2,c
 24282  0062C6  D7E1               	goto	i2l13655
 24283                           
 24284                           ; Switch size 1, requested type "simple"
 24285                           ; Number of cases is 4, Range of values is 1 to 4
 24286                           ; switch strategies available:
 24287                           ; Name         Instructions Cycles
 24288                           ; simple_byte           13     7 (average)
 24289                           ;	Chosen strategy is simple_byte
 24290  0062C8  500C               	movf	??i2_I2C2_DO_RX_EMPTY^0,w,c
 24291  0062CA  0A01               	xorlw	1	; case 1
 24292  0062CC  B4D8               	btfsc	status,2,c
 24293  0062CE  D7DD               	goto	i2l13655
 24294  0062D0  0A03               	xorlw	3	; case 2
 24295  0062D2  B4D8               	btfsc	status,2,c
 24296  0062D4  D7D0               	goto	i2l13643
 24297  0062D6  0A01               	xorlw	1	; case 3
 24298  0062D8  B4D8               	btfsc	status,2,c
 24299  0062DA  D7C9               	goto	i2l13637
 24300  0062DC  0A07               	xorlw	7	; case 4
 24301  0062DE  B4D8               	btfsc	status,2,c
 24302  0062E0  D7CE               	goto	i2l13649
 24303  0062E2  D7D3               	goto	i2l13655
 24304  0062E4                     __end_ofi2_I2C2_DO_RX_EMPTY:
 24305                           	opt callstack 0
 24306                           
 24307 ;; *************** function i2_I2C2_DO_SEND_ADR_READ *****************
 24308 ;; Defined at:
 24309 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 24310 ;; Parameters:    Size  Location     Type
 24311 ;;		None
 24312 ;; Auto vars:     Size  Location     Type
 24313 ;;		None
 24314 ;; Return value:  Size  Location     Type
 24315 ;;                  1    wreg      enum E16447
 24316 ;; Registers used:
 24317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24318 ;; Tracked objects:
 24319 ;;		On entry : 0/1
 24320 ;;		On exit  : 0/0
 24321 ;;		Unchanged: 0/0
 24322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24327 ;;Total ram usage:        0 bytes
 24328 ;; Hardware stack levels used:    1
 24329 ;; Hardware stack levels required when called:    4
 24330 ;; This function calls:
 24331 ;;		i2_I2C2_DO_RX_EMPTY
 24332 ;;		i2_I2C2_MasterSendTxData
 24333 ;; This function is called by:
 24334 ;;		_I2C2_DO_SEND_RESTART_READ
 24335 ;; This function uses a non-reentrant model
 24336 ;;
 24337                           
 24338                           	psect	text142
 24339  00750E                     __ptext142:
 24340                           	opt callstack 0
 24341  00750E                     i2_I2C2_DO_SEND_ADR_READ:
 24342                           	opt callstack 10
 24343                           
 24344                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 24345                           
 24346                           ;incstack = 0
 24347  00750E  0101               	movlb	1	; () banked
 24348  007510  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 24349  007512  0BFC               	andlw	-4
 24350  007514  0902               	iorlw	2
 24351  007516  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 24352                           
 24353                           ; BSR set to: 1
 24354                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 24355  007518  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 24356  00751A  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 24357  00751C  B4D8               	btfsc	status,2,c
 24358                           
 24359                           ; BSR set to: 1
 24360                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 24361  00751E  EC35  F031         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 24362                           
 24363                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 24364  007522  80D8               	bsf	status,0,c
 24365  007524  0101               	movlb	1	; () banked
 24366  007526  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 24367  007528  ECB3  F03C         	call	i2_I2C2_MasterSendTxData
 24368                           
 24369                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 24370  00752C  0E04               	movlw	4
 24371  00752E  0012               	return		;funcret
 24372  007530                     __end_ofi2_I2C2_DO_SEND_ADR_READ:
 24373                           	opt callstack 0
 24374                           
 24375 ;; *************** function _I2C2_DO_BUS_ERROR *****************
 24376 ;; Defined at:
 24377 ;;		line 597 in file "mcc_generated_files/i2c2_master.c"
 24378 ;; Parameters:    Size  Location     Type
 24379 ;;		None
 24380 ;; Auto vars:     Size  Location     Type
 24381 ;;		None
 24382 ;; Return value:  Size  Location     Type
 24383 ;;                  1    wreg      enum E16447
 24384 ;; Registers used:
 24385 ;;		wreg, status,2, cstack
 24386 ;; Tracked objects:
 24387 ;;		On entry : 3F/1
 24388 ;;		On exit  : 3F/1
 24389 ;;		Unchanged: 0/0
 24390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24395 ;;Total ram usage:        0 bytes
 24396 ;; Hardware stack levels used:    1
 24397 ;; Hardware stack levels required when called:    1
 24398 ;; This function calls:
 24399 ;;		_I2C2_MasterResetBus
 24400 ;; This function is called by:
 24401 ;;		_I2C2_MasterFsm
 24402 ;; This function uses a non-reentrant model
 24403 ;;
 24404                           
 24405                           	psect	text143
 24406  0077D0                     __ptext143:
 24407                           	opt callstack 0
 24408  0077D0                     _I2C2_DO_BUS_ERROR:
 24409                           	opt callstack 13
 24410                           
 24411                           ; BSR set to: 1
 24412                           ;mcc_generated_files/i2c2_master.c: 599:     I2C2_MasterResetBus();
 24413                           
 24414                           ;incstack = 0
 24415  0077D0  ECBD  F03C         	call	_I2C2_MasterResetBus	;wreg free
 24416                           
 24417                           ; BSR set to: 61
 24418                           ;mcc_generated_files/i2c2_master.c: 600:     I2C2_Status.busy = 0;
 24419  0077D4  0101               	movlb	1	; () banked
 24420  0077D6  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 24421                           
 24422                           ; BSR set to: 1
 24423                           ;mcc_generated_files/i2c2_master.c: 601:     I2C2_Status.error = I2C2_FAIL;
 24424  0077D8  0E02               	movlw	2
 24425  0077DA  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;mcc_generated_files/i2c2_master.c: 602:     return I2C2_RESET;
 24429  0077DC  0E0F               	movlw	15
 24430                           
 24431                           ; BSR set to: 1
 24432  0077DE  0012               	return		;funcret
 24433  0077E0                     __end_of_I2C2_DO_BUS_ERROR:
 24434                           	opt callstack 0
 24435                           
 24436 ;; *************** function _I2C2_DO_BUS_COLLISION *****************
 24437 ;; Defined at:
 24438 ;;		line 581 in file "mcc_generated_files/i2c2_master.c"
 24439 ;; Parameters:    Size  Location     Type
 24440 ;;		None
 24441 ;; Auto vars:     Size  Location     Type
 24442 ;;		None
 24443 ;; Return value:  Size  Location     Type
 24444 ;;                  1    wreg      enum E16447
 24445 ;; Registers used:
 24446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24447 ;; Tracked objects:
 24448 ;;		On entry : 3F/1
 24449 ;;		On exit  : 0/0
 24450 ;;		Unchanged: 0/0
 24451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24456 ;;Total ram usage:        2 bytes
 24457 ;; Hardware stack levels used:    1
 24458 ;; Hardware stack levels required when called:    6
 24459 ;; This function calls:
 24460 ;;		Absolute function
 24461 ;;		_I2C2_DO_RESET
 24462 ;;		_I2C2_DO_SEND_RESTART_READ
 24463 ;;		_I2C2_DO_SEND_RESTART_WRITE
 24464 ;;		i2_I2C2_CallbackReturnReset
 24465 ;;		i2_I2C2_CallbackReturnStop
 24466 ;;		i2_I2C2_MasterClearIrq
 24467 ;;		i2_rd1RegCompleteHandler
 24468 ;;		i2_rd2RegCompleteHandler
 24469 ;;		i2_rdBlkRegCompleteHandler
 24470 ;;		i2_wr1RegCompleteHandler
 24471 ;;		i2_wr2RegCompleteHandler
 24472 ;; This function is called by:
 24473 ;;		_I2C2_MasterFsm
 24474 ;; This function uses a non-reentrant model
 24475 ;;
 24476                           
 24477                           	psect	text144
 24478  006682                     __ptext144:
 24479                           	opt callstack 0
 24480  006682                     _I2C2_DO_BUS_COLLISION:
 24481                           	opt callstack 8
 24482                           
 24483                           ; BSR set to: 1
 24484                           ;mcc_generated_files/i2c2_master.c: 584:     I2C2_MasterClearIrq();
 24485                           
 24486                           ; BSR set to: 1
 24487                           ;incstack = 0
 24488  006682  ECDA  F03C         	call	i2_I2C2_MasterClearIrq	;wreg free
 24489                           
 24490                           ; BSR set to: 61
 24491                           ;mcc_generated_files/i2c2_master.c: 586:     I2C2_Status.error = I2C2_FAIL;
 24492  006686  0E02               	movlw	2
 24493  006688  0101               	movlb	1	; () banked
 24494  00668A  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 24495                           
 24496                           ;mcc_generated_files/i2c2_master.c: 587:     switch (I2C2_Status.callbackTable[I2C2_WRIT
      +                          E_COLLISION](I2C2_Status.callbackPayload[I2C2_WRITE_COLLISION])) {
 24497  00668C  D009               	goto	i2l14041
 24498  00668E                     i2l14027:
 24499                           
 24500                           ;mcc_generated_files/i2c2_master.c: 589:         return I2C2_DO_SEND_RESTART_READ();
 24501  00668E  EC47  F03C         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 24502  006692  0012               	return	
 24503  006694                     i2l14031:
 24504                           
 24505                           ;mcc_generated_files/i2c2_master.c: 591:         return I2C2_DO_SEND_RESTART_WRITE();
 24506  006694  EC06  F03D         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 24507  006698  0012               	return	
 24508  00669A                     i2l14035:
 24509                           
 24510                           ;mcc_generated_files/i2c2_master.c: 593:         return I2C2_DO_RESET();
 24511  00669A  ECF0  F03B         	call	_I2C2_DO_RESET	;wreg free
 24512  00669E  0012               	return	
 24513  0066A0                     i2l14041:
 24514                           
 24515                           ; BSR set to: 1
 24516  0066A0  0060  F438  F00A   	movff	_I2C2_Status+14,i2rd1RegCompleteHandler@ptr
 24517  0066A6  0060  F43C  F00B   	movff	_I2C2_Status+15,i2rd1RegCompleteHandler@ptr+1
 24518  0066AC  D801               	call	i2u1340_48
 24519  0066AE  D009               	goto	i2u1340_49
 24520  0066B0                     i2u1340_48:
 24521  0066B0  0005               	push	
 24522  0066B2  6EFA               	movwf	pclath,c
 24523  0066B4  5102               	movf	(_I2C2_Status+2)& (0+255),w,b
 24524  0066B6  6EFD               	movwf	tosl,c
 24525  0066B8  5103               	movf	(_I2C2_Status+3)& (0+255),w,b
 24526  0066BA  6EFE               	movwf	tosh,c
 24527  0066BC  6AFF               	clrf	tosu,c
 24528  0066BE  50FA               	movf	pclath,w,c
 24529  0066C0  0012               	return		;indir
 24530  0066C2                     i2u1340_49:
 24531  0066C2  6E0C               	movwf	??_I2C2_DO_BUS_COLLISION^0,c
 24532  0066C4  6A0D               	clrf	(??_I2C2_DO_BUS_COLLISION+1)^0,c
 24533                           
 24534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24535                           ; Switch size 1, requested type "simple"
 24536                           ; Number of cases is 1, Range of values is 0 to 0
 24537                           ; switch strategies available:
 24538                           ; Name         Instructions Cycles
 24539                           ; simple_byte            4     3 (average)
 24540                           ;	Chosen strategy is simple_byte
 24541  0066C6  500D               	movf	(??_I2C2_DO_BUS_COLLISION+1)^0,w,c
 24542  0066C8  0A00               	xorlw	0	; case 0
 24543  0066CA  A4D8               	btfss	status,2,c
 24544  0066CC  D7E6               	goto	i2l14035
 24545                           
 24546                           ; Switch size 1, requested type "simple"
 24547                           ; Number of cases is 2, Range of values is 2 to 3
 24548                           ; switch strategies available:
 24549                           ; Name         Instructions Cycles
 24550                           ; simple_byte            7     4 (average)
 24551                           ;	Chosen strategy is simple_byte
 24552  0066CE  500C               	movf	??_I2C2_DO_BUS_COLLISION^0,w,c
 24553  0066D0  0A02               	xorlw	2	; case 2
 24554  0066D2  B4D8               	btfsc	status,2,c
 24555  0066D4  D7DC               	goto	i2l14027
 24556  0066D6  0A01               	xorlw	1	; case 3
 24557  0066D8  B4D8               	btfsc	status,2,c
 24558  0066DA  D7DC               	goto	i2l14031
 24559  0066DC  D7DE               	goto	i2l14035
 24560  0066DE                     __end_of_I2C2_DO_BUS_COLLISION:
 24561                           	opt callstack 0
 24562                           
 24563 ;; *************** function _I2C2_DO_ADDRESS_NACK *****************
 24564 ;; Defined at:
 24565 ;;		line 566 in file "mcc_generated_files/i2c2_master.c"
 24566 ;; Parameters:    Size  Location     Type
 24567 ;;		None
 24568 ;; Auto vars:     Size  Location     Type
 24569 ;;		None
 24570 ;; Return value:  Size  Location     Type
 24571 ;;                  1    wreg      enum E16447
 24572 ;; Registers used:
 24573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24574 ;; Tracked objects:
 24575 ;;		On entry : 3F/1
 24576 ;;		On exit  : 0/0
 24577 ;;		Unchanged: 0/0
 24578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24583 ;;Total ram usage:        2 bytes
 24584 ;; Hardware stack levels used:    1
 24585 ;; Hardware stack levels required when called:    3
 24586 ;; This function calls:
 24587 ;;		Absolute function
 24588 ;;		_I2C2_DO_SEND_RESTART
 24589 ;;		i2_I2C2_CallbackReturnReset
 24590 ;;		i2_I2C2_CallbackReturnStop
 24591 ;;		i2_rd1RegCompleteHandler
 24592 ;;		i2_rd2RegCompleteHandler
 24593 ;;		i2_rdBlkRegCompleteHandler
 24594 ;;		i2_wr1RegCompleteHandler
 24595 ;;		i2_wr2RegCompleteHandler
 24596 ;; This function is called by:
 24597 ;;		_I2C2_MasterFsm
 24598 ;; This function uses a non-reentrant model
 24599 ;;
 24600                           
 24601                           	psect	text145
 24602  0068EA                     __ptext145:
 24603                           	opt callstack 0
 24604  0068EA                     _I2C2_DO_ADDRESS_NACK:
 24605                           	opt callstack 11
 24606                           
 24607                           ; BSR set to: 1
 24608                           ;mcc_generated_files/i2c2_master.c: 568:     I2C2_Status.addressNackCheck = 0;
 24609                           
 24610                           ;incstack = 0
 24611  0068EA  0EFC               	movlw	-4
 24612  0068EC  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 24613                           
 24614                           ;mcc_generated_files/i2c2_master.c: 569:     I2C2_Status.error = I2C2_FAIL;
 24615  0068EE  0E02               	movlw	2
 24616  0068F0  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 24617                           
 24618                           ; BSR set to: 1
 24619                           ;mcc_generated_files/i2c2_master.c: 570:     I2C2_Status.busy = 0;
 24620  0068F2  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 24621                           
 24622                           ;mcc_generated_files/i2c2_master.c: 571:     switch(I2C2_Status.callbackTable[I2C2_ADDR_
      +                          NACK](I2C2_Status.callbackPayload[I2C2_ADDR_NACK]))
 24623  0068F4  D005               	goto	i2l14015
 24624  0068F6                     i2l14005:
 24625                           
 24626                           ;mcc_generated_files/i2c2_master.c: 575:             return I2C2_DO_SEND_RESTART();
 24627  0068F6  EC04  F03D         	call	_I2C2_DO_SEND_RESTART	;wreg free
 24628  0068FA  0012               	return	
 24629  0068FC                     i2l14009:
 24630                           
 24631                           ;mcc_generated_files/i2c2_master.c: 577:             return I2C2_RESET;
 24632  0068FC  0E0F               	movlw	15
 24633  0068FE  0012               	return	
 24634  006900                     i2l14015:
 24635                           
 24636                           ; BSR set to: 1
 24637  006900  0060  F440  F00A   	movff	_I2C2_Status+16,i2rd1RegCompleteHandler@ptr
 24638  006906  0060  F444  F00B   	movff	_I2C2_Status+17,i2rd1RegCompleteHandler@ptr+1
 24639  00690C  D801               	call	i2u1339_48
 24640  00690E  D009               	goto	i2u1339_49
 24641  006910                     i2u1339_48:
 24642  006910  0005               	push	
 24643  006912  6EFA               	movwf	pclath,c
 24644  006914  5104               	movf	(_I2C2_Status+4)& (0+255),w,b
 24645  006916  6EFD               	movwf	tosl,c
 24646  006918  5105               	movf	(_I2C2_Status+5)& (0+255),w,b
 24647  00691A  6EFE               	movwf	tosh,c
 24648  00691C  6AFF               	clrf	tosu,c
 24649  00691E  50FA               	movf	pclath,w,c
 24650  006920  0012               	return		;indir
 24651  006922                     i2u1339_49:
 24652  006922  6E0C               	movwf	??_I2C2_DO_ADDRESS_NACK^0,c
 24653  006924  6A0D               	clrf	(??_I2C2_DO_ADDRESS_NACK+1)^0,c
 24654                           
 24655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24656                           ; Switch size 1, requested type "simple"
 24657                           ; Number of cases is 1, Range of values is 0 to 0
 24658                           ; switch strategies available:
 24659                           ; Name         Instructions Cycles
 24660                           ; simple_byte            4     3 (average)
 24661                           ;	Chosen strategy is simple_byte
 24662  006926  500D               	movf	(??_I2C2_DO_ADDRESS_NACK+1)^0,w,c
 24663  006928  0A00               	xorlw	0	; case 0
 24664  00692A  A4D8               	btfss	status,2,c
 24665  00692C  D7E7               	goto	i2l14009
 24666                           
 24667                           ; Switch size 1, requested type "simple"
 24668                           ; Number of cases is 2, Range of values is 2 to 3
 24669                           ; switch strategies available:
 24670                           ; Name         Instructions Cycles
 24671                           ; simple_byte            7     4 (average)
 24672                           ;	Chosen strategy is simple_byte
 24673  00692E  500C               	movf	??_I2C2_DO_ADDRESS_NACK^0,w,c
 24674  006930  0A02               	xorlw	2	; case 2
 24675  006932  B4D8               	btfsc	status,2,c
 24676  006934  D7E0               	goto	i2l14005
 24677  006936  0A01               	xorlw	1	; case 3
 24678  006938  B4D8               	btfsc	status,2,c
 24679  00693A  D7DD               	goto	i2l14005
 24680  00693C  D7DF               	goto	i2l14009
 24681  00693E                     __end_of_I2C2_DO_ADDRESS_NACK:
 24682                           	opt callstack 0
 24683                           
 24684 ;; *************** function _I2C2_DO_RESET *****************
 24685 ;; Defined at:
 24686 ;;		line 559 in file "mcc_generated_files/i2c2_master.c"
 24687 ;; Parameters:    Size  Location     Type
 24688 ;;		None
 24689 ;; Auto vars:     Size  Location     Type
 24690 ;;		None
 24691 ;; Return value:  Size  Location     Type
 24692 ;;                  1    wreg      enum E16447
 24693 ;; Registers used:
 24694 ;;		wreg, status,2, cstack
 24695 ;; Tracked objects:
 24696 ;;		On entry : 0/1
 24697 ;;		On exit  : 3F/1
 24698 ;;		Unchanged: 0/0
 24699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24704 ;;Total ram usage:        0 bytes
 24705 ;; Hardware stack levels used:    1
 24706 ;; Hardware stack levels required when called:    1
 24707 ;; This function calls:
 24708 ;;		_I2C2_MasterResetBus
 24709 ;; This function is called by:
 24710 ;;		_I2C2_DO_BUS_COLLISION
 24711 ;;		_I2C2_MasterFsm
 24712 ;; This function uses a non-reentrant model
 24713 ;;
 24714                           
 24715                           	psect	text146
 24716  0077E0                     __ptext146:
 24717                           	opt callstack 0
 24718  0077E0                     _I2C2_DO_RESET:
 24719                           	opt callstack 13
 24720                           
 24721                           ;mcc_generated_files/i2c2_master.c: 561:     I2C2_MasterResetBus();
 24722                           
 24723                           ;incstack = 0
 24724  0077E0  ECBD  F03C         	call	_I2C2_MasterResetBus	;wreg free
 24725                           
 24726                           ; BSR set to: 61
 24727                           ;mcc_generated_files/i2c2_master.c: 562:     I2C2_Status.busy = 0;
 24728  0077E4  0101               	movlb	1	; () banked
 24729  0077E6  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 24730                           
 24731                           ; BSR set to: 1
 24732                           ;mcc_generated_files/i2c2_master.c: 563:     I2C2_Status.error = I2C2_NOERR;
 24733  0077E8  0E00               	movlw	0
 24734  0077EA  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 24735                           
 24736                           ; BSR set to: 1
 24737                           ;mcc_generated_files/i2c2_master.c: 564:     return I2C2_RESET;
 24738  0077EC  0E0F               	movlw	15
 24739                           
 24740                           ; BSR set to: 1
 24741  0077EE  0012               	return		;funcret
 24742  0077F0                     __end_of_I2C2_DO_RESET:
 24743                           	opt callstack 0
 24744                           
 24745 ;; *************** function _I2C2_DO_RX_NACK_RESTART *****************
 24746 ;; Defined at:
 24747 ;;		line 553 in file "mcc_generated_files/i2c2_master.c"
 24748 ;; Parameters:    Size  Location     Type
 24749 ;;		None
 24750 ;; Auto vars:     Size  Location     Type
 24751 ;;		None
 24752 ;; Return value:  Size  Location     Type
 24753 ;;                  1    wreg      enum E16447
 24754 ;; Registers used:
 24755 ;;		wreg, cstack
 24756 ;; Tracked objects:
 24757 ;;		On entry : 3F/1
 24758 ;;		On exit  : 3F/3D
 24759 ;;		Unchanged: 0/0
 24760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24765 ;;Total ram usage:        0 bytes
 24766 ;; Hardware stack levels used:    1
 24767 ;; Hardware stack levels required when called:    1
 24768 ;; This function calls:
 24769 ;;		_I2C2_MasterSendNack
 24770 ;; This function is called by:
 24771 ;;		_I2C2_MasterFsm
 24772 ;; This function uses a non-reentrant model
 24773 ;;
 24774                           
 24775                           	psect	text147
 24776  00799C                     __ptext147:
 24777                           	opt callstack 0
 24778  00799C                     _I2C2_DO_RX_NACK_RESTART:
 24779                           	opt callstack 13
 24780                           
 24781                           ; BSR set to: 1
 24782                           ;mcc_generated_files/i2c2_master.c: 555:     I2C2_MasterSendNack();
 24783                           
 24784                           ; BSR set to: 1
 24785                           ;incstack = 0
 24786  00799C  ECED  F03C         	call	_I2C2_MasterSendNack	;wreg free
 24787                           
 24788                           ; BSR set to: 61
 24789                           ;mcc_generated_files/i2c2_master.c: 556:     return I2C2_SEND_RESTART;
 24790  0079A0  0E09               	movlw	9
 24791                           
 24792                           ; BSR set to: 61
 24793  0079A2  0012               	return		;funcret
 24794  0079A4                     __end_of_I2C2_DO_RX_NACK_RESTART:
 24795                           	opt callstack 0
 24796                           
 24797 ;; *************** function _I2C2_DO_RX_NACK_STOP *****************
 24798 ;; Defined at:
 24799 ;;		line 546 in file "mcc_generated_files/i2c2_master.c"
 24800 ;; Parameters:    Size  Location     Type
 24801 ;;		None
 24802 ;; Auto vars:     Size  Location     Type
 24803 ;;		None
 24804 ;; Return value:  Size  Location     Type
 24805 ;;                  1    wreg      enum E16447
 24806 ;; Registers used:
 24807 ;;		wreg, status,2, cstack
 24808 ;; Tracked objects:
 24809 ;;		On entry : 3F/1
 24810 ;;		On exit  : 3F/1
 24811 ;;		Unchanged: 0/0
 24812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24817 ;;Total ram usage:        0 bytes
 24818 ;; Hardware stack levels used:    1
 24819 ;; Hardware stack levels required when called:    1
 24820 ;; This function calls:
 24821 ;;		_I2C2_DO_IDLE
 24822 ;;		_I2C2_MasterSendNack
 24823 ;;		_I2C2_MasterStop
 24824 ;; This function is called by:
 24825 ;;		_I2C2_MasterFsm
 24826 ;; This function uses a non-reentrant model
 24827 ;;
 24828                           
 24829                           	psect	text148
 24830  007880                     __ptext148:
 24831                           	opt callstack 0
 24832  007880                     _I2C2_DO_RX_NACK_STOP:
 24833                           	opt callstack 13
 24834                           
 24835                           ; BSR set to: 1
 24836                           ;mcc_generated_files/i2c2_master.c: 548:     I2C2_MasterSendNack();
 24837                           
 24838                           ; BSR set to: 61
 24839                           ;incstack = 0
 24840  007880  ECED  F03C         	call	_I2C2_MasterSendNack	;wreg free
 24841                           
 24842                           ;mcc_generated_files/i2c2_master.c: 549:     I2C2_MasterStop();
 24843  007884  ECEA  F03C         	call	_I2C2_MasterStop	;wreg free
 24844                           
 24845                           ; BSR set to: 61
 24846                           ;mcc_generated_files/i2c2_master.c: 550:     return I2C2_DO_IDLE();
 24847  007888  EC81  F03C         	call	_I2C2_DO_IDLE	;wreg free
 24848                           
 24849                           ; BSR set to: 1
 24850  00788C  0012               	return		;funcret
 24851  00788E                     __end_of_I2C2_DO_RX_NACK_STOP:
 24852                           	opt callstack 0
 24853                           
 24854 ;; *************** function _I2C2_DO_TX_ACK *****************
 24855 ;; Defined at:
 24856 ;;		line 540 in file "mcc_generated_files/i2c2_master.c"
 24857 ;; Parameters:    Size  Location     Type
 24858 ;;		None
 24859 ;; Auto vars:     Size  Location     Type
 24860 ;;		None
 24861 ;; Return value:  Size  Location     Type
 24862 ;;                  1    wreg      enum E16447
 24863 ;; Registers used:
 24864 ;;		wreg, cstack
 24865 ;; Tracked objects:
 24866 ;;		On entry : 3F/1
 24867 ;;		On exit  : 3F/3D
 24868 ;;		Unchanged: 0/0
 24869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24874 ;;Total ram usage:        0 bytes
 24875 ;; Hardware stack levels used:    1
 24876 ;; Hardware stack levels required when called:    1
 24877 ;; This function calls:
 24878 ;;		_I2C2_MasterSendAck
 24879 ;; This function is called by:
 24880 ;;		_I2C2_MasterFsm
 24881 ;; This function uses a non-reentrant model
 24882 ;;
 24883                           
 24884                           	psect	text149
 24885  0079A4                     __ptext149:
 24886                           	opt callstack 0
 24887  0079A4                     _I2C2_DO_TX_ACK:
 24888                           	opt callstack 13
 24889                           
 24890                           ; BSR set to: 1
 24891                           ;mcc_generated_files/i2c2_master.c: 542:     I2C2_MasterSendAck();
 24892                           
 24893                           ; BSR set to: 1
 24894                           ;incstack = 0
 24895  0079A4  ECF0  F03C         	call	_I2C2_MasterSendAck	;wreg free
 24896                           
 24897                           ; BSR set to: 61
 24898                           ;mcc_generated_files/i2c2_master.c: 543:     return I2C2_TX;
 24899  0079A8  0E03               	movlw	3
 24900                           
 24901                           ; BSR set to: 61
 24902  0079AA  0012               	return		;funcret
 24903  0079AC                     __end_of_I2C2_DO_TX_ACK:
 24904                           	opt callstack 0
 24905                           
 24906 ;; *************** function _I2C2_DO_RX_ACK *****************
 24907 ;; Defined at:
 24908 ;;		line 534 in file "mcc_generated_files/i2c2_master.c"
 24909 ;; Parameters:    Size  Location     Type
 24910 ;;		None
 24911 ;; Auto vars:     Size  Location     Type
 24912 ;;		None
 24913 ;; Return value:  Size  Location     Type
 24914 ;;                  1    wreg      enum E16447
 24915 ;; Registers used:
 24916 ;;		wreg, cstack
 24917 ;; Tracked objects:
 24918 ;;		On entry : 3F/1
 24919 ;;		On exit  : 3F/3D
 24920 ;;		Unchanged: 0/0
 24921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24926 ;;Total ram usage:        0 bytes
 24927 ;; Hardware stack levels used:    1
 24928 ;; Hardware stack levels required when called:    1
 24929 ;; This function calls:
 24930 ;;		_I2C2_MasterSendAck
 24931 ;; This function is called by:
 24932 ;;		_I2C2_MasterFsm
 24933 ;; This function uses a non-reentrant model
 24934 ;;
 24935                           
 24936                           	psect	text150
 24937  0079AC                     __ptext150:
 24938                           	opt callstack 0
 24939  0079AC                     _I2C2_DO_RX_ACK:
 24940                           	opt callstack 13
 24941                           
 24942                           ; BSR set to: 1
 24943                           ;mcc_generated_files/i2c2_master.c: 536:     I2C2_MasterSendAck();
 24944                           
 24945                           ; BSR set to: 61
 24946                           ;incstack = 0
 24947  0079AC  ECF0  F03C         	call	_I2C2_MasterSendAck	;wreg free
 24948                           
 24949                           ; BSR set to: 61
 24950                           ;mcc_generated_files/i2c2_master.c: 537:     return I2C2_RX;
 24951  0079B0  0E04               	movlw	4
 24952                           
 24953                           ; BSR set to: 61
 24954  0079B2  0012               	return		;funcret
 24955  0079B4                     __end_of_I2C2_DO_RX_ACK:
 24956                           	opt callstack 0
 24957                           
 24958 ;; *************** function _I2C2_DO_SEND_STOP *****************
 24959 ;; Defined at:
 24960 ;;		line 523 in file "mcc_generated_files/i2c2_master.c"
 24961 ;; Parameters:    Size  Location     Type
 24962 ;;		None
 24963 ;; Auto vars:     Size  Location     Type
 24964 ;;		None
 24965 ;; Return value:  Size  Location     Type
 24966 ;;                  1    wreg      enum E16447
 24967 ;; Registers used:
 24968 ;;		wreg, status,2, cstack
 24969 ;; Tracked objects:
 24970 ;;		On entry : 3F/1
 24971 ;;		On exit  : 0/0
 24972 ;;		Unchanged: 0/0
 24973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24978 ;;Total ram usage:        0 bytes
 24979 ;; Hardware stack levels used:    1
 24980 ;; Hardware stack levels required when called:    1
 24981 ;; This function calls:
 24982 ;;		_I2C2_MasterGetCounter
 24983 ;;		_I2C2_MasterStop
 24984 ;;		i2_I2C2_MasterSendTxData
 24985 ;;		i2_I2C2_MasterSetCounter
 24986 ;; This function is called by:
 24987 ;;		_I2C2_MasterFsm
 24988 ;; This function uses a non-reentrant model
 24989 ;;
 24990                           
 24991                           	psect	text151
 24992  0075D0                     __ptext151:
 24993                           	opt callstack 0
 24994  0075D0                     _I2C2_DO_SEND_STOP:
 24995                           	opt callstack 13
 24996                           
 24997                           ; BSR set to: 1
 24998                           ;mcc_generated_files/i2c2_master.c: 525:     I2C2_MasterStop();
 24999                           
 25000                           ; BSR set to: 61
 25001                           ;incstack = 0
 25002  0075D0  ECEA  F03C         	call	_I2C2_MasterStop	;wreg free
 25003                           
 25004                           ; BSR set to: 61
 25005                           ;mcc_generated_files/i2c2_master.c: 526:     if(I2C2_MasterGetCounter())
 25006  0075D4  EC08  F03D         	call	_I2C2_MasterGetCounter	;wreg free
 25007  0075D8  0900               	iorlw	0
 25008  0075DA  B4D8               	btfsc	status,2,c
 25009  0075DC  D006               	goto	i2l9507
 25010                           
 25011                           ; BSR set to: 61
 25012                           ;mcc_generated_files/i2c2_master.c: 527:     {;mcc_generated_files/i2c2_master.c: 528:  
      +                                 I2C2_MasterSetCounter(0);
 25013  0075DE  0E00               	movlw	0
 25014  0075E0  ECB8  F03C         	call	i2_I2C2_MasterSetCounter
 25015                           
 25016                           ;mcc_generated_files/i2c2_master.c: 529:         I2C2_MasterSendTxData(0);
 25017  0075E4  0E00               	movlw	0
 25018  0075E6  ECB3  F03C         	call	i2_I2C2_MasterSendTxData
 25019  0075EA                     i2l9507:
 25020                           
 25021                           ;mcc_generated_files/i2c2_master.c: 531:     return I2C2_IDLE;
 25022  0075EA  0E00               	movlw	0
 25023  0075EC  0012               	return		;funcret
 25024  0075EE                     __end_of_I2C2_DO_SEND_STOP:
 25025                           	opt callstack 0
 25026                           
 25027 ;; *************** function _I2C2_DO_SEND_RESTART *****************
 25028 ;; Defined at:
 25029 ;;		line 518 in file "mcc_generated_files/i2c2_master.c"
 25030 ;; Parameters:    Size  Location     Type
 25031 ;;		None
 25032 ;; Auto vars:     Size  Location     Type
 25033 ;;		None
 25034 ;; Return value:  Size  Location     Type
 25035 ;;                  1    wreg      enum E16447
 25036 ;; Registers used:
 25037 ;;		wreg
 25038 ;; Tracked objects:
 25039 ;;		On entry : 0/1
 25040 ;;		On exit  : 0/0
 25041 ;;		Unchanged: 0/0
 25042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25047 ;;Total ram usage:        0 bytes
 25048 ;; Hardware stack levels used:    1
 25049 ;; This function calls:
 25050 ;;		Nothing
 25051 ;; This function is called by:
 25052 ;;		_I2C2_DO_ADDRESS_NACK
 25053 ;;		_I2C2_MasterFsm
 25054 ;; This function uses a non-reentrant model
 25055 ;;
 25056                           
 25057                           	psect	text152
 25058  007A08                     __ptext152:
 25059                           	opt callstack 0
 25060  007A08                     _I2C2_DO_SEND_RESTART:
 25061                           	opt callstack 14
 25062                           
 25063                           ;mcc_generated_files/i2c2_master.c: 520:     return I2C2_SEND_ADR_READ;
 25064                           
 25065                           ;incstack = 0
 25066  007A08  0E01               	movlw	1
 25067  007A0A  0012               	return		;funcret
 25068  007A0C                     __end_of_I2C2_DO_SEND_RESTART:
 25069                           	opt callstack 0
 25070                           
 25071 ;; *************** function _I2C2_DO_SEND_RESTART_WRITE *****************
 25072 ;; Defined at:
 25073 ;;		line 512 in file "mcc_generated_files/i2c2_master.c"
 25074 ;; Parameters:    Size  Location     Type
 25075 ;;		None
 25076 ;; Auto vars:     Size  Location     Type
 25077 ;;		None
 25078 ;; Return value:  Size  Location     Type
 25079 ;;                  1    wreg      enum E16447
 25080 ;; Registers used:
 25081 ;;		wreg
 25082 ;; Tracked objects:
 25083 ;;		On entry : 0/1
 25084 ;;		On exit  : 0/0
 25085 ;;		Unchanged: 0/0
 25086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25091 ;;Total ram usage:        0 bytes
 25092 ;; Hardware stack levels used:    1
 25093 ;; This function calls:
 25094 ;;		Nothing
 25095 ;; This function is called by:
 25096 ;;		_I2C2_DO_TX
 25097 ;;		_I2C2_DO_BUS_COLLISION
 25098 ;;		_I2C2_MasterFsm
 25099 ;; This function uses a non-reentrant model
 25100 ;;
 25101                           
 25102                           	psect	text153
 25103  007A0C                     __ptext153:
 25104                           	opt callstack 0
 25105  007A0C                     _I2C2_DO_SEND_RESTART_WRITE:
 25106                           	opt callstack 13
 25107                           
 25108                           ;mcc_generated_files/i2c2_master.c: 514:     return I2C2_SEND_ADR_WRITE;
 25109                           
 25110                           ;incstack = 0
 25111  007A0C  0E02               	movlw	2
 25112  007A0E  0012               	return		;funcret
 25113  007A10                     __end_of_I2C2_DO_SEND_RESTART_WRITE:
 25114                           	opt callstack 0
 25115                           
 25116 ;; *************** function _I2C2_DO_SEND_RESTART_READ *****************
 25117 ;; Defined at:
 25118 ;;		line 506 in file "mcc_generated_files/i2c2_master.c"
 25119 ;; Parameters:    Size  Location     Type
 25120 ;;		None
 25121 ;; Auto vars:     Size  Location     Type
 25122 ;;		None
 25123 ;; Return value:  Size  Location     Type
 25124 ;;                  1    wreg      enum E16447
 25125 ;; Registers used:
 25126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25127 ;; Tracked objects:
 25128 ;;		On entry : 0/1
 25129 ;;		On exit  : 0/0
 25130 ;;		Unchanged: 0/0
 25131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25136 ;;Total ram usage:        0 bytes
 25137 ;; Hardware stack levels used:    1
 25138 ;; Hardware stack levels required when called:    5
 25139 ;; This function calls:
 25140 ;;		i2_I2C2_DO_SEND_ADR_READ
 25141 ;;		i2_I2C2_MasterSetCounter
 25142 ;; This function is called by:
 25143 ;;		_I2C2_DO_TX
 25144 ;;		_I2C2_DO_BUS_COLLISION
 25145 ;;		_I2C2_MasterFsm
 25146 ;; This function uses a non-reentrant model
 25147 ;;
 25148                           
 25149                           	psect	text154
 25150  00788E                     __ptext154:
 25151                           	opt callstack 0
 25152  00788E                     _I2C2_DO_SEND_RESTART_READ:
 25153                           	opt callstack 8
 25154                           
 25155                           ;mcc_generated_files/i2c2_master.c: 508:     I2C2_MasterSetCounter(I2C2_Status.data_leng
      +                          th);
 25156                           
 25157                           ;incstack = 0
 25158  00788E  0101               	movlb	1	; () banked
 25159  007890  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 25160  007892  ECB8  F03C         	call	i2_I2C2_MasterSetCounter
 25161                           
 25162                           ;mcc_generated_files/i2c2_master.c: 509:     return I2C2_DO_SEND_ADR_READ();
 25163  007896  EC87  F03A         	call	i2_I2C2_DO_SEND_ADR_READ	;wreg free
 25164  00789A  0012               	return		;funcret
 25165  00789C                     __end_of_I2C2_DO_SEND_RESTART_READ:
 25166                           	opt callstack 0
 25167                           
 25168 ;; *************** function _I2C2_DO_TX_EMPTY *****************
 25169 ;; Defined at:
 25170 ;;		line 462 in file "mcc_generated_files/i2c2_master.c"
 25171 ;; Parameters:    Size  Location     Type
 25172 ;;		None
 25173 ;; Auto vars:     Size  Location     Type
 25174 ;;		None
 25175 ;; Return value:  Size  Location     Type
 25176 ;;                  1    wreg      enum E16447
 25177 ;; Registers used:
 25178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25179 ;; Tracked objects:
 25180 ;;		On entry : 3F/1
 25181 ;;		On exit  : 0/0
 25182 ;;		Unchanged: 0/0
 25183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25188 ;;Total ram usage:        2 bytes
 25189 ;; Hardware stack levels used:    1
 25190 ;; Hardware stack levels required when called:    3
 25191 ;; This function calls:
 25192 ;;		Absolute function
 25193 ;;		i2_I2C2_CallbackReturnReset
 25194 ;;		i2_I2C2_CallbackReturnStop
 25195 ;;		i2_I2C2_MasterDisableRestart
 25196 ;;		i2_I2C2_MasterEnableRestart
 25197 ;;		i2_I2C2_MasterSetCounter
 25198 ;;		i2_rd1RegCompleteHandler
 25199 ;;		i2_rd2RegCompleteHandler
 25200 ;;		i2_rdBlkRegCompleteHandler
 25201 ;;		i2_wr1RegCompleteHandler
 25202 ;;		i2_wr2RegCompleteHandler
 25203 ;; This function is called by:
 25204 ;;		_I2C2_DO_TX
 25205 ;;		_I2C2_MasterFsm
 25206 ;; This function uses a non-reentrant model
 25207 ;;
 25208                           
 25209                           	psect	text155
 25210  0064A2                     __ptext155:
 25211                           	opt callstack 0
 25212  0064A2                     _I2C2_DO_TX_EMPTY:
 25213                           	opt callstack 11
 25214                           
 25215                           ; BSR set to: 1
 25216                           ;mcc_generated_files/i2c2_master.c: 464:     I2C2_Status.bufferFree = 1;
 25217                           
 25218                           ;incstack = 0
 25219  0064A2  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 25220                           
 25221                           ;mcc_generated_files/i2c2_master.c: 465:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 25222  0064A4  D00E               	goto	i2l13861
 25223  0064A6                     i2l13841:
 25224                           
 25225                           ;mcc_generated_files/i2c2_master.c: 468:             I2C2_MasterEnableRestart();
 25226  0064A6  ECF6  F03C         	call	i2_I2C2_MasterEnableRestart	;wreg free
 25227                           
 25228                           ; BSR set to: 61
 25229                           ;mcc_generated_files/i2c2_master.c: 469:             return I2C2_SEND_RESTART_READ;
 25230  0064AA  0E07               	movlw	7
 25231  0064AC  0012               	return	
 25232  0064AE                     i2l13847:
 25233                           
 25234                           ;mcc_generated_files/i2c2_master.c: 472:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 25235  0064AE  0101               	movlb	1	; () banked
 25236  0064B0  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 25237  0064B2  ECB8  F03C         	call	i2_I2C2_MasterSetCounter
 25238                           
 25239                           ;mcc_generated_files/i2c2_master.c: 473:             return I2C2_TX;
 25240  0064B6  0E03               	movlw	3
 25241  0064B8  0012               	return	
 25242  0064BA                     i2l13853:
 25243                           
 25244                           ;mcc_generated_files/i2c2_master.c: 476:             I2C2_MasterDisableRestart();
 25245  0064BA  ECF9  F03C         	call	i2_I2C2_MasterDisableRestart	;wreg free
 25246                           
 25247                           ; BSR set to: 61
 25248                           ;mcc_generated_files/i2c2_master.c: 477:             return I2C2_SEND_STOP;
 25249  0064BE  0E0A               	movlw	10
 25250  0064C0  0012               	return	
 25251  0064C2                     i2l13861:
 25252                           
 25253                           ; BSR set to: 1
 25254  0064C2  0060  F430  F00A   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 25255  0064C8  0060  F434  F00B   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 25256  0064CE  D801               	call	i2u1322_48
 25257  0064D0  D009               	goto	i2u1322_49
 25258  0064D2                     i2u1322_48:
 25259  0064D2  0005               	push	
 25260  0064D4  6EFA               	movwf	pclath,c
 25261  0064D6  5100               	movf	_I2C2_Status& (0+255),w,b
 25262  0064D8  6EFD               	movwf	tosl,c
 25263  0064DA  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 25264  0064DC  6EFE               	movwf	tosh,c
 25265  0064DE  6AFF               	clrf	tosu,c
 25266  0064E0  50FA               	movf	pclath,w,c
 25267  0064E2  0012               	return		;indir
 25268  0064E4                     i2u1322_49:
 25269  0064E4  6E0C               	movwf	??_I2C2_DO_TX_EMPTY^0,c
 25270  0064E6  6A0D               	clrf	(??_I2C2_DO_TX_EMPTY+1)^0,c
 25271                           
 25272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25273                           ; Switch size 1, requested type "simple"
 25274                           ; Number of cases is 1, Range of values is 0 to 0
 25275                           ; switch strategies available:
 25276                           ; Name         Instructions Cycles
 25277                           ; simple_byte            4     3 (average)
 25278                           ;	Chosen strategy is simple_byte
 25279  0064E8  500D               	movf	(??_I2C2_DO_TX_EMPTY+1)^0,w,c
 25280  0064EA  0A00               	xorlw	0	; case 0
 25281  0064EC  A4D8               	btfss	status,2,c
 25282  0064EE  D7E5               	goto	i2l13853
 25283                           
 25284                           ; Switch size 1, requested type "simple"
 25285                           ; Number of cases is 3, Range of values is 1 to 4
 25286                           ; switch strategies available:
 25287                           ; Name         Instructions Cycles
 25288                           ; simple_byte           10     6 (average)
 25289                           ;	Chosen strategy is simple_byte
 25290  0064F0  500C               	movf	??_I2C2_DO_TX_EMPTY^0,w,c
 25291  0064F2  0A01               	xorlw	1	; case 1
 25292  0064F4  B4D8               	btfsc	status,2,c
 25293  0064F6  D7E1               	goto	i2l13853
 25294  0064F8  0A03               	xorlw	3	; case 2
 25295  0064FA  B4D8               	btfsc	status,2,c
 25296  0064FC  D7D4               	goto	i2l13841
 25297  0064FE  0A06               	xorlw	6	; case 4
 25298  006500  B4D8               	btfsc	status,2,c
 25299  006502  D7D5               	goto	i2l13847
 25300  006504  D7DA               	goto	i2l13853
 25301  006506                     __end_of_I2C2_DO_TX_EMPTY:
 25302                           	opt callstack 0
 25303                           
 25304 ;; *************** function _I2C2_DO_RX *****************
 25305 ;; Defined at:
 25306 ;;		line 438 in file "mcc_generated_files/i2c2_master.c"
 25307 ;; Parameters:    Size  Location     Type
 25308 ;;		None
 25309 ;; Auto vars:     Size  Location     Type
 25310 ;;  retFsmState     1    2[COMRAM] enum E16447
 25311 ;; Return value:  Size  Location     Type
 25312 ;;                  1    wreg      enum E16447
 25313 ;; Registers used:
 25314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25315 ;; Tracked objects:
 25316 ;;		On entry : 3F/1
 25317 ;;		On exit  : 3/1
 25318 ;;		Unchanged: 0/0
 25319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25324 ;;Total ram usage:        3 bytes
 25325 ;; Hardware stack levels used:    1
 25326 ;; Hardware stack levels required when called:    4
 25327 ;; This function calls:
 25328 ;;		_I2C2_MasterGetRxData
 25329 ;;		_I2C2_MasterIsRxBufFull
 25330 ;;		i2_I2C2_DO_RX_EMPTY
 25331 ;; This function is called by:
 25332 ;;		_I2C2_MasterFsm
 25333 ;; This function uses a non-reentrant model
 25334 ;;
 25335                           
 25336                           	psect	text156
 25337  0061EE                     __ptext156:
 25338                           	opt callstack 0
 25339  0061EE                     _I2C2_DO_RX:
 25340                           	opt callstack 10
 25341                           
 25342                           ; BSR set to: 1
 25343                           ;mcc_generated_files/i2c2_master.c: 440:     if(!I2C2_MasterIsRxBufFull())
 25344                           
 25345                           ;incstack = 0
 25346  0061EE  EC55  F03C         	call	_I2C2_MasterIsRxBufFull	;wreg free
 25347  0061F2  0900               	iorlw	0
 25348  0061F4  A4D8               	btfss	status,2,c
 25349  0061F6  D002               	goto	i2l13977
 25350  0061F8                     i2u1336_40:
 25351                           
 25352                           ;mcc_generated_files/i2c2_master.c: 441:     {;mcc_generated_files/i2c2_master.c: 442:  
      +                                 return I2C2_RX;
 25353  0061F8  0E04               	movlw	4
 25354  0061FA  0012               	return	
 25355  0061FC                     i2l13977:
 25356                           
 25357                           ; BSR set to: 61
 25358                           ;mcc_generated_files/i2c2_master.c: 444:     if(I2C2_Status.addressNackCheck)
 25359  0061FC  0101               	movlb	1	; () banked
 25360  0061FE  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25361  006200  0B03               	andlw	3
 25362  006202  0900               	iorlw	0
 25363  006204  B4D8               	btfsc	status,2,c
 25364  006206  D00C               	goto	i2l1056
 25365                           
 25366                           ; BSR set to: 1
 25367                           ;mcc_generated_files/i2c2_master.c: 445:     {;mcc_generated_files/i2c2_master.c: 446:  
      +                                 I2C2_Status.addressNackCheck--;
 25368  006208  0E01               	movlw	1
 25369  00620A  6E01               	movwf	??_I2C2_DO_RX^0,c
 25370  00620C  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25371  00620E  0B03               	andlw	3
 25372  006210  6E02               	movwf	(??_I2C2_DO_RX+1)^0,c
 25373  006212  5001               	movf	??_I2C2_DO_RX^0,w,c
 25374  006214  5E02               	subwf	(??_I2C2_DO_RX+1)^0,f,c
 25375  006216  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25376  006218  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 25377  00621A  0BFC               	andlw	-4
 25378  00621C  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 25379  00621E  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 25380  006220                     i2l1056:
 25381                           
 25382                           ; BSR set to: 1
 25383                           ;mcc_generated_files/i2c2_master.c: 449:     if(--I2C2_Status.data_length)
 25384  006220  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 25385  006222  A0D8               	btfss	status,0,c
 25386  006224  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 25387  006226  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 25388  006228  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 25389  00622A  B4D8               	btfsc	status,2,c
 25390  00622C  D00D               	goto	i2l13991
 25391                           
 25392                           ; BSR set to: 1
 25393                           ;mcc_generated_files/i2c2_master.c: 450:     {;mcc_generated_files/i2c2_master.c: 451:  
      +                                 *I2C2_Status.data_ptr++ = I2C2_MasterGetRxData();
 25394  00622E  ECF3  F03C         	call	_I2C2_MasterGetRxData	;wreg free
 25395  006232  0060  F477  FFD9   	movff	_I2C2_Status+29,fsr2l
 25396  006238  0060  F47B  FFDA   	movff	_I2C2_Status+30,fsr2h
 25397  00623E  6EDF               	movwf	indf2,c
 25398                           
 25399                           ; BSR set to: 61
 25400  006240  0101               	movlb	1	; () banked
 25401  006242  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 25402  006244  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 25403  006246  D7D8               	goto	i2u1336_40
 25404  006248                     i2l13991:
 25405                           
 25406                           ; BSR set to: 1
 25407                           ;mcc_generated_files/i2c2_master.c: 455:     {;mcc_generated_files/i2c2_master.c: 456:  
      +                                 i2c2_fsm_states_t retFsmState = I2C2_DO_RX_EMPTY();
 25408  006248  EC35  F031         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 25409  00624C  6E03               	movwf	I2C2_DO_RX@retFsmState^0,c
 25410                           
 25411                           ;mcc_generated_files/i2c2_master.c: 457:         *I2C2_Status.data_ptr++ = I2C2_MasterGe
      +                          tRxData();
 25412  00624E  ECF3  F03C         	call	_I2C2_MasterGetRxData	;wreg free
 25413  006252  0060  F477  FFD9   	movff	_I2C2_Status+29,fsr2l
 25414  006258  0060  F47B  FFDA   	movff	_I2C2_Status+30,fsr2h
 25415  00625E  6EDF               	movwf	indf2,c
 25416                           
 25417                           ; BSR set to: 61
 25418  006260  0101               	movlb	1	; () banked
 25419  006262  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 25420  006264  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 25421                           
 25422                           ; BSR set to: 1
 25423                           ;mcc_generated_files/i2c2_master.c: 458:         return retFsmState;
 25424  006266  5003               	movf	I2C2_DO_RX@retFsmState^0,w,c
 25425  006268  0012               	return		;funcret
 25426  00626A                     __end_of_I2C2_DO_RX:
 25427                           	opt callstack 0
 25428                           
 25429 ;; *************** function _I2C2_DO_TX *****************
 25430 ;; Defined at:
 25431 ;;		line 405 in file "mcc_generated_files/i2c2_master.c"
 25432 ;; Parameters:    Size  Location     Type
 25433 ;;		None
 25434 ;; Auto vars:     Size  Location     Type
 25435 ;;  retFsmState     1   14[COMRAM] enum E16447
 25436 ;;  dataTx          1   13[COMRAM] unsigned char 
 25437 ;; Return value:  Size  Location     Type
 25438 ;;                  1    wreg      enum E16447
 25439 ;; Registers used:
 25440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25441 ;; Tracked objects:
 25442 ;;		On entry : 3F/1
 25443 ;;		On exit  : 0/0
 25444 ;;		Unchanged: 0/0
 25445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25447 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25450 ;;Total ram usage:        6 bytes
 25451 ;; Hardware stack levels used:    1
 25452 ;; Hardware stack levels required when called:    6
 25453 ;; This function calls:
 25454 ;;		Absolute function
 25455 ;;		_I2C2_DO_SEND_RESTART_READ
 25456 ;;		_I2C2_DO_SEND_RESTART_WRITE
 25457 ;;		_I2C2_DO_TX_EMPTY
 25458 ;;		_I2C2_MasterIsNack
 25459 ;;		_I2C2_MasterIsTxBufEmpty
 25460 ;;		i2_I2C2_CallbackReturnReset
 25461 ;;		i2_I2C2_CallbackReturnStop
 25462 ;;		i2_I2C2_MasterSendTxData
 25463 ;;		i2_rd1RegCompleteHandler
 25464 ;;		i2_rd2RegCompleteHandler
 25465 ;;		i2_rdBlkRegCompleteHandler
 25466 ;;		i2_wr1RegCompleteHandler
 25467 ;;		i2_wr2RegCompleteHandler
 25468 ;; This function is called by:
 25469 ;;		_I2C2_MasterFsm
 25470 ;; This function uses a non-reentrant model
 25471 ;;
 25472                           
 25473                           	psect	text157
 25474  0052D2                     __ptext157:
 25475                           	opt callstack 0
 25476  0052D2                     _I2C2_DO_TX:
 25477                           	opt callstack 8
 25478                           
 25479                           ; BSR set to: 1
 25480                           ;mcc_generated_files/i2c2_master.c: 407:     if(I2C2_MasterIsNack())
 25481                           
 25482                           ;incstack = 0
 25483  0052D2  EC4E  F03C         	call	_I2C2_MasterIsNack	;wreg free
 25484  0052D6  0900               	iorlw	0
 25485  0052D8  A4D8               	btfss	status,2,c
 25486  0052DA  D009               	goto	i2l13933
 25487  0052DC  D02C               	goto	i2l13935
 25488  0052DE                     i2l13919:
 25489                           
 25490                           ;mcc_generated_files/i2c2_master.c: 412:                 return I2C2_DO_SEND_RESTART_REA
      +                          D();
 25491  0052DE  EC47  F03C         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 25492  0052E2  0012               	return	
 25493  0052E4                     i2l13923:
 25494                           
 25495                           ;mcc_generated_files/i2c2_master.c: 414:                   return I2C2_DO_SEND_RESTART_W
      +                          RITE();
 25496  0052E4  EC06  F03D         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 25497  0052E8  0012               	return	
 25498  0052EA                     i2l13927:
 25499                           
 25500                           ;mcc_generated_files/i2c2_master.c: 418:                 return I2C2_IDLE;
 25501  0052EA  0E00               	movlw	0
 25502  0052EC  0012               	return	
 25503  0052EE                     i2l13933:
 25504                           
 25505                           ; BSR set to: 61
 25506  0052EE  0060  F448  F00A   	movff	_I2C2_Status+18,i2rd1RegCompleteHandler@ptr
 25507  0052F4  0060  F44C  F00B   	movff	_I2C2_Status+19,i2rd1RegCompleteHandler@ptr+1
 25508  0052FA  D801               	call	i2u1332_48
 25509  0052FC  D00A               	goto	i2u1332_49
 25510  0052FE                     i2u1332_48:
 25511  0052FE  0005               	push	
 25512  005300  6EFA               	movwf	pclath,c
 25513  005302  0101               	movlb	1	; () banked
 25514  005304  5106               	movf	(_I2C2_Status+6)& (0+255),w,b
 25515  005306  6EFD               	movwf	tosl,c
 25516  005308  5107               	movf	(_I2C2_Status+7)& (0+255),w,b
 25517  00530A  6EFE               	movwf	tosh,c
 25518  00530C  6AFF               	clrf	tosu,c
 25519  00530E  50FA               	movf	pclath,w,c
 25520  005310  0012               	return		;indir
 25521  005312                     i2u1332_49:
 25522  005312  6E0C               	movwf	??_I2C2_DO_TX^0,c
 25523  005314  6A0D               	clrf	(??_I2C2_DO_TX+1)^0,c
 25524                           
 25525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25526                           ; Switch size 1, requested type "simple"
 25527                           ; Number of cases is 1, Range of values is 0 to 0
 25528                           ; switch strategies available:
 25529                           ; Name         Instructions Cycles
 25530                           ; simple_byte            4     3 (average)
 25531                           ;	Chosen strategy is simple_byte
 25532  005316  500D               	movf	(??_I2C2_DO_TX+1)^0,w,c
 25533  005318  0A00               	xorlw	0	; case 0
 25534  00531A  A4D8               	btfss	status,2,c
 25535  00531C  D7E6               	goto	i2l13927
 25536                           
 25537                           ; Switch size 1, requested type "simple"
 25538                           ; Number of cases is 4, Range of values is 1 to 4
 25539                           ; switch strategies available:
 25540                           ; Name         Instructions Cycles
 25541                           ; simple_byte           13     7 (average)
 25542                           ;	Chosen strategy is simple_byte
 25543  00531E  500C               	movf	??_I2C2_DO_TX^0,w,c
 25544  005320  0A01               	xorlw	1	; case 1
 25545  005322  B4D8               	btfsc	status,2,c
 25546  005324  D7E2               	goto	i2l13927
 25547  005326  0A03               	xorlw	3	; case 2
 25548  005328  B4D8               	btfsc	status,2,c
 25549  00532A  D7D9               	goto	i2l13919
 25550  00532C  0A01               	xorlw	1	; case 3
 25551  00532E  B4D8               	btfsc	status,2,c
 25552  005330  D7D9               	goto	i2l13923
 25553  005332  0A07               	xorlw	7	; case 4
 25554  005334  D7DA               	goto	i2l13927
 25555  005336                     i2l13935:
 25556                           
 25557                           ; BSR set to: 61
 25558  005336  EC87  F03C         	call	_I2C2_MasterIsTxBufEmpty	;wreg free
 25559  00533A  0900               	iorlw	0
 25560  00533C  B4D8               	btfsc	status,2,c
 25561  00533E  D036               	goto	i2l13961
 25562                           
 25563                           ; BSR set to: 61
 25564                           ;mcc_generated_files/i2c2_master.c: 422:     {;mcc_generated_files/i2c2_master.c: 423:  
      +                                 if(I2C2_Status.addressNackCheck)
 25565  005340  0101               	movlb	1	; () banked
 25566  005342  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25567  005344  0B03               	andlw	3
 25568  005346  0900               	iorlw	0
 25569  005348  B4D8               	btfsc	status,2,c
 25570  00534A  D00C               	goto	i2l13941
 25571                           
 25572                           ; BSR set to: 1
 25573                           ;mcc_generated_files/i2c2_master.c: 424:         {;mcc_generated_files/i2c2_master.c: 42
      +                          5:             I2C2_Status.addressNackCheck--;
 25574  00534C  0E01               	movlw	1
 25575  00534E  6E0C               	movwf	??_I2C2_DO_TX^0,c
 25576  005350  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25577  005352  0B03               	andlw	3
 25578  005354  6E0D               	movwf	(??_I2C2_DO_TX+1)^0,c
 25579  005356  500C               	movf	??_I2C2_DO_TX^0,w,c
 25580  005358  5E0D               	subwf	(??_I2C2_DO_TX+1)^0,f,c
 25581  00535A  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25582  00535C  180D               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 25583  00535E  0BFC               	andlw	-4
 25584  005360  180D               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 25585  005362  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 25586  005364                     i2l13941:
 25587                           
 25588                           ; BSR set to: 1
 25589                           ;mcc_generated_files/i2c2_master.c: 427:         uint8_t dataTx = *I2C2_Status.data_ptr+
      +                          +;
 25590  005364  0060  F477  FFD9   	movff	_I2C2_Status+29,fsr2l
 25591  00536A  0060  F47B  FFDA   	movff	_I2C2_Status+30,fsr2h
 25592  005370  50DF               	movf	indf2,w,c
 25593  005372  6E0E               	movwf	I2C2_DO_TX@dataTx^0,c
 25594                           
 25595                           ; BSR set to: 1
 25596  005374  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 25597  005376  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 25598                           
 25599                           ; BSR set to: 1
 25600                           ;mcc_generated_files/i2c2_master.c: 428:         i2c2_fsm_states_t retFsmState = (--I2C2
      +                          _Status.data_length)?I2C2_TX:I2C2_DO_TX_EMPTY();
 25601  005378  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 25602  00537A  A0D8               	btfss	status,0,c
 25603  00537C  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 25604  00537E  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 25605  005380  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 25606  005382  A4D8               	btfss	status,2,c
 25607  005384  D007               	goto	i2l13949
 25608                           
 25609                           ; BSR set to: 1
 25610  005386  EC51  F032         	call	_I2C2_DO_TX_EMPTY	;wreg free
 25611  00538A  6E0C               	movwf	??_I2C2_DO_TX^0,c
 25612  00538C  500C               	movf	??_I2C2_DO_TX^0,w,c
 25613  00538E  6E10               	movwf	_I2C2_DO_TX$2557^0,c
 25614  005390  6A11               	clrf	(_I2C2_DO_TX$2557+1)^0,c
 25615  005392  D004               	goto	i2l13951
 25616  005394                     i2l13949:
 25617                           
 25618                           ; BSR set to: 1
 25619  005394  0E00               	movlw	0
 25620  005396  6E11               	movwf	(_I2C2_DO_TX$2557+1)^0,c
 25621  005398  0E03               	movlw	3
 25622  00539A  6E10               	movwf	_I2C2_DO_TX$2557^0,c
 25623  00539C                     i2l13951:
 25624  00539C  0060  F040  F00F   	movff	_I2C2_DO_TX$2557,I2C2_DO_TX@retFsmState
 25625                           
 25626                           ;mcc_generated_files/i2c2_master.c: 429:         I2C2_MasterSendTxData(dataTx);
 25627  0053A2  500E               	movf	I2C2_DO_TX@dataTx^0,w,c
 25628  0053A4  ECB3  F03C         	call	i2_I2C2_MasterSendTxData
 25629                           
 25630                           ;mcc_generated_files/i2c2_master.c: 430:         return retFsmState;
 25631  0053A8  500F               	movf	I2C2_DO_TX@retFsmState^0,w,c
 25632  0053AA  0012               	return	
 25633  0053AC                     i2l13961:
 25634                           
 25635                           ; BSR set to: 61
 25636                           ;mcc_generated_files/i2c2_master.c: 433:     {;mcc_generated_files/i2c2_master.c: 434:  
      +                                 return I2C2_TX;
 25637  0053AC  0E03               	movlw	3
 25638  0053AE  0012               	return		;funcret
 25639  0053B0                     __end_of_I2C2_DO_TX:
 25640                           	opt callstack 0
 25641                           
 25642 ;; *************** function _I2C2_DO_IDLE *****************
 25643 ;; Defined at:
 25644 ;;		line 380 in file "mcc_generated_files/i2c2_master.c"
 25645 ;; Parameters:    Size  Location     Type
 25646 ;;		None
 25647 ;; Auto vars:     Size  Location     Type
 25648 ;;		None
 25649 ;; Return value:  Size  Location     Type
 25650 ;;                  1    wreg      enum E16447
 25651 ;; Registers used:
 25652 ;;		wreg, status,2
 25653 ;; Tracked objects:
 25654 ;;		On entry : 3/1
 25655 ;;		On exit  : 3F/1
 25656 ;;		Unchanged: 0/0
 25657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25662 ;;Total ram usage:        0 bytes
 25663 ;; Hardware stack levels used:    1
 25664 ;; This function calls:
 25665 ;;		Nothing
 25666 ;; This function is called by:
 25667 ;;		_I2C2_DO_RX_NACK_STOP
 25668 ;;		_I2C2_MasterFsm
 25669 ;; This function uses a non-reentrant model
 25670 ;;
 25671                           
 25672                           	psect	text158
 25673  007902                     __ptext158:
 25674                           	opt callstack 0
 25675  007902                     _I2C2_DO_IDLE:
 25676                           	opt callstack 13
 25677                           
 25678                           ;mcc_generated_files/i2c2_master.c: 382:     I2C2_Status.busy = 0;
 25679                           
 25680                           ;incstack = 0
 25681  007902  0101               	movlb	1	; () banked
 25682  007904  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 25683                           
 25684                           ; BSR set to: 1
 25685                           ;mcc_generated_files/i2c2_master.c: 383:     I2C2_Status.error = I2C2_NOERR;
 25686  007906  0E00               	movlw	0
 25687  007908  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 25688                           
 25689                           ; BSR set to: 1
 25690                           ;mcc_generated_files/i2c2_master.c: 384:     return I2C2_RESET;
 25691  00790A  0E0F               	movlw	15
 25692                           
 25693                           ; BSR set to: 1
 25694  00790C  0012               	return		;funcret
 25695  00790E                     __end_of_I2C2_DO_IDLE:
 25696                           	opt callstack 0
 25697                           
 25698 ;; *************** function i2_I2C2_DO_SEND_ADR_WRITE *****************
 25699 ;; Defined at:
 25700 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 25701 ;; Parameters:    Size  Location     Type
 25702 ;;		None
 25703 ;; Auto vars:     Size  Location     Type
 25704 ;;		None
 25705 ;; Return value:  Size  Location     Type
 25706 ;;                  1    wreg      enum E16447
 25707 ;; Registers used:
 25708 ;;		wreg, status,2, status,0, cstack
 25709 ;; Tracked objects:
 25710 ;;		On entry : 0/0
 25711 ;;		On exit  : 0/0
 25712 ;;		Unchanged: 0/0
 25713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25718 ;;Total ram usage:        0 bytes
 25719 ;; Hardware stack levels used:    1
 25720 ;; Hardware stack levels required when called:    1
 25721 ;; This function calls:
 25722 ;;		i2_I2C2_MasterSendTxData
 25723 ;; This function is called by:
 25724 ;; This function uses a non-reentrant model
 25725 ;;
 25726                           
 25727                           	psect	text159
 25728  0076A2                     __ptext159:
 25729                           	opt callstack 0
 25730  0076A2                     i2_I2C2_DO_SEND_ADR_WRITE:
 25731                           	opt callstack 13
 25732                           
 25733                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 25734                           
 25735                           ; BSR set to: 1
 25736                           ;incstack = 0
 25737  0076A2  0101               	movlb	1	; () banked
 25738  0076A4  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25739  0076A6  0BFC               	andlw	-4
 25740  0076A8  0902               	iorlw	2
 25741  0076AA  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 25742                           
 25743                           ; BSR set to: 1
 25744                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 25745  0076AC  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 25746  0076AE  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 25747  0076B0  ECB3  F03C         	call	i2_I2C2_MasterSendTxData
 25748                           
 25749                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 25750  0076B4  0E03               	movlw	3
 25751  0076B6  0012               	return		;funcret
 25752  0076B8                     __end_ofi2_I2C2_DO_SEND_ADR_WRITE:
 25753                           	opt callstack 0
 25754                           
 25755 ;; *************** function _I2C2_MasterIsTxBufEmpty *****************
 25756 ;; Defined at:
 25757 ;;		line 741 in file "mcc_generated_files/i2c2_master.c"
 25758 ;; Parameters:    Size  Location     Type
 25759 ;;		None
 25760 ;; Auto vars:     Size  Location     Type
 25761 ;;		None
 25762 ;; Return value:  Size  Location     Type
 25763 ;;                  1    wreg      _Bool 
 25764 ;; Registers used:
 25765 ;;		wreg
 25766 ;; Tracked objects:
 25767 ;;		On entry : 3F/3D
 25768 ;;		On exit  : 3F/3D
 25769 ;;		Unchanged: 0/0
 25770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25775 ;;Total ram usage:        0 bytes
 25776 ;; Hardware stack levels used:    1
 25777 ;; This function calls:
 25778 ;;		Nothing
 25779 ;; This function is called by:
 25780 ;;		_I2C2_DO_TX
 25781 ;; This function uses a non-reentrant model
 25782 ;;
 25783                           
 25784                           	psect	text160
 25785  00790E                     __ptext160:
 25786                           	opt callstack 0
 25787  00790E                     _I2C2_MasterIsTxBufEmpty:
 25788                           	opt callstack 13
 25789                           
 25790                           ; BSR set to: 61
 25791                           ;mcc_generated_files/i2c2_master.c: 743:     return I2C2STAT1bits.TXBE;
 25792                           
 25793                           ;incstack = 0
 25794  00790E  AB62               	btfss	98,5,b	;volatile
 25795  007910  D002               	goto	i2u762_40
 25796  007912  0E01               	movlw	1
 25797  007914  0012               	return	
 25798  007916                     i2u762_40:
 25799  007916  0E00               	movlw	0
 25800                           
 25801                           ; BSR set to: 61
 25802  007918  0012               	return		;funcret
 25803  00791A                     __end_of_I2C2_MasterIsTxBufEmpty:
 25804                           	opt callstack 0
 25805                           
 25806 ;; *************** function _I2C2_MasterIsNack *****************
 25807 ;; Defined at:
 25808 ;;		line 714 in file "mcc_generated_files/i2c2_master.c"
 25809 ;; Parameters:    Size  Location     Type
 25810 ;;		None
 25811 ;; Auto vars:     Size  Location     Type
 25812 ;;		None
 25813 ;; Return value:  Size  Location     Type
 25814 ;;                  1    wreg      _Bool 
 25815 ;; Registers used:
 25816 ;;		wreg
 25817 ;; Tracked objects:
 25818 ;;		On entry : 3F/1
 25819 ;;		On exit  : 3F/3D
 25820 ;;		Unchanged: 0/0
 25821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25826 ;;Total ram usage:        0 bytes
 25827 ;; Hardware stack levels used:    1
 25828 ;; This function calls:
 25829 ;;		Nothing
 25830 ;; This function is called by:
 25831 ;;		_I2C2_MasterFsm
 25832 ;;		_I2C2_DO_TX
 25833 ;; This function uses a non-reentrant model
 25834 ;;
 25835                           
 25836                           	psect	text161
 25837  00789C                     __ptext161:
 25838                           	opt callstack 0
 25839  00789C                     _I2C2_MasterIsNack:
 25840                           	opt callstack 14
 25841                           
 25842                           ; BSR set to: 1
 25843                           ;mcc_generated_files/i2c2_master.c: 716:     return I2C2CON1bits.ACKSTAT;
 25844                           
 25845                           ; BSR set to: 61
 25846                           ;incstack = 0
 25847  00789C  013D               	movlb	61	; () banked
 25848  00789E  AB5E               	btfss	94,5,b	;volatile
 25849  0078A0  D002               	goto	i2u758_40
 25850  0078A2  0E01               	movlw	1
 25851  0078A4  0012               	return	
 25852  0078A6                     i2u758_40:
 25853  0078A6  0E00               	movlw	0
 25854                           
 25855                           ; BSR set to: 61
 25856  0078A8  0012               	return		;funcret
 25857  0078AA                     __end_of_I2C2_MasterIsNack:
 25858                           	opt callstack 0
 25859                           
 25860 ;; *************** function _I2C2_MasterGetCounter *****************
 25861 ;; Defined at:
 25862 ;;		line 676 in file "mcc_generated_files/i2c2_master.c"
 25863 ;; Parameters:    Size  Location     Type
 25864 ;;		None
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;		None
 25867 ;; Return value:  Size  Location     Type
 25868 ;;                  1    wreg      unsigned char 
 25869 ;; Registers used:
 25870 ;;		wreg, status,2
 25871 ;; Tracked objects:
 25872 ;;		On entry : 3F/3D
 25873 ;;		On exit  : 3F/3D
 25874 ;;		Unchanged: 0/0
 25875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25880 ;;Total ram usage:        0 bytes
 25881 ;; Hardware stack levels used:    1
 25882 ;; This function calls:
 25883 ;;		Nothing
 25884 ;; This function is called by:
 25885 ;;		_I2C2_DO_SEND_STOP
 25886 ;; This function uses a non-reentrant model
 25887 ;;
 25888                           
 25889                           	psect	text162
 25890  007A10                     __ptext162:
 25891                           	opt callstack 0
 25892  007A10                     _I2C2_MasterGetCounter:
 25893                           	opt callstack 13
 25894                           
 25895                           ; BSR set to: 61
 25896                           ;mcc_generated_files/i2c2_master.c: 678:     return I2C2CNT;
 25897                           
 25898                           ; BSR set to: 61
 25899                           ;incstack = 0
 25900  007A10  5156               	movf	86,w,b	;volatile
 25901                           
 25902                           ; BSR set to: 61
 25903  007A12  0012               	return		;funcret
 25904  007A14                     __end_of_I2C2_MasterGetCounter:
 25905                           	opt callstack 0
 25906                           
 25907 ;; *************** function _I2C2_MasterStop *****************
 25908 ;; Defined at:
 25909 ;;		line 708 in file "mcc_generated_files/i2c2_master.c"
 25910 ;; Parameters:    Size  Location     Type
 25911 ;;		None
 25912 ;; Auto vars:     Size  Location     Type
 25913 ;;		None
 25914 ;; Return value:  Size  Location     Type
 25915 ;;                  1    wreg      void 
 25916 ;; Registers used:
 25917 ;;		None
 25918 ;; Tracked objects:
 25919 ;;		On entry : 3/1
 25920 ;;		On exit  : 3F/3D
 25921 ;;		Unchanged: 0/0
 25922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25927 ;;Total ram usage:        0 bytes
 25928 ;; Hardware stack levels used:    1
 25929 ;; This function calls:
 25930 ;;		Nothing
 25931 ;; This function is called by:
 25932 ;;		_I2C2_DO_SEND_STOP
 25933 ;;		_I2C2_DO_RX_NACK_STOP
 25934 ;; This function uses a non-reentrant model
 25935 ;;
 25936                           
 25937                           	psect	text163
 25938  0079D4                     __ptext163:
 25939                           	opt callstack 0
 25940  0079D4                     _I2C2_MasterStop:
 25941                           	opt callstack 13
 25942                           
 25943                           ;mcc_generated_files/i2c2_master.c: 711:     I2C2CON0bits.S = 0;
 25944                           
 25945                           ; BSR set to: 61
 25946                           ;incstack = 0
 25947  0079D4  013D               	movlb	61	; () banked
 25948  0079D6  9B5D               	bcf	93,5,b	;volatile
 25949                           
 25950                           ; BSR set to: 61
 25951  0079D8  0012               	return		;funcret
 25952  0079DA                     __end_of_I2C2_MasterStop:
 25953                           	opt callstack 0
 25954                           
 25955 ;; *************** function _I2C2_MasterSendNack *****************
 25956 ;; Defined at:
 25957 ;;		line 724 in file "mcc_generated_files/i2c2_master.c"
 25958 ;; Parameters:    Size  Location     Type
 25959 ;;		None
 25960 ;; Auto vars:     Size  Location     Type
 25961 ;;		None
 25962 ;; Return value:  Size  Location     Type
 25963 ;;                  1    wreg      void 
 25964 ;; Registers used:
 25965 ;;		None
 25966 ;; Tracked objects:
 25967 ;;		On entry : 3F/1
 25968 ;;		On exit  : 3F/3D
 25969 ;;		Unchanged: 0/0
 25970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25975 ;;Total ram usage:        0 bytes
 25976 ;; Hardware stack levels used:    1
 25977 ;; This function calls:
 25978 ;;		Nothing
 25979 ;; This function is called by:
 25980 ;;		_I2C2_DO_RX_NACK_STOP
 25981 ;;		_I2C2_DO_RX_NACK_RESTART
 25982 ;; This function uses a non-reentrant model
 25983 ;;
 25984                           
 25985                           	psect	text164
 25986  0079DA                     __ptext164:
 25987                           	opt callstack 0
 25988  0079DA                     _I2C2_MasterSendNack:
 25989                           	opt callstack 13
 25990                           
 25991                           ; BSR set to: 1
 25992                           ;mcc_generated_files/i2c2_master.c: 726:     I2C2CON1bits.ACKDT = 1;
 25993                           
 25994                           ; BSR set to: 61
 25995                           ;incstack = 0
 25996  0079DA  013D               	movlb	61	; () banked
 25997  0079DC  8D5E               	bsf	94,6,b	;volatile
 25998                           
 25999                           ; BSR set to: 61
 26000  0079DE  0012               	return		;funcret
 26001  0079E0                     __end_of_I2C2_MasterSendNack:
 26002                           	opt callstack 0
 26003                           
 26004 ;; *************** function _I2C2_MasterSendAck *****************
 26005 ;; Defined at:
 26006 ;;		line 719 in file "mcc_generated_files/i2c2_master.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;		None
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;		None
 26011 ;; Return value:  Size  Location     Type
 26012 ;;                  1    wreg      void 
 26013 ;; Registers used:
 26014 ;;		None
 26015 ;; Tracked objects:
 26016 ;;		On entry : 3F/1
 26017 ;;		On exit  : 3F/3D
 26018 ;;		Unchanged: 0/0
 26019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26024 ;;Total ram usage:        0 bytes
 26025 ;; Hardware stack levels used:    1
 26026 ;; This function calls:
 26027 ;;		Nothing
 26028 ;; This function is called by:
 26029 ;;		_I2C2_DO_RX_ACK
 26030 ;;		_I2C2_DO_TX_ACK
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           	psect	text165
 26035  0079E0                     __ptext165:
 26036                           	opt callstack 0
 26037  0079E0                     _I2C2_MasterSendAck:
 26038                           	opt callstack 13
 26039                           
 26040                           ; BSR set to: 1
 26041                           ;mcc_generated_files/i2c2_master.c: 721:     I2C2CON1bits.ACKDT = 0;
 26042                           
 26043                           ; BSR set to: 61
 26044                           ;incstack = 0
 26045  0079E0  013D               	movlb	61	; () banked
 26046  0079E2  9D5E               	bcf	94,6,b	;volatile
 26047                           
 26048                           ; BSR set to: 61
 26049  0079E4  0012               	return		;funcret
 26050  0079E6                     __end_of_I2C2_MasterSendAck:
 26051                           	opt callstack 0
 26052                           
 26053 ;; *************** function _I2C2_MasterIsRxBufFull *****************
 26054 ;; Defined at:
 26055 ;;		line 736 in file "mcc_generated_files/i2c2_master.c"
 26056 ;; Parameters:    Size  Location     Type
 26057 ;;		None
 26058 ;; Auto vars:     Size  Location     Type
 26059 ;;		None
 26060 ;; Return value:  Size  Location     Type
 26061 ;;                  1    wreg      _Bool 
 26062 ;; Registers used:
 26063 ;;		wreg
 26064 ;; Tracked objects:
 26065 ;;		On entry : 3F/1
 26066 ;;		On exit  : 3F/3D
 26067 ;;		Unchanged: 0/0
 26068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26073 ;;Total ram usage:        0 bytes
 26074 ;; Hardware stack levels used:    1
 26075 ;; This function calls:
 26076 ;;		Nothing
 26077 ;; This function is called by:
 26078 ;;		_I2C2_DO_RX
 26079 ;; This function uses a non-reentrant model
 26080 ;;
 26081                           
 26082                           	psect	text166
 26083  0078AA                     __ptext166:
 26084                           	opt callstack 0
 26085  0078AA                     _I2C2_MasterIsRxBufFull:
 26086                           	opt callstack 13
 26087                           
 26088                           ; BSR set to: 1
 26089                           ;mcc_generated_files/i2c2_master.c: 738:     return I2C2STAT1bits.RXBF;
 26090                           
 26091                           ; BSR set to: 61
 26092                           ;incstack = 0
 26093  0078AA  013D               	movlb	61	; () banked
 26094  0078AC  A162               	btfss	98,0,b	;volatile
 26095  0078AE  D002               	goto	i2u764_40
 26096  0078B0  0E01               	movlw	1
 26097  0078B2  0012               	return	
 26098  0078B4                     i2u764_40:
 26099  0078B4  0E00               	movlw	0
 26100                           
 26101                           ; BSR set to: 61
 26102  0078B6  0012               	return		;funcret
 26103  0078B8                     __end_of_I2C2_MasterIsRxBufFull:
 26104                           	opt callstack 0
 26105                           
 26106 ;; *************** function _I2C2_MasterGetRxData *****************
 26107 ;; Defined at:
 26108 ;;		line 666 in file "mcc_generated_files/i2c2_master.c"
 26109 ;; Parameters:    Size  Location     Type
 26110 ;;		None
 26111 ;; Auto vars:     Size  Location     Type
 26112 ;;		None
 26113 ;; Return value:  Size  Location     Type
 26114 ;;                  1    wreg      unsigned char 
 26115 ;; Registers used:
 26116 ;;		wreg, status,2
 26117 ;; Tracked objects:
 26118 ;;		On entry : 0/1
 26119 ;;		On exit  : 3F/3D
 26120 ;;		Unchanged: 0/0
 26121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26126 ;;Total ram usage:        0 bytes
 26127 ;; Hardware stack levels used:    1
 26128 ;; This function calls:
 26129 ;;		Nothing
 26130 ;; This function is called by:
 26131 ;;		_I2C2_DO_RX
 26132 ;; This function uses a non-reentrant model
 26133 ;;
 26134                           
 26135                           	psect	text167
 26136  0079E6                     __ptext167:
 26137                           	opt callstack 0
 26138  0079E6                     _I2C2_MasterGetRxData:
 26139                           	opt callstack 13
 26140                           
 26141                           ;mcc_generated_files/i2c2_master.c: 668:     return I2C2RXB;
 26142                           
 26143                           ; BSR set to: 61
 26144                           ;incstack = 0
 26145  0079E6  013D               	movlb	61	; () banked
 26146  0079E8  5154               	movf	84,w,b	;volatile
 26147                           
 26148                           ; BSR set to: 61
 26149  0079EA  0012               	return		;funcret
 26150  0079EC                     __end_of_I2C2_MasterGetRxData:
 26151                           	opt callstack 0
 26152                           
 26153 ;; *************** function i2_I2C2_MasterClearIrq *****************
 26154 ;; Defined at:
 26155 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 26156 ;; Parameters:    Size  Location     Type
 26157 ;;		None
 26158 ;; Auto vars:     Size  Location     Type
 26159 ;;		None
 26160 ;; Return value:  Size  Location     Type
 26161 ;;                  1    wreg      void 
 26162 ;; Registers used:
 26163 ;;		wreg, status,2
 26164 ;; Tracked objects:
 26165 ;;		On entry : 3F/1
 26166 ;;		On exit  : 3F/3D
 26167 ;;		Unchanged: 0/0
 26168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26173 ;;Total ram usage:        0 bytes
 26174 ;; Hardware stack levels used:    1
 26175 ;; This function calls:
 26176 ;;		Nothing
 26177 ;; This function is called by:
 26178 ;;		_I2C2_DO_BUS_COLLISION
 26179 ;; This function uses a non-reentrant model
 26180 ;;
 26181                           
 26182                           	psect	text168
 26183  0079B4                     __ptext168:
 26184                           	opt callstack 0
 26185  0079B4                     i2_I2C2_MasterClearIrq:
 26186                           	opt callstack 13
 26187                           
 26188                           ; BSR set to: 1
 26189                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 26190                           
 26191                           ; BSR set to: 61
 26192                           ;incstack = 0
 26193  0079B4  0E00               	movlw	0
 26194  0079B6  013D               	movlb	61	; () banked
 26195  0079B8  6F63               	movwf	99,b	;volatile
 26196                           
 26197                           ; BSR set to: 61
 26198  0079BA  0012               	return		;funcret
 26199  0079BC                     __end_ofi2_I2C2_MasterClearIrq:
 26200                           	opt callstack 0
 26201                           
 26202 ;; *************** function i2_I2C2_MasterSendTxData *****************
 26203 ;; Defined at:
 26204 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 26205 ;; Parameters:    Size  Location     Type
 26206 ;;  data            1    wreg     unsigned char 
 26207 ;; Auto vars:     Size  Location     Type
 26208 ;;  data            1    0[COMRAM] unsigned char 
 26209 ;; Return value:  Size  Location     Type
 26210 ;;                  1    wreg      void 
 26211 ;; Registers used:
 26212 ;;		wreg
 26213 ;; Tracked objects:
 26214 ;;		On entry : 0/1
 26215 ;;		On exit  : 0/0
 26216 ;;		Unchanged: 0/0
 26217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26222 ;;Total ram usage:        1 bytes
 26223 ;; Hardware stack levels used:    1
 26224 ;; This function calls:
 26225 ;;		Nothing
 26226 ;; This function is called by:
 26227 ;;		_I2C2_DO_TX
 26228 ;;		_I2C2_DO_SEND_STOP
 26229 ;;		i2_I2C2_DO_SEND_ADR_READ
 26230 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 26231 ;; This function uses a non-reentrant model
 26232 ;;
 26233                           
 26234                           	psect	text169
 26235  007966                     __ptext169:
 26236                           	opt callstack 0
 26237  007966                     i2_I2C2_MasterSendTxData:
 26238                           	opt callstack 13
 26239                           
 26240                           ; BSR set to: 61
 26241                           ;incstack = 0
 26242                           ;i2I2C2_MasterSendTxData@data stored from wreg
 26243  007966  6E01               	movwf	i2I2C2_MasterSendTxData@data^0,c
 26244                           
 26245                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 26246  007968  0060  F007  FD55   	movff	i2I2C2_MasterSendTxData@data,15701	;volatile
 26247  00796E  0012               	return		;funcret
 26248  007970                     __end_ofi2_I2C2_MasterSendTxData:
 26249                           	opt callstack 0
 26250                           
 26251 ;; *************** function i2_I2C2_MasterSetCounter *****************
 26252 ;; Defined at:
 26253 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 26254 ;; Parameters:    Size  Location     Type
 26255 ;;  counter         1    wreg     unsigned char 
 26256 ;; Auto vars:     Size  Location     Type
 26257 ;;  counter         1    0[COMRAM] unsigned char 
 26258 ;; Return value:  Size  Location     Type
 26259 ;;                  1    wreg      void 
 26260 ;; Registers used:
 26261 ;;		wreg
 26262 ;; Tracked objects:
 26263 ;;		On entry : 3/1
 26264 ;;		On exit  : 0/0
 26265 ;;		Unchanged: 0/0
 26266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26271 ;;Total ram usage:        1 bytes
 26272 ;; Hardware stack levels used:    1
 26273 ;; This function calls:
 26274 ;;		Nothing
 26275 ;; This function is called by:
 26276 ;;		_I2C2_DO_TX_EMPTY
 26277 ;;		_I2C2_DO_SEND_RESTART_READ
 26278 ;;		_I2C2_DO_SEND_STOP
 26279 ;;		i2_I2C2_DO_RX_EMPTY
 26280 ;; This function uses a non-reentrant model
 26281 ;;
 26282                           
 26283                           	psect	text170
 26284  007970                     __ptext170:
 26285                           	opt callstack 0
 26286  007970                     i2_I2C2_MasterSetCounter:
 26287                           	opt callstack 12
 26288                           
 26289                           ;incstack = 0
 26290                           ;i2I2C2_MasterSetCounter@counter stored from wreg
 26291  007970  6E01               	movwf	i2I2C2_MasterSetCounter@counter^0,c
 26292                           
 26293                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 26294  007972  0060  F007  FD56   	movff	i2I2C2_MasterSetCounter@counter,15702	;volatile
 26295  007978  0012               	return		;funcret
 26296  00797A                     __end_ofi2_I2C2_MasterSetCounter:
 26297                           	opt callstack 0
 26298                           
 26299 ;; *************** function i2_I2C2_MasterEnableRestart *****************
 26300 ;; Defined at:
 26301 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 26302 ;; Parameters:    Size  Location     Type
 26303 ;;		None
 26304 ;; Auto vars:     Size  Location     Type
 26305 ;;		None
 26306 ;; Return value:  Size  Location     Type
 26307 ;;                  1    wreg      void 
 26308 ;; Registers used:
 26309 ;;		None
 26310 ;; Tracked objects:
 26311 ;;		On entry : 0/1
 26312 ;;		On exit  : 3F/3D
 26313 ;;		Unchanged: 0/0
 26314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26319 ;;Total ram usage:        0 bytes
 26320 ;; Hardware stack levels used:    1
 26321 ;; This function calls:
 26322 ;;		Nothing
 26323 ;; This function is called by:
 26324 ;;		_I2C2_DO_TX_EMPTY
 26325 ;;		i2_I2C2_DO_RX_EMPTY
 26326 ;; This function uses a non-reentrant model
 26327 ;;
 26328                           
 26329                           	psect	text171
 26330  0079EC                     __ptext171:
 26331                           	opt callstack 0
 26332  0079EC                     i2_I2C2_MasterEnableRestart:
 26333                           	opt callstack 12
 26334                           
 26335                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 26336                           
 26337                           ;incstack = 0
 26338  0079EC  013D               	movlb	61	; () banked
 26339  0079EE  8D5D               	bsf	93,6,b	;volatile
 26340                           
 26341                           ; BSR set to: 61
 26342  0079F0  0012               	return		;funcret
 26343  0079F2                     __end_ofi2_I2C2_MasterEnableRestart:
 26344                           	opt callstack 0
 26345                           
 26346 ;; *************** function i2_I2C2_MasterDisableRestart *****************
 26347 ;; Defined at:
 26348 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 26349 ;; Parameters:    Size  Location     Type
 26350 ;;		None
 26351 ;; Auto vars:     Size  Location     Type
 26352 ;;		None
 26353 ;; Return value:  Size  Location     Type
 26354 ;;                  1    wreg      void 
 26355 ;; Registers used:
 26356 ;;		None
 26357 ;; Tracked objects:
 26358 ;;		On entry : 0/1
 26359 ;;		On exit  : 3F/3D
 26360 ;;		Unchanged: 0/0
 26361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26366 ;;Total ram usage:        0 bytes
 26367 ;; Hardware stack levels used:    1
 26368 ;; This function calls:
 26369 ;;		Nothing
 26370 ;; This function is called by:
 26371 ;;		_I2C2_DO_TX_EMPTY
 26372 ;;		i2_I2C2_DO_RX_EMPTY
 26373 ;; This function uses a non-reentrant model
 26374 ;;
 26375                           
 26376                           	psect	text172
 26377  0079F2                     __ptext172:
 26378                           	opt callstack 0
 26379  0079F2                     i2_I2C2_MasterDisableRestart:
 26380                           	opt callstack 12
 26381                           
 26382                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 26383                           
 26384                           ; BSR set to: 61
 26385                           ;incstack = 0
 26386  0079F2  013D               	movlb	61	; () banked
 26387  0079F4  9D5D               	bcf	93,6,b	;volatile
 26388                           
 26389                           ; BSR set to: 61
 26390  0079F6  0012               	return		;funcret
 26391  0079F8                     __end_ofi2_I2C2_MasterDisableRestart:
 26392                           	opt callstack 0
 26393                           
 26394 ;; *************** function _I2C2_MasterResetBus *****************
 26395 ;; Defined at:
 26396 ;;		line 686 in file "mcc_generated_files/i2c2_master.c"
 26397 ;; Parameters:    Size  Location     Type
 26398 ;;		None
 26399 ;; Auto vars:     Size  Location     Type
 26400 ;;		None
 26401 ;; Return value:  Size  Location     Type
 26402 ;;                  1    wreg      void 
 26403 ;; Registers used:
 26404 ;;		None
 26405 ;; Tracked objects:
 26406 ;;		On entry : 0/1
 26407 ;;		On exit  : 3F/3D
 26408 ;;		Unchanged: 0/0
 26409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26414 ;;Total ram usage:        0 bytes
 26415 ;; Hardware stack levels used:    1
 26416 ;; This function calls:
 26417 ;;		Nothing
 26418 ;; This function is called by:
 26419 ;;		_I2C2_DO_RESET
 26420 ;;		_I2C2_DO_BUS_ERROR
 26421 ;; This function uses a non-reentrant model
 26422 ;;
 26423                           
 26424                           	psect	text173
 26425  00797A                     __ptext173:
 26426                           	opt callstack 0
 26427  00797A                     _I2C2_MasterResetBus:
 26428                           	opt callstack 13
 26429                           
 26430                           ;mcc_generated_files/i2c2_master.c: 689:     I2C2CON0bits.EN = 0;
 26431                           
 26432                           ; BSR set to: 61
 26433                           ;incstack = 0
 26434  00797A  013D               	movlb	61	; () banked
 26435  00797C  9F5D               	bcf	93,7,b	;volatile
 26436                           
 26437                           ;mcc_generated_files/i2c2_master.c: 691:     I2C2STAT1bits.CLRBF = 1;
 26438  00797E  8562               	bsf	98,2,b	;volatile
 26439                           
 26440                           ;mcc_generated_files/i2c2_master.c: 693:     I2C2CON0bits.EN = 1;
 26441  007980  8F5D               	bsf	93,7,b	;volatile
 26442                           
 26443                           ; BSR set to: 61
 26444  007982  0012               	return		;funcret
 26445  007984                     __end_of_I2C2_MasterResetBus:
 26446                           	opt callstack 0
 26447                           
 26448 ;; *************** function i2_I2C2_CallbackReturnReset *****************
 26449 ;; Defined at:
 26450 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 26451 ;; Parameters:    Size  Location     Type
 26452 ;;  funPtr          2    9[COMRAM] PTR void 
 26453 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26454 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26455 ;; Auto vars:     Size  Location     Type
 26456 ;;		None
 26457 ;; Return value:  Size  Location     Type
 26458 ;;                  1    wreg      enum E358
 26459 ;; Registers used:
 26460 ;;		wreg
 26461 ;; Tracked objects:
 26462 ;;		On entry : 3F/1
 26463 ;;		On exit  : 3F/1
 26464 ;;		Unchanged: 3F/0
 26465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26470 ;;Total ram usage:        2 bytes
 26471 ;; Hardware stack levels used:    1
 26472 ;; This function calls:
 26473 ;;		Nothing
 26474 ;; This function is called by:
 26475 ;;		_I2C2_DO_RX_EMPTY
 26476 ;;		i2_I2C2_DO_RX_EMPTY
 26477 ;;		_I2C2_DO_TX_EMPTY
 26478 ;;		_I2C2_DO_TX
 26479 ;;		_I2C2_DO_ADDRESS_NACK
 26480 ;;		_I2C2_DO_BUS_COLLISION
 26481 ;; This function uses a non-reentrant model
 26482 ;;
 26483                           
 26484                           	psect	text174
 26485  007A14                     __ptext174:
 26486                           	opt callstack 0
 26487  007A14                     i2_I2C2_CallbackReturnReset:
 26488                           	opt callstack 12
 26489                           
 26490                           ; BSR set to: 1
 26491                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 26492                           
 26493                           ; BSR set to: 61
 26494                           ;incstack = 0
 26495  007A14  0E05               	movlw	5
 26496                           
 26497                           ; BSR set to: 1
 26498  007A16  0012               	return		;funcret
 26499  007A18                     __end_ofi2_I2C2_CallbackReturnReset:
 26500                           	opt callstack 0
 26501                           
 26502 ;; *************** function i2_I2C2_CallbackReturnStop *****************
 26503 ;; Defined at:
 26504 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 26505 ;; Parameters:    Size  Location     Type
 26506 ;;  funPtr          2    9[COMRAM] PTR void 
 26507 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26508 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26509 ;; Auto vars:     Size  Location     Type
 26510 ;;		None
 26511 ;; Return value:  Size  Location     Type
 26512 ;;                  1    wreg      enum E358
 26513 ;; Registers used:
 26514 ;;		wreg
 26515 ;; Tracked objects:
 26516 ;;		On entry : 3F/1
 26517 ;;		On exit  : 3F/1
 26518 ;;		Unchanged: 3F/0
 26519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26524 ;;Total ram usage:        2 bytes
 26525 ;; Hardware stack levels used:    1
 26526 ;; This function calls:
 26527 ;;		Nothing
 26528 ;; This function is called by:
 26529 ;;		i2_I2C2_SetCallback
 26530 ;;		_I2C2_DO_RX_EMPTY
 26531 ;;		i2_I2C2_DO_RX_EMPTY
 26532 ;;		_I2C2_DO_TX_EMPTY
 26533 ;;		_I2C2_DO_TX
 26534 ;;		_I2C2_DO_ADDRESS_NACK
 26535 ;;		_I2C2_DO_BUS_COLLISION
 26536 ;; This function uses a non-reentrant model
 26537 ;;
 26538                           
 26539                           	psect	text175
 26540  007A18                     __ptext175:
 26541                           	opt callstack 0
 26542  007A18                     i2_I2C2_CallbackReturnStop:
 26543                           	opt callstack 12
 26544                           
 26545                           ; BSR set to: 1
 26546                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 26547                           
 26548                           ; BSR set to: 1
 26549                           ;incstack = 0
 26550  007A18  0E01               	movlw	1
 26551                           
 26552                           ; BSR set to: 1
 26553  007A1A  0012               	return		;funcret
 26554  007A1C                     __end_ofi2_I2C2_CallbackReturnStop:
 26555                           	opt callstack 0
 26556                           
 26557 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 26558 ;; Defined at:
 26559 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 26560 ;; Parameters:    Size  Location     Type
 26561 ;;  ptr             2    9[COMRAM] PTR void 
 26562 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26563 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26564 ;; Auto vars:     Size  Location     Type
 26565 ;;		None
 26566 ;; Return value:  Size  Location     Type
 26567 ;;                  1    wreg      enum E358
 26568 ;; Registers used:
 26569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26570 ;; Tracked objects:
 26571 ;;		On entry : 3F/1
 26572 ;;		On exit  : 0/0
 26573 ;;		Unchanged: 0/0
 26574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26579 ;;Total ram usage:        2 bytes
 26580 ;; Hardware stack levels used:    1
 26581 ;; Hardware stack levels required when called:    2
 26582 ;; This function calls:
 26583 ;;		i2_I2C2_SetBuffer
 26584 ;;		i2_I2C2_SetDataCompleteCallback
 26585 ;; This function is called by:
 26586 ;;		_I2C2_DO_RX_EMPTY
 26587 ;;		i2_I2C2_DO_RX_EMPTY
 26588 ;;		_I2C2_DO_TX_EMPTY
 26589 ;;		_I2C2_DO_TX
 26590 ;;		_I2C2_DO_ADDRESS_NACK
 26591 ;;		_I2C2_DO_BUS_COLLISION
 26592 ;; This function uses a non-reentrant model
 26593 ;;
 26594                           
 26595                           	psect	text176
 26596  0069E2                     __ptext176:
 26597                           	opt callstack 0
 26598  0069E2                     i2_rdBlkRegCompleteHandler:
 26599                           	opt callstack 10
 26600                           
 26601                           ; BSR set to: 1
 26602                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 26603                           
 26604                           ; BSR set to: 1
 26605                           ;incstack = 0
 26606  0069E2  EE20 F002          	lfsr	2,2
 26607  0069E6  500A               	movf	i2rdBlkRegCompleteHandler@ptr^0,w,c
 26608  0069E8  26D9               	addwf	fsr2l,f,c
 26609  0069EA  500B               	movf	(i2rdBlkRegCompleteHandler@ptr+1)^0,w,c
 26610  0069EC  22DA               	addwfc	fsr2h,f,c
 26611  0069EE  006F FF78  F001    	movff	postinc2,i2I2C2_SetBuffer@buffer
 26612  0069F4  006F FF74  F002    	movff	postdec2,i2I2C2_SetBuffer@buffer+1
 26613  0069FA  0060  F02B  FFD9   	movff	i2rdBlkRegCompleteHandler@ptr,fsr2l
 26614  006A00  0060  F02F  FFDA   	movff	i2rdBlkRegCompleteHandler@ptr+1,fsr2h
 26615  006A06  006F FF78  F003    	movff	postinc2,i2I2C2_SetBuffer@bufferSize
 26616  006A0C  006F FF74  F004    	movff	postdec2,i2I2C2_SetBuffer@bufferSize+1
 26617  006A12  ECC9  F03A         	call	i2_I2C2_SetBuffer	;wreg free
 26618                           
 26619                           ; BSR set to: 1
 26620                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26621  006A16  0E00               	movlw	0
 26622  006A18  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 26623  006A1A  0E00               	movlw	0
 26624  006A1C  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 26625  006A1E  0E00               	movlw	0
 26626  006A20  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 26627  006A22  0E00               	movlw	0
 26628  006A24  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 26629  006A26  ECB9  F03A         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 26630                           
 26631                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 26632  006A2A  0E02               	movlw	2
 26633  006A2C  0012               	return		;funcret
 26634  006A2E                     __end_ofi2_rdBlkRegCompleteHandler:
 26635                           	opt callstack 0
 26636                           
 26637 ;; *************** function i2_wr1RegCompleteHandler *****************
 26638 ;; Defined at:
 26639 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 26640 ;; Parameters:    Size  Location     Type
 26641 ;;  ptr             2    9[COMRAM] PTR void 
 26642 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26643 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26644 ;; Auto vars:     Size  Location     Type
 26645 ;;		None
 26646 ;; Return value:  Size  Location     Type
 26647 ;;                  1    wreg      enum E358
 26648 ;; Registers used:
 26649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26650 ;; Tracked objects:
 26651 ;;		On entry : 3F/1
 26652 ;;		On exit  : 0/0
 26653 ;;		Unchanged: 0/0
 26654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26659 ;;Total ram usage:        2 bytes
 26660 ;; Hardware stack levels used:    1
 26661 ;; Hardware stack levels required when called:    2
 26662 ;; This function calls:
 26663 ;;		i2_I2C2_SetBuffer
 26664 ;;		i2_I2C2_SetDataCompleteCallback
 26665 ;; This function is called by:
 26666 ;;		_I2C2_DO_RX_EMPTY
 26667 ;;		i2_I2C2_DO_RX_EMPTY
 26668 ;;		_I2C2_DO_TX_EMPTY
 26669 ;;		_I2C2_DO_TX
 26670 ;;		_I2C2_DO_ADDRESS_NACK
 26671 ;;		_I2C2_DO_BUS_COLLISION
 26672 ;; This function uses a non-reentrant model
 26673 ;;
 26674                           
 26675                           	psect	text177
 26676  0070D8                     __ptext177:
 26677                           	opt callstack 0
 26678  0070D8                     i2_wr1RegCompleteHandler:
 26679                           	opt callstack 10
 26680                           
 26681                           ; BSR set to: 1
 26682                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 26683                           
 26684                           ;incstack = 0
 26685  0070D8  0060  F028  F001   	movff	i2wr1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 26686  0070DE  0060  F02C  F002   	movff	i2wr1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 26687  0070E4  0E00               	movlw	0
 26688  0070E6  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 26689  0070E8  0E01               	movlw	1
 26690  0070EA  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 26691  0070EC  ECC9  F03A         	call	i2_I2C2_SetBuffer	;wreg free
 26692                           
 26693                           ; BSR set to: 1
 26694                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26695  0070F0  0E00               	movlw	0
 26696  0070F2  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 26697  0070F4  0E00               	movlw	0
 26698  0070F6  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 26699  0070F8  0E00               	movlw	0
 26700  0070FA  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 26701  0070FC  0E00               	movlw	0
 26702  0070FE  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 26703  007100  ECB9  F03A         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 26704                           
 26705                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 26706  007104  0E04               	movlw	4
 26707  007106  0012               	return		;funcret
 26708  007108                     __end_ofi2_wr1RegCompleteHandler:
 26709                           	opt callstack 0
 26710                           
 26711 ;; *************** function i2_rd2RegCompleteHandler *****************
 26712 ;; Defined at:
 26713 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 26714 ;; Parameters:    Size  Location     Type
 26715 ;;  ptr             2    9[COMRAM] PTR void 
 26716 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26717 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26718 ;; Auto vars:     Size  Location     Type
 26719 ;;		None
 26720 ;; Return value:  Size  Location     Type
 26721 ;;                  1    wreg      enum E358
 26722 ;; Registers used:
 26723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26724 ;; Tracked objects:
 26725 ;;		On entry : 3F/1
 26726 ;;		On exit  : 0/0
 26727 ;;		Unchanged: 0/0
 26728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26733 ;;Total ram usage:        2 bytes
 26734 ;; Hardware stack levels used:    1
 26735 ;; Hardware stack levels required when called:    2
 26736 ;; This function calls:
 26737 ;;		i2_I2C2_SetBuffer
 26738 ;;		i2_I2C2_SetDataCompleteCallback
 26739 ;; This function is called by:
 26740 ;;		_I2C2_DO_RX_EMPTY
 26741 ;;		i2_I2C2_DO_RX_EMPTY
 26742 ;;		_I2C2_DO_TX_EMPTY
 26743 ;;		_I2C2_DO_TX
 26744 ;;		_I2C2_DO_ADDRESS_NACK
 26745 ;;		_I2C2_DO_BUS_COLLISION
 26746 ;; This function uses a non-reentrant model
 26747 ;;
 26748                           
 26749                           	psect	text178
 26750  007108                     __ptext178:
 26751                           	opt callstack 0
 26752  007108                     i2_rd2RegCompleteHandler:
 26753                           	opt callstack 10
 26754                           
 26755                           ; BSR set to: 1
 26756                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 26757                           
 26758                           ;incstack = 0
 26759  007108  0060  F028  F001   	movff	i2rd2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 26760  00710E  0060  F02C  F002   	movff	i2rd2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 26761  007114  0E00               	movlw	0
 26762  007116  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 26763  007118  0E02               	movlw	2
 26764  00711A  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 26765  00711C  ECC9  F03A         	call	i2_I2C2_SetBuffer	;wreg free
 26766                           
 26767                           ; BSR set to: 1
 26768                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26769  007120  0E00               	movlw	0
 26770  007122  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 26771  007124  0E00               	movlw	0
 26772  007126  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 26773  007128  0E00               	movlw	0
 26774  00712A  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 26775  00712C  0E00               	movlw	0
 26776  00712E  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 26777  007130  ECB9  F03A         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 26778                           
 26779                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 26780  007134  0E02               	movlw	2
 26781  007136  0012               	return		;funcret
 26782  007138                     __end_ofi2_rd2RegCompleteHandler:
 26783                           	opt callstack 0
 26784                           
 26785 ;; *************** function i2_rd1RegCompleteHandler *****************
 26786 ;; Defined at:
 26787 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 26788 ;; Parameters:    Size  Location     Type
 26789 ;;  ptr             2    9[COMRAM] PTR void 
 26790 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26791 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26792 ;; Auto vars:     Size  Location     Type
 26793 ;;		None
 26794 ;; Return value:  Size  Location     Type
 26795 ;;                  1    wreg      enum E358
 26796 ;; Registers used:
 26797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26798 ;; Tracked objects:
 26799 ;;		On entry : 3F/1
 26800 ;;		On exit  : 0/0
 26801 ;;		Unchanged: 0/0
 26802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26807 ;;Total ram usage:        2 bytes
 26808 ;; Hardware stack levels used:    1
 26809 ;; Hardware stack levels required when called:    2
 26810 ;; This function calls:
 26811 ;;		i2_I2C2_SetBuffer
 26812 ;;		i2_I2C2_SetDataCompleteCallback
 26813 ;; This function is called by:
 26814 ;;		_I2C2_DO_RX_EMPTY
 26815 ;;		i2_I2C2_DO_RX_EMPTY
 26816 ;;		_I2C2_DO_TX_EMPTY
 26817 ;;		_I2C2_DO_TX
 26818 ;;		_I2C2_DO_ADDRESS_NACK
 26819 ;;		_I2C2_DO_BUS_COLLISION
 26820 ;; This function uses a non-reentrant model
 26821 ;;
 26822                           
 26823                           	psect	text179
 26824  007138                     __ptext179:
 26825                           	opt callstack 0
 26826  007138                     i2_rd1RegCompleteHandler:
 26827                           	opt callstack 10
 26828                           
 26829                           ; BSR set to: 1
 26830                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 26831                           
 26832                           ;incstack = 0
 26833  007138  0060  F028  F001   	movff	i2rd1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 26834  00713E  0060  F02C  F002   	movff	i2rd1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 26835  007144  0E00               	movlw	0
 26836  007146  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 26837  007148  0E01               	movlw	1
 26838  00714A  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 26839  00714C  ECC9  F03A         	call	i2_I2C2_SetBuffer	;wreg free
 26840                           
 26841                           ; BSR set to: 1
 26842                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26843  007150  0E00               	movlw	0
 26844  007152  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 26845  007154  0E00               	movlw	0
 26846  007156  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 26847  007158  0E00               	movlw	0
 26848  00715A  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 26849  00715C  0E00               	movlw	0
 26850  00715E  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 26851  007160  ECB9  F03A         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 26852                           
 26853                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 26854  007164  0E02               	movlw	2
 26855  007166  0012               	return		;funcret
 26856  007168                     __end_ofi2_rd1RegCompleteHandler:
 26857                           	opt callstack 0
 26858                           
 26859 ;; *************** function i2_wr2RegCompleteHandler *****************
 26860 ;; Defined at:
 26861 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 26862 ;; Parameters:    Size  Location     Type
 26863 ;;  ptr             2    9[COMRAM] PTR void 
 26864 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26865 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26866 ;; Auto vars:     Size  Location     Type
 26867 ;;		None
 26868 ;; Return value:  Size  Location     Type
 26869 ;;                  1    wreg      enum E358
 26870 ;; Registers used:
 26871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26872 ;; Tracked objects:
 26873 ;;		On entry : 3F/1
 26874 ;;		On exit  : 0/0
 26875 ;;		Unchanged: 0/0
 26876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26881 ;;Total ram usage:        2 bytes
 26882 ;; Hardware stack levels used:    1
 26883 ;; Hardware stack levels required when called:    2
 26884 ;; This function calls:
 26885 ;;		i2_I2C2_SetBuffer
 26886 ;;		i2_I2C2_SetDataCompleteCallback
 26887 ;; This function is called by:
 26888 ;;		_I2C2_DO_RX_EMPTY
 26889 ;;		i2_I2C2_DO_RX_EMPTY
 26890 ;;		_I2C2_DO_TX_EMPTY
 26891 ;;		_I2C2_DO_TX
 26892 ;;		_I2C2_DO_ADDRESS_NACK
 26893 ;;		_I2C2_DO_BUS_COLLISION
 26894 ;; This function uses a non-reentrant model
 26895 ;;
 26896                           
 26897                           	psect	text180
 26898  007168                     __ptext180:
 26899                           	opt callstack 0
 26900  007168                     i2_wr2RegCompleteHandler:
 26901                           	opt callstack 10
 26902                           
 26903                           ; BSR set to: 1
 26904                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 26905                           
 26906                           ;incstack = 0
 26907  007168  0060  F028  F001   	movff	i2wr2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 26908  00716E  0060  F02C  F002   	movff	i2wr2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 26909  007174  0E00               	movlw	0
 26910  007176  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 26911  007178  0E02               	movlw	2
 26912  00717A  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 26913  00717C  ECC9  F03A         	call	i2_I2C2_SetBuffer	;wreg free
 26914                           
 26915                           ; BSR set to: 1
 26916                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26917  007180  0E00               	movlw	0
 26918  007182  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 26919  007184  0E00               	movlw	0
 26920  007186  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 26921  007188  0E00               	movlw	0
 26922  00718A  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 26923  00718C  0E00               	movlw	0
 26924  00718E  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 26925  007190  ECB9  F03A         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 26926                           
 26927                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 26928  007194  0E04               	movlw	4
 26929  007196  0012               	return		;funcret
 26930  007198                     __end_ofi2_wr2RegCompleteHandler:
 26931                           	opt callstack 0
 26932                           
 26933 ;; *************** function i2_I2C2_SetDataCompleteCallback *****************
 26934 ;; Defined at:
 26935 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 26936 ;; Parameters:    Size  Location     Type
 26937 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 26938 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 26939 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 26940 ;;  ptr             2    7[COMRAM] PTR void 
 26941 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26942 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26943 ;; Auto vars:     Size  Location     Type
 26944 ;;		None
 26945 ;; Return value:  Size  Location     Type
 26946 ;;                  1    wreg      void 
 26947 ;; Registers used:
 26948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26949 ;; Tracked objects:
 26950 ;;		On entry : 3F/1
 26951 ;;		On exit  : 0/0
 26952 ;;		Unchanged: 0/0
 26953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26958 ;;Total ram usage:        4 bytes
 26959 ;; Hardware stack levels used:    1
 26960 ;; Hardware stack levels required when called:    1
 26961 ;; This function calls:
 26962 ;;		i2_I2C2_SetCallback
 26963 ;; This function is called by:
 26964 ;;		i2_rd1RegCompleteHandler
 26965 ;;		i2_rd2RegCompleteHandler
 26966 ;;		i2_wr1RegCompleteHandler
 26967 ;;		i2_wr2RegCompleteHandler
 26968 ;;		i2_rdBlkRegCompleteHandler
 26969 ;; This function uses a non-reentrant model
 26970 ;;
 26971                           
 26972                           	psect	text181
 26973  007572                     __ptext181:
 26974                           	opt callstack 0
 26975  007572                     i2_I2C2_SetDataCompleteCallback:
 26976                           	opt callstack 10
 26977                           
 26978                           ; BSR set to: 1
 26979                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 26980                           
 26981                           ;incstack = 0
 26982  007572  0060  F018  F001   	movff	i2I2C2_SetDataCompleteCallback@cb,i2I2C2_SetCallback@cb
 26983  007578  0060  F01C  F002   	movff	i2I2C2_SetDataCompleteCallback@cb+1,i2I2C2_SetCallback@cb+1
 26984  00757E  0060  F020  F003   	movff	i2I2C2_SetDataCompleteCallback@ptr,i2I2C2_SetCallback@ptr
 26985  007584  0060  F024  F004   	movff	i2I2C2_SetDataCompleteCallback@ptr+1,i2I2C2_SetCallback@ptr+1
 26986  00758A  0E00               	movlw	0
 26987  00758C  ECAE  F031         	call	i2_I2C2_SetCallback
 26988  007590  0012               	return		;funcret
 26989  007592                     __end_ofi2_I2C2_SetDataCompleteCallback:
 26990                           	opt callstack 0
 26991                           
 26992 ;; *************** function i2_I2C2_SetCallback *****************
 26993 ;; Defined at:
 26994 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 26995 ;; Parameters:    Size  Location     Type
 26996 ;;  idx             1    wreg     enum E16468
 26997 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 26998 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 26999 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 27000 ;;  ptr             2    2[COMRAM] PTR void 
 27001 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 27002 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 27003 ;; Auto vars:     Size  Location     Type
 27004 ;;  idx             1    4[COMRAM] enum E16468
 27005 ;; Return value:  Size  Location     Type
 27006 ;;                  1    wreg      void 
 27007 ;; Registers used:
 27008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27009 ;; Tracked objects:
 27010 ;;		On entry : 3F/1
 27011 ;;		On exit  : 0/0
 27012 ;;		Unchanged: 0/0
 27013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27018 ;;Total ram usage:        5 bytes
 27019 ;; Hardware stack levels used:    1
 27020 ;; This function calls:
 27021 ;;		Nothing
 27022 ;; This function is called by:
 27023 ;;		i2_I2C2_SetDataCompleteCallback
 27024 ;; This function uses a non-reentrant model
 27025 ;;
 27026                           
 27027                           	psect	text182
 27028  00635C                     __ptext182:
 27029                           	opt callstack 0
 27030  00635C                     i2_I2C2_SetCallback:
 27031                           	opt callstack 10
 27032                           
 27033                           ;incstack = 0
 27034                           ;i2I2C2_SetCallback@idx stored from wreg
 27035  00635C  6E05               	movwf	i2I2C2_SetCallback@idx^0,c
 27036                           
 27037                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 27038  00635E  5001               	movf	i2I2C2_SetCallback@cb^0,w,c
 27039  006360  1002               	iorwf	(i2I2C2_SetCallback@cb+1)^0,w,c
 27040  006362  B4D8               	btfsc	status,2,c
 27041  006364  D01D               	goto	i2l8211
 27042                           
 27043                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 27044  006366  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 27045  006368  0D02               	mullw	2
 27046  00636A  0E00               	movlw	low _I2C2_Status
 27047  00636C  24F3               	addwf	243,w,c
 27048  00636E  6ED9               	movwf	fsr2l,c
 27049  006370  0E01               	movlw	high _I2C2_Status
 27050  006372  20F4               	addwfc	prodh,w,c
 27051  006374  6EDA               	movwf	fsr2h,c
 27052  006376  0060  F007  FFDE   	movff	i2I2C2_SetCallback@cb,postinc2
 27053  00637C  0060  F00B  FFDD   	movff	i2I2C2_SetCallback@cb+1,postdec2
 27054                           
 27055                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 27056  006382  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 27057  006384  0D02               	mullw	2
 27058  006386  0E0C               	movlw	low (_I2C2_Status+12)
 27059  006388  24F3               	addwf	243,w,c
 27060  00638A  6ED9               	movwf	fsr2l,c
 27061  00638C  0E01               	movlw	high (_I2C2_Status+12)
 27062  00638E  20F4               	addwfc	prodh,w,c
 27063  006390  6EDA               	movwf	fsr2h,c
 27064  006392  0060  F00F  FFDE   	movff	i2I2C2_SetCallback@ptr,postinc2
 27065  006398  0060  F013  FFDD   	movff	i2I2C2_SetCallback@ptr+1,postdec2
 27066                           
 27067                           ;mcc_generated_files/i2c2_master.c: 340:     }
 27068  00639E  0012               	return	
 27069  0063A0                     i2l8211:
 27070                           
 27071                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 27072  0063A0  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 27073  0063A2  0D02               	mullw	2
 27074  0063A4  0E00               	movlw	low _I2C2_Status
 27075  0063A6  24F3               	addwf	243,w,c
 27076  0063A8  6ED9               	movwf	fsr2l,c
 27077  0063AA  0E01               	movlw	high _I2C2_Status
 27078  0063AC  20F4               	addwfc	prodh,w,c
 27079  0063AE  6EDA               	movwf	fsr2h,c
 27080  0063B0  0E18               	movlw	low i2_I2C2_CallbackReturnStop
 27081  0063B2  6EDE               	movwf	postinc2,c
 27082  0063B4  0E7A               	movlw	high i2_I2C2_CallbackReturnStop
 27083  0063B6  6EDD               	movwf	postdec2,c
 27084                           
 27085                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 27086  0063B8  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 27087  0063BA  0D02               	mullw	2
 27088  0063BC  0E0C               	movlw	low (_I2C2_Status+12)
 27089  0063BE  24F3               	addwf	243,w,c
 27090  0063C0  6ED9               	movwf	fsr2l,c
 27091  0063C2  0E01               	movlw	high (_I2C2_Status+12)
 27092  0063C4  20F4               	addwfc	prodh,w,c
 27093  0063C6  6EDA               	movwf	fsr2h,c
 27094  0063C8  0E00               	movlw	0
 27095  0063CA  6EDE               	movwf	postinc2,c
 27096  0063CC  0E00               	movlw	0
 27097  0063CE  6EDD               	movwf	postdec2,c
 27098  0063D0  0012               	return		;funcret
 27099  0063D2                     __end_ofi2_I2C2_SetCallback:
 27100                           	opt callstack 0
 27101                           
 27102 ;; *************** function i2_I2C2_SetBuffer *****************
 27103 ;; Defined at:
 27104 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 27105 ;; Parameters:    Size  Location     Type
 27106 ;;  buffer          2    0[COMRAM] PTR void 
 27107 ;;		 -> i2cBuff(80), write@i2cBuff(4), write4bits@i2cBuff(2), expanderWrite@i2cBuff(2), 
 27108 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 27109 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 27110 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 27111 ;;  bufferSize      2    2[COMRAM] unsigned int 
 27112 ;; Auto vars:     Size  Location     Type
 27113 ;;		None
 27114 ;; Return value:  Size  Location     Type
 27115 ;;                  1    wreg      void 
 27116 ;; Registers used:
 27117 ;;		wreg, status,2, status,0
 27118 ;; Tracked objects:
 27119 ;;		On entry : 3F/1
 27120 ;;		On exit  : 3F/1
 27121 ;;		Unchanged: 0/0
 27122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27126 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27127 ;;Total ram usage:        4 bytes
 27128 ;; Hardware stack levels used:    1
 27129 ;; This function calls:
 27130 ;;		Nothing
 27131 ;; This function is called by:
 27132 ;;		i2_rd1RegCompleteHandler
 27133 ;;		i2_rd2RegCompleteHandler
 27134 ;;		i2_wr1RegCompleteHandler
 27135 ;;		i2_wr2RegCompleteHandler
 27136 ;;		i2_rdBlkRegCompleteHandler
 27137 ;; This function uses a non-reentrant model
 27138 ;;
 27139                           
 27140                           	psect	text183
 27141  007592                     __ptext183:
 27142                           	opt callstack 0
 27143  007592                     i2_I2C2_SetBuffer:
 27144                           	opt callstack 11
 27145                           
 27146                           ; BSR set to: 1
 27147                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 27148                           
 27149                           ;incstack = 0
 27150  007592  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 27151  007594  0012               	return	
 27152                           
 27153                           ; BSR set to: 1
 27154                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 27155  007596  0060  F004  F11D   	movff	i2I2C2_SetBuffer@buffer,_I2C2_Status+29
 27156  00759C  0060  F008  F11E   	movff	i2I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 27157                           
 27158                           ; BSR set to: 1
 27159                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 27160  0075A2  0060  F00C  F11F   	movff	i2I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 27161  0075A8  0060  F010  F120   	movff	i2I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 27162                           
 27163                           ; BSR set to: 1
 27164                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 27165  0075AE  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 27166                           
 27167                           ; BSR set to: 1
 27168  0075B0  0012               	return		;funcret
 27169  0075B2                     __end_ofi2_I2C2_SetBuffer:
 27170                           	opt callstack 0
 27171                           
 27172 ;; *************** function _I2C2_ClearInterruptFlags *****************
 27173 ;; Defined at:
 27174 ;;		line 364 in file "mcc_generated_files/i2c2_master.c"
 27175 ;; Parameters:    Size  Location     Type
 27176 ;;		None
 27177 ;; Auto vars:     Size  Location     Type
 27178 ;;		None
 27179 ;; Return value:  Size  Location     Type
 27180 ;;                  1    wreg      void 
 27181 ;; Registers used:
 27182 ;;		wreg, status,2, cstack
 27183 ;; Tracked objects:
 27184 ;;		On entry : 3F/0
 27185 ;;		On exit  : 3F/3D
 27186 ;;		Unchanged: 0/0
 27187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27192 ;;Total ram usage:        0 bytes
 27193 ;; Hardware stack levels used:    1
 27194 ;; Hardware stack levels required when called:    1
 27195 ;; This function calls:
 27196 ;;		_I2C2_MasterClearCountFlag
 27197 ;;		_I2C2_MasterClearNackFlag
 27198 ;;		_I2C2_MasterClearStopFlag
 27199 ;;		_I2C2_MasterIsCountFlagSet
 27200 ;;		_I2C2_MasterIsNackFlagSet
 27201 ;;		_I2C2_MasterIsStopFlagSet
 27202 ;; This function is called by:
 27203 ;;		_I2C2_MasterFsm
 27204 ;; This function uses a non-reentrant model
 27205 ;;
 27206                           
 27207                           	psect	text184
 27208  007198                     __ptext184:
 27209                           	opt callstack 0
 27210  007198                     _I2C2_ClearInterruptFlags:
 27211                           	opt callstack 13
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;mcc_generated_files/i2c2_master.c: 366:     if(I2C2_MasterIsCountFlagSet())
 27215                           
 27216                           ; BSR set to: 1
 27217                           ;incstack = 0
 27218  007198  EC5C  F03C         	call	_I2C2_MasterIsCountFlagSet	;wreg free
 27219  00719C  0900               	iorlw	0
 27220  00719E  B4D8               	btfsc	status,2,c
 27221  0071A0  D003               	goto	i2l9407
 27222                           
 27223                           ; BSR set to: 61
 27224                           ;mcc_generated_files/i2c2_master.c: 367:     {;mcc_generated_files/i2c2_master.c: 368:  
      +                                 I2C2_MasterClearCountFlag();
 27225  0071A2  EC12  F03D         	call	_I2C2_MasterClearCountFlag	;wreg free
 27226                           
 27227                           ;mcc_generated_files/i2c2_master.c: 369:     }
 27228  0071A6  0012               	return	
 27229  0071A8                     i2l9407:
 27230                           
 27231                           ; BSR set to: 61
 27232  0071A8  EC8D  F03C         	call	_I2C2_MasterIsStopFlagSet	;wreg free
 27233  0071AC  0900               	iorlw	0
 27234  0071AE  B4D8               	btfsc	status,2,c
 27235  0071B0  D003               	goto	i2l9411
 27236                           
 27237                           ; BSR set to: 61
 27238                           ;mcc_generated_files/i2c2_master.c: 371:     {;mcc_generated_files/i2c2_master.c: 372:  
      +                                 I2C2_MasterClearStopFlag();
 27239  0071B2  EC0E  F03D         	call	_I2C2_MasterClearStopFlag	;wreg free
 27240                           
 27241                           ;mcc_generated_files/i2c2_master.c: 373:     }
 27242  0071B6  0012               	return	
 27243  0071B8                     i2l9411:
 27244                           
 27245                           ; BSR set to: 61
 27246  0071B8  EC93  F03C         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 27247  0071BC  0900               	iorlw	0
 27248  0071BE  B4D8               	btfsc	status,2,c
 27249  0071C0  0012               	return	
 27250                           
 27251                           ; BSR set to: 61
 27252                           ;mcc_generated_files/i2c2_master.c: 375:     {;mcc_generated_files/i2c2_master.c: 376:  
      +                                 I2C2_MasterClearNackFlag();
 27253  0071C2  EC10  F03D         	call	_I2C2_MasterClearNackFlag	;wreg free
 27254                           
 27255                           ; BSR set to: 61
 27256  0071C6  0012               	return		;funcret
 27257  0071C8                     __end_of_I2C2_ClearInterruptFlags:
 27258                           	opt callstack 0
 27259                           
 27260 ;; *************** function _I2C2_MasterIsStopFlagSet *****************
 27261 ;; Defined at:
 27262 ;;		line 746 in file "mcc_generated_files/i2c2_master.c"
 27263 ;; Parameters:    Size  Location     Type
 27264 ;;		None
 27265 ;; Auto vars:     Size  Location     Type
 27266 ;;		None
 27267 ;; Return value:  Size  Location     Type
 27268 ;;                  1    wreg      _Bool 
 27269 ;; Registers used:
 27270 ;;		wreg
 27271 ;; Tracked objects:
 27272 ;;		On entry : 3F/3D
 27273 ;;		On exit  : 3F/3D
 27274 ;;		Unchanged: 0/0
 27275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27280 ;;Total ram usage:        0 bytes
 27281 ;; Hardware stack levels used:    1
 27282 ;; This function calls:
 27283 ;;		Nothing
 27284 ;; This function is called by:
 27285 ;;		_I2C2_ClearInterruptFlags
 27286 ;; This function uses a non-reentrant model
 27287 ;;
 27288                           
 27289                           	psect	text185
 27290  00791A                     __ptext185:
 27291                           	opt callstack 0
 27292  00791A                     _I2C2_MasterIsStopFlagSet:
 27293                           	opt callstack 13
 27294                           
 27295                           ; BSR set to: 61
 27296                           ;mcc_generated_files/i2c2_master.c: 748:     return I2C2PIRbits.PCIF;
 27297                           
 27298                           ; BSR set to: 61
 27299                           ;incstack = 0
 27300  00791A  A563               	btfss	99,2,b	;volatile
 27301  00791C  D002               	goto	i2u760_40
 27302  00791E  0E01               	movlw	1
 27303  007920  0012               	return	
 27304  007922                     i2u760_40:
 27305  007922  0E00               	movlw	0
 27306                           
 27307                           ; BSR set to: 61
 27308  007924  0012               	return		;funcret
 27309  007926                     __end_of_I2C2_MasterIsStopFlagSet:
 27310                           	opt callstack 0
 27311                           
 27312 ;; *************** function _I2C2_MasterIsNackFlagSet *****************
 27313 ;; Defined at:
 27314 ;;		line 756 in file "mcc_generated_files/i2c2_master.c"
 27315 ;; Parameters:    Size  Location     Type
 27316 ;;		None
 27317 ;; Auto vars:     Size  Location     Type
 27318 ;;		None
 27319 ;; Return value:  Size  Location     Type
 27320 ;;                  1    wreg      _Bool 
 27321 ;; Registers used:
 27322 ;;		wreg
 27323 ;; Tracked objects:
 27324 ;;		On entry : 3F/3D
 27325 ;;		On exit  : 3F/3D
 27326 ;;		Unchanged: 0/0
 27327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27332 ;;Total ram usage:        0 bytes
 27333 ;; Hardware stack levels used:    1
 27334 ;; This function calls:
 27335 ;;		Nothing
 27336 ;; This function is called by:
 27337 ;;		_I2C2_ClearInterruptFlags
 27338 ;; This function uses a non-reentrant model
 27339 ;;
 27340                           
 27341                           	psect	text186
 27342  007926                     __ptext186:
 27343                           	opt callstack 0
 27344  007926                     _I2C2_MasterIsNackFlagSet:
 27345                           	opt callstack 13
 27346                           
 27347                           ; BSR set to: 61
 27348                           ;mcc_generated_files/i2c2_master.c: 758:     return I2C2ERRbits.NACKIF;
 27349                           
 27350                           ; BSR set to: 61
 27351                           ;incstack = 0
 27352  007926  A960               	btfss	96,4,b	;volatile
 27353  007928  D002               	goto	i2u761_40
 27354  00792A  0E01               	movlw	1
 27355  00792C  0012               	return	
 27356  00792E                     i2u761_40:
 27357  00792E  0E00               	movlw	0
 27358                           
 27359                           ; BSR set to: 61
 27360  007930  0012               	return		;funcret
 27361  007932                     __end_of_I2C2_MasterIsNackFlagSet:
 27362                           	opt callstack 0
 27363                           
 27364 ;; *************** function _I2C2_MasterIsCountFlagSet *****************
 27365 ;; Defined at:
 27366 ;;		line 751 in file "mcc_generated_files/i2c2_master.c"
 27367 ;; Parameters:    Size  Location     Type
 27368 ;;		None
 27369 ;; Auto vars:     Size  Location     Type
 27370 ;;		None
 27371 ;; Return value:  Size  Location     Type
 27372 ;;                  1    wreg      _Bool 
 27373 ;; Registers used:
 27374 ;;		wreg
 27375 ;; Tracked objects:
 27376 ;;		On entry : 3F/0
 27377 ;;		On exit  : 3F/3D
 27378 ;;		Unchanged: 0/0
 27379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27384 ;;Total ram usage:        0 bytes
 27385 ;; Hardware stack levels used:    1
 27386 ;; This function calls:
 27387 ;;		Nothing
 27388 ;; This function is called by:
 27389 ;;		_I2C2_ClearInterruptFlags
 27390 ;; This function uses a non-reentrant model
 27391 ;;
 27392                           
 27393                           	psect	text187
 27394  0078B8                     __ptext187:
 27395                           	opt callstack 0
 27396  0078B8                     _I2C2_MasterIsCountFlagSet:
 27397                           	opt callstack 13
 27398                           
 27399                           ; BSR set to: 0
 27400                           ;mcc_generated_files/i2c2_master.c: 753:     return I2C2PIRbits.CNTIF;
 27401                           
 27402                           ; BSR set to: 61
 27403                           ;incstack = 0
 27404  0078B8  013D               	movlb	61	; () banked
 27405  0078BA  AF63               	btfss	99,7,b	;volatile
 27406  0078BC  D002               	goto	i2u759_40
 27407  0078BE  0E01               	movlw	1
 27408  0078C0  0012               	return	
 27409  0078C2                     i2u759_40:
 27410  0078C2  0E00               	movlw	0
 27411                           
 27412                           ; BSR set to: 61
 27413  0078C4  0012               	return		;funcret
 27414  0078C6                     __end_of_I2C2_MasterIsCountFlagSet:
 27415                           	opt callstack 0
 27416                           
 27417 ;; *************** function _I2C2_MasterClearStopFlag *****************
 27418 ;; Defined at:
 27419 ;;		line 761 in file "mcc_generated_files/i2c2_master.c"
 27420 ;; Parameters:    Size  Location     Type
 27421 ;;		None
 27422 ;; Auto vars:     Size  Location     Type
 27423 ;;		None
 27424 ;; Return value:  Size  Location     Type
 27425 ;;                  1    wreg      void 
 27426 ;; Registers used:
 27427 ;;		None
 27428 ;; Tracked objects:
 27429 ;;		On entry : 3F/3D
 27430 ;;		On exit  : 3F/3D
 27431 ;;		Unchanged: 0/0
 27432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27437 ;;Total ram usage:        0 bytes
 27438 ;; Hardware stack levels used:    1
 27439 ;; This function calls:
 27440 ;;		Nothing
 27441 ;; This function is called by:
 27442 ;;		_I2C2_ClearInterruptFlags
 27443 ;; This function uses a non-reentrant model
 27444 ;;
 27445                           
 27446                           	psect	text188
 27447  007A1C                     __ptext188:
 27448                           	opt callstack 0
 27449  007A1C                     _I2C2_MasterClearStopFlag:
 27450                           	opt callstack 13
 27451                           
 27452                           ; BSR set to: 61
 27453                           ;mcc_generated_files/i2c2_master.c: 763:     I2C2PIRbits.PCIF = 0;
 27454                           
 27455                           ; BSR set to: 61
 27456                           ;incstack = 0
 27457  007A1C  9563               	bcf	99,2,b	;volatile
 27458                           
 27459                           ; BSR set to: 61
 27460  007A1E  0012               	return		;funcret
 27461  007A20                     __end_of_I2C2_MasterClearStopFlag:
 27462                           	opt callstack 0
 27463                           
 27464 ;; *************** function _I2C2_MasterClearNackFlag *****************
 27465 ;; Defined at:
 27466 ;;		line 771 in file "mcc_generated_files/i2c2_master.c"
 27467 ;; Parameters:    Size  Location     Type
 27468 ;;		None
 27469 ;; Auto vars:     Size  Location     Type
 27470 ;;		None
 27471 ;; Return value:  Size  Location     Type
 27472 ;;                  1    wreg      void 
 27473 ;; Registers used:
 27474 ;;		None
 27475 ;; Tracked objects:
 27476 ;;		On entry : 3F/3D
 27477 ;;		On exit  : 3F/3D
 27478 ;;		Unchanged: 0/0
 27479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27484 ;;Total ram usage:        0 bytes
 27485 ;; Hardware stack levels used:    1
 27486 ;; This function calls:
 27487 ;;		Nothing
 27488 ;; This function is called by:
 27489 ;;		_I2C2_ClearInterruptFlags
 27490 ;; This function uses a non-reentrant model
 27491 ;;
 27492                           
 27493                           	psect	text189
 27494  007A20                     __ptext189:
 27495                           	opt callstack 0
 27496  007A20                     _I2C2_MasterClearNackFlag:
 27497                           	opt callstack 13
 27498                           
 27499                           ; BSR set to: 61
 27500                           ;mcc_generated_files/i2c2_master.c: 773:     I2C2ERRbits.NACKIF = 0;
 27501                           
 27502                           ; BSR set to: 61
 27503                           ;incstack = 0
 27504  007A20  9960               	bcf	96,4,b	;volatile
 27505                           
 27506                           ; BSR set to: 61
 27507  007A22  0012               	return		;funcret
 27508  007A24                     __end_of_I2C2_MasterClearNackFlag:
 27509                           	opt callstack 0
 27510                           
 27511 ;; *************** function _I2C2_MasterClearCountFlag *****************
 27512 ;; Defined at:
 27513 ;;		line 766 in file "mcc_generated_files/i2c2_master.c"
 27514 ;; Parameters:    Size  Location     Type
 27515 ;;		None
 27516 ;; Auto vars:     Size  Location     Type
 27517 ;;		None
 27518 ;; Return value:  Size  Location     Type
 27519 ;;                  1    wreg      void 
 27520 ;; Registers used:
 27521 ;;		None
 27522 ;; Tracked objects:
 27523 ;;		On entry : 3F/3D
 27524 ;;		On exit  : 3F/3D
 27525 ;;		Unchanged: 0/0
 27526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27531 ;;Total ram usage:        0 bytes
 27532 ;; Hardware stack levels used:    1
 27533 ;; This function calls:
 27534 ;;		Nothing
 27535 ;; This function is called by:
 27536 ;;		_I2C2_ClearInterruptFlags
 27537 ;; This function uses a non-reentrant model
 27538 ;;
 27539                           
 27540                           	psect	text190
 27541  007A24                     __ptext190:
 27542                           	opt callstack 0
 27543  007A24                     _I2C2_MasterClearCountFlag:
 27544                           	opt callstack 13
 27545                           
 27546                           ; BSR set to: 61
 27547                           ;mcc_generated_files/i2c2_master.c: 768:     I2C2PIRbits.CNTIF = 0;
 27548                           
 27549                           ; BSR set to: 61
 27550                           ;incstack = 0
 27551  007A24  9F63               	bcf	99,7,b	;volatile
 27552                           
 27553                           ; BSR set to: 61
 27554  007A26  0012               	return		;funcret
 27555  007A28                     __end_of_I2C2_MasterClearCountFlag:
 27556                           	opt callstack 0
 27557                           
 27558 ;; *************** function _ADCC_ThresholdISR *****************
 27559 ;; Defined at:
 27560 ;;		line 307 in file "mcc_generated_files/adcc.c"
 27561 ;; Parameters:    Size  Location     Type
 27562 ;;		None
 27563 ;; Auto vars:     Size  Location     Type
 27564 ;;		None
 27565 ;; Return value:  Size  Location     Type
 27566 ;;                  1    wreg      void 
 27567 ;; Registers used:
 27568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27569 ;; Tracked objects:
 27570 ;;		On entry : 3F/39
 27571 ;;		On exit  : 0/0
 27572 ;;		Unchanged: 0/0
 27573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27578 ;;Total ram usage:        0 bytes
 27579 ;; Hardware stack levels used:    1
 27580 ;; Hardware stack levels required when called:   11
 27581 ;; This function calls:
 27582 ;;		Absolute function
 27583 ;;		_ADCC_DefaultInterruptHandler
 27584 ;;		_adcCaptureIsr
 27585 ;; This function is called by:
 27586 ;;		_INTERRUPT_InterruptManager
 27587 ;; This function uses a non-reentrant model
 27588 ;;
 27589                           
 27590                           	psect	text191
 27591  007530                     __ptext191:
 27592                           	opt callstack 0
 27593  007530                     _ADCC_ThresholdISR:
 27594                           	opt callstack 5
 27595                           
 27596                           ; BSR set to: 57
 27597                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADTIF = 0;
 27598                           
 27599                           ; BSR set to: 61
 27600                           ;incstack = 0
 27601  007530  97A1               	bcf	161,3,b	;volatile
 27602                           
 27603                           ; BSR set to: 57
 27604                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADTI_InterruptHandler)
 27605  007532  0102               	movlb	2	; () banked
 27606  007534  51EB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27607  007536  11EC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27608  007538  B4D8               	btfsc	status,2,c
 27609  00753A  0012               	return	
 27610                           
 27611                           ; BSR set to: 2
 27612                           ;mcc_generated_files/adcc.c: 313:         ADCC_ADTI_InterruptHandler();
 27613  00753C  D801               	call	i2u1454_48
 27614  00753E  0012               	return	
 27615  007540                     i2u1454_48:
 27616  007540  0005               	push	
 27617  007542  6EFA               	movwf	pclath,c
 27618  007544  51EB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27619  007546  6EFD               	movwf	tosl,c
 27620  007548  51EC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27621  00754A  6EFE               	movwf	tosh,c
 27622  00754C  6AFF               	clrf	tosu,c
 27623  00754E  50FA               	movf	pclath,w,c
 27624  007550  0012               	return		;indir
 27625  007552                     __end_of_ADCC_ThresholdISR:
 27626                           	opt callstack 0
 27627                           
 27628 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 27629 ;; Defined at:
 27630 ;;		line 319 in file "mcc_generated_files/adcc.c"
 27631 ;; Parameters:    Size  Location     Type
 27632 ;;		None
 27633 ;; Auto vars:     Size  Location     Type
 27634 ;;		None
 27635 ;; Return value:  Size  Location     Type
 27636 ;;                  1    wreg      void 
 27637 ;; Registers used:
 27638 ;;		None
 27639 ;; Tracked objects:
 27640 ;;		On entry : 3F/2
 27641 ;;		On exit  : 3F/2
 27642 ;;		Unchanged: 3F/0
 27643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27648 ;;Total ram usage:        0 bytes
 27649 ;; Hardware stack levels used:    1
 27650 ;; This function calls:
 27651 ;;		Nothing
 27652 ;; This function is called by:
 27653 ;;		_ADCC_Initialize
 27654 ;;		_ADCC_ThresholdISR
 27655 ;; This function uses a non-reentrant model
 27656 ;;
 27657                           
 27658                           	psect	text192
 27659  007A2C                     __ptext192:
 27660                           	opt callstack 0
 27661  007A2C                     _ADCC_DefaultInterruptHandler:
 27662                           	opt callstack 15
 27663                           
 27664                           ; BSR set to: 2
 27665                           
 27666                           ;incstack = 0
 27667  007A2C  0012               	return		;funcret
 27668  007A2E                     __end_of_ADCC_DefaultInterruptHandler:
 27669                           	opt callstack 0
 27670                           
 27671 ;; *************** function _adcCaptureIsr *****************
 27672 ;; Defined at:
 27673 ;;		line 42 in file "aCapture.c"
 27674 ;; Parameters:    Size  Location     Type
 27675 ;;		None
 27676 ;; Auto vars:     Size  Location     Type
 27677 ;;  adcData         4   22[BANK0 ] unsigned long 
 27678 ;;  adcSel          1   26[BANK0 ] enum E16104
 27679 ;; Return value:  Size  Location     Type
 27680 ;;                  1    wreg      void 
 27681 ;; Registers used:
 27682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27683 ;; Tracked objects:
 27684 ;;		On entry : 3F/2
 27685 ;;		On exit  : 0/0
 27686 ;;		Unchanged: 0/0
 27687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27689 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27690 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27691 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27692 ;;Total ram usage:       13 bytes
 27693 ;; Hardware stack levels used:    1
 27694 ;; Hardware stack levels required when called:   10
 27695 ;; This function calls:
 27696 ;;		_ADCC_GetFilterValue
 27697 ;;		i2_ADCC_StartConversion
 27698 ;;		i2___lmul
 27699 ;;		i2_adcGetCh
 27700 ;;		i2_printf
 27701 ;; This function is called by:
 27702 ;;		_aCaptureInit
 27703 ;;		_ADCC_ThresholdISR
 27704 ;; This function uses a non-reentrant model
 27705 ;;
 27706                           
 27707                           	psect	text193
 27708  003626                     __ptext193:
 27709                           	opt callstack 0
 27710  003626                     _adcCaptureIsr:
 27711                           	opt callstack 5
 27712                           
 27713                           ; BSR set to: 2
 27714                           ;aCapture.c: 45:     uint32_t adcData;;aCapture.c: 46:     aSrcTyp adcSel;;aCapture.c: 4
      +                          8:     adcData = ADCC_GetFilterValue();
 27715                           
 27716                           ; BSR set to: 2
 27717                           ;incstack = 0
 27718  003626  EC5C  F03B         	call	_ADCC_GetFilterValue	;wreg free
 27719  00362A  0060  F004  F076   	movff	?_ADCC_GetFilterValue,adcCaptureIsr@adcData
 27720  003630  0060  F008  F077   	movff	?_ADCC_GetFilterValue+1,adcCaptureIsr@adcData+1
 27721  003636  0100               	movlb	0	; () banked
 27722  003638  6B78               	clrf	(adcCaptureIsr@adcData+2)& (0+255),b
 27723  00363A  6B79               	clrf	(adcCaptureIsr@adcData+3)& (0+255),b
 27724                           
 27725                           ; BSR set to: 0
 27726                           ;aCapture.c: 50:     adcSel=curASrc;
 27727  00363C  0060  F360  F07A   	movff	_curASrc,adcCaptureIsr@adcSel
 27728                           
 27729                           ; BSR set to: 0
 27730                           ;aCapture.c: 53:     curASrc++;
 27731  003642  2BD8               	incf	_curASrc& (0+255),f,b
 27732                           
 27733                           ; BSR set to: 0
 27734                           ;aCapture.c: 54:     if (curASrc==3){
 27735  003644  0E03               	movlw	3
 27736  003646  19D8               	xorwf	_curASrc& (0+255),w,b
 27737  003648  A4D8               	btfss	status,2,c
 27738  00364A  D002               	goto	i2l14797
 27739                           
 27740                           ; BSR set to: 0
 27741                           ;aCapture.c: 55:         curASrc=0;
 27742  00364C  0E00               	movlw	0
 27743  00364E  6FD8               	movwf	_curASrc& (0+255),b
 27744  003650                     i2l14797:
 27745                           
 27746                           ; BSR set to: 0
 27747                           ;aCapture.c: 57:     if (curASrc <= AuxPSensor ){
 27748  003650  0E02               	movlw	2
 27749  003652  61D8               	cpfslt	_curASrc& (0+255),b
 27750  003654  D004               	goto	i2l1652
 27751                           
 27752                           ; BSR set to: 0
 27753                           ;aCapture.c: 58:         ADCON0bits.ADON = 0;
 27754  003656  013E               	movlb	62	; () banked
 27755  003658  9FF8               	bcf	248,7,b	;volatile
 27756                           
 27757                           ; BSR set to: 62
 27758                           ;aCapture.c: 60:         ADREF = 0x00;
 27759  00365A  0E00               	movlw	0
 27760  00365C  D003               	goto	L31
 27761  00365E                     i2l1652:
 27762                           
 27763                           ; BSR set to: 0
 27764                           ;aCapture.c: 62:         ADCON0bits.ADON = 0;
 27765  00365E  013E               	movlb	62	; () banked
 27766  003660  9FF8               	bcf	248,7,b	;volatile
 27767                           
 27768                           ; BSR set to: 62
 27769                           ;aCapture.c: 64:         ADREF = 0x03;
 27770  003662  0E03               	movlw	3
 27771  003664                     L31:
 27772  003664  6FFD               	movwf	253,b	;volatile
 27773                           
 27774                           ; BSR set to: 62
 27775                           ;aCapture.c: 66:     ADCC_StartConversion(adcGetCh(curASrc));
 27776  003666  0100               	movlb	0	; () banked
 27777  003668  51D8               	movf	_curASrc& (0+255),w,b
 27778  00366A  ECC8  F034         	call	i2_adcGetCh
 27779  00366E  EC00  F03C         	call	i2_ADCC_StartConversion
 27780                           
 27781                           ; BSR set to: 62
 27782                           ;aCapture.c: 69:     if (adcSel<3){
 27783  003672  0E03               	movlw	3
 27784  003674  0100               	movlb	0	; () banked
 27785  003676  617A               	cpfslt	adcCaptureIsr@adcSel& (0+255),b
 27786  003678  D164               	goto	i2l1654
 27787                           
 27788                           ; BSR set to: 0
 27789                           ;aCapture.c: 70:         resultTbl[adcSel]=adcData;
 27790  00367A  517A               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 27791  00367C  0D04               	mullw	4
 27792  00367E  0E5C               	movlw	low _resultTbl
 27793  003680  24F3               	addwf	243,w,c
 27794  003682  6ED9               	movwf	fsr2l,c
 27795  003684  0E01               	movlw	high _resultTbl
 27796  003686  20F4               	addwfc	prodh,w,c
 27797  003688  6EDA               	movwf	fsr2h,c
 27798  00368A  0060  F1DB  FFDE   	movff	adcCaptureIsr@adcData,postinc2
 27799  003690  0060  F1DF  FFDE   	movff	adcCaptureIsr@adcData+1,postinc2
 27800  003696  0060  F1E3  FFDE   	movff	adcCaptureIsr@adcData+2,postinc2
 27801  00369C  0060  F1E7  FFDE   	movff	adcCaptureIsr@adcData+3,postinc2
 27802                           
 27803                           ; BSR set to: 0
 27804                           ;aCapture.c: 72:         resultTblVal[adcSel]++;
 27805  0036A2  0E40               	movlw	low _resultTblVal
 27806  0036A4  257A               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 27807  0036A6  6ED9               	movwf	fsr2l,c
 27808  0036A8  6ADA               	clrf	fsr2h,c
 27809  0036AA  0E02               	movlw	high _resultTblVal
 27810  0036AC  22DA               	addwfc	fsr2h,f,c
 27811  0036AE  2ADF               	incf	indf2,f,c
 27812                           
 27813                           ; BSR set to: 0
 27814                           ;aCapture.c: 73:         if (resultTblVal[adcSel]==0){
 27815  0036B0  0E40               	movlw	low _resultTblVal
 27816  0036B2  257A               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 27817  0036B4  6ED9               	movwf	fsr2l,c
 27818  0036B6  6ADA               	clrf	fsr2h,c
 27819  0036B8  0E02               	movlw	high _resultTblVal
 27820  0036BA  22DA               	addwfc	fsr2h,f,c
 27821  0036BC  50DF               	movf	indf2,w,c
 27822  0036BE  A4D8               	btfss	status,2,c
 27823  0036C0  D008               	goto	i2l14817
 27824                           
 27825                           ; BSR set to: 0
 27826                           ;aCapture.c: 74:             resultTblVal[adcSel]=1;
 27827  0036C2  0E40               	movlw	low _resultTblVal
 27828  0036C4  257A               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 27829  0036C6  6ED9               	movwf	fsr2l,c
 27830  0036C8  6ADA               	clrf	fsr2h,c
 27831  0036CA  0E02               	movlw	high _resultTblVal
 27832  0036CC  22DA               	addwfc	fsr2h,f,c
 27833  0036CE  0E01               	movlw	1
 27834  0036D0  6EDF               	movwf	indf2,c
 27835  0036D2                     i2l14817:
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;aCapture.c: 77:         if (adcSel == MainPSensor) {
 27839  0036D2  517A               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 27840  0036D4  A4D8               	btfss	status,2,c
 27841  0036D6  0012               	return	
 27842                           
 27843                           ; BSR set to: 0
 27844                           ;aCapture.c: 80:             resultTbl[Flt0PSensor]=(3*resultTbl[Flt0PSensor]+(adcData<<
      +                          2))>>2;
 27845  0036D8  0060  F1D8  F06E   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 27846  0036DE  0060  F1DC  F06F   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 27847  0036E4  0060  F1E0  F070   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 27848  0036EA  0060  F1E4  F071   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 27849  0036F0  0E02               	movlw	2
 27850  0036F2                     i2u1416_45:
 27851  0036F2  90D8               	bcf	status,0,c
 27852  0036F4  376E               	rlcf	??_adcCaptureIsr& (0+255),f,b
 27853  0036F6  376F               	rlcf	(??_adcCaptureIsr+1)& (0+255),f,b
 27854  0036F8  3770               	rlcf	(??_adcCaptureIsr+2)& (0+255),f,b
 27855  0036FA  3771               	rlcf	(??_adcCaptureIsr+3)& (0+255),f,b
 27856  0036FC  2EE8               	decfsz	wreg,f,c
 27857  0036FE  D7F9               	goto	i2u1416_45
 27858  003700  0060  F5A0  F001   	movff	_resultTbl+12,i2___lmul@multiplier
 27859  003706  0060  F5A4  F002   	movff	_resultTbl+13,i2___lmul@multiplier+1
 27860  00370C  0060  F5A8  F003   	movff	_resultTbl+14,i2___lmul@multiplier+2
 27861  003712  0060  F5AC  F004   	movff	_resultTbl+15,i2___lmul@multiplier+3
 27862  003718  0E03               	movlw	3
 27863  00371A  6E05               	movwf	i2___lmul@multiplicand^0,c
 27864  00371C  0E00               	movlw	0
 27865  00371E  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 27866  003720  0E00               	movlw	0
 27867  003722  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 27868  003724  0E00               	movlw	0
 27869  003726  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 27870  003728  EC12  F033         	call	i2___lmul	;wreg free
 27871  00372C  516E               	movf	??_adcCaptureIsr& (0+255),w,b
 27872  00372E  2401               	addwf	?i2___lmul^0,w,c
 27873  003730  6F72               	movwf	(??_adcCaptureIsr+4)& (0+255),b
 27874  003732  516F               	movf	(??_adcCaptureIsr+1)& (0+255),w,b
 27875  003734  2002               	addwfc	(?i2___lmul+1)^0,w,c
 27876  003736  6F73               	movwf	(??_adcCaptureIsr+5)& (0+255),b
 27877  003738  5170               	movf	(??_adcCaptureIsr+2)& (0+255),w,b
 27878  00373A  2003               	addwfc	(?i2___lmul+2)^0,w,c
 27879  00373C  6F74               	movwf	(??_adcCaptureIsr+6)& (0+255),b
 27880  00373E  5171               	movf	(??_adcCaptureIsr+3)& (0+255),w,b
 27881  003740  2004               	addwfc	(?i2___lmul+3)^0,w,c
 27882  003742  6F75               	movwf	(??_adcCaptureIsr+7)& (0+255),b
 27883  003744  0E03               	movlw	3
 27884  003746  D005               	goto	i2u1417_40
 27885  003748                     i2u1417_45:
 27886  003748  90D8               	bcf	status,0,c
 27887  00374A  3375               	rrcf	(??_adcCaptureIsr+7)& (0+255),f,b
 27888  00374C  3374               	rrcf	(??_adcCaptureIsr+6)& (0+255),f,b
 27889  00374E  3373               	rrcf	(??_adcCaptureIsr+5)& (0+255),f,b
 27890  003750  3372               	rrcf	(??_adcCaptureIsr+4)& (0+255),f,b
 27891  003752                     i2u1417_40:
 27892  003752  2EE8               	decfsz	wreg,f,c
 27893  003754  D7F9               	goto	i2u1417_45
 27894  003756  0060  F1C8  F168   	movff	??_adcCaptureIsr+4,_resultTbl+12
 27895  00375C  0060  F1CC  F169   	movff	??_adcCaptureIsr+5,_resultTbl+13
 27896  003762  0060  F1D0  F16A   	movff	??_adcCaptureIsr+6,_resultTbl+14
 27897  003768  0060  F1D4  F16B   	movff	??_adcCaptureIsr+7,_resultTbl+15
 27898                           
 27899                           ;aCapture.c: 82:             resultTbl[Flt1PSensor]=(15*resultTbl[Flt1PSensor]+(adcData<
      +                          <4))>>4;
 27900  00376E  0060  F1D8  F06E   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 27901  003774  0060  F1DC  F06F   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 27902  00377A  0060  F1E0  F070   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 27903  003780  0060  F1E4  F071   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 27904  003786  0E04               	movlw	4
 27905  003788                     i2u1418_45:
 27906  003788  90D8               	bcf	status,0,c
 27907  00378A  376E               	rlcf	??_adcCaptureIsr& (0+255),f,b
 27908  00378C  376F               	rlcf	(??_adcCaptureIsr+1)& (0+255),f,b
 27909  00378E  3770               	rlcf	(??_adcCaptureIsr+2)& (0+255),f,b
 27910  003790  3771               	rlcf	(??_adcCaptureIsr+3)& (0+255),f,b
 27911  003792  2EE8               	decfsz	wreg,f,c
 27912  003794  D7F9               	goto	i2u1418_45
 27913  003796  0060  F5B0  F001   	movff	_resultTbl+16,i2___lmul@multiplier
 27914  00379C  0060  F5B4  F002   	movff	_resultTbl+17,i2___lmul@multiplier+1
 27915  0037A2  0060  F5B8  F003   	movff	_resultTbl+18,i2___lmul@multiplier+2
 27916  0037A8  0060  F5BC  F004   	movff	_resultTbl+19,i2___lmul@multiplier+3
 27917  0037AE  0E0F               	movlw	15
 27918  0037B0  6E05               	movwf	i2___lmul@multiplicand^0,c
 27919  0037B2  0E00               	movlw	0
 27920  0037B4  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 27921  0037B6  0E00               	movlw	0
 27922  0037B8  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 27923  0037BA  0E00               	movlw	0
 27924  0037BC  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 27925  0037BE  EC12  F033         	call	i2___lmul	;wreg free
 27926  0037C2  516E               	movf	??_adcCaptureIsr& (0+255),w,b
 27927  0037C4  2401               	addwf	?i2___lmul^0,w,c
 27928  0037C6  6F72               	movwf	(??_adcCaptureIsr+4)& (0+255),b
 27929  0037C8  516F               	movf	(??_adcCaptureIsr+1)& (0+255),w,b
 27930  0037CA  2002               	addwfc	(?i2___lmul+1)^0,w,c
 27931  0037CC  6F73               	movwf	(??_adcCaptureIsr+5)& (0+255),b
 27932  0037CE  5170               	movf	(??_adcCaptureIsr+2)& (0+255),w,b
 27933  0037D0  2003               	addwfc	(?i2___lmul+2)^0,w,c
 27934  0037D2  6F74               	movwf	(??_adcCaptureIsr+6)& (0+255),b
 27935  0037D4  5171               	movf	(??_adcCaptureIsr+3)& (0+255),w,b
 27936  0037D6  2004               	addwfc	(?i2___lmul+3)^0,w,c
 27937  0037D8  6F75               	movwf	(??_adcCaptureIsr+7)& (0+255),b
 27938  0037DA  0E05               	movlw	5
 27939  0037DC  D005               	goto	i2u1419_40
 27940  0037DE                     i2u1419_45:
 27941  0037DE  90D8               	bcf	status,0,c
 27942  0037E0  3375               	rrcf	(??_adcCaptureIsr+7)& (0+255),f,b
 27943  0037E2  3374               	rrcf	(??_adcCaptureIsr+6)& (0+255),f,b
 27944  0037E4  3373               	rrcf	(??_adcCaptureIsr+5)& (0+255),f,b
 27945  0037E6  3372               	rrcf	(??_adcCaptureIsr+4)& (0+255),f,b
 27946  0037E8                     i2u1419_40:
 27947  0037E8  2EE8               	decfsz	wreg,f,c
 27948  0037EA  D7F9               	goto	i2u1419_45
 27949  0037EC  0060  F1C8  F16C   	movff	??_adcCaptureIsr+4,_resultTbl+16
 27950  0037F2  0060  F1CC  F16D   	movff	??_adcCaptureIsr+5,_resultTbl+17
 27951  0037F8  0060  F1D0  F16E   	movff	??_adcCaptureIsr+6,_resultTbl+18
 27952  0037FE  0060  F1D4  F16F   	movff	??_adcCaptureIsr+7,_resultTbl+19
 27953                           
 27954                           ;aCapture.c: 84:             resultTbl[Flt2PSensor]=(63*resultTbl[Flt2PSensor]+(adcData<
      +                          <6))>>6;
 27955  003804  0060  F1D8  F06E   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 27956  00380A  0060  F1DC  F06F   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 27957  003810  0060  F1E0  F070   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 27958  003816  0060  F1E4  F071   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 27959  00381C  0E06               	movlw	6
 27960  00381E                     i2u1420_45:
 27961  00381E  90D8               	bcf	status,0,c
 27962  003820  376E               	rlcf	??_adcCaptureIsr& (0+255),f,b
 27963  003822  376F               	rlcf	(??_adcCaptureIsr+1)& (0+255),f,b
 27964  003824  3770               	rlcf	(??_adcCaptureIsr+2)& (0+255),f,b
 27965  003826  3771               	rlcf	(??_adcCaptureIsr+3)& (0+255),f,b
 27966  003828  2EE8               	decfsz	wreg,f,c
 27967  00382A  D7F9               	goto	i2u1420_45
 27968  00382C  0060  F5C0  F001   	movff	_resultTbl+20,i2___lmul@multiplier
 27969  003832  0060  F5C4  F002   	movff	_resultTbl+21,i2___lmul@multiplier+1
 27970  003838  0060  F5C8  F003   	movff	_resultTbl+22,i2___lmul@multiplier+2
 27971  00383E  0060  F5CC  F004   	movff	_resultTbl+23,i2___lmul@multiplier+3
 27972  003844  0E3F               	movlw	63
 27973  003846  6E05               	movwf	i2___lmul@multiplicand^0,c
 27974  003848  0E00               	movlw	0
 27975  00384A  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 27976  00384C  0E00               	movlw	0
 27977  00384E  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 27978  003850  0E00               	movlw	0
 27979  003852  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 27980  003854  EC12  F033         	call	i2___lmul	;wreg free
 27981  003858  516E               	movf	??_adcCaptureIsr& (0+255),w,b
 27982  00385A  2401               	addwf	?i2___lmul^0,w,c
 27983  00385C  6F72               	movwf	(??_adcCaptureIsr+4)& (0+255),b
 27984  00385E  516F               	movf	(??_adcCaptureIsr+1)& (0+255),w,b
 27985  003860  2002               	addwfc	(?i2___lmul+1)^0,w,c
 27986  003862  6F73               	movwf	(??_adcCaptureIsr+5)& (0+255),b
 27987  003864  5170               	movf	(??_adcCaptureIsr+2)& (0+255),w,b
 27988  003866  2003               	addwfc	(?i2___lmul+2)^0,w,c
 27989  003868  6F74               	movwf	(??_adcCaptureIsr+6)& (0+255),b
 27990  00386A  5171               	movf	(??_adcCaptureIsr+3)& (0+255),w,b
 27991  00386C  2004               	addwfc	(?i2___lmul+3)^0,w,c
 27992  00386E  6F75               	movwf	(??_adcCaptureIsr+7)& (0+255),b
 27993  003870  0E07               	movlw	7
 27994  003872  D005               	goto	i2u1421_40
 27995  003874                     i2u1421_45:
 27996  003874  90D8               	bcf	status,0,c
 27997  003876  3375               	rrcf	(??_adcCaptureIsr+7)& (0+255),f,b
 27998  003878  3374               	rrcf	(??_adcCaptureIsr+6)& (0+255),f,b
 27999  00387A  3373               	rrcf	(??_adcCaptureIsr+5)& (0+255),f,b
 28000  00387C  3372               	rrcf	(??_adcCaptureIsr+4)& (0+255),f,b
 28001  00387E                     i2u1421_40:
 28002  00387E  2EE8               	decfsz	wreg,f,c
 28003  003880  D7F9               	goto	i2u1421_45
 28004  003882  0060  F1C8  F170   	movff	??_adcCaptureIsr+4,_resultTbl+20
 28005  003888  0060  F1CC  F171   	movff	??_adcCaptureIsr+5,_resultTbl+21
 28006  00388E  0060  F1D0  F172   	movff	??_adcCaptureIsr+6,_resultTbl+22
 28007  003894  0060  F1D4  F173   	movff	??_adcCaptureIsr+7,_resultTbl+23
 28008                           
 28009                           ;aCapture.c: 86:             resultTbl[Flt3PSensor]=(511*resultTbl[Flt3PSensor]+(adcData
      +                          <<9))>>9;
 28010  00389A  0060  F1D8  F06E   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 28011  0038A0  0060  F1DC  F06F   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 28012  0038A6  0060  F1E0  F070   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 28013  0038AC  0060  F1E4  F071   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 28014  0038B2  0E09               	movlw	9
 28015  0038B4                     i2u1422_45:
 28016  0038B4  90D8               	bcf	status,0,c
 28017  0038B6  376E               	rlcf	??_adcCaptureIsr& (0+255),f,b
 28018  0038B8  376F               	rlcf	(??_adcCaptureIsr+1)& (0+255),f,b
 28019  0038BA  3770               	rlcf	(??_adcCaptureIsr+2)& (0+255),f,b
 28020  0038BC  3771               	rlcf	(??_adcCaptureIsr+3)& (0+255),f,b
 28021  0038BE  2EE8               	decfsz	wreg,f,c
 28022  0038C0  D7F9               	goto	i2u1422_45
 28023  0038C2  0060  F5D0  F001   	movff	_resultTbl+24,i2___lmul@multiplier
 28024  0038C8  0060  F5D4  F002   	movff	_resultTbl+25,i2___lmul@multiplier+1
 28025  0038CE  0060  F5D8  F003   	movff	_resultTbl+26,i2___lmul@multiplier+2
 28026  0038D4  0060  F5DC  F004   	movff	_resultTbl+27,i2___lmul@multiplier+3
 28027  0038DA  0EFF               	movlw	255
 28028  0038DC  6E05               	movwf	i2___lmul@multiplicand^0,c
 28029  0038DE  0E01               	movlw	1
 28030  0038E0  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 28031  0038E2  0E00               	movlw	0
 28032  0038E4  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 28033  0038E6  0E00               	movlw	0
 28034  0038E8  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 28035  0038EA  EC12  F033         	call	i2___lmul	;wreg free
 28036  0038EE  516E               	movf	??_adcCaptureIsr& (0+255),w,b
 28037  0038F0  2401               	addwf	?i2___lmul^0,w,c
 28038  0038F2  6F72               	movwf	(??_adcCaptureIsr+4)& (0+255),b
 28039  0038F4  516F               	movf	(??_adcCaptureIsr+1)& (0+255),w,b
 28040  0038F6  2002               	addwfc	(?i2___lmul+1)^0,w,c
 28041  0038F8  6F73               	movwf	(??_adcCaptureIsr+5)& (0+255),b
 28042  0038FA  5170               	movf	(??_adcCaptureIsr+2)& (0+255),w,b
 28043  0038FC  2003               	addwfc	(?i2___lmul+2)^0,w,c
 28044  0038FE  6F74               	movwf	(??_adcCaptureIsr+6)& (0+255),b
 28045  003900  5171               	movf	(??_adcCaptureIsr+3)& (0+255),w,b
 28046  003902  2004               	addwfc	(?i2___lmul+3)^0,w,c
 28047  003904  6F75               	movwf	(??_adcCaptureIsr+7)& (0+255),b
 28048  003906  0E0A               	movlw	10
 28049  003908  D005               	goto	i2u1423_40
 28050  00390A                     i2u1423_45:
 28051  00390A  90D8               	bcf	status,0,c
 28052  00390C  3375               	rrcf	(??_adcCaptureIsr+7)& (0+255),f,b
 28053  00390E  3374               	rrcf	(??_adcCaptureIsr+6)& (0+255),f,b
 28054  003910  3373               	rrcf	(??_adcCaptureIsr+5)& (0+255),f,b
 28055  003912  3372               	rrcf	(??_adcCaptureIsr+4)& (0+255),f,b
 28056  003914                     i2u1423_40:
 28057  003914  2EE8               	decfsz	wreg,f,c
 28058  003916  D7F9               	goto	i2u1423_45
 28059  003918  0060  F1C8  F174   	movff	??_adcCaptureIsr+4,_resultTbl+24
 28060  00391E  0060  F1CC  F175   	movff	??_adcCaptureIsr+5,_resultTbl+25
 28061  003924  0060  F1D0  F176   	movff	??_adcCaptureIsr+6,_resultTbl+26
 28062  00392A  0060  F1D4  F177   	movff	??_adcCaptureIsr+7,_resultTbl+27
 28063                           
 28064                           ; BSR set to: 0
 28065                           ;aCapture.c: 88:             resultTblVal[Flt0PSensor]=resultTblVal[MainPSensor];
 28066  003930  C240  F243         	movff	_resultTblVal,_resultTblVal+3
 28067                           
 28068                           ; BSR set to: 0
 28069                           ;aCapture.c: 89:             resultTblVal[Flt1PSensor]=resultTblVal[MainPSensor];
 28070  003934  C240  F244         	movff	_resultTblVal,_resultTblVal+4
 28071                           
 28072                           ; BSR set to: 0
 28073                           ;aCapture.c: 90:             resultTblVal[Flt2PSensor]=resultTblVal[MainPSensor];
 28074  003938  C240  F245         	movff	_resultTblVal,_resultTblVal+5
 28075                           
 28076                           ; BSR set to: 0
 28077                           ;aCapture.c: 91:             resultTblVal[Flt3PSensor]=resultTblVal[MainPSensor];
 28078  00393C  C240  F246         	movff	_resultTblVal,_resultTblVal+6
 28079  003940  0012               	return	
 28080  003942                     i2l1654:
 28081                           
 28082                           ; BSR set to: 0
 28083                           ;aCapture.c: 95:         LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",101);
 28084  003942  94BA               	bcf	186,2,c	;volatile
 28085  003944  96BA               	bcf	186,3,c	;volatile
 28086                           
 28087                           ; BSR set to: 0
 28088  003946  0EEC               	movlw	low STR_10
 28089  003948  6F66               	movwf	i2printf@fmt& (0+255),b
 28090  00394A  0EFF               	movlw	high STR_10
 28091  00394C  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
 28092  00394E  0E00               	movlw	0
 28093  003950  6F69               	movwf	(?i2_printf+3)& (0+255),b
 28094  003952  0E65               	movlw	101
 28095  003954  6F68               	movwf	(?i2_printf+2)& (0+255),b
 28096  003956  ECE8  F039         	call	i2_printf	;wreg free
 28097  00395A  0012               	return		;funcret
 28098  00395C                     __end_of_adcCaptureIsr:
 28099                           	opt callstack 0
 28100                           
 28101 ;; *************** function i2_adcGetCh *****************
 28102 ;; Defined at:
 28103 ;;		line 24 in file "aCapture.c"
 28104 ;; Parameters:    Size  Location     Type
 28105 ;;  sel             1    wreg     enum E16104
 28106 ;; Auto vars:     Size  Location     Type
 28107 ;;  sel             1   94[COMRAM] enum E16104
 28108 ;; Return value:  Size  Location     Type
 28109 ;;                  1    wreg      enum E16053
 28110 ;; Registers used:
 28111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28112 ;; Tracked objects:
 28113 ;;		On entry : 3F/0
 28114 ;;		On exit  : 0/0
 28115 ;;		Unchanged: 0/0
 28116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28121 ;;Total ram usage:        3 bytes
 28122 ;; Hardware stack levels used:    1
 28123 ;; Hardware stack levels required when called:    9
 28124 ;; This function calls:
 28125 ;;		i2_printf
 28126 ;; This function is called by:
 28127 ;;		_adcCaptureIsr
 28128 ;; This function uses a non-reentrant model
 28129 ;;
 28130                           
 28131                           	psect	text194
 28132  006990                     __ptext194:
 28133                           	opt callstack 0
 28134  006990                     i2_adcGetCh:
 28135                           	opt callstack 5
 28136                           
 28137                           ;incstack = 0
 28138                           ;i2adcGetCh@sel stored from wreg
 28139  006990  6E5F               	movwf	i2adcGetCh@sel^0,c
 28140                           
 28141                           ;aCapture.c: 25:     switch (sel){
 28142  006992  D015               	goto	i2l14319
 28143  006994                     i2l14293:
 28144                           
 28145                           ;aCapture.c: 27:             return channel_ANE1;
 28146  006994  0E21               	movlw	33
 28147  006996  0012               	return	
 28148  006998                     i2l14299:
 28149                           
 28150                           ;aCapture.c: 30:             return channel_ANE2;
 28151  006998  0E22               	movlw	34
 28152  00699A  0012               	return	
 28153  00699C                     i2l14305:
 28154                           
 28155                           ;aCapture.c: 33:             return channel_ANE0;
 28156  00699C  0E20               	movlw	32
 28157  00699E  0012               	return	
 28158  0069A0                     i2l1648:
 28159                           
 28160                           ;aCapture.c: 37:            LATAbits.LATA2 = 0;LATAbits.LATA3 = 0;printf("Fatal %d",100)
      +                          ;
 28161  0069A0  94BA               	bcf	186,2,c	;volatile
 28162  0069A2  96BA               	bcf	186,3,c	;volatile
 28163  0069A4  0EEC               	movlw	low STR_10
 28164  0069A6  0100               	movlb	0	; () banked
 28165  0069A8  6F66               	movwf	i2printf@fmt& (0+255),b
 28166  0069AA  0EFF               	movlw	high STR_10
 28167  0069AC  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
 28168  0069AE  0E00               	movlw	0
 28169  0069B0  6F69               	movwf	(?i2_printf+3)& (0+255),b
 28170  0069B2  0E64               	movlw	100
 28171  0069B4  6F68               	movwf	(?i2_printf+2)& (0+255),b
 28172  0069B6  ECE8  F039         	call	i2_printf	;wreg free
 28173                           
 28174                           ;aCapture.c: 38:            return -1;
 28175  0069BA  0EFF               	movlw	255
 28176  0069BC  0012               	return	
 28177  0069BE                     i2l14319:
 28178  0069BE  505F               	movf	i2adcGetCh@sel^0,w,c
 28179  0069C0  6E5D               	movwf	??i2_adcGetCh^0,c
 28180  0069C2  6A5E               	clrf	(??i2_adcGetCh+1)^0,c
 28181                           
 28182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28183                           ; Switch size 1, requested type "simple"
 28184                           ; Number of cases is 1, Range of values is 0 to 0
 28185                           ; switch strategies available:
 28186                           ; Name         Instructions Cycles
 28187                           ; simple_byte            4     3 (average)
 28188                           ;	Chosen strategy is simple_byte
 28189  0069C4  505E               	movf	(??i2_adcGetCh+1)^0,w,c
 28190  0069C6  0A00               	xorlw	0	; case 0
 28191  0069C8  A4D8               	btfss	status,2,c
 28192  0069CA  D7EA               	goto	i2l1648
 28193                           
 28194                           ; Switch size 1, requested type "simple"
 28195                           ; Number of cases is 3, Range of values is 0 to 2
 28196                           ; switch strategies available:
 28197                           ; Name         Instructions Cycles
 28198                           ; simple_byte           10     6 (average)
 28199                           ;	Chosen strategy is simple_byte
 28200  0069CC  505D               	movf	??i2_adcGetCh^0,w,c
 28201  0069CE  0A00               	xorlw	0	; case 0
 28202  0069D0  B4D8               	btfsc	status,2,c
 28203  0069D2  D7E0               	goto	i2l14293
 28204  0069D4  0A01               	xorlw	1	; case 1
 28205  0069D6  B4D8               	btfsc	status,2,c
 28206  0069D8  D7DF               	goto	i2l14299
 28207  0069DA  0A03               	xorlw	3	; case 2
 28208  0069DC  B4D8               	btfsc	status,2,c
 28209  0069DE  D7DE               	goto	i2l14305
 28210  0069E0  D7DF               	goto	i2l1648
 28211  0069E2                     __end_ofi2_adcGetCh:
 28212                           	opt callstack 0
 28213                           
 28214 ;; *************** function i2_printf *****************
 28215 ;; Defined at:
 28216 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 28217 ;; Parameters:    Size  Location     Type
 28218 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
 28219 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 28220 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 28221 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 28222 ;;		 -> STR_41(5), STR_39(56), STR_38(20), STR_37(17), 
 28223 ;;		 -> STR_36(23), STR_35(20), STR_34(28), STR_33(5), 
 28224 ;;		 -> STR_24(37), STR_23(38), STR_21(37), STR_20(38), 
 28225 ;;		 -> STR_18(9), STR_17(9), lcdTopRow(20), STR_11(27), 
 28226 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 28227 ;;		 -> STR_3(10), lcdBtnRow(20), STR_1(16), 
 28228 ;; Auto vars:     Size  Location     Type
 28229 ;;  printf          2   12[BANK0 ] PTR void [1]
 28230 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 28231 ;;  printf          2    0        int 
 28232 ;; Return value:  Size  Location     Type
 28233 ;;                  2    6[BANK0 ] int 
 28234 ;; Registers used:
 28235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28236 ;; Tracked objects:
 28237 ;;		On entry : 3F/0
 28238 ;;		On exit  : 0/0
 28239 ;;		Unchanged: 0/0
 28240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28242 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28244 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28245 ;;Total ram usage:        8 bytes
 28246 ;; Hardware stack levels used:    1
 28247 ;; Hardware stack levels required when called:    8
 28248 ;; This function calls:
 28249 ;;		i2_vfprintf
 28250 ;; This function is called by:
 28251 ;;		_adcCaptureIsr
 28252 ;;		i2_adcGetCh
 28253 ;;		i2_aCaptGetResult
 28254 ;; This function uses a non-reentrant model
 28255 ;;
 28256                           
 28257                           	psect	text195
 28258  0073D0                     __ptext195:
 28259                           	opt callstack 0
 28260  0073D0                     i2_printf:
 28261                           	opt callstack 5
 28262                           
 28263                           ; BSR set to: 0
 28264                           
 28265                           ;incstack = 0
 28266  0073D0  0E68               	movlw	low (?i2_printf+2)
 28267  0073D2  6F6C               	movwf	i2printf@ap& (0+255),b
 28268  0073D4  6B6D               	clrf	(i2printf@ap+1)& (0+255),b
 28269                           
 28270                           ; BSR set to: 0
 28271  0073D6  0E00               	movlw	0
 28272  0073D8  6F60               	movwf	i2vfprintf@fp& (0+255),b
 28273  0073DA  0E00               	movlw	0
 28274  0073DC  6F61               	movwf	(i2vfprintf@fp+1)& (0+255),b
 28275  0073DE  0060  F198  F062   	movff	i2printf@fmt,i2vfprintf@fmt
 28276  0073E4  0060  F19C  F063   	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 28277  0073EA  0E6C               	movlw	low i2printf@ap
 28278  0073EC  6F64               	movwf	i2vfprintf@ap& (0+255),b
 28279  0073EE  6B65               	clrf	(i2vfprintf@ap+1)& (0+255),b
 28280  0073F0  ECB8  F030         	call	i2_vfprintf	;wreg free
 28281  0073F4  0012               	return		;funcret
 28282  0073F6                     __end_ofi2_printf:
 28283                           	opt callstack 0
 28284                           
 28285 ;; *************** function i2_vfprintf *****************
 28286 ;; Defined at:
 28287 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 28288 ;; Parameters:    Size  Location     Type
 28289 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 28290 ;;		 -> sprintf@f(6), NULL(0), 
 28291 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 28292 ;;		 -> STR_67(17), STR_66(18), STR_65(18), STR_64(20), 
 28293 ;;		 -> STR_63(20), STR_62(20), STR_61(20), STR_60(20), 
 28294 ;;		 -> STR_59(20), STR_58(20), STR_57(20), STR_56(21), 
 28295 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 28296 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 28297 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 28298 ;;		 -> STR_41(5), STR_40(10), STR_39(56), STR_38(20), 
 28299 ;;		 -> STR_37(17), STR_36(23), STR_35(20), STR_34(28), 
 28300 ;;		 -> STR_33(5), STR_27(18), STR_24(37), STR_23(38), 
 28301 ;;		 -> STR_21(37), STR_20(38), STR_19(19), STR_18(9), 
 28302 ;;		 -> STR_17(9), STR_13(17), lcdTopRow(20), STR_11(27), 
 28303 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 28304 ;;		 -> STR_4(17), STR_3(10), STR_2(17), lcdBtnRow(20), 
 28305 ;;		 -> STR_1(16), 
 28306 ;;  ap              2    4[BANK0 ] PTR PTR void 
 28307 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 28308 ;; Auto vars:     Size  Location     Type
 28309 ;;  vfprintf        2   90[COMRAM] PTR unsigned char 
 28310 ;;		 -> STR_67(17), STR_66(18), STR_65(18), STR_64(20), 
 28311 ;;		 -> STR_63(20), STR_62(20), STR_61(20), STR_60(20), 
 28312 ;;		 -> STR_59(20), STR_58(20), STR_57(20), STR_56(21), 
 28313 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 28314 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 28315 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 28316 ;;		 -> STR_41(5), STR_40(10), STR_39(56), STR_38(20), 
 28317 ;;		 -> STR_37(17), STR_36(23), STR_35(20), STR_34(28), 
 28318 ;;		 -> STR_33(5), STR_27(18), STR_24(37), STR_23(38), 
 28319 ;;		 -> STR_21(37), STR_20(38), STR_19(19), STR_18(9), 
 28320 ;;		 -> STR_17(9), STR_13(17), lcdTopRow(20), STR_11(27), 
 28321 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 28322 ;;		 -> STR_4(17), STR_3(10), STR_2(17), lcdBtnRow(20), 
 28323 ;;		 -> STR_1(16), 
 28324 ;; Return value:  Size  Location     Type
 28325 ;;                  2    0[BANK0 ] int 
 28326 ;; Registers used:
 28327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28328 ;; Tracked objects:
 28329 ;;		On entry : 3F/0
 28330 ;;		On exit  : 0/0
 28331 ;;		Unchanged: 0/0
 28332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28333 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28336 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28337 ;;Total ram usage:        8 bytes
 28338 ;; Hardware stack levels used:    1
 28339 ;; Hardware stack levels required when called:    7
 28340 ;; This function calls:
 28341 ;;		i2_vfpfcnvrt
 28342 ;; This function is called by:
 28343 ;;		i2_printf
 28344 ;; This function uses a non-reentrant model
 28345 ;;
 28346                           
 28347                           	psect	text196
 28348  006170                     __ptext196:
 28349                           	opt callstack 0
 28350  006170                     i2_vfprintf:
 28351                           	opt callstack 5
 28352                           
 28353                           ; BSR set to: 0
 28354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 28355                           
 28356                           ;incstack = 0
 28357  006170  0060  F188  F05B   	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 28358  006176  0060  F18C  F05C   	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 28359                           
 28360                           ; BSR set to: 0
 28361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 28362  00617C  0E00               	movlw	0
 28363  00617E  6FC1               	movwf	(_nout+1)& (0+255),b
 28364  006180  0E00               	movlw	0
 28365  006182  6FC0               	movwf	_nout& (0+255),b
 28366                           
 28367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 28368  006184  D015               	goto	i2l13831
 28369  006186                     i2l13829:
 28370                           
 28371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 28372  006186  0060  F180  F042   	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 28373  00618C  0060  F184  F043   	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 28374  006192  0E5B               	movlw	low i2vfprintf@cfmt
 28375  006194  6E44               	movwf	i2vfpfcnvrt@fmt^0,c
 28376  006196  0060  F190  F045   	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 28377  00619C  0060  F194  F046   	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 28378  0061A2  ECFC  F012         	call	i2_vfpfcnvrt	;wreg free
 28379  0061A6  5042               	movf	?i2_vfpfcnvrt^0,w,c
 28380  0061A8  0100               	movlb	0	; () banked
 28381  0061AA  27C0               	addwf	_nout& (0+255),f,b
 28382  0061AC  5043               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 28383  0061AE  23C1               	addwfc	(_nout+1)& (0+255),f,b
 28384  0061B0                     i2l13831:
 28385                           
 28386                           ; BSR set to: 0
 28387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 28388  0061B0  0060  F16F  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 28389  0061B6  0060  F173  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 28390  0061BC  0E00               	movlw	low (__mediumconst shr (0+16))
 28391  0061BE  6EF8               	movwf	tblptru,c
 28392  0061C0  0E0F               	movlw	(high __ramtop+-1)
 28393  0061C2  64F7               	cpfsgt	tblptrh,c
 28394  0061C4  D003               	bra	i2u1320_47
 28395  0061C6  0008               	tblrd		*
 28396  0061C8  50F5               	movf	tablat,w,c
 28397  0061CA  D007               	bra	i2u1320_40
 28398  0061CC                     i2u1320_47:
 28399  0061CC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28400  0061D2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28401  0061D8  50EF               	movf	indf0,w,c
 28402  0061DA                     i2u1320_40:
 28403  0061DA  0900               	iorlw	0
 28404  0061DC  A4D8               	btfss	status,2,c
 28405  0061DE  D7D3               	goto	i2l13829
 28406                           
 28407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 28408  0061E0  0060  F300  F060   	movff	_nout,?i2_vfprintf
 28409  0061E6  0060  F304  F061   	movff	_nout+1,?i2_vfprintf+1
 28410  0061EC  0012               	return		;funcret
 28411  0061EE                     __end_ofi2_vfprintf:
 28412                           	opt callstack 0
 28413                           
 28414 ;; *************** function i2_vfpfcnvrt *****************
 28415 ;; Defined at:
 28416 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 28417 ;; Parameters:    Size  Location     Type
 28418 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
 28419 ;;		 -> sprintf@f(6), NULL(0), 
 28420 ;;  fmt             1   67[COMRAM] PTR PTR unsigned char 
 28421 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 28422 ;;  ap              2   68[COMRAM] PTR PTR void 
 28423 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 28424 ;; Auto vars:     Size  Location     Type
 28425 ;;  vfpfcnvrt       8   76[COMRAM] long long 
 28426 ;;  vfpfcnvrt       8    0        unsigned long long 
 28427 ;;  vfpfcnvrt       4    0        unsigned long long 
 28428 ;;  vfpfcnvrt       3    0        unsigned char [3]
 28429 ;;  vfpfcnvrt       3    0        PTR unsigned char 
 28430 ;;  vfpfcnvrt       2   86[COMRAM] int 
 28431 ;;  vfpfcnvrt       2   84[COMRAM] PTR void 
 28432 ;;		 -> ?_printf(2), ?_sprintf(2), resultTbl(28), main@pInspOS(2), 
 28433 ;;		 -> main@pExpOS(2), 
 28434 ;;  vfpfcnvrt       2    0        int 
 28435 ;;  vfpfcnvrt       1    0        unsigned char 
 28436 ;; Return value:  Size  Location     Type
 28437 ;;                  2   65[COMRAM] int 
 28438 ;; Registers used:
 28439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28440 ;; Tracked objects:
 28441 ;;		On entry : 0/0
 28442 ;;		On exit  : 0/0
 28443 ;;		Unchanged: 0/0
 28444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28445 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28446 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28447 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28448 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28449 ;;Total ram usage:       25 bytes
 28450 ;; Hardware stack levels used:    1
 28451 ;; Hardware stack levels required when called:    6
 28452 ;; This function calls:
 28453 ;;		i2_atoi
 28454 ;;		i2_dtoa
 28455 ;;		i2_fputc
 28456 ;;		i2_isdigit
 28457 ;; This function is called by:
 28458 ;;		i2_vfprintf
 28459 ;; This function uses a non-reentrant model
 28460 ;;
 28461                           
 28462                           	psect	text197
 28463  0025F8                     __ptext197:
 28464                           	opt callstack 0
 28465  0025F8                     i2_vfpfcnvrt:
 28466                           	opt callstack 5
 28467                           
 28468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 28469                           
 28470                           ;incstack = 0
 28471  0025F8  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28472  0025FA  6ED9               	movwf	fsr2l,c
 28473  0025FC  6ADA               	clrf	fsr2h,c
 28474  0025FE  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 28475  002604  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 28476  00260A  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 28477  002610  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 28478  002616  0E00               	movlw	low (__mediumconst shr (0+16))
 28479  002618  6EF8               	movwf	tblptru,c
 28480  00261A  0E0F               	movlw	(high __ramtop+-1)
 28481  00261C  64F7               	cpfsgt	tblptrh,c
 28482  00261E  D003               	bra	i2u1295_47
 28483  002620  0008               	tblrd		*
 28484  002622  50F5               	movf	tablat,w,c
 28485  002624  D007               	bra	i2u1295_40
 28486  002626                     i2u1295_47:
 28487  002626  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28488  00262C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28489  002632  50EF               	movf	indf0,w,c
 28490  002634                     i2u1295_40:
 28491  002634  0A25               	xorlw	37
 28492  002636  A4D8               	btfss	status,2,c
 28493  002638  D22D               	goto	i2l13765
 28494                           
 28495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 28496  00263A  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28497  00263C  6ED9               	movwf	fsr2l,c
 28498  00263E  6ADA               	clrf	fsr2h,c
 28499  002640  2ADE               	incf	postinc2,f,c
 28500  002642  0E00               	movlw	0
 28501  002644  22DD               	addwfc	postdec2,f,c
 28502                           
 28503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 28504  002646  0E00               	movlw	0
 28505  002648  0100               	movlb	0	; () banked
 28506  00264A  6FC3               	movwf	(_width+1)& (0+255),b
 28507  00264C  0E00               	movlw	0
 28508  00264E  6FC2               	movwf	_width& (0+255),b
 28509  002650  C0C2  F0C6         	movff	_width,_flags
 28510  002654  C0C3  F0C7         	movff	_width+1,_flags+1
 28511                           
 28512                           ; BSR set to: 0
 28513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 28514  002658  69C4               	setf	_prec& (0+255),b
 28515  00265A  69C5               	setf	(_prec+1)& (0+255),b
 28516                           
 28517                           ; BSR set to: 0
 28518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 28519  00265C  0E00               	movlw	0
 28520  00265E  6E58               	movwf	(i2vfpfcnvrt@done+1)^0,c
 28521  002660  0E00               	movlw	0
 28522  002662  D018               	goto	L32
 28523  002664                     i2l13681:
 28524                           
 28525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 28526  002664  0100               	movlb	0	; () banked
 28527  002666  81C6               	bsf	_flags& (0+255),0,b
 28528  002668                     i2l13683:
 28529                           
 28530                           ; BSR set to: 0
 28531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 28532  002668  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28533  00266A  6ED9               	movwf	fsr2l,c
 28534  00266C  6ADA               	clrf	fsr2h,c
 28535  00266E  2ADE               	incf	postinc2,f,c
 28536  002670  0E00               	movlw	0
 28537  002672  22DD               	addwfc	postdec2,f,c
 28538                           
 28539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 28540  002674  D046               	goto	i2l13707
 28541  002676                     i2l13685:
 28542                           
 28543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 28544  002676  0100               	movlb	0	; () banked
 28545  002678  83C6               	bsf	_flags& (0+255),1,b
 28546  00267A  D7F6               	goto	i2l13683
 28547  00267C                     i2l13689:
 28548                           
 28549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 28550  00267C  0100               	movlb	0	; () banked
 28551  00267E  85C6               	bsf	_flags& (0+255),2,b
 28552  002680  D7F3               	goto	i2l13683
 28553  002682                     i2l13693:
 28554                           
 28555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 28556  002682  0100               	movlb	0	; () banked
 28557  002684  87C6               	bsf	_flags& (0+255),3,b
 28558  002686  D7F0               	goto	i2l13683
 28559  002688                     i2l13697:
 28560                           
 28561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 28562  002688  0100               	movlb	0	; () banked
 28563  00268A  89C6               	bsf	_flags& (0+255),4,b
 28564  00268C  D7ED               	goto	i2l13683
 28565  00268E                     i2l13701:
 28566                           
 28567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 28568  00268E  0E00               	movlw	0
 28569  002690  6E58               	movwf	(i2vfpfcnvrt@done+1)^0,c
 28570  002692  0E01               	movlw	1
 28571  002694                     L32:
 28572  002694  6E57               	movwf	i2vfpfcnvrt@done^0,c
 28573                           
 28574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 28575  002696  D035               	goto	i2l13707
 28576  002698                     i2l13705:
 28577  002698  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28578  00269A  6ED9               	movwf	fsr2l,c
 28579  00269C  6ADA               	clrf	fsr2h,c
 28580  00269E  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 28581  0026A4  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 28582  0026AA  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 28583  0026B0  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 28584  0026B6  0E00               	movlw	low (__mediumconst shr (0+16))
 28585  0026B8  6EF8               	movwf	tblptru,c
 28586  0026BA  0E0F               	movlw	(high __ramtop+-1)
 28587  0026BC  64F7               	cpfsgt	tblptrh,c
 28588  0026BE  D003               	bra	i2u1297_47
 28589  0026C0  0008               	tblrd		*
 28590  0026C2  50F5               	movf	tablat,w,c
 28591  0026C4  D007               	bra	i2u1297_40
 28592  0026C6                     i2u1297_47:
 28593  0026C6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28594  0026CC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28595  0026D2  50EF               	movf	indf0,w,c
 28596  0026D4                     i2u1297_40:
 28597  0026D4  6E49               	movwf	(??i2_vfpfcnvrt+2)^0,c
 28598  0026D6  6A4A               	clrf	(??i2_vfpfcnvrt+3)^0,c
 28599                           
 28600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28601                           ; Switch size 1, requested type "simple"
 28602                           ; Number of cases is 1, Range of values is 0 to 0
 28603                           ; switch strategies available:
 28604                           ; Name         Instructions Cycles
 28605                           ; simple_byte            4     3 (average)
 28606                           ;	Chosen strategy is simple_byte
 28607  0026D8  504A               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 28608  0026DA  0A00               	xorlw	0	; case 0
 28609  0026DC  A4D8               	btfss	status,2,c
 28610  0026DE  D7D7               	goto	i2l13701
 28611                           
 28612                           ; Switch size 1, requested type "simple"
 28613                           ; Number of cases is 5, Range of values is 32 to 48
 28614                           ; switch strategies available:
 28615                           ; Name         Instructions Cycles
 28616                           ; simple_byte           16     9 (average)
 28617                           ;	Chosen strategy is simple_byte
 28618  0026E0  5049               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 28619  0026E2  0A20               	xorlw	32	; case 32
 28620  0026E4  B4D8               	btfsc	status,2,c
 28621  0026E6  D7CD               	goto	i2l13693
 28622  0026E8  0A03               	xorlw	3	; case 35
 28623  0026EA  B4D8               	btfsc	status,2,c
 28624  0026EC  D7CD               	goto	i2l13697
 28625  0026EE  0A08               	xorlw	8	; case 43
 28626  0026F0  B4D8               	btfsc	status,2,c
 28627  0026F2  D7C4               	goto	i2l13689
 28628  0026F4  0A06               	xorlw	6	; case 45
 28629  0026F6  B4D8               	btfsc	status,2,c
 28630  0026F8  D7B5               	goto	i2l13681
 28631  0026FA  0A1D               	xorlw	29	; case 48
 28632  0026FC  B4D8               	btfsc	status,2,c
 28633  0026FE  D7BB               	goto	i2l13685
 28634  002700  D7C6               	goto	i2l13701
 28635  002702                     i2l13707:
 28636                           
 28637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 28638  002702  5057               	movf	i2vfpfcnvrt@done^0,w,c
 28639  002704  1058               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
 28640  002706  B4D8               	btfsc	status,2,c
 28641  002708  D7C7               	goto	i2l13705
 28642                           
 28643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 28644  00270A  0100               	movlb	0	; () banked
 28645  00270C  B1C6               	btfsc	_flags& (0+255),0,b
 28646                           
 28647                           ; BSR set to: 0
 28648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 28649  00270E  93C6               	bcf	_flags& (0+255),1,b
 28650                           
 28651                           ; BSR set to: 0
 28652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 28653  002710  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28654  002712  6ED9               	movwf	fsr2l,c
 28655  002714  6ADA               	clrf	fsr2h,c
 28656  002716  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 28657  00271C  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 28658  002722  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 28659  002728  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 28660  00272E  0E00               	movlw	low (__mediumconst shr (0+16))
 28661  002730  6EF8               	movwf	tblptru,c
 28662  002732  0E0F               	movlw	(high __ramtop+-1)
 28663  002734  64F7               	cpfsgt	tblptrh,c
 28664  002736  D003               	bra	i2u1300_47
 28665  002738  0008               	tblrd		*
 28666  00273A  50F5               	movf	tablat,w,c
 28667  00273C  D007               	bra	i2u1300_40
 28668  00273E                     i2u1300_47:
 28669  00273E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28670  002744  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28671  00274A  50EF               	movf	indf0,w,c
 28672  00274C                     i2u1300_40:
 28673  00274C  0A2A               	xorlw	42
 28674  00274E  A4D8               	btfss	status,2,c
 28675  002750  D02B               	goto	i2l13719
 28676                           
 28677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 28678  002752  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28679  002754  6ED9               	movwf	fsr2l,c
 28680  002756  6ADA               	clrf	fsr2h,c
 28681  002758  2ADE               	incf	postinc2,f,c
 28682  00275A  0E00               	movlw	0
 28683  00275C  22DD               	addwfc	postdec2,f,c
 28684                           
 28685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 28686  00275E  0060  F117  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 28687  002764  0060  F11B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 28688  00276A  006F FF7C  F047    	movff	indf2,??i2_vfpfcnvrt
 28689  002770  0E02               	movlw	2
 28690  002772  26DE               	addwf	postinc2,f,c
 28691  002774  006F FF7C  F048    	movff	indf2,??i2_vfpfcnvrt+1
 28692  00277A  0E00               	movlw	0
 28693  00277C  22DD               	addwfc	postdec2,f,c
 28694  00277E  0060  F11F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 28695  002784  0060  F123  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 28696  00278A  006F FF78  F0C2    	movff	postinc2,_width
 28697  002790  006F FF74  F0C3    	movff	postdec2,_width+1
 28698                           
 28699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 28700  002796  0100               	movlb	0	; () banked
 28701  002798  AFC3               	btfss	(_width+1)& (0+255),7,b
 28702  00279A  D055               	goto	i2u1306_40
 28703                           
 28704                           ; BSR set to: 0
 28705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 28706  00279C  81C6               	bsf	_flags& (0+255),0,b
 28707                           
 28708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 28709  00279E  6DC2               	negf	_width& (0+255),b
 28710  0027A0  1FC3               	comf	(_width+1)& (0+255),f,b
 28711  0027A2  B0D8               	btfsc	status,0,c
 28712  0027A4  2BC3               	incf	(_width+1)& (0+255),f,b
 28713  0027A6  D04F               	goto	i2u1306_40
 28714  0027A8                     i2l13719:
 28715                           
 28716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 28717  0027A8  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28718  0027AA  6ED9               	movwf	fsr2l,c
 28719  0027AC  6ADA               	clrf	fsr2h,c
 28720  0027AE  006F FF78  F008    	movff	postinc2,i2atoi@s
 28721  0027B4  006F FF74  F009    	movff	postdec2,i2atoi@s+1
 28722  0027BA  ECFA  F022         	call	i2_atoi	;wreg free
 28723  0027BE  0060  F020  F0C2   	movff	?i2_atoi,_width
 28724  0027C4  0060  F024  F0C3   	movff	?i2_atoi+1,_width+1
 28725                           
 28726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 28727  0027CA  D006               	goto	i2l13723
 28728  0027CC                     i2l13721:
 28729                           
 28730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 28731  0027CC  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28732  0027CE  6ED9               	movwf	fsr2l,c
 28733  0027D0  6ADA               	clrf	fsr2h,c
 28734  0027D2  2ADE               	incf	postinc2,f,c
 28735  0027D4  0E00               	movlw	0
 28736  0027D6  22DD               	addwfc	postdec2,f,c
 28737  0027D8                     i2l13723:
 28738  0027D8  0ED0               	movlw	208
 28739  0027DA  6E47               	movwf	??i2_vfpfcnvrt^0,c
 28740  0027DC  0EFF               	movlw	255
 28741  0027DE  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
 28742  0027E0  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28743  0027E2  6ED9               	movwf	fsr2l,c
 28744  0027E4  6ADA               	clrf	fsr2h,c
 28745  0027E6  006F FF78  F049    	movff	postinc2,??i2_vfpfcnvrt+2
 28746  0027EC  006F FF74  F04A    	movff	postdec2,??i2_vfpfcnvrt+3
 28747  0027F2  0060  F127  FFF6   	movff	??i2_vfpfcnvrt+2,tblptrl
 28748  0027F8  0060  F12B  FFF7   	movff	??i2_vfpfcnvrt+3,tblptrh
 28749  0027FE  0E00               	movlw	low (__mediumconst shr (0+16))
 28750  002800  6EF8               	movwf	tblptru,c
 28751  002802  0E0F               	movlw	(high __ramtop+-1)
 28752  002804  64F7               	cpfsgt	tblptrh,c
 28753  002806  D003               	bra	i2u1303_47
 28754  002808  0008               	tblrd		*
 28755  00280A  50F5               	movf	tablat,w,c
 28756  00280C  D007               	bra	i2u1303_40
 28757  00280E                     i2u1303_47:
 28758  00280E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28759  002814  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28760  00281A  50EF               	movf	indf0,w,c
 28761  00281C                     i2u1303_40:
 28762  00281C  6E4B               	movwf	(??i2_vfpfcnvrt+4)^0,c
 28763  00281E  6A4C               	clrf	(??i2_vfpfcnvrt+5)^0,c
 28764  002820  5047               	movf	??i2_vfpfcnvrt^0,w,c
 28765  002822  264B               	addwf	(??i2_vfpfcnvrt+4)^0,f,c
 28766  002824  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 28767  002826  224C               	addwfc	(??i2_vfpfcnvrt+5)^0,f,c
 28768  002828  504C               	movf	(??i2_vfpfcnvrt+5)^0,w,c
 28769  00282A  E106               	bnz	i2u1304_40
 28770  00282C  0E0A               	movlw	10
 28771  00282E  5C4B               	subwf	(??i2_vfpfcnvrt+4)^0,w,c
 28772  002830  B0D8               	btfsc	status,0,c
 28773  002832  D002               	goto	i2u1304_40
 28774  002834  0E01               	movlw	1
 28775  002836  D001               	goto	i2u1305_40
 28776  002838                     i2u1304_40:
 28777  002838  0E00               	movlw	0
 28778  00283A                     i2u1305_40:
 28779  00283A  6E59               	movwf	i2_vfpfcnvrt$3691^0,c
 28780  00283C  6A5A               	clrf	(i2_vfpfcnvrt$3691+1)^0,c
 28781  00283E  5059               	movf	i2_vfpfcnvrt$3691^0,w,c
 28782  002840  105A               	iorwf	(i2_vfpfcnvrt$3691+1)^0,w,c
 28783  002842  A4D8               	btfss	status,2,c
 28784  002844  D7C3               	goto	i2l13721
 28785  002846                     i2u1306_40:
 28786                           
 28787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 28788  002846  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28789  002848  6ED9               	movwf	fsr2l,c
 28790  00284A  6ADA               	clrf	fsr2h,c
 28791  00284C  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 28792  002852  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 28793  002858  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 28794  00285E  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 28795  002864  0E00               	movlw	low (__mediumconst shr (0+16))
 28796  002866  6EF8               	movwf	tblptru,c
 28797  002868  0E0F               	movlw	(high __ramtop+-1)
 28798  00286A  64F7               	cpfsgt	tblptrh,c
 28799  00286C  D003               	bra	i2u1307_47
 28800  00286E  0008               	tblrd		*
 28801  002870  50F5               	movf	tablat,w,c
 28802  002872  D007               	bra	i2u1307_40
 28803  002874                     i2u1307_47:
 28804  002874  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28805  00287A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28806  002880  50EF               	movf	indf0,w,c
 28807  002882                     i2u1307_40:
 28808  002882  0A64               	xorlw	100
 28809  002884  B4D8               	btfsc	status,2,c
 28810  002886  D021               	goto	i2u1310_40
 28811  002888  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28812  00288A  6ED9               	movwf	fsr2l,c
 28813  00288C  6ADA               	clrf	fsr2h,c
 28814  00288E  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 28815  002894  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 28816  00289A  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 28817  0028A0  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 28818  0028A6  0E00               	movlw	low (__mediumconst shr (0+16))
 28819  0028A8  6EF8               	movwf	tblptru,c
 28820  0028AA  0E0F               	movlw	(high __ramtop+-1)
 28821  0028AC  64F7               	cpfsgt	tblptrh,c
 28822  0028AE  D003               	bra	i2u1309_47
 28823  0028B0  0008               	tblrd		*
 28824  0028B2  50F5               	movf	tablat,w,c
 28825  0028B4  D007               	bra	i2u1309_40
 28826  0028B6                     i2u1309_47:
 28827  0028B6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28828  0028BC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28829  0028C2  50EF               	movf	indf0,w,c
 28830  0028C4                     i2u1309_40:
 28831  0028C4  0A69               	xorlw	105
 28832  0028C6  A4D8               	btfss	status,2,c
 28833  0028C8  D052               	goto	i2l13739
 28834  0028CA                     i2u1310_40:
 28835                           
 28836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 28837  0028CA  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28838  0028CC  6ED9               	movwf	fsr2l,c
 28839  0028CE  6ADA               	clrf	fsr2h,c
 28840  0028D0  2ADE               	incf	postinc2,f,c
 28841  0028D2  0E00               	movlw	0
 28842  0028D4  22DD               	addwfc	postdec2,f,c
 28843                           
 28844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 28845  0028D6  0060  F117  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 28846  0028DC  0060  F11B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 28847  0028E2  006F FF7C  F047    	movff	indf2,??i2_vfpfcnvrt
 28848  0028E8  0E02               	movlw	2
 28849  0028EA  26DE               	addwf	postinc2,f,c
 28850  0028EC  006F FF7C  F048    	movff	indf2,??i2_vfpfcnvrt+1
 28851  0028F2  0E00               	movlw	0
 28852  0028F4  22DD               	addwfc	postdec2,f,c
 28853  0028F6  0060  F11F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 28854  0028FC  0060  F123  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 28855  002902  006F FF78  F04D    	movff	postinc2,i2vfpfcnvrt@ll
 28856  002908  006F FF74  F04E    	movff	postdec2,i2vfpfcnvrt@ll+1
 28857  00290E  0E00               	movlw	0
 28858  002910  BE4E               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
 28859  002912  0EFF               	movlw	-1
 28860  002914  6E4F               	movwf	(i2vfpfcnvrt@ll+2)^0,c
 28861  002916  6E50               	movwf	(i2vfpfcnvrt@ll+3)^0,c
 28862  002918  6E51               	movwf	(i2vfpfcnvrt@ll+4)^0,c
 28863  00291A  6E52               	movwf	(i2vfpfcnvrt@ll+5)^0,c
 28864  00291C  6E53               	movwf	(i2vfpfcnvrt@ll+6)^0,c
 28865  00291E  6E54               	movwf	(i2vfpfcnvrt@ll+7)^0,c
 28866                           
 28867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 28868  002920  0060  F108  F01E   	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 28869  002926  0060  F10C  F01F   	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 28870  00292C  0060  F134  F020   	movff	i2vfpfcnvrt@ll,i2dtoa@d
 28871  002932  0060  F138  F021   	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 28872  002938  0060  F13C  F022   	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 28873  00293E  0060  F140  F023   	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 28874  002944  0060  F144  F024   	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 28875  00294A  0060  F148  F025   	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 28876  002950  0060  F14C  F026   	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 28877  002956  0060  F150  F027   	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 28878  00295C  EC17  F01E         	call	i2_dtoa	;wreg free
 28879  002960  0060  F078  F042   	movff	?i2_dtoa,?i2_vfpfcnvrt
 28880  002966  0060  F07C  F043   	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 28881  00296C  0012               	return	
 28882  00296E                     i2l13739:
 28883                           
 28884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 28885  00296E  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28886  002970  6ED9               	movwf	fsr2l,c
 28887  002972  6ADA               	clrf	fsr2h,c
 28888  002974  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 28889  00297A  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 28890  002980  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 28891  002986  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 28892  00298C  0E00               	movlw	low (__mediumconst shr (0+16))
 28893  00298E  6EF8               	movwf	tblptru,c
 28894  002990  0E0F               	movlw	(high __ramtop+-1)
 28895  002992  64F7               	cpfsgt	tblptrh,c
 28896  002994  D003               	bra	i2u1311_47
 28897  002996  0008               	tblrd		*
 28898  002998  50F5               	movf	tablat,w,c
 28899  00299A  D007               	bra	i2u1311_40
 28900  00299C                     i2u1311_47:
 28901  00299C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28902  0029A2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28903  0029A8  50EF               	movf	indf0,w,c
 28904  0029AA                     i2u1311_40:
 28905  0029AA  0A6E               	xorlw	110
 28906  0029AC  A4D8               	btfss	status,2,c
 28907  0029AE  D033               	goto	i2l13749
 28908                           
 28909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 28910  0029B0  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28911  0029B2  6ED9               	movwf	fsr2l,c
 28912  0029B4  6ADA               	clrf	fsr2h,c
 28913  0029B6  2ADE               	incf	postinc2,f,c
 28914  0029B8  0E00               	movlw	0
 28915  0029BA  22DD               	addwfc	postdec2,f,c
 28916                           
 28917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 28918  0029BC  0060  F117  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 28919  0029C2  0060  F11B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 28920  0029C8  006F FF7C  F047    	movff	indf2,??i2_vfpfcnvrt
 28921  0029CE  0E02               	movlw	2
 28922  0029D0  26DE               	addwf	postinc2,f,c
 28923  0029D2  006F FF7C  F048    	movff	indf2,??i2_vfpfcnvrt+1
 28924  0029D8  0E00               	movlw	0
 28925  0029DA  22DD               	addwfc	postdec2,f,c
 28926  0029DC  0060  F11F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 28927  0029E2  0060  F123  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 28928  0029E8  006F FF78  F055    	movff	postinc2,i2vfpfcnvrt@vp
 28929  0029EE  006F FF74  F056    	movff	postdec2,i2vfpfcnvrt@vp+1
 28930                           
 28931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 28932  0029F4  0060  F157  FFD9   	movff	i2vfpfcnvrt@vp,fsr2l
 28933  0029FA  0060  F15B  FFDA   	movff	i2vfpfcnvrt@vp+1,fsr2h
 28934  002A00  0060  F303  FFDE   	movff	_nout,postinc2
 28935  002A06  0060  F307  FFDD   	movff	_nout+1,postdec2
 28936  002A0C                     i2l13745:
 28937                           
 28938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
 28939  002A0C  0E00               	movlw	0
 28940  002A0E  6E43               	movwf	(?i2_vfpfcnvrt+1)^0,c
 28941  002A10  0E00               	movlw	0
 28942  002A12  6E42               	movwf	?i2_vfpfcnvrt^0,c
 28943  002A14  0012               	return	
 28944  002A16                     i2l13749:
 28945                           
 28946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 28947  002A16  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28948  002A18  6ED9               	movwf	fsr2l,c
 28949  002A1A  6ADA               	clrf	fsr2h,c
 28950  002A1C  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 28951  002A22  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 28952  002A28  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 28953  002A2E  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 28954  002A34  0E00               	movlw	low (__mediumconst shr (0+16))
 28955  002A36  6EF8               	movwf	tblptru,c
 28956  002A38  0E0F               	movlw	(high __ramtop+-1)
 28957  002A3A  64F7               	cpfsgt	tblptrh,c
 28958  002A3C  D003               	bra	i2u1313_47
 28959  002A3E  0008               	tblrd		*
 28960  002A40  50F5               	movf	tablat,w,c
 28961  002A42  D007               	bra	i2u1313_40
 28962  002A44                     i2u1313_47:
 28963  002A44  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28964  002A4A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28965  002A50  50EF               	movf	indf0,w,c
 28966  002A52                     i2u1313_40:
 28967  002A52  0A25               	xorlw	37
 28968  002A54  A4D8               	btfss	status,2,c
 28969  002A56  D017               	goto	i2l13759
 28970                           
 28971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 28972  002A58  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28973  002A5A  6ED9               	movwf	fsr2l,c
 28974  002A5C  6ADA               	clrf	fsr2h,c
 28975  002A5E  2ADE               	incf	postinc2,f,c
 28976  002A60  0E00               	movlw	0
 28977  002A62  22DD               	addwfc	postdec2,f,c
 28978                           
 28979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 28980  002A64  0E00               	movlw	0
 28981  002A66  6E04               	movwf	(i2fputc@c+1)^0,c
 28982  002A68  0E25               	movlw	37
 28983  002A6A  6E03               	movwf	i2fputc@c^0,c
 28984  002A6C  0060  F108  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 28985  002A72  0060  F10C  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 28986  002A78  ECBF  F02C         	call	i2_fputc	;wreg free
 28987  002A7C                     i2l13755:
 28988                           
 28989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 28990  002A7C  0E00               	movlw	0
 28991  002A7E  6E43               	movwf	(?i2_vfpfcnvrt+1)^0,c
 28992  002A80  0E01               	movlw	1
 28993  002A82  6E42               	movwf	?i2_vfpfcnvrt^0,c
 28994  002A84  0012               	return	
 28995  002A86                     i2l13759:
 28996                           
 28997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 28998  002A86  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 28999  002A88  6ED9               	movwf	fsr2l,c
 29000  002A8A  6ADA               	clrf	fsr2h,c
 29001  002A8C  2ADE               	incf	postinc2,f,c
 29002  002A8E  0E00               	movlw	0
 29003  002A90  22DD               	addwfc	postdec2,f,c
 29004  002A92  D7BC               	goto	i2l13745
 29005  002A94                     i2l13765:
 29006                           
 29007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 29008  002A94  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 29009  002A96  6ED9               	movwf	fsr2l,c
 29010  002A98  6ADA               	clrf	fsr2h,c
 29011  002A9A  006F FF78  F047    	movff	postinc2,??i2_vfpfcnvrt
 29012  002AA0  006F FF74  F048    	movff	postdec2,??i2_vfpfcnvrt+1
 29013  002AA6  0060  F11F  FFF6   	movff	??i2_vfpfcnvrt,tblptrl
 29014  002AAC  0060  F123  FFF7   	movff	??i2_vfpfcnvrt+1,tblptrh
 29015  002AB2  0E00               	movlw	low (__mediumconst shr (0+16))
 29016  002AB4  6EF8               	movwf	tblptru,c
 29017  002AB6  0E0F               	movlw	(high __ramtop+-1)
 29018  002AB8  64F7               	cpfsgt	tblptrh,c
 29019  002ABA  D003               	bra	i2u1315_47
 29020  002ABC  0008               	tblrd		*
 29021  002ABE  50F5               	movf	tablat,w,c
 29022  002AC0  D007               	bra	i2u1315_40
 29023  002AC2                     i2u1315_47:
 29024  002AC2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29025  002AC8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29026  002ACE  50EF               	movf	indf0,w,c
 29027  002AD0                     i2u1315_40:
 29028  002AD0  6E49               	movwf	(??i2_vfpfcnvrt+2)^0,c
 29029  002AD2  5049               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 29030  002AD4  6E03               	movwf	i2fputc@c^0,c
 29031  002AD6  6A04               	clrf	(i2fputc@c+1)^0,c
 29032  002AD8  0060  F108  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 29033  002ADE  0060  F10C  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 29034  002AE4  ECBF  F02C         	call	i2_fputc	;wreg free
 29035                           
 29036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 29037  002AE8  5044               	movf	i2vfpfcnvrt@fmt^0,w,c
 29038  002AEA  6ED9               	movwf	fsr2l,c
 29039  002AEC  6ADA               	clrf	fsr2h,c
 29040  002AEE  2ADE               	incf	postinc2,f,c
 29041  002AF0  0E00               	movlw	0
 29042  002AF2  22DD               	addwfc	postdec2,f,c
 29043  002AF4  D7C3               	goto	i2l13755
 29044  002AF6                     __end_ofi2_vfpfcnvrt:
 29045                           	opt callstack 0
 29046                           
 29047 ;; *************** function i2_dtoa *****************
 29048 ;; Defined at:
 29049 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 29050 ;; Parameters:    Size  Location     Type
 29051 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 29052 ;;		 -> sprintf@f(6), NULL(0), 
 29053 ;;  d               8   31[COMRAM] long long 
 29054 ;; Auto vars:     Size  Location     Type
 29055 ;;  dtoa            8   55[COMRAM] long long 
 29056 ;;  dtoa            2   63[COMRAM] int 
 29057 ;;  dtoa            2   53[COMRAM] int 
 29058 ;;  dtoa            2   51[COMRAM] int 
 29059 ;;  dtoa            2   49[COMRAM] int 
 29060 ;; Return value:  Size  Location     Type
 29061 ;;                  2   29[COMRAM] int 
 29062 ;; Registers used:
 29063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29064 ;; Tracked objects:
 29065 ;;		On entry : 0/0
 29066 ;;		On exit  : 0/0
 29067 ;;		Unchanged: 0/0
 29068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29069 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29070 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29071 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29072 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29073 ;;Total ram usage:       36 bytes
 29074 ;; Hardware stack levels used:    1
 29075 ;; Hardware stack levels required when called:    5
 29076 ;; This function calls:
 29077 ;;		i2___aodiv
 29078 ;;		i2___aomod
 29079 ;;		i2_abs
 29080 ;;		i2_pad
 29081 ;; This function is called by:
 29082 ;;		i2_vfpfcnvrt
 29083 ;; This function uses a non-reentrant model
 29084 ;;
 29085                           
 29086                           	psect	text198
 29087  003C2E                     __ptext198:
 29088                           	opt callstack 0
 29089  003C2E                     i2_dtoa:
 29090                           	opt callstack 5
 29091                           
 29092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 29093                           
 29094                           ;incstack = 0
 29095  003C2E  0060  F080  F038   	movff	i2dtoa@d,i2dtoa@n
 29096  003C34  0060  F084  F039   	movff	i2dtoa@d+1,i2dtoa@n+1
 29097  003C3A  0060  F088  F03A   	movff	i2dtoa@d+2,i2dtoa@n+2
 29098  003C40  0060  F08C  F03B   	movff	i2dtoa@d+3,i2dtoa@n+3
 29099  003C46  0060  F090  F03C   	movff	i2dtoa@d+4,i2dtoa@n+4
 29100  003C4C  0060  F094  F03D   	movff	i2dtoa@d+5,i2dtoa@n+5
 29101  003C52  0060  F098  F03E   	movff	i2dtoa@d+6,i2dtoa@n+6
 29102  003C58  0060  F09C  F03F   	movff	i2dtoa@d+7,i2dtoa@n+7
 29103                           
 29104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 29105  003C5E  AE3F               	btfss	(i2dtoa@n+7)^0,7,c
 29106  003C60  D002               	goto	i2u1242_40
 29107  003C62  0E01               	movlw	1
 29108  003C64  D001               	goto	i2u1243_40
 29109  003C66                     i2u1242_40:
 29110  003C66  0E00               	movlw	0
 29111  003C68                     i2u1243_40:
 29112  003C68  6E36               	movwf	i2dtoa@s^0,c
 29113  003C6A  6A37               	clrf	(i2dtoa@s+1)^0,c
 29114                           
 29115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 29116  003C6C  5036               	movf	i2dtoa@s^0,w,c
 29117  003C6E  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 29118  003C70  B4D8               	btfsc	status,2,c
 29119  003C72  D010               	goto	i2l13393
 29120                           
 29121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 29122  003C74  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 29123  003C76  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 29124  003C78  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 29125  003C7A  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 29126  003C7C  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 29127  003C7E  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 29128  003C80  1E39               	comf	(i2dtoa@n+1)^0,f,c
 29129  003C82  6C38               	negf	i2dtoa@n^0,c
 29130  003C84  0E00               	movlw	0
 29131  003C86  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 29132  003C88  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 29133  003C8A  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 29134  003C8C  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 29135  003C8E  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 29136  003C90  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 29137  003C92  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 29138  003C94                     i2l13393:
 29139                           
 29140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 29141  003C94  0100               	movlb	0	; () banked
 29142  003C96  AFC5               	btfss	(_prec+1)& (0+255),7,b
 29143                           
 29144                           ; BSR set to: 0
 29145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 29146  003C98  93C6               	bcf	_flags& (0+255),1,b
 29147                           
 29148                           ; BSR set to: 0
 29149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 29150  003C9A  BFC5               	btfsc	(_prec+1)& (0+255),7,b
 29151  003C9C  D005               	goto	i2u1246_40
 29152  003C9E  51C5               	movf	(_prec+1)& (0+255),w,b
 29153  003CA0  E108               	bnz	i2l2292
 29154  003CA2  05C4               	decf	_prec& (0+255),w,b
 29155  003CA4  B0D8               	btfsc	status,0,c
 29156  003CA6  D005               	goto	i2l2292
 29157  003CA8                     i2u1246_40:
 29158                           
 29159                           ; BSR set to: 0
 29160  003CA8  0E00               	movlw	0
 29161  003CAA  6E33               	movwf	(i2dtoa@p+1)^0,c
 29162  003CAC  0E01               	movlw	1
 29163  003CAE  6E32               	movwf	i2dtoa@p^0,c
 29164  003CB0  D006               	goto	i2l2294
 29165  003CB2                     i2l2292:
 29166                           
 29167                           ; BSR set to: 0
 29168  003CB2  0060  F310  F032   	movff	_prec,i2dtoa@p
 29169  003CB8  0060  F314  F033   	movff	_prec+1,i2dtoa@p+1
 29170  003CBE                     i2l2294:
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 29174  003CBE  0060  F308  F034   	movff	_width,i2dtoa@w
 29175  003CC4  0060  F30C  F035   	movff	_width+1,i2dtoa@w+1
 29176                           
 29177                           ; BSR set to: 0
 29178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 29179  003CCA  5036               	movf	i2dtoa@s^0,w,c
 29180  003CCC  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 29181  003CCE  A4D8               	btfss	status,2,c
 29182  003CD0  D002               	goto	i2u1248_40
 29183                           
 29184                           ; BSR set to: 0
 29185  003CD2  A5C6               	btfss	_flags& (0+255),2,b
 29186  003CD4  D003               	goto	i2l13407
 29187  003CD6                     i2u1248_40:
 29188                           
 29189                           ; BSR set to: 0
 29190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 29191  003CD6  0634               	decf	i2dtoa@w^0,f,c
 29192  003CD8  A0D8               	btfss	status,0,c
 29193  003CDA  0635               	decf	(i2dtoa@w+1)^0,f,c
 29194  003CDC                     i2l13407:
 29195                           
 29196                           ; BSR set to: 0
 29197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 29198  003CDC  0E00               	movlw	0
 29199  003CDE  6E41               	movwf	(i2dtoa@i+1)^0,c
 29200  003CE0  0E1F               	movlw	31
 29201  003CE2  6E40               	movwf	i2dtoa@i^0,c
 29202                           
 29203                           ; BSR set to: 0
 29204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 29205  003CE4  0E00               	movlw	0
 29206  003CE6  0102               	movlb	2	; () banked
 29207  003CE8  6F66               	movwf	(_dbuf+31)& (0+255),b
 29208                           
 29209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 29210  003CEA  D09E               	goto	i2l13421
 29211  003CEC                     i2l13411:
 29212                           
 29213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 29214  003CEC  0640               	decf	i2dtoa@i^0,f,c
 29215  003CEE  A0D8               	btfss	status,0,c
 29216  003CF0  0641               	decf	(i2dtoa@i+1)^0,f,c
 29217                           
 29218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 29219  003CF2  0E47               	movlw	low _dbuf
 29220  003CF4  2440               	addwf	i2dtoa@i^0,w,c
 29221  003CF6  6ED9               	movwf	fsr2l,c
 29222  003CF8  0E02               	movlw	high _dbuf
 29223  003CFA  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 29224  003CFC  6EDA               	movwf	fsr2h,c
 29225  003CFE  0060  F0E0  F001   	movff	i2dtoa@n,i2___aomod@dividend
 29226  003D04  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aomod@dividend+1
 29227  003D0A  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aomod@dividend+2
 29228  003D10  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aomod@dividend+3
 29229  003D16  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aomod@dividend+4
 29230  003D1C  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aomod@dividend+5
 29231  003D22  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aomod@dividend+6
 29232  003D28  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aomod@dividend+7
 29233  003D2E  0E0A               	movlw	10
 29234  003D30  6E09               	movwf	i2___aomod@divisor^0,c
 29235  003D32  0E00               	movlw	0
 29236  003D34  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 29237  003D36  0E00               	movlw	0
 29238  003D38  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 29239  003D3A  0E00               	movlw	0
 29240  003D3C  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 29241  003D3E  0E00               	movlw	0
 29242  003D40  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 29243  003D42  0E00               	movlw	0
 29244  003D44  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 29245  003D46  0E00               	movlw	0
 29246  003D48  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 29247  003D4A  0E00               	movlw	0
 29248  003D4C  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 29249  003D4E  EC3C  F028         	call	i2___aomod	;wreg free
 29250  003D52  0060  F004  F028   	movff	?i2___aomod,??i2_dtoa
 29251  003D58  0060  F008  F029   	movff	?i2___aomod+1,??i2_dtoa+1
 29252  003D5E  0060  F00C  F02A   	movff	?i2___aomod+2,??i2_dtoa+2
 29253  003D64  0060  F010  F02B   	movff	?i2___aomod+3,??i2_dtoa+3
 29254  003D6A  0060  F014  F02C   	movff	?i2___aomod+4,??i2_dtoa+4
 29255  003D70  0060  F018  F02D   	movff	?i2___aomod+5,??i2_dtoa+5
 29256  003D76  0060  F01C  F02E   	movff	?i2___aomod+6,??i2_dtoa+6
 29257  003D7C  0060  F020  F02F   	movff	?i2___aomod+7,??i2_dtoa+7
 29258  003D82  0060  F0A0  F013   	movff	??i2_dtoa,i2abs@a
 29259  003D88  0060  F0A8  F014   	movff	??i2_dtoa+2,i2abs@a+1
 29260  003D8E  ECA5  F036         	call	i2_abs	;wreg free
 29261  003D92  5013               	movf	?i2_abs^0,w,c
 29262  003D94  0F30               	addlw	48
 29263  003D96  6EDF               	movwf	indf2,c
 29264                           
 29265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 29266  003D98  0632               	decf	i2dtoa@p^0,f,c
 29267  003D9A  A0D8               	btfss	status,0,c
 29268  003D9C  0633               	decf	(i2dtoa@p+1)^0,f,c
 29269                           
 29270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 29271  003D9E  0634               	decf	i2dtoa@w^0,f,c
 29272  003DA0  A0D8               	btfss	status,0,c
 29273  003DA2  0635               	decf	(i2dtoa@w+1)^0,f,c
 29274                           
 29275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 29276  003DA4  0060  F0E0  F001   	movff	i2dtoa@n,i2___aodiv@dividend
 29277  003DAA  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 29278  003DB0  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 29279  003DB6  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 29280  003DBC  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 29281  003DC2  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 29282  003DC8  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 29283  003DCE  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 29284  003DD4  0E0A               	movlw	10
 29285  003DD6  6E09               	movwf	i2___aodiv@divisor^0,c
 29286  003DD8  0E00               	movlw	0
 29287  003DDA  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 29288  003DDC  0E00               	movlw	0
 29289  003DDE  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 29290  003DE0  0E00               	movlw	0
 29291  003DE2  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 29292  003DE4  0E00               	movlw	0
 29293  003DE6  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 29294  003DE8  0E00               	movlw	0
 29295  003DEA  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 29296  003DEC  0E00               	movlw	0
 29297  003DEE  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 29298  003DF0  0E00               	movlw	0
 29299  003DF2  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 29300  003DF4  ECF6  F026         	call	i2___aodiv	;wreg free
 29301  003DF8  0060  F004  F038   	movff	?i2___aodiv,i2dtoa@n
 29302  003DFE  0060  F008  F039   	movff	?i2___aodiv+1,i2dtoa@n+1
 29303  003E04  0060  F00C  F03A   	movff	?i2___aodiv+2,i2dtoa@n+2
 29304  003E0A  0060  F010  F03B   	movff	?i2___aodiv+3,i2dtoa@n+3
 29305  003E10  0060  F014  F03C   	movff	?i2___aodiv+4,i2dtoa@n+4
 29306  003E16  0060  F018  F03D   	movff	?i2___aodiv+5,i2dtoa@n+5
 29307  003E1C  0060  F01C  F03E   	movff	?i2___aodiv+6,i2dtoa@n+6
 29308  003E22  0060  F020  F03F   	movff	?i2___aodiv+7,i2dtoa@n+7
 29309  003E28                     i2l13421:
 29310                           
 29311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 29312  003E28  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 29313  003E2A  D020               	goto	i2u1253_40
 29314  003E2C  5041               	movf	(i2dtoa@i+1)^0,w,c
 29315  003E2E  E103               	bnz	i2u1249_40
 29316  003E30  0440               	decf	i2dtoa@i^0,w,c
 29317  003E32  A0D8               	btfss	status,0,c
 29318  003E34  D01B               	goto	i2u1253_40
 29319  003E36                     i2u1249_40:
 29320  003E36  5038               	movf	i2dtoa@n^0,w,c
 29321  003E38  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 29322  003E3A  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 29323  003E3C  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 29324  003E3E  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 29325  003E40  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 29326  003E42  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 29327  003E44  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 29328  003E46  A4D8               	btfss	status,2,c
 29329  003E48  D751               	goto	i2l13411
 29330  003E4A  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 29331  003E4C  D005               	goto	i2u1251_40
 29332  003E4E  5033               	movf	(i2dtoa@p+1)^0,w,c
 29333  003E50  E102               	bnz	i2u1251_41
 29334  003E52  0432               	decf	i2dtoa@p^0,w,c
 29335  003E54  B0D8               	btfsc	status,0,c
 29336  003E56                     i2u1251_41:
 29337  003E56  D74A               	goto	i2l13411
 29338  003E58                     i2u1251_40:
 29339  003E58  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 29340  003E5A  D008               	goto	i2u1253_40
 29341  003E5C  5035               	movf	(i2dtoa@w+1)^0,w,c
 29342  003E5E  E103               	bnz	i2u1252_40
 29343  003E60  0434               	decf	i2dtoa@w^0,w,c
 29344  003E62  A0D8               	btfss	status,0,c
 29345  003E64  D003               	goto	i2u1253_40
 29346  003E66                     i2u1252_40:
 29347  003E66  0100               	movlb	0	; () banked
 29348  003E68  B3C6               	btfsc	_flags& (0+255),1,b
 29349  003E6A  D740               	goto	i2l13411
 29350  003E6C                     i2u1253_40:
 29351                           
 29352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 29353  003E6C  5036               	movf	i2dtoa@s^0,w,c
 29354  003E6E  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 29355  003E70  A4D8               	btfss	status,2,c
 29356  003E72  D003               	goto	i2u1255_40
 29357  003E74  0100               	movlb	0	; () banked
 29358  003E76  A5C6               	btfss	_flags& (0+255),2,b
 29359  003E78  D018               	goto	i2l13445
 29360  003E7A                     i2u1255_40:
 29361                           
 29362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 29363  003E7A  0640               	decf	i2dtoa@i^0,f,c
 29364  003E7C  A0D8               	btfss	status,0,c
 29365  003E7E  0641               	decf	(i2dtoa@i+1)^0,f,c
 29366                           
 29367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 29368  003E80  5036               	movf	i2dtoa@s^0,w,c
 29369  003E82  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 29370  003E84  A4D8               	btfss	status,2,c
 29371  003E86  D004               	goto	i2l13441
 29372  003E88  0E00               	movlw	0
 29373  003E8A  6E31               	movwf	(i2_dtoa$3676+1)^0,c
 29374  003E8C  0E2B               	movlw	43
 29375  003E8E  D003               	goto	L33
 29376  003E90                     i2l13441:
 29377  003E90  0E00               	movlw	0
 29378  003E92  6E31               	movwf	(i2_dtoa$3676+1)^0,c
 29379  003E94  0E2D               	movlw	45
 29380  003E96                     L33:
 29381  003E96  6E30               	movwf	i2_dtoa$3676^0,c
 29382  003E98  0E47               	movlw	low _dbuf
 29383  003E9A  2440               	addwf	i2dtoa@i^0,w,c
 29384  003E9C  6ED9               	movwf	fsr2l,c
 29385  003E9E  0E02               	movlw	high _dbuf
 29386  003EA0  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 29387  003EA2  6EDA               	movwf	fsr2h,c
 29388  003EA4  0060  F0C3  FFDF   	movff	i2_dtoa$3676,indf2
 29389  003EAA                     i2l13445:
 29390                           
 29391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 29392  003EAA  0060  F078  F013   	movff	i2dtoa@fp,i2pad@fp
 29393  003EB0  0060  F07C  F014   	movff	i2dtoa@fp+1,i2pad@fp+1
 29394  003EB6  0E47               	movlw	low _dbuf
 29395  003EB8  2440               	addwf	i2dtoa@i^0,w,c
 29396  003EBA  6E15               	movwf	i2pad@buf^0,c
 29397  003EBC  0E02               	movlw	high _dbuf
 29398  003EBE  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 29399  003EC0  6E16               	movwf	(i2pad@buf+1)^0,c
 29400  003EC2  0060  F0D0  F017   	movff	i2dtoa@w,i2pad@p
 29401  003EC8  0060  F0D4  F018   	movff	i2dtoa@w+1,i2pad@p+1
 29402  003ECE  ECAA  F02A         	call	i2_pad	;wreg free
 29403  003ED2  0060  F04C  F01E   	movff	?i2_pad,?i2_dtoa
 29404  003ED8  0060  F050  F01F   	movff	?i2_pad+1,?i2_dtoa+1
 29405  003EDE  0012               	return		;funcret
 29406  003EE0                     __end_ofi2_dtoa:
 29407                           	opt callstack 0
 29408                           
 29409 ;; *************** function i2_pad *****************
 29410 ;; Defined at:
 29411 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 29412 ;; Parameters:    Size  Location     Type
 29413 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 29414 ;;		 -> sprintf@f(6), NULL(0), 
 29415 ;;  buf             2   20[COMRAM] PTR unsigned char 
 29416 ;;		 -> dbuf(32), 
 29417 ;;  p               2   22[COMRAM] int 
 29418 ;; Auto vars:     Size  Location     Type
 29419 ;;  pad             2   27[COMRAM] int 
 29420 ;;  pad             2   25[COMRAM] int 
 29421 ;; Return value:  Size  Location     Type
 29422 ;;                  2   18[COMRAM] int 
 29423 ;; Registers used:
 29424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29425 ;; Tracked objects:
 29426 ;;		On entry : 0/0
 29427 ;;		On exit  : 0/0
 29428 ;;		Unchanged: 0/0
 29429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29430 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29433 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29434 ;;Total ram usage:       11 bytes
 29435 ;; Hardware stack levels used:    1
 29436 ;; Hardware stack levels required when called:    4
 29437 ;; This function calls:
 29438 ;;		i2_fputc
 29439 ;;		i2_fputs
 29440 ;;		i2_strlen
 29441 ;; This function is called by:
 29442 ;;		i2_dtoa
 29443 ;; This function uses a non-reentrant model
 29444 ;;
 29445                           
 29446                           	psect	text199
 29447  005554                     __ptext199:
 29448                           	opt callstack 0
 29449  005554                     i2_pad:
 29450                           	opt callstack 5
 29451                           
 29452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 29453                           
 29454                           ;incstack = 0
 29455  005554  0100               	movlb	0	; () banked
 29456  005556  A1C6               	btfss	_flags& (0+255),0,b
 29457  005558  D00E               	goto	i2l13119
 29458                           
 29459                           ; BSR set to: 0
 29460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 29461  00555A  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 29462  005560  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 29463  005566  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 29464  00556C  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 29465  005572  EC86  F036         	call	i2_fputs	;wreg free
 29466  005576                     i2l13119:
 29467                           
 29468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 29469  005576  BE18               	btfsc	(i2pad@p+1)^0,7,c
 29470  005578  D007               	goto	i2l13123
 29471  00557A  0060  F05C  F01C   	movff	i2pad@p,i2pad@w
 29472  005580  0060  F060  F01D   	movff	i2pad@p+1,i2pad@w+1
 29473  005586  D004               	goto	i2l2281
 29474  005588                     i2l13123:
 29475  005588  0E00               	movlw	0
 29476  00558A  6E1D               	movwf	(i2pad@w+1)^0,c
 29477  00558C  0E00               	movlw	0
 29478  00558E  6E1C               	movwf	i2pad@w^0,c
 29479  005590                     i2l2281:
 29480                           
 29481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 29482  005590  0E00               	movlw	0
 29483  005592  6E1B               	movwf	(i2pad@i+1)^0,c
 29484  005594  0E00               	movlw	0
 29485  005596  6E1A               	movwf	i2pad@i^0,c
 29486                           
 29487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 29488  005598  D00E               	goto	i2l13129
 29489  00559A                     i2l13125:
 29490                           
 29491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 29492  00559A  0E00               	movlw	0
 29493  00559C  6E04               	movwf	(i2fputc@c+1)^0,c
 29494  00559E  0E20               	movlw	32
 29495  0055A0  6E03               	movwf	i2fputc@c^0,c
 29496  0055A2  0060  F04C  F005   	movff	i2pad@fp,i2fputc@fp
 29497  0055A8  0060  F050  F006   	movff	i2pad@fp+1,i2fputc@fp+1
 29498  0055AE  ECBF  F02C         	call	i2_fputc	;wreg free
 29499                           
 29500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 29501  0055B2  4A1A               	infsnz	i2pad@i^0,f,c
 29502  0055B4  2A1B               	incf	(i2pad@i+1)^0,f,c
 29503  0055B6                     i2l13129:
 29504                           
 29505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 29506  0055B6  501C               	movf	i2pad@w^0,w,c
 29507  0055B8  5C1A               	subwf	i2pad@i^0,w,c
 29508  0055BA  501B               	movf	(i2pad@i+1)^0,w,c
 29509  0055BC  0A80               	xorlw	128
 29510  0055BE  6E19               	movwf	??i2_pad^0,c
 29511  0055C0  501D               	movf	(i2pad@w+1)^0,w,c
 29512  0055C2  0A80               	xorlw	128
 29513  0055C4  5819               	subwfb	??i2_pad^0,w,c
 29514  0055C6  A0D8               	btfss	status,0,c
 29515  0055C8  D7E8               	goto	i2l13125
 29516                           
 29517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 29518  0055CA  0100               	movlb	0	; () banked
 29519  0055CC  B1C6               	btfsc	_flags& (0+255),0,b
 29520  0055CE  D00E               	goto	i2l13133
 29521                           
 29522                           ; BSR set to: 0
 29523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 29524  0055D0  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 29525  0055D6  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 29526  0055DC  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 29527  0055E2  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 29528  0055E8  EC86  F036         	call	i2_fputs	;wreg free
 29529  0055EC                     i2l13133:
 29530                           
 29531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 29532  0055EC  0060  F054  F001   	movff	i2pad@buf,i2strlen@s
 29533  0055F2  0060  F058  F002   	movff	i2pad@buf+1,i2strlen@s+1
 29534  0055F8  EC23  F038         	call	i2_strlen	;wreg free
 29535  0055FC  501C               	movf	i2pad@w^0,w,c
 29536  0055FE  2401               	addwf	?i2_strlen^0,w,c
 29537  005600  6E13               	movwf	?i2_pad^0,c
 29538  005602  501D               	movf	(i2pad@w+1)^0,w,c
 29539  005604  2002               	addwfc	(?i2_strlen+1)^0,w,c
 29540  005606  6E14               	movwf	(?i2_pad+1)^0,c
 29541  005608  0012               	return		;funcret
 29542  00560A                     __end_ofi2_pad:
 29543                           	opt callstack 0
 29544                           
 29545 ;; *************** function i2_strlen *****************
 29546 ;; Defined at:
 29547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 29548 ;; Parameters:    Size  Location     Type
 29549 ;;  s               2    0[COMRAM] PTR const unsigned char 
 29550 ;;		 -> dbuf(32), 
 29551 ;; Auto vars:     Size  Location     Type
 29552 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 29553 ;;		 -> dbuf(32), 
 29554 ;; Return value:  Size  Location     Type
 29555 ;;                  2    0[COMRAM] unsigned int 
 29556 ;; Registers used:
 29557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29558 ;; Tracked objects:
 29559 ;;		On entry : 0/0
 29560 ;;		On exit  : 0/0
 29561 ;;		Unchanged: 0/0
 29562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29567 ;;Total ram usage:        4 bytes
 29568 ;; Hardware stack levels used:    1
 29569 ;; This function calls:
 29570 ;;		Nothing
 29571 ;; This function is called by:
 29572 ;;		i2_pad
 29573 ;; This function uses a non-reentrant model
 29574 ;;
 29575                           
 29576                           	psect	text200
 29577  007046                     __ptext200:
 29578                           	opt callstack 0
 29579  007046                     i2_strlen:
 29580                           	opt callstack 8
 29581                           
 29582                           ;incstack = 0
 29583  007046  0060  F004  F003   	movff	i2strlen@s,i2strlen@a
 29584  00704C  0060  F008  F004   	movff	i2strlen@s+1,i2strlen@a+1
 29585  007052  D002               	goto	i2l12887
 29586  007054                     i2l12885:
 29587  007054  4A01               	infsnz	i2strlen@s^0,f,c
 29588  007056  2A02               	incf	(i2strlen@s+1)^0,f,c
 29589  007058                     i2l12887:
 29590  007058  0060  F007  FFD9   	movff	i2strlen@s,fsr2l
 29591  00705E  0060  F00B  FFDA   	movff	i2strlen@s+1,fsr2h
 29592  007064  50DF               	movf	indf2,w,c
 29593  007066  A4D8               	btfss	status,2,c
 29594  007068  D7F5               	goto	i2l12885
 29595  00706A  5003               	movf	i2strlen@a^0,w,c
 29596  00706C  5C01               	subwf	i2strlen@s^0,w,c
 29597  00706E  6E01               	movwf	?i2_strlen^0,c
 29598  007070  5004               	movf	(i2strlen@a+1)^0,w,c
 29599  007072  5802               	subwfb	(i2strlen@s+1)^0,w,c
 29600  007074  6E02               	movwf	(?i2_strlen+1)^0,c
 29601  007076  0012               	return		;funcret
 29602  007078                     __end_ofi2_strlen:
 29603                           	opt callstack 0
 29604                           
 29605 ;; *************** function i2_fputs *****************
 29606 ;; Defined at:
 29607 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 29608 ;; Parameters:    Size  Location     Type
 29609 ;;  s               2   11[COMRAM] PTR const unsigned char 
 29610 ;;		 -> dbuf(32), 
 29611 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 29612 ;;		 -> sprintf@f(6), NULL(0), 
 29613 ;; Auto vars:     Size  Location     Type
 29614 ;;  fputs           2   16[COMRAM] int 
 29615 ;;  fputs           1   15[COMRAM] unsigned char 
 29616 ;; Return value:  Size  Location     Type
 29617 ;;                  2   11[COMRAM] int 
 29618 ;; Registers used:
 29619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29620 ;; Tracked objects:
 29621 ;;		On entry : 3F/0
 29622 ;;		On exit  : 0/0
 29623 ;;		Unchanged: 0/0
 29624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29626 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29628 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29629 ;;Total ram usage:        7 bytes
 29630 ;; Hardware stack levels used:    1
 29631 ;; Hardware stack levels required when called:    3
 29632 ;; This function calls:
 29633 ;;		i2_fputc
 29634 ;; This function is called by:
 29635 ;;		i2_pad
 29636 ;; This function uses a non-reentrant model
 29637 ;;
 29638                           
 29639                           	psect	text201
 29640  006D0C                     __ptext201:
 29641                           	opt callstack 0
 29642  006D0C                     i2_fputs:
 29643                           	opt callstack 5
 29644                           
 29645                           ; BSR set to: 0
 29646                           
 29647                           ;incstack = 0
 29648  006D0C  0E00               	movlw	0
 29649  006D0E  6E12               	movwf	(i2fputs@i+1)^0,c
 29650  006D10  0E00               	movlw	0
 29651  006D12  6E11               	movwf	i2fputs@i^0,c
 29652  006D14  D00E               	goto	i2l12881
 29653  006D16                     i2l12877:
 29654  006D16  0060  F040  F003   	movff	i2fputs@c,i2fputc@c
 29655  006D1C  6A04               	clrf	(i2fputc@c+1)^0,c
 29656  006D1E  0060  F038  F005   	movff	i2fputs@fp,i2fputc@fp
 29657  006D24  0060  F03C  F006   	movff	i2fputs@fp+1,i2fputc@fp+1
 29658  006D2A  ECBF  F02C         	call	i2_fputc	;wreg free
 29659  006D2E  4A11               	infsnz	i2fputs@i^0,f,c
 29660  006D30  2A12               	incf	(i2fputs@i+1)^0,f,c
 29661  006D32                     i2l12881:
 29662  006D32  5011               	movf	i2fputs@i^0,w,c
 29663  006D34  240C               	addwf	i2fputs@s^0,w,c
 29664  006D36  6ED9               	movwf	fsr2l,c
 29665  006D38  5012               	movf	(i2fputs@i+1)^0,w,c
 29666  006D3A  200D               	addwfc	(i2fputs@s+1)^0,w,c
 29667  006D3C  6EDA               	movwf	fsr2h,c
 29668  006D3E  50DF               	movf	indf2,w,c
 29669  006D40  6E10               	movwf	i2fputs@c^0,c
 29670  006D42  5010               	movf	i2fputs@c^0,w,c
 29671  006D44  B4D8               	btfsc	status,2,c
 29672  006D46  0012               	return	
 29673  006D48  D7E6               	goto	i2l12877
 29674  006D4A                     __end_ofi2_fputs:
 29675                           	opt callstack 0
 29676                           
 29677 ;; *************** function i2_fputc *****************
 29678 ;; Defined at:
 29679 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 29680 ;; Parameters:    Size  Location     Type
 29681 ;;  c               2    2[COMRAM] int 
 29682 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 29683 ;;		 -> sprintf@f(6), NULL(0), 
 29684 ;; Auto vars:     Size  Location     Type
 29685 ;;		None
 29686 ;; Return value:  Size  Location     Type
 29687 ;;                  2    2[COMRAM] int 
 29688 ;; Registers used:
 29689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29690 ;; Tracked objects:
 29691 ;;		On entry : 0/0
 29692 ;;		On exit  : 0/0
 29693 ;;		Unchanged: 0/0
 29694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29697 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29698 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29699 ;;Total ram usage:        9 bytes
 29700 ;; Hardware stack levels used:    1
 29701 ;; Hardware stack levels required when called:    2
 29702 ;; This function calls:
 29703 ;;		i2_putch
 29704 ;; This function is called by:
 29705 ;;		i2_pad
 29706 ;;		i2_vfpfcnvrt
 29707 ;;		i2_fputs
 29708 ;; This function uses a non-reentrant model
 29709 ;;
 29710                           
 29711                           	psect	text202
 29712  00597E                     __ptext202:
 29713                           	opt callstack 0
 29714  00597E                     i2_fputc:
 29715                           	opt callstack 8
 29716                           
 29717                           ;incstack = 0
 29718  00597E  5005               	movf	i2fputc@fp^0,w,c
 29719  005980  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 29720  005982  B4D8               	btfsc	status,2,c
 29721  005984  D004               	goto	i2u1154_40
 29722  005986  5005               	movf	i2fputc@fp^0,w,c
 29723  005988  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 29724  00598A  A4D8               	btfss	status,2,c
 29725  00598C  D004               	goto	i2l12805
 29726  00598E                     i2u1154_40:
 29727  00598E  5003               	movf	i2fputc@c^0,w,c
 29728  005990  EC8F  F03B         	call	i2_putch
 29729  005994  0012               	return	
 29730  005996                     i2l12805:
 29731  005996  EE20 F004          	lfsr	2,4
 29732  00599A  5005               	movf	i2fputc@fp^0,w,c
 29733  00599C  26D9               	addwf	fsr2l,f,c
 29734  00599E  5006               	movf	(i2fputc@fp+1)^0,w,c
 29735  0059A0  22DA               	addwfc	fsr2h,f,c
 29736  0059A2  50DE               	movf	postinc2,w,c
 29737  0059A4  10DE               	iorwf	postinc2,w,c
 29738  0059A6  B4D8               	btfsc	status,2,c
 29739  0059A8  D016               	goto	i2u1156_40
 29740  0059AA  EE20 F004          	lfsr	2,4
 29741  0059AE  5005               	movf	i2fputc@fp^0,w,c
 29742  0059B0  26D9               	addwf	fsr2l,f,c
 29743  0059B2  5006               	movf	(i2fputc@fp+1)^0,w,c
 29744  0059B4  22DA               	addwfc	fsr2h,f,c
 29745  0059B6  EE10 F002          	lfsr	1,2
 29746  0059BA  5005               	movf	i2fputc@fp^0,w,c
 29747  0059BC  26E1               	addwf	fsr1l,f,c
 29748  0059BE  5006               	movf	(i2fputc@fp+1)^0,w,c
 29749  0059C0  22E2               	addwfc	fsr1h,f,c
 29750  0059C2  50DE               	movf	postinc2,w,c
 29751  0059C4  5CE6               	subwf	postinc1,w,c
 29752  0059C6  50E6               	movf	postinc1,w,c
 29753  0059C8  0A80               	xorlw	128
 29754  0059CA  6E0B               	movwf	(??i2_fputc+4)^0,c
 29755  0059CC  50DE               	movf	postinc2,w,c
 29756  0059CE  0A80               	xorlw	128
 29757  0059D0  580B               	subwfb	(??i2_fputc+4)^0,w,c
 29758  0059D2  B0D8               	btfsc	status,0,c
 29759  0059D4  0012               	return	
 29760  0059D6                     i2u1156_40:
 29761  0059D6  EE20 F002          	lfsr	2,2
 29762  0059DA  5005               	movf	i2fputc@fp^0,w,c
 29763  0059DC  26D9               	addwf	fsr2l,f,c
 29764  0059DE  5006               	movf	(i2fputc@fp+1)^0,w,c
 29765  0059E0  22DA               	addwfc	fsr2h,f,c
 29766  0059E2  006F FF78  F007    	movff	postinc2,??i2_fputc
 29767  0059E8  006F FF74  F008    	movff	postdec2,??i2_fputc+1
 29768  0059EE  0060  F017  FFD9   	movff	i2fputc@fp,fsr2l
 29769  0059F4  0060  F01B  FFDA   	movff	i2fputc@fp+1,fsr2h
 29770  0059FA  006F FF78  F009    	movff	postinc2,??i2_fputc+2
 29771  005A00  006F FF74  F00A    	movff	postdec2,??i2_fputc+3
 29772  005A06  5007               	movf	??i2_fputc^0,w,c
 29773  005A08  2409               	addwf	(??i2_fputc+2)^0,w,c
 29774  005A0A  6ED9               	movwf	fsr2l,c
 29775  005A0C  5008               	movf	(??i2_fputc+1)^0,w,c
 29776  005A0E  200A               	addwfc	(??i2_fputc+3)^0,w,c
 29777  005A10  6EDA               	movwf	fsr2h,c
 29778  005A12  0060  F00F  FFDF   	movff	i2fputc@c,indf2
 29779  005A18  EE20 F002          	lfsr	2,2
 29780  005A1C  5005               	movf	i2fputc@fp^0,w,c
 29781  005A1E  26D9               	addwf	fsr2l,f,c
 29782  005A20  5006               	movf	(i2fputc@fp+1)^0,w,c
 29783  005A22  22DA               	addwfc	fsr2h,f,c
 29784  005A24  2ADE               	incf	postinc2,f,c
 29785  005A26  0E00               	movlw	0
 29786  005A28  22DD               	addwfc	postdec2,f,c
 29787  005A2A  0012               	return		;funcret
 29788  005A2C                     __end_ofi2_fputc:
 29789                           	opt callstack 0
 29790                           
 29791 ;; *************** function i2_putch *****************
 29792 ;; Defined at:
 29793 ;;		line 18 in file "main.c"
 29794 ;; Parameters:    Size  Location     Type
 29795 ;;  byte            1    wreg     unsigned char 
 29796 ;; Auto vars:     Size  Location     Type
 29797 ;;  byte            1    1[COMRAM] unsigned char 
 29798 ;; Return value:  Size  Location     Type
 29799 ;;                  1    wreg      void 
 29800 ;; Registers used:
 29801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29802 ;; Tracked objects:
 29803 ;;		On entry : 0/0
 29804 ;;		On exit  : 3F/39
 29805 ;;		Unchanged: 0/0
 29806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29811 ;;Total ram usage:        1 bytes
 29812 ;; Hardware stack levels used:    1
 29813 ;; Hardware stack levels required when called:    1
 29814 ;; This function calls:
 29815 ;;		i2_UART1_Write
 29816 ;;		i2_UART1_is_tx_ready
 29817 ;; This function is called by:
 29818 ;;		i2_fputc
 29819 ;; This function uses a non-reentrant model
 29820 ;;
 29821                           
 29822                           	psect	text203
 29823  00771E                     __ptext203:
 29824                           	opt callstack 0
 29825  00771E                     i2_putch:
 29826                           	opt callstack 8
 29827                           
 29828                           ;incstack = 0
 29829                           ;i2putch@byte stored from wreg
 29830  00771E  6E02               	movwf	i2putch@byte^0,c
 29831  007720                     
 29832                           ;main.c: 19:     while (!UART1_is_tx_ready());
 29833  007720  ECF8  F03B         	call	i2_UART1_is_tx_ready	;wreg free
 29834  007724  0900               	iorlw	0
 29835  007726  B4D8               	btfsc	status,2,c
 29836  007728  D7FB               	goto	i2l12739
 29837                           
 29838                           ; BSR set to: 0
 29839                           ;main.c: 20:     UART1_Write(byte);
 29840  00772A  5002               	movf	i2putch@byte^0,w,c
 29841  00772C  EC06  F036         	call	i2_UART1_Write
 29842                           
 29843                           ; BSR set to: 57
 29844  007730  0012               	return		;funcret
 29845  007732                     __end_ofi2_putch:
 29846                           	opt callstack 0
 29847                           
 29848 ;; *************** function i2_UART1_is_tx_ready *****************
 29849 ;; Defined at:
 29850 ;;		line 152 in file "mcc_generated_files/uart1.c"
 29851 ;; Parameters:    Size  Location     Type
 29852 ;;		None
 29853 ;; Auto vars:     Size  Location     Type
 29854 ;;		None
 29855 ;; Return value:  Size  Location     Type
 29856 ;;                  1    wreg      _Bool 
 29857 ;; Registers used:
 29858 ;;		wreg, status,2
 29859 ;; Tracked objects:
 29860 ;;		On entry : 0/0
 29861 ;;		On exit  : 3F/0
 29862 ;;		Unchanged: 0/0
 29863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29868 ;;Total ram usage:        0 bytes
 29869 ;; Hardware stack levels used:    1
 29870 ;; This function calls:
 29871 ;;		Nothing
 29872 ;; This function is called by:
 29873 ;;		i2_putch
 29874 ;; This function uses a non-reentrant model
 29875 ;;
 29876                           
 29877                           	psect	text204
 29878  0077F0                     __ptext204:
 29879                           	opt callstack 0
 29880  0077F0                     i2_UART1_is_tx_ready:
 29881                           	opt callstack 8
 29882                           
 29883                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 29884                           
 29885                           ; BSR set to: 57
 29886                           ;incstack = 0
 29887  0077F0  0100               	movlb	0	; () banked
 29888  0077F2  51DB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 29889  0077F4  B4D8               	btfsc	status,2,c
 29890  0077F6  D002               	goto	i2u1140_40
 29891  0077F8  0E01               	movlw	1
 29892  0077FA  0012               	return	
 29893  0077FC                     i2u1140_40:
 29894  0077FC  0E00               	movlw	0
 29895                           
 29896                           ; BSR set to: 0
 29897  0077FE  0012               	return		;funcret
 29898  007800                     __end_ofi2_UART1_is_tx_ready:
 29899                           	opt callstack 0
 29900                           
 29901 ;; *************** function i2_UART1_Write *****************
 29902 ;; Defined at:
 29903 ;;		line 191 in file "mcc_generated_files/uart1.c"
 29904 ;; Parameters:    Size  Location     Type
 29905 ;;  txData          1    wreg     unsigned char 
 29906 ;; Auto vars:     Size  Location     Type
 29907 ;;  txData          1    0[COMRAM] unsigned char 
 29908 ;; Return value:  Size  Location     Type
 29909 ;;                  1    wreg      void 
 29910 ;; Registers used:
 29911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29912 ;; Tracked objects:
 29913 ;;		On entry : 3F/0
 29914 ;;		On exit  : 3F/39
 29915 ;;		Unchanged: 0/0
 29916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29921 ;;Total ram usage:        1 bytes
 29922 ;; Hardware stack levels used:    1
 29923 ;; This function calls:
 29924 ;;		Nothing
 29925 ;; This function is called by:
 29926 ;;		i2_putch
 29927 ;; This function uses a non-reentrant model
 29928 ;;
 29929                           
 29930                           	psect	text205
 29931  006C0C                     __ptext205:
 29932                           	opt callstack 0
 29933  006C0C                     i2_UART1_Write:
 29934                           	opt callstack 8
 29935                           
 29936                           ; BSR set to: 0
 29937                           ;incstack = 0
 29938                           ;i2UART1_Write@txData stored from wreg
 29939  006C0C  6E01               	movwf	i2UART1_Write@txData^0,c
 29940  006C0E                     
 29941                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 29942                           
 29943                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 29944  006C0E  0100               	movlb	0	; () banked
 29945  006C10  51DB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 29946  006C12  B4D8               	btfsc	status,2,c
 29947  006C14  D7FC               	goto	i2l12661
 29948                           
 29949                           ; BSR set to: 0
 29950                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 29951  006C16  0139               	movlb	57	; () banked
 29952  006C18  B993               	btfsc	147,4,b	;volatile
 29953  006C1A  D004               	goto	i2l440
 29954                           
 29955                           ; BSR set to: 57
 29956                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 29957  006C1C  0060  F007  FDEA   	movff	i2UART1_Write@txData,15850	;volatile
 29958                           
 29959                           ;mcc_generated_files/uart1.c: 200:     }
 29960  006C22  D012               	goto	i2l12677
 29961  006C24                     i2l440:
 29962                           
 29963                           ; BSR set to: 57
 29964                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 29965  006C24  9993               	bcf	147,4,b	;volatile
 29966                           
 29967                           ; BSR set to: 57
 29968                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 29969  006C26  0E00               	movlw	low _uart1TxBuffer
 29970  006C28  0100               	movlb	0	; () banked
 29971  006C2A  25DA               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 29972  006C2C  6ED9               	movwf	fsr2l,c
 29973  006C2E  6ADA               	clrf	fsr2h,c
 29974  006C30  0E02               	movlw	high _uart1TxBuffer
 29975  006C32  22DA               	addwfc	fsr2h,f,c
 29976  006C34  0060  F007  FFDF   	movff	i2UART1_Write@txData,indf2
 29977                           
 29978                           ; BSR set to: 0
 29979  006C3A  2BDA               	incf	_uart1TxHead& (0+255),f,b	;volatile
 29980                           
 29981                           ; BSR set to: 0
 29982                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 29983  006C3C  0E3F               	movlw	63
 29984  006C3E  65DA               	cpfsgt	_uart1TxHead& (0+255),b
 29985  006C40  D002               	goto	i2l12675
 29986                           
 29987                           ; BSR set to: 0
 29988                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 29989  006C42  0E00               	movlw	0
 29990  006C44  6FDA               	movwf	_uart1TxHead& (0+255),b	;volatile
 29991  006C46                     i2l12675:
 29992                           
 29993                           ; BSR set to: 0
 29994                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 29995  006C46  07DB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 29996  006C48                     i2l12677:
 29997                           
 29998                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 29999  006C48  0139               	movlb	57	; () banked
 30000  006C4A  8993               	bsf	147,4,b	;volatile
 30001                           
 30002                           ; BSR set to: 57
 30003  006C4C  0012               	return		;funcret
 30004  006C4E                     __end_ofi2_UART1_Write:
 30005                           	opt callstack 0
 30006                           
 30007 ;; *************** function i2_abs *****************
 30008 ;; Defined at:
 30009 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 30010 ;; Parameters:    Size  Location     Type
 30011 ;;  a               2   18[COMRAM] int 
 30012 ;; Auto vars:     Size  Location     Type
 30013 ;;		None
 30014 ;; Return value:  Size  Location     Type
 30015 ;;                  2   18[COMRAM] int 
 30016 ;; Registers used:
 30017 ;;		wreg, status,2, status,0
 30018 ;; Tracked objects:
 30019 ;;		On entry : 0/2
 30020 ;;		On exit  : 0/0
 30021 ;;		Unchanged: 0/0
 30022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30027 ;;Total ram usage:        4 bytes
 30028 ;; Hardware stack levels used:    1
 30029 ;; This function calls:
 30030 ;;		Nothing
 30031 ;; This function is called by:
 30032 ;;		i2_dtoa
 30033 ;; This function uses a non-reentrant model
 30034 ;;
 30035                           
 30036                           	psect	text206
 30037  006D4A                     __ptext206:
 30038                           	opt callstack 0
 30039  006D4A                     i2_abs:
 30040                           	opt callstack 9
 30041                           
 30042                           ; BSR set to: 57
 30043                           ;incstack = 0
 30044  006D4A  BE14               	btfsc	(i2abs@a+1)^0,7,c
 30045  006D4C  D005               	goto	i2u1206_40
 30046  006D4E  5014               	movf	(i2abs@a+1)^0,w,c
 30047  006D50  E114               	bnz	i2l3027
 30048  006D52  0413               	decf	i2abs@a^0,w,c
 30049  006D54  B0D8               	btfsc	status,0,c
 30050  006D56  D011               	goto	i2l3027
 30051  006D58                     i2u1206_40:
 30052  006D58  0060  F04C  F015   	movff	i2abs@a,??i2_abs
 30053  006D5E  0060  F050  F016   	movff	i2abs@a+1,??i2_abs+1
 30054  006D64  1E15               	comf	??i2_abs^0,f,c
 30055  006D66  1E16               	comf	(??i2_abs+1)^0,f,c
 30056  006D68  4A15               	infsnz	??i2_abs^0,f,c
 30057  006D6A  2A16               	incf	(??i2_abs+1)^0,f,c
 30058  006D6C  0060  F054  F013   	movff	??i2_abs,?i2_abs
 30059  006D72  0060  F058  F014   	movff	??i2_abs+1,?i2_abs+1
 30060  006D78  0012               	return	
 30061  006D7A                     i2l3027:
 30062  006D7A  0060  F04C  F013   	movff	i2abs@a,?i2_abs
 30063  006D80  0060  F050  F014   	movff	i2abs@a+1,?i2_abs+1
 30064  006D86  0012               	return		;funcret
 30065  006D88                     __end_ofi2_abs:
 30066                           	opt callstack 0
 30067                           
 30068 ;; *************** function i2___aomod *****************
 30069 ;; Defined at:
 30070 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 30071 ;; Parameters:    Size  Location     Type
 30072 ;;  dividend        8    0[COMRAM] long long 
 30073 ;;  divisor         8    8[COMRAM] long long 
 30074 ;; Auto vars:     Size  Location     Type
 30075 ;;  __aomod         1   17[COMRAM] unsigned char 
 30076 ;;  __aomod         1   16[COMRAM] unsigned char 
 30077 ;; Return value:  Size  Location     Type
 30078 ;;                  8    0[COMRAM] long long 
 30079 ;; Registers used:
 30080 ;;		wreg, status,2, status,0
 30081 ;; Tracked objects:
 30082 ;;		On entry : 0/2
 30083 ;;		On exit  : 0/0
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30086 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30089 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30090 ;;Total ram usage:       18 bytes
 30091 ;; Hardware stack levels used:    1
 30092 ;; This function calls:
 30093 ;;		Nothing
 30094 ;; This function is called by:
 30095 ;;		i2_dtoa
 30096 ;; This function uses a non-reentrant model
 30097 ;;
 30098                           
 30099                           	psect	text207
 30100  005078                     __ptext207:
 30101                           	opt callstack 0
 30102  005078                     i2___aomod:
 30103                           	opt callstack 9
 30104                           
 30105                           ;incstack = 0
 30106  005078  0E00               	movlw	0
 30107  00507A  6E12               	movwf	i2___aomod@sign^0,c
 30108  00507C  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
 30109  00507E  D012               	goto	i2l13195
 30110  005080  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 30111  005082  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 30112  005084  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 30113  005086  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 30114  005088  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 30115  00508A  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 30116  00508C  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 30117  00508E  6C01               	negf	i2___aomod@dividend^0,c
 30118  005090  0E00               	movlw	0
 30119  005092  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 30120  005094  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 30121  005096  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 30122  005098  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 30123  00509A  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 30124  00509C  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 30125  00509E  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 30126  0050A0  0E01               	movlw	1
 30127  0050A2  6E12               	movwf	i2___aomod@sign^0,c
 30128  0050A4                     i2l13195:
 30129  0050A4  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 30130  0050A6  D010               	goto	i2l13199
 30131  0050A8  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 30132  0050AA  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 30133  0050AC  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 30134  0050AE  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 30135  0050B0  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 30136  0050B2  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 30137  0050B4  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 30138  0050B6  6C09               	negf	i2___aomod@divisor^0,c
 30139  0050B8  0E00               	movlw	0
 30140  0050BA  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 30141  0050BC  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 30142  0050BE  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 30143  0050C0  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 30144  0050C2  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 30145  0050C4  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 30146  0050C6  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 30147  0050C8                     i2l13199:
 30148  0050C8  5009               	movf	i2___aomod@divisor^0,w,c
 30149  0050CA  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 30150  0050CC  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 30151  0050CE  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 30152  0050D0  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 30153  0050D2  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 30154  0050D4  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 30155  0050D6  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 30156  0050D8  B4D8               	btfsc	status,2,c
 30157  0050DA  D03C               	goto	i2l13215
 30158  0050DC  0E01               	movlw	1
 30159  0050DE  6E11               	movwf	i2___aomod@counter^0,c
 30160  0050E0  D00A               	goto	i2l13205
 30161  0050E2                     i2l13203:
 30162  0050E2  90D8               	bcf	status,0,c
 30163  0050E4  3609               	rlcf	i2___aomod@divisor^0,f,c
 30164  0050E6  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 30165  0050E8  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 30166  0050EA  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 30167  0050EC  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 30168  0050EE  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 30169  0050F0  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 30170  0050F2  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 30171  0050F4  2A11               	incf	i2___aomod@counter^0,f,c
 30172  0050F6                     i2l13205:
 30173  0050F6  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 30174  0050F8  D7F4               	goto	i2l13203
 30175  0050FA                     i2u1203_40:
 30176  0050FA  5009               	movf	i2___aomod@divisor^0,w,c
 30177  0050FC  5C01               	subwf	i2___aomod@dividend^0,w,c
 30178  0050FE  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 30179  005100  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 30180  005102  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 30181  005104  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 30182  005106  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 30183  005108  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 30184  00510A  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 30185  00510C  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 30186  00510E  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 30187  005110  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 30188  005112  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 30189  005114  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 30190  005116  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 30191  005118  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 30192  00511A  A0D8               	btfss	status,0,c
 30193  00511C  D010               	goto	i2l13211
 30194  00511E  5009               	movf	i2___aomod@divisor^0,w,c
 30195  005120  5E01               	subwf	i2___aomod@dividend^0,f,c
 30196  005122  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 30197  005124  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 30198  005126  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 30199  005128  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 30200  00512A  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 30201  00512C  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 30202  00512E  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 30203  005130  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 30204  005132  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 30205  005134  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 30206  005136  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 30207  005138  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 30208  00513A  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 30209  00513C  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 30210  00513E                     i2l13211:
 30211  00513E  90D8               	bcf	status,0,c
 30212  005140  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 30213  005142  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 30214  005144  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 30215  005146  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 30216  005148  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 30217  00514A  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 30218  00514C  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 30219  00514E  3209               	rrcf	i2___aomod@divisor^0,f,c
 30220  005150  2E11               	decfsz	i2___aomod@counter^0,f,c
 30221  005152  D7D3               	goto	i2u1203_40
 30222  005154                     i2l13215:
 30223  005154  5012               	movf	i2___aomod@sign^0,w,c
 30224  005156  B4D8               	btfsc	status,2,c
 30225  005158  D010               	goto	i2l13219
 30226  00515A  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 30227  00515C  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 30228  00515E  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 30229  005160  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 30230  005162  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 30231  005164  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 30232  005166  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 30233  005168  6C01               	negf	i2___aomod@dividend^0,c
 30234  00516A  0E00               	movlw	0
 30235  00516C  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 30236  00516E  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 30237  005170  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 30238  005172  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 30239  005174  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 30240  005176  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 30241  005178  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 30242  00517A                     i2l13219:
 30243  00517A  0060  F004  F001   	movff	i2___aomod@dividend,?i2___aomod
 30244  005180  0060  F008  F002   	movff	i2___aomod@dividend+1,?i2___aomod+1
 30245  005186  0060  F00C  F003   	movff	i2___aomod@dividend+2,?i2___aomod+2
 30246  00518C  0060  F010  F004   	movff	i2___aomod@dividend+3,?i2___aomod+3
 30247  005192  0060  F014  F005   	movff	i2___aomod@dividend+4,?i2___aomod+4
 30248  005198  0060  F018  F006   	movff	i2___aomod@dividend+5,?i2___aomod+5
 30249  00519E  0060  F01C  F007   	movff	i2___aomod@dividend+6,?i2___aomod+6
 30250  0051A4  0060  F020  F008   	movff	i2___aomod@dividend+7,?i2___aomod+7
 30251  0051AA  0012               	return		;funcret
 30252  0051AC                     __end_ofi2___aomod:
 30253                           	opt callstack 0
 30254                           
 30255 ;; *************** function i2___aodiv *****************
 30256 ;; Defined at:
 30257 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 30258 ;; Parameters:    Size  Location     Type
 30259 ;;  dividend        8    0[COMRAM] long long 
 30260 ;;  divisor         8    8[COMRAM] long long 
 30261 ;; Auto vars:     Size  Location     Type
 30262 ;;  __aodiv         8   18[COMRAM] long long 
 30263 ;;  __aodiv         1   17[COMRAM] unsigned char 
 30264 ;;  __aodiv         1   16[COMRAM] unsigned char 
 30265 ;; Return value:  Size  Location     Type
 30266 ;;                  8    0[COMRAM] long long 
 30267 ;; Registers used:
 30268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30269 ;; Tracked objects:
 30270 ;;		On entry : 0/2
 30271 ;;		On exit  : 0/0
 30272 ;;		Unchanged: 0/0
 30273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30274 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30275 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30277 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30278 ;;Total ram usage:       26 bytes
 30279 ;; Hardware stack levels used:    1
 30280 ;; This function calls:
 30281 ;;		Nothing
 30282 ;; This function is called by:
 30283 ;;		i2_dtoa
 30284 ;; This function uses a non-reentrant model
 30285 ;;
 30286                           
 30287                           	psect	text208
 30288  004DEC                     __ptext208:
 30289                           	opt callstack 0
 30290  004DEC                     i2___aodiv:
 30291                           	opt callstack 9
 30292                           
 30293                           ;incstack = 0
 30294  004DEC  0E00               	movlw	0
 30295  004DEE  6E12               	movwf	i2___aodiv@sign^0,c
 30296  004DF0  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 30297  004DF2  D012               	goto	i2l13151
 30298  004DF4  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 30299  004DF6  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 30300  004DF8  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 30301  004DFA  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 30302  004DFC  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 30303  004DFE  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 30304  004E00  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 30305  004E02  6C09               	negf	i2___aodiv@divisor^0,c
 30306  004E04  0E00               	movlw	0
 30307  004E06  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 30308  004E08  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 30309  004E0A  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 30310  004E0C  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 30311  004E0E  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 30312  004E10  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 30313  004E12  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 30314  004E14  0E01               	movlw	1
 30315  004E16  6E12               	movwf	i2___aodiv@sign^0,c
 30316  004E18                     i2l13151:
 30317  004E18  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
 30318  004E1A  D012               	goto	i2l13157
 30319  004E1C  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 30320  004E1E  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 30321  004E20  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 30322  004E22  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 30323  004E24  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 30324  004E26  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 30325  004E28  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 30326  004E2A  6C01               	negf	i2___aodiv@dividend^0,c
 30327  004E2C  0E00               	movlw	0
 30328  004E2E  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 30329  004E30  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 30330  004E32  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 30331  004E34  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 30332  004E36  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 30333  004E38  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 30334  004E3A  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 30335  004E3C  0E01               	movlw	1
 30336  004E3E  1A12               	xorwf	i2___aodiv@sign^0,f,c
 30337  004E40                     i2l13157:
 30338  004E40  EE20  F013         	lfsr	2,i2___aodiv@quotient
 30339  004E44  0E07               	movlw	7
 30340  004E46                     i2u1195_41:
 30341  004E46  6ADE               	clrf	postinc2,c
 30342  004E48  06E8               	decf	wreg,f,c
 30343  004E4A  E2FD               	bc	i2u1195_41
 30344  004E4C  5009               	movf	i2___aodiv@divisor^0,w,c
 30345  004E4E  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 30346  004E50  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 30347  004E52  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 30348  004E54  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 30349  004E56  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 30350  004E58  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 30351  004E5A  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 30352  004E5C  B4D8               	btfsc	status,2,c
 30353  004E5E  D046               	goto	i2l13179
 30354  004E60  0E01               	movlw	1
 30355  004E62  6E11               	movwf	i2___aodiv@counter^0,c
 30356  004E64  D00A               	goto	i2l13165
 30357  004E66                     i2l13163:
 30358  004E66  90D8               	bcf	status,0,c
 30359  004E68  3609               	rlcf	i2___aodiv@divisor^0,f,c
 30360  004E6A  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 30361  004E6C  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 30362  004E6E  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 30363  004E70  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 30364  004E72  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 30365  004E74  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 30366  004E76  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 30367  004E78  2A11               	incf	i2___aodiv@counter^0,f,c
 30368  004E7A                     i2l13165:
 30369  004E7A  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 30370  004E7C  D7F4               	goto	i2l13163
 30371  004E7E                     i2u1197_40:
 30372  004E7E  90D8               	bcf	status,0,c
 30373  004E80  3613               	rlcf	i2___aodiv@quotient^0,f,c
 30374  004E82  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 30375  004E84  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 30376  004E86  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 30377  004E88  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 30378  004E8A  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 30379  004E8C  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 30380  004E8E  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 30381  004E90  5009               	movf	i2___aodiv@divisor^0,w,c
 30382  004E92  5C01               	subwf	i2___aodiv@dividend^0,w,c
 30383  004E94  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 30384  004E96  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 30385  004E98  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 30386  004E9A  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 30387  004E9C  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 30388  004E9E  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 30389  004EA0  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 30390  004EA2  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 30391  004EA4  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 30392  004EA6  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 30393  004EA8  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 30394  004EAA  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 30395  004EAC  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 30396  004EAE  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 30397  004EB0  A0D8               	btfss	status,0,c
 30398  004EB2  D011               	goto	i2l13175
 30399  004EB4  5009               	movf	i2___aodiv@divisor^0,w,c
 30400  004EB6  5E01               	subwf	i2___aodiv@dividend^0,f,c
 30401  004EB8  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 30402  004EBA  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 30403  004EBC  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 30404  004EBE  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 30405  004EC0  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 30406  004EC2  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 30407  004EC4  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 30408  004EC6  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 30409  004EC8  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 30410  004ECA  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 30411  004ECC  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 30412  004ECE  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 30413  004ED0  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 30414  004ED2  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 30415  004ED4  8013               	bsf	i2___aodiv@quotient^0,0,c
 30416  004ED6                     i2l13175:
 30417  004ED6  90D8               	bcf	status,0,c
 30418  004ED8  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 30419  004EDA  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 30420  004EDC  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 30421  004EDE  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 30422  004EE0  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 30423  004EE2  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 30424  004EE4  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 30425  004EE6  3209               	rrcf	i2___aodiv@divisor^0,f,c
 30426  004EE8  2E11               	decfsz	i2___aodiv@counter^0,f,c
 30427  004EEA  D7C9               	goto	i2u1197_40
 30428  004EEC                     i2l13179:
 30429  004EEC  5012               	movf	i2___aodiv@sign^0,w,c
 30430  004EEE  B4D8               	btfsc	status,2,c
 30431  004EF0  D010               	goto	i2l13183
 30432  004EF2  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 30433  004EF4  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 30434  004EF6  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 30435  004EF8  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 30436  004EFA  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 30437  004EFC  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 30438  004EFE  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 30439  004F00  6C13               	negf	i2___aodiv@quotient^0,c
 30440  004F02  0E00               	movlw	0
 30441  004F04  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 30442  004F06  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 30443  004F08  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 30444  004F0A  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 30445  004F0C  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 30446  004F0E  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 30447  004F10  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 30448  004F12                     i2l13183:
 30449  004F12  0060  F04C  F001   	movff	i2___aodiv@quotient,?i2___aodiv
 30450  004F18  0060  F050  F002   	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 30451  004F1E  0060  F054  F003   	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 30452  004F24  0060  F058  F004   	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 30453  004F2A  0060  F05C  F005   	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 30454  004F30  0060  F060  F006   	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 30455  004F36  0060  F064  F007   	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 30456  004F3C  0060  F068  F008   	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 30457  004F42  0012               	return		;funcret
 30458  004F44                     __end_ofi2___aodiv:
 30459                           	opt callstack 0
 30460                           
 30461 ;; *************** function i2_atoi *****************
 30462 ;; Defined at:
 30463 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 30464 ;; Parameters:    Size  Location     Type
 30465 ;;  s               2    7[COMRAM] PTR const unsigned char 
 30466 ;;		 -> STR_67(17), STR_66(18), STR_65(18), STR_64(20), 
 30467 ;;		 -> STR_63(20), STR_62(20), STR_61(20), STR_60(20), 
 30468 ;;		 -> STR_59(20), STR_58(20), STR_57(20), STR_56(21), 
 30469 ;;		 -> STR_53(9), STR_52(9), STR_51(9), STR_50(9), 
 30470 ;;		 -> STR_49(9), STR_48(9), STR_47(48), STR_46(20), 
 30471 ;;		 -> STR_45(36), STR_44(27), STR_43(20), STR_42(28), 
 30472 ;;		 -> STR_41(5), STR_40(10), STR_39(56), STR_38(20), 
 30473 ;;		 -> STR_37(17), STR_36(23), STR_35(20), STR_34(28), 
 30474 ;;		 -> STR_33(5), STR_27(18), STR_24(37), STR_23(38), 
 30475 ;;		 -> STR_21(37), STR_20(38), STR_19(19), STR_18(9), 
 30476 ;;		 -> STR_17(9), STR_13(17), lcdTopRow(20), STR_11(27), 
 30477 ;;		 -> STR_10(9), STR_7(15), STR_6(15), STR_5(14), 
 30478 ;;		 -> STR_4(17), STR_3(10), STR_2(17), lcdBtnRow(20), 
 30479 ;;		 -> STR_1(16), 
 30480 ;; Auto vars:     Size  Location     Type
 30481 ;;  atoi            2   20[COMRAM] int 
 30482 ;;  atoi            2   13[COMRAM] int 
 30483 ;; Return value:  Size  Location     Type
 30484 ;;                  2    7[COMRAM] int 
 30485 ;; Registers used:
 30486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30487 ;; Tracked objects:
 30488 ;;		On entry : 0/0
 30489 ;;		On exit  : 0/0
 30490 ;;		Unchanged: 0/0
 30491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30493 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30494 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30495 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30496 ;;Total ram usage:       15 bytes
 30497 ;; Hardware stack levels used:    1
 30498 ;; Hardware stack levels required when called:    1
 30499 ;; This function calls:
 30500 ;;		i2___wmul
 30501 ;;		i2_isdigit
 30502 ;;		i2_isspace
 30503 ;; This function is called by:
 30504 ;;		i2_vfpfcnvrt
 30505 ;; This function uses a non-reentrant model
 30506 ;;
 30507                           
 30508                           	psect	text209
 30509  0045F4                     __ptext209:
 30510                           	opt callstack 0
 30511  0045F4                     i2_atoi:
 30512                           	opt callstack 9
 30513                           
 30514                           ;incstack = 0
 30515  0045F4  0E00               	movlw	0
 30516  0045F6  6E16               	movwf	(i2atoi@n+1)^0,c
 30517  0045F8  0E00               	movlw	0
 30518  0045FA  6E15               	movwf	i2atoi@n^0,c
 30519  0045FC  0E00               	movlw	0
 30520  0045FE  6E0F               	movwf	(i2atoi@neg+1)^0,c
 30521  004600  0E00               	movlw	0
 30522  004602  6E0E               	movwf	i2atoi@neg^0,c
 30523  004604  D002               	goto	i2l13453
 30524  004606                     i2l13451:
 30525  004606  4A08               	infsnz	i2atoi@s^0,f,c
 30526  004608  2A09               	incf	(i2atoi@s+1)^0,f,c
 30527  00460A                     i2l13453:
 30528  00460A  0E01               	movlw	1
 30529  00460C  6E14               	movwf	i2_atoi$4149^0,c
 30530  00460E  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 30531  004614  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 30532  00461A  0E00               	movlw	low (__mediumconst shr (0+16))
 30533  00461C  6EF8               	movwf	tblptru,c
 30534  00461E  0E0F               	movlw	(high __ramtop+-1)
 30535  004620  64F7               	cpfsgt	tblptrh,c
 30536  004622  D003               	bra	i2u1257_47
 30537  004624  0008               	tblrd		*
 30538  004626  50F5               	movf	tablat,w,c
 30539  004628  D007               	bra	i2u1257_40
 30540  00462A                     i2u1257_47:
 30541  00462A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30542  004630  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30543  004636  50EF               	movf	indf0,w,c
 30544  004638                     i2u1257_40:
 30545  004638  0A20               	xorlw	32
 30546  00463A  B4D8               	btfsc	status,2,c
 30547  00463C  D027               	goto	i2l13461
 30548  00463E  0EF7               	movlw	247
 30549  004640  6E0A               	movwf	??i2_atoi^0,c
 30550  004642  0EFF               	movlw	255
 30551  004644  6E0B               	movwf	(??i2_atoi+1)^0,c
 30552  004646  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 30553  00464C  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 30554  004652  0E00               	movlw	low (__mediumconst shr (0+16))
 30555  004654  6EF8               	movwf	tblptru,c
 30556  004656  0E0F               	movlw	(high __ramtop+-1)
 30557  004658  64F7               	cpfsgt	tblptrh,c
 30558  00465A  D003               	bra	i2u1259_47
 30559  00465C  0008               	tblrd		*
 30560  00465E  50F5               	movf	tablat,w,c
 30561  004660  D007               	bra	i2u1259_40
 30562  004662                     i2u1259_47:
 30563  004662  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30564  004668  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30565  00466E  50EF               	movf	indf0,w,c
 30566  004670                     i2u1259_40:
 30567  004670  6E0C               	movwf	(??i2_atoi+2)^0,c
 30568  004672  6A0D               	clrf	(??i2_atoi+3)^0,c
 30569  004674  500A               	movf	??i2_atoi^0,w,c
 30570  004676  260C               	addwf	(??i2_atoi+2)^0,f,c
 30571  004678  500B               	movf	(??i2_atoi+1)^0,w,c
 30572  00467A  220D               	addwfc	(??i2_atoi+3)^0,f,c
 30573  00467C  500D               	movf	(??i2_atoi+3)^0,w,c
 30574  00467E  E104               	bnz	i2u1260_40
 30575  004680  0E05               	movlw	5
 30576  004682  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 30577  004684  A0D8               	btfss	status,0,c
 30578  004686  D002               	goto	i2l13461
 30579  004688                     i2u1260_40:
 30580  004688  0E00               	movlw	0
 30581  00468A  6E14               	movwf	i2_atoi$4149^0,c
 30582  00468C                     i2l13461:
 30583  00468C  0060  F050  F010   	movff	i2_atoi$4149,i2_atoi$4148
 30584  004692  6A11               	clrf	(i2_atoi$4148+1)^0,c
 30585  004694  5010               	movf	i2_atoi$4148^0,w,c
 30586  004696  1011               	iorwf	(i2_atoi$4148+1)^0,w,c
 30587  004698  B4D8               	btfsc	status,2,c
 30588  00469A  D008               	goto	i2l13471
 30589  00469C  D7B4               	goto	i2l13451
 30590  00469E                     i2l13467:
 30591  00469E  0E00               	movlw	0
 30592  0046A0  6E0F               	movwf	(i2atoi@neg+1)^0,c
 30593  0046A2  0E01               	movlw	1
 30594  0046A4  6E0E               	movwf	i2atoi@neg^0,c
 30595  0046A6                     i2l13469:
 30596  0046A6  4A08               	infsnz	i2atoi@s^0,f,c
 30597  0046A8  2A09               	incf	(i2atoi@s+1)^0,f,c
 30598  0046AA  D050               	goto	i2l13477
 30599  0046AC                     i2l13471:
 30600  0046AC  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 30601  0046B2  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 30602  0046B8  0E00               	movlw	low (__mediumconst shr (0+16))
 30603  0046BA  6EF8               	movwf	tblptru,c
 30604  0046BC  0E0F               	movlw	(high __ramtop+-1)
 30605  0046BE  64F7               	cpfsgt	tblptrh,c
 30606  0046C0  D003               	bra	i2u1262_47
 30607  0046C2  0008               	tblrd		*
 30608  0046C4  50F5               	movf	tablat,w,c
 30609  0046C6  D007               	bra	i2u1262_40
 30610  0046C8                     i2u1262_47:
 30611  0046C8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30612  0046CE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30613  0046D4  50EF               	movf	indf0,w,c
 30614  0046D6                     i2u1262_40:
 30615  0046D6  6E0A               	movwf	??i2_atoi^0,c
 30616  0046D8  6A0B               	clrf	(??i2_atoi+1)^0,c
 30617                           
 30618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30619                           ; Switch size 1, requested type "simple"
 30620                           ; Number of cases is 1, Range of values is 0 to 0
 30621                           ; switch strategies available:
 30622                           ; Name         Instructions Cycles
 30623                           ; simple_byte            4     3 (average)
 30624                           ;	Chosen strategy is simple_byte
 30625  0046DA  500B               	movf	(??i2_atoi+1)^0,w,c
 30626  0046DC  0A00               	xorlw	0	; case 0
 30627  0046DE  A4D8               	btfss	status,2,c
 30628  0046E0  D035               	goto	i2l13477
 30629                           
 30630                           ; Switch size 1, requested type "simple"
 30631                           ; Number of cases is 2, Range of values is 43 to 45
 30632                           ; switch strategies available:
 30633                           ; Name         Instructions Cycles
 30634                           ; simple_byte            7     4 (average)
 30635                           ;	Chosen strategy is simple_byte
 30636  0046E2  500A               	movf	??i2_atoi^0,w,c
 30637  0046E4  0A2B               	xorlw	43	; case 43
 30638  0046E6  B4D8               	btfsc	status,2,c
 30639  0046E8  D7DE               	goto	i2l13469
 30640  0046EA  0A06               	xorlw	6	; case 45
 30641  0046EC  B4D8               	btfsc	status,2,c
 30642  0046EE  D7D7               	goto	i2l13467
 30643  0046F0  D02D               	goto	i2l13477
 30644  0046F2                     i2l13473:
 30645  0046F2  0060  F054  F001   	movff	i2atoi@n,i2___wmul@multiplier
 30646  0046F8  0060  F058  F002   	movff	i2atoi@n+1,i2___wmul@multiplier+1
 30647  0046FE  0E00               	movlw	0
 30648  004700  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30649  004702  0E0A               	movlw	10
 30650  004704  6E03               	movwf	i2___wmul@multiplicand^0,c
 30651  004706  EC57  F039         	call	i2___wmul	;wreg free
 30652  00470A  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 30653  004710  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 30654  004716  0E00               	movlw	low (__mediumconst shr (0+16))
 30655  004718  6EF8               	movwf	tblptru,c
 30656  00471A  0E0F               	movlw	(high __ramtop+-1)
 30657  00471C  64F7               	cpfsgt	tblptrh,c
 30658  00471E  D003               	bra	i2u1263_47
 30659  004720  0008               	tblrd		*
 30660  004722  50F5               	movf	tablat,w,c
 30661  004724  D007               	bra	i2u1263_40
 30662  004726                     i2u1263_47:
 30663  004726  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30664  00472C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30665  004732  50EF               	movf	indf0,w,c
 30666  004734                     i2u1263_40:
 30667  004734  6E0A               	movwf	??i2_atoi^0,c
 30668  004736  500A               	movf	??i2_atoi^0,w,c
 30669  004738  5E01               	subwf	?i2___wmul^0,f,c
 30670  00473A  0E00               	movlw	0
 30671  00473C  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 30672  00473E  0E30               	movlw	48
 30673  004740  2401               	addwf	?i2___wmul^0,w,c
 30674  004742  6E15               	movwf	i2atoi@n^0,c
 30675  004744  0E00               	movlw	0
 30676  004746  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30677  004748  6E16               	movwf	(i2atoi@n+1)^0,c
 30678  00474A  D7AD               	goto	i2l13469
 30679  00474C                     i2l13477:
 30680  00474C  0ED0               	movlw	208
 30681  00474E  6E0A               	movwf	??i2_atoi^0,c
 30682  004750  0EFF               	movlw	255
 30683  004752  6E0B               	movwf	(??i2_atoi+1)^0,c
 30684  004754  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 30685  00475A  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 30686  004760  0E00               	movlw	low (__mediumconst shr (0+16))
 30687  004762  6EF8               	movwf	tblptru,c
 30688  004764  0E0F               	movlw	(high __ramtop+-1)
 30689  004766  64F7               	cpfsgt	tblptrh,c
 30690  004768  D003               	bra	i2u1264_47
 30691  00476A  0008               	tblrd		*
 30692  00476C  50F5               	movf	tablat,w,c
 30693  00476E  D007               	bra	i2u1264_40
 30694  004770                     i2u1264_47:
 30695  004770  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30696  004776  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30697  00477C  50EF               	movf	indf0,w,c
 30698  00477E                     i2u1264_40:
 30699  00477E  6E0C               	movwf	(??i2_atoi+2)^0,c
 30700  004780  6A0D               	clrf	(??i2_atoi+3)^0,c
 30701  004782  500A               	movf	??i2_atoi^0,w,c
 30702  004784  260C               	addwf	(??i2_atoi+2)^0,f,c
 30703  004786  500B               	movf	(??i2_atoi+1)^0,w,c
 30704  004788  220D               	addwfc	(??i2_atoi+3)^0,f,c
 30705  00478A  500D               	movf	(??i2_atoi+3)^0,w,c
 30706  00478C  E106               	bnz	i2u1265_40
 30707  00478E  0E0A               	movlw	10
 30708  004790  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 30709  004792  B0D8               	btfsc	status,0,c
 30710  004794  D002               	goto	i2u1265_40
 30711  004796  0E01               	movlw	1
 30712  004798  D001               	goto	i2u1266_40
 30713  00479A                     i2u1265_40:
 30714  00479A  0E00               	movlw	0
 30715  00479C                     i2u1266_40:
 30716  00479C  6E12               	movwf	i2_atoi$4150^0,c
 30717  00479E  6A13               	clrf	(i2_atoi$4150+1)^0,c
 30718  0047A0  5012               	movf	i2_atoi$4150^0,w,c
 30719  0047A2  1013               	iorwf	(i2_atoi$4150+1)^0,w,c
 30720  0047A4  A4D8               	btfss	status,2,c
 30721  0047A6  D7A5               	goto	i2l13473
 30722  0047A8  500E               	movf	i2atoi@neg^0,w,c
 30723  0047AA  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 30724  0047AC  A4D8               	btfss	status,2,c
 30725  0047AE  D011               	goto	i2l3058
 30726  0047B0  0060  F054  F00A   	movff	i2atoi@n,??i2_atoi
 30727  0047B6  0060  F058  F00B   	movff	i2atoi@n+1,??i2_atoi+1
 30728  0047BC  1E0A               	comf	??i2_atoi^0,f,c
 30729  0047BE  1E0B               	comf	(??i2_atoi+1)^0,f,c
 30730  0047C0  4A0A               	infsnz	??i2_atoi^0,f,c
 30731  0047C2  2A0B               	incf	(??i2_atoi+1)^0,f,c
 30732  0047C4  0060  F028  F008   	movff	??i2_atoi,?i2_atoi
 30733  0047CA  0060  F02C  F009   	movff	??i2_atoi+1,?i2_atoi+1
 30734  0047D0  0012               	return	
 30735  0047D2                     i2l3058:
 30736  0047D2  0060  F054  F008   	movff	i2atoi@n,?i2_atoi
 30737  0047D8  0060  F058  F009   	movff	i2atoi@n+1,?i2_atoi+1
 30738  0047DE  0012               	return		;funcret
 30739  0047E0                     __end_ofi2_atoi:
 30740                           	opt callstack 0
 30741                           
 30742 ;; *************** function i2_isspace *****************
 30743 ;; Defined at:
 30744 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 30745 ;; Parameters:    Size  Location     Type
 30746 ;;  c               2    0[COMRAM] int 
 30747 ;; Auto vars:     Size  Location     Type
 30748 ;;		None
 30749 ;; Return value:  Size  Location     Type
 30750 ;;                  2    0[COMRAM] int 
 30751 ;; Registers used:
 30752 ;;		wreg, status,2, status,0
 30753 ;; Tracked objects:
 30754 ;;		On entry : 0/0
 30755 ;;		On exit  : 0/0
 30756 ;;		Unchanged: 0/0
 30757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30761 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30762 ;;Total ram usage:        7 bytes
 30763 ;; Hardware stack levels used:    1
 30764 ;; This function calls:
 30765 ;;		Nothing
 30766 ;; This function is called by:
 30767 ;;		i2_atoi
 30768 ;; This function uses a non-reentrant model
 30769 ;;
 30770                           
 30771                           	psect	text210
 30772  006B02                     __ptext210:
 30773                           	opt callstack 0
 30774  006B02                     i2_isspace:
 30775                           	opt callstack 9
 30776                           
 30777                           ;incstack = 0
 30778  006B02  0E01               	movlw	1
 30779  006B04  6E07               	movwf	i2_isspace$4166^0,c
 30780  006B06  0E20               	movlw	32
 30781  006B08  1801               	xorwf	i2isspace@c^0,w,c
 30782  006B0A  1002               	iorwf	(i2isspace@c+1)^0,w,c
 30783  006B0C  B4D8               	btfsc	status,2,c
 30784  006B0E  D016               	goto	i2l13239
 30785  006B10  0EF7               	movlw	247
 30786  006B12  6E03               	movwf	??i2_isspace^0,c
 30787  006B14  0EFF               	movlw	255
 30788  006B16  6E04               	movwf	(??i2_isspace+1)^0,c
 30789  006B18  0060  F004  F005   	movff	i2isspace@c,??i2_isspace+2
 30790  006B1E  0060  F008  F006   	movff	i2isspace@c+1,??i2_isspace+3
 30791  006B24  5003               	movf	??i2_isspace^0,w,c
 30792  006B26  2605               	addwf	(??i2_isspace+2)^0,f,c
 30793  006B28  5004               	movf	(??i2_isspace+1)^0,w,c
 30794  006B2A  2206               	addwfc	(??i2_isspace+3)^0,f,c
 30795  006B2C  5006               	movf	(??i2_isspace+3)^0,w,c
 30796  006B2E  E104               	bnz	i2u1210_40
 30797  006B30  0E05               	movlw	5
 30798  006B32  5C05               	subwf	(??i2_isspace+2)^0,w,c
 30799  006B34  A0D8               	btfss	status,0,c
 30800  006B36  D002               	goto	i2l13239
 30801  006B38                     i2u1210_40:
 30802  006B38  0E00               	movlw	0
 30803  006B3A  6E07               	movwf	i2_isspace$4166^0,c
 30804  006B3C                     i2l13239:
 30805  006B3C  0060  F01C  F001   	movff	i2_isspace$4166,?i2_isspace
 30806  006B42  6A02               	clrf	(?i2_isspace+1)^0,c
 30807  006B44  0012               	return		;funcret
 30808  006B46                     __end_ofi2_isspace:
 30809                           	opt callstack 0
 30810                           
 30811 ;; *************** function i2_isdigit *****************
 30812 ;; Defined at:
 30813 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 30814 ;; Parameters:    Size  Location     Type
 30815 ;;  c               2    0[COMRAM] int 
 30816 ;; Auto vars:     Size  Location     Type
 30817 ;;		None
 30818 ;; Return value:  Size  Location     Type
 30819 ;;                  2    0[COMRAM] int 
 30820 ;; Registers used:
 30821 ;;		wreg, status,2, status,0
 30822 ;; Tracked objects:
 30823 ;;		On entry : 0/0
 30824 ;;		On exit  : 0/0
 30825 ;;		Unchanged: 0/0
 30826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30830 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30831 ;;Total ram usage:        6 bytes
 30832 ;; Hardware stack levels used:    1
 30833 ;; This function calls:
 30834 ;;		Nothing
 30835 ;; This function is called by:
 30836 ;;		i2_vfpfcnvrt
 30837 ;;		i2_atoi
 30838 ;; This function uses a non-reentrant model
 30839 ;;
 30840                           
 30841                           	psect	text211
 30842  006F4A                     __ptext211:
 30843                           	opt callstack 0
 30844  006F4A                     i2_isdigit:
 30845                           	opt callstack 10
 30846                           
 30847                           ;incstack = 0
 30848  006F4A  0ED0               	movlw	208
 30849  006F4C  6E03               	movwf	??i2_isdigit^0,c
 30850  006F4E  0EFF               	movlw	255
 30851  006F50  6E04               	movwf	(??i2_isdigit+1)^0,c
 30852  006F52  0060  F004  F005   	movff	i2isdigit@c,??i2_isdigit+2
 30853  006F58  0060  F008  F006   	movff	i2isdigit@c+1,??i2_isdigit+3
 30854  006F5E  5003               	movf	??i2_isdigit^0,w,c
 30855  006F60  2605               	addwf	(??i2_isdigit+2)^0,f,c
 30856  006F62  5004               	movf	(??i2_isdigit+1)^0,w,c
 30857  006F64  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 30858  006F66  5006               	movf	(??i2_isdigit+3)^0,w,c
 30859  006F68  E106               	bnz	i2u1207_40
 30860  006F6A  0E0A               	movlw	10
 30861  006F6C  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 30862  006F6E  B0D8               	btfsc	status,0,c
 30863  006F70  D002               	goto	i2u1207_40
 30864  006F72  0E01               	movlw	1
 30865  006F74  D001               	goto	i2u1208_40
 30866  006F76                     i2u1207_40:
 30867  006F76  0E00               	movlw	0
 30868  006F78                     i2u1208_40:
 30869  006F78  6E01               	movwf	?i2_isdigit^0,c
 30870  006F7A  6A02               	clrf	(?i2_isdigit+1)^0,c
 30871  006F7C  0012               	return		;funcret
 30872  006F7E                     __end_ofi2_isdigit:
 30873                           	opt callstack 0
 30874                           
 30875 ;; *************** function i2___wmul *****************
 30876 ;; Defined at:
 30877 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 30878 ;; Parameters:    Size  Location     Type
 30879 ;;  multiplier      2    0[COMRAM] unsigned int 
 30880 ;;  multiplicand    2    2[COMRAM] unsigned int 
 30881 ;; Auto vars:     Size  Location     Type
 30882 ;;  __wmul          2    4[COMRAM] unsigned int 
 30883 ;; Return value:  Size  Location     Type
 30884 ;;                  2    0[COMRAM] unsigned int 
 30885 ;; Registers used:
 30886 ;;		wreg, status,2, status,0, prodl, prodh
 30887 ;; Tracked objects:
 30888 ;;		On entry : 0/0
 30889 ;;		On exit  : 0/0
 30890 ;;		Unchanged: 0/0
 30891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30896 ;;Total ram usage:        6 bytes
 30897 ;; Hardware stack levels used:    1
 30898 ;; This function calls:
 30899 ;;		Nothing
 30900 ;; This function is called by:
 30901 ;;		i2_atoi
 30902 ;; This function uses a non-reentrant model
 30903 ;;
 30904                           
 30905                           	psect	text212
 30906  0072AE                     __ptext212:
 30907                           	opt callstack 0
 30908  0072AE                     i2___wmul:
 30909                           	opt callstack 9
 30910                           
 30911                           ;incstack = 0
 30912  0072AE  5001               	movf	i2___wmul@multiplier^0,w,c
 30913  0072B0  0203               	mulwf	i2___wmul@multiplicand^0,c
 30914  0072B2  006F FFCC  F005    	movff	prodl,i2___wmul@product
 30915  0072B8  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
 30916  0072BE  5001               	movf	i2___wmul@multiplier^0,w,c
 30917  0072C0  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 30918  0072C2  50F3               	movf	243,w,c
 30919  0072C4  2606               	addwf	(i2___wmul@product+1)^0,f,c
 30920  0072C6  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 30921  0072C8  0203               	mulwf	i2___wmul@multiplicand^0,c
 30922  0072CA  50F3               	movf	243,w,c
 30923  0072CC  2606               	addwf	(i2___wmul@product+1)^0,f,c
 30924  0072CE  0060  F014  F001   	movff	i2___wmul@product,?i2___wmul
 30925  0072D4  0060  F018  F002   	movff	i2___wmul@product+1,?i2___wmul+1
 30926  0072DA  0012               	return		;funcret
 30927  0072DC                     __end_ofi2___wmul:
 30928                           	opt callstack 0
 30929                           
 30930 ;; *************** function i2___lmul *****************
 30931 ;; Defined at:
 30932 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 30933 ;; Parameters:    Size  Location     Type
 30934 ;;  multiplier      4    0[COMRAM] unsigned long 
 30935 ;;  multiplicand    4    4[COMRAM] unsigned long 
 30936 ;; Auto vars:     Size  Location     Type
 30937 ;;  __lmul          4    8[COMRAM] unsigned long 
 30938 ;; Return value:  Size  Location     Type
 30939 ;;                  4    0[COMRAM] unsigned long 
 30940 ;; Registers used:
 30941 ;;		wreg, status,2, status,0
 30942 ;; Tracked objects:
 30943 ;;		On entry : 3F/0
 30944 ;;		On exit  : 3F/0
 30945 ;;		Unchanged: 3F/0
 30946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30948 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30950 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30951 ;;Total ram usage:       12 bytes
 30952 ;; Hardware stack levels used:    1
 30953 ;; This function calls:
 30954 ;;		Nothing
 30955 ;; This function is called by:
 30956 ;;		_adcCaptureIsr
 30957 ;; This function uses a non-reentrant model
 30958 ;;
 30959                           
 30960                           	psect	text213
 30961  006624                     __ptext213:
 30962                           	opt callstack 0
 30963  006624                     i2___lmul:
 30964                           	opt callstack 14
 30965                           
 30966                           ; BSR set to: 0
 30967                           
 30968                           ;incstack = 0
 30969  006624  0E00               	movlw	0
 30970  006626  6E09               	movwf	i2___lmul@product^0,c
 30971  006628  0E00               	movlw	0
 30972  00662A  6E0A               	movwf	(i2___lmul@product+1)^0,c
 30973  00662C  0E00               	movlw	0
 30974  00662E  6E0B               	movwf	(i2___lmul@product+2)^0,c
 30975  006630  0E00               	movlw	0
 30976  006632  6E0C               	movwf	(i2___lmul@product+3)^0,c
 30977  006634                     i2l9973:
 30978                           
 30979                           ; BSR set to: 0
 30980  006634  A001               	btfss	i2___lmul@multiplier^0,0,c
 30981  006636  D008               	goto	i2l9977
 30982                           
 30983                           ; BSR set to: 0
 30984  006638  5005               	movf	i2___lmul@multiplicand^0,w,c
 30985  00663A  2609               	addwf	i2___lmul@product^0,f,c
 30986  00663C  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 30987  00663E  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 30988  006640  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 30989  006642  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 30990  006644  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 30991  006646  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 30992  006648                     i2l9977:
 30993                           
 30994                           ; BSR set to: 0
 30995  006648  90D8               	bcf	status,0,c
 30996  00664A  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 30997  00664C  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 30998  00664E  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 30999  006650  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 31000                           
 31001                           ; BSR set to: 0
 31002  006652  90D8               	bcf	status,0,c
 31003  006654  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 31004  006656  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 31005  006658  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 31006  00665A  3201               	rrcf	i2___lmul@multiplier^0,f,c
 31007  00665C  5001               	movf	i2___lmul@multiplier^0,w,c
 31008  00665E  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 31009  006660  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 31010  006662  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 31011  006664  A4D8               	btfss	status,2,c
 31012  006666  D7E6               	goto	i2l9973
 31013                           
 31014                           ; BSR set to: 0
 31015  006668  0060  F024  F001   	movff	i2___lmul@product,?i2___lmul
 31016  00666E  0060  F028  F002   	movff	i2___lmul@product+1,?i2___lmul+1
 31017  006674  0060  F02C  F003   	movff	i2___lmul@product+2,?i2___lmul+2
 31018  00667A  0060  F030  F004   	movff	i2___lmul@product+3,?i2___lmul+3
 31019                           
 31020                           ; BSR set to: 0
 31021  006680  0012               	return		;funcret
 31022  006682                     __end_ofi2___lmul:
 31023                           	opt callstack 0
 31024                           
 31025 ;; *************** function i2_ADCC_StartConversion *****************
 31026 ;; Defined at:
 31027 ;;		line 120 in file "mcc_generated_files/adcc.c"
 31028 ;; Parameters:    Size  Location     Type
 31029 ;;  channel         1    wreg     enum E16053
 31030 ;; Auto vars:     Size  Location     Type
 31031 ;;  channel         1    0[COMRAM] enum E16053
 31032 ;; Return value:  Size  Location     Type
 31033 ;;                  1    wreg      void 
 31034 ;; Registers used:
 31035 ;;		wreg
 31036 ;; Tracked objects:
 31037 ;;		On entry : 0/0
 31038 ;;		On exit  : 3F/3E
 31039 ;;		Unchanged: 0/0
 31040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31045 ;;Total ram usage:        1 bytes
 31046 ;; Hardware stack levels used:    1
 31047 ;; This function calls:
 31048 ;;		Nothing
 31049 ;; This function is called by:
 31050 ;;		_adcCaptureIsr
 31051 ;; This function uses a non-reentrant model
 31052 ;;
 31053                           
 31054                           	psect	text214
 31055  007800                     __ptext214:
 31056                           	opt callstack 0
 31057  007800                     i2_ADCC_StartConversion:
 31058                           	opt callstack 14
 31059                           
 31060                           ; BSR set to: 0
 31061                           ;incstack = 0
 31062                           ;i2ADCC_StartConversion@channel stored from wreg
 31063  007800  6E01               	movwf	i2ADCC_StartConversion@channel^0,c
 31064                           
 31065                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 31066  007802  0060  F007  FEF1   	movff	i2ADCC_StartConversion@channel,16113	;volatile
 31067                           
 31068                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 31069  007808  013E               	movlb	62	; () banked
 31070  00780A  8FF8               	bsf	248,7,b	;volatile
 31071                           
 31072                           ; BSR set to: 62
 31073                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 31074  00780C  81F8               	bsf	248,0,b	;volatile
 31075                           
 31076                           ; BSR set to: 62
 31077  00780E  0012               	return		;funcret
 31078  007810                     __end_ofi2_ADCC_StartConversion:
 31079                           	opt callstack 0
 31080                           
 31081 ;; *************** function _ADCC_GetFilterValue *****************
 31082 ;; Defined at:
 31083 ;;		line 231 in file "mcc_generated_files/adcc.c"
 31084 ;; Parameters:    Size  Location     Type
 31085 ;;		None
 31086 ;; Auto vars:     Size  Location     Type
 31087 ;;		None
 31088 ;; Return value:  Size  Location     Type
 31089 ;;                  2    0[COMRAM] unsigned short 
 31090 ;; Registers used:
 31091 ;;		wreg, status,2, status,0
 31092 ;; Tracked objects:
 31093 ;;		On entry : 3F/2
 31094 ;;		On exit  : 3F/3E
 31095 ;;		Unchanged: 0/0
 31096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31100 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31101 ;;Total ram usage:        4 bytes
 31102 ;; Hardware stack levels used:    1
 31103 ;; This function calls:
 31104 ;;		Nothing
 31105 ;; This function is called by:
 31106 ;;		_adcCaptureIsr
 31107 ;; This function uses a non-reentrant model
 31108 ;;
 31109                           
 31110                           	psect	text215
 31111  0076B8                     __ptext215:
 31112                           	opt callstack 0
 31113  0076B8                     _ADCC_GetFilterValue:
 31114                           	opt callstack 14
 31115                           
 31116                           ; BSR set to: 2
 31117                           ;mcc_generated_files/adcc.c: 234:     return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 31118                           
 31119                           ; BSR set to: 62
 31120                           ;incstack = 0
 31121  0076B8  013E               	movlb	62	; () banked
 31122  0076BA  51E7               	movf	231,w,b	;volatile
 31123  0076BC  6E04               	movwf	(??_ADCC_GetFilterValue+1)^0,c
 31124  0076BE  6A03               	clrf	??_ADCC_GetFilterValue^0,c
 31125  0076C0  51E6               	movf	230,w,b	;volatile
 31126  0076C2  2403               	addwf	??_ADCC_GetFilterValue^0,w,c
 31127  0076C4  6E01               	movwf	?_ADCC_GetFilterValue^0,c
 31128  0076C6  0E00               	movlw	0
 31129  0076C8  2004               	addwfc	(??_ADCC_GetFilterValue+1)^0,w,c
 31130  0076CA  6E02               	movwf	(?_ADCC_GetFilterValue+1)^0,c
 31131                           
 31132                           ; BSR set to: 62
 31133  0076CC  0012               	return		;funcret
 31134  0076CE                     __end_of_ADCC_GetFilterValue:
 31135                           	opt callstack 0
 31136                           
 31137                           ;
 31138                           ; Interrupt Vector Table @ 0x8
 31139                           ;
 31140                           
 31141                           	psect	ivt0x8
 31142  000008                     __pivt0x8:
 31143                           	opt callstack 0
 31144  000008                     ivt0x8_base:
 31145                           	opt callstack 0
 31146                           
 31147                           ; high-priority vector
 31148  000008  EF0A  F02E         	goto	_INTERRUPT_InterruptManager
 31149  000018                     	org	16
 31150                           
 31151                           ; low-priority vector
 31152  000018  00FF               	reset	
 31153                           
 31154                           	psect	text216
 31155  000000                     __ptext216:
 31156                           	opt callstack 0
 31157                           
 31158                           	psect	rparam
 31159  0000                     tosu	equ	0x3FFF
 31160                           tosh	equ	0x3FFE
 31161                           tosl	equ	0x3FFD
 31162                           stkptr	equ	0x3FFC
 31163                           pclatu	equ	0x3FFB
 31164                           pclath	equ	0x3FFA
 31165                           pcl	equ	0x3FF9
 31166                           tblptru	equ	0x3FF8
 31167                           tblptrh	equ	0x3FF7
 31168                           tblptrl	equ	0x3FF6
 31169                           tablat	equ	0x3FF5
 31170                           prodh	equ	0x3FF4
 31171                           prodl	equ	0x3FF3
 31172                           indf0	equ	0x3FEF
 31173                           postinc0	equ	0x3FEE
 31174                           postdec0	equ	0x3FED
 31175                           preinc0	equ	0x3FEC
 31176                           plusw0	equ	0x3FEB
 31177                           fsr0h	equ	0x3FEA
 31178                           fsr0l	equ	0x3FE9
 31179                           wreg	equ	0x3FE8
 31180                           indf1	equ	0x3FE7
 31181                           postinc1	equ	0x3FE6
 31182                           postdec1	equ	0x3FE5
 31183                           preinc1	equ	0x3FE4
 31184                           plusw1	equ	0x3FE3
 31185                           fsr1h	equ	0x3FE2
 31186                           fsr1l	equ	0x3FE1
 31187                           bsr	equ	0x3FE0
 31188                           indf2	equ	0x3FDF
 31189                           postinc2	equ	0x3FDE
 31190                           postdec2	equ	0x3FDD
 31191                           preinc2	equ	0x3FDC
 31192                           plusw2	equ	0x3FDB
 31193                           fsr2h	equ	0x3FDA
 31194                           fsr2l	equ	0x3FD9
 31195                           status	equ	0x3FD8


Data Sizes:
    Strings     964
    Constant    38
    Data        29
    BSS         385
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     93     124
    BANK1           256    118     251
    BANK2           256     52     237
    BANK3           256      0      80
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    I2C2_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_DO_TX$4743$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$4749$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$4755$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$4760	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$4755	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_DO_TX_EMPTY$4754	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$4749	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_DO_TX$4748	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX$4743	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_MasterFsm$4742	const PTR FTN()enum E16447 size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    I2C2_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2021$0$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_53(CODE[9]), STR_52(CODE[9]), STR_51(CODE[9]), STR_50(CODE[9]), 
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[48]), STR_46(CODE[20]), 
		 -> STR_45(CODE[36]), STR_44(CODE[27]), STR_43(CODE[20]), STR_42(CODE[28]), 
		 -> STR_41(CODE[5]), STR_39(CODE[56]), STR_38(CODE[20]), STR_37(CODE[17]), 
		 -> STR_36(CODE[23]), STR_35(CODE[20]), STR_34(CODE[28]), STR_33(CODE[5]), 
		 -> STR_24(CODE[37]), STR_23(CODE[38]), STR_21(CODE[37]), STR_20(CODE[38]), 
		 -> STR_18(CODE[9]), STR_17(CODE[9]), lcdTopRow(BANK2[20]), STR_11(CODE[27]), 
		 -> STR_10(CODE[9]), STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[14]), 
		 -> STR_3(CODE[10]), lcdBtnRow(BANK2[20]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_67(CODE[17]), STR_66(CODE[18]), STR_65(CODE[18]), STR_64(CODE[20]), 
		 -> STR_63(CODE[20]), STR_62(CODE[20]), STR_61(CODE[20]), STR_60(CODE[20]), 
		 -> STR_59(CODE[20]), STR_58(CODE[20]), STR_57(CODE[20]), STR_56(CODE[21]), 
		 -> STR_40(CODE[10]), STR_27(CODE[18]), STR_19(CODE[19]), STR_13(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> lcdTopRow(BANK2[20]), lcdBtnRow(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdTopRow(BANK2[20]), lcdBtnRow(BANK2[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S4170_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdTopRow(BANK2[20]), lcdBtnRow(BANK2[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdTopRow(BANK2[20]), lcdBtnRow(BANK2[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_67(CODE[17]), STR_66(CODE[18]), STR_65(CODE[18]), STR_64(CODE[20]), 
		 -> STR_63(CODE[20]), STR_62(CODE[20]), STR_61(CODE[20]), STR_60(CODE[20]), 
		 -> STR_59(CODE[20]), STR_58(CODE[20]), STR_57(CODE[20]), STR_56(CODE[21]), 
		 -> STR_53(CODE[9]), STR_52(CODE[9]), STR_51(CODE[9]), STR_50(CODE[9]), 
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[48]), STR_46(CODE[20]), 
		 -> STR_45(CODE[36]), STR_44(CODE[27]), STR_43(CODE[20]), STR_42(CODE[28]), 
		 -> STR_41(CODE[5]), STR_40(CODE[10]), STR_39(CODE[56]), STR_38(CODE[20]), 
		 -> STR_37(CODE[17]), STR_36(CODE[23]), STR_35(CODE[20]), STR_34(CODE[28]), 
		 -> STR_33(CODE[5]), STR_27(CODE[18]), STR_24(CODE[37]), STR_23(CODE[38]), 
		 -> STR_21(CODE[37]), STR_20(CODE[38]), STR_19(CODE[19]), STR_18(CODE[9]), 
		 -> STR_17(CODE[9]), STR_13(CODE[17]), lcdTopRow(BANK2[20]), STR_11(CODE[27]), 
		 -> STR_10(CODE[9]), STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[14]), 
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[17]), lcdBtnRow(BANK2[20]), 
		 -> STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_67(CODE[17]), STR_66(CODE[18]), STR_65(CODE[18]), STR_64(CODE[20]), 
		 -> STR_63(CODE[20]), STR_62(CODE[20]), STR_61(CODE[20]), STR_60(CODE[20]), 
		 -> STR_59(CODE[20]), STR_58(CODE[20]), STR_57(CODE[20]), STR_56(CODE[21]), 
		 -> STR_53(CODE[9]), STR_52(CODE[9]), STR_51(CODE[9]), STR_50(CODE[9]), 
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[48]), STR_46(CODE[20]), 
		 -> STR_45(CODE[36]), STR_44(CODE[27]), STR_43(CODE[20]), STR_42(CODE[28]), 
		 -> STR_41(CODE[5]), STR_40(CODE[10]), STR_39(CODE[56]), STR_38(CODE[20]), 
		 -> STR_37(CODE[17]), STR_36(CODE[23]), STR_35(CODE[20]), STR_34(CODE[28]), 
		 -> STR_33(CODE[5]), STR_27(CODE[18]), STR_24(CODE[37]), STR_23(CODE[38]), 
		 -> STR_21(CODE[37]), STR_20(CODE[38]), STR_19(CODE[19]), STR_18(CODE[9]), 
		 -> STR_17(CODE[9]), STR_13(CODE[17]), lcdTopRow(BANK2[20]), STR_11(CODE[27]), 
		 -> STR_10(CODE[9]), STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[14]), 
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[17]), lcdBtnRow(BANK2[20]), 
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 56
		 -> STR_67(CODE[17]), STR_66(CODE[18]), STR_65(CODE[18]), STR_64(CODE[20]), 
		 -> STR_63(CODE[20]), STR_62(CODE[20]), STR_61(CODE[20]), STR_60(CODE[20]), 
		 -> STR_59(CODE[20]), STR_58(CODE[20]), STR_57(CODE[20]), STR_56(CODE[21]), 
		 -> STR_53(CODE[9]), STR_52(CODE[9]), STR_51(CODE[9]), STR_50(CODE[9]), 
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[48]), STR_46(CODE[20]), 
		 -> STR_45(CODE[36]), STR_44(CODE[27]), STR_43(CODE[20]), STR_42(CODE[28]), 
		 -> STR_41(CODE[5]), STR_40(CODE[10]), STR_39(CODE[56]), STR_38(CODE[20]), 
		 -> STR_37(CODE[17]), STR_36(CODE[23]), STR_35(CODE[20]), STR_34(CODE[28]), 
		 -> STR_33(CODE[5]), STR_27(CODE[18]), STR_24(CODE[37]), STR_23(CODE[38]), 
		 -> STR_21(CODE[37]), STR_20(CODE[38]), STR_19(CODE[19]), STR_18(CODE[9]), 
		 -> STR_17(CODE[9]), STR_13(CODE[17]), lcdTopRow(BANK2[20]), STR_11(CODE[27]), 
		 -> STR_10(CODE[9]), STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[14]), 
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[17]), lcdBtnRow(BANK2[20]), 
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), resultTbl(BANK1[28]), main@pInspOS(BANK2[2]), 
		 -> main@pExpOS(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printstrblock@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_55(CODE[16]), STR_54(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[19]), STR_29(CODE[17]), STR_28(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[18]), STR_22(CODE[18]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), lcdTopRow(BANK2[20]), STR_12(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), 

    printstr@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_55(CODE[16]), STR_54(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[19]), STR_29(CODE[17]), STR_28(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[18]), STR_22(CODE[18]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), lcdTopRow(BANK2[20]), STR_12(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), lcdBtnRow(BANK2[20]), 

    timeElapsedR@prevTime	PTR unsigned short  size(2) Largest target is 2
		 -> main@printTime(BANK2[2]), main@rSubCycleTime(BANK2[2]), main@rCycleTime(BANK2[2]), InitProcedure@tstamp(BANK1[2]), 
		 -> monTstamp(BANK1[2]), 

    aCaptGetResult@outVal	PTR short  size(2) Largest target is 2
		 -> vMeasureIsr@instP(BANK0[2]), main@bdP2(BANK2[2]), main@bdP1(BANK2[2]), main@pAvgShort(BANK2[2]), 
		 -> main@pInst(BANK2[2]), main@pAvgUShort(BANK2[2]), InitProcedure@aPVal(BANK1[2]), InitProcedure@mPVal(BANK1[2]), 
		 -> InitProcedure@vddVal(BANK1[2]), MonitorMsgForcedSend@vddVal(BANK1[2]), 

    I2C2_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), 

    I2C2_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetBuffer@buffer	PTR void  size(2) Largest target is 80
		 -> i2cBuff(BANK3[80]), write@i2cBuff(COMRAM[4]), write4bits@i2cBuff(BANK0[2]), expanderWrite@i2cBuff(BANK0[2]), 
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2021$data_ptr	PTR unsigned char  size(2) Largest target is 80
		 -> i2cBuff(BANK3[80]), write@i2cBuff(COMRAM[4]), write4bits@i2cBuff(BANK0[2]), expanderWrite@i2cBuff(BANK0[2]), 
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.data_ptr	PTR unsigned char  size(2) Largest target is 80
		 -> i2cBuff(BANK3[80]), write@i2cBuff(COMRAM[4]), write4bits@i2cBuff(BANK0[2]), expanderWrite@i2cBuff(BANK0[2]), 
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2021$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2021$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> i2_rd1RegCompleteHandler(), i2_rd2RegCompleteHandler(), i2_wr1RegCompleteHandler(), i2_wr2RegCompleteHandler(), 
		 -> i2_rdBlkRegCompleteHandler(), i2_I2C2_CallbackReturnReset(), i2_I2C2_CallbackReturnStop(), I2C2_CallbackReturnReset(), 
		 -> I2C2_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E16447[19] size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S97$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_vMeasureIsr
    _I2C2_MasterIsr->_I2C2_MasterFsm
    _I2C2_MasterFsm->_I2C2_DO_TX
    _I2C2_DO_TX->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX->i2_rd1RegCompleteHandler
    _I2C2_DO_TX->i2_rd2RegCompleteHandler
    _I2C2_DO_TX->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX->i2_wr1RegCompleteHandler
    _I2C2_DO_TX->i2_wr2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX_EMPTY->i2_rd1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rd2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSendTxData
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSetCounter
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnReset
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnStop
    _I2C2_DO_BUS_COLLISION->i2_rd1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rd2RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rdBlkRegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_RESTART_READ->i2_I2C2_MasterSetCounter
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnReset
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnStop
    i2_I2C2_DO_RX_EMPTY->i2_rd1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rd2RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rdBlkRegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnReset
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnStop
    _I2C2_DO_ADDRESS_NACK->i2_rd1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rd2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rdBlkRegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr2RegCompleteHandler
    i2_wr2RegCompleteHandler->i2_I2C2_SetDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_I2C2_SetDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_I2C2_SetDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_I2C2_SetDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_I2C2_SetDataCompleteCallback
    i2_I2C2_SetDataCompleteCallback->i2_I2C2_SetCallback
    _adcCaptureIsr->i2_adcGetCh
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART1_Write
    i2_abs->i2___aomod
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _main->_MenuMng
    _vMeasureInit->_TMR2_SetInterruptHandler
    _screenInit->_setCursor
    _blink->_command
    _LcdI2CInit->_command
    _home->_command
    _display->_command
    _clear->_command
    _rPressurePredict->___aldiv
    ___aldiv->___lmul
    _aCaptureInit->_adcGetCh
    ___fladd->___xxtofl
    ___awdiv->___wmul
    _SYSTEM_Initialize->_TMR1_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MonitorMsgSend->_MonitorMsgForcedSend
    _keyRead->_keyPeek
    _InitProcedure->_MonitorMsgForcedSend
    _InitProcedure->_aCaptRstFlt
    _InitProcedure->_aCaptureSetOff
    _vMeasureGet->___lldiv
    ___lldiv->___lmul
    _timeElapsedR->_TMR1_ReadTimer
    _timeDelayMs->_timeElapsed
    _timeElapsed->_TMR1_ReadTimer
    _setCursor->_command
    _command->_send
    _send->_write4bits
    _noBacklight->_expanderWrite
    _backlight->_expanderWrite
    _printstrblock->_printstr
    _I2C2_MasterWrite->_I2C2_MasterOperation
    _I2C2_LOpen->_I2C2_Open
    _PrintStrBusy->_I2C2_LClose
    _I2C2_LClose->_I2C2_Close
    _keyReadEC->_timeDiff
    _timeGet->_TMR1_ReadTimer
    _timeDiff->_timeGet
    _keyPeek->_digitalReadC
    _keyPeek->_digitalReadD
    ___flge->___fladd
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _I2C2_DO_SEND_ADR_WRITE->_I2C2_MasterSendTxData
    _I2C2_DO_SEND_ADR_READ->_I2C2_DO_RX_EMPTY
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnReset
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnStop
    _I2C2_DO_RX_EMPTY->_rd1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rd2RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rdBlkRegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _I2C2_SetDataCompleteCallback->_I2C2_SetCallback
    _I2C2_MOpen->_I2C2_Open
    _I2C2_Open->_I2C2_SetInterruptHandler
    _I2C2_MClose->_I2C2_Close

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_vMeasureIsr
    _vMeasureIsr->i2_aCaptGetResult
    i2_aCaptGetResult->i2_printf
    _ADCC_ThresholdISR->_adcCaptureIsr
    _adcCaptureIsr->i2_printf
    i2_adcGetCh->i2_printf
    i2_printf->i2_vfprintf

Critical Paths under _main in BANK1

    _main->_InitProcedure
    _screenMng->_printf
    _screenMng->_sprintf
    _adcGetCh->_printf
    _MonitorMsgSend->_MonitorMsgForcedSend
    _MenuMng->_printf
    _InitProcedure->_MonitorMsgForcedSend
    _aCaptureSetOff->_printf
    _aCaptRstFlt->_printf
    _MonitorMsgForcedSend->_aCaptGetResult
    _sprintf->_vfprintf
    _aCaptGetResult->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0 1289743
                                            113 BANK1      5     5      0
                                              0 BANK2     52    52      0
                       _I2C2_MuxInit
                      _InitProcedure
                            _MenuMng
                    _MonitorErrorClr
                    _MonitorErrorSet
                        _MonitorInit
               _MonitorMsgForcedSend
                     _MonitorMsgSend
                  _SYSTEM_Initialize
                            ___awdiv
                            ___fladd
                             ___flge
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                     _aCaptGetResult
                        _aCaptRstFlt
                       _aCaptureInit
                          _bRateInit
                          _bRateUpdt
                            _keyPeek
                            _keyRead
                          _keyReadEC
                        _keyReadInit
                             _printf
                      _printstrblock
                   _rPressurePredict
                         _screenInit
                          _screenMng
                          _setCursor
                            _sprintf
                        _timeDelayMs
                           _timeDiff
                        _timeElapsed
                       _timeElapsedR
                            _timeGet
                           _timeInit
                        _vMeasureGet
                       _vMeasureInit
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureInit                                         0     0      0     211
           _TMR2_SetInterruptHandler
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timeInit                                             0     0      0       0
                    _TMR0_StartTimer
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _screenMng                                            2     2      0  112698
                                             90 BANK0      2     2      0
                       _PrintStrBusy
                             _printf
                           _printstr
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _screenInit                                           0     0      0  356392
                         _LcdI2CInit
                              _blink
                              _clear
                      _printstrblock
                          _setCursor
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (2) _blink                                                0     0      0   33571
                            _command
 ---------------------------------------------------------------------------------
 (2) _LcdI2CInit                                           3     1      2  211050
                                             59 BANK0      3     1      2
                              _clear
                            _command
                            _display
                      _expanderWrite
                               _home
                        _timeDelayMs
                         _write4bits
 ---------------------------------------------------------------------------------
 (3) _home                                                 0     0      0   36940
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (3) _display                                              0     0      0   33571
                            _command
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0   36940
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (1) _rPressurePredict                                    12     6      6    3844
                                             62 BANK0     12     6      6
                            ___aldiv
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                             48 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _bRateUpdt                                            4     4      0      31
                                             36 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _bRateInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aCaptureInit                                         2     2      0   21675
                                             66 BANK1      2     2      0
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
                           _adcGetCh
 ---------------------------------------------------------------------------------
 (2) _adcGetCh                                             3     3      0   21334
                                             90 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    3762
                                             50 BANK0     16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    5125
                                             42 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     906
                    _ADCC_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     484
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     121
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             36 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MonitorMsgSend                                       1     1      0  102843
                                             91 BANK0      1     1      0
               _MonitorMsgForcedSend
                       _timeElapsedR
 ---------------------------------------------------------------------------------
 (1) _MonitorInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuMng                                              3     3      0   24766
                                             90 BANK0      3     3      0
                            ___lwdiv
                            _keyRead
                             _printf
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _keyRead                                              3     3      0     421
                                             41 BANK0      3     3      0
                            _keyPeek
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1141
                                             36 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _InitProcedure                                       30    30      0  365146
                                             83 BANK1     30    30      0
               _MonitorMsgForcedSend
                             ___flge
                            ___lldiv
                             ___lmul
                           ___xxtofl
                     _aCaptGetResult
                        _aCaptRstFlt
                     _aCaptureSetOff
                            _keyPeek
                          _keyReadEC
                        _keyReadInit
                             _printf
                      _printstrblock
                       _setBacklight
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
                        _vMeasureGet
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureRst                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vMeasureGet                                          6     4      2     635
                                             61 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             48 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _timeElapsedR                                        10     6      4    2274
                                             44 BANK0     10     6      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _timeDelayMs                                          4     2      2    3369
                                             52 BANK0      4     2      2
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeElapsed                                          8     4      4    1672
                                             44 BANK0      8     4      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _setCursor                                           10     9      1   36044
                                             59 BANK0     10     9      1
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              1     1      0   33571
                                             58 BANK0      1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (3) _send                                                 4     3      1   33540
                                             54 BANK0      4     3      1
                         _write4bits
 ---------------------------------------------------------------------------------
 (4) _write4bits                                           3     3      0   33258
                                             51 BANK0      3     3      0
                        _I2C2_LClose
                         _I2C2_LOpen
                   _I2C2_MasterWrite
                     _I2C2_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _setBacklight                                         1     1      0   66287
                                             54 BANK0      1     1      0
                          _backlight
                        _noBacklight
 ---------------------------------------------------------------------------------
 (3) _noBacklight                                          0     0      0   33128
                      _expanderWrite
 ---------------------------------------------------------------------------------
 (3) _backlight                                            0     0      0   33128
                      _expanderWrite
 ---------------------------------------------------------------------------------
 (3) _expanderWrite                                        3     3      0   33128
                                             51 BANK0      3     3      0
                        _I2C2_LClose
                         _I2C2_LOpen
                   _I2C2_MasterWrite
                     _I2C2_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _printstrblock                                        2     0      2   35418
                                             55 BANK0      2     0      2
                       _PrintStrBusy
                           _printstr
 ---------------------------------------------------------------------------------
 (2) _printstr                                             4     2      2   33544
                                             51 BANK0      4     2      2
                         _I2C2_LOpen
                   _I2C2_MasterWrite
                     _I2C2_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterWrite                                     0     0      0   29468
               _I2C2_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C2_LOpen                                           1     1      0     285
                                             40 BANK0      1     1      0
                          _I2C2_Open
 ---------------------------------------------------------------------------------
 (2) _PrintStrBusy                                         0     0      0     133
                        _I2C2_LClose
 ---------------------------------------------------------------------------------
 (5) _I2C2_LClose                                          1     1      0     133
                                             37 BANK0      1     1      0
                         _I2C2_Close
           _I2C2_MasterIsNackFlagSet
 ---------------------------------------------------------------------------------
 (1) _keyReadInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyReadEC                                            3     3      0    3514
                                             52 BANK0      3     3      0
                            _keyPeek
                           _timeDiff
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeGet                                              2     0      2     102
                                             44 BANK0      2     0      2
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                       8     6      2     102
                                             36 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _timeDiff                                             6     2      4    2892
                                             46 BANK0      6     2      4
                            _timeGet (ARG)
 ---------------------------------------------------------------------------------
 (2) _keyPeek                                              2     2      0     322
                                             39 BANK0      2     2      0
                       _digitalReadC
                       _digitalReadD
 ---------------------------------------------------------------------------------
 (3) _digitalReadD                                         3     3      0      31
                                             36 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _digitalReadC                                         3     3      0      31
                                             36 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _aCaptureSetOff                                       3     1      2   21787
                                             90 BANK0      1     1      0
                                             66 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _aCaptRstFlt                                          5     5      0   21458
                                             90 BANK0      1     1      0
                                             66 BANK1      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1106
                                             36 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1076
                                             36 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     986
                                             66 BANK0     12     4      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _MonitorMsgForcedSend                                 6     6      0  100538
                                             90 BANK0      1     1      0
                                             78 BANK1      5     5      0
                          _I2C2_MAck
                        _I2C2_MClose
                         _I2C2_MOpen
               _I2C2_MasterOperation
                     _I2C2_SetBuffer
                    _MonitorErrorClr
                    _MonitorErrorSet
                     _aCaptGetResult
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   21674
                                             44 BANK1     22    10     12
                            ___lldiv (ARG)
                             ___lmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _aCaptGetResult                                      12    10      2   23982
                                             66 BANK1     12    10      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              22     4     18   21303
                                             44 BANK1     22     4     18
                            ___awdiv (ARG)
                           _timeDiff (ARG)
                            _timeGet (ARG)
                        _vMeasureGet (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   18077
                                             88 BANK0      2     2      0
                                             38 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    41      5   17157
                                             83 BANK0      5     0      5
                                             18 BANK1     20    20      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5869
                                             65 BANK0     18     8     10
                                              0 BANK1     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3603
                                             54 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             36 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1630
                                             47 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1130
                                             38 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             37 BANK0      1     1      0
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (6) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _UART1_Write                                          1     1      0      62
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             54 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             36 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             36 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    8535
                                             43 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             36 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             36 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7432
                                             36 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _MonitorErrorSet                                      1     1      0      31
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MonitorErrorClr                                      1     1      0      31
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterOperation                                 2     2      0   29468
                                             49 BANK0      2     2      0
              _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_SEND_ADR_WRITE
              _I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (7) _I2C2_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C2_DO_SEND_ADR_READ                                0     0      0   29338
                   _I2C2_DO_RX_EMPTY
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C2_MasterSendTxData                                1     1      0      31
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_DO_RX_EMPTY                                     2     2      0   29307
                                             47 BANK0      2     2      0
                   Absolute function *
           _I2C2_CallbackReturnReset *
            _I2C2_CallbackReturnStop *
          _I2C2_MasterDisableRestart
           _I2C2_MasterEnableRestart
              _I2C2_MasterSetCounter
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                2     0      2    5812
                                             45 BANK0      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                2     0      2    5812
                                             45 BANK0      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              2     0      2    5843
                                             45 BANK0      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                2     0      2    5812
                                             45 BANK0      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                2     0      2    5847
                                             45 BANK0      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C2_SetDataCompleteCallback                        4     0      4    2619
                                             41 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (11) _I2C2_SetCallback                                    5     1      4     957
                                             36 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C2_SetBuffer                                       4     0      4    3162
                                             36 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterSetCounter                                1     1      0      31
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C2_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C2_MasterDisableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C2_CallbackReturnStop                              2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (9) _I2C2_CallbackReturnReset                             2     0      2     150
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MOpen                                           1     1      0     285
                                             40 BANK0      1     1      0
                          _I2C2_Open
 ---------------------------------------------------------------------------------
 (6) _I2C2_Open                                            2     2      0     189
                                             38 BANK0      2     2      0
                _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
                    _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (7) _I2C2_SetInterruptHandler                             2     0      2     121
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MClose                                          1     1      0     133
                                             37 BANK0      1     1      0
                         _I2C2_Close
           _I2C2_MasterIsNackFlagSet
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterIsNackFlagSet                             2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _I2C2_Close                                           1     1      0      37
                                             36 BANK0      1     1      0
                _I2C2_MasterClearIrq
                   _I2C2_MasterClose
              _I2C2_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C2_MuxInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          4     4      0   73407
                                             32 BANK0      4     4      0
                   Absolute function *
                  _ADCC_ThresholdISR
                     _I2C2_MasterIsr *
                           _TMR2_ISR
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    9000
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                        _vMeasureIsr *
 ---------------------------------------------------------------------------------
 (16) _vMeasureIsr                                         8     8      0    9000
                                             92 COMRAM     2     2      0
                                             26 BANK0      6     6      0
                              _isqrt
                   i2_aCaptGetResult
 ---------------------------------------------------------------------------------
 (17) i2_aCaptGetResult                                   12    10      2    8428
                                             14 BANK0     12    10      2
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) _isqrt                                              10     8      2     326
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_MasterIsr                                      0     0      0   48209
                     _I2C2_MasterFsm
 ---------------------------------------------------------------------------------
 (16) _I2C2_MasterFsm                                      2     2      0   48209
                                             17 COMRAM     2     2      0
           _I2C2_ClearInterruptFlags
               _I2C2_DO_ADDRESS_NACK *
              _I2C2_DO_BUS_COLLISION *
                  _I2C2_DO_BUS_ERROR *
                       _I2C2_DO_IDLE *
                      _I2C2_DO_RESET *
                         _I2C2_DO_RX *
                     _I2C2_DO_RX_ACK *
            _I2C2_DO_RX_NACK_RESTART *
               _I2C2_DO_RX_NACK_STOP *
               _I2C2_DO_SEND_RESTART *
          _I2C2_DO_SEND_RESTART_READ *
         _I2C2_DO_SEND_RESTART_WRITE *
                  _I2C2_DO_SEND_STOP *
                         _I2C2_DO_TX *
                     _I2C2_DO_TX_ACK *
                   _I2C2_DO_TX_EMPTY *
                  _I2C2_MasterIsNack
                 i2_I2C2_DO_RX_EMPTY *
            i2_I2C2_DO_SEND_ADR_READ *
           i2_I2C2_DO_SEND_ADR_WRITE *
 ---------------------------------------------------------------------------------
 (17) i2_I2C2_DO_SEND_ADR_WRITE                            0     0      0      22
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_TX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_TX                                          6     6      0   13211
                                             11 COMRAM     6     6      0
                   Absolute function *
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
                   _I2C2_DO_TX_EMPTY
                  _I2C2_MasterIsNack
            _I2C2_MasterIsTxBufEmpty
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
            i2_I2C2_MasterSendTxData
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterIsTxBufEmpty                             0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_TX_EMPTY                                    2     2      0    4354
                                             11 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_SEND_STOP                                   0     0      0      44
              _I2C2_MasterGetCounter
                    _I2C2_MasterStop
            i2_I2C2_MasterSendTxData
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterGetCounter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_RX_NACK_STOP                                0     0      0       0
                       _I2C2_DO_IDLE
                _I2C2_MasterSendNack
                    _I2C2_MasterStop
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C2_MasterSendNack
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_RX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_RX                                          3     3      0    4388
                                              0 COMRAM     3     3      0
               _I2C2_MasterGetRxData
             _I2C2_MasterIsRxBufFull
                 i2_I2C2_DO_RX_EMPTY
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterIsRxBufFull                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_BUS_ERROR                                   0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_BUS_COLLISION                               2     2      0    8730
                                             11 COMRAM     2     2      0
                   Absolute function *
                      _I2C2_DO_RESET
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
              i2_I2C2_MasterClearIrq
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) i2_I2C2_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_DO_SEND_RESTART_WRITE                          0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_DO_SEND_RESTART_READ                           0     0      0    4398
            i2_I2C2_DO_SEND_ADR_READ
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (17) i2_I2C2_DO_SEND_ADR_READ                             0     0      0    4376
                 i2_I2C2_DO_RX_EMPTY
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (18) i2_I2C2_MasterSendTxData                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_I2C2_DO_RX_EMPTY                                  2     2      0    4354
                                             11 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (19) i2_I2C2_MasterSetCounter                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) i2_I2C2_MasterEnableRestart                          0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_I2C2_MasterDisableRestart                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_RESET                                       0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterResetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_ADDRESS_NACK                                2     2      0    4332
                                             11 COMRAM     2     2      0
                   Absolute function *
               _I2C2_DO_SEND_RESTART
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (19) i2_wr2RegCompleteHandler                             2     0      2     836
                                              9 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (19) i2_wr1RegCompleteHandler                             2     0      2     836
                                              9 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (19) i2_rdBlkRegCompleteHandler                           2     0      2     858
                                              9 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (19) i2_rd2RegCompleteHandler                             2     0      2     836
                                              9 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (19) i2_rd1RegCompleteHandler                             2     0      2     966
                                              9 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (20) i2_I2C2_SetDataCompleteCallback                      4     0      4     510
                                              5 COMRAM     4     0      4
                 i2_I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (21) i2_I2C2_SetCallback                                  5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (20) i2_I2C2_SetBuffer                                    4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (19) i2_I2C2_CallbackReturnStop                           2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) i2_I2C2_CallbackReturnReset                          2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _I2C2_DO_SEND_RESTART                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_ClearInterruptFlags                            0     0      0       0
          _I2C2_MasterClearCountFlag
           _I2C2_MasterClearNackFlag
           _I2C2_MasterClearStopFlag
          _I2C2_MasterIsCountFlagSet
           _I2C2_MasterIsNackFlagSet
           _I2C2_MasterIsStopFlagSet
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterIsStopFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterIsNackFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterIsCountFlagSet                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterClearStopFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterClearNackFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_MasterClearCountFlag                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   16198
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                      _adcCaptureIsr *
 ---------------------------------------------------------------------------------
 (16) _adcCaptureIsr                                      13    13      0   16198
                                             14 BANK0     13    13      0
                _ADCC_GetFilterValue
             i2_ADCC_StartConversion
                           i2___lmul
                         i2_adcGetCh
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_adcGetCh                                          3     3      0    7780
                                             92 COMRAM     3     3      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_printf                                            8     4      4    7749
                                              6 BANK0      8     4      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (19) i2_vfprintf                                          8     2      6    7551
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) i2_vfpfcnvrt                                        46    41      5    7177
                                             65 COMRAM    25    20      5
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (21) i2_dtoa                                             36    26     10    4164
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (22) i2_pad                                              11     5      6    2283
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (23) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (23) i2_fputs                                             7     3      4     970
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (21) i2_fputc                                             9     5      4     690
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (22) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                      i2_UART1_Write
                i2_UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (23) i2_UART1_is_tx_ready                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (23) i2_UART1_Write                                       1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (22) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (22) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (22) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (21) i2_atoi                                             15    13      2    1045
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (22) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (21) i2_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (22) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___lmul                                           12     4      8     300
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2_ADCC_StartConversion                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C2_MuxInit
   _InitProcedure
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
         _I2C2_MasterIsNackFlagSet
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___awdiv (ARG)
             ___wmul (ARG)
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
       _printf
         ___awdiv (ARG)
           ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
     ___flge
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___xxtofl
     _aCaptGetResult
       _printf
         ___awdiv (ARG)
           ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
     _aCaptRstFlt
       _printf
         ___awdiv (ARG)
           ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
     _aCaptureSetOff
       _printf
         ___awdiv (ARG)
           ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
     _keyPeek
       _digitalReadC
       _digitalReadD
     _keyReadEC
       _keyPeek
         _digitalReadC
         _digitalReadD
       _timeDiff
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _keyReadInit
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
     _printstrblock
       _PrintStrBusy
         _I2C2_LClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
           _I2C2_MasterIsNackFlagSet
       _printstr
         _I2C2_LOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
         _I2C2_MasterWrite
           _I2C2_MasterOperation
             _I2C2_DO_SEND_ADR_READ
               _I2C2_DO_RX_EMPTY
                 Absolute function(Fake) *
                 _I2C2_CallbackReturnReset *
                 _I2C2_CallbackReturnStop *
                 _I2C2_MasterDisableRestart *
                 _I2C2_MasterEnableRestart *
                 _I2C2_MasterSetCounter *
                 _rd1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
               _I2C2_MasterSendTxData
             _I2C2_DO_SEND_ADR_WRITE
               _I2C2_MasterSendTxData
             _I2C2_MasterSetCounter
         _I2C2_SetBuffer
     _setBacklight
       _backlight
         _expanderWrite
           _I2C2_LClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
             _I2C2_MasterIsNackFlagSet
           _I2C2_LOpen
             _I2C2_Open
               _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
               _I2C2_MasterOpen
               _I2C2_SetInterruptHandler
           _I2C2_MasterWrite
             _I2C2_MasterOperation
               _I2C2_DO_SEND_ADR_READ
                 _I2C2_DO_RX_EMPTY
                   Absolute function(Fake) *
                   _I2C2_CallbackReturnReset *
                   _I2C2_CallbackReturnStop *
                   _I2C2_MasterDisableRestart *
                   _I2C2_MasterEnableRestart *
                   _I2C2_MasterSetCounter *
                   _rd1RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                 _I2C2_MasterSendTxData
               _I2C2_DO_SEND_ADR_WRITE
                 _I2C2_MasterSendTxData
               _I2C2_MasterSetCounter
           _I2C2_SetBuffer
       _noBacklight
         _expanderWrite
           _I2C2_LClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
             _I2C2_MasterIsNackFlagSet
           _I2C2_LOpen
             _I2C2_Open
               _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
               _I2C2_MasterOpen
               _I2C2_SetInterruptHandler
           _I2C2_MasterWrite
             _I2C2_MasterOperation
               _I2C2_DO_SEND_ADR_READ
                 _I2C2_DO_RX_EMPTY
                   Absolute function(Fake) *
                   _I2C2_CallbackReturnReset *
                   _I2C2_CallbackReturnStop *
                   _I2C2_MasterDisableRestart *
                   _I2C2_MasterEnableRestart *
                   _I2C2_MasterSetCounter *
                   _rd1RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                 _I2C2_MasterSendTxData
               _I2C2_DO_SEND_ADR_WRITE
                 _I2C2_MasterSendTxData
               _I2C2_MasterSetCounter
           _I2C2_SetBuffer
     _setCursor
       _command
         _send
           _write4bits
             _I2C2_LClose
               _I2C2_Close
                 _I2C2_MasterClearIrq
                 _I2C2_MasterClose
                 _I2C2_MasterDisableIrq
               _I2C2_MasterIsNackFlagSet
             _I2C2_LOpen
               _I2C2_Open
                 _I2C2_MasterClearIrq
                 _I2C2_MasterEnableIrq
                 _I2C2_MasterOpen
                 _I2C2_SetInterruptHandler
             _I2C2_MasterWrite
               _I2C2_MasterOperation
                 _I2C2_DO_SEND_ADR_READ
                   _I2C2_DO_RX_EMPTY
                     Absolute function(Fake) *
                     _I2C2_CallbackReturnReset *
                     _I2C2_CallbackReturnStop *
                     _I2C2_MasterDisableRestart *
                     _I2C2_MasterEnableRestart *
                     _I2C2_MasterSetCounter *
                     _rd1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                   _I2C2_MasterSendTxData
                 _I2C2_DO_SEND_ADR_WRITE
                   _I2C2_MasterSendTxData
                 _I2C2_MasterSetCounter
             _I2C2_SetBuffer
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _timeElapsedR
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
     _vMeasureGet
       ___lldiv
         ___lmul (ARG)
     _vMeasureRst
   _MenuMng
     ___lwdiv
     _keyRead
       _keyPeek
         _digitalReadC
         _digitalReadD
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _MonitorErrorClr
   _MonitorErrorSet
   _MonitorInit
   _MonitorMsgForcedSend
     _I2C2_MAck
     _I2C2_MClose
       _I2C2_Close
         _I2C2_MasterClearIrq
         _I2C2_MasterClose
         _I2C2_MasterDisableIrq
       _I2C2_MasterIsNackFlagSet
     _I2C2_MOpen
       _I2C2_Open
         _I2C2_MasterClearIrq
         _I2C2_MasterEnableIrq
         _I2C2_MasterOpen
         _I2C2_SetInterruptHandler
     _I2C2_MasterOperation
       _I2C2_DO_SEND_ADR_READ
         _I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           _I2C2_CallbackReturnReset *
           _I2C2_CallbackReturnStop *
           _I2C2_MasterDisableRestart *
           _I2C2_MasterEnableRestart *
           _I2C2_MasterSetCounter *
           _rd1RegCompleteHandler *
             _I2C2_SetBuffer
             _I2C2_SetDataCompleteCallback
               _I2C2_SetCallback
           _rd2RegCompleteHandler *
             _I2C2_SetBuffer
             _I2C2_SetDataCompleteCallback
               _I2C2_SetCallback
           _rdBlkRegCompleteHandler *
             _I2C2_SetBuffer
             _I2C2_SetDataCompleteCallback
               _I2C2_SetCallback
           _wr1RegCompleteHandler *
             _I2C2_SetBuffer
             _I2C2_SetDataCompleteCallback
               _I2C2_SetCallback
           _wr2RegCompleteHandler *
             _I2C2_SetBuffer
             _I2C2_SetDataCompleteCallback
               _I2C2_SetCallback
         _I2C2_MasterSendTxData
       _I2C2_DO_SEND_ADR_WRITE
         _I2C2_MasterSendTxData
       _I2C2_MasterSetCounter
     _I2C2_SetBuffer
     _MonitorErrorClr
     _MonitorErrorSet
     _aCaptGetResult
       _printf
         ___awdiv (ARG)
           ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
   _MonitorMsgSend
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
         _I2C2_MasterIsNackFlagSet
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___awdiv (ARG)
             ___wmul (ARG)
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
       _printf
         ___awdiv (ARG)
           ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
     _timeElapsedR
       _TMR1_ReadTimer
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetTxInterruptHandler
   ___awdiv
     ___wmul (ARG)
   ___fladd
     ___xxtofl (ARG)
   ___flge
     ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___wmul
   ___xxtofl
   _aCaptGetResult
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
   _aCaptRstFlt
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
   _aCaptureInit
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
     _adcGetCh
       _printf
         ___awdiv (ARG)
           ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
   _bRateInit
   _bRateUpdt
   _keyPeek
     _digitalReadC
     _digitalReadD
   _keyRead
     _keyPeek
       _digitalReadC
       _digitalReadD
   _keyReadEC
     _keyPeek
       _digitalReadC
       _digitalReadD
     _timeDiff
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _keyReadInit
   _printf
     ___awdiv (ARG)
       ___wmul (ARG)
     _timeDiff (ARG)
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet (ARG)
       _TMR1_ReadTimer
     _vMeasureGet (ARG)
       ___lldiv
         ___lmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
   _printstrblock
     _PrintStrBusy
       _I2C2_LClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
         _I2C2_MasterIsNackFlagSet
     _printstr
       _I2C2_LOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
       _I2C2_MasterWrite
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
       _I2C2_SetBuffer
   _rPressurePredict
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
   _screenInit
     _LcdI2CInit
       _clear
         _command
           _send
             _write4bits
               _I2C2_LClose
                 _I2C2_Close
                   _I2C2_MasterClearIrq
                   _I2C2_MasterClose
                   _I2C2_MasterDisableIrq
                 _I2C2_MasterIsNackFlagSet
               _I2C2_LOpen
                 _I2C2_Open
                   _I2C2_MasterClearIrq
                   _I2C2_MasterEnableIrq
                   _I2C2_MasterOpen
                   _I2C2_SetInterruptHandler
               _I2C2_MasterWrite
                 _I2C2_MasterOperation
                   _I2C2_DO_SEND_ADR_READ
                     _I2C2_DO_RX_EMPTY
                       Absolute function(Fake) *
                       _I2C2_CallbackReturnReset *
                       _I2C2_CallbackReturnStop *
                       _I2C2_MasterDisableRestart *
                       _I2C2_MasterEnableRestart *
                       _I2C2_MasterSetCounter *
                       _rd1RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _rd2RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _rdBlkRegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _wr1RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _wr2RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                     _I2C2_MasterSendTxData
                   _I2C2_DO_SEND_ADR_WRITE
                     _I2C2_MasterSendTxData
                   _I2C2_MasterSetCounter
               _I2C2_SetBuffer
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _command
         _send
           _write4bits
             _I2C2_LClose
               _I2C2_Close
                 _I2C2_MasterClearIrq
                 _I2C2_MasterClose
                 _I2C2_MasterDisableIrq
               _I2C2_MasterIsNackFlagSet
             _I2C2_LOpen
               _I2C2_Open
                 _I2C2_MasterClearIrq
                 _I2C2_MasterEnableIrq
                 _I2C2_MasterOpen
                 _I2C2_SetInterruptHandler
             _I2C2_MasterWrite
               _I2C2_MasterOperation
                 _I2C2_DO_SEND_ADR_READ
                   _I2C2_DO_RX_EMPTY
                     Absolute function(Fake) *
                     _I2C2_CallbackReturnReset *
                     _I2C2_CallbackReturnStop *
                     _I2C2_MasterDisableRestart *
                     _I2C2_MasterEnableRestart *
                     _I2C2_MasterSetCounter *
                     _rd1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                   _I2C2_MasterSendTxData
                 _I2C2_DO_SEND_ADR_WRITE
                   _I2C2_MasterSendTxData
                 _I2C2_MasterSetCounter
             _I2C2_SetBuffer
       _display
         _command
           _send
             _write4bits
               _I2C2_LClose
                 _I2C2_Close
                   _I2C2_MasterClearIrq
                   _I2C2_MasterClose
                   _I2C2_MasterDisableIrq
                 _I2C2_MasterIsNackFlagSet
               _I2C2_LOpen
                 _I2C2_Open
                   _I2C2_MasterClearIrq
                   _I2C2_MasterEnableIrq
                   _I2C2_MasterOpen
                   _I2C2_SetInterruptHandler
               _I2C2_MasterWrite
                 _I2C2_MasterOperation
                   _I2C2_DO_SEND_ADR_READ
                     _I2C2_DO_RX_EMPTY
                       Absolute function(Fake) *
                       _I2C2_CallbackReturnReset *
                       _I2C2_CallbackReturnStop *
                       _I2C2_MasterDisableRestart *
                       _I2C2_MasterEnableRestart *
                       _I2C2_MasterSetCounter *
                       _rd1RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _rd2RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _rdBlkRegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _wr1RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _wr2RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                     _I2C2_MasterSendTxData
                   _I2C2_DO_SEND_ADR_WRITE
                     _I2C2_MasterSendTxData
                   _I2C2_MasterSetCounter
               _I2C2_SetBuffer
       _expanderWrite
         _I2C2_LClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
           _I2C2_MasterIsNackFlagSet
         _I2C2_LOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
         _I2C2_MasterWrite
           _I2C2_MasterOperation
             _I2C2_DO_SEND_ADR_READ
               _I2C2_DO_RX_EMPTY
                 Absolute function(Fake) *
                 _I2C2_CallbackReturnReset *
                 _I2C2_CallbackReturnStop *
                 _I2C2_MasterDisableRestart *
                 _I2C2_MasterEnableRestart *
                 _I2C2_MasterSetCounter *
                 _rd1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
               _I2C2_MasterSendTxData
             _I2C2_DO_SEND_ADR_WRITE
               _I2C2_MasterSendTxData
             _I2C2_MasterSetCounter
         _I2C2_SetBuffer
       _home
         _command
           _send
             _write4bits
               _I2C2_LClose
                 _I2C2_Close
                   _I2C2_MasterClearIrq
                   _I2C2_MasterClose
                   _I2C2_MasterDisableIrq
                 _I2C2_MasterIsNackFlagSet
               _I2C2_LOpen
                 _I2C2_Open
                   _I2C2_MasterClearIrq
                   _I2C2_MasterEnableIrq
                   _I2C2_MasterOpen
                   _I2C2_SetInterruptHandler
               _I2C2_MasterWrite
                 _I2C2_MasterOperation
                   _I2C2_DO_SEND_ADR_READ
                     _I2C2_DO_RX_EMPTY
                       Absolute function(Fake) *
                       _I2C2_CallbackReturnReset *
                       _I2C2_CallbackReturnStop *
                       _I2C2_MasterDisableRestart *
                       _I2C2_MasterEnableRestart *
                       _I2C2_MasterSetCounter *
                       _rd1RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _rd2RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _rdBlkRegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _wr1RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                       _wr2RegCompleteHandler *
                         _I2C2_SetBuffer
                         _I2C2_SetDataCompleteCallback
                           _I2C2_SetCallback
                     _I2C2_MasterSendTxData
                   _I2C2_DO_SEND_ADR_WRITE
                     _I2C2_MasterSendTxData
                   _I2C2_MasterSetCounter
               _I2C2_SetBuffer
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
       _write4bits
         _I2C2_LClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
           _I2C2_MasterIsNackFlagSet
         _I2C2_LOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
         _I2C2_MasterWrite
           _I2C2_MasterOperation
             _I2C2_DO_SEND_ADR_READ
               _I2C2_DO_RX_EMPTY
                 Absolute function(Fake) *
                 _I2C2_CallbackReturnReset *
                 _I2C2_CallbackReturnStop *
                 _I2C2_MasterDisableRestart *
                 _I2C2_MasterEnableRestart *
                 _I2C2_MasterSetCounter *
                 _rd1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
               _I2C2_MasterSendTxData
             _I2C2_DO_SEND_ADR_WRITE
               _I2C2_MasterSendTxData
             _I2C2_MasterSetCounter
         _I2C2_SetBuffer
     _blink
       _command
         _send
           _write4bits
             _I2C2_LClose
               _I2C2_Close
                 _I2C2_MasterClearIrq
                 _I2C2_MasterClose
                 _I2C2_MasterDisableIrq
               _I2C2_MasterIsNackFlagSet
             _I2C2_LOpen
               _I2C2_Open
                 _I2C2_MasterClearIrq
                 _I2C2_MasterEnableIrq
                 _I2C2_MasterOpen
                 _I2C2_SetInterruptHandler
             _I2C2_MasterWrite
               _I2C2_MasterOperation
                 _I2C2_DO_SEND_ADR_READ
                   _I2C2_DO_RX_EMPTY
                     Absolute function(Fake) *
                     _I2C2_CallbackReturnReset *
                     _I2C2_CallbackReturnStop *
                     _I2C2_MasterDisableRestart *
                     _I2C2_MasterEnableRestart *
                     _I2C2_MasterSetCounter *
                     _rd1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                   _I2C2_MasterSendTxData
                 _I2C2_DO_SEND_ADR_WRITE
                   _I2C2_MasterSendTxData
                 _I2C2_MasterSetCounter
             _I2C2_SetBuffer
     _clear
       _command
         _send
           _write4bits
             _I2C2_LClose
               _I2C2_Close
                 _I2C2_MasterClearIrq
                 _I2C2_MasterClose
                 _I2C2_MasterDisableIrq
               _I2C2_MasterIsNackFlagSet
             _I2C2_LOpen
               _I2C2_Open
                 _I2C2_MasterClearIrq
                 _I2C2_MasterEnableIrq
                 _I2C2_MasterOpen
                 _I2C2_SetInterruptHandler
             _I2C2_MasterWrite
               _I2C2_MasterOperation
                 _I2C2_DO_SEND_ADR_READ
                   _I2C2_DO_RX_EMPTY
                     Absolute function(Fake) *
                     _I2C2_CallbackReturnReset *
                     _I2C2_CallbackReturnStop *
                     _I2C2_MasterDisableRestart *
                     _I2C2_MasterEnableRestart *
                     _I2C2_MasterSetCounter *
                     _rd1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                   _I2C2_MasterSendTxData
                 _I2C2_DO_SEND_ADR_WRITE
                   _I2C2_MasterSendTxData
                 _I2C2_MasterSetCounter
             _I2C2_SetBuffer
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
     _printstrblock
       _PrintStrBusy
         _I2C2_LClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
           _I2C2_MasterIsNackFlagSet
       _printstr
         _I2C2_LOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
         _I2C2_MasterWrite
           _I2C2_MasterOperation
             _I2C2_DO_SEND_ADR_READ
               _I2C2_DO_RX_EMPTY
                 Absolute function(Fake) *
                 _I2C2_CallbackReturnReset *
                 _I2C2_CallbackReturnStop *
                 _I2C2_MasterDisableRestart *
                 _I2C2_MasterEnableRestart *
                 _I2C2_MasterSetCounter *
                 _rd1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
               _I2C2_MasterSendTxData
             _I2C2_DO_SEND_ADR_WRITE
               _I2C2_MasterSendTxData
             _I2C2_MasterSetCounter
         _I2C2_SetBuffer
     _setCursor
       _command
         _send
           _write4bits
             _I2C2_LClose
               _I2C2_Close
                 _I2C2_MasterClearIrq
                 _I2C2_MasterClose
                 _I2C2_MasterDisableIrq
               _I2C2_MasterIsNackFlagSet
             _I2C2_LOpen
               _I2C2_Open
                 _I2C2_MasterClearIrq
                 _I2C2_MasterEnableIrq
                 _I2C2_MasterOpen
                 _I2C2_SetInterruptHandler
             _I2C2_MasterWrite
               _I2C2_MasterOperation
                 _I2C2_DO_SEND_ADR_READ
                   _I2C2_DO_RX_EMPTY
                     Absolute function(Fake) *
                     _I2C2_CallbackReturnReset *
                     _I2C2_CallbackReturnStop *
                     _I2C2_MasterDisableRestart *
                     _I2C2_MasterEnableRestart *
                     _I2C2_MasterSetCounter *
                     _rd1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                   _I2C2_MasterSendTxData
                 _I2C2_DO_SEND_ADR_WRITE
                   _I2C2_MasterSendTxData
                 _I2C2_MasterSetCounter
             _I2C2_SetBuffer
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
   _screenMng
     _PrintStrBusy
       _I2C2_LClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
         _I2C2_MasterIsNackFlagSet
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
     _printstr
       _I2C2_LOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
       _I2C2_MasterWrite
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
       _I2C2_SetBuffer
     _setCursor
       _command
         _send
           _write4bits
             _I2C2_LClose
               _I2C2_Close
                 _I2C2_MasterClearIrq
                 _I2C2_MasterClose
                 _I2C2_MasterDisableIrq
               _I2C2_MasterIsNackFlagSet
             _I2C2_LOpen
               _I2C2_Open
                 _I2C2_MasterClearIrq
                 _I2C2_MasterEnableIrq
                 _I2C2_MasterOpen
                 _I2C2_SetInterruptHandler
             _I2C2_MasterWrite
               _I2C2_MasterOperation
                 _I2C2_DO_SEND_ADR_READ
                   _I2C2_DO_RX_EMPTY
                     Absolute function(Fake) *
                     _I2C2_CallbackReturnReset *
                     _I2C2_CallbackReturnStop *
                     _I2C2_MasterDisableRestart *
                     _I2C2_MasterEnableRestart *
                     _I2C2_MasterSetCounter *
                     _rd1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C2_SetBuffer
                       _I2C2_SetDataCompleteCallback
                         _I2C2_SetCallback
                   _I2C2_MasterSendTxData
                 _I2C2_DO_SEND_ADR_WRITE
                   _I2C2_MasterSendTxData
                 _I2C2_MasterSetCounter
             _I2C2_SetBuffer
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
   _setCursor
     _command
       _send
         _write4bits
           _I2C2_LClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
             _I2C2_MasterIsNackFlagSet
           _I2C2_LOpen
             _I2C2_Open
               _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
               _I2C2_MasterOpen
               _I2C2_SetInterruptHandler
           _I2C2_MasterWrite
             _I2C2_MasterOperation
               _I2C2_DO_SEND_ADR_READ
                 _I2C2_DO_RX_EMPTY
                   Absolute function(Fake) *
                   _I2C2_CallbackReturnReset *
                   _I2C2_CallbackReturnStop *
                   _I2C2_MasterDisableRestart *
                   _I2C2_MasterEnableRestart *
                   _I2C2_MasterSetCounter *
                   _rd1RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C2_SetBuffer
                     _I2C2_SetDataCompleteCallback
                       _I2C2_SetCallback
                 _I2C2_MasterSendTxData
               _I2C2_DO_SEND_ADR_WRITE
                 _I2C2_MasterSendTxData
               _I2C2_MasterSetCounter
           _I2C2_SetBuffer
   _sprintf
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
   _timeDelayMs
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _timeDiff
     _timeGet (ARG)
       _TMR1_ReadTimer
   _timeElapsed
     _TMR1_ReadTimer
   _timeElapsedR
     _TMR1_ReadTimer
   _timeGet
     _TMR1_ReadTimer
   _timeInit
     _TMR0_StartTimer
     _TMR1_StartTimer
   _vMeasureGet
     ___lldiv
       ___lmul (ARG)
   _vMeasureInit
     _TMR2_SetInterruptHandler
     _TMR2_Start
   _vMeasureRst

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcCaptureIsr *
       _ADCC_GetFilterValue
       i2_ADCC_StartConversion
       i2___lmul
       i2_adcGetCh
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
       i2_printf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
                 i2_UART1_is_tx_ready
             i2_isdigit
   _I2C2_MasterIsr *
     _I2C2_MasterFsm
       _I2C2_ClearInterruptFlags
         _I2C2_MasterClearCountFlag
         _I2C2_MasterClearNackFlag
         _I2C2_MasterClearStopFlag
         _I2C2_MasterIsCountFlagSet
         _I2C2_MasterIsNackFlagSet
         _I2C2_MasterIsStopFlagSet
       _I2C2_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_COLLISION *
         Absolute function(Fake) *
         _I2C2_DO_RESET *
           _I2C2_MasterResetBus
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterClearIrq *
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_ERROR *
         _I2C2_MasterResetBus
       _I2C2_DO_IDLE *
       _I2C2_DO_RESET *
         _I2C2_MasterResetBus
       _I2C2_DO_RX *
         _I2C2_MasterGetRxData
         _I2C2_MasterIsRxBufFull
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
       _I2C2_DO_RX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_RX_NACK_RESTART *
         _I2C2_MasterSendNack
       _I2C2_DO_RX_NACK_STOP *
         _I2C2_DO_IDLE
         _I2C2_MasterSendNack
         _I2C2_MasterStop
       _I2C2_DO_SEND_RESTART *
       _I2C2_DO_SEND_RESTART_READ *
         i2_I2C2_DO_SEND_ADR_READ
           i2_I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             i2_I2C2_CallbackReturnReset *
             i2_I2C2_CallbackReturnStop *
             i2_I2C2_MasterDisableRestart *
             i2_I2C2_MasterEnableRestart *
             i2_I2C2_MasterSetCounter *
             i2_rd1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rd2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rdBlkRegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
           i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_SEND_RESTART_WRITE *
       _I2C2_DO_SEND_STOP *
         _I2C2_MasterGetCounter
         _I2C2_MasterStop
         i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_TX *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         _I2C2_DO_TX_EMPTY *
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         _I2C2_MasterIsNack *
         _I2C2_MasterIsTxBufEmpty *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterSendTxData *
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_TX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_TX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_MasterIsNack *
       i2_I2C2_DO_RX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       i2_I2C2_DO_SEND_ADR_READ *
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         i2_I2C2_MasterSendTxData
       i2_I2C2_DO_SEND_ADR_WRITE *
         i2_I2C2_MasterSendTxData
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _vMeasureIsr *
       _isqrt
       i2_aCaptGetResult
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      50      11       31.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     34      ED       9       92.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     76      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5D      7C       5       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     313      32        0.0%
DATA                 0      0     313       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 22 13:04:53 2020

                                ?_vMeasureGet 009D                                  ?_vMeasureIsr 0001  
                                ?_vMeasureRst 0001              __end_of_TMR2_SetInterruptHandler 7864  
                               ?_vMeasureInit 0001                            _I2C2_MasterSendAck 79E0  
                       _I2C2_DO_BUS_COLLISION 6682                       _I2C2_MasterIsTxBufEmpty 790E  
                                 __CFG_CP$OFF 000000                                    i2_adcGetCh 6990  
                                          _IP 01F8                                ?_adcCaptureIsr 0001  
                                ___awdiv@sign 008F                        __end_of_FVR_Initialize 798C  
                         ___wmul@multiplicand 0086                           _I2C2_MasterSendNack 79DA  
                        _I2C2_DO_ADDRESS_NACK 68EA                                  _chHighVAlarm 0151  
                       __end_ofi2_UART1_Write 6C4E                          ?_I2C2_MasterClearIrq 0001  
                                 __CFG_LVP$ON 000000                      __end_of_I2C2_SetCallback 635C  
                         _I2C2_MasterResetBus 797A                                           l440 6BA0  
                                         _BPM 01F9                           ?_I2C2_MasterSendAck 0001  
                          i2___aodiv@quotient 0013                               _timer1ReloadVal 02E1  
                                         _abs 6CCE                                           _pad 56BE  
                                  _LcdI2CInit 5CAC              __end_ofi2_I2C2_DO_SEND_ADR_WRITE 76B8  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 71F6  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                      ?i2_rd1RegCompleteHandler 000A  
                         __end_ofi2_vfpfcnvrt 2AF6                      _I2C2_ClearInterruptFlags 7198  
           __end_of_I2C2_MasterIsCountFlagSet 78C6                     ??_I2C2_DO_RX_NACK_RESTART 0001  
                          _UART1_Transmit_ISR 7014                                 __CFG_BBEN$OFF 000000  
                                 main@pInspOS 02B9                      ?i2_wr1RegCompleteHandler 000A  
          __size_of_I2C2_DO_SEND_RESTART_READ 000E              __end_of_I2C2_CallbackReturnReset 7952  
                  ?_I2C2_DO_SEND_RESTART_READ 0001                                  __CFG_ZCD$OFF 000000  
                         MonitorErrorClr@flag 0084                             ?i2_I2C2_SetBuffer 0001  
                                ?_keyReadInit 0001                                          ?_abs 0096  
                     ??_rd2RegCompleteHandler 008F                                          l1500 20BC  
                                        l2230 6F38                                          l3014 4C04  
                                        l3007 4B7E                                          l1425 48E4  
                                        l1417 4838                                          l1426 48EA  
                                        l3027 6CFE                                          l2236 6FA4  
                                        l2164 316A                                          l1453 18C6  
                                        l2181 3230                                          l1702 43A6  
                                        l1535 020A                                          l2281 56F8  
                                        l3058 45E6                                          l1467 1A2C  
                                        l2292 39E2                                          l1564 07F6  
                                        l1548 0388                                          l2294 39EE  
                                        l1479 1B3E                                          l1648 68A6  
                                        l2617 5518                                          l1675 52CC  
                                        l2379 5E38                                          l1668 6A5C  
                        _ADCC_StartConversion 7744                                          l1679 5284  
                                        l1696 42B4                                          l1786 5F40  
                                        l2906 357C                                          l2843 67DC  
                                        l2907 3578                       ?_I2C2_DO_SEND_ADR_WRITE 0001  
                                        ?_pad 0096                                          l2881 3442  
                                        l2882 3420                                          l2897 3514  
                                        STR_1 FFA2                                          STR_2 FF70  
                                        STR_3 FFD9                                          STR_4 FEC6  
                                        STR_5 FFC1                                          STR_6 FFB2  
                                        STR_7 FFB2                                          STR_8 FEE8  
                                        STR_9 FEF9                          _I2C2_MasterOperation 6ABE  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PEEP 01F7  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                     I2C2_MasterSendTxData@data 0084  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                          ?_I2C2_MasterSendNack 0001  
                       ?_I2C2_MasterEnableIrq 0001                __size_of_I2C2_DO_SEND_ADR_READ 0026  
                     ??_wr2RegCompleteHandler 008F                                          _MaxP 01FA  
                                        _MaxV 01F6                         ?_I2C2_MasterGetRxData 0001  
               __end_of_I2C2_DO_SEND_ADR_READ 73D0                                 __CFG_FCMEN$ON 000000  
                          ??i2_I2C2_SetBuffer 0005                           ?_UART1_Transmit_ISR 0001  
                                        _chIP 0155                                ?_printstrblock 0097  
                                        abs@a 0096                                          _dbuf 0247  
                        ?_I2C2_MasterResetBus 0001                                          _atoi 43FC  
                                        _main 001E                                          _dtoa 395C  
                                        _home 76CE                                          _send 7462  
                                        _prec 00C4                               _TMR0_StartTimer 7A00  
                                        _nout 00C0                                          pad@i 009D  
                                        pad@p 009A                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 009F                                          fsr2l 003FD9  
                        ??_I2C2_MasterSendAck 0001                                   i2_atoi$4150 0012  
                                 i2_atoi$4148 0010                                   i2_atoi$4149 0014  
                   __size_of_I2C2_DO_RX_EMPTY 0082                                          prodh 003FF4  
                                        prodl 003FF3                                          start 001A  
                              _MonitorMsgSend 7334                               __end_ofi2_fputc 5A2C  
                             __end_ofi2_fputs 6D4A                     __size_of_I2C2_DO_TX_EMPTY 0064  
               ??_UART1_SetTxInterruptHandler 0086                               __end_ofi2_putch 7732  
                            ??_I2C2_MasterFsm 0012                                 __CFG_CSWEN$ON 000000  
                  i2rd1RegCompleteHandler@ptr 000A                              ??_I2C2_MasterIsr 0014  
                       _lastI2CMonTrfResponse 0149              __size_ofi2_I2C2_MasterSetCounter 000A  
                      ??_MonitorMsgForcedSend 00BA                                   i2_dtoa$3676 0030  
                       _I2C2_MasterSetCounter 78F6                          aCaptGetResult@lclRaw 01C4  
                         MonitorErrorSet@flag 0084                                  ___param_bank 000000  
            __size_ofi2_I2C2_MasterSendTxData 000A                    ??_I2C2_MasterIsNackFlagSet 0001  
                              ??_vMeasureInit 0086                         _I2C2_MasterSendTxData 78EA  
                                command@value 009A              __size_of_rdBlkRegCompleteHandler 0056  
                             __end_of_MenuMng 2F16                          aCaptGetResult@outVal 01BC  
                                       ??_abs 0098                                         ??_pad 009C  
                                main@pPlateau 02B0                    __size_of_UART1_is_tx_ready 0010  
                                  i2_vfprintf 6170                       __end_of_TMR0_Initialize 76A2  
                            ??_I2C2_SetBuffer 0088                   ??_I2C2_MasterDisableRestart 0084  
                                  _HighVAlarm 01F4                         ?_I2C2_DO_ADDRESS_NACK 0001  
                             ?_FVR_Initialize 0001                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0001                             __end_of_I2C2_MAck 79CE  
               __end_of_OSCILLATOR_Initialize 7674                         ??_I2C2_MasterClearIrq 0084  
                 ?_I2C2_DO_SEND_RESTART_WRITE 0001                                         l13001 5720  
                                main@rTimeTmp 02A7                                         l13005 5754  
                                       l13111 6AB4                                         l13031 4CC0  
                                       l13043 4D0E                                         l13045 4D22  
                                       l13037 4CE8                                         l13063 4DBA  
                                       l13055 4D7E                                         l13303 3A12  
                                       l14103 41C2                                         l14121 4322  
                                       l14105 41EE                                         l14113 428A  
                                       l15001 4BBA                                         l13059 4D94  
                                       l13091 500A                                         l13083 4FAE  
                                       l13075 4F70                                         l13307 3A24  
                                       l14107 421A                                         l15011 4C2A  
                                       l15003 4BC6                                         l14203 65B6  
                                       l14061 6BF0                                         l13085 4FC2  
                                       l13341 3BF0                                         l13317 3B68  
                                       l14125 4368                                         l14109 4246  
                                       l15013 4C36                                         l15005 4BEC  
                                       l14221 49BA                                         l12623 632A  
                                       l13095 5020                                         l13079 4F94  
                                       l14135 437A                                         l14143 43C0  
                                       l14215 6FD4                                         l13271 6B6C  
                                       l14065 6C02                                         l13337 3BD6  
                                       l14129 436C                                         l13257 6FAA  
                                       l14171 6F46                                         l13363 44AC  
                                       l13347 440E                                         l13099 5046  
                                       l13603 24FE                                         l13275 6B7E  
                                       l13507 600A                                         l14069 6C08  
                                       l13373 455E                                         l13365 44B4  
                                       l13357 4498                                         l13349 4412  
                                       l12653 6BC2                                         l12733 76F8  
                                       l13613 2572                                         l13541 213E  
                                       l15029 4C7A                                         l14181 656C  
                                       l13517 6036                                         l15213 1AE4  
                                       l15133 18A4                                         l15141 18E6  
                                       l16101 01B8                                         l14167 6F3E  
                                       l13367 44BA                                         l12655 6BC4  
                                       l12639 6B8A                                         l13607 2508  
                                       l13551 2158                                         l13543 214C  
                                       l13623 258E                                         l13279 6B84  
                                       l14239 4AE0                                         l13527 6062  
                                       l15127 186C                                         l16103 01C8  
                                       l12753 6080                                         l13369 4502  
                                       l13289 39C2                                         l13617 257E  
                                       l14601 494A                                         l15321 1ECC  
                                       l15233 1B94                                         l16201 0528  
                                       l16113 01FA                                         l12747 6078  
                                       l13563 216E                                         l13555 215E  
                                       l13547 2152                                         l13539 213A  
                                       l13811 6132                                         l14187 6588  
                                       l14275 5DEA                                         l15315 1E9A  
                                       l15227 1B5E                                         l15219 1B1C  
                                       l15171 1A24                                         l15163 19D0  
                                       l16051 00DA                                         l12941 5B6E  
                                       l12765 6094                                         l13581 22B8  
                                       l13565 21DC                                         l14197 6598  
                                       l14277 5DF6                                         l15341 1FC4  
                                       l15325 1EEC                                         l15237 1BB6  
                                       l15245 1BD4                                         l15165 19D8  
                                       l15149 1910                                         l15421 2B2A  
                                       l15093 5888                                         l16133 0250  
                                       l12759 6088                                         l12775 60A4  
                                       l12791 58E8                                         l12863 6CB6  
                                       l13559 2164                                         l14607 495A  
                                       l14711 5206                                         l14287 5E2A  
                                       l15191 1A6E                                         l15087 586A  
                                       l16215 05CA                                         l16055 0112  
                                       l13577 2284                                         l13809 6108  
                                       l14561 48CE                                         l14713 5230  
                                       l14633 654A                                         l15353 2082  
                                       l15177 1A2E                                         l15601 2E46  
                                       l15513 2C76                                         l15441 2B6C  
                                       l16233 069C                                         l16217 05D2  
                                       l16305 0C7C                                         l16145 0294  
                                       l16137 0260                                         l12859 6C98  
                                       l12867 6FF0                                         l13579 22AA  
                                       l14571 48FA                                         l14563 48D4  
                                       l14707 51B2                                         l15275 1D58  
                                       l15531 2CA0                                         l15523 2C90  
                                       l15099 58AC                                         l16243 06F0  
                                       l16139 0266                                         l16075 0154  
                                       l16091 0188                                         l12869 6FF4  
                                       l13597 245C                                         l14557 48A8  
                                       l14549 4868                                         l14709 51DC  
                                       l14717 529E                                         l14645 6DAC  
                                       l15357 2096                                         l15197 1AA0  
                                       l15285 1E32                                         l15429 2B4C  
                                       l15605 2E82                                         l16333 0D02  
                                       l16173 0394                                         l12959 737E  
                                       l12983 6AFC                                         l12991 56DE  
                                       l14583 491A                                         l14655 6A48  
                                       l14671 7686                                         l15279 1D7E  
                                       l15471 2BF6                                         l15463 2BE6  
                                       l15607 2ED0                                         l16415 1076  
                                       l16159 0314                                         l16087 0178  
                                       l14577 490A                                         l14681 5EFE  
                                       l14649 761A                                         l14745 7396  
                                       l15449 2B7C                                         l15609 2EE0  
                                       l14753 689A                                         l14921 5412  
                                       l14913 53E4                                         l15721 32A0  
                                       l15713 3270                                         l16441 120A  
                                       l16353 0D8C                                         l16337 0D12  
                                       l16329 0CF8                                         l12979 6AF2  
                                       l12995 56F0                                         l14595 493A  
                                       l13795 70A4                                         l13875 6EF2  
                                       l15571 2D56                                         l15563 2D16  
                                       l15555 2CDE                                         l15547 2CC4  
                                       l15539 2CB4                                         l15379 694E  
                                       l14931 5446                                         l14907 53CC  
                                       l15715 327C                                         l15707 3256  
                                       l15651 2FF4                                         l15643 2F7C  
                                       l16347 0D4C                                         l16339 0D18  
                                       l16283 0A38                                         l16099 01B2  
                                       l12997 5702                                         l14589 492A  
                                       l13893 70CC                                         l15821 342E  
                                       l14765 68A2                                         l15717 3288  
                                       l15725 32AC                                         l15661 30AA  
                                       l15653 302E                                         l15645 2FB2  
                                       l16365 0DEA                                         l16269 08BA  
                                       l14951 54EC                                         l14695 5F58  
                                       l15591 2E04                                         l15583 2DCA  
                                       l15567 2D36                                         l15559 2CF6  
                                       l15487 2C1A                                         l15479 2C0A  
                                       l15823 3432                                         l15743 330A  
                                       l14759 689E                                         l14919 5406  
                                       l14935 5454                                         l15719 3294  
                                       l16383 0EF6                                         l16471 15AA  
                                       l14961 5550                                         l15577 2D76  
                                       l15497 2C3C                                         l15921 3600  
                                       l15809 33D0                                         l15665 30E4  
                                       l15681 319E                                         l16457 1400  
                                       l14955 5502                                         l14947 54B8  
                                       l14891 65D6                                         l14699 5F5E  
                                       l14971 67AA                                         l15595 2E24  
                                       l15587 2DEA                                         l15579 2DB2  
                                       l15923 3602                                         l15771 3356  
                                       l15747 330E                                         l14779 68C4  
                                       l14939 546A                                         l15659 3070  
                                       l14973 67B2                                         l15941 5E66  
                                       l15917 35F8                                         l15909 35D2  
                                       l15845 3488                                         l15837 3466  
                                       l15693 31EE                                         l15669 3128  
                                       l16397 0FA0                                         l14895 65EA  
                                       l14983 67D2                                         l15847 348C  
                                       l15855 349E                                         l15767 3352  
                                       l16399 0FA8                                         l14993 4B96  
                                       l15953 5E8C                                         l15873 3538  
                                       l15865 3504                                         l15697 321A  
                                       l15955 5E94                                         l15947 5E76  
                                       l15883 354E                                         l15779 3376  
                                       l15973 5ECC                                         l15965 5EB4  
                                       l14999 4BB4                                         l15969 5EBE  
                                       l15889 3558                               __end_of___aldiv 5484  
                             __end_of___aodiv 4DEC                                         _ADCAP 003EF5  
                                       _ADACT 003EFE          __end_of_I2C2_SetDataCompleteCallback 7572  
       __size_of_I2C2_SetDataCompleteCallback 0020              ??i2_I2C2_SetDataCompleteCallback 000A  
             ?i2_I2C2_SetDataCompleteCallback 0006                                         ?_atoi 008B  
                _I2C2_SetDataCompleteCallback 7552                               __end_of___fladd 3626  
                                       ?_main 0001                                         ?_dtoa 00A1  
                                       _ADCLK 003EFF                               __end_of___aomod 5078  
                                       ?_home 0001                             __end_of_I2C2_Open 5B74  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 5EDA                                         ?_send 0096  
                                       STR_10 FFEC                                         STR_11 FD65  
                                       STR_12 FF2C                                         STR_20 FCA3  
                                       STR_13 FF81                                         STR_21 FCC9  
                                       STR_14 FF2C                                         STR_22 FE80  
                                       STR_30 FE24                                         STR_23 FCA3  
                                       STR_31 FF3D                                         STR_15 FED7  
                                       STR_24 FCC9                                         STR_40 FFCF  
                                       STR_16 FF5F                                         STR_32 FF4E  
                                       STR_17 FFEC                                         STR_33 FFFA  
                                       STR_41 FFF5                                         STR_25 FE6E  
                               __CFG_WDTE$OFF 000000                                         STR_50 FFEC  
                                       STR_18 FFEC                                         STR_26 FF1B  
                                       STR_34 FD2E                                         STR_42 FD12  
                                       STR_51 FFEC                                         STR_27 FE92  
                                       STR_19 FE37                                         STR_35 FDE8  
                                       STR_43 FDD4                                         STR_60 FDAC  
                                       STR_52 FFEC                                         STR_28 FF0A  
                                       STR_36 FD80                                         STR_44 FD4A  
                                       STR_29 FF1B                                         STR_61 FDC0  
                                       STR_53 FFE3                                         STR_37 FEB5  
                                       STR_45 FCEE                                         STR_62 FDAC  
                                       STR_54 FEA4                                         STR_38 FE10  
                                       STR_46 FDFC                                         STR_63 FDC0  
                                       STR_55 FF92                                         STR_47 FC73  
                                       STR_39 FC3B                                         STR_48 FFEC  
                                       STR_64 FDC0                                         STR_56 FD97  
                                       _ADRPT 003EEC                                         STR_49 FFEC  
                                       STR_65 FE4A                                         STR_57 FDC0  
                                       STR_66 FE5C                                         STR_58 FDAC  
                                       STR_67 FEC6                                         STR_59 FDC0  
                             _TMR1_StartTimer 79FC                               aCaptureInit@idx 01BC  
                             __end_of___lldiv 5E52                                         _T1CLK 003FB5  
                                       u12210 3A0A                                         u12300 4440  
                                       u11500 58E0                                         u12220 3B78  
                             ___awdiv@divisor 008C                                         u11350 77CC  
                                       u12150 3994                                         u12320 447A  
                                       u11520 5928                                         u12240 3B9A  
                                       u12160 3996                                         _T1CON 003FB2  
                                       u12241 3B98                                         u12330 4494  
                                       u12250 3BA8                                         _U1P1H 003DED  
                                       u12307 4432                                         u12260 3BAE  
                                       u14020 5F4A                                         _U1P2H 003DEF  
                                       u12350 44E4                                         u11710 6CDC  
                                       u12190 39D6                                         u14030 5F4C  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u12327 446C                                         u11720 6EDA  
                                       u12360 4544                                         u12280 3BBE  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       u11730 6EDC                                         u12370 4590  
                                       u13170 615C                                         u13250 724E  
                                       _U1P3L 003DF0                                         u12380 45AE  
                                       u13244 723A                                         u12357 44D6  
                                       u13245 7236                                         u12390 45B0  
                                       u15110 2C32                                         u12367 4536  
                                       u11488 60B4                                         u11840 4FC6  
                                       u12800 2300                                         u12720 2108  
                                       u13440 41E8                                         u13280 727C  
                                       u14320 5416                                         u11489 60C6  
                                       u12377 4582                                         u11761 4CEE  
                                       u13177 614E                                         u14065 51CC  
                                       u12810 231E                                         u13450 4214  
                                       u13274 7268                                         u13610 4B0A  
                                       u14410 67B6                                         u14075 51F6  
                                       u13275 7264                                         u11780 4D26  
                                       u12900 2546                                         u12820 2320  
                                       u12740 21AC                                         u13460 4240  
                                       u13620 4B10                                         u15220 2D0E  
                                       u13445 41DE                                         u14085 5220  
                                       u12830 232C                                         u13470 426C  
                                       u13630 7764                                         u15230 2D2E  
                                       u12807 22F2                                         u12727 20FA  
                                       u13455 420A                                         u14095 524A  
                                       u11880 6AB0                                         u12920 25CC  
                                       u12840 236A                                         u13560 49F2  
                                       u15240 2D4E                                         u13465 4236  
                                       u13617 4AFC                                         u12770 2228  
                                       u13570 4A34                                         u12907 2538  
                                       u12747 219E                                         u13475 4262  
                                       u12860 23AE                                         u13820 48C6  
                                       u13580 4A76                                         u13660 5DFA  
                                       u16300 02CE                                         _T2HLT 003FAD  
                                       u12870 23B4                                         u13590 4AC0  
                                       u15270 2DE2                                         u16230 0192  
                                       u12927 25BE                                         u12847 235C  
                                       u13567 49E4                                         u12880 249A  
                                       u12777 221A                                         u13577 4A26  
                                       u13921 6D94                                         u14490 4C40  
                                       u14730 1A9C                                         u15370 2F46  
                                       u12867 23A0                                         u13587 4A68  
                                       u14740 1A9E                                         u14660 190A  
                                       u16500 0806                                         u16340 0362  
                                       u16180 012A                                         u13597 4AB2  
                                       u14670 196E                                         u16350 0372  
                                       u12887 248C                                         u14840 1CFC  
                                       u14680 197E                                         u15640 33F4  
                                       u16520 086C                                         u14850 1D18  
                                       u14690 19F4                                         u15650 3404  
                                       u16370 0410                                         u14860 1D28  
                                       u15900 35DE                                         u15820 355C  
                                       u15660 3406                                         u14870 1D38  
                                       u16390 042A                                __CFG_DEBUG$OFF 000000  
                                       u15840 3572                                         u16560 09A8  
                                       u14890 1D58                                         u15690 344A  
                                       u16650 0DE2                                         u14990 6972  
                                       u16760 12D2                                         u15970 5E98  
                             __end_of___lwdiv 67EA                    _ADCC_ADTI_InterruptHandler 02EB  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       _T2RST 003FAF                                         _U1TXB 003DEA  
                                       i2l330 5C7C                                         i2l322 5C46  
                                       i2l331 5C92                                         i2l332 5C88  
                                       i2l324 5C64                                         i2l326 5C6C  
                                       i2l440 6C24                                         i2l328 5C74  
                                       i2l446 7040                               ___awdiv@counter 008E  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00B5  
                                       _TMR0H 003FB7                                         _TMR1H 003FB1  
                                       _TMR0L 003FB6                                         _TMR1L 003FB0  
                                       _PORTC 003FCC                                         _PORTD 003FCD  
                      ?_I2C2_MasterGetCounter 0001                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                 ??_aCaptRstFlt 01BC  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         i2_abs 6D4A  
                                       i2_pad 5554                                 _InitProcedure 17DE  
                    ?i2_I2C2_DO_SEND_ADR_READ 0001                           ___lmul@multiplicand 0088  
                                       __Addr 0148                                         _chBPM 0156  
                             __end_of_command 77C0                              __end_of_TMR2_ISR 750E  
                               __CFG_WRTB$OFF 000000                        ?_I2C2_MasterDisableIrq 0001  
                             __end_of_display 78D2                                 __CFG_WRTC$OFF 000000  
                               __CFG_WRTD$OFF 000000                                         __cols 0147  
              __end_of_I2C2_DO_SEND_ADR_WRITE 765C                       __size_of_aCaptGetResult 028A  
                             __end_of_keyPeek 65C6                                    i2isdigit@c 0001  
                             __end_of_keyRead 73AA                                         _clear 76E2  
                                       _blink 7810                      ?_I2C2_CallbackReturnStop 008D  
                                       _flags 00C6                                         __rows 0146  
                                 ?_TMR2_Start 0001                                         _intIP 0141  
                                       _keysC 02DB                                         _keysD 02D5  
                       ?_ADCC_StartConversion 0001                                         _fputc 58D0  
                           I2C2_LClose@trfRsp 0085                                         _fputs 6C8E  
                             __end_of_isdigit 6EE2                                         _isqrt 5A2C  
                       ?_I2C2_MasterOperation 0001                            __CFG_MCLRE$EXTMCLR 000000  
                                       atoi@n 0098                                         pad@fp 0096  
                                       atoi@s 008B                                         _width 00C2  
                                       _putch 76F6                         I2C2_Close@returnValue 0084  
                             _I2C2_DO_TX$2557 0010                                         dtoa@d 00A3  
                                       dtoa@i 018A                                         dtoa@n 0182  
                                       dtoa@p 017C                                         dtoa@s 0180  
                                       dtoa@w 017E                                   keyReadEC@ch 0096  
           __end_of_I2C2_DO_SEND_RESTART_READ 789C                               __end_of_isspace 6ABE  
                       ??_I2C2_MasterSendNack 0001                       __end_of_TMR1_Initialize 6C8E  
                             __end_of_timeGet 778C                                         pclath 003FFA  
                                       tablat 003FF5                              __end_ofi2___lmul 6682  
                        _I2C2_DO_RX_NACK_STOP 7880                         ??_I2C2_MasterResetBus 0001  
                            __end_ofi2___wmul 72DC                                         plusw1 003FE3  
                                       plusw2 003FDB                               _MonitorErrorClr 779E  
                             _MonitorErrorSet 778C                  __size_of_ADCC_GetFilterValue 0016  
                                       status 003FD8                                    i2isspace@c 0001  
                      __end_of_MonitorMsgSend 735C                               __end_of_sprintf 6792  
                           timeElapsed@intDur 0092                                  ??_I2C2_DO_RX 0001  
                                ??_I2C2_DO_TX 000C              _UART1_DefaultFramingErrorHandler 000000  
                          __size_ofi2___aodiv 0158                            __size_ofi2___aomod 0134  
                                ??_I2C2_LOpen 0088                                  ??_I2C2_MOpen 0088  
                                ??_I2C2_Close 0084                                 main@pAvgShort 02C7  
                            __end_ofi2_printf 73F6                          __end_of_digitalReadC 7280  
                        __end_of_digitalReadD 7252                      _I2C2_MasterIsStopFlagSet 791A  
                            __end_ofi2_strlen 7078                             ??_I2C2_MasterOpen 0084  
                               _fsmStateTable FC15                     ??_I2C2_MasterIsTxBufEmpty 0001  
                           ??_I2C2_MasterStop 0001                             ??_I2C2_Initialize 0084  
                             __initialization 5F62                             aCaptGetResult@sel 01C3  
                      ?_I2C2_DO_BUS_COLLISION 0001                            i2_I2C2_SetCallback 635C  
                                __end_of_atoi 45F4                                  __end_of_main 17DE  
                                __end_of_dtoa 3C2E                               ??_adcCaptureIsr 006E  
                                __end_of_home 76E2                              i2_aCaptGetResult 3EE0  
                                __end_of_send 7486                                    i2printf@ap 006C  
                   __size_of_rPressurePredict 00B4                                 i2adcGetCh@sel 005F  
                              __CFG_SAFEN$OFF 000000                                   ?i2_adcGetCh 0001  
                     __end_of_TMR2_Initialize 7224                            __size_ofi2_isdigit 0034  
                 ?_INTERRUPT_InterruptManager 0001                                   i2_vfpfcnvrt 25F8  
                                ?_UART1_Write 0001                            __size_ofi2_isspace 0044  
                               i2vfpfcnvrt@ap 0045                                 i2vfpfcnvrt@fp 0042  
             __end_ofi2_rd1RegCompleteHandler 7168                                 i2vfpfcnvrt@ll 004D  
                               i2vfpfcnvrt@vp 0055                           ?i2_I2C2_SetCallback 0001  
                              _keyReadEC$3358 0095                                        ??_atoi 008D  
                    _TMR2_SetInterruptHandler 7856                                        ??_main 01EB  
                                      ??_dtoa 00AB                                        ??_home 009B  
                                      ??_send 0097                                __CFG_PR1WAY$ON 000000  
               i2ADCC_StartConversion@channel 0001                                 __activetblptr 000003  
             __end_ofi2_wr1RegCompleteHandler 7108                                 ?_aCaptureInit 0001  
        __size_of_UART1_SetTxInterruptHandler 000E                                ?_InitProcedure 0001  
                                 ?_LcdI2CInit 009B                                        ?i2_abs 0013  
                                      ?i2_pad 0013                    i2wr1RegCompleteHandler@ptr 000A  
                          __end_of_I2C2_DO_RX 626A                            __end_of_I2C2_DO_TX 53B0  
                            _UART1_Initialize 5D3E                           main@pValveActuation 029F  
                               vMeasureIsr@v1 007A                                 vMeasureIsr@v2 007C  
                          __end_of_I2C2_LOpen 6FB0                            __end_of_I2C2_MOpen 6F4A  
                     ??i2_I2C2_MasterClearIrq 0001                            __end_of_I2C2_Close 7384  
                                      ?_clear 0001                                        ?_blink 0001  
                            __end_of_adcGetCh 68EA                       __end_of_TMR0_StartTimer 7A04  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 0086  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 008F                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      ?_isqrt 0001                             I2C2_MClose@trfRsp 0085  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 008A  
                                      _ADUTHL 003EE0                      i2_I2C2_DO_SEND_ADR_WRITE 76A2  
                      ??_I2C2_MasterEnableIrq 0084                  ?i2_I2C2_MasterDisableRestart 0001  
                   _I2C2_MasterDisableRestart 79C2                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                               ??_printstrblock 0099  
                                      _RB1I2C 003A5A                        ??_I2C2_MasterGetRxData 0001  
                                      _T1GATE 003FB4                                        _RB2I2C 003A5B  
                                      _T1GCON 003FB3                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                           __end_of_aCaptRstFlt 52D2  
                                      _RB1PPS 003A09               _I2C2_DO_SEND_ADR_READ$intlevel0 73B0  
                         i2UART1_Write@txData 0001                                        _RB2PPS 003A0A  
                       ?_I2C2_DO_RX_NACK_STOP 0001                                        _RC1PPS 003A11  
                               ??_MonitorInit 0084                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                __displaymode 00D3                                        i2l1056 6220  
                              __CFG_WDTCCS$SC 000000                                        i2l3027 6D7A  
                                      i2l1702 411C                                        i2l2281 5590  
                                      i2l3058 47D2                                        i2l2292 3CB2  
                                      i2l1652 365E                                        i2l2294 3CBE  
                                      i2l1654 3942                                        i2l1648 69A0  
                                      i2l1696 4022                                        i2l1954 5ABC  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l8211 63A0  
                                      _FVRCON 003EC1                                        i2l9411 71B8  
                                      i2l9407 71A8                                        i2l9507 75EA  
                                      i2l9821 5A56                                        i2l9823 5A64  
                                      i2l9827 5AAA                                        i2l9819 5A4A  
                                      i2l9973 6634                                        i2l9977 6648  
                                   ??i2_fputc 0007                                     ??i2_fputs 0010  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 019C  
                        ??i2_I2C2_SetCallback 0005                          aCaptureSetOff@offVal 01BC  
                                   ??i2_putch 0002                              i2___lmul@product 0009  
                 ?i2_I2C2_CallbackReturnReset 000A                      _I2C2_CallbackReturnReset 7948  
                       _UART1_SetErrorHandler 7848                               ?_MonitorMsgSend 0001  
                              i2___aodiv@sign 0012                                   INTSTAT_ADDR 0000D3  
                            __end_of___xxtofl 4C94                                        i2abs@a 0013  
                                ?_timeDelayMs 0094                                        i2_atoi 45F4  
                                      i2_dtoa 3C2E                                        i2pad@i 001A  
                                      i2pad@p 0017                                        i2pad@w 001C  
                                   ??_MenuMng 00BA                                  ?_timeElapsed 008C  
                      ?_I2C2_MasterSetCounter 0001                          __size_of_noBacklight 000C  
                                      _eBRate 014E                        ?_I2C2_MasterSendTxData 0001  
                              __CFG_XINST$OFF 000000                                        _chPEEP 0153  
                                vfprintf@cfmt 00B8                                        ___flge 5484  
                              i2___aomod@sign 0012                          I2C2_SetBuffer@buffer 0084  
                                      _chMaxP 0154                                        _chMaxV 0150  
           __size_of_I2C2_MasterClearNackFlag 0004                                        ___lmul 65C6  
                     __end_of_TMR1_StartTimer 7A00                                     ??___aldiv 0098  
                           _ADCC_ThresholdISR 7530                                     ??___aodiv 0094  
                               i2vfprintf@fmt 0062                                     ??___fladd 009A  
                   ?_I2C2_MasterClearNackFlag 0001                                     ??___aomod 0094  
                                      ___wmul 7280                                     ??___awdiv 008E  
                              __CFG_STVREN$ON 000000                                     ??___lldiv 0098  
                      ??_I2C2_DO_ADDRESS_NACK 000C                           MonitorMsgSend@state 00BB  
                                   ??___lwdiv 0088                           __size_of_TMR2_Start 0004  
                                 ?i2_vfprintf 0060                            keyReadEC@longPress 0094  
                        __size_of_vMeasureGet 005A                          __size_of_vMeasureIsr 00A0  
                        __size_of_vMeasureRst 001C                           main@initialSubState 02A9  
                            ?_TMR0_Initialize 0001                            ?_ADCC_ThresholdISR 0001  
                                      clear_0 5FAC                                        clear_1 5FB8  
                                      clear_2 5FC4                                        clear_3 5FD0  
                            ___awdiv@quotient 0090               __end_ofi2_I2C2_DO_SEND_ADR_READ 7530  
                                      _printf 7308                                        pad@buf 0098  
                              ??_aCaptureInit 00BD                                        dtoa@fp 00A1  
                                   ??_command 009A                                        _strlen 6FE2  
                                      _volume 0124                                     ??_display 009B  
                            I2C2_LOpen@trfRsp 0088                                     ??_keyPeek 0087  
                                   ??_keyRead 0089                               _ADCC_Initialize 63D2  
             __end_of_I2C2_CallbackReturnStop 795C                                        fputc@c 0086  
                              _PMD_Initialize 743E                            __size_of_bRateInit 0024  
                            __end_of_timeDiff 6FE2                                        fputs@c 0093  
                                      fputs@i 0094                             __end_ofi2___aodiv 4F44  
                                      fputs@s 008F                                     ??_isdigit 0086  
                           __end_ofi2___aomod 51AC                              __end_of_timeInit 7948  
                          __size_of_bRateUpdt 00AE                                 main@printTime 029D  
                 ??_I2C2_MasterIsCountFlagSet 0001                           ??_ADCC_ThresholdISR 0060  
                                      isqrt@x 0001                                  __mediumconst FC14  
                                   ??_isspace 0086                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                     ??_timeGet 008E  
                                      tblptru 003FF8                        ??_ADCC_StartConversion 0084  
                     __end_of_MonitorErrorClr 77B0                              __end_of_printstr 4B2E  
                     __end_of_MonitorErrorSet 779E                            timeElapsedR@intDur 0092  
                      ??_I2C2_MasterOperation 0091              i2I2C2_CallbackReturnReset@funPtr 000A  
              I2C2_CallbackReturnReset@funPtr 008D                            i2___aomod@dividend 0001  
                            __end_of_vfprintf 6170                          __end_of_vMeasureInit 741A  
    I2C2_SetInterruptHandler@InterruptHandler 0084      TMR2_SetInterruptHandler@InterruptHandler 0084  
 UART1_SetTxInterruptHandler@InterruptHandler 0084  ADCC_SetADTIInterruptHandler@InterruptHandler 0084  
        __end_of_UART1_SetOverrunErrorHandler 783A         __size_of_UART1_SetOverrunErrorHandler 000E  
                _UART1_SetOverrunErrorHandler 782C                     _UART1_DefaultErrorHandler 000000  
                                   ??_sprintf 00BA             __size_of_I2C2_MasterClearStopFlag 0004  
                          timeElapsed@intTime 0090                     ?_I2C2_MasterClearStopFlag 0001  
               __size_of_INTERRUPT_Initialize 0004                 __size_of_I2C2_DO_SEND_RESTART 0004  
                                  ___flge@ff1 00A2                                    ___flge@ff2 00A6  
                            ?_TMR1_Initialize 0001                                  ___xxtofl@arg 008E  
                           __end_ofi2_isdigit 6F7E                                  ___xxtofl@exp 008D  
                           _SYSTEM_Initialize 71C8                                  ___xxtofl@val 0084  
                               ??_I2C2_LClose 0085                           __size_ofi2_adcGetCh 0052  
                               ??_I2C2_MClose 0085                 ??i2_I2C2_MasterDisableRestart 0001  
                                  __accesstop 0060                       __end_of__initialization 5FE2  
                               ?_setBacklight 0001                                main@pAvgUShort 02C3  
                        __size_of_keyReadInit 0012                             __end_ofi2_isspace 6B46  
                     ?_I2C2_MasterIsRxBufFull 0001                             ?_I2C2_MasterClose 0001  
                          ?_SYSTEM_Initialize 0001                              I2C2_MOpen@trfRsp 0088  
                            _I2C2_DO_RX_EMPTY 606E                                 ___rparam_used 000001  
           _rdBlkRegCompleteHandler$intlevel0 6846                             ?_I2C2_MasterWrite 0001  
                          __size_of_backlight 000C                      I2C2_SetBuffer@bufferSize 0086  
                     i2_I2C2_MasterSetCounter 7970                            ??_I2C2_MasterClose 0084  
                            _I2C2_DO_TX_EMPTY 64A2                       i2_I2C2_MasterSendTxData 7966  
                   __end_of_ADCC_ThresholdISR 7552                                 __end_ofi2_abs 6D88  
                         __end_of_MonitorInit 7A2A                           __size_of_LcdI2CInit 0092  
                               __end_ofi2_pad 560A                    ?i2_rdBlkRegCompleteHandler 000A  
                     _rdBlkRegCompleteHandler 6840                          _lastI2C2LTrfResponse 00CD  
                          ??_I2C2_MasterWrite 0093                                __pcstackCOMRAM 0001  
                      aCaptGetResult@lclValid 01C2                                  __pidataBANK1 7932  
                                __pidataBANK2 7732                           ??_SYSTEM_Initialize 0086  
                   rPressurePredict@pAvgShort 00A2                                 __end_of_clear 76F6  
                                   ?_TMR2_ISR 0001                                 __end_of_blink 781E  
                               __end_of_fputc 597E                                 __end_of_fputs 6CCE  
                  ??_I2C2_ClearInterruptFlags 0001                                 __end_of_isqrt 5AD2  
                              aCaptRstFlt@sel 00BA                                 __end_of_putch 770A  
                                 i2printf@fmt 0066                        __size_of_expanderWrite 0030  
                            ?_TMR2_Initialize 0001                        __end_of_PMD_Initialize 7462  
                             ??_InitProcedure 01CD                                    _chVentMode 014F  
                                   ?i2___lmul 0001                                     ?i2___wmul 0001  
                           ?_I2C2_SetCallback 0084                  ??i2_I2C2_MasterEnableRestart 0001  
                              main@rCycleTime 02C9                                       ??i2_abs 0015  
                                 i2putch@byte 0002                                       ??i2_pad 0019  
                                 _aCaptRstFlt 51AC                       __size_of_TMR1_ReadTimer 002C  
                   _UART1_FramingErrorHandler 02E7                            ??_I2C2_SetCallback 0088  
                        _lastI2C2MTrfResponse 00CE                                _aCaptGetResult 4172  
                              i2vfpfcnvrt@fmt 0044                                     ?i2_printf 0066  
                 ADCC_StartConversion@channel 0084                                timeDiff@intDur 0092  
                            timeDelayMs@delms 0094                                       ??_clear 009B  
                                   ?i2_strlen 0001                                       ??_blink 009B  
                            ?_TMR0_StartTimer 0001                        ??_I2C2_DO_RX_NACK_STOP 0001  
                                     ??_fputc 008A                     __end_of_SYSTEM_Initialize 71F6  
                                     ??_fputs 0093                       __size_of_aCaptureSetOff 004A  
                                     ??_isqrt 0003                         __end_of_I2C2_DO_RESET 77F0  
                 ??_I2C2_DO_SEND_RESTART_READ 0002                               __CFG_IVT1WAY$ON 000000  
                                     ??_putch 0085                         _I2C2_InterruptHandler 00CA  
                              timeDiff@startT 008E                            __size_of_keyReadEC 0088  
                                  __pbssBANK0 00BD                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
              __end_of_I2C2_MasterIsRxBufFull 78B8                 ?_UART1_SetOverrunErrorHandler 0084  
                                 send@highnib 0097                                ??_setBacklight 0096  
                      ?_UART1_SetErrorHandler 0084                    __end_ofi2_I2C2_DO_RX_EMPTY 62E4  
                       __size_of_digitalReadC 002E                         __size_of_digitalReadD 002E  
              __size_of_rd2RegCompleteHandler 003A             __size_of_I2C2_SetInterruptHandler 000E  
                         __size_ofi2_vfprintf 007E                 __end_of_rd2RegCompleteHandler 6E38  
                   ?_I2C2_SetInterruptHandler 0084                               __CFG_MVECEN$OFF 000000  
              __size_of_wr2RegCompleteHandler 003A                 __end_of_wr2RegCompleteHandler 6EAC  
                                     ?i2_atoi 0008                                       ?i2_dtoa 001E  
            __size_ofi2_rd1RegCompleteHandler 0030                         _rd1RegCompleteHandler 6E38  
                                     IVTBASEH 003FD6                     _I2C2_MasterIsCountFlagSet 78B8  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                           __end_of_bRateInit 743E                             __end_of_bRateUpdt 58D0  
                        i2I2C2_SetCallback@cb 0001              __size_ofi2_wr1RegCompleteHandler 0030  
                       _wr1RegCompleteHandler 6DC4                              ??_FVR_Initialize 0084  
             _rd1RegCompleteHandler$intlevel0 6E3E               _wr1RegCompleteHandler$intlevel0 6DCA  
                            vMeasureIsr@instP 007E                           __end_of_I2C2_LClose 6B88  
                    rd1RegCompleteHandler@ptr 008D                           __end_of_I2C2_MClose 6C0C  
           __end_ofi2_rdBlkRegCompleteHandler 6A2E                                       ?___flge 00A2  
                                     ?___lmul 0084           __size_ofi2_I2C2_MasterEnableRestart 0006  
                   __size_ofi2_I2C2_SetBuffer 0020                                       _I2C2CLK 003D65  
                                     _I2C2CNT 003D56                                       _I2C2ERR 003D60  
                                     ?___wmul 0084                                       _I2C2PIE 003D64  
                                     _I2C2PIR 003D63                              ?_TMR1_StartTimer 0001  
                                     _I2C2RXB 003D54                                       _I2C2TXB 003D55  
                             __CFG_PPS1WAY$ON 000000                              _rPressurePredict 560A  
                                  ??_TMR2_ISR 005F                       __end_of_ADCC_Initialize 643E  
                          __size_of_setCursor 003C                                     ?_adcGetCh 0001  
        __size_ofi2_I2C2_MasterDisableRestart 0006                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                            __size_of_screenMng 03C8  
                              ___lmul@product 008C          __end_of_ADCC_SetADTIInterruptHandler 7872  
       __size_of_ADCC_SetADTIInterruptHandler 000E                  _ADCC_SetADTIInterruptHandler 7864  
                     ??_I2C2_MasterGetCounter 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                  __size_ofi2_UART1_is_tx_ready 0010  
                                     ?_printf 01A6                               ?_PMD_Initialize 0001  
                         _ADCC_GetFilterValue 76B8                                    _lcdPrintBR 015A  
                                  _lcdPrintTR 0159                                       ?_strlen 0084  
                                  ??i2___lmul 0009                                    ??i2___wmul 0005  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                     ??_I2C2_MasterDisableIrq 0084                           __CFG_PWRTS$PWRT_OFF 000000  
                                     i2l13211 513E                                       i2l13203 50E2  
                                     i2l13123 5588                                       i2l13205 50F6  
                                     i2l13133 55EC                                       i2l13125 559A  
                                     i2l14005 68F6                                       i2l13151 4E18  
                                     i2l13215 5154                                       i2l13119 5576  
                                     i2l14015 6900                                       i2l14031 6694  
                                     i2l10639 703C                                       i2l13129 55B6  
                                     i2l14009 68FC                                       i2l14041 66A0  
                                     i2l13163 4E66                                       i2l13219 517A  
                                     i2l13411 3CEC                                       i2l14035 669A  
                                     i2l14027 668E                                       i2l13165 4E7A  
                                     i2l13157 4E40                                       i2l13421 3E28  
                                     i2l13239 6B3C                                       i2l13183 4F12  
                                     i2l13175 4ED6                                       i2l13407 3CDC  
                                     i2l13441 3E90                                       i2l14305 699C  
                                     i2l13451 4606                                       i2l13179 4EEC  
                                     i2l13195 50A4                        __end_of_aCaptGetResult 43FC  
                                     i2l13461 468C                                       i2l13453 460A  
                                     i2l12661 6C0E                                       i2l12805 5996  
                                     i2l13445 3EAA                                       i2l13701 268E  
                        __size_of_UART1_Write 0042                                       i2l13471 46AC  
                                     i2l13199 50C8                                       i2l14319 69BE  
                                     i2l14343 3F30                                       i2l13473 46F2  
                                     i2l13393 3C94                                       i2l13721 27CC  
                                     i2l13705 2698                                       i2l14521 645E  
                                     i2l14361 4090                                       i2l14345 3F5C  
                                     i2l14353 3FF8                                       i2l13467 469E  
                                     i2l12675 6C46                                       i2l12739 7720  
                                     i2l13723 27D8                                       i2l13707 2702  
                                     i2l13643 6276                                       i2l14347 3F88  
                                     i2l13477 474C                                       i2l13469 46A6  
                                     i2l12677 6C48                                       i2l14293 6994  
                                     i2l13637 626E                                       i2l14365 40D6  
                                     i2l14349 3FB4                                       i2l13719 27A8  
                                     i2l13831 61B0                                       i2l13655 628A  
                                     i2l14375 40F0                                       i2l14383 4136  
                                     i2l12881 6D32                                       i2l13745 2A0C  
                                     i2l13681 2664                                       i2l13841 64A6  
                                     i2l13649 627E                                       i2l13665 629A  
                                     i2l14369 40DA                                       i2l13755 2A7C  
                                     i2l13739 296E                                       i2l13683 2668  
                                     i2l14299 6998                                       i2l13923 52E4  
                                     i2l12877 6D16                                       i2l12885 7054  
                                     i2l13749 2A16                                       i2l13693 2682  
                                     i2l13685 2676                                       i2l13765 2A94  
                                     i2l13829 6186                                       i2l13941 5364  
                                     i2l13933 52EE                                       i2l13853 64BA  
                                     i2l13861 64C2                                       i2l12887 7058  
                                     i2l13759 2A86                                       i2l13951 539C  
                                     i2l13927 52EA                                       i2l13919 52DE  
                                     i2l13935 5336                                       i2l13847 64AE  
                                     i2l13697 2688                                       i2l13689 267C  
                                     i2l14817 36D2                                       i2l13961 53AC  
                                     i2l13949 5394                                       i2l13991 6248  
                                     i2l13977 61FC                                       i2l14883 5BE0  
                                     i2l14797 3650                                       i2l14885 5BE8  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0084  
                           __end_of_backlight 78EA                                     _I2C2_MAck 79C8  
                    ?i2_rd2RegCompleteHandler 000A                                  _digitalReadC 7252  
                                _digitalReadD 7224             __size_of_I2C2_MasterEnableRestart 0006  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                   _I2C2_Open 5AD2                            __size_of_vfpfcnvrt 052C  
                   ?_I2C2_MasterEnableRestart 0001                       __size_of_I2C2_DO_RX_ACK 0008  
                     __size_of_I2C2_DO_TX_ACK 0008                                    ??i2_printf 005D  
                                     _OSCTUNE 0039DE                              ?_MonitorErrorClr 0001  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                    ?i2_wr2RegCompleteHandler 000A                                       _SLRCONE 003A83  
                            ?_MonitorErrorSet 0001                                    ??i2_strlen 0003  
                                ??_TMR2_Start 0084                      __end_ofi2_aCaptGetResult 4172  
                  ??_I2C2_MasterIsStopFlagSet 0001                               _I2C2_MasterOpen 74CA  
                             _I2C2_MasterStop 79D4                               _I2C2_Initialize 7486  
                                _lcdMenuPrint 0144                                 _expanderWrite 70A8  
                                     i2_fputc 597E                                       i2_fputs 6D0C  
                                 _MonitorInit 7A28                          ?_ADCC_GetFilterValue 0001  
                   ??i2_I2C2_MasterSetCounter 0001                                       i2atoi@n 0015  
                                     i2pad@fp 0013                                       i2atoi@s 0008  
                                     i2_putch 771E                                       i2dtoa@d 0020  
                                     i2dtoa@i 0040                                       i2dtoa@n 0038  
                                     i2dtoa@p 0032                                       i2dtoa@s 0036  
                                     i2dtoa@w 0034                     ??i2_I2C2_MasterSendTxData 0001  
                                     _i2cBuff 0300                                 ?_timeElapsedR 008C  
                   ??_rdBlkRegCompleteHandler 008F                        __size_ofi2_UART1_Write 0042  
                        __end_of_aCaptureInit 6990                   __size_of_I2C2_MasterSendAck 0006  
                     ??_I2C2_DO_BUS_COLLISION 000C              __size_ofi2_I2C2_DO_SEND_ADR_READ 0022  
                       _I2C2_DO_SEND_ADR_READ 73AA                                       _MenuMng 2AF6  
                             __size_ofi2_atoi 01EC                               __size_ofi2_dtoa 02B2  
                                  _ctrlStatus 014D                                       __Hparam 0000  
                  __size_of_ADCC_ThresholdISR 0022                                       __Lparam 0000  
                           aCaptureSetOff@sel 00BA                      __end_of_UART1_Initialize 5DC8  
                                   ?_timeDiff 008E              __size_of_I2C2_CallbackReturnStop 000A  
                  ??_TMR2_SetInterruptHandler 0086                          __size_of_timeDelayMs 0034  
                                   ?_timeInit 0001                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                  i2rd2RegCompleteHandler@ptr 000A                   __end_of_I2C2_MasterClearIrq 799C  
                        __size_of_timeElapsed 0030                                 ?_PrintStrBusy 0001  
                                     ___aldiv 53B0                               __size_of___flge 00D0  
                                     ___aodiv 4C94                     _I2C2_DO_SEND_RESTART_READ 788E  
                                     ___fladd 32DE                                       ___aomod 4F44  
                    ??i2_ADCC_StartConversion 0001                                       ___awdiv 5E52  
                             __size_of___lmul 005E                                     ?_printstr 0093  
               __size_of_MonitorMsgForcedSend 01D4                                       ___lldiv 5DC8  
                             __size_of___wmul 002E                                       ___lwdiv 6792  
                                ??i2_adcGetCh 005D                           setBacklight@new_val 0096  
                                  ??_adcGetCh 00BA                                     ?_vfprintf 01A0  
                              i2vfprintf@cfmt 005B                             __end_of_keyReadEC 5F62  
                          __end_of_TMR2_Start 79FC                                  ?i2_vfpfcnvrt 0042  
                                     __pcinit 5F62                          main@rValveDelayStart 02A2  
                                     __ramtop 1000                                    _menuStatus 00D0  
                    TMR1_ReadTimer@readValLow 008B                   __size_of_UART1_Transmit_ISR 0032  
                                  _menuTstamp 012B                                       _curASrc 00D8  
                                     __ptext0 001E                                       __ptext1 73F6  
                                     __ptext2 79F8                                       __ptext3 793E  
                                     __ptext4 79FC                                       __ptext5 7A00  
                                     __ptext6 2F16                                       __ptext7 67EA  
                                     __ptext8 7810                                       __ptext9 5CAC  
                               ?_I2C2_DO_IDLE 0001            __size_of_I2C2_MasterClearCountFlag 0004  
                             __size_of_printf 002C                                       _command 77B0  
                                     _intPEEP 013F                                       _display 78C6  
                    ?_I2C2_DO_RX_NACK_RESTART 0001                    ??i2_I2C2_DO_SEND_ADR_WRITE 0001  
               ?_ADCC_SetADTIInterruptHandler 0084                               __CFG_WRTAPP$OFF 000000  
                   TMR1_ReadTimer@readValHigh 008A                    ?_I2C2_MasterClearCountFlag 0001  
                             __size_of_strlen 0032                                       _keyPeek 6566  
                                     _keyRead 7384                                     _T1CONbits 003FB2  
                                     _intMaxV 0139                         __size_of_vMeasureInit 0024  
                       _OSCILLATOR_Initialize 765C                                  ??_LcdI2CInit 009D  
                                   _T2CONbits 003FAC                                  __size_of_abs 003E  
                                     _lastkey 00D7                                       _menuVal 00C8  
                                __size_of_pad 00B4                               ?_aCaptGetResult 01BC  
                                     _isdigit 6EAC                                    ??___xxtofl 0088  
                                  ?_I2C2_MAck 0001                                   _I2C2ERRbits 003D60  
                            ___aldiv@dividend 0090                   __end_of_I2C2_MasterSendNack 79E0  
                             _ctrlErrorStatus 014C                      ??_PIN_MANAGER_Initialize 0084  
                                     _isspace 6A78                               __CFG_WRTSAF$OFF 000000  
                    wr1RegCompleteHandler@ptr 008D                    ??_I2C2_CallbackReturnReset 008F  
                                  ?_I2C2_Open 0001             __size_of_I2C2_MasterIsNackFlagSet 000C  
                                     _timeGet 777A                                   _I2C2PIEbits 003D64  
                             __displaycontrol 00D4                     ?_I2C2_MasterIsNackFlagSet 0001  
                 __end_of_I2C2_MasterResetBus 7984                                    _vddValMean 0133  
                                 _I2C2PIRbits 003D63                                       atoi@neg 0091  
                            ??_MonitorMsgSend 00BB                             _I2C2_DO_BUS_ERROR 77D0  
                  __size_of_SYSTEM_Initialize 002E                                       _sprintf 6738  
             i2I2C2_CallbackReturnStop@funPtr 000A                 I2C2_CallbackReturnStop@funPtr 008D  
                MonitorMsgForcedSend@trfError 01CA                               write4bits@value 0095  
              __size_ofi2_I2C2_MasterClearIrq 0008                                ?_expanderWrite 0001  
                        end_of_initialization 5FE2                             __end_of_setCursor 6DC4  
               __end_ofi2_I2C2_MasterClearIrq 79BC                          adcCaptureIsr@adcData 0076  
                i2rdBlkRegCompleteHandler@ptr 000A              __end_of_I2C2_MasterClearNackFlag 7A24  
                    main@rValveAcuationTstamp 02B7                            ?_I2C2_DO_BUS_ERROR 0001  
                       ??_ADCC_GetFilterValue 0003                             __end_of_screenMng 32DE  
                     ??_I2C2_MasterSetCounter 0084                                ??_timeElapsedR 0090  
                                     fputc@fp 0088                                   _I2C2_LClose 6B46  
                                 _I2C2_MClose 6BCA                       ??_I2C2_MasterSendTxData 0084  
                          __end_ofi2_adcGetCh 69E2           __end_of_UART1_SetTxInterruptHandler 782C  
                 _UART1_SetTxInterruptHandler 781E                                       fputs@fp 0091  
                         i2___wmul@multiplier 0001                        ?_rd1RegCompleteHandler 008D  
                               keyPeek@n_3353 0088                                    _screenInit 67EA  
                                   i2u1210_40 6B38                                     i2u1203_40 50FA  
                                   i2u1140_40 77FC                                     i2u1300_40 274C  
                                   i2u1300_47 273E                                     i2u1206_40 6D58  
                                   i2u1310_40 28CA                                     i2u1207_40 6F76  
                                   i2u1311_40 29AA                                     i2u1303_40 281C  
                                   i2u1311_47 299C                                     i2u1303_47 280E  
                                   i2u1208_40 6F78                                     i2u1304_40 2838  
                                   i2u1320_40 61DA                                     i2u1320_47 61CC  
                                   i2u1313_40 2A52                                     i2u1305_40 283A  
                                   i2u1313_47 2A44                                     i2u1154_40 598E  
                                   i2u1242_40 3C66                                     i2u1306_40 2846  
                                   i2u1251_40 3E58                                     i2u1243_40 3C68  
                                   i2u1315_40 2AD0                                     i2u1307_40 2882  
                                   i2u1322_48 64D2                                     i2u1251_41 3E56  
                                   i2u1322_49 64E4                                     i2u1315_47 2AC2  
                                   i2u1307_47 2874                                     i2u1260_40 4688  
                                   i2u1156_40 59D6                                     i2u1252_40 3E66  
                                   i2u1420_45 381E                                     i2u1253_40 3E6C  
                                   i2u1309_40 28C4                                     i2u1421_40 387E  
                                   i2u1332_48 52FE                                     i2u1340_48 66B0  
                                   i2u1332_49 5312                                     i2u1340_49 66C2  
                                   i2u1421_45 3874                                     i2u1309_47 28B6  
                                   i2u1262_40 46D6                                     i2u1246_40 3CA8  
                                   i2u1422_45 38B4                                     i2u1262_47 46C8  
                                   i2u1263_40 4734                                     i2u1255_40 3E7A  
                                   i2u1423_40 3914                                     i2u1423_45 390A  
                                   i2u1263_47 4726                                     i2u1264_40 477E  
                                   i2u1248_40 3CD6                                     i2u1336_40 61F8  
                                   i2u1416_45 36F2                                     i2u1264_47 4770  
                                   i2u1265_40 479A                                     i2u1257_40 4638  
                                   i2u1249_40 3E36                                     i2u1417_40 3752  
                                   i2u1425_40 5B98                                     i2u1417_45 3748  
                                   i2u1257_47 462A                                     i2u1266_40 479C  
                                   i2u1370_40 3F82                                     i2u1426_40 5BF4  
                                   i2u1418_45 3788                                     i2u1370_45 3F78  
                                   i2u1259_40 4670                                     i2u1419_40 37E8  
                                   i2u1371_40 3FAE                                     i2u1602_48 5C38  
                                   i2u1195_41 4E46                                     i2u1419_45 37DE  
                                   i2u1371_45 3FA4                                     i2u1259_47 4662  
                                   i2u1339_48 6910                                     i2u1372_40 3FDA  
                                   i2u1604_40 5C4C                                     i2u1339_49 6922  
                                   i2u1372_45 3FD0                                     i2u1197_40 4E7E  
                                   i2u1605_48 5C50                                     i2u1295_40 2634  
                                   i2u1454_48 7540                                     i2u1294_48 62AA  
                                   i2u1294_49 62BC                                     i2u1295_47 2626  
                                   i2u1297_40 26D4                                     i2u1376_48 648A  
                                   i2u1369_40 3F56                                     i2u1456_48 74FC  
                                   i2u1376_49 649C                                     i2u1369_45 3F4C  
                                   i2u1297_47 26C6                        ?_wr1RegCompleteHandler 008D  
                                     isqrt@op 0005                                 ?_I2C2_MuxInit 0001  
              ??_UART1_SetOverrunErrorHandler 0086                             expanderWrite@data 0093  
                             ___lldiv@divisor 0094                                    _monitorMsg 028F  
                             ___lldiv@counter 009C                           ??_I2C2_DO_BUS_ERROR 0001  
                                  ??_timeDiff 0092                             _I2C2_DO_SEND_STOP 75D0  
                                  ??_timeInit 0084                           InitProcedure@initOk 01E4  
                                 _I2C2_Status 0100                                ??_PrintStrBusy 0086  
                           __end_of_vfpfcnvrt 25F8                            __end_of_LcdI2CInit 5D3E  
                         InitProcedure@vddVal 01E5                              ___aldiv@quotient 009A  
                                     postdec1 003FE5                                       postdec2 003FDD  
                         timeElapsedR@intTime 0094                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                          ?_I2C2_DO_SEND_STOP 0001                            LcdI2CInit@lcd_Addr 009D  
                         i2___lmul@multiplier 0001                                    ??_printstr 0095  
                                _vMeasureInit 73F6                           InitProcedure@tstamp 01DC  
                            ?_ADCC_Initialize 0001                                  ??i2_vfprintf 005B  
                                  ??_vfprintf 00B8                         __end_of_adcCaptureIsr 395C  
                                   _EDuration 0135                             UART1_Write@txData 0084  
                          LcdI2CInit@lcd_cols 009B                         __CFG_WDTCPS$WDTCPS_31 000000  
                                     strlen@a 0086                                       strlen@s 0084  
                          LcdI2CInit@lcd_rows 009C                                ??_I2C2_DO_IDLE 0001  
                                  _pressMills 012D                          __end_of_setBacklight 768C  
             __end_ofi2_rd2RegCompleteHandler 7138              __end_of_I2C2_MasterClearStopFlag 7A20  
                                _mainPSensCal 01F2                          I2C2_Open@returnValue 0087  
          __end_ofi2_I2C2_MasterEnableRestart 79F2                    i2_I2C2_MasterEnableRestart 79EC  
                         timeElapsed@duration 008E               __end_of_rdBlkRegCompleteHandler 6896  
                               i2_UART1_Write 6C0C                           ??_I2C2_DO_SEND_STOP 0002  
             __end_ofi2_wr2RegCompleteHandler 7198                       __size_of_I2C2_MasterFsm 0064  
                     __size_of_I2C2_MasterIsr 0006                                printstrblock@c 0097  
                    __end_of_I2C2_DO_RX_EMPTY 60F0                             i2___aodiv@divisor 0009  
                                 ___fladd@grs 00A1                       __end_of_I2C2_MasterOpen 74EC  
           __end_of_I2C2_MasterClearCountFlag 7A28                       __end_of_I2C2_MasterStop 79DA  
                     __end_of_I2C2_Initialize 74A8                                _TMR1_ReadTimer 72DC  
                           i2___aodiv@counter 0011                                     _IDuration 0137  
                    __end_of_I2C2_DO_TX_EMPTY 6506                                 ___xxtofl@sign 008C  
                   __end_of_I2C2_DO_BUS_ERROR 77E0                    i2wr2RegCompleteHandler@ptr 000A  
                           _I2C2_MasterIsNack 789C                       __size_of_I2C2_SetBuffer 0022  
                         timeElapsed@prevTime 008C                                _aCaptureSetOff 6A2E  
                                   i2___aodiv 4DEC                                  _intEDuration 013B  
                                   i2___aomod 5078                            ?_I2C2_MasterIsNack 0001  
            _I2C2_DO_SEND_ADR_WRITE$intlevel0 7648                              __CFG_FEXTOSC$OFF 000000  
                 i2I2C2_MasterSendTxData@data 0001                                 ??_noBacklight 0096  
                       __end_of_printstrblock 7626                 __size_of_I2C2_MasterEnableIrq 0014  
                                  main@pExpOS 02B5                 __size_of_I2C2_MasterGetRxData 0006  
                          __end_ofi2_vfprintf 61EE                   __size_ofi2_I2C2_SetCallback 0076  
                     i2_rd1RegCompleteHandler 7138                        ?_I2C2_DO_SEND_ADR_READ 0001  
                  rdBlkRegCompleteHandler@ptr 008D                      ?_I2C2_MasterIsTxBufEmpty 0001  
                         ??_I2C2_MasterIsNack 0001                                    main@keyTmp 02A1  
                                _intIDuration 013D                                ??_I2C2_MuxInit 0084  
                   __end_of_I2C2_DO_SEND_STOP 75EE                       i2_wr1RegCompleteHandler 70D8  
                                   i2_isdigit 6F4A                                __end_ofi2_atoi 47E0  
                              __end_ofi2_dtoa 3EE0                                     i2_isspace 6B02  
                               ??_vMeasureGet 009F                   ??i2_rdBlkRegCompleteHandler 000C  
                               ??_vMeasureIsr 005D                                 ??_vMeasureRst 0084  
              i2I2C2_MasterSetCounter@counter 0001                                    _write4bits 5FE8  
                                   i2atoi@neg 000E                                   adcGetCh@sel 00BC  
                            i2_I2C2_SetBuffer 7592                  __end_of_INTERRUPT_Initialize 7A08  
             __end_of_I2C2_DO_RX_NACK_RESTART 79A4          __end_of_TMR2_DefaultInterruptHandler 7A2C  
       __size_of_TMR2_DefaultInterruptHandler 0002                  _TMR2_DefaultInterruptHandler 7A2A  
                __end_of_I2C2_DO_SEND_RESTART 7A0C               __size_ofi2_ADCC_StartConversion 0010  
              ??_ADCC_DefaultInterruptHandler 0001                                __end_of___flge 5554  
                    I2C2_MasterOperation@read 0091                                __end_of___lmul 6624  
                                 _chLowVAlarm 0152                                   vfpfcnvrt@ap 00B6  
                                 vfpfcnvrt@fp 00B3                                   vfpfcnvrt@ll 0192  
                              __end_of___wmul 72AE                                   vfpfcnvrt@vp 019A  
               __size_of_I2C2_DO_ADDRESS_NACK 0054                     __size_of_I2C2_MasterClose 000A  
                           __size_of_TMR2_ISR 0022                                     i2fputc@fp 0005  
                              ?i2_UART1_Write 0001                        ?_OSCILLATOR_Initialize 0001  
                                   i2fputs@fp 000E                        __end_of_TMR1_ReadTimer 7308  
                    ??_I2C2_DO_SEND_ADR_WRITE 0085                     __size_of_I2C2_MasterWrite 0008  
                                 printstr@idx 0096                     __end_of_I2C2_MasterIsNack 78AA  
            __end_of_I2C2_SetInterruptHandler 7880                              i2___wmul@product 0005  
                              __end_of_printf 7334                                    keyRead@tmp 0089  
                              __end_of_strlen 7014                                   ??_I2C2_MAck 0084  
                                ?_aCaptRstFlt 0001                           start_initialization 5F62  
                      __end_of_aCaptureSetOff 6A78                                _I2C2_DO_RX_ACK 79AC  
                           __size_ofi2___lmul 005E                                _I2C2_DO_TX_ACK 79A4  
                          bRateUpdt@triggered 0087                                   ??_I2C2_Open 0086  
                           __size_ofi2___wmul 002E                      __size_of_TMR0_Initialize 0016  
             __size_of_PIN_MANAGER_Initialize 00B0                                   __end_of_abs 6D0C  
                             ??_expanderWrite 0093                                   __end_of_pad 5772  
               ?_I2C2_SetDataCompleteCallback 0089                       ??_UART1_SetErrorHandler 0086  
                                _lastCycleVol 0131                                    ?i2___aodiv 0001  
                                  ?i2___aomod 0001                                 ??_keyReadInit 0084  
                    __end_of_rPressurePredict 56BE                 __size_of_ADCC_StartConversion 0012  
                       __size_of_aCaptureInit 0052                                    ivt0x8_base 0008  
                                   _LowVAlarm 01F5                 __size_of_I2C2_MasterOperation 0044  
                           __size_ofi2_printf 0026                             __size_ofi2_strlen 0032  
                                   i2strlen@a 0003                                     i2strlen@s 0001  
                         i2_UART1_is_tx_ready 77F0                       i2_I2C2_DO_SEND_ADR_READ 750E  
                   __size_of_I2C2_SetCallback 0078                                 _uart1TxBuffer 0200  
                                 ?_screenInit 0001                                      ??i2_atoi 000A  
                                    ??i2_dtoa 0028            __size_ofi2_I2C2_CallbackReturnStop 0004  
                    _I2C2_MasterClearNackFlag 7A20                    ?i2_I2C2_CallbackReturnStop 000A  
                     _I2C2_CallbackReturnStop 7952                                    ?i2_isdigit 0001  
                                  ?i2_isspace 0001                              __CFG_LPBOREN$OFF 000000  
                          main@rSV2ValveDelay 02BD                      __size_of_TMR1_Initialize 0040  
                                 vfprintf@fmt 01A2                               setCursor@F16765 02CD  
                         __end_of_noBacklight 78DE                                  i2vfprintf@ap 0064  
                             i2vfpfcnvrt@done 0057                                  i2vfprintf@fp 0060  
                                    ??___flge 00AA                              ??_PMD_Initialize 0084  
                                    ??___lmul 008C                                      ??___wmul 0088  
            __end_of_I2C2_MasterEnableRestart 79C2                                     _bRateHist 0128  
                                   _bRateInit 741A                            i2_I2C2_DO_RX_EMPTY 626A  
                                   _bRateUpdt 5822                        InitProcedure@aPValMean 01DE  
                                 __pdataBANK1 01F0                                   __pdataBANK2 02CD  
                              _currentTrfAddr 00CF                            main@rSV3ValveDelay 02AA  
               ?_TMR2_DefaultInterruptHandler 0001                          ?i2_UART1_is_tx_ready 0001  
                                    ??_printf 00BA                           __end_of_vMeasureGet 6738  
                         __end_of_vMeasureIsr 5C14                             timeDelayMs@tstamp 0096  
                           i2___aomod@divisor 0009                           __end_of_vMeasureRst 760A  
                           __size_of_adcGetCh 0054                  ??_I2C2_DO_SEND_RESTART_WRITE 0001  
                                    ??_strlen 0086                               ?_TMR1_ReadTimer 0084  
                        __end_of_timeElapsedR 6566                __size_of_I2C2_MasterGetCounter 0004  
                           i2___aomod@counter 0011                    _I2C2_DO_RX_EMPTY$intlevel0 6074  
                      __end_of_I2C2_DO_RX_ACK 79B4                                     ___fladd@a 0096  
                                   ___fladd@b 0092                 __end_of_I2C2_MasterGetCounter 7A14  
                         ?i2_I2C2_DO_RX_EMPTY 0001                        __end_of_I2C2_DO_TX_ACK 79AC  
                        __size_ofi2_vfpfcnvrt 04FE                         __end_of_InitProcedure 20CC  
                                _aCaptureInit 693E                              ?_I2C2_MasterOpen 0001  
                            ?_I2C2_MasterStop 0001                              ?_I2C2_Initialize 0001  
              __size_of_I2C2_MasterDisableIrq 001E                               ?_aCaptureSetOff 01BC  
                   i2_rdBlkRegCompleteHandler 69E2                    __size_of_I2C2_DO_BUS_ERROR 0010  
               __end_of_I2C2_MasterDisableIrq 75D0                            _UART1_ErrorHandler 02E3  
                               __pcstackBANK0 0060                                 __pcstackBANK1 017A  
                               __pcstackBANK2 0299                      _I2C2_MasterClearStopFlag 7A1C  
                            ___aodiv@dividend 0084                      __size_of_TMR2_Initialize 002E  
                           __size_of___xxtofl 0166                          __end_of_PrintStrBusy 7768  
         __end_ofi2_I2C2_MasterDisableRestart 79F8                   i2_I2C2_MasterDisableRestart 79F2  
                      i2_ADCC_StartConversion 7800               __end_of_I2C2_MasterIsTxBufEmpty 791A  
                                   _backlight 78DE             __size_of_I2C2_ClearInterruptFlags 0030  
                           ?i2_aCaptGetResult 006E                     ??i2_rd1RegCompleteHandler 000C  
                   ?_I2C2_ClearInterruptFlags 0001                                  ?_MonitorInit 0001  
               __size_of_I2C2_DO_RX_NACK_STOP 000E                                      ?i2_fputc 0003  
                             vMeasureGet@rawV 009F                                      ?i2_fputs 000C  
                   ??i2_wr1RegCompleteHandler 000C                            ??i2_aCaptGetResult 0070  
                                    ?i2_putch 0001                          __end_of_I2C2_DO_IDLE 790E  
                        ??i2_I2C2_DO_RX_EMPTY 000C                                     _atoi$4150 0095  
                                   _atoi$4148 0093                                     _atoi$4149 0097  
                  __size_of_I2C2_DO_SEND_STOP 001E                                     __pnvBANK0 00DB  
                                   __pnvBANK2 02DF              __size_ofi2_rd2RegCompleteHandler 0030  
                         __end_of_keyReadInit 777A                      i2aCaptGetResult@lclValid 0074  
                                    ?_MenuMng 0001                          expanderWrite@i2cBuff 0094  
                       _rd2RegCompleteHandler 6DFE                      __size_of_TMR0_StartTimer 0004  
                      InitProcedure@mPValMean 01DA                         i2I2C2_SetCallback@idx 0005  
                       __end_of_fsmStateTable FC3B                                    send@lownib 0098  
                       i2I2C2_SetCallback@ptr 0003             _I2C2_CallbackReturnStop$intlevel0 7958  
              __size_of_I2C2_DO_BUS_COLLISION 005C                                     _main$4740 0299  
                                   _main$4741 029B                                     _main$4737 02C5  
                                   _main$4738 02BB                                     _main$4739 02A4  
            __size_ofi2_wr2RegCompleteHandler 0030             __end_ofi2_I2C2_CallbackReturnStop 7A1C  
                            ___lwdiv@dividend 0084                        _PIN_MANAGER_Initialize 5772  
                      i2aCaptGetResult@lclRaw 0076                    MonitorMsgForcedSend@vddVal 01CB  
               __end_of_I2C2_DO_BUS_COLLISION 66DE                         _wr2RegCompleteHandler 6E72  
                                   _dtoa$3676 017A                    MonitorMsgForcedSend@trfAck 01C9  
         __size_of_I2C2_DO_SEND_RESTART_WRITE 0004                             ?_UART1_Initialize 0001  
                                   _lcdBtnRow 027B                      rd2RegCompleteHandler@ptr 008D  
          _I2C2_CallbackReturnReset$intlevel0 794E          __end_of_UART1_SetFramingErrorHandler 7848  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler 783A  
                                 ?_write4bits 0001                         __size_of_setBacklight 0018  
                               __pmediumconst FC14                                      ?___aldiv 0090  
                      i2aCaptGetResult@outVal 006E                                      ?___aodiv 0084  
                                    ?___fladd 0092                                      ?___aomod 0084  
                                  ?_bRateInit 0001                                      ?___awdiv 008A  
                                   __ptext100 778C                                     __ptext101 779E  
                                   __ptext110 6DC4                                     __ptext102 6ABE  
                            ___aodiv@quotient 0096                                     __ptext111 6DFE  
                                   __ptext103 7642                                     __ptext200 7046  
                                   __ptext120 6F16                                     __ptext112 6E38  
                                   __ptext104 73AA                                     __ptext201 6D0C  
                                   __ptext121 5AD2                                     __ptext113 6E72  
                                   __ptext105 78EA                                     __ptext210 6B02  
                                   __ptext202 597E                                     __ptext130 79C8  
                                   __ptext122 7872                                     __ptext114 7552  
                                   __ptext106 606E                                     __ptext211 6F4A  
                                   __ptext203 771E                                     __ptext131 7626  
                                   __ptext123 74CA                                     __ptext115 62E4  
                                   __ptext107 7948                                     __ptext212 72AE  
                                   __ptext204 77F0                                     __ptext140 643E  
                                   __ptext132 5C14                                     __ptext124 770A  
                                   __ptext116 74A8                                     __ptext108 7952  
                                   __ptext213 6624                                     __ptext205 6C0C  
                                   __ptext141 626A                                     __ptext133 7014  
                                   __ptext125 6BCA                                     __ptext117 78F6  
                                   __ptext109 6840                                     __ptext214 7800  
                                   __ptext206 6D4A                                     __ptext150 79AC  
                                   __ptext142 750E                                     __ptext134 74EC  
                                   __ptext126 735C                                     __ptext118 79BC  
                                   __ptext215 76B8                                     __ptext207 5078  
                                   __ptext151 75D0                                     __ptext143 77D0  
                                   __ptext135 7A2A                                     __ptext127 75B2  
                                   __ptext119 79C2                                     __ptext216 0000  
                                   __ptext208 4DEC                                     __ptext160 790E  
                                   __ptext152 7A08                                     __ptext144 6682  
                                   __ptext136 5B74                                     __ptext128 795C  
                                   __ptext209 45F4                                     __ptext161 789C  
                                   __ptext153 7A0C                                     __ptext145 68EA  
                                   __ptext137 3EE0                                     __ptext129 7994  
                                   __ptext170 7970                                     __ptext162 7A10  
                                   __ptext154 788E                                     __ptext146 77E0  
                                   __ptext138 5A2C                                     __ptext171 79EC  
                                   __ptext163 79D4                                     __ptext155 64A2  
                                   __ptext147 799C                                     __ptext139 79CE  
                                   __ptext180 7168                                     __ptext172 79F2  
                                   __ptext164 79DA                                     __ptext156 61EE  
                                   __ptext148 7880                                     __ptext181 7572  
                                   __ptext173 797A                                     __ptext165 79E0  
                                   __ptext157 52D2                                     __ptext149 79A4  
                                   __ptext190 7A24                                     __ptext182 635C  
                                   __ptext174 7A14                                     __ptext166 78AA  
                                   __ptext158 7902                                     __ptext191 7530  
                                   __ptext183 7592                                     __ptext175 7A18  
                                   __ptext167 79E6                                     __ptext159 76A2  
                                   __ptext192 7A2C                                     __ptext184 7198  
                                   __ptext176 69E2                                     __ptext168 79B4  
                                   __ptext193 3626                                     __ptext185 791A  
                                   __ptext177 70D8                                     __ptext169 7966  
                                   __ptext194 6990                                     __ptext186 7926  
                                   __ptext178 7108                                     __ptext195 73D0  
                                   __ptext187 78B8                                     __ptext179 7138  
                                   __ptext196 6170                                     __ptext188 7A1C  
                                   __ptext197 25F8                                     __ptext189 7A20  
                                   __ptext198 3C2E                                     __ptext199 5554  
            __end_of_I2C2_MasterIsNackFlagSet 7932                                      ?___lldiv 0090  
                                  ?_bRateUpdt 0001                             __size_of_timeDiff 0032  
                           __size_of_timeInit 000A                                      ?___lwdiv 0084  
                          ??_UART1_Initialize 0086                                     __numlines 00D2  
                                    _I2C2CON0 003D5D                                      _I2C2CON1 003D5E  
                                    _I2C2CON2 003D5F                                     _lcdTopRow 0267  
                             ??i2_UART1_Write 0001                              ??_aCaptGetResult 01BE  
                            I2C2_DO_TX@dataTx 000E                        __size_of_I2C2_DO_RESET 0010  
                       ??i2_UART1_is_tx_ready 0001                              _uart1RxLastError 015B  
                               ??_UART1_Write 0084                       rPressurePredict@intLVal 00A6  
                ??_INTERRUPT_InterruptManager 0080                             __size_of_printstr 017A  
                           __size_of_vfprintf 0080                                      ?_command 0001  
                              _I2C2_MasterFsm 643E                                _I2C2_MasterIsr 79CE  
                           main@rSubCycleTime 02AC                                      ?_display 0001  
                             ?_I2C2_DO_RX_ACK 0001                                      ?_keyPeek 0001  
                                    ?_keyRead 0001               __size_of_I2C2_DO_SEND_ADR_WRITE 001A  
                  __size_of_I2C2_MasterIsNack 000E                        __CFG_BBSIZE$BBSIZE_512 000000  
                             ?_I2C2_DO_TX_ACK 0001                        InitProcedure@lcdBLight 01D1  
                 ??_I2C2_MasterClearCountFlag 0001                           __size_of_screenInit 0056  
                                   _keyReadEC 5EDA                      __size_of_TMR1_StartTimer 0004  
            _UART1_DefaultOverrunErrorHandler 000000                          __end_of_I2C2_MuxInit 7642  
                                    ?_isdigit 0084                                __size_ofi2_abs 003E  
                              __size_ofi2_pad 00B6                                      ?_isspace 0084  
                                    ?_timeGet 008C                                _I2C2_SetBuffer 74A8  
                       I2C2_DO_RX@retFsmState 0003                  __end_of_MonitorMsgForcedSend 49B4  
                                   _lastkeyEC 00D6                              ___lwdiv@quotient 0089  
                    _I2C2_SetInterruptHandler 7872                                __size_of_clear 0014  
                                 ??i2___aodiv 0011                                __size_of_blink 000E  
                                setCursor@col 00A4                                   ??i2___aomod 0011  
                                setCursor@row 009B                                      ?_sprintf 01A6  
                              __size_of_fputc 00AE                                    ?_backlight 0001  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0040  
                     ??_rd1RegCompleteHandler 008F                     ??i2_I2C2_DO_SEND_ADR_READ 0001  
                              __size_of_isqrt 00A6                                __size_of_putch 0014  
                        _INTERRUPT_Initialize 7A04                          _I2C2_DO_SEND_RESTART 7A08  
                                  _I2C2SDAPPS 003AE4                    __end_of_I2C2_MasterSendAck 79E6  
                                  _I2C2SCLPPS 003AE3                       ??_wr1RegCompleteHandler 008F  
            __size_of_I2C2_DO_RX_NACK_RESTART 0008                               ___aldiv@divisor 0094  
                   ??_I2C2_CallbackReturnStop 008F                ??_I2C2_SetDataCompleteCallback 008D  
                           ??_TMR0_Initialize 0084                                  ?_I2C2_LClose 0001  
                                ?_I2C2_MClose 0001                               ___aldiv@counter 0098  
             I2C2_MasterOperation@returnValue 0092                                  _setBacklight 7674  
                              ___wmul@product 0088                                   _noBacklight 78D2  
                                   _monTstamp 0178                                      _LATAbits 003FBA  
       UART1_SetErrorHandler@interruptHandler 0084                                      _LATDbits 003FBD  
                               ??_timeDelayMs 0096                                   _auxPSensCal 01F0  
                ??i2_I2C2_CallbackReturnReset 000C                      __size_of_MonitorErrorClr 0012  
                                  _I2C2_DO_RX 61EE                           adcCaptureIsr@adcSel 007A  
                                  _I2C2_DO_TX 52D2                             write4bits@i2cBuff 0093  
              __size_of_I2C2_MasterSetCounter 000C                                     _setCursor 6D88  
                    __size_of_MonitorErrorSet 0012                 __end_of_I2C2_MasterSetCounter 7902  
                                    _PIE1bits 003991                __size_of_I2C2_MasterSendTxData 000C  
                               ??_timeElapsed 0090                                      _PIE3bits 003993  
                          InitProcedure@aPVal 01E9                                      _PIE4bits 003994  
                                    _PIE5bits 003995                                      _PIE6bits 003996  
                                 ??i2_isdigit 0003                 __end_of_I2C2_MasterSendTxData 78F6  
                         __CFG_BORV$VBOR_2P45 000000                                    _I2C2_LOpen 6F7E  
                                  _I2C2_MOpen 6F16                                     _screenMng 2F16  
                                  _I2C2_Close 735C                            InitProcedure@mPVal 01E7  
                                 ??i2_isspace 0003           __size_of_INTERRUPT_InterruptManager 0098  
                            i2_vfpfcnvrt$3691 0059                                      _PIR1bits 0039A1  
                                    _PIR3bits 0039A3                                      _PIR4bits 0039A4  
                                    _PIR5bits 0039A5                                      _PIR6bits 0039A6  
                                    i2u760_40 7922                                      i2u761_40 792E  
                                    i2u762_40 7916                                      i2u764_40 78B4  
                                    i2u758_40 78A6                                      i2u759_40 78C2  
                                 _vMeasureGet 66DE                                   _vMeasureIsr 5B74  
                                 _vMeasureRst 75EE             __size_of_I2C2_MasterIsStopFlagSet 000C  
                                   _resultTbl 015C                                 _I2C2STAT1bits 003D62  
                                    _TMR2_ISR 74EC                     ?_I2C2_MasterIsStopFlagSet 0001  
                  __end_of_UART1_Transmit_ISR 7046                 ?_UART1_SetFramingErrorHandler 0084  
                      __end_of_I2C2_MasterFsm 64A2                        __end_of_I2C2_MasterIsr 79D4  
                                   _vfpfcnvrt 20CC                              _I2C2_MasterClose 795C  
                      InitProcedure@vddValMax 01D2                        InitProcedure@vddValMin 01D4  
                           ??_TMR1_Initialize 0084                                    _ADCON0bits 003EF8  
                           ___wmul@multiplier 0084                   ?i2_I2C2_MasterEnableRestart 0001  
                    _I2C2_MasterEnableRestart 79BC                  __size_of_I2C2_MasterClearIrq 0008  
                                    i2___lmul 6624                              _I2C2_MasterWrite 798C  
                                    i2___wmul 72AE                              I2C2_Open@address 0086  
                     __size_of_FVR_Initialize 0008                        __end_of_I2C2_SetBuffer 74CA  
                                   main@pInst 02CB                                    ?_keyReadEC 0001  
                                   main@pNext 02AE                             ?_I2C2_DO_RX_EMPTY 0001  
                    ??_I2C2_MasterIsRxBufFull 0001                ??_TMR2_DefaultInterruptHandler 0001  
           __size_of_TMR2_SetInterruptHandler 000E                     ?_TMR2_SetInterruptHandler 0084  
                           ?_I2C2_DO_TX_EMPTY 0001                   __end_of_ADCC_GetFilterValue 76CE  
                         __end_of_UART1_Write 6BCA                      wr2RegCompleteHandler@ptr 008D  
                                    i2_printf 73D0                                      i2pad@buf 0015  
                                _isspace$4166 008A           __size_ofi2_I2C2_CallbackReturnReset 0004  
                          ??_I2C2_DO_RX_EMPTY 008F                                      i2dtoa@fp 001E  
                                    i2_strlen 7046                          __size_of_aCaptRstFlt 0126  
                    ?i2_I2C2_MasterSetCounter 0001                      __end_ofi2_I2C2_SetBuffer 75B2  
                          ??_I2C2_DO_TX_EMPTY 000C                      ?i2_I2C2_MasterSendTxData 0001  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 0084  
                         __size_of_write4bits 0086                       ??_I2C2_DO_SEND_ADR_READ 0091  
                                   copy_data0 5F76                                     copy_data1 5F98  
                                    i2fputc@c 0003                         ?_INTERRUPT_Initialize 0001  
                                 _keyReadInit 7768                                      i2fputs@c 0010  
                    ?_rdBlkRegCompleteHandler 008D                                      i2fputs@i 0011  
                                    i2fputs@s 000C                         ?_I2C2_DO_SEND_RESTART 0001  
                                   keyRead@ch 008B                                 _I2C2_DO_RESET 77E0  
                __size_of_I2C2_MasterSendNack 0006                        _uart1TxBufferRemaining 00DB  
                                _openFlowRate 012F                             ??_TMR2_Initialize 0086  
           __size_ofi2_I2C2_DO_SEND_ADR_WRITE 0016                         i2_I2C2_MasterClearIrq 79B4  
                            _I2C2_SetCallback 62E4                              __size_ofi2_fputc 00AE  
                            __size_ofi2_fputs 003E                        ?_rd2RegCompleteHandler 008D  
                __size_of_I2C2_MasterResetBus 000A                     ?i2_I2C2_DO_SEND_ADR_WRITE 0001  
                      _I2C2_DO_SEND_ADR_WRITE 7642                     _I2C2_MasterClearCountFlag 7A24  
                            __size_ofi2_putch 0014                                    ?_setCursor 009B  
      __end_ofi2_I2C2_SetDataCompleteCallback 7592       __size_ofi2_I2C2_SetDataCompleteCallback 0020  
              i2_I2C2_SetDataCompleteCallback 7572                        ?_wr2RegCompleteHandler 008D  
                                  ?_screenMng 0001               _wr2RegCompleteHandler$intlevel0 6E78  
             _rd2RegCompleteHandler$intlevel0 6E04                                      __Hrparam 0000  
           __size_of_I2C2_CallbackReturnReset 000A                              __size_of_MenuMng 0420  
           ?i2c2_mux@I2C2_MasterIsNackFlagSet 0060            ??i2c2_mux@I2C2_MasterIsNackFlagSet 0060  
                   ?_I2C2_CallbackReturnReset 008D                                    vfprintf@ap 01A4  
                                    __Lrparam 0000                                    vfprintf@fp 01A0  
                      i2I2C2_SetBuffer@buffer 0001                            __CFG_BOREN$SBORDIS 000000  
                       TMR1_ReadTimer@readVal 0088                                      _VentMode 0157  
                                    _bRatePtr 00BD                         InitProcedure@aPValMax 01E0  
                       InitProcedure@aPValMin 01E2                                   ??_bRateInit 0084  
                         __end_of_timeDelayMs 6F16                         __size_of_timeElapsedR 0060  
          __size_of_I2C2_MasterDisableRestart 0006                                   ??_bRateUpdt 0084  
                     ??_OSCILLATOR_Initialize 0084                             ??_TMR0_StartTimer 0084  
                            __size_of___aldiv 00D4                              __size_of___aodiv 0158  
                  ?_I2C2_MasterDisableRestart 0001                           __end_of_timeElapsed 70A8  
                            __size_of___fladd 0348                                      _adcGetCh 6896  
                            __size_of___aomod 0134                              __size_of___awdiv 0088  
                       i2___wmul@multiplicand 0003                              __size_of___lldiv 008A  
                __end_of_I2C2_MasterEnableIrq 771E                               ?_I2C2_MasterFsm 0001  
                             ?_I2C2_MasterIsr 0001                                    ?_vfpfcnvrt 00B3  
                __end_of_I2C2_MasterGetRxData 79EC                              __size_of___lwdiv 0058  
            __size_of_I2C2_MasterIsTxBufEmpty 000C            __end_of_I2C2_DO_SEND_RESTART_WRITE 7A10  
                  _I2C2_DO_SEND_RESTART_WRITE 7A0C                                   _intVentMode 0158  
                             ___aodiv@divisor 008C                               ___aodiv@counter 0094  
                    _I2C2_MasterIsNackFlagSet 7926                         __size_of_PrintStrBusy 0012  
                                timeDiff@endT 0090                              __size_of_command 0010  
                            __size_of_display 000C                                    sprintf@fmt 01A8  
                             ?_I2C2_SetBuffer 0084                                      ___xxtofl 4B2E  
                            __size_of_keyPeek 0060                              __size_of_keyRead 0026  
                                  _T0CON0bits 003FB8                      __size_of_ADCC_Initialize 006C  
                       InitProcedure@mPValMax 01D6                  I2C2_MasterSetCounter@counter 0084  
                       InitProcedure@mPValMin 01D8                                     send@value 0099  
                            __size_of_isdigit 0036                                      __pivt0x8 0008  
                             ___lwdiv@divisor 0086                           i2aCaptGetResult@sel 0075  
                                    _lcdBlink 0145                     MonitorMsgForcedSend@state 01C8  
                                _I2C2CON0bits 003D5D                                  _I2C2CON1bits 003D5E  
                            __size_of_isspace 0046                               ___lwdiv@counter 0088  
                                    __ptext10 76CE                                      __ptext11 78C6  
                                    __ptext20 32DE                                      __ptext12 76E2  
                                    __ptext21 5E52                                      __ptext13 560A  
                                    __ptext30 6C4E                                      __ptext22 71C8  
                                    __ptext14 53B0                                      __ptext31 768C  
                                    __ptext23 5D3E                                      __ptext15 5822  
                                    __ptext40 7334                                      __ptext32 743E  
                                    __ptext24 781E                                      __ptext16 741A  
                                    __ptext41 7A28                                      __ptext33 5772  
                                    __ptext25 782C                                      __ptext17 693E  
                                    __ptext50 6EE2                                      __ptext42 2AF6  
                                    __ptext34 765C                                      __ptext26 783A  
                                    __ptext18 6896                                      __ptext51 7078  
                                    __ptext43 7384                                      __ptext35 7A04  
                                    __ptext27 7848                                      __ptext19 7744  
                                    __ptext60 760A                                      __ptext52 6D88  
                                    __ptext44 6792                                      __ptext36 7486  
                                    __ptext28 71F6                                      __ptext61 49B4  
                                    __ptext53 77B0                                      __ptext45 17DE  
                                    __ptext37 7984                                      __ptext29 7856  
                                    __ptext70 6FB0                                      __ptext62 798C  
                                    __ptext54 7462                                      __ptext46 75EE  
                                    __ptext38 63D2                                      __ptext71 6566  
                                    __ptext63 6F7E                                      __ptext55 5FE8  
                                    __ptext47 66DE                                      __ptext39 7864  
                                    __ptext80 6738                                      __ptext72 7224  
                                    __ptext64 7756                                      __ptext56 7674  
                                    __ptext48 5DC8                                      __ptext81 4172  
                                    __ptext73 7252                                      __ptext65 6B46  
                                    __ptext57 78D2                                      __ptext49 6506  
                                    __ptext90 76F6                                      __ptext82 7308  
                                    __ptext74 6A2E                                      __ptext66 7768  
                                    __ptext58 78DE                                      __ptext91 77C0  
                                    __ptext83 60F0                                      __ptext75 51AC  
                                    __ptext67 5EDA                                      __ptext59 70A8  
                                    __ptext92 6B88                                      __ptext84 20CC  
                                    __ptext76 4B2E                                      __ptext68 777A  
                                    __ptext93 6CCE                                      __ptext85 395C  
                                    __ptext77 65C6                                      __ptext69 72DC  
                                    __ptext94 4F44                                      __ptext86 56BE  
                                    __ptext78 5484                                      __ptext95 4C94  
                                    __ptext87 6FE2                                      __ptext79 47E0  
                                    __ptext96 43FC                                      __ptext88 6C8E  
                                    __ptext97 6A78                                      __ptext89 58D0  
                                    __ptext98 6EAC                                      __ptext99 7280  
                            __size_of_timeGet 0012                         __size_of_I2C2_DO_IDLE 000C  
                        _lastI2C2LAckResponse 0143                    ??_I2C2_MasterClearNackFlag 0001  
                                 ??_backlight 0096                                ?_I2C2_DO_RESET 0001  
              __size_of_UART1_SetErrorHandler 000E                    __end_ofi2_I2C2_SetCallback 63D2  
                           ??_TMR1_StartTimer 0084                 __end_of_UART1_SetErrorHandler 7856  
                           ?_rPressurePredict 009E                              __size_of_sprintf 005A  
                __end_of_I2C2_DO_ADDRESS_NACK 693E                        __size_of_adcCaptureIsr 0336  
                          ??_rPressurePredict 00A4            __size_ofi2_rdBlkRegCompleteHandler 004C  
                     i2_rd2RegCompleteHandler 7108                                 __size_of_atoi 01F8  
                               __size_of_main 17C0                                 __size_of_dtoa 02D2  
                                ??_screenInit 00A5                                 __size_of_home 0014  
                               __size_of_send 0024                                   ?_I2C2_DO_RX 0001  
                                 ?_I2C2_DO_TX 0001                                      _monError 014A  
                                _timeElapsedR 6506                          __size_of_MonitorInit 0002  
                                    _monState 014B                       i2_wr2RegCompleteHandler 7168  
                        __CFG_WDTCWS$WDTCWS_7 000000                                   ?_I2C2_LOpen 0001  
                                 ?_I2C2_MOpen 0001                                   ?_I2C2_Close 0001  
                 ??i2_I2C2_CallbackReturnStop 000C                           I2C2_SetCallback@idx 0088  
                     __size_of_MonitorMsgSend 0028                           I2C2_SetCallback@ptr 0086  
                                    _timeDiff 6FB0                                      _timeInit 793E  
                   _UART1_OverrunErrorHandler 02E5  UART1_SetOverrunErrorHandler@interruptHandler 0084  
                __end_of_ADCC_StartConversion 7756                              ??_TMR1_ReadTimer 0086  
                __end_of_I2C2_MasterOperation 6B02                          _lastI2C2MAckResponse 00CC  
                                _PrintStrBusy 7756                             ??_MonitorErrorClr 0084  
                           ??_MonitorErrorSet 0084                                      _printstr 49B4  
                        _MonitorMsgForcedSend 47E0                              __displayfunction 00D5  
                                    _vfprintf 60F0                                      main@bdP1 02C1  
                                    main@bdP2 02B3            __end_of_INTERRUPT_InterruptManager 5CAC  
                  _INTERRUPT_InterruptManager 5C14                    ??_I2C2_MasterClearStopFlag 0001  
                                   printf@fmt 01A6                         __size_of_I2C2_MuxInit 001C  
                                    main@pTmp 02BF             __end_of_I2C2_MasterDisableRestart 79C8  
                            ??_aCaptureSetOff 00BA              __end_of_I2C2_ClearInterruptFlags 71C8  
                                 _UART1_Write 6B88                             _UART1_is_tx_ready 77C0  
                            ___aomod@dividend 0084                                  _I2C2_DO_IDLE 7902  
                                   printstr@c 0093                        __size_of_printstrblock 001C  
                                    keyPeek@n 0087                ??_UART1_SetFramingErrorHandler 0086  
             __end_ofi2_I2C2_MasterSetCounter 797A                                   ??_keyReadEC 0094  
                                   putch@byte 0085                            ?_UART1_is_tx_ready 0001  
                              _vfpfcnvrt$3691 019E               __end_ofi2_I2C2_MasterSendTxData 7970  
                     ?i2_ADCC_StartConversion 0001                                 ?_digitalReadC 0001  
                               ?_digitalReadD 0001                         i2___lmul@multiplicand 0005  
                          __end_of_screenInit 6840                                   _uart1TxHead 00DA  
                                 _uart1TxTail 00D9               __size_of_I2C2_MasterIsRxBufFull 000E  
                                    isdigit@c 0084                        ??_INTERRUPT_Initialize 0084  
                             digitalReadC@pin 0086                               digitalReadD@pin 0086  
                      ??_I2C2_DO_SEND_RESTART 0001                         __end_of_expanderWrite 70D8  
                         ??_UART1_is_tx_ready 0084                       _I2C2_DO_RX_NACK_RESTART 799C  
        __end_of_ADCC_DefaultInterruptHandler 7A2E         __size_of_ADCC_DefaultInterruptHandler 0002  
                _ADCC_DefaultInterruptHandler 7A2C                                      intlevel2 0000  
                                   sprintf@ap 01B4                        ?i2_I2C2_MasterClearIrq 0001  
                                    send@mode 0096            __end_ofi2_I2C2_CallbackReturnReset 7A18  
                  i2_I2C2_CallbackReturnReset 7A14                                  _resultTblVal 0240  
                       rPressurePredict@delay 009E                         rPressurePredict@pInst 00A0  
                                    isspace@c 0084                              ___lldiv@dividend 0090  
                     ?_PIN_MANAGER_Initialize 0001                                      isqrt@one 0009  
                                    isqrt@res 0007                                   ??_setCursor 009C  
                           __CFG_CLKOUTEN$OFF 000000                                   _timeDelayMs 6EE2  
                                 ??_screenMng 00BA                          __size_of_I2C2_LClose 0042  
                        __size_of_I2C2_MClose 0042                                   _timeElapsed 7078  
                                _I2C2_MuxInit 7626                            I2C2_SetCallback@cb 0084  
                                ??_write4bits 0093                         ?_MonitorMsgForcedSend 0001  
                   __size_ofi2_aCaptGetResult 0292                                      printf@ap 01BA  
                         main@valveDelayCheck 02A6                              ??_I2C2_DO_RX_ACK 0001  
                             MenuMng@keyPress 00BC  UART1_SetFramingErrorHandler@interruptHandler 0084  
                            ??_I2C2_DO_TX_ACK 0001                     __end_of_UART1_is_tx_ready 77D0  
                __end_of_I2C2_DO_RX_NACK_STOP 788E                               ___aomod@divisor 008C  
                               ??i2_vfpfcnvrt 0047                          timeElapsedR@duration 008E  
                                 ??_vfpfcnvrt 018C                               ___aomod@counter 0094  
                               _adcCaptureIsr 3626                    ??_I2C2_SetInterruptHandler 0086  
                              _FVR_Initialize 7984                __end_ofi2_ADCC_StartConversion 7810  
                                    sprintf@f 01B6                                      sprintf@s 01A6  
          __size_of_I2C2_MasterIsCountFlagSet 000E                                ??_digitalReadC 0084  
                              ??_digitalReadD 0084                     i2_I2C2_CallbackReturnStop 7A18  
                            ___lldiv@quotient 0098                           __size_of_I2C2_DO_RX 007C  
                         __size_of_I2C2_DO_TX 00DE                    ?_I2C2_MasterIsCountFlagSet 0001  
                             _TMR0_Initialize 768C                          timeElapsedR@prevTime 008C  
           i2I2C2_SetDataCompleteCallback@ptr 0008               I2C2_SetDataCompleteCallback@ptr 008B  
                         __size_of_I2C2_LOpen 0032                           __size_of_I2C2_MOpen 0034  
                   __size_of_UART1_Initialize 008A                         _I2C2_MasterGetCounter 7A10  
                                ___aldiv@sign 0099                           __size_of_I2C2_Close 0028  
                             ??_I2C2_DO_RESET 0001                      _UART1_TxInterruptHandler 02E9  
                                  _TMR2_Start 79F8                         _I2C2_MasterDisableIrq 75B2  
                        setCursor@row_offsets 009C                                 ___fladd@signs 009E  
                       I2C2_DO_TX@retFsmState 000F                     ??i2_rd2RegCompleteHandler 000C  
                              i2_isspace$4166 0007                            __end_of_write4bits 606E  
                                ___aodiv@sign 0095                ??_ADCC_SetADTIInterruptHandler 0086  
              __end_of_PIN_MANAGER_Initialize 5822                             ??_ADCC_Initialize 0086  
            i2I2C2_SetDataCompleteCallback@cb 0006                I2C2_SetDataCompleteCallback@cb 0089  
                          __size_of_I2C2_MAck 0006              __end_of_I2C2_MasterIsStopFlagSet 7926  
                    __size_of_I2C2_MasterOpen 0022                __size_of_rd1RegCompleteHandler 003A  
                   ??i2_wr2RegCompleteHandler 000C                      __size_of_I2C2_MasterStop 0006  
                    __size_of_I2C2_Initialize 0022                            i2___aodiv@dividend 0001  
               __end_of_rd1RegCompleteHandler 6E72                      __end_of_I2C2_MasterClose 7966  
                        _I2C2_MasterEnableIrq 770A                            __size_of_I2C2_Open 00A2  
                                ___fladd@aexp 009F                                  ___fladd@bexp 00A0  
               ?_ADCC_DefaultInterruptHandler 0001                          _I2C2_MasterGetRxData 79E6  
                                ?_noBacklight 0001                           _I2C2_MasterClearIrq 7994  
                               _printstrblock 760A                __size_of_wr1RegCompleteHandler 003A  
                    __end_of_I2C2_MasterWrite 7994                 __end_of_wr1RegCompleteHandler 6DFE  
                ?_UART1_SetTxInterruptHandler 0084                         _TMR2_InterruptHandler 02DF  
                 __size_ofi2_I2C2_DO_RX_EMPTY 007A                    i2I2C2_SetBuffer@bufferSize 0003  
                                 main@OSCheck 02B2                                  ___aomod@sign 0095  
                             _TMR1_Initialize 6C4E                        __size_of_InitProcedure 08EE  
                      _I2C2_MasterIsRxBufFull 78AA                                 __backlightval 00D1  
                 __end_ofi2_UART1_is_tx_ready 7800                    ??_I2C2_MasterEnableRestart 0084  
